%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SHBG)
} def

/sequence { (\
ACCGCCCACACGCAAGGCUGCCUGCCUCUACACAUUCUCCCAAGAGUUGUCUGAGCCGCCGAGUGGACAGUGGCUGAUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.016876950 ubox
2 17 0.004663885 ubox
2 66 0.006788282 ubox
2 70 0.017821589 ubox
2 73 0.877061629 ubox
3 12 0.031199153 ubox
3 16 0.004780661 ubox
3 53 0.012929771 ubox
3 65 0.006815360 ubox
3 72 0.880987864 ubox
3 76 0.286106434 ubox
4 11 0.031964488 ubox
4 13 0.135578702 ubox
4 18 0.020387494 ubox
4 21 0.003272531 ubox
4 52 0.004457473 ubox
4 56 0.004370599 ubox
4 64 0.006735919 ubox
4 71 0.880275728 ubox
4 74 0.329075108 ubox
4 75 0.257043907 ubox
5 12 0.135496954 ubox
5 17 0.020221765 ubox
5 20 0.003264035 ubox
5 55 0.004395538 ubox
5 63 0.006719448 ubox
5 66 0.005010652 ubox
5 70 0.879501040 ubox
5 73 0.292646001 ubox
6 16 0.019991872 ubox
6 17 0.006072690 ubox
6 65 0.004281647 ubox
6 66 0.763737903 ubox
6 72 0.248139041 ubox
6 73 0.325063776 ubox
7 16 0.007143448 ubox
7 24 0.004442786 ubox
7 53 0.014408856 ubox
7 65 0.764552280 ubox
7 72 0.359724807 ubox
7 76 0.022736681 ubox
8 23 0.004437605 ubox
8 50 0.005156765 ubox
8 52 0.013824197 ubox
8 64 0.763858431 ubox
8 71 0.390386432 ubox
8 75 0.020811645 ubox
9 20 0.003634096 ubox
9 24 0.026371540 ubox
9 49 0.005556458 ubox
9 53 0.017758546 ubox
9 63 0.761573308 ubox
9 65 0.280965423 ubox
9 70 0.385935636 ubox
9 72 0.017963833 ubox
9 76 0.012306313 ubox
10 19 0.003991001 ubox
10 23 0.029556681 ubox
10 48 0.004940828 ubox
10 50 0.011218085 ubox
10 52 0.017602839 ubox
10 64 0.281852395 ubox
10 71 0.028433541 ubox
10 75 0.010551551 ubox
11 20 0.004388336 ubox
11 24 0.005778616 ubox
11 49 0.011496129 ubox
11 53 0.005251946 ubox
11 58 0.024023479 ubox
11 61 0.707686400 ubox
11 63 0.282039171 ubox
11 65 0.471601887 ubox
11 70 0.028621104 ubox
11 72 0.021024482 ubox
11 76 0.007008009 ubox
12 18 0.018459279 ubox
12 21 0.085442818 ubox
12 25 0.201882598 ubox
12 47 0.003211706 ubox
12 48 0.008314944 ubox
12 50 0.020157358 ubox
12 52 0.003738213 ubox
12 56 0.037195132 ubox
12 57 0.018900789 ubox
12 59 0.288320246 ubox
12 60 0.661252280 ubox
12 64 0.474899831 ubox
12 71 0.023267196 ubox
12 74 0.013166663 ubox
13 17 0.018397620 ubox
13 20 0.085811127 ubox
13 24 0.202311998 ubox
13 46 0.003846831 ubox
13 49 0.020669139 ubox
13 53 0.016546800 ubox
13 55 0.041533802 ubox
13 58 0.365970299 ubox
13 63 0.475148950 ubox
13 65 0.040546700 ubox
13 70 0.023236309 ubox
13 72 0.003838676 ubox
13 73 0.013113356 ubox
13 76 0.010013745 ubox
14 19 0.077316319 ubox
14 23 0.147052927 ubox
14 48 0.019293134 ubox
14 52 0.015442909 ubox
14 64 0.038150459 ubox
14 71 0.003612435 ubox
14 75 0.005700859 ubox
15 23 0.159338866 ubox
15 27 0.358659343 ubox
15 29 0.005738787 ubox
15 47 0.006436796 ubox
15 52 0.009279232 ubox
16 22 0.212227331 ubox
16 23 0.006384221 ubox
16 26 0.395136511 ubox
16 28 0.003179103 ubox
16 51 0.009451278 ubox
16 57 0.669165203 ubox
16 60 0.575488108 ubox
16 75 0.022796997 ubox
17 21 0.208829983 ubox
17 22 0.007851390 ubox
17 25 0.398276203 ubox
17 50 0.009372884 ubox
17 56 0.669741259 ubox
17 59 0.576821921 ubox
17 64 0.022399073 ubox
17 71 0.015891315 ubox
17 74 0.024854539 ubox
18 24 0.398271395 ubox
18 49 0.009393925 ubox
18 55 0.666965423 ubox
18 58 0.574246231 ubox
18 63 0.022722967 ubox
18 66 0.005461894 ubox
18 70 0.016179230 ubox
18 73 0.024941432 ubox
19 32 0.003260761 ubox
19 53 0.026303164 ubox
19 54 0.651215497 ubox
19 58 0.042810747 ubox
19 61 0.004513964 ubox
19 62 0.022161860 ubox
19 65 0.005463874 ubox
19 69 0.016303739 ubox
19 72 0.024815945 ubox
20 29 0.007933384 ubox
20 31 0.013534981 ubox
20 33 0.008592456 ubox
20 47 0.015844520 ubox
20 50 0.140091972 ubox
20 52 0.052750280 ubox
20 56 0.446889061 ubox
20 57 0.201997424 ubox
20 59 0.045830255 ubox
20 60 0.006485373 ubox
20 64 0.005491192 ubox
20 68 0.016304646 ubox
20 71 0.024344339 ubox
20 74 0.016326998 ubox
21 46 0.015910528 ubox
21 49 0.140714551 ubox
21 55 0.397482644 ubox
21 58 0.046291356 ubox
21 63 0.005455755 ubox
21 66 0.012793642 ubox
21 70 0.018587891 ubox
21 73 0.016330488 ubox
22 44 0.015991401 ubox
22 46 0.006256583 ubox
22 55 0.085850805 ubox
22 65 0.012740632 ubox
22 66 0.009822187 ubox
22 70 0.017212618 ubox
22 72 0.016115097 ubox
23 30 0.014496918 ubox
23 32 0.035945160 ubox
23 34 0.020458181 ubox
23 42 0.004056792 ubox
23 43 0.015697621 ubox
23 45 0.006195393 ubox
23 49 0.140394625 ubox
23 53 0.053343965 ubox
23 54 0.108776486 ubox
23 58 0.043512214 ubox
23 61 0.007374794 ubox
23 62 0.003541699 ubox
23 65 0.009788405 ubox
23 69 0.023876228 ubox
24 29 0.014731806 ubox
24 31 0.049821879 ubox
24 33 0.024662996 ubox
24 41 0.004857776 ubox
24 47 0.173622159 ubox
24 48 0.164157505 ubox
24 50 0.321420880 ubox
24 52 0.040071659 ubox
24 56 0.291859370 ubox
24 57 0.203438773 ubox
24 59 0.054003834 ubox
24 60 0.006879848 ubox
24 64 0.010340855 ubox
24 68 0.023948390 ubox
24 71 0.009693948 ubox
24 74 0.009791761 ubox
25 46 0.126861407 ubox
25 49 0.324719743 ubox
25 55 0.211801077 ubox
25 58 0.054294996 ubox
25 63 0.010330925 ubox
25 66 0.013405076 ubox
25 70 0.010014823 ubox
25 73 0.009817439 ubox
26 44 0.033760470 ubox
26 46 0.547945582 ubox
26 55 0.429024549 ubox
26 65 0.013303061 ubox
26 72 0.009783571 ubox
27 43 0.032374807 ubox
27 45 0.564315779 ubox
27 54 0.619364003 ubox
27 62 0.003415555 ubox
27 67 0.015043152 ubox
27 77 0.005617629 ubox
28 44 0.564533452 ubox
28 46 0.066360377 ubox
28 53 0.637656031 ubox
28 55 0.112202876 ubox
28 61 0.003711653 ubox
28 63 0.012904439 ubox
28 66 0.020150918 ubox
28 70 0.008446015 ubox
28 73 0.004560373 ubox
28 76 0.008254883 ubox
29 43 0.547397146 ubox
29 45 0.062500108 ubox
29 49 0.012713338 ubox
29 53 0.187419586 ubox
29 54 0.110369352 ubox
29 62 0.012805056 ubox
29 65 0.020143064 ubox
29 69 0.008204340 ubox
29 72 0.004660516 ubox
30 47 0.017740974 ubox
30 48 0.015453068 ubox
30 50 0.618921548 ubox
30 52 0.250484236 ubox
30 64 0.020137023 ubox
30 71 0.004836535 ubox
31 46 0.017834690 ubox
31 49 0.632720705 ubox
31 53 0.089573968 ubox
31 63 0.020084063 ubox
31 65 0.004495233 ubox
31 70 0.004816448 ubox
31 72 0.004472141 ubox
31 76 0.003722310 ubox
32 47 0.034419609 ubox
32 48 0.622563381 ubox
32 50 0.446231947 ubox
32 52 0.075173722 ubox
32 64 0.004512402 ubox
32 71 0.004537876 ubox
33 46 0.045512791 ubox
33 49 0.468376106 ubox
33 53 0.015716560 ubox
33 63 0.004489908 ubox
33 65 0.012512181 ubox
33 70 0.004525167 ubox
34 47 0.682518708 ubox
34 48 0.399095665 ubox
34 50 0.052339822 ubox
34 52 0.014493499 ubox
34 64 0.012536108 ubox
35 43 0.010783843 ubox
35 44 0.018171554 ubox
35 45 0.021803501 ubox
35 46 0.731939091 ubox
35 49 0.052371276 ubox
35 55 0.012161705 ubox
35 63 0.012512548 ubox
36 42 0.015982718 ubox
36 43 0.016801456 ubox
36 44 0.015993147 ubox
36 45 0.742005657 ubox
36 54 0.016746396 ubox
36 62 0.012685862 ubox
36 77 0.006801118 ubox
37 44 0.742853970 ubox
37 46 0.335286985 ubox
37 53 0.017305028 ubox
37 55 0.061227176 ubox
37 61 0.012531148 ubox
37 76 0.007295586 ubox
38 43 0.687429056 ubox
38 45 0.336034395 ubox
38 54 0.062402323 ubox
38 67 0.003199608 ubox
39 44 0.334903523 ubox
39 53 0.062396215 ubox
39 66 0.003248978 ubox
40 65 0.003165644 ubox
40 66 0.003862633 ubox
40 73 0.007059778 ubox
41 49 0.026778673 ubox
41 53 0.030966347 ubox
41 65 0.003934493 ubox
41 72 0.007068700 ubox
42 48 0.026271495 ubox
42 52 0.022340513 ubox
42 64 0.003953530 ubox
42 71 0.006955100 ubox
43 47 0.020036004 ubox
43 52 0.074774173 ubox
44 51 0.079359118 ubox
45 50 0.077316129 ubox
45 52 0.014042587 ubox
45 75 0.011338442 ubox
46 51 0.014955929 ubox
46 56 0.030536446 ubox
46 59 0.011216120 ubox
46 74 0.011878925 ubox
47 54 0.005341516 ubox
47 55 0.030870177 ubox
47 58 0.011177717 ubox
47 70 0.010352912 ubox
47 73 0.011861069 ubox
48 53 0.006748965 ubox
48 54 0.031411119 ubox
48 58 0.003904745 ubox
48 69 0.070742297 ubox
48 72 0.011551629 ubox
49 56 0.025026560 ubox
49 57 0.008019324 ubox
49 59 0.006979076 ubox
49 60 0.003290636 ubox
49 68 0.076413538 ubox
49 71 0.010679427 ubox
49 74 0.005173087 ubox
49 78 0.030690703 ubox
50 55 0.024103378 ubox
50 58 0.006910869 ubox
50 62 0.009361213 ubox
50 67 0.076425540 ubox
50 73 0.005152566 ubox
50 77 0.035234839 ubox
51 61 0.012161177 ubox
51 63 0.003794423 ubox
51 66 0.074732103 ubox
51 70 0.059408756 ubox
51 72 0.005036626 ubox
51 76 0.038998643 ubox
52 58 0.010180776 ubox
52 61 0.021328892 ubox
52 62 0.005073671 ubox
52 65 0.070671806 ubox
52 69 0.080736674 ubox
52 76 0.011273148 ubox
53 57 0.021152243 ubox
53 60 0.029351658 ubox
53 64 0.029355491 ubox
53 68 0.083663708 ubox
53 75 0.006519200 ubox
54 75 0.155739146 ubox
55 64 0.057014477 ubox
55 74 0.161218274 ubox
56 63 0.059151154 ubox
56 66 0.271145094 ubox
56 73 0.161259948 ubox
57 65 0.272297321 ubox
57 72 0.161253139 ubox
58 64 0.271345734 ubox
58 71 0.160821336 ubox
58 74 0.009829161 ubox
59 63 0.269776992 ubox
59 66 0.049041753 ubox
59 70 0.157188286 ubox
59 73 0.009862630 ubox
60 65 0.055556235 ubox
60 72 0.009860452 ubox
61 71 0.007993674 ubox
67 78 0.005908309 ubox
68 76 0.040544121 ubox
69 75 0.040623442 ubox
69 79 0.006086807 ubox
70 74 0.039751222 ubox
70 78 0.007975656 ubox
71 77 0.008106436 ubox
2 73 0.9500000 lbox
3 72 0.9500000 lbox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
19 54 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
showpage
end
%%EOF
