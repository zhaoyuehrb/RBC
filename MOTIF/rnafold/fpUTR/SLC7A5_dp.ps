%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC7A5)
} def

/sequence { (\
GCGGGCGGCGGGCGGCGCGCACACUGCUCGCUGGGCCGCGGCUCCCGGGUGUCCCAGGCCCGGCCGGUGCGCAGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.005471630 ubox
1 16 0.011390719 ubox
1 18 0.082557853 ubox
1 20 0.849740064 ubox
1 27 0.003578057 ubox
1 31 0.040624102 ubox
1 39 0.059522598 ubox
1 68 0.006697784 ubox
1 70 0.035524036 ubox
1 72 0.504818881 ubox
1 77 0.021782808 ubox
2 8 0.005477429 ubox
2 15 0.011389200 ubox
2 17 0.082617744 ubox
2 19 0.850382942 ubox
2 26 0.003608250 ubox
2 30 0.044101368 ubox
2 38 0.059911303 ubox
2 47 0.010324039 ubox
2 66 0.006647333 ubox
2 67 0.006885066 ubox
2 69 0.035526436 ubox
2 71 0.505191111 ubox
2 76 0.022012851 ubox
3 16 0.082319005 ubox
3 18 0.850073887 ubox
3 25 0.003667115 ubox
3 29 0.044293855 ubox
3 37 0.060161297 ubox
3 44 0.037761921 ubox
3 45 0.007141175 ubox
3 46 0.010192804 ubox
3 65 0.006594158 ubox
3 68 0.023501885 ubox
3 70 0.504386348 ubox
4 24 0.003707878 ubox
4 28 0.044323462 ubox
4 36 0.060069116 ubox
4 37 0.009192545 ubox
4 43 0.041617893 ubox
4 44 0.008387694 ubox
4 45 0.009834513 ubox
4 64 0.006433984 ubox
4 65 0.004037574 ubox
5 13 0.078059777 ubox
5 16 0.849968985 ubox
5 18 0.023311497 ubox
5 20 0.071895084 ubox
5 27 0.044358898 ubox
5 36 0.009565417 ubox
5 39 0.006441358 ubox
5 42 0.043867286 ubox
5 44 0.007204154 ubox
5 64 0.003923293 ubox
5 68 0.488110932 ubox
5 70 0.007046323 ubox
5 72 0.012340428 ubox
6 12 0.078162321 ubox
6 14 0.190802517 ubox
6 15 0.828975457 ubox
6 17 0.024548264 ubox
6 19 0.071955667 ubox
6 26 0.044357940 ubox
6 33 0.193703470 ubox
6 35 0.009538007 ubox
6 38 0.006681768 ubox
6 41 0.044303397 ubox
6 63 0.003766808 ubox
6 66 0.038021025 ubox
6 67 0.469208414 ubox
6 69 0.007232246 ubox
6 71 0.012229482 ubox
7 13 0.267300037 ubox
7 16 0.021217600 ubox
7 18 0.067101798 ubox
7 25 0.044285754 ubox
7 32 0.486085946 ubox
7 37 0.009174432 ubox
7 65 0.043562239 ubox
7 68 0.004389178 ubox
7 70 0.010914033 ubox
8 16 0.063699997 ubox
8 18 0.027595320 ubox
8 20 0.005227541 ubox
8 24 0.044063239 ubox
8 31 0.507122569 ubox
8 36 0.009178640 ubox
8 39 0.048322263 ubox
8 64 0.043455299 ubox
8 72 0.004525440 ubox
9 15 0.065024738 ubox
9 17 0.037585792 ubox
9 19 0.005408056 ubox
9 30 0.507226929 ubox
9 35 0.009159260 ubox
9 38 0.048614198 ubox
9 62 0.030238189 ubox
9 63 0.031095180 ubox
9 66 0.004943294 ubox
9 71 0.004530161 ubox
10 16 0.037569416 ubox
10 18 0.005394901 ubox
10 29 0.507185681 ubox
10 37 0.048607454 ubox
10 61 0.042687981 ubox
10 65 0.003643857 ubox
10 70 0.004526891 ubox
11 28 0.506921956 ubox
11 32 0.004211372 ubox
11 36 0.048531763 ubox
11 37 0.003249114 ubox
11 60 0.042765588 ubox
11 61 0.004435534 ubox
11 64 0.003481255 ubox
12 20 0.044541827 ubox
12 27 0.507245995 ubox
12 31 0.004476399 ubox
12 36 0.003881196 ubox
12 39 0.004324479 ubox
12 59 0.042766956 ubox
12 68 0.004381410 ubox
13 19 0.044553454 ubox
13 26 0.507236154 ubox
13 30 0.004580521 ubox
13 33 0.054074782 ubox
13 35 0.004250108 ubox
13 38 0.004337231 ubox
13 58 0.042428478 ubox
13 67 0.004218774 ubox
14 18 0.041681886 ubox
14 25 0.506631681 ubox
14 29 0.005115006 ubox
14 32 0.063838495 ubox
14 37 0.004357480 ubox
14 55 0.003747821 ubox
15 24 0.506391709 ubox
15 27 0.004194570 ubox
15 28 0.004373225 ubox
15 31 0.067384150 ubox
15 36 0.004356145 ubox
15 54 0.003753112 ubox
16 26 0.004207136 ubox
16 30 0.068928336 ubox
16 35 0.004354187 ubox
17 25 0.003531525 ubox
17 27 0.004855585 ubox
17 29 0.068941316 ubox
18 26 0.004871503 ubox
18 33 0.004216186 ubox
19 25 0.003962682 ubox
19 27 0.069084052 ubox
19 31 0.003837600 ubox
19 52 0.004385275 ubox
19 72 0.006700201 ubox
19 77 0.067091735 ubox
20 26 0.069097515 ubox
20 30 0.003922287 ubox
20 51 0.004446986 ubox
20 71 0.006708615 ubox
20 76 0.067745886 ubox
21 25 0.056000868 ubox
21 50 0.004441970 ubox
22 49 0.004434089 ubox
22 69 0.007940262 ubox
23 68 0.008015105 ubox
24 48 0.004488242 ubox
24 67 0.008074699 ubox
24 74 0.851353436 ubox
24 76 0.016648847 ubox
25 47 0.004488155 ubox
25 66 0.008120234 ubox
25 73 0.856494063 ubox
25 75 0.012127804 ubox
26 46 0.004386583 ubox
26 65 0.008097959 ubox
26 72 0.857651387 ubox
26 77 0.010824802 ubox
27 71 0.857305428 ubox
27 74 0.006192999 ubox
27 76 0.010950326 ubox
28 67 0.003330255 ubox
28 73 0.006215210 ubox
28 75 0.010885967 ubox
29 66 0.003621568 ubox
29 69 0.856071538 ubox
29 71 0.009036119 ubox
29 74 0.010000704 ubox
30 42 0.004484346 ubox
30 64 0.009462111 ubox
30 68 0.857179195 ubox
30 70 0.015287291 ubox
30 72 0.007123629 ubox
31 41 0.004490629 ubox
31 57 0.015749160 ubox
31 63 0.010311343 ubox
31 67 0.857485237 ubox
31 69 0.015294079 ubox
31 71 0.007118826 ubox
31 74 0.017723571 ubox
32 40 0.004487460 ubox
32 56 0.024265494 ubox
32 62 0.010639643 ubox
32 66 0.820728850 ubox
32 73 0.032984948 ubox
33 39 0.004493853 ubox
33 44 0.021317424 ubox
33 45 0.008653908 ubox
33 46 0.007116132 ubox
33 54 0.008003930 ubox
33 55 0.034591658 ubox
33 61 0.011845944 ubox
33 65 0.671109518 ubox
33 72 0.034933695 ubox
34 43 0.022284559 ubox
34 44 0.008727106 ubox
34 45 0.007069499 ubox
34 53 0.008071253 ubox
34 54 0.034598689 ubox
34 60 0.011985478 ubox
34 64 0.474732230 ubox
34 65 0.734272118 ubox
35 42 0.024584312 ubox
35 44 0.006694306 ubox
35 50 0.010732990 ubox
35 52 0.006249950 ubox
35 53 0.033438178 ubox
35 59 0.012022424 ubox
35 64 0.874655826 ubox
35 70 0.035111540 ubox
35 72 0.003729034 ubox
36 41 0.024677857 ubox
36 49 0.027406742 ubox
36 51 0.008100233 ubox
36 58 0.012023913 ubox
36 63 0.995024522 ubox
36 69 0.034970776 ubox
36 71 0.003535600 ubox
37 48 0.027511852 ubox
37 51 0.019390841 ubox
37 57 0.012018632 ubox
37 62 0.995173938 ubox
37 69 0.004551112 ubox
38 50 0.019190823 ubox
38 52 0.007646227 ubox
38 61 0.994636966 ubox
38 68 0.005436461 ubox
38 70 0.003266207 ubox
38 72 0.008191415 ubox
39 47 0.029490470 ubox
39 49 0.018520568 ubox
39 51 0.007933247 ubox
39 62 0.003294958 ubox
39 66 0.037273597 ubox
39 67 0.003922347 ubox
39 69 0.003287906 ubox
39 71 0.008294277 ubox
40 46 0.030792231 ubox
40 50 0.007799185 ubox
40 53 0.009702127 ubox
40 54 0.005663469 ubox
40 60 0.995049442 ubox
40 61 0.005892090 ubox
40 65 0.048732239 ubox
40 70 0.010263739 ubox
41 45 0.030307405 ubox
41 52 0.009822588 ubox
41 53 0.005645077 ubox
41 59 0.995091491 ubox
41 60 0.006204479 ubox
41 64 0.048747810 ubox
41 68 0.021558583 ubox
41 70 0.026881795 ubox
41 72 0.003978167 ubox
41 77 0.040681447 ubox
42 48 0.008044451 ubox
42 51 0.011296800 ubox
42 57 0.026012314 ubox
42 58 0.985739746 ubox
42 63 0.039642515 ubox
42 67 0.022426883 ubox
42 69 0.026944518 ubox
42 71 0.003969516 ubox
42 76 0.041152284 ubox
43 47 0.007256144 ubox
43 56 0.036238921 ubox
43 57 0.938944943 ubox
43 58 0.024781835 ubox
43 62 0.024431771 ubox
43 66 0.021580453 ubox
43 67 0.015360096 ubox
43 75 0.041140800 ubox
44 57 0.217257046 ubox
44 58 0.124369211 ubox
44 62 0.004281197 ubox
44 66 0.016507753 ubox
44 67 0.018850537 ubox
44 74 0.040977124 ubox
45 57 0.182743335 ubox
45 58 0.046245244 ubox
45 63 0.068768760 ubox
45 66 0.013392078 ubox
45 67 0.006790648 ubox
46 57 0.066990265 ubox
46 62 0.077789558 ubox
46 66 0.006832791 ubox
47 53 0.019889357 ubox
47 54 0.168942633 ubox
47 55 0.978650112 ubox
47 61 0.079664070 ubox
47 65 0.006802340 ubox
48 52 0.013004487 ubox
48 53 0.168884217 ubox
48 54 0.979162524 ubox
48 55 0.053896892 ubox
48 60 0.079672446 ubox
48 64 0.006750103 ubox
49 53 0.963346083 ubox
49 54 0.053882837 ubox
49 59 0.079659534 ubox
49 72 0.028200900 ubox
50 56 0.004484230 ubox
50 58 0.079227539 ubox
50 62 0.006080632 ubox
50 71 0.028244697 ubox
51 55 0.005833092 ubox
51 59 0.004459523 ubox
51 61 0.005266135 ubox
51 70 0.028275837 ubox
52 58 0.004920939 ubox
52 69 0.027934719 ubox
53 57 0.006130731 ubox
53 67 0.004140905 ubox
54 66 0.004081407 ubox
54 67 0.027976397 ubox
55 66 0.027900356 ubox
57 65 0.028430586 ubox
58 64 0.028447696 ubox
59 63 0.028240778 ubox
63 70 0.008835025 ubox
63 72 0.007940845 ubox
64 69 0.009340186 ubox
64 71 0.008345621 ubox
65 71 0.006335111 ubox
66 70 0.006802050 ubox
67 77 0.004579971 ubox
68 76 0.004590426 ubox
69 77 0.040324467 ubox
70 76 0.040791685 ubox
71 77 0.015126352 ubox
72 76 0.015139237 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
34 65 0.9500000 lbox
35 64 0.9500000 lbox
36 63 0.9500000 lbox
37 62 0.9500000 lbox
38 61 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
showpage
end
%%EOF
