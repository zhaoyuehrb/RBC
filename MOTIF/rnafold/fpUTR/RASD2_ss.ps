%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUGCGCCUCCUUGCCCGGCCGCGCCCAGCCCGGCGUCCCGAGCAGCGCAGGGGAGGAUCCCCGCGCAGUGACCCGGGAGCCACCACAGACUCUGGGAGGCUCGGCGGCUGGAGCAGCAGGCAGCUCCCCGCAGCUCCCGGCGCUUCCAGGCAGCUCUCUGAGCCGUGCCAGAGGCCCGGCCCGCCAUUCCCAGCCCCGAGCC\
) } def
/len { sequence length } bind def

/coor [
[87.28376770 120.56236267]
[75.82584381 130.24307251]
[64.36791992 139.92376709]
[52.90999222 149.60446167]
[41.45206833 159.28517151]
[29.99414444 168.96586609]
[18.53621864 178.64657593]
[7.07829428 188.32727051]
[-4.37963057 198.00796509]
[10.11506653 201.86851501]
[16.27735329 215.54426575]
[9.56719971 228.95970154]
[-5.07172585 232.23106384]
[-16.85427856 222.94821167]
[-17.09920311 207.94906616]
[-29.26129341 216.72879028]
[-41.42338562 225.50851440]
[-48.08388901 239.85940552]
[-62.93199539 241.03541565]
[-75.09408569 249.81513977]
[-87.25617981 258.59487915]
[-90.08050537 271.18264771]
[-100.39439392 278.24456787]
[-112.35864258 276.44372559]
[-124.65320587 285.03695679]
[-136.94776917 293.63018799]
[-149.24234009 302.22341919]
[-161.53691101 310.81665039]
[-164.04734802 326.42028809]
[-176.90467834 335.61071777]
[-192.48089600 332.93545532]
[-201.53489685 319.98165894]
[-198.69509888 304.43460083]
[-185.64630127 295.51806641]
[-170.13014221 298.52209473]
[-157.83557129 289.92886353]
[-145.54100037 281.33563232]
[-133.24644470 272.74240112]
[-120.95187378 264.14916992]
[-114.39173126 247.87425232]
[-96.03590393 246.43276978]
[-83.87380981 237.65304565]
[-71.71172333 228.87332153]
[-65.92112732 215.15042114]
[-50.20310974 213.34642029]
[-38.04101944 204.56669617]
[-25.87892723 195.78697205]
[-14.06033134 186.55004883]
[-2.60240626 176.86933899]
[8.85551834 167.18864441]
[20.31344414 157.50794983]
[31.77136803 147.82723999]
[43.22929382 138.14654541]
[54.68721771 128.46583557]
[66.14514160 118.78514099]
[77.60306549 109.10443878]
[75.85771942 101.28985596]
[76.76048279 93.33379364]
[64.33630371 84.92904663]
[48.57057571 83.60523224]
[42.36418152 70.06529236]
[29.94000053 61.66054916]
[17.51581955 53.25580597]
[5.09163809 44.85106277]
[-7.58307743 36.82911682]
[-20.49653625 29.19743347]
[-33.40999603 21.56575012]
[-50.12210846 18.71241188]
[-52.00665665 1.86353028]
[-36.33792877 -4.61160088]
[-25.77831268 8.65229225]
[-12.86485291 16.28397560]
[0.04860552 23.91565704]
[2.79721427 23.34618950]
[5.93741369 23.83335114]
[9.06708241 25.53191376]
[11.73550034 28.44806862]
[13.49638176 32.42687988]
[25.92056274 40.83162308]
[38.34474564 49.23636627]
[50.76892471 57.64110947]
[65.64598846 58.36376572]
[72.74104309 72.50486755]
[85.16522980 80.90960693]
[85.40432739 80.72618866]
[85.64569092 80.54576111]
[80.92350006 66.30845642]
[75.24942017 59.14490891]
[76.23965454 51.81789017]
[71.73512268 37.51022720]
[67.23059845 23.20256233]
[56.70681381 9.91022301]
[66.56640625 -3.88197470]
[82.54901123 1.77424383]
[81.53826141 18.69803619]
[86.04278564 33.00569916]
[90.54731750 47.31336212]
[95.16080475 61.58626175]
[99.88300323 75.82357025]
[113.69890594 80.07881927]
[122.61692047 91.45666504]
[137.60122681 90.77063751]
[152.58552551 90.08460236]
[167.56982422 89.39857483]
[182.55413818 88.71253967]
[197.53843689 88.02651215]
[212.52273560 87.34048462]
[220.95616150 83.82068634]
[227.74043274 86.76000977]
[242.73344421 86.30256653]
[257.72647095 85.84512329]
[272.71948242 85.38768005]
[287.71252441 84.93023682]
[302.70553589 84.47279358]
[317.69464111 83.90103912]
[332.67895508 83.21501160]
[343.30215454 71.82267761]
[358.50814819 71.34040833]
[369.30352783 81.53821564]
[384.28781128 80.85218811]
[397.71969604 72.49182892]
[410.78750610 79.63894653]
[425.77182007 78.95291138]
[440.75613403 78.26688385]
[454.72122192 72.79183960]
[466.17913818 63.11113739]
[477.63705444 53.43043518]
[489.09500122 43.74973679]
[490.16912842 27.98199272]
[502.13290405 17.65515518]
[517.88842773 18.89595222]
[528.08819580 30.96824265]
[526.68090820 46.70975113]
[514.50146484 56.78131485]
[498.77569580 55.20766068]
[487.31774902 64.88835907]
[475.85983276 74.56906128]
[464.40191650 84.24976349]
[466.26931763 91.51356506]
[470.00408936 106.04117584]
[471.87145996 113.30497742]
[486.57763672 116.25937653]
[501.28381348 119.21376801]
[510.31777954 117.83570099]
[516.19097900 122.32698059]
[530.85040283 125.50529480]
[545.50976562 128.68360901]
[560.16918945 131.86193848]
[574.82861328 135.04025269]
[586.07940674 128.72769165]
[598.22576904 131.67941284]
[604.88287354 141.78236389]
[619.49212646 145.18386841]
[634.10137939 148.58537292]
[648.71057129 151.98687744]
[663.36999512 155.16519165]
[678.07617188 158.11958313]
[692.78234863 161.07397461]
[707.48852539 164.02836609]
[724.20825195 161.22013855]
[731.53521729 176.50907898]
[718.87213135 187.78211975]
[704.53411865 178.73454285]
[689.82794189 175.78015137]
[675.12176514 172.82575989]
[660.41558838 169.87136841]
[656.01092529 171.72668457]
[650.39373779 170.83192444]
[645.30908203 166.59609985]
[630.69982910 163.19461060]
[616.09063721 159.79310608]
[601.48138428 156.39160156]
[584.99108887 162.38973999]
[571.65026855 149.69966125]
[556.99084473 146.52134705]
[542.33148193 143.34303284]
[527.67205811 140.16470337]
[513.01263428 136.98638916]
[498.32943726 133.91993713]
[483.62326050 130.96554565]
[468.91708374 128.01115417]
[441.44213867 93.25118256]
[426.45785522 93.93721771]
[411.47354126 94.62324524]
[399.11346436 102.93453979]
[384.97384644 95.83649445]
[369.98956299 96.52252197]
[360.17117310 107.66410065]
[344.98471069 108.57328796]
[333.36499023 98.19931793]
[318.38067627 98.88534546]
[311.84002686 102.33293915]
[303.16299438 99.46582031]
[288.16995239 99.92326355]
[273.17694092 100.38070679]
[258.18392944 100.83815002]
[243.19088745 101.29559326]
[228.19787598 101.75302887]
[213.20877075 102.32478333]
[198.22447205 103.01081848]
[183.24015808 103.69684601]
[168.25585938 104.38288116]
[153.27156067 105.06890869]
[138.28724670 105.75493622]
[123.30294800 106.44097137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[6 51]
[7 50]
[8 49]
[9 48]
[15 47]
[16 46]
[17 45]
[19 43]
[20 42]
[21 41]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[58 84]
[59 83]
[61 81]
[62 80]
[63 79]
[64 78]
[65 73]
[66 72]
[67 71]
[86 99]
[87 98]
[89 97]
[90 96]
[91 95]
[101 205]
[102 204]
[103 203]
[104 202]
[105 201]
[106 200]
[107 199]
[109 198]
[110 197]
[111 196]
[112 195]
[113 194]
[114 193]
[115 191]
[116 190]
[119 187]
[120 186]
[122 184]
[123 183]
[124 182]
[125 138]
[126 137]
[127 136]
[128 135]
[141 181]
[142 180]
[143 179]
[145 178]
[146 177]
[147 176]
[148 175]
[149 174]
[152 172]
[153 171]
[154 170]
[155 169]
[156 166]
[157 165]
[158 164]
[159 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
