%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCGCUGCGCUGAAGCAGUGCGCAUGCGCACUGGACGCUUCUUACCAGCGUCCUGACUACAAUACCCAGGACGCACCCAGCCCGCCGCCUCUCGGAGCCCUUUUCAAACCGACCAAUCGGCAACCCGCGUCUCCCGGCGCCGCGUUUAAAUCCGUGCCGGAGGCGCGUCCUGCAUCGUCUGCCGCUUUGGUGACUUCUGACAGCUCUCUCC\
) } def
/len { sequence length } bind def

/coor [
[86.68618774 334.24447632]
[82.65978241 319.52203369]
[85.42839050 304.51211548]
[94.44231415 292.19497681]
[107.91181946 285.01617432]
[107.24832153 270.03085327]
[106.58482361 255.04554749]
[105.92131805 240.06022644]
[94.14940643 233.76406860]
[86.96784210 222.38221741]
[86.34272766 208.83026123]
[92.54412842 196.64266968]
[104.04774475 189.05096436]
[103.60533142 174.05749512]
[103.16291809 159.06402588]
[102.72050476 144.07054138]
[88.68923950 138.76739502]
[78.44039917 149.72007751]
[68.19155884 160.67276001]
[57.94272232 171.62544250]
[47.69388580 182.57814026]
[37.44504929 193.53082275]
[27.19621086 204.48350525]
[24.00874710 220.56990051]
[8.39873695 225.59579468]
[-3.57557750 214.39099121]
[0.40395147 198.48200989]
[16.24352455 194.23466492]
[26.49236298 183.28198242]
[36.74119949 172.32929993]
[46.99003601 161.37660217]
[57.23887634 150.42391968]
[67.48770905 139.47123718]
[77.73654938 128.51855469]
[75.66217804 121.31112671]
[61.41698456 126.00946045]
[47.17178345 130.70779419]
[32.92658615 135.40612793]
[18.68138885 140.10444641]
[7.08931637 149.62411499]
[-7.23410845 145.16995239]
[-11.38330650 130.75523376]
[-1.61979890 119.36779022]
[13.26019669 121.26843262]
[27.82350922 117.67539215]
[42.38682175 114.08235168]
[56.95013428 110.48931122]
[71.51344299 106.89627075]
[69.43907928 99.68884277]
[54.93597412 95.86000824]
[40.43286896 92.03117371]
[25.92976570 88.20233917]
[11.42666054 84.37350464]
[-3.07644320 80.54467010]
[-17.57954788 76.71583557]
[-32.08265305 72.88700867]
[-42.37203979 84.21780396]
[-56.75250244 89.45812225]
[-71.91950989 87.40376282]
[-84.38780212 78.52680969]
[-91.29225159 64.86711884]
[-91.04627228 49.56359100]
[-83.70637512 36.13285828]
[-70.95922852 27.66120720]
[-55.73403168 26.09536362]
[-41.52941513 31.79514503]
[-31.60950470 43.45078659]
[-28.25381660 58.38389969]
[-13.75071335 62.21273422]
[0.75239110 66.04157257]
[15.25549507 69.87040710]
[29.75859833 73.69924164]
[44.26170349 77.52807617]
[58.76480865 81.35690308]
[73.26791382 85.18573761]
[77.93171692 79.31216431]
[63.87718582 74.07096863]
[64.51895905 59.08470535]
[78.97010803 55.06423569]
[87.25933838 67.56501007]
[91.92314148 61.69143677]
[84.90712738 48.43339920]
[77.79353333 35.22746277]
[70.58274078 22.07434654]
[63.37195206 8.92122841]
[47.96308517 7.09191704]
[36.59517670 -3.46982193]
[33.63942719 -18.70278549]
[40.23237610 -32.74958801]
[53.83890533 -40.20894623]
[69.22702026 -38.21258545]
[80.47968292 -27.52814674]
[83.27001190 -12.26401615]
[76.52507019 1.71043837]
[83.73586273 14.86355591]
[90.94664764 28.01667404]
[96.91759491 32.37012863]
[98.16516876 41.41738510]
[105.18118286 54.67542267]
[105.38028717 39.67674637]
[99.64578247 25.81617355]
[100.30178070 10.83052444]
[107.22553253 -2.47592998]
[119.12138367 -11.61314774]
[133.76325989 -14.87127590]
[148.41122437 -11.64062023]
[160.32418823 -2.52573514]
[167.27288818 10.76770687]
[167.95700073 25.75209808]
[162.24850464 39.62340546]
[151.21563721 49.78587723]
[136.92233276 54.33787155]
[125.58477783 64.15926361]
[140.24304199 60.97569656]
[154.90132141 57.79212952]
[169.55958557 54.60856628]
[184.21786499 51.42499924]
[197.55754089 38.73010635]
[214.05006409 44.72897720]
[228.65979004 41.32956696]
[243.26951599 37.93015671]
[257.87924194 34.53074265]
[272.48895264 31.13133430]
[287.07321167 27.62427521]
[301.63122559 24.00975990]
[310.74191284 15.93076706]
[321.42190552 17.83657646]
[335.45315552 12.53341866]
[349.48443604 7.23026133]
[363.51568604 1.92710400]
[377.54696655 -3.37605333]
[391.57824707 -8.67921066]
[405.60949707 -13.98236847]
[419.64077759 -19.28552628]
[433.67205811 -24.58868217]
[440.59179688 -30.54907799]
[447.94955444 -29.86491013]
[462.05752563 -34.96054840]
[476.16546631 -40.05618668]
[490.27343750 -45.15182114]
[504.38140869 -50.24745941]
[505.43896484 -65.43961334]
[512.59002686 -78.88513184]
[524.59564209 -88.25450897]
[539.37573242 -91.92444611]
[554.36962891 -89.25908661]
[566.97943115 -80.72023773]
[575.02050781 -67.78730011]
[577.09967041 -52.70098114]
[572.85668945 -38.07508087]
[563.02667236 -26.44362450]
[549.31274414 -19.82182884]
[534.09094238 -19.35696220]
[519.99847412 -25.12956619]
[509.47702026 -36.13949966]
[495.36907959 -31.04386330]
[481.26110840 -25.94822693]
[467.15316772 -20.85259056]
[453.04519653 -15.75695229]
[438.97521973 -10.55741405]
[424.94393921 -5.25425625]
[410.91265869 0.04890116]
[396.88140869 5.35205841]
[382.85012817 10.65521622]
[368.81884766 15.95837307]
[354.78759766 21.26152992]
[340.75631714 26.56468773]
[326.72503662 31.86784554]
[340.62167358 37.51438904]
[349.57559204 49.54882050]
[350.99069214 64.48191833]
[344.45672607 77.98403168]
[331.86807251 86.14040375]
[316.87469482 86.58618927]
[303.82373047 79.19215393]
[296.49908447 66.10208893]
[297.02447510 51.11129379]
[305.24572754 38.56775665]
[290.68774414 42.18227386]
[284.95437622 46.84417725]
[275.88836670 45.74105835]
[261.27865601 49.14046860]
[246.66893005 52.53987885]
[232.05920410 55.93928909]
[217.44947815 59.33869934]
[210.79364014 69.43836212]
[198.65103149 72.39069366]
[187.40142822 66.08326721]
[172.74316406 69.26683807]
[158.08488464 72.45040131]
[143.42662048 75.63396454]
[128.76834106 78.81753540]
[139.49716187 98.89041138]
[136.25405884 123.67548370]
[117.71398163 143.62812805]
[118.15639496 158.62161255]
[118.59880829 173.61508179]
[119.04122162 188.60855103]
[133.14137268 197.95236206]
[138.83671570 213.70317078]
[134.06881714 229.58563232]
[120.90663910 239.39672852]
[121.57013702 254.38203430]
[122.23364258 269.36737061]
[122.89714050 284.35269165]
[136.94841003 290.31292725]
[147.01564026 301.78524780]
[151.09999084 316.49172974]
[148.39051819 331.51242065]
[139.42517090 343.86495972]
[125.98403168 351.09674072]
[110.73585510 351.77188110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 202]
[13 198]
[14 197]
[15 196]
[16 195]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[49 75]
[50 74]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[81 99]
[82 98]
[83 96]
[84 95]
[85 94]
[113 192]
[114 191]
[115 190]
[116 189]
[117 188]
[119 185]
[120 184]
[121 183]
[122 182]
[123 181]
[124 179]
[125 178]
[127 168]
[128 167]
[129 166]
[130 165]
[131 164]
[132 163]
[133 162]
[134 161]
[135 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
