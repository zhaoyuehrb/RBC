%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TIGAR)
} def

/sequence { (\
GGAAGUGGUGUGGGGGAGGUAGCCCGCAGUGCAGGGGCAGCGCGGCGCGGGGCCACCGACGGGACGCGGCUCCGGGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 73 0.290119635 ubox
2 72 0.290295446 ubox
3 71 0.205154287 ubox
4 71 0.204880947 ubox
5 32 0.952791030 ubox
5 46 0.003764520 ubox
5 67 0.010874255 ubox
5 70 0.290016751 ubox
5 79 0.004060061 ubox
6 31 0.951655772 ubox
6 33 0.022184617 ubox
6 45 0.003757380 ubox
6 66 0.010874628 ubox
6 68 0.004566823 ubox
6 69 0.289566979 ubox
6 78 0.003937899 ubox
7 30 0.909650900 ubox
7 32 0.024305490 ubox
7 65 0.010796272 ubox
7 67 0.004681829 ubox
8 30 0.007816194 ubox
8 32 0.015145693 ubox
8 43 0.003698677 ubox
8 65 0.004500933 ubox
8 67 0.290059689 ubox
9 28 0.955844283 ubox
9 31 0.014638174 ubox
9 42 0.003617945 ubox
9 61 0.010013544 ubox
9 64 0.004356004 ubox
9 66 0.289841723 ubox
10 27 0.956651324 ubox
10 30 0.009285030 ubox
10 41 0.003364517 ubox
10 60 0.020884012 ubox
10 65 0.289253236 ubox
11 26 0.956218203 ubox
11 28 0.022995910 ubox
11 58 0.007348974 ubox
11 59 0.022726601 ubox
11 61 0.060203822 ubox
11 64 0.280720835 ubox
12 25 0.956121581 ubox
12 27 0.027982954 ubox
12 57 0.015798902 ubox
12 60 0.129590221 ubox
13 24 0.955697200 ubox
13 25 0.032579110 ubox
13 56 0.015744141 ubox
13 57 0.023854909 ubox
14 23 0.955106957 ubox
14 24 0.043765847 ubox
14 25 0.030725922 ubox
14 54 0.010014641 ubox
14 56 0.023785719 ubox
14 57 0.078962867 ubox
15 23 0.052565875 ubox
15 24 0.030978958 ubox
15 53 0.010003767 ubox
15 54 0.024044598 ubox
15 56 0.078942150 ubox
15 57 0.162776036 ubox
16 23 0.031138985 ubox
16 53 0.024158718 ubox
16 56 0.162516754 ubox
18 54 0.181569937 ubox
18 57 0.223403246 ubox
19 48 0.006455713 ubox
19 53 0.181748891 ubox
19 56 0.223472238 ubox
20 47 0.006075050 ubox
20 52 0.176015629 ubox
20 55 0.218929371 ubox
22 46 0.009205174 ubox
22 48 0.124922937 ubox
22 53 0.218886205 ubox
23 45 0.008524287 ubox
23 47 0.125105404 ubox
23 50 0.067520385 ubox
23 51 0.156287022 ubox
23 52 0.197103679 ubox
24 44 0.007762586 ubox
24 45 0.125371582 ubox
24 49 0.067597510 ubox
24 50 0.183405983 ubox
24 51 0.172334944 ubox
25 42 0.006939315 ubox
25 44 0.125543426 ubox
25 47 0.081488851 ubox
25 49 0.206675692 ubox
25 50 0.136123807 ubox
26 32 0.003634014 ubox
26 41 0.007519025 ubox
26 43 0.126633168 ubox
26 46 0.124598118 ubox
26 48 0.227212803 ubox
27 31 0.003613098 ubox
27 40 0.007522225 ubox
27 42 0.126584582 ubox
27 45 0.124344118 ubox
27 47 0.226732642 ubox
29 38 0.004716214 ubox
29 41 0.022802555 ubox
29 43 0.254810732 ubox
29 46 0.024519771 ubox
29 48 0.011598488 ubox
29 79 0.026453685 ubox
30 37 0.004685532 ubox
30 39 0.126583706 ubox
30 40 0.013463763 ubox
30 42 0.254967102 ubox
30 44 0.046463729 ubox
30 45 0.018214140 ubox
30 47 0.011637290 ubox
30 61 0.009629515 ubox
30 78 0.026627859 ubox
31 38 0.127760032 ubox
31 41 0.255174901 ubox
31 43 0.049836495 ubox
31 46 0.011987630 ubox
31 60 0.012641648 ubox
32 37 0.127560067 ubox
32 40 0.255038773 ubox
32 42 0.049821907 ubox
32 45 0.011949078 ubox
34 57 0.018110257 ubox
34 72 0.004402483 ubox
34 73 0.954192143 ubox
35 56 0.018109911 ubox
35 71 0.003892818 ubox
35 72 0.955343229 ubox
35 73 0.041883312 ubox
36 54 0.019610098 ubox
36 70 0.003938862 ubox
36 71 0.954804457 ubox
36 72 0.041778794 ubox
36 73 0.025193228 ubox
37 43 0.007569886 ubox
37 46 0.009756708 ubox
37 53 0.019633546 ubox
37 70 0.956285864 ubox
37 71 0.008398700 ubox
37 72 0.025232455 ubox
38 42 0.007552939 ubox
38 45 0.009755399 ubox
38 52 0.019628082 ubox
38 69 0.952612911 ubox
39 71 0.025256715 ubox
40 46 0.007176614 ubox
40 48 0.006251392 ubox
40 67 0.884389330 ubox
40 70 0.025779301 ubox
41 45 0.007137657 ubox
41 47 0.006338307 ubox
41 49 0.019784381 ubox
41 66 0.887723916 ubox
41 68 0.348157778 ubox
41 69 0.018303282 ubox
42 46 0.005959546 ubox
42 48 0.019921028 ubox
42 65 0.882130013 ubox
42 67 0.356414438 ubox
43 47 0.019781327 ubox
43 58 0.005188599 ubox
43 61 0.031781261 ubox
43 66 0.356439188 ubox
44 54 0.087947419 ubox
44 57 0.004929297 ubox
44 60 0.031568062 ubox
44 65 0.352114393 ubox
45 53 0.088278086 ubox
45 56 0.004855985 ubox
46 52 0.088270761 ubox
46 61 0.944469517 ubox
46 68 0.004661682 ubox
47 53 0.004756838 ubox
47 60 0.946448629 ubox
47 67 0.004787188 ubox
48 52 0.004731541 ubox
48 58 0.911662023 ubox
48 61 0.058138383 ubox
48 66 0.004788790 ubox
48 74 0.012964704 ubox
49 57 0.910979656 ubox
49 60 0.057133073 ubox
49 65 0.004781151 ubox
49 73 0.013868057 ubox
50 56 0.909619513 ubox
50 57 0.277004074 ubox
50 72 0.013870514 ubox
51 56 0.280545319 ubox
51 57 0.030171225 ubox
51 71 0.013862353 ubox
52 56 0.029810132 ubox
52 70 0.013873262 ubox
53 62 0.005243378 ubox
53 69 0.013862201 ubox
54 61 0.005257736 ubox
54 68 0.013822942 ubox
56 62 0.021790017 ubox
56 63 0.086502717 ubox
56 69 0.006241433 ubox
57 61 0.021685359 ubox
57 62 0.086860538 ubox
57 66 0.007490753 ubox
57 68 0.006377285 ubox
58 65 0.007493995 ubox
58 67 0.006546119 ubox
60 66 0.005976602 ubox
60 68 0.005042010 ubox
60 74 0.009266321 ubox
61 65 0.005653751 ubox
61 67 0.005093770 ubox
61 73 0.009296386 ubox
62 72 0.009238181 ubox
62 73 0.003174317 ubox
63 70 0.004789496 ubox
63 71 0.007248058 ubox
63 72 0.003315001 ubox
64 71 0.003223516 ubox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
38 69 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
42 65 0.9500000 lbox
46 61 0.9500000 lbox
47 60 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
showpage
end
%%EOF
