%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC182)
} def

/sequence { (\
AUUUAUUGACCUGGUUGGUCUCUUGGCUUCCUCUCUUUGUCCAACGUAGAAGAGACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.004746976 ubox
2 9 0.030073740 ubox
2 14 0.005191491 ubox
2 26 0.120882789 ubox
2 50 0.007722041 ubox
2 55 0.004923858 ubox
3 8 0.032569967 ubox
3 9 0.013321183 ubox
3 13 0.005322069 ubox
3 14 0.007146567 ubox
3 25 0.155152736 ubox
3 26 0.148062313 ubox
3 49 0.008341075 ubox
3 54 0.003451358 ubox
3 55 0.004713792 ubox
4 8 0.013161793 ubox
4 13 0.009989766 ubox
4 17 0.004215026 ubox
4 25 0.190514834 ubox
4 48 0.008554747 ubox
5 12 0.012681409 ubox
5 15 0.008380632 ubox
5 16 0.004447002 ubox
5 19 0.008407944 ubox
5 24 0.182750786 ubox
5 47 0.008523581 ubox
6 14 0.008865329 ubox
6 18 0.008988507 ubox
6 26 0.018469795 ubox
6 46 0.008048991 ubox
6 53 0.003424480 ubox
6 55 0.004415955 ubox
7 13 0.008535713 ubox
7 17 0.022598144 ubox
7 25 0.024101361 ubox
7 52 0.003646440 ubox
7 57 0.021804846 ubox
8 12 0.006043320 ubox
8 16 0.038205960 ubox
8 20 0.900199522 ubox
8 22 0.014375086 ubox
8 29 0.008189379 ubox
8 30 0.016620693 ubox
8 33 0.008309539 ubox
8 35 0.005852568 ubox
8 41 0.004219601 ubox
8 56 0.026868800 ubox
9 15 0.039490013 ubox
9 19 0.902066770 ubox
9 21 0.010741990 ubox
9 28 0.008915773 ubox
9 29 0.016216722 ubox
9 32 0.008951152 ubox
9 34 0.005644754 ubox
9 40 0.004579066 ubox
10 14 0.039256794 ubox
10 18 0.902506892 ubox
10 26 0.028279960 ubox
10 39 0.004566174 ubox
11 17 0.902410001 ubox
11 18 0.004921991 ubox
11 25 0.028375908 ubox
11 49 0.015985311 ubox
12 17 0.006282544 ubox
12 48 0.015999665 ubox
12 57 0.006755661 ubox
13 21 0.006846193 ubox
13 22 0.008065881 ubox
13 23 0.023762109 ubox
13 28 0.017604065 ubox
13 30 0.027168580 ubox
13 31 0.407038638 ubox
13 32 0.028494133 ubox
13 47 0.014987100 ubox
13 56 0.008501730 ubox
14 20 0.007600113 ubox
14 21 0.006178648 ubox
14 22 0.025134849 ubox
14 27 0.018855506 ubox
14 29 0.024313021 ubox
14 30 0.407823322 ubox
14 31 0.041687769 ubox
14 45 0.017118196 ubox
14 56 0.006912873 ubox
15 26 0.018837317 ubox
15 44 0.017161032 ubox
15 55 0.006237980 ubox
16 25 0.018198199 ubox
16 43 0.017164163 ubox
16 57 0.007255246 ubox
17 23 0.003510438 ubox
17 24 0.015182221 ubox
17 28 0.413409095 ubox
17 29 0.008507486 ubox
17 30 0.003185923 ubox
17 31 0.007032216 ubox
17 42 0.017167569 ubox
17 56 0.007018041 ubox
18 22 0.003951324 ubox
18 23 0.011286660 ubox
18 27 0.420570423 ubox
18 30 0.006633205 ubox
18 41 0.017104328 ubox
18 56 0.081719456 ubox
19 26 0.420315456 ubox
19 55 0.082517370 ubox
20 25 0.419445246 ubox
20 26 0.011518877 ubox
20 54 0.083341299 ubox
21 25 0.014475251 ubox
21 50 0.013465352 ubox
21 53 0.084414473 ubox
21 55 0.039103817 ubox
22 49 0.014193197 ubox
22 52 0.084521379 ubox
22 54 0.042167653 ubox
23 44 0.028057723 ubox
23 48 0.012471428 ubox
23 50 0.005657176 ubox
23 51 0.081983427 ubox
23 53 0.041872378 ubox
23 55 0.004058094 ubox
24 43 0.045084382 ubox
24 46 0.004690250 ubox
24 49 0.007523716 ubox
24 50 0.066030392 ubox
24 52 0.040429226 ubox
24 57 0.051641326 ubox
25 31 0.318879037 ubox
25 32 0.026724232 ubox
25 33 0.009909311 ubox
25 34 0.009072916 ubox
25 35 0.005877316 ubox
25 36 0.005930448 ubox
25 41 0.039150079 ubox
25 42 0.048555632 ubox
25 45 0.005585889 ubox
25 56 0.065493385 ubox
26 30 0.314568635 ubox
26 31 0.038631734 ubox
26 32 0.008718170 ubox
26 33 0.009740142 ubox
26 34 0.004756419 ubox
26 35 0.006024266 ubox
26 40 0.039722289 ubox
26 41 0.048240634 ubox
26 47 0.036598753 ubox
27 39 0.060991730 ubox
27 46 0.036959107 ubox
27 49 0.040164360 ubox
27 52 0.013626555 ubox
27 54 0.023450107 ubox
28 44 0.009369971 ubox
28 48 0.039475975 ubox
28 51 0.013984177 ubox
28 53 0.020763307 ubox
28 54 0.026977448 ubox
28 55 0.015906185 ubox
29 43 0.008604643 ubox
29 50 0.013472711 ubox
29 52 0.014251231 ubox
29 53 0.032809189 ubox
29 54 0.009658051 ubox
29 55 0.085643939 ubox
30 49 0.013186110 ubox
30 52 0.033979866 ubox
30 54 0.070123468 ubox
31 52 0.041962917 ubox
31 54 0.489511953 ubox
32 48 0.003504477 ubox
32 50 0.025086767 ubox
32 51 0.042005350 ubox
32 53 0.495600914 ubox
32 55 0.794283787 ubox
33 49 0.026122525 ubox
33 52 0.495872373 ubox
33 54 0.858984147 ubox
34 48 0.025143610 ubox
34 50 0.352208688 ubox
34 51 0.353679682 ubox
34 53 0.859304737 ubox
34 55 0.028623755 ubox
35 49 0.495163067 ubox
35 52 0.859450112 ubox
35 54 0.030945896 ubox
36 44 0.004635784 ubox
36 48 0.491890833 ubox
36 49 0.039330748 ubox
36 50 0.074281274 ubox
36 51 0.856035506 ubox
36 53 0.030890880 ubox
37 43 0.005328403 ubox
37 44 0.012230836 ubox
37 48 0.045383297 ubox
37 49 0.096983874 ubox
37 50 0.849287897 ubox
37 51 0.020043572 ubox
37 52 0.030746223 ubox
38 43 0.012038832 ubox
38 46 0.487308326 ubox
38 48 0.108764169 ubox
38 49 0.823197224 ubox
38 50 0.027542647 ubox
38 51 0.029905234 ubox
38 57 0.012671784 ubox
39 45 0.553507853 ubox
39 47 0.104663357 ubox
39 56 0.016159064 ubox
40 44 0.498857041 ubox
40 46 0.106398949 ubox
40 50 0.054949952 ubox
40 55 0.016161421 ubox
41 49 0.059870524 ubox
41 54 0.016131645 ubox
46 56 0.006119261 ubox
47 55 0.006012170 ubox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
32 55 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
showpage
end
%%EOF
