%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAGCAGGAAAUAGAAACUUAAGAGAAAUACACACUUCUGAGAAACUGAAACGACAGGGGAAAGGAGGUCUCACUGAGCACCGUCCCAGCAUCCGGACACCACAGCGGCCCUUCGCUCCACGCAGAAAACCACACUUCUCAAACCUUCACUCAACACUUCCUUCCCCAAAGCCAGAAG\
) } def
/len { sequence length } bind def

/coor [
[-158.91722107 437.79003906]
[-152.20588684 451.24197388]
[-147.73942566 465.59628296]
[-145.63352966 480.48123169]
[-145.94276428 495.51123047]
[-148.65910339 510.29693604]
[-153.71218872 524.45544434]
[-160.97114563 537.61993408]
[-170.24794006 549.44940186]
[-181.30229187 559.63751221]
[-193.84783936 567.92034912]
[-207.55964661 574.08337402]
[-222.08255005 577.96685791]
[-237.04034424 579.47033691]
[-252.04560852 578.55480957]
[-266.70965576 575.24395752]
[-280.65267944 569.62359619]
[-293.51348877 561.83923340]
[-304.95898438 552.09259033]
[-314.69265747 540.63610840]
[-322.46243286 527.76647949]
[-328.06704712 513.81713867]
[-331.36129761 499.14935303]
[-332.25988770 484.14306641]
[-330.73950195 469.18698120]
[-326.83956909 454.66848755]
[-320.66107178 440.96365356]
[-312.36404419 428.42745972]
[-302.16345215 417.38464355]
[-290.32345581 408.12124634]
[-277.15075684 400.87716675]
[-262.98657227 395.84008789]
[-248.19779968 393.14047241]
[-233.16746521 392.84823608]
[-218.28492737 394.97097778]
[-203.93565369 399.45364380]
[-190.49133301 406.18020630]
[-181.71673584 394.01443481]
[-172.94212341 381.84863281]
[-164.16752625 369.68283081]
[-155.39292908 357.51705933]
[-146.61833191 345.35125732]
[-149.04708862 338.25540161]
[-158.90878296 349.55795288]
[-173.62788391 346.66860962]
[-178.48510742 332.47680664]
[-168.62316895 321.17449951]
[-153.90461731 324.06372070]
[-156.33338928 316.96786499]
[-170.72244263 312.73052979]
[-184.47782898 320.51287842]
[-199.68476868 316.20886230]
[-207.32125854 302.37197876]
[-202.85671997 287.21139526]
[-188.93986511 279.72161865]
[-173.82733154 284.34619141]
[-166.48510742 298.34146118]
[-152.09605408 302.57879639]
[-137.50595093 299.09613037]
[-126.58212280 288.81652832]
[-115.65829468 278.53692627]
[-104.73445892 268.25735474]
[-93.81063080 257.97775269]
[-82.88680267 247.69818115]
[-80.16298676 240.80589294]
[-71.68302917 237.33700562]
[-60.58243561 227.24856567]
[-49.48183823 217.16011047]
[-38.38124084 207.07167053]
[-27.28064346 196.98321533]
[-16.18004608 186.89477539]
[-18.47713470 176.84260559]
[-16.36407471 166.66749573]
[-10.15861702 158.23077393]
[-0.93330199 153.10427856]
[9.66945839 152.27777100]
[19.72967339 155.96846008]
[31.34029961 146.47143555]
[42.95092392 136.97442627]
[54.56155014 127.47740173]
[43.68959808 106.28705597]
[42.86545181 80.97095490]
[53.51562500 56.32985687]
[74.77782440 37.56217194]
[103.45700073 29.18477440]
[104.49758148 14.22091198]
[105.53815460 -0.74295151]
[106.57872772 -15.70681477]
[94.60204315 -25.57284355]
[90.74440002 -40.60275650]
[96.48915863 -55.01724243]
[109.62732697 -63.27363968]
[125.10702515 -62.19719315]
[136.97598267 -52.20182037]
[140.67034912 -37.13094330]
[134.76956177 -22.77962685]
[121.54259491 -14.66623878]
[120.50202179 0.29762399]
[119.46144104 15.26148701]
[118.42086792 30.22535133]
[125.27950287 33.26000977]
[126.81308746 18.33861351]
[141.47811890 15.18635654]
[149.00767517 28.15962791]
[138.99676514 39.32933044]
[145.85539246 42.36399078]
[156.22940063 31.52978325]
[166.60339355 20.69557381]
[176.97740173 9.86136436]
[187.35140991 -0.97284436]
[190.72348022 -17.02155495]
[206.39021301 -21.86776924]
[218.23500061 -10.52611637]
[214.07293701 5.33608246]
[198.18560791 9.40115738]
[187.81161499 20.23536682]
[177.43760681 31.06957626]
[167.06361389 41.90378571]
[156.68960571 52.73799515]
[159.90177917 59.51530075]
[173.45640564 53.09094620]
[187.01112366 46.66681290]
[193.43502808 60.22164536]
[179.88075256 66.64556122]
[166.32614136 73.06991577]
[169.53831482 79.84722900]
[184.49258423 78.67682648]
[199.44685364 77.50643158]
[214.40112305 76.33603668]
[222.39941406 63.03915787]
[236.69898987 57.01404953]
[251.80136108 60.57748413]
[261.89935303 72.35925293]
[263.11010742 87.82901764]
[254.96803284 101.03834534]
[240.60394287 106.90798187]
[225.54112244 103.18092346]
[215.57151794 91.29030609]
[200.61724854 92.46070099]
[185.66297913 93.63109589]
[170.70870972 94.80149841]
[168.56764221 109.91965485]
[163.30841064 123.88251495]
[155.32408142 136.07244873]
[145.12400818 145.98567200]
[133.30369568 153.25262451]
[120.51132202 157.65084839]
[107.41296387 159.10984802]
[94.65824127 157.70806885]
[82.84819031 153.66223145]
[72.50695038 147.31019592]
[64.05857086 139.08802795]
[52.44794464 148.58505249]
[40.83731842 158.08206177]
[29.22669220 167.57908630]
[28.31797600 187.62521362]
[13.22041225 200.37753296]
[-6.09159994 197.99537659]
[-17.19219780 208.08381653]
[-28.29279327 218.17227173]
[-39.39339066 228.26071167]
[-50.49398804 238.34915161]
[-61.59458542 248.43760681]
[-72.60721588 258.62200928]
[-83.53104401 268.90158081]
[-94.45487213 279.18118286]
[-105.37870026 289.46078491]
[-116.30253601 299.74035645]
[-127.22636414 310.01995850]
[-123.09919739 315.53555298]
[-120.58164215 322.60647583]
[-120.20486450 330.72637939]
[-122.33393860 339.21981812]
[-127.11697388 347.29745483]
[-134.45254517 354.12585449]
[-143.22714233 366.29165649]
[-152.00173950 378.45742798]
[-160.77633667 390.62322998]
[-169.55093384 402.78903198]
[-178.32554626 414.95480347]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 180]
[38 179]
[39 178]
[40 177]
[41 176]
[42 175]
[49 58]
[50 57]
[59 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[66 163]
[67 162]
[68 161]
[69 160]
[70 159]
[71 158]
[77 155]
[78 154]
[79 153]
[80 152]
[85 100]
[86 99]
[87 98]
[88 97]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[126 141]
[127 140]
[128 139]
[129 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
