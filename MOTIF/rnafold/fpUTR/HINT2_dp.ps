%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HINT2)
} def

/sequence { (\
CCCACCCACGGCCGGCCGCGGAGCCGAGUGCUGACCCGGGUGAGAGGUUCCCGCGGCUCAGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.118739179 ubox
1 47 0.023428785 ubox
1 62 0.024163757 ubox
1 63 0.380382259 ubox
2 10 0.119640871 ubox
2 11 0.339146227 ubox
2 14 0.006741284 ubox
2 46 0.023644700 ubox
2 47 0.003306174 ubox
2 61 0.023989903 ubox
2 62 0.381960271 ubox
2 63 0.048764989 ubox
3 10 0.342057635 ubox
3 14 0.006009219 ubox
3 30 0.005825043 ubox
3 42 0.050585463 ubox
3 61 0.381403002 ubox
3 62 0.047781781 ubox
4 29 0.005925415 ubox
4 41 0.050785514 ubox
5 11 0.343299310 ubox
5 15 0.010878545 ubox
5 28 0.005930504 ubox
5 40 0.050806294 ubox
5 62 0.047413625 ubox
5 63 0.748318058 ubox
6 10 0.342339048 ubox
6 14 0.018422513 ubox
6 15 0.017604106 ubox
6 21 0.003341169 ubox
6 39 0.050794593 ubox
6 61 0.047609549 ubox
6 62 0.751665174 ubox
6 63 0.178649339 ubox
7 14 0.038020374 ubox
7 20 0.003716923 ubox
7 30 0.003884261 ubox
7 38 0.050607499 ubox
7 61 0.750752469 ubox
7 62 0.178733928 ubox
8 29 0.003952312 ubox
9 18 0.003969995 ubox
9 26 0.006774430 ubox
9 28 0.003898564 ubox
9 33 0.032444361 ubox
9 38 0.003336650 ubox
10 17 0.004016727 ubox
10 25 0.006876857 ubox
10 32 0.032878075 ubox
10 36 0.037803788 ubox
10 37 0.007000403 ubox
10 58 0.485261137 ubox
10 59 0.352780658 ubox
11 16 0.003994115 ubox
11 24 0.006861842 ubox
11 29 0.004950283 ubox
11 31 0.032919790 ubox
11 35 0.037829585 ubox
11 36 0.006883172 ubox
11 57 0.493632496 ubox
11 58 0.182666038 ubox
12 21 0.004843650 ubox
12 23 0.005149526 ubox
12 28 0.005794759 ubox
12 30 0.032840612 ubox
12 56 0.493076007 ubox
12 62 0.416267587 ubox
12 63 0.237339472 ubox
13 20 0.006910610 ubox
13 26 0.033646649 ubox
13 33 0.038252788 ubox
13 55 0.492026227 ubox
13 61 0.416951466 ubox
13 62 0.237238392 ubox
14 19 0.007026793 ubox
14 25 0.033781620 ubox
14 32 0.038431566 ubox
14 54 0.437989693 ubox
14 58 0.773955355 ubox
14 59 0.248349606 ubox
15 24 0.033782780 ubox
15 31 0.038462583 ubox
15 54 0.200974071 ubox
15 57 0.867200284 ubox
15 58 0.028063301 ubox
16 23 0.033715167 ubox
16 30 0.028439808 ubox
16 53 0.220353136 ubox
16 56 0.868429343 ubox
17 26 0.004432971 ubox
17 30 0.025861244 ubox
17 53 0.420787540 ubox
17 55 0.868825277 ubox
18 25 0.004060723 ubox
18 29 0.036553341 ubox
18 52 0.464582274 ubox
18 54 0.870580616 ubox
19 26 0.010025331 ubox
19 28 0.036726492 ubox
19 53 0.870800157 ubox
20 25 0.010137908 ubox
20 51 0.699391839 ubox
20 52 0.712578358 ubox
21 50 0.860115010 ubox
21 51 0.507325511 ubox
22 32 0.005820440 ubox
22 49 0.994525288 ubox
23 31 0.006077317 ubox
23 48 0.998008862 ubox
24 30 0.006067315 ubox
24 39 0.008711505 ubox
24 47 0.998587654 ubox
25 38 0.009364461 ubox
25 46 0.998266954 ubox
26 37 0.011545274 ubox
28 35 0.014473593 ubox
28 41 0.019594825 ubox
29 34 0.014363283 ubox
29 38 0.006820228 ubox
29 40 0.006990337 ubox
29 42 0.868760821 ubox
30 37 0.006911642 ubox
30 41 0.977158967 ubox
31 39 0.168083983 ubox
31 40 0.980951836 ubox
31 44 0.070078058 ubox
31 61 0.008237626 ubox
32 38 0.177777034 ubox
32 39 0.967660322 ubox
32 43 0.071019440 ubox
32 60 0.009104801 ubox
33 37 0.178916167 ubox
33 50 0.004264795 ubox
33 59 0.009486892 ubox
34 41 0.071862728 ubox
34 49 0.004178823 ubox
34 58 0.009444668 ubox
35 40 0.071752537 ubox
35 56 0.009098823 ubox
36 47 0.004657820 ubox
36 55 0.009103541 ubox
36 56 0.003601811 ubox
37 46 0.004731796 ubox
37 53 0.009420114 ubox
37 55 0.003606461 ubox
38 52 0.009444345 ubox
38 54 0.003583431 ubox
39 51 0.009444318 ubox
39 52 0.003653855 ubox
40 50 0.009450831 ubox
40 51 0.003665513 ubox
42 49 0.004906274 ubox
42 50 0.005137658 ubox
43 48 0.005140711 ubox
43 49 0.005084555 ubox
44 48 0.003470956 ubox
48 65 0.043618692 ubox
49 64 0.050136243 ubox
50 63 0.050805123 ubox
51 62 0.050808274 ubox
52 61 0.050805778 ubox
58 64 0.006089456 ubox
59 63 0.008080979 ubox
5 63 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
32 39 0.9500000 lbox
showpage
end
%%EOF
