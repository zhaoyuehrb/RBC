%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FCGR3A)
} def

/sequence { (\
AUUCUUGGUGCUGGGUGGAUCCAAAUCCAGGAGAUGGGGCAAGCAUCCUGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.009247184 ubox
1 16 0.021355633 ubox
1 20 0.007992405 ubox
1 26 0.049030751 ubox
1 35 0.065521045 ubox
2 8 0.009524187 ubox
2 15 0.022297996 ubox
2 19 0.009347557 ubox
2 24 0.011750567 ubox
2 25 0.060366863 ubox
2 32 0.026881672 ubox
2 33 0.246210192 ubox
2 34 0.054559727 ubox
2 39 0.007769096 ubox
2 42 0.003589711 ubox
2 45 0.003402582 ubox
2 51 0.004865708 ubox
2 52 0.062621141 ubox
3 7 0.007256414 ubox
3 14 0.023052807 ubox
3 15 0.006193640 ubox
3 18 0.009578466 ubox
3 19 0.009200015 ubox
3 23 0.006790173 ubox
3 24 0.044796627 ubox
3 31 0.023489692 ubox
3 32 0.478417756 ubox
3 33 0.030643143 ubox
3 34 0.037935973 ubox
3 38 0.010524963 ubox
3 39 0.008771437 ubox
3 41 0.004052737 ubox
3 50 0.003919847 ubox
3 51 0.096036142 ubox
3 52 0.074217953 ubox
4 13 0.024275244 ubox
4 14 0.008472747 ubox
4 15 0.006416336 ubox
4 17 0.009577292 ubox
4 18 0.009850413 ubox
4 30 0.024374882 ubox
4 31 0.498103419 ubox
4 33 0.040649808 ubox
4 36 0.003309282 ubox
4 37 0.011725038 ubox
4 38 0.011523016 ubox
4 39 0.007597823 ubox
4 43 0.007404082 ubox
4 50 0.107689554 ubox
4 51 0.120190323 ubox
4 52 0.026883674 ubox
5 13 0.008422608 ubox
5 14 0.006531254 ubox
5 17 0.009638633 ubox
5 24 0.737894674 ubox
5 25 0.041111294 ubox
5 29 0.018847816 ubox
5 30 0.497805773 ubox
5 32 0.040347587 ubox
5 34 0.005894015 ubox
5 36 0.011585010 ubox
5 37 0.011479557 ubox
5 38 0.007675793 ubox
5 42 0.007493964 ubox
5 50 0.116571061 ubox
5 51 0.026479279 ubox
6 13 0.006125511 ubox
6 14 0.003178769 ubox
6 23 0.820302400 ubox
6 24 0.033371102 ubox
6 29 0.498212226 ubox
6 31 0.039253689 ubox
6 33 0.006321859 ubox
6 36 0.011067316 ubox
6 37 0.007696072 ubox
6 41 0.007360121 ubox
6 50 0.022546326 ubox
7 12 0.004123542 ubox
7 21 0.013047131 ubox
7 22 0.834239983 ubox
7 27 0.019416799 ubox
7 28 0.498837042 ubox
7 35 0.010605905 ubox
7 40 0.006405001 ubox
7 47 0.142817408 ubox
7 48 0.090495837 ubox
7 49 0.013997328 ubox
8 20 0.014244969 ubox
8 21 0.834184038 ubox
8 26 0.036690670 ubox
8 27 0.498455329 ubox
8 35 0.008008680 ubox
8 40 0.004666256 ubox
8 46 0.143817602 ubox
8 47 0.089790375 ubox
8 48 0.013694787 ubox
9 15 0.003577319 ubox
9 17 0.019002664 ubox
9 19 0.046173287 ubox
9 23 0.003251567 ubox
9 25 0.097157540 ubox
9 34 0.007672555 ubox
9 39 0.005904255 ubox
9 41 0.005256055 ubox
9 45 0.168734055 ubox
10 16 0.023673656 ubox
10 40 0.005394609 ubox
10 44 0.169675786 ubox
11 15 0.024009237 ubox
11 18 0.829651595 ubox
11 30 0.061582267 ubox
11 37 0.006038682 ubox
11 39 0.005370531 ubox
11 43 0.169541668 ubox
11 51 0.025186417 ubox
11 52 0.004105044 ubox
12 17 0.776225181 ubox
12 23 0.494784256 ubox
12 29 0.062960911 ubox
12 36 0.006010240 ubox
12 38 0.004931815 ubox
12 41 0.040876805 ubox
12 42 0.159771579 ubox
12 50 0.024257890 ubox
12 51 0.003710377 ubox
13 21 0.008553388 ubox
13 22 0.513650118 ubox
13 28 0.064175111 ubox
13 35 0.006387242 ubox
13 40 0.057810973 ubox
13 48 0.028507417 ubox
13 49 0.015726229 ubox
14 20 0.008932271 ubox
14 21 0.512938465 ubox
14 22 0.093761751 ubox
14 27 0.064189701 ubox
14 47 0.028613666 ubox
14 48 0.015691367 ubox
15 20 0.347725529 ubox
15 21 0.094853307 ubox
15 26 0.064130165 ubox
15 35 0.004545821 ubox
15 40 0.102249409 ubox
15 46 0.028653331 ubox
15 47 0.015506112 ubox
16 23 0.010162938 ubox
16 25 0.063919594 ubox
16 29 0.063325953 ubox
16 34 0.003801963 ubox
16 36 0.023628618 ubox
16 39 0.100713455 ubox
16 41 0.064660375 ubox
16 45 0.032210107 ubox
17 22 0.012187657 ubox
17 28 0.065372171 ubox
17 35 0.028830116 ubox
17 40 0.065153578 ubox
17 44 0.032324901 ubox
18 27 0.065385619 ubox
19 26 0.064499719 ubox
19 35 0.013303033 ubox
20 25 0.058961635 ubox
20 32 0.069829267 ubox
20 34 0.011620563 ubox
20 38 0.112324949 ubox
20 39 0.017225712 ubox
21 31 0.070266152 ubox
21 33 0.011043387 ubox
21 37 0.115803690 ubox
21 38 0.024064958 ubox
21 39 0.036355885 ubox
22 30 0.070277672 ubox
22 36 0.115849281 ubox
22 37 0.023917558 ubox
22 38 0.036507261 ubox
23 35 0.112230372 ubox
25 35 0.045763144 ubox
26 32 0.106879225 ubox
26 34 0.055116362 ubox
26 38 0.053523845 ubox
26 39 0.012152515 ubox
26 51 0.003275532 ubox
26 52 0.546148417 ubox
27 31 0.106128036 ubox
27 33 0.055612810 ubox
27 37 0.069142788 ubox
27 38 0.016237218 ubox
27 50 0.003299964 ubox
27 51 0.845086805 ubox
27 52 0.027273803 ubox
28 36 0.069294313 ubox
28 37 0.015992618 ubox
28 50 0.846376745 ubox
28 51 0.026068305 ubox
29 35 0.068253121 ubox
29 49 0.845565009 ubox
30 48 0.843188488 ubox
30 49 0.041465829 ubox
31 47 0.819347286 ubox
31 48 0.075092967 ubox
32 46 0.754355736 ubox
32 49 0.029308324 ubox
33 47 0.392827994 ubox
33 48 0.025791915 ubox
34 46 0.480803195 ubox
35 41 0.171315621 ubox
35 45 0.724348037 ubox
35 50 0.186142397 ubox
36 40 0.173839922 ubox
36 44 0.747056789 ubox
36 47 0.008169199 ubox
36 48 0.109780963 ubox
36 49 0.338957783 ubox
37 46 0.009248814 ubox
37 47 0.109845753 ubox
37 48 0.351365829 ubox
37 49 0.054820956 ubox
38 46 0.104557316 ubox
38 47 0.351373113 ubox
38 48 0.057681646 ubox
38 49 0.006668385 ubox
39 46 0.267735192 ubox
39 47 0.057417337 ubox
39 48 0.007007492 ubox
40 50 0.011638225 ubox
41 49 0.010542864 ubox
42 49 0.009383480 ubox
43 48 0.010287069 ubox
44 50 0.008834381 ubox
45 49 0.007180056 ubox
47 51 0.003229445 ubox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
showpage
end
%%EOF
