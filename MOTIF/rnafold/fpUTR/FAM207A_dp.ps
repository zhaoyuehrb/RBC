%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM207A)
} def

/sequence { (\
CGAGAACGCAGGACCAGCUUCCGGGAGGCGCUCCGCACGUUUGCCGUGCUCCGCCGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.219757078 ubox
1 23 0.178054479 ubox
1 35 0.010019144 ubox
1 39 0.007308031 ubox
1 43 0.027042634 ubox
1 46 0.052847216 ubox
1 53 0.007836857 ubox
1 56 0.010976037 ubox
2 7 0.229381340 ubox
2 20 0.011941473 ubox
2 21 0.006762801 ubox
2 22 0.180504816 ubox
2 33 0.068972370 ubox
2 34 0.042958149 ubox
2 38 0.007569970 ubox
2 41 0.004223980 ubox
2 42 0.026780750 ubox
2 45 0.054789168 ubox
2 51 0.007992735 ubox
2 52 0.008146978 ubox
2 55 0.010983270 ubox
3 19 0.015506123 ubox
3 20 0.007471509 ubox
3 32 0.069258381 ubox
3 40 0.005139218 ubox
3 41 0.026254634 ubox
3 42 0.009808606 ubox
3 50 0.008333140 ubox
4 18 0.017082968 ubox
4 19 0.007599438 ubox
4 20 0.008826276 ubox
4 21 0.183608805 ubox
4 31 0.068505693 ubox
4 33 0.059489050 ubox
4 40 0.024606181 ubox
4 41 0.010336842 ubox
4 42 0.096458162 ubox
4 49 0.008094584 ubox
4 51 0.008411071 ubox
5 19 0.009312629 ubox
5 20 0.184075990 ubox
5 32 0.058610058 ubox
5 40 0.008711852 ubox
5 41 0.111764896 ubox
5 42 0.005617875 ubox
5 50 0.008063022 ubox
6 19 0.182014081 ubox
6 40 0.124226936 ubox
6 41 0.004203422 ubox
6 47 0.007783571 ubox
7 23 0.024893269 ubox
7 30 0.091370052 ubox
7 39 0.126621135 ubox
7 46 0.008503739 ubox
7 48 0.004791903 ubox
7 56 0.028101120 ubox
8 18 0.435151455 ubox
8 22 0.024743322 ubox
8 29 0.092607093 ubox
8 31 0.005637094 ubox
8 34 0.003743248 ubox
8 36 0.085491170 ubox
8 38 0.122026829 ubox
8 44 0.004843641 ubox
8 45 0.007045946 ubox
8 47 0.004834167 ubox
8 49 0.009138628 ubox
8 54 0.026550957 ubox
8 55 0.025878262 ubox
9 17 0.438238848 ubox
9 28 0.092544469 ubox
9 30 0.005664778 ubox
9 35 0.086468312 ubox
9 43 0.006597736 ubox
9 46 0.004831946 ubox
9 48 0.009141090 ubox
9 53 0.028752033 ubox
10 19 0.060040655 ubox
10 20 0.027391019 ubox
10 32 0.004355904 ubox
10 42 0.006390876 ubox
10 47 0.008417386 ubox
11 18 0.080577673 ubox
11 19 0.037273886 ubox
11 21 0.004330036 ubox
11 22 0.051988027 ubox
11 31 0.004542957 ubox
11 33 0.004910179 ubox
11 34 0.263540942 ubox
11 41 0.003763516 ubox
11 42 0.003745753 ubox
11 45 0.004892089 ubox
11 52 0.034048416 ubox
11 55 0.011301723 ubox
12 18 0.042382916 ubox
12 19 0.003613952 ubox
12 20 0.005002338 ubox
12 21 0.052141051 ubox
12 32 0.004481032 ubox
12 33 0.263781292 ubox
12 41 0.004565132 ubox
12 44 0.004878587 ubox
12 51 0.034053225 ubox
12 54 0.011319931 ubox
13 19 0.005356036 ubox
13 20 0.048761733 ubox
13 32 0.257684936 ubox
13 40 0.005266163 ubox
13 50 0.028581882 ubox
14 24 0.083364819 ubox
14 25 0.034410723 ubox
14 28 0.007764430 ubox
14 39 0.005519217 ubox
14 57 0.009612827 ubox
14 58 0.004566169 ubox
15 23 0.083370267 ubox
15 24 0.034434197 ubox
15 27 0.007860789 ubox
15 48 0.009920278 ubox
15 56 0.009627538 ubox
15 57 0.004446122 ubox
16 32 0.014029380 ubox
16 47 0.009842832 ubox
16 50 0.020898806 ubox
17 29 0.263697178 ubox
17 31 0.021085228 ubox
17 36 0.005549771 ubox
17 40 0.004305664 ubox
17 49 0.030902070 ubox
17 54 0.009833701 ubox
18 24 0.007589004 ubox
18 27 0.006702314 ubox
18 28 0.263746576 ubox
18 30 0.021055365 ubox
18 35 0.005522899 ubox
18 39 0.004463368 ubox
18 48 0.030899485 ubox
18 53 0.009791189 ubox
18 58 0.005337050 ubox
18 61 0.785809335 ubox
19 23 0.006860804 ubox
19 26 0.007399568 ubox
19 27 0.263450855 ubox
19 58 0.005948673 ubox
19 59 0.364694084 ubox
19 60 0.836307978 ubox
19 61 0.008088839 ubox
20 25 0.007000224 ubox
20 26 0.263025353 ubox
20 28 0.004432259 ubox
20 58 0.390503979 ubox
20 59 0.847810195 ubox
20 60 0.009063990 ubox
21 25 0.260928498 ubox
21 27 0.004594385 ubox
21 28 0.020529021 ubox
21 57 0.407909744 ubox
21 58 0.846432730 ubox
22 27 0.020670333 ubox
22 35 0.004147645 ubox
22 46 0.033753152 ubox
22 53 0.004599664 ubox
22 56 0.414575655 ubox
22 57 0.842882700 ubox
23 34 0.010803505 ubox
23 45 0.034578232 ubox
23 52 0.007174751 ubox
23 55 0.419338939 ubox
24 32 0.003380457 ubox
24 33 0.010473828 ubox
24 34 0.180383485 ubox
24 44 0.034577163 ubox
24 51 0.006881325 ubox
24 52 0.092722121 ubox
24 54 0.408520625 ubox
24 55 0.836707963 ubox
25 31 0.004300658 ubox
25 32 0.008349628 ubox
25 33 0.181396474 ubox
25 50 0.003668415 ubox
25 51 0.126366566 ubox
25 54 0.835694822 ubox
26 32 0.181160374 ubox
26 42 0.034299913 ubox
26 50 0.120339537 ubox
27 31 0.177180769 ubox
27 34 0.022445867 ubox
27 41 0.034460655 ubox
27 49 0.085935389 ubox
27 50 0.325595140 ubox
27 51 0.294644358 ubox
27 52 0.808078583 ubox
27 55 0.098859503 ubox
28 33 0.022155188 ubox
28 36 0.003644207 ubox
28 40 0.034574222 ubox
28 47 0.015579757 ubox
28 49 0.460043979 ubox
28 50 0.056488404 ubox
28 51 0.807374929 ubox
28 54 0.102780177 ubox
29 35 0.004494496 ubox
29 39 0.034592647 ubox
29 46 0.016768249 ubox
29 48 0.472009768 ubox
29 53 0.105571198 ubox
30 34 0.009900234 ubox
30 36 0.005799459 ubox
30 38 0.033845915 ubox
30 44 0.005539897 ubox
30 45 0.016205462 ubox
30 47 0.472059299 ubox
30 49 0.792796299 ubox
30 52 0.104929757 ubox
30 54 0.006627042 ubox
31 35 0.006259686 ubox
31 43 0.006979015 ubox
31 46 0.471862915 ubox
31 48 0.792423230 ubox
31 53 0.008177577 ubox
34 43 0.055562313 ubox
34 46 0.307193392 ubox
34 48 0.004795149 ubox
35 42 0.042532875 ubox
35 44 0.891845670 ubox
35 45 0.219444611 ubox
35 47 0.013597019 ubox
35 49 0.350148473 ubox
36 43 0.918347220 ubox
36 46 0.013633787 ubox
36 48 0.351422579 ubox
37 42 0.782410370 ubox
37 47 0.354062916 ubox
38 46 0.354151223 ubox
39 45 0.349288687 ubox
40 60 0.007882554 ubox
40 61 0.047934837 ubox
41 59 0.009318457 ubox
41 60 0.086923955 ubox
42 58 0.008878046 ubox
42 59 0.103252779 ubox
42 60 0.004866506 ubox
43 49 0.012272354 ubox
44 48 0.012207808 ubox
44 57 0.136154543 ubox
44 58 0.021057096 ubox
45 56 0.136383968 ubox
45 57 0.020787960 ubox
46 54 0.014700275 ubox
46 55 0.135601478 ubox
47 53 0.020446987 ubox
48 52 0.019571184 ubox
48 54 0.133895073 ubox
49 53 0.132937758 ubox
49 58 0.007404038 ubox
49 61 0.016310970 ubox
50 57 0.007901575 ubox
50 58 0.023100369 ubox
50 59 0.283805745 ubox
50 60 0.017373070 ubox
51 56 0.008749574 ubox
51 57 0.027942058 ubox
51 58 0.298622584 ubox
52 56 0.027902200 ubox
52 57 0.298588551 ubox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
