%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCAAGGUGAGUCAGCUGAACAGGGGACAGGCACCACCCUUCCCAGAUCAGGAAGCCAGCUGAGAGACAGGGCUACGUUUCAGGGAGGGAAACAGAUUCAGCAGCGGCAGCAGCUGGAGAAGGUCGUGGAGCAGCACCUUGCCUGCAGGGUGUUCUGAGAAUCAGCC\
) } def
/len { sequence length } bind def

/coor [
[53.59077072 139.46504211]
[60.51088333 126.15678406]
[53.11317444 124.92232513]
[44.34104156 137.08988953]
[35.56891251 149.25746155]
[26.79678345 161.42503357]
[31.48586082 176.09877014]
[26.69149971 190.55102539]
[14.45122147 199.30543518]
[-0.41891763 199.17515564]
[-9.19104767 211.34271240]
[-10.60528374 229.68484497]
[-26.84810257 236.28555298]
[-35.39522171 248.61221313]
[-36.20948029 264.99114990]
[-50.92266846 272.23364258]
[-64.39912415 262.88928223]
[-62.77542496 246.57072449]
[-47.72188950 240.06509399]
[-39.17477036 227.73843384]
[-41.01775742 215.75898743]
[-33.96537781 205.41215515]
[-21.35861588 202.57058716]
[-12.58648682 190.40301514]
[-17.40901947 176.33599854]
[-12.97109032 161.95654297]
[-0.77438313 152.84095764]
[14.62921429 152.65290833]
[23.40134430 140.48533630]
[32.17347336 128.31776428]
[40.94560242 116.15019226]
[57.54026413 90.51515198]
[80.38360596 83.25799561]
[97.02393341 92.49584961]
[96.47290039 77.50597382]
[88.23386383 63.99934769]
[95.49840546 50.99643326]
[94.94737244 36.00655746]
[94.39633942 21.01668167]
[93.84530640 6.02680635]
[88.45692444 -7.97195625]
[78.81510925 -19.46262360]
[69.17329407 -30.95328903]
[59.53148270 -42.44395447]
[49.88966751 -53.93462372]
[40.24785233 -65.42529297]
[30.60603905 -76.91595459]
[15.80834293 -82.51406097]
[13.55452633 -97.23715973]
[3.91271234 -108.72782135]
[-9.66036892 -104.71710205]
[-23.69366646 -106.18523407]
[-36.06647110 -112.87707520]
[-44.92171478 -123.75059509]
[-48.94468689 -137.13903809]
[-47.55813980 -151.00631714]
[-41.00488281 -163.25671387]
[-50.43397903 -174.92257690]
[-59.86307144 -186.58842468]
[-69.29216766 -198.25428772]
[-75.37102509 -201.00686646]
[-78.63077545 -205.72050476]
[-78.84386444 -210.52630615]
[-87.83804321 -222.53067017]
[-96.83222198 -234.53503418]
[-112.44498444 -238.22572327]
[-119.16330719 -252.79431152]
[-111.83347321 -267.06503296]
[-96.07829285 -270.09057617]
[-83.98380280 -259.55004883]
[-84.82785797 -243.52922058]
[-75.83367920 -231.52485657]
[-66.83950043 -219.52049255]
[-57.62630844 -207.68338013]
[-48.19721603 -196.01751709]
[-38.76811981 -184.35166931]
[-29.33902740 -172.68580627]
[-13.87479687 -176.64169312]
[1.82536483 -173.45501709]
[14.61597919 -163.71257019]
[21.91201973 -149.31968689]
[22.21127701 -133.12782288]
[15.40337849 -118.36963654]
[25.04519272 -106.87897491]
[39.15324020 -102.10275269]
[42.09670639 -86.55776978]
[51.73852158 -75.06710052]
[61.38033295 -63.57643509]
[71.02214813 -52.08576965]
[80.66396332 -40.59510422]
[90.30577850 -29.10443687]
[99.94759369 -17.61376953]
[107.29199982 -26.70296669]
[117.72062683 -29.86526489]
[127.36853027 -26.84267044]
[139.45500183 -35.72620010]
[139.12422180 -52.61917114]
[148.81983948 -66.25355530]
[164.56951904 -71.38420105]
[180.12084961 -66.18209839]
[192.04208374 -75.28617096]
[203.96333313 -84.39023590]
[215.88456726 -93.49430847]
[227.80580139 -102.59837341]
[239.72705078 -111.70243835]
[245.99865723 -126.22750092]
[260.80972290 -127.80295563]
[272.73095703 -136.90702820]
[278.53854370 -152.24337769]
[294.76535034 -154.61460876]
[304.71862793 -141.58140564]
[298.15927124 -126.55119324]
[281.83502197 -124.98578644]
[269.91378784 -115.88171387]
[264.49484253 -102.00783539]
[248.83111572 -99.78120422]
[236.90988159 -90.67713165]
[224.98863220 -81.57306671]
[213.06739807 -72.46899414]
[201.14616394 -63.36492920]
[189.22491455 -54.26086044]
[190.77897644 -40.97972488]
[185.51651001 -28.56924057]
[174.71716309 -20.32175827]
[161.14433289 -18.48260880]
[148.33853149 -23.63972092]
[136.25205994 -14.75619316]
[130.20060730 3.50141168]
[108.83518219 5.47577381]
[109.38621521 20.46564865]
[109.93724823 35.45552444]
[110.48828125 50.44540024]
[118.68789673 62.87984848]
[111.46277618 76.95494080]
[112.01380920 91.94481659]
[118.78681183 105.32862854]
[130.53878784 114.65016174]
[142.29077148 123.97169495]
[154.04273987 133.29322815]
[165.79472351 142.61477661]
[177.54669189 151.93630981]
[189.29867554 161.25784302]
[201.05065918 170.57937622]
[212.80262756 179.90090942]
[229.09538269 181.76594543]
[235.37750244 196.91412354]
[225.18647766 209.76228333]
[209.00598145 207.09335327]
[203.48109436 191.65289307]
[191.72911072 182.33135986]
[179.97714233 173.00981140]
[168.22515869 163.68827820]
[156.47319031 154.36674500]
[144.72120667 145.04521179]
[132.96922302 135.72367859]
[121.21725464 126.40213776]
[109.46527100 117.08060455]
[97.06061554 125.51413727]
[101.40664673 139.87074280]
[105.75267029 154.22734070]
[110.09870148 168.58393860]
[120.47484589 181.99185181]
[110.46333313 195.67416382]
[94.54425812 189.84155273]
[95.74209595 172.92997742]
[91.39607239 158.57336426]
[87.05004120 144.21676636]
[82.70401001 129.86016846]
[75.30630493 128.62570190]
[77.53023529 143.45993042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 31]
[4 30]
[5 29]
[6 28]
[10 24]
[11 23]
[13 20]
[14 19]
[34 135]
[35 134]
[37 132]
[38 131]
[39 130]
[40 129]
[41 92]
[42 91]
[43 90]
[44 89]
[45 88]
[46 87]
[47 86]
[49 84]
[50 83]
[57 77]
[58 76]
[59 75]
[60 74]
[63 73]
[64 72]
[65 71]
[95 127]
[96 126]
[100 121]
[101 120]
[102 119]
[103 118]
[104 117]
[105 116]
[107 114]
[108 113]
[136 157]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
