%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGAGGGUCGCGGCAGGAACAAGUGCGGGGGUCGGGCUCAAAGCCCCGCCCCAGGCCCAGCGGAACCCUGAAGAGGAGGGGGAGGGUGAGCCGGGCGCGGCUGUGUCAGCUGAGUGACAGUCACGGGACCGCGACCAACUCUGUCUGGCUUCCUAGAGGAGCAGGAGGG\
) } def
/len { sequence length } bind def

/coor [
[170.09774780 284.35546875]
[168.35580444 279.98483276]
[168.50750732 274.69094849]
[161.36830139 261.49884033]
[147.06407166 257.50823975]
[139.63597107 244.23126221]
[143.91867065 229.25474548]
[136.77944946 216.06263733]
[129.64024353 202.87052917]
[122.50103760 189.67842102]
[115.36182404 176.48631287]
[108.22261047 163.29420471]
[101.08340454 150.10209656]
[86.20727539 148.17835999]
[75.94710541 159.12043762]
[65.68693542 170.06251526]
[68.73789978 185.27668762]
[62.23292542 199.36445618]
[48.67331696 206.90875244]
[33.27301407 205.00868225]
[21.95374870 194.39482117]
[19.06801224 179.14843750]
[25.72542572 165.13208008]
[39.36607742 157.73530579]
[54.74486160 159.80233765]
[65.00502777 148.86027527]
[75.26519775 137.91819763]
[65.00888824 125.03524780]
[60.48313522 110.06003571]
[45.51413727 111.02389526]
[30.54513550 111.98775482]
[15.57613468 112.95161438]
[0.60713470 113.91547394]
[-12.66733932 122.52354431]
[-25.86548615 115.62005615]
[-40.83448792 116.58391571]
[-55.80348969 117.54777527]
[-70.77249146 118.51163483]
[-85.74148560 119.47549438]
[-101.15936279 126.52712250]
[-112.20350647 113.66386414]
[-102.90026855 99.49043274]
[-86.70534515 104.50649261]
[-71.73635101 103.54263306]
[-56.76734924 102.57877350]
[-41.79834747 101.61491394]
[-26.82934570 100.65105438]
[-14.62555504 92.11192322]
[-0.35672486 98.94647217]
[14.61227608 97.98261261]
[29.58127594 97.01875305]
[44.55027771 96.05489349]
[59.51927567 95.09103394]
[62.97163773 82.92114258]
[69.98757935 72.39490509]
[79.89188385 64.52535248]
[75.02139282 50.33809280]
[70.15090179 36.15083313]
[65.28041077 21.96357536]
[53.48143005 11.42343235]
[56.66696548 -3.12653828]
[51.79647064 -17.31379700]
[39.07549286 -21.80882263]
[31.38828659 -32.65853500]
[31.36609650 -45.76065826]
[38.79243469 -56.31756973]
[34.18339539 -70.59191132]
[29.57435989 -84.86624908]
[24.96532059 -99.14058685]
[20.35628319 -113.41492462]
[5.20931244 -114.99263763]
[-7.98317862 -122.60040283]
[-16.93551254 -134.92012024]
[-20.09664154 -149.81735229]
[-16.91888046 -164.71102905]
[-7.95279884 -177.02075195]
[5.24817848 -184.61378479]
[20.39690018 -186.17457581]
[34.86876297 -181.43272400]
[46.15642166 -171.20977783]
[52.30422974 -157.27693176]
[52.24703598 -142.04812622]
[45.99475098 -128.16183472]
[34.63062286 -118.02396393]
[39.23966217 -103.74962616]
[43.84869766 -89.47528839]
[48.45773697 -75.20094299]
[53.06677628 -60.92660522]
[68.34037781 -53.92810822]
[73.95449066 -37.73581314]
[65.98373413 -22.18428802]
[70.85422516 -7.99703026]
[82.30483246 1.52834558]
[79.46766663 17.09308434]
[84.33816528 31.28034210]
[89.20865631 45.46760178]
[94.07914734 59.65486145]
[108.55133820 60.12944031]
[121.94524384 65.63150787]
[132.20541382 54.68943787]
[142.46557617 43.74736786]
[152.72575378 32.80529404]
[162.98591614 21.86322212]
[173.24609375 10.92115021]
[179.66960144 -4.76880980]
[196.52459717 -2.93974423]
[199.43293762 13.76288700]
[184.18815613 21.18131828]
[173.92799377 32.12339020]
[163.66783142 43.06546402]
[153.40765381 54.00753403]
[143.14749146 64.94960785]
[132.88731384 75.89167786]
[134.54133606 78.32783508]
[136.01524353 80.87700653]
[150.33131409 76.39928436]
[164.64739990 71.92156219]
[178.96347046 67.44384003]
[192.27549744 56.94496536]
[206.04920959 66.83037567]
[200.36306763 82.80235291]
[183.44119263 81.75991058]
[169.12512207 86.23763275]
[154.80903625 90.71535492]
[140.49296570 95.19307709]
[141.27610779 104.55329132]
[139.88519287 114.01445770]
[136.31710815 123.06965637]
[130.68724060 131.21643066]
[123.22710419 137.98455811]
[114.27550507 142.96289062]
[121.41471863 156.15499878]
[128.55392456 169.34710693]
[135.69314575 182.53921509]
[142.83235168 195.73132324]
[149.97155762 208.92341614]
[157.11077881 222.11552429]
[171.99102783 226.72158813]
[179.04327393 240.20196533]
[174.56040955 254.35961914]
[181.69961548 267.55172729]
[189.19961548 280.54211426]
[197.05470276 293.32089233]
[210.87304688 301.02572632]
[210.94641113 315.92013550]
[218.80151367 328.69894409]
[226.65660095 341.47772217]
[240.47492981 349.18255615]
[240.54830933 364.07696533]
[248.40339661 376.85577393]
[256.25848389 389.63455200]
[264.11358643 402.41333008]
[271.96868896 415.19213867]
[287.17706299 420.29943848]
[292.53070068 435.42288208]
[283.92269897 448.96102905]
[267.95642090 450.52862549]
[256.87979126 438.92309570]
[259.18988037 423.04724121]
[251.33479309 410.26843262]
[243.47970581 397.48965454]
[235.62460327 384.71084595]
[227.76951599 371.93206787]
[214.51303101 365.14126587]
[213.87780762 349.33282471]
[206.02272034 336.55401611]
[198.16761780 323.77523804]
[184.91113281 316.98443604]
[184.27592468 301.17599487]
[176.42082214 288.39721680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 141]
[4 140]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[12 132]
[13 131]
[14 27]
[15 26]
[16 25]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[56 97]
[57 96]
[58 95]
[59 94]
[61 92]
[62 91]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[115 125]
[116 124]
[117 123]
[118 122]
[142 170]
[143 169]
[145 167]
[146 166]
[147 165]
[149 163]
[150 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
