%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCCGGGCUUCGUGCGGUGGGGCUCGCUCGCGCGGCAGCGGUGGCCGAGGCCUCUUGGUUCUGCGGCACGUGACGGUCGGGCCGCCUCCGCCUCUCUCUUUACUGCGGCGCGGGGCAAGGUGUGCGGGCGGGAAGGGGCACGGGCACCCCCGCGGUCCCCGGGAGGCUAGAGAUC\
) } def
/len { sequence length } bind def

/coor [
[100.61051941 160.77000427]
[93.17334747 147.74356079]
[91.88645935 132.79885864]
[96.98562622 118.69535065]
[90.82015228 132.36967468]
[84.65467834 146.04399109]
[78.48919678 159.71829224]
[79.87037659 175.47911072]
[67.58557892 183.90127563]
[61.42010117 197.57559204]
[60.42168808 214.50012207]
[43.88219070 218.22589111]
[35.72343063 203.36416626]
[47.74578857 191.41011047]
[53.91126251 177.73579407]
[52.08908844 162.95307922]
[64.81488800 153.55282593]
[70.98036194 139.87850952]
[77.14583588 126.20419312]
[83.31130981 112.52987671]
[85.51061249 108.80451202]
[88.24662018 105.64916229]
[91.42714691 103.12987518]
[77.26265717 98.19354248]
[63.09817505 93.25720978]
[48.93368912 88.32087708]
[34.76920700 83.38454437]
[20.60472107 78.44821167]
[5.02697420 81.21305084]
[-4.44511604 69.71832275]
[-18.60960007 64.78199005]
[-32.77408600 59.84565735]
[-46.98157883 55.03451157]
[-61.23097610 50.34892654]
[-75.48036957 45.66334534]
[-89.72976685 40.97776413]
[-104.01995850 36.41810608]
[-118.34983063 31.98473549]
[-133.82029724 35.29761505]
[-143.69215393 24.14433098]
[-158.02203369 19.71095848]
[-172.35189819 15.27758598]
[-186.68176270 10.84421349]
[-195.83593750 11.29579544]
[-201.22416687 6.20408392]
[-215.47357178 1.51850140]
[-229.72296143 -3.16708136]
[-243.97236633 -7.85266399]
[-258.22177124 -12.53824615]
[-272.47116089 -17.22382927]
[-286.72055054 -21.90941238]
[-302.65390015 -18.02865219]
[-313.78421021 -30.07224464]
[-308.66159058 -45.65077591]
[-292.55572510 -48.73838806]
[-282.03497314 -36.15880966]
[-267.78558350 -31.47322655]
[-253.53617859 -26.78764343]
[-239.28677368 -22.10206032]
[-225.03738403 -17.41647911]
[-210.78797913 -12.73089600]
[-196.53858948 -8.04531288]
[-182.24839783 -3.48565769]
[-167.91851807 0.94771492]
[-153.58865356 5.38108778]
[-139.25878906 9.81446075]
[-124.81328583 6.18447542]
[-113.91645813 17.65486336]
[-99.58658600 22.08823586]
[-92.24507904 21.05827522]
[-85.04418945 26.72836494]
[-70.79479218 31.41394806]
[-56.54539108 36.09952927]
[-42.29599762 40.78511429]
[-34.93745804 39.88488007]
[-27.83775139 45.68117142]
[-13.67326736 50.61750412]
[0.49121705 55.55383682]
[15.05582619 52.43591690]
[25.54105568 64.28372192]
[39.70553970 69.22005463]
[53.87002182 74.15638733]
[68.03450775 79.09272003]
[82.19898987 84.02906036]
[96.36347961 88.96539307]
[111.33486938 89.89139557]
[125.99970245 86.73819733]
[140.66453552 83.58500671]
[155.32937622 80.43180847]
[169.99420166 77.27861786]
[184.65904236 74.12541962]
[204.76979065 38.39572525]
[217.14915466 29.92510414]
[229.52851868 21.45448112]
[241.90788269 12.98386097]
[254.28724670 4.51323938]
[266.66659546 -3.95738173]
[272.00228882 -11.40943718]
[279.34002686 -12.46599579]
[291.86694336 -20.71682167]
[304.39389038 -28.96764565]
[316.92080688 -37.21847153]
[320.22579956 -52.44065475]
[333.04742432 -60.62971115]
[347.53906250 -57.38510513]
[360.06600952 -65.63593292]
[372.59292603 -73.88675690]
[385.11984253 -82.13758087]
[397.64678955 -90.38840485]
[403.11315918 -97.74513245]
[410.46838379 -98.67202759]
[423.13897705 -106.70048523]
[435.80957031 -114.72894287]
[436.66040039 -130.22267151]
[446.48181152 -142.23597717]
[461.49725342 -146.14950562]
[475.93301392 -140.45841980]
[484.23822021 -127.35104370]
[483.21939087 -111.86745453]
[473.26821899 -99.96139526]
[458.21121216 -96.21099854]
[443.83804321 -102.05835724]
[431.16744995 -94.02989960]
[418.49685669 -86.00143433]
[405.89761353 -77.86148071]
[393.37066650 -69.61065674]
[380.84375000 -61.35982895]
[368.31683350 -53.10900116]
[355.78988647 -44.85817719]
[353.04837036 -30.26298523]
[340.46182251 -21.71702385]
[325.17163086 -24.69154549]
[312.64471436 -16.44071960]
[300.11776733 -8.18989468]
[287.59085083 0.06093046]
[275.13723755 8.42197895]
[262.75787354 16.89260101]
[250.37849426 25.36322212]
[237.99914551 33.83384323]
[225.61978149 42.30446243]
[213.24041748 50.77508545]
[212.90960693 58.26778412]
[211.91714478 80.74588776]
[223.50180054 90.27457428]
[235.08645630 99.80325317]
[246.67109680 109.33193970]
[262.24420166 112.12284088]
[267.15850830 126.18338013]
[278.74316406 135.71206665]
[290.32781982 145.24075317]
[306.37045288 145.12322998]
[316.35235596 157.68273926]
[312.61624146 173.28469849]
[298.02819824 179.96061707]
[283.77886963 172.58930969]
[280.79913330 156.82540894]
[269.21447754 147.29672241]
[257.62982178 137.76803589]
[242.88534546 135.65869141]
[237.14242554 120.91658783]
[225.55776978 111.38790894]
[213.97311401 101.85922241]
[202.38845825 92.33054352]
[187.81222534 88.79026031]
[173.14739990 91.94345093]
[158.48255920 95.09664917]
[143.81773376 98.24983978]
[129.15289307 101.40303040]
[114.48806000 104.55622864]
[129.35139465 102.53598785]
[143.69125366 106.93694305]
[154.86236572 116.94724274]
[160.80401611 130.72029114]
[160.42012024 145.71537781]
[153.78150940 159.16636658]
[142.11280823 168.59193420]
[127.56653595 172.25335693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[9 15]
[10 14]
[23 85]
[24 84]
[25 83]
[26 82]
[27 81]
[28 80]
[30 78]
[31 77]
[32 76]
[33 74]
[34 73]
[35 72]
[36 71]
[37 69]
[38 68]
[40 66]
[41 65]
[42 64]
[43 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[86 169]
[87 168]
[88 167]
[89 166]
[90 165]
[91 164]
[92 141]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[99 135]
[100 134]
[101 133]
[102 132]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[111 124]
[112 123]
[113 122]
[143 163]
[144 162]
[145 161]
[146 160]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
