%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUGUCCGCAUGCGCGACUGAGCCGGGUGGAUGGUACUGCUGCAUCCGGGUGUCUGGAGGCUGUGGCCGUUUUGUUUUCUUGGCUAAAAUCGGGGGAGUGAGGCGGGCCGGCGCGGCGCGACACCGGGCUCCGGAACCACUGCACGACGGGGCUGGACUGACCUGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[231.53128052 350.77462769]
[244.54722595 343.31906128]
[259.16629028 339.96008301]
[274.13113403 340.98660278]
[288.15264893 346.30920410]
[278.60391235 334.74108887]
[269.05514526 323.17297363]
[259.50637817 311.60485840]
[249.95761108 300.03677368]
[237.92843628 298.56454468]
[229.88017273 288.97387695]
[230.55928040 276.07019043]
[221.22215271 264.33059692]
[211.77882385 252.67626953]
[202.23005676 241.10816956]
[192.68130493 229.54005432]
[183.13253784 217.97195435]
[176.42553711 214.80380249]
[173.51771545 206.10598755]
[164.18058777 194.36639404]
[154.84346008 182.62680054]
[140.86553955 177.48220825]
[138.33079529 161.86537170]
[128.99366760 150.12577820]
[119.65653229 138.38618469]
[110.31940460 126.64659119]
[100.98227692 114.90699768]
[105.71279144 129.14154053]
[103.01298523 143.89657593]
[93.54859161 155.53381348]
[79.65332794 161.18374634]
[64.75348663 159.45320129]
[52.52306747 150.76892090]
[45.97783661 137.27226257]
[46.73171616 122.29121399]
[54.59881592 109.51981354]
[67.63927460 102.10721588]
[82.63638306 101.88094330]
[68.47492218 96.93593597]
[54.31346130 91.99093628]
[40.15200424 87.04593658]
[24.57256508 89.80123901]
[15.10751343 78.30071259]
[0.94605362 73.35571289]
[-14.63338375 76.11101532]
[-24.09843636 64.61049652]
[-38.25989532 59.66549301]
[-52.42135620 54.72048950]
[-66.58281708 49.77548599]
[-80.74427795 44.83048248]
[-96.74583435 48.41964722]
[-107.65437317 36.17481613]
[-102.24811554 20.69242477]
[-86.08856201 17.89942932]
[-75.79927063 30.66902351]
[-61.63781357 35.61402512]
[-47.47635269 40.55902863]
[-33.31489182 45.50403214]
[-19.15343285 50.44903564]
[-4.58691835 47.34002686]
[5.89105606 59.19425201]
[20.05251694 64.13925171]
[34.61903000 61.03025055]
[45.09700394 72.88447571]
[59.25846481 77.82947540]
[73.41992188 82.77447510]
[87.58138275 87.71948242]
[99.96765900 79.25896454]
[100.51232147 64.26885986]
[101.05698395 49.27875137]
[101.60165405 34.28864288]
[102.14631653 19.29853439]
[102.69097900 4.30842590]
[103.23564911 -10.68168259]
[103.78031158 -25.67179108]
[104.32497406 -40.66189957]
[104.86964417 -55.65200806]
[105.41430664 -70.64211273]
[105.95896912 -85.63222504]
[106.50363922 -100.62232971]
[107.04830170 -115.61244202]
[107.59296417 -130.60255432]
[108.13763428 -145.59265137]
[108.68229675 -160.58276367]
[97.73794556 -171.98437500]
[98.14479828 -187.78341675]
[109.66148376 -198.60661316]
[125.45535278 -198.03274536]
[136.15617371 -186.40228271]
[135.41535950 -170.61537170]
[123.67240906 -160.03810120]
[123.12773895 -145.04798889]
[122.58307648 -130.05787659]
[122.03840637 -115.06777191]
[121.49374390 -100.07766724]
[120.94908142 -85.08755493]
[120.40441132 -70.09745026]
[119.85974884 -55.10734177]
[119.31508636 -40.11723328]
[118.77041626 -25.12712479]
[118.22575378 -10.13701725]
[117.68109131 4.85309076]
[117.13642120 19.84319878]
[116.59175873 34.83330536]
[116.04709625 49.82341385]
[115.50242615 64.81352234]
[114.95776367 79.80363464]
[118.85261536 94.97823334]
[112.72187042 105.56987000]
[122.05899811 117.30946350]
[131.39613342 129.04905701]
[140.73326111 140.78865051]
[150.07038879 152.52824402]
[164.71617126 158.51252747]
[166.58305359 173.28967285]
[175.92018127 185.02926636]
[185.25730896 196.76885986]
[194.70065308 208.42318726]
[204.24940491 219.99130249]
[213.79817200 231.55940247]
[223.34692383 243.12751770]
[231.25292969 247.77539062]
[232.96174622 254.99348450]
[242.29887390 266.73306274]
[259.57318115 273.06329346]
[261.52572632 290.48800659]
[271.07449341 302.05612183]
[280.62326050 313.62420654]
[290.17199707 325.19232178]
[299.72076416 336.76043701]
[311.11358643 346.51766968]
[324.01220703 354.17440796]
[336.91085815 361.83111572]
[349.80947876 369.48782349]
[362.70812988 377.14453125]
[377.84268188 373.45907593]
[390.81466675 381.40783691]
[394.23489380 395.85903931]
[407.13354492 403.51574707]
[420.48727417 395.92803955]
[435.84567261 396.04977417]
[449.07742310 403.84823608]
[456.62326050 417.22567749]
[456.45336914 432.58364868]
[448.61346436 445.79089355]
[435.21243286 453.29473877]
[419.85510254 453.07672119]
[406.67248535 445.19546509]
[399.21066284 431.77096558]
[399.47683716 416.41439819]
[386.57818604 408.75765991]
[372.25390625 412.67562866]
[359.06378174 405.09436035]
[355.05142212 390.04318237]
[342.15277100 382.38644409]
[329.25415039 374.72973633]
[316.35549927 367.07302856]
[303.45687866 359.41632080]
[310.87271118 372.45492554]
[314.18713379 387.08416748]
[313.11502075 402.04580688]
[307.74859619 416.05300903]
[298.54946899 427.90103149]
[286.30877686 436.57083130]
[272.07934570 441.31674194]
[257.08505249 441.73059082]
[242.61553955 437.77673340]
[229.91528320 429.79528809]
[220.07664490 418.47268677]
[213.94581604 404.78280640]
[212.05010986 389.90307617]
[214.55256653 375.11328125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 130]
[6 129]
[7 128]
[8 127]
[9 126]
[12 124]
[13 123]
[14 121]
[15 120]
[16 119]
[17 118]
[19 117]
[20 116]
[21 115]
[23 113]
[24 112]
[25 111]
[26 110]
[27 109]
[38 67]
[39 66]
[40 65]
[41 64]
[43 62]
[44 61]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[131 158]
[132 157]
[133 156]
[134 155]
[135 154]
[138 151]
[139 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
