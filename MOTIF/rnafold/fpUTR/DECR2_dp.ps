%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DECR2)
} def

/sequence { (\
AGUGGGGCGGGGCUCCCGGUUCCAGGCGAGUUCGCAGCUGCGCGCCGGGUCCUGGAGGCCGAGGCCGCUCCCGCCCGUUGUCCCCGCAGUCCCCGACGGGAGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 79 0.115647952 ubox
2 74 0.075065305 ubox
2 78 0.128825755 ubox
2 81 0.028265136 ubox
2 87 0.054227731 ubox
2 103 0.016557567 ubox
2 105 0.114342373 ubox
3 73 0.075572187 ubox
3 77 0.096267593 ubox
3 80 0.027919827 ubox
3 86 0.054273707 ubox
3 102 0.015769790 ubox
3 104 0.113655705 ubox
4 16 0.003767415 ubox
4 71 0.013221033 ubox
4 72 0.075884893 ubox
4 76 0.112557578 ubox
4 79 0.026060675 ubox
4 82 0.017584252 ubox
4 83 0.017888983 ubox
4 84 0.021257083 ubox
4 85 0.062189388 ubox
4 103 0.110447315 ubox
4 106 0.017059717 ubox
5 15 0.003780102 ubox
5 70 0.014794645 ubox
5 71 0.075605420 ubox
5 75 0.093151202 ubox
5 76 0.987910175 ubox
5 82 0.012809288 ubox
5 83 0.018581114 ubox
5 84 0.054151164 ubox
5 105 0.006053983 ubox
6 14 0.003778055 ubox
6 66 0.004898780 ubox
6 69 0.016172324 ubox
6 70 0.075309778 ubox
6 74 0.068355438 ubox
6 75 0.991481891 ubox
6 76 0.005169686 ubox
6 82 0.015190977 ubox
6 83 0.044633147 ubox
7 13 0.003816186 ubox
7 65 0.005001372 ubox
7 68 0.076365482 ubox
7 69 0.009776613 ubox
7 74 0.994043192 ubox
7 75 0.004013842 ubox
7 81 0.010513855 ubox
7 82 0.032402999 ubox
8 12 0.003788930 ubox
8 64 0.004998456 ubox
8 67 0.076821407 ubox
8 73 0.996446136 ubox
8 77 0.007802046 ubox
8 80 0.016393282 ubox
9 66 0.076042291 ubox
9 71 0.089515740 ubox
9 72 0.992793221 ubox
9 76 0.007819243 ubox
9 79 0.011644451 ubox
10 60 0.016230296 ubox
10 65 0.074810875 ubox
10 66 0.009727008 ubox
10 68 0.003246832 ubox
10 70 0.123768296 ubox
10 71 0.989075263 ubox
10 75 0.007617971 ubox
10 76 0.012100377 ubox
10 78 0.003243466 ubox
11 59 0.019774416 ubox
11 60 0.083166294 ubox
11 65 0.012894800 ubox
11 66 0.036024626 ubox
11 69 0.150276512 ubox
11 70 0.983632671 ubox
11 74 0.005365941 ubox
11 75 0.012191743 ubox
12 59 0.083332448 ubox
12 65 0.050176488 ubox
12 68 0.984658760 ubox
12 69 0.134836455 ubox
12 74 0.012220552 ubox
13 57 0.034729875 ubox
13 58 0.079063798 ubox
13 63 0.017684142 ubox
13 64 0.050172576 ubox
13 67 0.989687917 ubox
13 73 0.012215323 ubox
14 56 0.110021524 ubox
14 57 0.071440337 ubox
14 62 0.017633535 ubox
14 63 0.033540415 ubox
14 64 0.109885252 ubox
15 49 0.008713708 ubox
15 55 0.114797877 ubox
15 57 0.015415794 ubox
15 61 0.014789184 ubox
15 63 0.136085303 ubox
15 64 0.974101850 ubox
16 48 0.008796504 ubox
16 54 0.114102690 ubox
16 55 0.104783859 ubox
16 63 0.975202147 ubox
16 64 0.054560179 ubox
17 47 0.008818808 ubox
17 54 0.105633585 ubox
17 61 0.985824335 ubox
17 63 0.049148849 ubox
18 46 0.008819809 ubox
18 52 0.115535762 ubox
18 53 0.103897717 ubox
18 60 0.987675870 ubox
19 45 0.008818092 ubox
19 51 0.115614474 ubox
19 52 0.103848036 ubox
19 59 0.987301156 ubox
20 44 0.008679502 ubox
20 49 0.005525948 ubox
20 56 0.003724002 ubox
20 57 0.658865462 ubox
20 58 0.728434213 ubox
21 48 0.003540758 ubox
21 49 0.085807279 ubox
21 56 0.936405751 ubox
21 57 0.292715230 ubox
21 58 0.004226270 ubox
22 47 0.003431174 ubox
22 48 0.109566848 ubox
22 49 0.110372681 ubox
22 55 0.987660511 ubox
23 40 0.006516347 ubox
23 47 0.109193204 ubox
23 48 0.109955389 ubox
23 54 0.987742130 ubox
24 39 0.006533475 ubox
24 53 0.987483943 ubox
25 38 0.006449038 ubox
25 46 0.157135931 ubox
25 51 0.050387343 ubox
25 52 0.986099579 ubox
25 53 0.003519702 ubox
26 35 0.009837628 ubox
26 43 0.011614633 ubox
26 45 0.158042184 ubox
26 50 0.070615579 ubox
26 51 0.983739072 ubox
26 52 0.007076561 ubox
27 34 0.010150535 ubox
27 42 0.014176149 ubox
27 44 0.158519000 ubox
27 47 0.857348706 ubox
27 49 0.443248785 ubox
28 33 0.010179016 ubox
28 41 0.014301965 ubox
28 43 0.157981246 ubox
28 46 0.868997215 ubox
28 51 0.020802039 ubox
29 39 0.024920254 ubox
29 50 0.034027257 ubox
30 38 0.025224009 ubox
30 41 0.106333319 ubox
30 43 0.031533511 ubox
30 45 0.959246629 ubox
30 50 0.020891225 ubox
31 37 0.024988048 ubox
31 40 0.106171089 ubox
31 42 0.020009548 ubox
31 44 0.947844779 ubox
31 48 0.033304010 ubox
31 49 0.037289073 ubox
32 36 0.019087117 ubox
32 47 0.027734410 ubox
32 48 0.046799624 ubox
33 40 0.011703017 ubox
33 42 0.971773168 ubox
33 44 0.188575906 ubox
33 47 0.047993122 ubox
34 39 0.008391235 ubox
34 41 0.973406399 ubox
34 43 0.192287799 ubox
34 45 0.032258486 ubox
34 46 0.044227149 ubox
35 40 0.972019431 ubox
35 42 0.192138846 ubox
35 44 0.036774190 ubox
37 43 0.049000267 ubox
37 45 0.017351140 ubox
37 50 0.006167451 ubox
38 42 0.048660943 ubox
38 44 0.017410243 ubox
38 48 0.003440209 ubox
38 49 0.006308473 ubox
39 47 0.003480154 ubox
39 48 0.006133083 ubox
40 46 0.003474769 ubox
41 47 0.003483019 ubox
42 46 0.003323729 ubox
42 50 0.003465289 ubox
43 49 0.004056573 ubox
54 71 0.003590266 ubox
55 70 0.003614293 ubox
56 69 0.003507964 ubox
57 66 0.129638485 ubox
58 65 0.130163635 ubox
58 68 0.003986383 ubox
59 64 0.130095788 ubox
59 67 0.003538025 ubox
60 67 0.003560295 ubox
61 66 0.004225872 ubox
61 70 0.045932820 ubox
61 76 0.005428410 ubox
62 69 0.046107115 ubox
63 68 0.046072998 ubox
63 75 0.007677039 ubox
63 106 0.005795423 ubox
64 74 0.007705082 ubox
64 105 0.005845154 ubox
65 73 0.007336723 ubox
65 104 0.004133315 ubox
66 73 0.003207632 ubox
66 104 0.004272521 ubox
67 72 0.004040946 ubox
67 74 0.004309066 ubox
67 103 0.007866566 ubox
68 73 0.004319079 ubox
68 102 0.007877185 ubox
69 101 0.007876597 ubox
70 100 0.007862353 ubox
71 99 0.007854115 ubox
72 98 0.007844818 ubox
72 104 0.005873259 ubox
73 97 0.007703705 ubox
73 103 0.006217966 ubox
74 100 0.014531126 ubox
74 102 0.004827634 ubox
75 99 0.018094967 ubox
76 95 0.006871994 ubox
76 98 0.018175762 ubox
76 104 0.020127248 ubox
77 85 0.043596853 ubox
77 87 0.022522721 ubox
77 90 0.010779218 ubox
77 94 0.006885782 ubox
77 97 0.018380002 ubox
77 103 0.067192330 ubox
77 105 0.370907345 ubox
78 86 0.020648384 ubox
78 89 0.074188028 ubox
78 96 0.018376581 ubox
78 102 0.066079782 ubox
78 104 0.344702614 ubox
79 86 0.012148579 ubox
79 88 0.101200421 ubox
79 95 0.018300971 ubox
79 98 0.003755774 ubox
79 101 0.041621744 ubox
79 104 0.230146336 ubox
80 85 0.062846471 ubox
80 87 0.105098139 ubox
80 94 0.018038959 ubox
80 97 0.004443222 ubox
80 103 0.319141550 ubox
80 105 0.039023836 ubox
81 86 0.099260157 ubox
81 96 0.004453089 ubox
81 99 0.005674538 ubox
81 100 0.006543418 ubox
81 101 0.333777592 ubox
81 102 0.308196065 ubox
81 104 0.029276938 ubox
82 95 0.004439223 ubox
82 98 0.005658793 ubox
82 99 0.007425190 ubox
82 100 0.334603656 ubox
83 98 0.007462932 ubox
83 99 0.331185239 ubox
83 100 0.325044935 ubox
84 98 0.327334326 ubox
84 99 0.328833032 ubox
84 100 0.006403595 ubox
85 95 0.102768229 ubox
85 98 0.332226595 ubox
85 99 0.006463617 ubox
85 104 0.436145286 ubox
86 94 0.103133657 ubox
86 97 0.305836370 ubox
86 103 0.452846326 ubox
86 105 0.744987827 ubox
87 102 0.451561730 ubox
87 104 0.746165008 ubox
89 97 0.317450801 ubox
89 103 0.157429842 ubox
89 105 0.009992658 ubox
90 96 0.333383063 ubox
90 99 0.007472912 ubox
90 100 0.034914905 ubox
90 101 0.863240547 ubox
90 102 0.108192433 ubox
90 104 0.008216071 ubox
91 95 0.330852863 ubox
91 98 0.007494336 ubox
91 99 0.035809839 ubox
91 100 0.878477577 ubox
92 98 0.035819787 ubox
92 99 0.878273766 ubox
92 100 0.090969670 ubox
93 98 0.875636414 ubox
93 99 0.093100468 ubox
93 100 0.013049198 ubox
94 98 0.094425268 ubox
94 99 0.013236311 ubox
98 106 0.003461995 ubox
99 105 0.003493400 ubox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
8 73 0.9500000 lbox
9 72 0.9500000 lbox
10 71 0.9500000 lbox
11 70 0.9500000 lbox
12 68 0.9500000 lbox
13 67 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
17 61 0.9500000 lbox
18 60 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
26 51 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
86 105 0.9500000 lbox
87 104 0.9500000 lbox
90 101 0.9500000 lbox
91 100 0.9500000 lbox
92 99 0.9500000 lbox
93 98 0.9500000 lbox
showpage
end
%%EOF
