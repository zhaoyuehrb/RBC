%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALDOB)
} def

/sequence { (\
AUCUGUCUUAUUUGGCAGCUGCUGCCUCACCCACAGCUUUUGAUAUCUAGGAGGACUCUUCUCUCCCAAACUACCUGUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 44 0.028785596 ubox
1 46 0.004590874 ubox
1 78 0.006222707 ubox
2 10 0.003216698 ubox
2 15 0.003643109 ubox
2 43 0.030701126 ubox
2 45 0.005177029 ubox
2 52 0.005817997 ubox
2 55 0.006423144 ubox
2 77 0.006474014 ubox
3 14 0.005116512 ubox
3 15 0.004443544 ubox
3 18 0.639185218 ubox
3 36 0.668857051 ubox
3 42 0.029534443 ubox
3 50 0.004888447 ubox
3 51 0.006255123 ubox
3 54 0.007032847 ubox
4 10 0.005827857 ubox
4 14 0.004469371 ubox
4 17 0.671446575 ubox
4 29 0.004367369 ubox
4 33 0.010944010 ubox
4 35 0.679795136 ubox
4 45 0.015905736 ubox
4 49 0.005841863 ubox
4 50 0.006211491 ubox
4 53 0.006398508 ubox
4 68 0.005357084 ubox
4 80 0.007239583 ubox
5 9 0.005309884 ubox
5 11 0.005743497 ubox
5 13 0.005327112 ubox
5 16 0.701036339 ubox
5 28 0.004877850 ubox
5 30 0.007271925 ubox
5 32 0.012975583 ubox
5 34 0.681599700 ubox
5 37 0.027933327 ubox
5 44 0.017399234 ubox
5 48 0.005235087 ubox
5 56 0.009262885 ubox
5 67 0.005592600 ubox
5 71 0.005611892 ubox
5 74 0.005208196 ubox
5 79 0.007824428 ubox
5 81 0.009688409 ubox
6 10 0.005654595 ubox
6 15 0.700096751 ubox
6 29 0.007130284 ubox
6 33 0.657549412 ubox
6 36 0.025525408 ubox
6 43 0.017506838 ubox
6 52 0.010684311 ubox
6 55 0.009278460 ubox
6 70 0.005270546 ubox
6 73 0.004967006 ubox
6 80 0.008447898 ubox
7 14 0.699183991 ubox
7 15 0.033005914 ubox
7 36 0.013254841 ubox
7 42 0.017485616 ubox
7 51 0.011479540 ubox
7 54 0.009273657 ubox
8 14 0.032905279 ubox
8 35 0.012863678 ubox
8 49 0.003255108 ubox
8 50 0.011494056 ubox
8 53 0.009062740 ubox
9 45 0.022272970 ubox
9 49 0.012139210 ubox
9 52 0.008694840 ubox
9 73 0.005297625 ubox
10 44 0.023453922 ubox
10 48 0.011985758 ubox
10 72 0.005588157 ubox
11 43 0.023272849 ubox
11 51 0.006767701 ubox
11 70 0.015025297 ubox
12 42 0.022495567 ubox
12 43 0.011091241 ubox
12 50 0.007920933 ubox
12 69 0.017946990 ubox
13 24 0.004151401 ubox
13 29 0.011809223 ubox
13 33 0.003400296 ubox
13 42 0.012290592 ubox
13 45 0.011117737 ubox
13 49 0.008678059 ubox
13 68 0.018536912 ubox
13 80 0.122102245 ubox
14 23 0.006591192 ubox
14 26 0.696807262 ubox
14 27 0.004236360 ubox
14 28 0.006833426 ubox
14 32 0.003856901 ubox
14 40 0.014163355 ubox
14 41 0.014694864 ubox
14 44 0.008892839 ubox
14 48 0.008772515 ubox
14 67 0.018542302 ubox
14 75 0.006847279 ubox
14 79 0.137797149 ubox
14 82 0.006281847 ubox
15 22 0.006803956 ubox
15 25 0.697397898 ubox
15 26 0.003699011 ubox
15 31 0.003744165 ubox
15 39 0.015038528 ubox
15 40 0.017153418 ubox
15 47 0.008772084 ubox
15 66 0.016839468 ubox
15 74 0.006830354 ubox
15 78 0.137907939 ubox
15 81 0.006321925 ubox
16 21 0.006802517 ubox
16 24 0.697403923 ubox
16 42 0.021149678 ubox
16 77 0.137956507 ubox
17 23 0.695678293 ubox
17 38 0.190482998 ubox
17 39 0.009166178 ubox
17 40 0.006217673 ubox
17 41 0.021955749 ubox
17 76 0.133830287 ubox
18 22 0.680430762 ubox
18 25 0.020678062 ubox
18 37 0.265332945 ubox
18 38 0.005129514 ubox
18 39 0.010922720 ubox
18 40 0.026202638 ubox
18 71 0.003488142 ubox
18 75 0.129413589 ubox
18 78 0.004731032 ubox
19 24 0.021977210 ubox
19 36 0.273338750 ubox
19 77 0.008092560 ubox
20 29 0.006127582 ubox
20 33 0.003331464 ubox
20 35 0.273338463 ubox
20 42 0.005088470 ubox
20 73 0.034261593 ubox
20 80 0.003634658 ubox
21 28 0.006876048 ubox
21 32 0.004177921 ubox
21 34 0.273093470 ubox
21 37 0.658680955 ubox
21 72 0.005323649 ubox
22 36 0.659813425 ubox
23 29 0.022058726 ubox
23 33 0.240782987 ubox
23 35 0.659452277 ubox
24 28 0.022829693 ubox
24 32 0.241149215 ubox
24 34 0.657416488 ubox
24 37 0.019301625 ubox
25 36 0.018980514 ubox
26 36 0.005052644 ubox
27 35 0.006159901 ubox
27 43 0.013050784 ubox
28 42 0.013947648 ubox
29 41 0.012756406 ubox
29 78 0.003169791 ubox
30 77 0.003320561 ubox
32 42 0.007902137 ubox
32 77 0.006188114 ubox
33 41 0.007442171 ubox
33 76 0.006012881 ubox
33 78 0.088976185 ubox
34 42 0.012378930 ubox
34 77 0.095163958 ubox
35 41 0.012221604 ubox
35 72 0.007413516 ubox
35 76 0.095176288 ubox
36 40 0.008488982 ubox
36 71 0.007983610 ubox
36 75 0.094865255 ubox
36 78 0.010251857 ubox
37 50 0.005152899 ubox
37 51 0.003217197 ubox
37 53 0.020565364 ubox
37 54 0.006404678 ubox
37 77 0.015042384 ubox
38 49 0.008378800 ubox
38 50 0.003484026 ubox
38 52 0.021329605 ubox
38 53 0.006629711 ubox
38 69 0.004259282 ubox
38 70 0.011077797 ubox
39 49 0.008113704 ubox
39 50 0.003329712 ubox
39 51 0.021399160 ubox
39 52 0.007083739 ubox
39 68 0.004113233 ubox
39 69 0.011333713 ubox
39 70 0.127333906 ubox
40 49 0.015726464 ubox
40 50 0.021705932 ubox
40 51 0.007125114 ubox
40 68 0.009441174 ubox
40 69 0.145666868 ubox
40 70 0.011897423 ubox
41 49 0.030950139 ubox
41 50 0.007252015 ubox
41 68 0.149584511 ubox
41 69 0.012549029 ubox
41 73 0.013036969 ubox
41 77 0.003435101 ubox
41 80 0.813656571 ubox
42 48 0.030807550 ubox
42 63 0.003370141 ubox
42 65 0.007040328 ubox
42 67 0.150143712 ubox
42 72 0.013381134 ubox
42 76 0.004081229 ubox
42 79 0.918075425 ubox
43 64 0.006576355 ubox
43 78 0.917978847 ubox
44 73 0.033144513 ubox
44 77 0.915171513 ubox
45 72 0.041306696 ubox
45 76 0.891748255 ubox
45 78 0.004693618 ubox
46 52 0.003365492 ubox
46 55 0.004671088 ubox
46 77 0.005427904 ubox
47 51 0.003584810 ubox
47 54 0.004833864 ubox
48 53 0.004605285 ubox
48 73 0.862907191 ubox
48 77 0.049117497 ubox
49 59 0.003272607 ubox
49 60 0.010417386 ubox
49 62 0.068318869 ubox
49 64 0.017448565 ubox
49 72 0.871456054 ubox
49 76 0.069810903 ubox
50 58 0.003345405 ubox
50 59 0.012064848 ubox
50 61 0.072601456 ubox
50 62 0.030222216 ubox
50 63 0.017957457 ubox
50 64 0.145581444 ubox
50 65 0.032757552 ubox
50 66 0.674737797 ubox
50 67 0.101352520 ubox
50 71 0.702917789 ubox
50 72 0.018324300 ubox
50 75 0.075060606 ubox
50 79 0.003202358 ubox
50 82 0.013730164 ubox
51 58 0.013058064 ubox
51 60 0.074605561 ubox
51 61 0.053232323 ubox
51 62 0.003652012 ubox
51 63 0.267031982 ubox
51 64 0.008620479 ubox
51 65 0.734025223 ubox
51 66 0.097900552 ubox
51 71 0.020299383 ubox
51 74 0.074435745 ubox
51 81 0.013843507 ubox
52 57 0.012224163 ubox
52 59 0.074854484 ubox
52 60 0.053146741 ubox
52 62 0.267660602 ubox
52 64 0.735083218 ubox
52 72 0.064121197 ubox
52 76 0.005582012 ubox
53 58 0.074693679 ubox
53 59 0.052847604 ubox
53 61 0.267725744 ubox
53 62 0.073827333 ubox
53 63 0.730230854 ubox
53 64 0.092145299 ubox
53 65 0.026332914 ubox
53 66 0.567596264 ubox
53 67 0.192991224 ubox
53 71 0.061845726 ubox
53 72 0.018166702 ubox
53 75 0.006008755 ubox
54 58 0.052247867 ubox
54 59 0.010220790 ubox
54 60 0.258443523 ubox
54 61 0.609500456 ubox
54 62 0.366839833 ubox
54 63 0.108709983 ubox
54 64 0.009487670 ubox
54 65 0.570631487 ubox
54 66 0.186320929 ubox
54 71 0.018545090 ubox
54 74 0.005988476 ubox
54 79 0.024221286 ubox
55 59 0.221429246 ubox
55 60 0.551537421 ubox
55 62 0.111318454 ubox
55 64 0.563516440 ubox
55 78 0.024273474 ubox
56 77 0.024276551 ubox
59 70 0.003676639 ubox
60 69 0.003746085 ubox
67 77 0.046980587 ubox
68 76 0.045503914 ubox
70 78 0.119282751 ubox
71 77 0.127272095 ubox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
5 34 0.9500000 lbox
6 33 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
18 22 0.9500000 lbox
41 80 0.9500000 lbox
42 79 0.9500000 lbox
43 78 0.9500000 lbox
44 77 0.9500000 lbox
45 76 0.9500000 lbox
48 73 0.9500000 lbox
49 72 0.9500000 lbox
50 71 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
showpage
end
%%EOF
