%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MAP6)
} def

/sequence { (\
AAGAUUAUAGAGACUUGCUUUAGAACCACAAGAAGAAAGAGGAGGCCGGCUUUUCAGCUAGCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.061228773 ubox
1 20 0.017842368 ubox
1 21 0.005788239 ubox
2 15 0.069873176 ubox
2 16 0.008296053 ubox
2 19 0.022714535 ubox
2 20 0.005997977 ubox
2 21 0.019803407 ubox
2 59 0.131266303 ubox
3 14 0.071036954 ubox
3 15 0.008234047 ubox
3 16 0.005871838 ubox
3 18 0.023210295 ubox
3 19 0.005239160 ubox
3 20 0.021843180 ubox
3 21 0.011307909 ubox
3 54 0.003174695 ubox
3 55 0.044975749 ubox
3 58 0.135944202 ubox
3 65 0.132452646 ubox
4 15 0.006302429 ubox
4 19 0.021816029 ubox
4 20 0.011457515 ubox
4 54 0.044719262 ubox
4 64 0.132729806 ubox
5 11 0.034057670 ubox
5 12 0.030850679 ubox
5 13 0.057415822 ubox
5 23 0.033677328 ubox
5 24 0.107417120 ubox
5 25 0.227133730 ubox
5 31 0.005906115 ubox
5 32 0.003544268 ubox
5 33 0.006873892 ubox
5 34 0.007275928 ubox
5 36 0.005779252 ubox
5 37 0.007654495 ubox
5 38 0.006276046 ubox
5 39 0.004422287 ubox
5 40 0.015662401 ubox
5 41 0.020669943 ubox
5 42 0.004503420 ubox
5 43 0.016036047 ubox
5 44 0.009759076 ubox
5 57 0.088013809 ubox
5 61 0.009775819 ubox
5 63 0.124486016 ubox
6 10 0.032379686 ubox
6 11 0.035062753 ubox
6 12 0.059056862 ubox
6 17 0.028754074 ubox
6 22 0.045342215 ubox
6 23 0.101744013 ubox
6 24 0.207471550 ubox
6 30 0.005260456 ubox
6 31 0.003851917 ubox
6 32 0.006188696 ubox
6 33 0.007595719 ubox
6 35 0.005392228 ubox
6 36 0.008215118 ubox
6 37 0.006329565 ubox
6 38 0.005734997 ubox
6 39 0.015430921 ubox
6 40 0.026255051 ubox
6 41 0.007150154 ubox
6 42 0.017018708 ubox
6 43 0.012202787 ubox
6 44 0.005012534 ubox
6 56 0.088578063 ubox
6 60 0.013165223 ubox
7 16 0.030830311 ubox
7 21 0.043623469 ubox
7 59 0.012507437 ubox
7 64 0.010474028 ubox
8 17 0.019743972 ubox
8 22 0.503105089 ubox
8 60 0.104005446 ubox
8 63 0.010597169 ubox
9 15 0.023955267 ubox
9 16 0.021645509 ubox
9 19 0.041258884 ubox
9 20 0.007791035 ubox
9 21 0.529705326 ubox
9 51 0.010209593 ubox
9 52 0.004699013 ubox
9 53 0.159019606 ubox
9 54 0.016450318 ubox
9 59 0.105089659 ubox
10 14 0.025274038 ubox
10 15 0.018247280 ubox
10 16 0.007385745 ubox
10 18 0.043456017 ubox
10 19 0.007903196 ubox
10 20 0.537285849 ubox
10 21 0.025838365 ubox
10 50 0.010489182 ubox
10 51 0.003346836 ubox
10 52 0.172105667 ubox
10 53 0.019461732 ubox
10 54 0.019471759 ubox
10 55 0.039569515 ubox
10 58 0.104168328 ubox
10 65 0.130127969 ubox
11 15 0.007019018 ubox
11 19 0.538618651 ubox
11 20 0.026374520 ubox
11 21 0.015822730 ubox
11 51 0.174851736 ubox
11 52 0.019680809 ubox
11 53 0.024604857 ubox
11 54 0.039341496 ubox
11 59 0.018027350 ubox
11 64 0.130780716 ubox
12 18 0.537452893 ubox
12 19 0.022880423 ubox
12 20 0.017158435 ubox
12 21 0.011436325 ubox
12 50 0.175178288 ubox
12 51 0.017780645 ubox
12 52 0.025778179 ubox
12 53 0.038377238 ubox
12 54 0.003948937 ubox
12 55 0.019377020 ubox
12 58 0.018521864 ubox
12 65 0.045649875 ubox
13 19 0.016421378 ubox
13 20 0.010982530 ubox
13 51 0.026450725 ubox
13 52 0.035025383 ubox
13 53 0.004143251 ubox
13 54 0.018686262 ubox
13 64 0.043619750 ubox
14 23 0.059445612 ubox
14 32 0.284723568 ubox
14 35 0.121204768 ubox
14 39 0.555581514 ubox
14 41 0.229578805 ubox
14 42 0.115263345 ubox
14 44 0.245923680 ubox
14 45 0.107734615 ubox
14 49 0.180469377 ubox
14 57 0.012649600 ubox
14 61 0.137971095 ubox
15 22 0.058806001 ubox
15 23 0.009554518 ubox
15 24 0.019180113 ubox
15 25 0.010809368 ubox
15 31 0.286336000 ubox
15 32 0.005277575 ubox
15 33 0.006128235 ubox
15 34 0.121727917 ubox
15 35 0.016027249 ubox
15 36 0.016429186 ubox
15 37 0.045707503 ubox
15 38 0.558421022 ubox
15 39 0.023788994 ubox
15 40 0.228712030 ubox
15 41 0.115990060 ubox
15 42 0.022939473 ubox
15 43 0.241731368 ubox
15 44 0.157377899 ubox
15 48 0.177749675 ubox
15 49 0.005595292 ubox
15 56 0.011603930 ubox
15 60 0.129295650 ubox
15 61 0.007414115 ubox
16 22 0.011204530 ubox
16 23 0.020036209 ubox
16 24 0.012644228 ubox
16 28 0.015667142 ubox
16 30 0.286564901 ubox
16 31 0.006212263 ubox
16 32 0.006498938 ubox
16 33 0.120575391 ubox
16 34 0.015031721 ubox
16 35 0.016920440 ubox
16 36 0.053042005 ubox
16 37 0.399009817 ubox
16 38 0.031813282 ubox
16 39 0.217983700 ubox
16 40 0.113932550 ubox
16 41 0.028566233 ubox
16 42 0.230533243 ubox
16 43 0.176708146 ubox
16 44 0.010202214 ubox
16 48 0.008599024 ubox
16 60 0.009359689 ubox
16 63 0.107819450 ubox
17 21 0.009750197 ubox
17 27 0.017913656 ubox
17 29 0.285876918 ubox
17 46 0.186728320 ubox
17 47 0.007733651 ubox
17 50 0.017024248 ubox
17 58 0.143334414 ubox
17 62 0.119731330 ubox
18 32 0.117930102 ubox
18 35 0.604602194 ubox
18 39 0.223192030 ubox
18 41 0.240590553 ubox
18 42 0.047808253 ubox
18 44 0.040602977 ubox
18 45 0.186876851 ubox
18 49 0.017028515 ubox
18 57 0.143557639 ubox
18 61 0.119608706 ubox
19 25 0.046406842 ubox
19 31 0.116778726 ubox
19 32 0.027329971 ubox
19 33 0.036568840 ubox
19 34 0.606127891 ubox
19 35 0.025445617 ubox
19 36 0.094961382 ubox
19 37 0.055643151 ubox
19 38 0.223008655 ubox
19 39 0.029505518 ubox
19 40 0.240914761 ubox
19 41 0.048416171 ubox
19 43 0.041330141 ubox
19 44 0.186339073 ubox
19 48 0.016349509 ubox
19 56 0.140224675 ubox
19 60 0.112442823 ubox
20 24 0.040059975 ubox
20 30 0.106343641 ubox
20 31 0.041923998 ubox
20 32 0.045399324 ubox
20 33 0.602961931 ubox
20 34 0.031309232 ubox
20 35 0.095410318 ubox
20 36 0.060573739 ubox
20 37 0.220162261 ubox
20 38 0.033860527 ubox
20 39 0.238324247 ubox
20 40 0.048687704 ubox
20 41 0.005426510 ubox
20 42 0.040390260 ubox
20 43 0.184336934 ubox
20 44 0.005581476 ubox
20 56 0.008509051 ubox
20 57 0.008556792 ubox
20 60 0.007299948 ubox
20 61 0.007735322 ubox
21 30 0.049084432 ubox
21 31 0.047823973 ubox
21 32 0.587170385 ubox
21 33 0.032445548 ubox
21 34 0.088833530 ubox
21 35 0.061033161 ubox
21 36 0.207764577 ubox
21 37 0.034824130 ubox
21 38 0.217624922 ubox
21 39 0.047657652 ubox
21 40 0.006460110 ubox
21 41 0.037066691 ubox
21 42 0.168579560 ubox
21 43 0.007287125 ubox
21 56 0.009965632 ubox
21 60 0.032222294 ubox
22 51 0.006850186 ubox
22 53 0.058614139 ubox
22 54 0.022499823 ubox
22 59 0.052610882 ubox
23 50 0.006935942 ubox
23 52 0.059370442 ubox
23 53 0.024852833 ubox
23 54 0.005361690 ubox
23 55 0.025808104 ubox
23 58 0.054311835 ubox
23 65 0.010543526 ubox
24 51 0.058744554 ubox
24 52 0.025108541 ubox
24 53 0.005322279 ubox
24 54 0.024803223 ubox
24 64 0.010079069 ubox
25 51 0.024920754 ubox
25 52 0.004422508 ubox
25 53 0.019485387 ubox
26 42 0.192593416 ubox
26 45 0.020949708 ubox
26 49 0.066006132 ubox
27 41 0.194197428 ubox
27 44 0.025398443 ubox
27 48 0.066016258 ubox
30 52 0.005404813 ubox
31 51 0.005624452 ubox
31 54 0.014028138 ubox
31 59 0.090524859 ubox
32 50 0.005634717 ubox
32 53 0.017682789 ubox
32 55 0.040276200 ubox
32 58 0.092461126 ubox
32 65 0.011837791 ubox
33 52 0.018769644 ubox
33 54 0.039522234 ubox
33 64 0.011613341 ubox
34 51 0.018937859 ubox
34 53 0.037184946 ubox
34 54 0.005700053 ubox
34 59 0.073046266 ubox
35 50 0.018991036 ubox
35 52 0.034373062 ubox
35 53 0.007081722 ubox
35 54 0.035972065 ubox
35 55 0.099156646 ubox
35 58 0.074709004 ubox
35 65 0.009225412 ubox
36 51 0.031908448 ubox
36 52 0.007411774 ubox
36 53 0.045337837 ubox
36 54 0.089140247 ubox
36 64 0.008662088 ubox
37 51 0.007135810 ubox
37 52 0.051708619 ubox
37 53 0.076133939 ubox
37 54 0.049366576 ubox
38 51 0.056348824 ubox
38 52 0.060638192 ubox
38 53 0.064680389 ubox
38 54 0.007016513 ubox
38 59 0.023006040 ubox
39 50 0.059946351 ubox
39 51 0.039972536 ubox
39 52 0.077456986 ubox
39 53 0.010702680 ubox
39 54 0.003638392 ubox
39 55 0.275743691 ubox
39 58 0.023065979 ubox
39 65 0.033757289 ubox
40 51 0.085912110 ubox
40 52 0.012012704 ubox
40 53 0.003844606 ubox
40 54 0.276420790 ubox
40 59 0.004159277 ubox
40 64 0.031536495 ubox
41 47 0.086700090 ubox
41 50 0.090557713 ubox
41 51 0.013573080 ubox
41 52 0.003252332 ubox
41 53 0.275816473 ubox
41 54 0.009743565 ubox
41 55 0.009957767 ubox
41 58 0.004240502 ubox
41 65 0.165360510 ubox
42 46 0.085347619 ubox
42 50 0.013992280 ubox
42 52 0.276932115 ubox
42 53 0.014008877 ubox
42 54 0.009510764 ubox
42 55 0.023436069 ubox
42 64 0.165663531 ubox
42 65 0.555670016 ubox
43 51 0.277406014 ubox
43 52 0.016059067 ubox
43 53 0.009091157 ubox
43 54 0.023320960 ubox
43 64 0.533799114 ubox
44 50 0.277298816 ubox
44 51 0.017189157 ubox
44 52 0.008465708 ubox
44 53 0.022647537 ubox
44 55 0.003526843 ubox
44 59 0.034928531 ubox
44 65 0.026158214 ubox
45 50 0.018319823 ubox
45 51 0.006789381 ubox
45 52 0.017854023 ubox
45 54 0.003304158 ubox
45 58 0.036344120 ubox
45 62 0.918309477 ubox
45 64 0.006725157 ubox
46 57 0.036401507 ubox
46 61 0.921475760 ubox
48 55 0.035066067 ubox
48 59 0.910049072 ubox
48 65 0.003360129 ubox
49 54 0.024902123 ubox
49 58 0.927928414 ubox
49 62 0.078637045 ubox
50 57 0.927630770 ubox
50 61 0.078797743 ubox
51 56 0.847346728 ubox
51 57 0.005328369 ubox
51 60 0.078454179 ubox
52 56 0.028390577 ubox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
45 62 0.9500000 lbox
46 61 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
51 56 0.9500000 lbox
showpage
end
%%EOF
