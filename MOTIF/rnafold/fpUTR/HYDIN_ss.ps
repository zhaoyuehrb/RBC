%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGUGGCAACGGACGGCAACAGCUCGGGCGGCGCAUGGAGAGUGCGGGCGGCUUCAAGCUGGGUAUGGAGCCCCUCAGCGGCGGCGGGGUCUGUGAGUUGGACGCGGGGUCUUGGCGGGGAAUGGAGGUAGAAUAAACGUGGGACCCGGAGUGCACCAAGGUGAGAAAAAAAAAUUACUAAAA\
) } def
/len { sequence length } bind def

/coor [
[145.51982117 211.94172668]
[140.28327942 197.88545227]
[135.04673767 183.82919312]
[123.35311127 174.60377502]
[125.78594208 158.97073364]
[120.54940033 144.91445923]
[115.31286621 130.85820007]
[97.54151154 132.40940857]
[82.44384003 125.00945282]
[73.90441132 111.72877502]
[73.50885010 96.96841431]
[59.68749237 91.14002991]
[45.19599152 96.85265350]
[31.26219559 90.74495697]
[25.90538788 76.89431763]
[12.08402920 71.06593323]
[-1.73732853 65.23754883]
[-15.55868626 59.40916443]
[-33.76036072 62.12792587]
[-43.81645584 47.75779724]
[-57.73479080 42.16495132]
[-71.65312195 36.57210159]
[-85.57145691 30.97925568]
[-99.53678131 25.50478554]
[-113.54808044 20.14908981]
[-127.55937958 14.79339314]
[-139.64694214 19.33645058]
[-151.21549988 14.57010078]
[-156.25942993 3.55955529]
[-170.17776489 -2.03329182]
[-185.86769104 0.00058052]
[-194.79229736 -11.92422104]
[-208.71063232 -17.51706886]
[-223.65658569 -18.78915787]
[-238.31991577 -15.62896824]
[-252.98324585 -12.46877956]
[-267.64657593 -9.30858994]
[-277.51922607 3.33696985]
[-293.56225586 3.35850644]
[-303.46884155 -9.26050091]
[-299.63946533 -24.83983040]
[-285.01171875 -31.42835426]
[-270.80676270 -23.97191811]
[-256.14343262 -27.13210869]
[-241.48010254 -30.29229736]
[-226.81677246 -33.45248413]
[-224.53317261 -48.27764130]
[-237.56581116 -55.70398712]
[-250.59843445 -63.13033676]
[-259.62652588 -64.66635132]
[-263.78778076 -70.79505157]
[-276.69241333 -78.44163513]
[-289.59704590 -86.08821869]
[-302.50170898 -93.73480225]
[-315.40634155 -101.38137817]
[-328.31097412 -109.02796173]
[-341.21560669 -116.67454529]
[-357.03228760 -117.05300903]
[-364.03744507 -130.19749451]
[-376.94207764 -137.84407043]
[-393.65087891 -140.71669006]
[-395.51599121 -157.56774902]
[-379.83978271 -164.02478027]
[-369.29550171 -150.74871826]
[-356.39083862 -143.10212708]
[-341.49719238 -143.27059937]
[-333.56903076 -129.57917786]
[-320.66439819 -121.93260193]
[-307.75976562 -114.28601837]
[-294.85510254 -106.63944244]
[-281.95046997 -98.99285889]
[-269.04583740 -91.34627533]
[-256.14117432 -83.69969940]
[-243.17208862 -76.16296387]
[-230.13945007 -68.73661041]
[-217.10682678 -61.31026459]
[-211.09434509 -57.56178665]
[-206.47685242 -52.75726700]
[-203.39898682 -47.32404327]
[-201.88713074 -41.69547272]
[-201.85516357 -36.28034210]
[-203.11778259 -31.43540382]
[-189.19944763 -25.84255600]
[-174.50505066 -28.27646637]
[-164.58491516 -15.95162773]
[-150.66658020 -10.35877991]
[-133.46327209 -13.77517986]
[-122.20368195 0.78209335]
[-108.19238281 6.13779020]
[-94.18108368 11.49348736]
[-86.79362488 10.94360924]
[-79.97861481 17.06092072]
[-66.06027985 22.65376663]
[-52.14194107 28.24661446]
[-38.22360611 33.83946228]
[-26.96348953 29.38041878]
[-15.31347275 33.94406128]
[-9.73030186 45.58780670]
[4.09105635 51.41619110]
[17.91241455 57.24457550]
[31.73377228 63.07295990]
[45.39088058 57.24037552]
[59.49073029 62.95429611]
[65.51587677 77.31867218]
[79.33723450 83.14705658]
[95.49746704 71.08958435]
[117.39277649 73.31374359]
[133.28121948 91.10771179]
[147.29251099 85.75202179]
[161.30381775 80.39632416]
[175.31510925 75.04062653]
[189.32641602 69.68492889]
[203.33770752 64.32923126]
[209.31304932 52.88179016]
[221.11131287 48.71637344]
[232.21351624 53.55519867]
[246.31373596 48.43819809]
[260.41397095 43.32119751]
[259.45635986 28.24606133]
[262.78607178 13.51209354]
[270.13311768 0.31370896]
[280.90197754 -10.27915764]
[294.21960449 -17.40779114]
[309.00640869 -20.49430466]
[324.06372070 -19.28848839]
[338.17089844 -13.88809204]
[350.18432617 -4.73090124]
[359.13015747 7.44075012]
[364.28314209 21.64016151]
[365.22558594 36.71625137]
[361.88110352 51.44686508]
[354.52078247 64.63786316]
[343.74130249 75.21990967]
[330.41653442 82.33515930]
[315.62661743 85.40681458]
[300.57052612 84.18587494]
[286.46878052 78.77130890]
[274.46453857 69.60205078]
[265.53097534 57.42142105]
[251.43074036 62.53842163]
[237.33052063 67.65542603]
[226.79226685 81.67579651]
[208.69340515 78.34053040]
[194.68211365 83.69622803]
[180.67080688 89.05192566]
[166.65951538 94.40762329]
[152.64820862 99.76332092]
[138.63691711 105.11901093]
[153.50064087 107.13632202]
[168.48605347 106.47507477]
[180.55569458 115.38146210]
[184.34306335 129.89544678]
[178.16418457 143.56370544]
[164.76634216 150.30894470]
[150.10662842 147.13203430]
[140.70356750 135.44665527]
[129.36914062 125.62165833]
[134.60566711 139.67791748]
[139.84220886 153.73419189]
[151.91038513 163.96501160]
[149.10301208 178.59265137]
[154.33953857 192.64891052]
[159.57608032 206.70518494]
[174.59577942 205.26609802]
[189.47601318 207.76438904]
[203.20219421 214.02972412]
[214.83845520 223.63491821]
[223.59143066 235.92506409]
[228.86431885 250.06221008]
[230.29760742 265.08245850]
[227.79356384 279.96173096]
[221.52293396 293.68548584]
[211.91325378 305.31805420]
[199.61972046 314.06628418]
[185.48052979 319.33370972]
[170.45973206 320.76119995]
[155.58143616 318.25140381]
[141.86010742 311.97549438]
[130.23124695 302.36129761]
[121.48777008 290.06439209]
[116.22580719 275.92318726]
[114.80411530 260.90182495]
[117.31964111 246.02450562]
[123.60086823 232.30558777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[5 159]
[6 158]
[7 157]
[11 105]
[12 104]
[15 101]
[16 100]
[17 99]
[18 98]
[20 95]
[21 94]
[22 93]
[23 92]
[24 90]
[25 89]
[26 88]
[29 86]
[30 85]
[32 83]
[33 82]
[34 46]
[35 45]
[36 44]
[37 43]
[47 76]
[48 75]
[49 74]
[51 73]
[52 72]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[59 65]
[60 64]
[108 148]
[109 147]
[110 146]
[111 145]
[112 144]
[113 143]
[116 141]
[117 140]
[118 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
