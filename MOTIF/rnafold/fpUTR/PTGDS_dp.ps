%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PTGDS)
} def

/sequence { (\
GCUCCUCCUGCACACCUCCCUCGCUCUCCCACACCACUGGCACCAGGCCCCGGACACCCGCUCUGCUGCAGGAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.022734289 ubox
2 10 0.022746849 ubox
2 74 0.026117175 ubox
3 73 0.025071453 ubox
3 75 0.096469796 ubox
4 72 0.024355054 ubox
4 74 0.082114121 ubox
5 71 0.023948419 ubox
5 74 0.992405304 ubox
6 70 0.021566508 ubox
6 73 0.998866243 ubox
7 72 0.999382186 ubox
8 71 0.999388746 ubox
9 70 0.999157551 ubox
10 24 0.026729383 ubox
10 66 0.012277430 ubox
10 69 0.999134553 ubox
11 23 0.026879577 ubox
11 65 0.012423215 ubox
11 68 0.998519338 ubox
12 64 0.011547549 ubox
12 67 0.925293549 ubox
13 39 0.015983953 ubox
13 65 0.624779615 ubox
13 68 0.005327075 ubox
14 38 0.014666418 ubox
14 64 0.560159583 ubox
14 67 0.010111554 ubox
15 40 0.104268123 ubox
15 47 0.129274147 ubox
15 53 0.047764253 ubox
16 39 0.105011816 ubox
16 40 0.005756001 ubox
16 46 0.130227628 ubox
16 47 0.009159532 ubox
16 52 0.047755473 ubox
16 53 0.009078368 ubox
16 74 0.011626379 ubox
17 39 0.005300354 ubox
17 40 0.004538310 ubox
17 45 0.125547581 ubox
17 46 0.008371882 ubox
17 47 0.010319943 ubox
17 52 0.008295633 ubox
17 53 0.007080972 ubox
17 54 0.314763337 ubox
17 73 0.011660823 ubox
18 39 0.006785524 ubox
18 40 0.031921828 ubox
18 46 0.015423961 ubox
18 47 0.044278101 ubox
18 52 0.008854548 ubox
18 53 0.329110935 ubox
18 72 0.011446597 ubox
19 39 0.031881400 ubox
19 40 0.100247583 ubox
19 46 0.044124031 ubox
19 47 0.232536768 ubox
19 52 0.328557263 ubox
19 53 0.059297058 ubox
19 71 0.011152862 ubox
20 39 0.101485200 ubox
20 40 0.010253799 ubox
20 46 0.236019453 ubox
20 47 0.016727353 ubox
20 52 0.060067703 ubox
20 53 0.016333050 ubox
20 71 0.003753224 ubox
21 39 0.008138226 ubox
21 40 0.020905619 ubox
21 45 0.232111981 ubox
21 46 0.012863049 ubox
21 47 0.033865223 ubox
21 52 0.015803078 ubox
21 53 0.010750280 ubox
21 54 0.011550848 ubox
21 70 0.004269808 ubox
22 39 0.027444012 ubox
22 46 0.049911674 ubox
22 52 0.013367485 ubox
22 53 0.011784187 ubox
22 60 0.066492046 ubox
22 65 0.009823495 ubox
23 38 0.021809210 ubox
23 41 0.388365889 ubox
23 48 0.516245671 ubox
23 51 0.013104021 ubox
23 59 0.066615529 ubox
23 61 0.049184143 ubox
23 64 0.007135822 ubox
23 66 0.127549166 ubox
23 69 0.004503234 ubox
24 40 0.385408803 ubox
24 46 0.084478045 ubox
24 47 0.514950571 ubox
24 53 0.008870509 ubox
24 60 0.048894501 ubox
24 65 0.126968742 ubox
24 68 0.004471475 ubox
25 39 0.295863524 ubox
25 40 0.035001457 ubox
25 45 0.090288693 ubox
25 46 0.435992983 ubox
25 47 0.043054871 ubox
25 52 0.008362378 ubox
25 53 0.003907637 ubox
25 54 0.025866584 ubox
25 75 0.017761289 ubox
26 39 0.217446916 ubox
26 40 0.018185909 ubox
26 46 0.248048662 ubox
26 47 0.008600224 ubox
26 52 0.004621631 ubox
26 53 0.026302887 ubox
26 74 0.021345181 ubox
27 39 0.016891567 ubox
27 40 0.010333195 ubox
27 45 0.239649837 ubox
27 46 0.008579675 ubox
27 47 0.008848853 ubox
27 52 0.024299818 ubox
27 54 0.099893981 ubox
27 73 0.021364061 ubox
28 39 0.017318135 ubox
28 40 0.085125788 ubox
28 46 0.014829180 ubox
28 47 0.016954582 ubox
28 52 0.007318471 ubox
28 53 0.102489809 ubox
28 72 0.021340045 ubox
29 39 0.080874078 ubox
29 40 0.692937696 ubox
29 46 0.017044099 ubox
29 47 0.016663076 ubox
29 52 0.102094116 ubox
29 53 0.036657465 ubox
29 71 0.020967136 ubox
30 39 0.700404244 ubox
30 46 0.016819576 ubox
30 52 0.037333064 ubox
30 65 0.006132383 ubox
31 38 0.632137127 ubox
31 64 0.005553457 ubox
32 39 0.154978141 ubox
32 65 0.005459954 ubox
32 68 0.003537853 ubox
33 38 0.133822583 ubox
33 64 0.004978924 ubox
33 67 0.003397572 ubox
34 40 0.101612780 ubox
34 47 0.050889837 ubox
34 53 0.077242453 ubox
35 39 0.101584377 ubox
35 46 0.048290589 ubox
35 52 0.077415809 ubox
35 65 0.005671319 ubox
36 64 0.005112218 ubox
37 46 0.205077135 ubox
37 47 0.009520610 ubox
37 53 0.028135108 ubox
37 71 0.004720085 ubox
38 45 0.208494093 ubox
38 46 0.008390448 ubox
38 52 0.027237172 ubox
38 70 0.007761097 ubox
39 44 0.208441394 ubox
39 49 0.489464417 ubox
39 50 0.038464419 ubox
39 51 0.020699793 ubox
39 59 0.003212571 ubox
39 67 0.051327316 ubox
39 69 0.005658185 ubox
40 48 0.492937757 ubox
40 49 0.031251444 ubox
40 50 0.019418379 ubox
40 58 0.003204645 ubox
40 61 0.003332796 ubox
40 66 0.096599994 ubox
40 69 0.037217480 ubox
41 47 0.493340217 ubox
41 60 0.003308296 ubox
41 65 0.098810532 ubox
41 68 0.047817189 ubox
42 64 0.094443789 ubox
42 67 0.083783845 ubox
43 53 0.017891034 ubox
44 52 0.017969369 ubox
44 65 0.550038534 ubox
44 68 0.007509541 ubox
45 62 0.028944579 ubox
45 64 0.557748676 ubox
45 67 0.022104405 ubox
46 58 0.008880908 ubox
46 59 0.010808673 ubox
46 61 0.029781938 ubox
46 62 0.122510509 ubox
46 63 0.559113641 ubox
46 64 0.026943612 ubox
46 66 0.025542725 ubox
46 67 0.090856237 ubox
47 57 0.008949044 ubox
47 58 0.010727929 ubox
47 61 0.280871322 ubox
47 62 0.486422181 ubox
47 63 0.040136541 ubox
47 66 0.171716373 ubox
48 60 0.266478374 ubox
48 65 0.172520633 ubox
51 60 0.849955065 ubox
51 65 0.110568921 ubox
52 58 0.165048480 ubox
52 59 0.903647830 ubox
52 62 0.014453209 ubox
52 63 0.020827013 ubox
52 64 0.115562022 ubox
52 67 0.007418407 ubox
53 57 0.163139306 ubox
53 58 0.900719274 ubox
53 61 0.016213451 ubox
53 62 0.019511128 ubox
53 63 0.116701178 ubox
53 66 0.009090160 ubox
54 62 0.111964453 ubox
55 65 0.047984282 ubox
56 64 0.045182462 ubox
59 65 0.027342631 ubox
60 64 0.017751270 ubox
60 66 0.260326883 ubox
60 67 0.003873823 ubox
60 69 0.005737338 ubox
61 65 0.259751857 ubox
61 68 0.006533532 ubox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
12 67 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
51 60 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
