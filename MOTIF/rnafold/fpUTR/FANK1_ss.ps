%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCCACUUCGCCUCCGGGUUGUCAGGGCAACCGUAGCGACGCCGGCCCUGGCUGAGAGGCGUUAGGAGUCCGGGGGUUCGCCCGCGGAGGCCGGGGAGCAGCCGACC\
) } def
/len { sequence length } bind def

/coor [
[126.42573547 216.43432617]
[123.41992188 201.73857117]
[120.41410065 187.04281616]
[117.19682312 172.39190674]
[113.76876068 157.78889465]
[109.10551453 151.90724182]
[110.45875549 142.71572876]
[107.45294189 128.01997375]
[82.76075745 119.01624298]
[77.95226288 96.39625549]
[64.82017517 89.14723206]
[51.68809128 81.89820862]
[38.55600739 74.64918518]
[25.42392349 67.40015411]
[12.29184055 60.15113068]
[-0.94334215 53.09209824]
[-14.27887440 46.22452545]
[-18.95672607 46.64751053]
[-23.06471634 45.57445908]
[-26.18109703 43.39648438]
[-28.06726265 40.60566330]
[-28.68503380 37.72154999]
[-41.14204407 29.36554146]
[-53.59905624 21.00953484]
[-66.05606842 12.65352917]
[-78.51308441 4.29752207]
[-90.97009277 -4.05848455]
[-103.42710876 -12.41449165]
[-115.88411713 -20.77049828]
[-130.39105225 -15.58830547]
[-144.99703979 -19.89162254]
[-154.16001892 -31.82911873]
[-154.53224182 -46.69517136]
[-166.98924255 -55.05117798]
[-179.44625854 -63.40718460]
[-195.83578491 -63.96875381]
[-203.30435181 -78.56850433]
[-194.16893005 -92.18746185]
[-177.82725525 -90.81561279]
[-171.09025574 -75.86419678]
[-158.63323975 -67.50818634]
[-146.17622375 -59.15217972]
[-132.28018188 -64.44725037]
[-117.75898743 -60.49770737]
[-108.23651886 -48.61595917]
[-107.52811432 -33.22750854]
[-95.07109833 -24.87150383]
[-82.61408997 -16.51549721]
[-70.15707397 -8.15949059]
[-57.70006180 0.19651665]
[-45.24304962 8.55252361]
[-32.78603745 16.90852928]
[-20.32902718 25.26453781]
[-7.41129923 32.88899231]
[5.92423296 39.75656509]
[13.42540359 40.02503204]
[19.54086494 47.01904678]
[32.67295074 54.26807404]
[45.80503464 61.51709747]
[58.93711853 68.76612091]
[72.06919861 76.01515198]
[85.20128632 83.26417542]
[95.98139191 76.33498383]
[109.70216370 76.23706818]
[122.12699890 83.95737457]
[128.92018127 97.92911530]
[143.79418945 95.98908234]
[153.42475891 83.74612427]
[168.53675842 81.99053955]
[180.14920044 91.24726105]
[195.02320862 89.30722809]
[209.89723206 87.36719513]
[224.77124023 85.42716980]
[237.45478821 75.97000122]
[251.07588196 81.99623108]
[265.94989014 80.05619812]
[280.82391357 78.11616516]
[293.51022339 67.72438812]
[308.75531006 73.76754761]
[310.87631226 90.02895355]
[297.69131470 99.78027344]
[282.76394653 92.99018097]
[267.88992310 94.93020630]
[253.01591492 96.87023926]
[241.39624023 106.18864441]
[226.71127319 100.30117798]
[211.83724976 102.24121094]
[196.96324158 104.18124390]
[182.08923340 106.12127686]
[173.23962402 118.04688263]
[158.18289185 120.22623444]
[145.73422241 110.86309052]
[130.86021423 112.80312347]
[122.14868927 125.01416016]
[125.15450287 139.70991516]
[128.37178040 154.36082458]
[131.79985046 168.96385193]
[136.87969971 176.74267578]
[135.10984802 184.03700256]
[138.11566162 198.73275757]
[141.12149048 213.42851257]
[155.30329895 219.72579956]
[163.04602051 233.17309570]
[161.37240601 248.59965515]
[150.92601013 260.07363892]
[135.72366333 263.18307495]
[121.61100006 256.73229980]
[114.01461792 243.20179749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 101]
[2 100]
[3 99]
[4 97]
[5 96]
[7 95]
[8 94]
[10 62]
[11 61]
[12 60]
[13 59]
[14 58]
[15 57]
[16 55]
[17 54]
[22 53]
[23 52]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[33 42]
[34 41]
[35 40]
[66 93]
[67 92]
[70 89]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[77 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
