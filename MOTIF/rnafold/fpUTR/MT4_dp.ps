%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MT4)
} def

/sequence { (\
AUGGGGAGCCUCUGGCUGCUGCUCACUCAGCCUCCCUUCCCCAGCCGUGACAGCACUGGAGCCUUUCGGACACCUGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 48 0.003486219 ubox
2 25 0.003589389 ubox
2 43 0.520527022 ubox
2 68 0.061158618 ubox
2 72 0.070708919 ubox
2 76 0.040915675 ubox
3 10 0.017633068 ubox
3 11 0.003207966 ubox
3 12 0.004270678 ubox
3 13 0.003977909 ubox
3 24 0.004125202 ubox
3 35 0.018346673 ubox
3 36 0.039795930 ubox
3 37 0.172955326 ubox
3 38 0.008877721 ubox
3 39 0.006586316 ubox
3 40 0.007738052 ubox
3 41 0.060482864 ubox
3 42 0.578997032 ubox
3 63 0.035261881 ubox
3 64 0.100861768 ubox
3 65 0.104427304 ubox
3 66 0.060272957 ubox
3 67 0.088135077 ubox
3 71 0.081098398 ubox
3 74 0.040682843 ubox
3 75 0.073173640 ubox
3 80 0.066022800 ubox
4 9 0.018633613 ubox
4 10 0.004467141 ubox
4 11 0.004254470 ubox
4 12 0.004177571 ubox
4 20 0.003392002 ubox
4 23 0.004092487 ubox
4 34 0.018442451 ubox
4 35 0.039662942 ubox
4 36 0.187304375 ubox
4 37 0.005442128 ubox
4 39 0.006151155 ubox
4 40 0.073970839 ubox
4 41 0.579111443 ubox
4 42 0.003384738 ubox
4 62 0.035043508 ubox
4 63 0.108834686 ubox
4 64 0.196249488 ubox
4 65 0.098795615 ubox
4 66 0.077735005 ubox
4 67 0.682750552 ubox
4 73 0.039061710 ubox
4 74 0.075623953 ubox
4 75 0.019643747 ubox
4 79 0.066220771 ubox
4 80 0.048918171 ubox
5 9 0.004662190 ubox
5 10 0.004322587 ubox
5 11 0.004142700 ubox
5 19 0.003768615 ubox
5 22 0.004080895 ubox
5 33 0.018405787 ubox
5 34 0.039433994 ubox
5 35 0.187479535 ubox
5 36 0.005742047 ubox
5 38 0.003409932 ubox
5 39 0.074580328 ubox
5 40 0.579115586 ubox
5 41 0.003338758 ubox
5 62 0.108098069 ubox
5 63 0.205360790 ubox
5 64 0.147206921 ubox
5 65 0.066561398 ubox
5 66 0.695331166 ubox
5 67 0.046048042 ubox
5 73 0.075285115 ubox
5 74 0.020766555 ubox
5 79 0.049347134 ubox
5 80 0.021658646 ubox
6 10 0.004080456 ubox
6 32 0.022593220 ubox
6 33 0.031606890 ubox
6 34 0.187503527 ubox
6 35 0.005636105 ubox
6 38 0.075040004 ubox
6 39 0.579011958 ubox
6 40 0.003267159 ubox
6 62 0.204417873 ubox
6 63 0.153147199 ubox
6 64 0.052279237 ubox
6 65 0.716576774 ubox
6 66 0.040974828 ubox
6 67 0.026352334 ubox
6 73 0.020488031 ubox
6 79 0.021708317 ubox
7 13 0.003964930 ubox
7 17 0.090707401 ubox
7 20 0.004212334 ubox
7 33 0.182784376 ubox
7 37 0.119847433 ubox
7 38 0.563936783 ubox
7 64 0.727172636 ubox
7 65 0.033538242 ubox
7 66 0.025600679 ubox
8 12 0.004764452 ubox
8 16 0.110041922 ubox
8 19 0.004293647 ubox
8 31 0.043697789 ubox
8 32 0.171020557 ubox
8 36 0.151622133 ubox
8 37 0.491689415 ubox
8 62 0.177534536 ubox
8 63 0.725654814 ubox
8 64 0.020074314 ubox
8 65 0.022336053 ubox
9 15 0.110989633 ubox
9 18 0.004294544 ubox
9 30 0.058419551 ubox
9 59 0.035665356 ubox
9 61 0.131762166 ubox
9 69 0.033438845 ubox
10 14 0.110193747 ubox
10 30 0.139580944 ubox
10 58 0.035584242 ubox
10 59 0.003669822 ubox
10 61 0.773849185 ubox
10 68 0.032554432 ubox
11 29 0.138118304 ubox
11 58 0.003271037 ubox
11 59 0.003693516 ubox
11 60 0.786794557 ubox
12 30 0.075247381 ubox
12 58 0.004355548 ubox
12 59 0.787039174 ubox
13 25 0.137314758 ubox
13 29 0.075460915 ubox
13 58 0.783917071 ubox
14 23 0.067146516 ubox
14 24 0.137778832 ubox
14 27 0.006398271 ubox
14 28 0.073931675 ubox
14 32 0.566897922 ubox
14 33 0.012227657 ubox
14 34 0.008459144 ubox
14 35 0.103306960 ubox
14 36 0.044081192 ubox
14 46 0.003458625 ubox
14 57 0.784200286 ubox
14 63 0.031128893 ubox
15 22 0.156887061 ubox
15 23 0.016745297 ubox
15 26 0.017434787 ubox
15 27 0.058687939 ubox
15 31 0.567677433 ubox
15 32 0.012453417 ubox
15 33 0.007644372 ubox
15 34 0.103552645 ubox
15 35 0.043573875 ubox
15 36 0.003243369 ubox
15 45 0.003463317 ubox
15 54 0.004417641 ubox
15 56 0.786865499 ubox
15 62 0.031156574 ubox
16 21 0.157652663 ubox
16 30 0.567647875 ubox
16 44 0.003463253 ubox
16 53 0.004613747 ubox
16 61 0.031154896 ubox
17 25 0.061568388 ubox
17 29 0.566998744 ubox
17 43 0.003440449 ubox
17 52 0.004601618 ubox
17 55 0.783920150 ubox
17 60 0.023191118 ubox
18 24 0.061775405 ubox
18 28 0.562139369 ubox
18 31 0.162502857 ubox
18 51 0.004563357 ubox
18 54 0.788456788 ubox
19 30 0.162935039 ubox
19 53 0.788467447 ubox
20 29 0.163278660 ubox
20 52 0.788254466 ubox
21 28 0.162097149 ubox
21 31 0.012983250 ubox
21 51 0.787999636 ubox
21 54 0.003342073 ubox
22 30 0.013035195 ubox
22 53 0.003337189 ubox
23 29 0.012508740 ubox
23 50 0.785850180 ubox
24 49 0.788420199 ubox
25 48 0.788199226 ubox
26 44 0.006086897 ubox
26 47 0.787469067 ubox
27 43 0.008477573 ubox
27 50 0.007475194 ubox
28 49 0.007513428 ubox
29 37 0.017527104 ubox
29 38 0.005952065 ubox
29 48 0.007072045 ubox
30 36 0.018069495 ubox
30 37 0.005389806 ubox
30 45 0.737995112 ubox
31 44 0.727735454 ubox
32 44 0.124883680 ubox
33 43 0.162861453 ubox
36 44 0.022517371 ubox
37 43 0.029662324 ubox
37 44 0.004538439 ubox
37 61 0.005584149 ubox
38 43 0.016452537 ubox
38 60 0.011234276 ubox
38 70 0.007947630 ubox
38 78 0.029259727 ubox
39 59 0.011364394 ubox
39 69 0.008576890 ubox
39 77 0.031264609 ubox
40 58 0.011175215 ubox
40 59 0.005238036 ubox
40 68 0.008565546 ubox
40 76 0.030964695 ubox
40 77 0.013233419 ubox
41 58 0.004125818 ubox
41 59 0.075125944 ubox
41 76 0.010582784 ubox
41 77 0.178540226 ubox
42 49 0.005809587 ubox
42 58 0.076621735 ubox
42 76 0.182279826 ubox
43 48 0.005868711 ubox
43 57 0.076846295 ubox
43 64 0.036653685 ubox
43 65 0.003680655 ubox
43 75 0.182827487 ubox
44 54 0.048155701 ubox
44 56 0.075160870 ubox
44 62 0.079020470 ubox
44 63 0.047708904 ubox
44 64 0.010038178 ubox
44 65 0.006142572 ubox
44 74 0.182665997 ubox
45 53 0.048243120 ubox
45 59 0.474329470 ubox
45 61 0.069890904 ubox
45 69 0.262409423 ubox
45 77 0.052954442 ubox
46 58 0.477361510 ubox
46 68 0.262947189 ubox
46 76 0.052902327 ubox
47 54 0.080472686 ubox
47 56 0.481477083 ubox
47 57 0.112596977 ubox
47 62 0.161004819 ubox
47 67 0.261425438 ubox
47 71 0.025237414 ubox
47 73 0.046050990 ubox
47 75 0.026833184 ubox
47 79 0.089792766 ubox
48 53 0.079302456 ubox
48 55 0.493831025 ubox
48 58 0.006620071 ubox
48 61 0.161628083 ubox
48 68 0.027000470 ubox
48 70 0.023890362 ubox
48 72 0.046882373 ubox
48 78 0.087360377 ubox
49 54 0.491938452 ubox
49 57 0.005537511 ubox
49 65 0.157781817 ubox
49 66 0.121563841 ubox
49 67 0.034098457 ubox
49 71 0.046669056 ubox
50 64 0.160818690 ubox
50 65 0.128489116 ubox
50 66 0.034303638 ubox
51 58 0.162801432 ubox
51 76 0.134635254 ubox
52 57 0.146675697 ubox
52 64 0.043426356 ubox
52 65 0.003664787 ubox
52 75 0.134929343 ubox
53 62 0.265874731 ubox
53 63 0.032879400 ubox
53 74 0.134567613 ubox
54 61 0.267789395 ubox
54 76 0.007766881 ubox
55 75 0.007550401 ubox
56 69 0.149778377 ubox
56 77 0.027176584 ubox
57 68 0.150724455 ubox
57 72 0.025612639 ubox
57 76 0.027687239 ubox
58 64 0.008806216 ubox
58 67 0.151525218 ubox
58 71 0.026229832 ubox
58 74 0.040877147 ubox
58 75 0.026761126 ubox
58 80 0.035435053 ubox
59 63 0.009358656 ubox
59 65 0.004847917 ubox
59 66 0.147383114 ubox
59 67 0.021744422 ubox
59 73 0.040707497 ubox
59 74 0.026892281 ubox
59 79 0.035881916 ubox
60 64 0.007096881 ubox
60 65 0.136520753 ubox
60 66 0.022382925 ubox
60 75 0.016036541 ubox
61 65 0.015471194 ubox
61 74 0.016428189 ubox
62 69 0.107809866 ubox
62 77 0.066459785 ubox
63 68 0.108014298 ubox
63 69 0.014981391 ubox
63 76 0.066411695 ubox
63 77 0.026295782 ubox
64 68 0.013556459 ubox
64 70 0.003375371 ubox
64 76 0.024010831 ubox
64 77 0.006710698 ubox
64 78 0.038897847 ubox
65 69 0.003280817 ubox
65 76 0.006491701 ubox
65 77 0.036006573 ubox
65 78 0.509050357 ubox
66 76 0.027520854 ubox
66 77 0.578510156 ubox
66 78 0.043878975 ubox
67 76 0.621062416 ubox
67 77 0.043313849 ubox
68 74 0.338939494 ubox
68 75 0.634242902 ubox
68 80 0.144767156 ubox
69 73 0.334032100 ubox
69 74 0.633616960 ubox
69 79 0.145364095 ubox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
6 65 0.9500000 lbox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
13 58 0.9500000 lbox
14 57 0.9500000 lbox
15 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
20 52 0.9500000 lbox
21 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
25 48 0.9500000 lbox
26 47 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
showpage
end
%%EOF
