%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGAAUGGGGAGGAGCUGGGGGGGCAGGCAGGCGGGGAAGGAGAGGUCUUAAGGGGCGGCGAGGGGAGGUCGCAUUUCCUCCGAGGCUGGCGAUCGGCGGAGCUCCCACCUCCGCUUACAGCUCGCUGCCGCCGUCCUGCCCCGCGCCCCCAGGAGACCUGGACCAGACCACG\
) } def
/len { sequence length } bind def

/coor [
[106.71955109 621.78070068]
[116.55521393 609.10632324]
[116.01982880 594.11590576]
[106.15316010 588.31268311]
[100.26491547 578.35675049]
[99.92522430 566.67480469]
[105.33500671 556.18011475]
[115.24683380 549.54608154]
[115.24683380 534.54608154]
[115.24683380 519.54608154]
[102.86180115 508.19003296]
[102.49917603 491.05328369]
[114.87007904 478.70666504]
[114.60234833 463.70904541]
[114.33460999 448.71145630]
[100.42353058 436.84802246]
[99.55393219 418.26705933]
[112.74004364 404.69924927]
[111.93717957 389.72076416]
[111.13430786 374.74224854]
[110.33144379 359.76376343]
[109.52857971 344.78524780]
[108.72571564 329.80676270]
[107.92285156 314.82827759]
[99.51542664 302.53338623]
[106.50299072 288.33883667]
[105.70012665 273.36035156]
[95.34202576 259.21136475]
[103.77568054 242.85887146]
[102.70559692 227.89707947]
[101.63550568 212.93530273]
[100.56542206 197.97352600]
[99.49533081 183.01173401]
[98.42524719 168.04995728]
[97.22166443 153.09832764]
[95.88469696 138.15802002]
[94.54772949 123.21772766]
[88.39842224 120.83731079]
[83.13598633 116.86401367]
[79.16268921 111.60157776]
[76.78227234 105.45227051]
[61.84197617 104.11530304]
[46.90167618 102.77833557]
[31.96138000 101.44136047]
[17.32078743 108.82953644]
[3.75226331 99.61936951]
[5.21394157 83.28549194]
[20.20217323 76.63079834]
[33.29835129 86.50106812]
[48.23864746 87.83803558]
[63.17894745 89.17500305]
[78.11924744 90.51197815]
[80.64389038 86.06690216]
[84.05783844 82.26197815]
[88.20423126 79.27200317]
[92.89257050 77.23435974]
[97.90744781 76.24266052]
[101.35704041 61.64470291]
[104.80662537 47.04674530]
[108.25621033 32.44878769]
[111.70580292 17.85083008]
[115.15538788 3.25287414]
[118.60498047 -11.34508324]
[122.05456543 -25.94303894]
[125.50415039 -40.54099655]
[111.16487885 -50.99508286]
[103.21256256 -67.39916229]
[103.92301178 -86.10021210]
[113.58351898 -102.69180298]
[130.32002258 -113.05223083]
[127.92062378 -127.85908508]
[125.52123260 -142.66593933]
[123.12184143 -157.47279358]
[120.72245026 -172.27964783]
[118.32305145 -187.08650208]
[105.57551575 -192.37760925]
[97.18028259 -203.19593811]
[95.25058746 -216.64349365]
[100.18556976 -229.18438721]
[110.59347534 -237.57456970]
[108.45875549 -252.42189026]
[106.32402802 -267.26919556]
[98.08509064 -282.08663940]
[110.04267883 -294.10546875]
[124.90200806 -285.94232178]
[121.17134857 -269.40393066]
[123.30607605 -254.55661011]
[125.44079590 -239.70928955]
[140.18710327 -232.53030396]
[147.83561707 -217.83457947]
[145.20321655 -201.30999756]
[133.12991333 -189.48590088]
[135.52929688 -174.67904663]
[137.92869568 -159.87219238]
[140.32807922 -145.06533813]
[142.72747803 -130.25848389]
[145.12687683 -115.45162964]
[159.55641174 -111.35425568]
[169.37931824 -122.69049835]
[179.20222473 -134.02674866]
[189.02514648 -145.36299133]
[198.84805298 -156.69923401]
[208.67095947 -168.03547668]
[218.49388123 -179.37171936]
[215.84461975 -194.78324890]
[223.76612854 -208.26597595]
[238.51812744 -213.45373535]
[253.13514709 -207.89704895]
[260.71548462 -194.21961975]
[257.67996216 -178.87948608]
[245.46182251 -169.11981201]
[229.83012390 -169.54881287]
[220.00720215 -158.21257019]
[210.18429565 -146.87631226]
[200.36138916 -135.54006958]
[190.53846741 -124.20383453]
[180.71556091 -112.86759186]
[170.89265442 -101.53134155]
[178.63912964 -87.65353394]
[180.44491577 -72.19051361]
[176.28161621 -57.52730560]
[167.02275085 -45.83094406]
[154.27462769 -38.73038101]
[140.10211182 -37.09140778]
[136.65252686 -22.49345207]
[133.20294189 -7.89549494]
[129.75334167 6.70246220]
[126.30375671 21.30041885]
[122.85417175 35.89837646]
[119.40457916 50.49633408]
[115.95499420 65.09429169]
[112.50540924 79.69224548]
[123.78855133 101.70139313]
[109.48802185 121.88075256]
[110.82499695 136.82106018]
[112.16196442 151.76135254]
[116.05480194 160.06134033]
[113.38702393 166.97987366]
[114.45711517 181.94165039]
[115.52719879 196.90342712]
[116.59729004 211.86521912]
[117.66737366 226.82699585]
[118.73746490 241.78877258]
[127.96838379 250.82751465]
[128.53492737 263.33273315]
[120.67862701 272.55749512]
[121.48149109 287.53598022]
[129.94635010 300.90225220]
[122.90135193 314.02539062]
[123.70421600 329.00390625]
[124.50708008 343.98239136]
[125.30994415 358.96090698]
[126.11280823 373.93939209]
[126.91567230 388.91790771]
[127.71853638 403.89639282]
[137.97123718 409.99038696]
[143.93498230 420.18051147]
[144.22105408 431.86392212]
[138.87413025 442.12072754]
[129.33221436 448.44369507]
[129.59996033 463.44131470]
[129.86769104 478.43893433]
[140.58549500 486.62826538]
[144.56176758 499.31326294]
[140.55555725 511.78436279]
[130.24682617 519.54608154]
[130.24682617 534.54608154]
[130.24682617 549.54608154]
[144.14024353 562.38867188]
[144.26641846 580.98950195]
[131.01026917 593.58050537]
[131.54565430 608.57092285]
[142.26043701 620.51135254]
[139.46360779 636.30871582]
[125.30067444 643.84472656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[8 168]
[9 167]
[10 166]
[13 162]
[14 161]
[15 160]
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[26 147]
[27 146]
[29 143]
[30 142]
[31 141]
[32 140]
[33 139]
[34 138]
[35 136]
[36 135]
[37 134]
[41 52]
[42 51]
[43 50]
[44 49]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[70 97]
[71 96]
[72 95]
[73 94]
[74 93]
[75 92]
[80 88]
[81 87]
[82 86]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
