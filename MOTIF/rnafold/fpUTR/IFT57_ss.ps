%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGGGCGGGGCUGCUUCCCGACCACCAUUUCCACAGAGGCAGGGCAAGAAGAGGGCCACAGGUGACGUCAUUCAGGAAAGCCGCCCUGAUUGGAGGGAAGGAGGCGGAGUCUAGUUUCCCUGGUGACGGAUUGUCCGGUGGUCGCCUGGUAACCGGUCGUGGCUGUACUGGCGGCGGCAGGGCUGGCGGCUUAGGCCGCAGAGGUCUGUGGGCCUGAGCCCACGCUGGACUCUGUCCGUUCUGCG\
) } def
/len { sequence length } bind def

/coor [
[-17.07698822 422.20407104]
[-25.79753113 439.36791992]
[-40.41730118 451.84494019]
[-58.67751312 457.73971558]
[-77.76931000 456.17138672]
[-84.00835419 469.81228638]
[-90.16123199 483.49227905]
[-96.22768402 497.21081543]
[-102.20747375 510.96734619]
[-108.10036469 524.76129150]
[-113.99324799 538.55529785]
[-119.88613892 552.34930420]
[-125.77902985 566.14324951]
[-121.16207886 581.50762939]
[-130.41387939 594.61425781]
[-146.43724060 595.40887451]
[-156.94041443 583.28192139]
[-153.86625671 567.53613281]
[-139.57301331 560.25036621]
[-133.68011475 546.45635986]
[-127.78723145 532.66241455]
[-121.89434052 518.86840820]
[-116.00144958 505.07446289]
[-116.26322174 497.70712280]
[-109.94621277 491.14434814]
[-103.87976074 477.42581177]
[-104.04856873 470.05578613]
[-97.64926147 463.57324219]
[-91.41020966 449.93234253]
[-99.82859802 442.97000122]
[-106.49680328 434.30435181]
[-111.07839966 424.36541748]
[-113.34066772 413.64761353]
[-113.16636658 402.68521118]
[-110.55984497 392.02566528]
[-105.64699554 382.20220947]
[-98.66921997 373.70733643]
[-89.97154999 366.96795654]
[-79.98560333 362.32403564]
[-69.20814514 360.01141357]
[-58.17638779 360.14981079]
[-47.44121933 362.73672485]
[-40.18839264 349.60671997]
[-32.93556595 336.47674561]
[-25.68274117 323.34677124]
[-18.42991638 310.21676636]
[-11.17709160 297.08679199]
[-3.92426610 283.95678711]
[-11.73125553 271.27151489]
[-12.14324760 256.28198242]
[-4.94949532 243.01109314]
[8.00605679 235.07066345]
[23.29636383 234.67855835]
[30.54919052 221.54856873]
[37.80201340 208.41857910]
[45.05484009 195.28860474]
[42.00559235 183.59875488]
[47.91999054 172.60755920]
[60.11353302 168.45283508]
[67.53143311 155.41540527]
[74.94934082 142.37796021]
[79.60363007 84.99509430]
[73.02239990 71.51595306]
[66.44116211 58.03680801]
[59.85992432 44.55766296]
[53.27868652 31.07851982]
[46.69744873 17.59937668]
[40.11621475 4.12023258]
[33.53497696 -9.35891151]
[1.73071539 -10.16470718]
[-17.55142784 -47.17192841]
[-30.44615173 -54.83522415]
[-43.34087372 -62.49851990]
[-59.15705109 -62.89748383]
[-66.14514160 -76.05103302]
[-79.03987122 -83.71432495]
[-91.93459320 -91.37762451]
[-104.82931519 -99.04091644]
[-117.72403717 -106.70421600]
[-131.92433167 -100.44873047]
[-147.08233643 -103.76755524]
[-157.36947632 -115.38453674]
[-158.83015442 -130.83270264]
[-150.90269470 -144.17193604]
[-136.63536072 -150.27301025]
[-121.51425934 -146.78994751]
[-111.35374451 -135.06204224]
[-110.06074524 -119.59893799]
[-97.16601562 -111.93564606]
[-84.27129364 -104.27234650]
[-71.37657166 -96.60904694]
[-58.48184967 -88.94575500]
[-43.58798981 -89.09491730]
[-35.67757797 -75.39324188]
[-22.78285408 -67.72994995]
[-9.88813114 -60.06665039]
[1.64298332 -69.66005707]
[-3.54655290 -83.73374176]
[-8.73608971 -97.80743408]
[-13.92562580 -111.88111877]
[-19.11516190 -125.95481110]
[-24.30469894 -140.02850342]
[-29.49423409 -154.10218811]
[-43.92179108 -165.56292725]
[-40.24493027 -182.73316956]
[-45.61161423 -196.74026489]
[-50.97829819 -210.74736023]
[-56.34498215 -224.75445557]
[-67.65800476 -237.38188171]
[-58.65581131 -251.74841309]
[-42.35868835 -247.07507324]
[-42.33789062 -230.12113953]
[-36.97120667 -216.11404419]
[-31.60452080 -202.10694885]
[-26.23783684 -188.09985352]
[-15.33379555 -182.89868164]
[-10.74014282 -171.29330444]
[-15.42054653 -159.29171753]
[-10.23100948 -145.21803284]
[-5.04147339 -131.14434814]
[0.14806297 -117.07065582]
[5.33759928 -102.99697113]
[10.52713585 -88.92327881]
[15.71667194 -74.84959412]
[23.20936012 -75.18067169]
[22.54719162 -90.16605377]
[29.46615028 -103.47499847]
[37.53256989 -90.82822418]
[38.19473648 -75.84284210]
[45.68742752 -76.17392731]
[49.61539459 -90.65049744]
[53.54336166 -105.12706757]
[57.47132874 -119.60363770]
[55.78368378 -136.47337341]
[71.52696228 -142.76507568]
[81.93095398 -129.37876892]
[71.94789886 -115.67566681]
[68.01992798 -101.19910431]
[64.09196472 -86.72253418]
[60.16399765 -72.24596405]
[67.67363739 -53.86580658]
[66.41832733 -36.23837662]
[58.44605637 -22.92766762]
[47.01412201 -15.94014835]
[53.59535599 -2.46100426]
[60.17659378 11.01813984]
[66.75782776 24.49728394]
[73.33906555 37.97642899]
[79.92030334 51.45557404]
[86.50154114 64.93471527]
[93.08277893 78.41385651]
[93.72898865 63.42778778]
[106.32013702 55.27530289]
[120.25842285 60.81824493]
[123.81217957 75.39119720]
[113.99018097 86.72832489]
[128.03085327 81.45011139]
[142.07153320 76.17189789]
[156.11219788 70.89368439]
[170.15286255 65.61546326]
[184.19354248 60.33724976]
[198.16650391 54.88231277]
[212.06953430 49.25151443]
[221.95599365 36.89966202]
[236.65698242 39.29347610]
[250.55999756 33.66268158]
[264.46304321 28.03188515]
[278.36605835 22.40109062]
[292.26907349 16.77029610]
[301.92239380 3.51337790]
[318.19906616 5.51375103]
[324.35507202 20.71360397]
[314.05764771 33.47663116]
[297.89987183 30.67332268]
[283.99685669 36.30411911]
[270.09381104 41.93491364]
[256.19079590 47.56570816]
[242.28776550 53.19650269]
[233.39573669 65.14560699]
[217.70031738 63.15454102]
[203.79730225 68.78533936]
[201.15045166 72.73360443]
[196.00619507 75.07463837]
[189.47175598 74.37792206]
[175.43107605 79.65613556]
[161.39041138 84.93434906]
[147.34974670 90.21257019]
[133.30906677 95.49078369]
[119.26840210 100.76899719]
[118.13392639 115.72669983]
[116.99953461 130.68307495]
[130.08351135 138.01858521]
[143.16748047 145.35409546]
[156.25144958 152.68960571]
[169.33541870 160.02511597]
[182.41938782 167.36062622]
[195.50335693 174.69613647]
[208.58732605 182.03164673]
[221.67131042 189.36715698]
[234.75527954 196.70266724]
[247.88525391 203.95549011]
[261.06072998 211.12535095]
[274.23620605 218.29519653]
[287.41168213 225.46504211]
[303.78305054 224.51058960]
[312.56802368 238.35820007]
[304.72937012 252.76264954]
[288.33087158 252.90586853]
[280.24185181 238.64053345]
[267.06637573 231.47067261]
[253.89088440 224.30082703]
[240.71540833 217.13096619]
[233.35630798 216.69546509]
[227.41976929 209.78663635]
[214.33580017 202.45112610]
[201.25181580 195.11561584]
[188.16784668 187.78010559]
[175.08387756 180.44459534]
[161.99990845 173.10908508]
[148.91593933 165.77357483]
[135.83197021 158.43806458]
[122.74800110 151.10255432]
[109.66402435 143.76704407]
[120.17924500 154.46426392]
[119.37372589 169.44261169]
[107.77190399 178.95039368]
[92.92720795 176.79750061]
[84.50433350 164.38560486]
[87.98677063 149.79586792]
[80.56887054 162.83329773]
[73.15097046 175.87074280]
[73.68412018 194.28863525]
[58.18482590 202.54142761]
[50.93199921 215.67140198]
[43.67917633 228.80139160]
[36.42634964 241.93138123]
[44.23520660 255.08314514]
[44.41146469 270.27740479]
[37.00792313 283.43240356]
[24.10016441 291.06430054]
[9.20571995 291.20962524]
[1.95289421 304.33959961]
[-5.29993105 317.46960449]
[-12.55275631 330.59957886]
[-19.80558205 343.72955322]
[-27.05840683 356.85955811]
[-34.31123352 369.98953247]
[-21.66155815 384.62985229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[6 28]
[7 26]
[8 25]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[42 247]
[43 246]
[44 245]
[45 244]
[46 243]
[47 242]
[48 241]
[53 236]
[54 235]
[55 234]
[56 233]
[59 231]
[60 230]
[61 229]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[71 96]
[72 95]
[73 94]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[97 124]
[98 123]
[99 122]
[100 121]
[101 120]
[102 119]
[103 118]
[105 115]
[106 114]
[107 113]
[108 112]
[130 140]
[131 139]
[132 138]
[133 137]
[156 189]
[157 188]
[158 187]
[159 186]
[160 185]
[161 184]
[162 181]
[163 180]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
[191 223]
[192 222]
[193 221]
[194 220]
[195 219]
[196 218]
[197 217]
[198 216]
[199 215]
[200 214]
[201 212]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
