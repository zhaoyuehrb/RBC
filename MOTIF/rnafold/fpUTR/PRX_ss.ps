%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUCGAGGUGUCUGGAGGCUCAGCGAGCGCCGGACCCAGGAGGCCCAAGGAGCUGGAGGUGACCCUCAGGCAGCAAGAACCCCACGGAAGGGCGUGAGCCCUGCAGACAGCUGUGCGGCACCUCGGGCUGGGCUCCUGUUAGGAGGAAGUGCCUGCACCCAGGCAGCGGCUCAGAGGCAGCUGCUCCAUGCAGAACUGAAGCUGGUUCUGCAGCAGAAAGGGGAGAGGACACAGGAGCCUGGGGUGCAGGUGC\
CUCCCAGCAACGCC\
) } def
/len { sequence length } bind def

/coor [
[109.39739227 151.09417725]
[108.35104370 136.13070679]
[107.30470276 121.16725159]
[92.75026703 117.53842163]
[84.80147552 130.25914001]
[76.85268402 142.97987366]
[80.19213104 158.19451904]
[71.94972229 170.98191833]
[57.42428970 174.07180786]
[49.47549820 186.79252625]
[47.59299088 195.69371033]
[41.35949326 199.61425781]
[33.26323318 212.24163818]
[25.16697121 224.86900330]
[17.07071114 237.49638367]
[8.97445202 250.12374878]
[0.87819237 262.75112915]
[2.86687255 275.47152710]
[-4.10765791 285.81420898]
[-15.86662388 288.55548096]
[-24.10925865 301.08779907]
[-32.35189438 313.62011719]
[-40.59452820 326.15243530]
[-44.24663162 342.70834351]
[-61.16654205 343.78210449]
[-66.88223267 327.82067871]
[-53.12684631 317.90979004]
[-44.88420868 305.37747192]
[-36.64157486 292.84515381]
[-28.39894104 280.31283569]
[-28.30724144 262.74902344]
[-11.74918175 254.65486145]
[-3.65292192 242.02749634]
[4.44333792 229.40011597]
[12.53959751 216.77275085]
[20.63585854 204.14537048]
[28.73211670 191.51800537]
[36.75477600 178.84373474]
[44.70356750 166.12301636]
[41.11321259 151.71311951]
[48.99320221 138.69926453]
[64.13196564 135.03108215]
[72.08075714 122.31035614]
[80.02954102 109.58963776]
[76.40071106 95.03520203]
[63.41033173 87.53520203]
[50.41995239 80.03520203]
[37.42956924 72.53520203]
[24.43918991 65.03520203]
[20.17936516 65.18076324]
[16.45805740 64.09166718]
[13.59333038 62.08321762]
[11.77046108 59.54093170]
[11.03058338 56.87195206]
[-1.59679067 48.77569199]
[-14.22416496 40.67943192]
[-30.01770592 39.74423218]
[-36.55562973 26.36122513]
[-49.18300247 18.26496696]
[-61.81037521 10.16870594]
[-74.43775177 2.07244635]
[-87.06512451 -6.02381372]
[-99.69249725 -14.12007332]
[-108.57118225 -16.10602188]
[-112.41893005 -22.38471603]
[-124.95124817 -30.62734985]
[-134.47477722 -25.95755577]
[-144.99641418 -25.64536858]
[-154.63143921 -29.68008804]
[-161.68148804 -37.27831268]
[-164.93382263 -47.03510666]
[-163.86962891 -57.18349075]
[-176.10664368 -65.85847473]
[-188.34365845 -74.53346252]
[-200.58068848 -83.20844269]
[-212.81770325 -91.88343048]
[-225.42712402 -81.77598572]
[-241.43737793 -76.94351959]
[-258.65567017 -78.48385620]
[-274.55938721 -86.59046173]
[-286.66516113 -100.46620178]
[-292.91378784 -118.38607025]
[-306.61697388 -124.48712158]
[-322.86083984 -122.23575592]
[-332.71762085 -135.34208679]
[-326.04748535 -150.32345581]
[-309.71209717 -151.76831055]
[-300.51593018 -138.19029236]
[-286.81274414 -132.08924866]
[-278.86361694 -144.81054688]
[-270.91516113 -157.53070068]
[-282.40582275 -167.17250061]
[-293.89651489 -176.81431580]
[-305.38717651 -186.45613098]
[-316.87783813 -196.09794617]
[-333.11300659 -198.41120911]
[-338.97534180 -213.72673035]
[-328.43417358 -226.28921509]
[-312.33334351 -223.17544556]
[-307.23602295 -207.58862305]
[-295.74536133 -197.94680786]
[-284.25469971 -188.30499268]
[-272.76400757 -178.66317749]
[-261.27334595 -169.02136230]
[-246.42387390 -171.45022583]
[-231.85256958 -169.41600037]
[-218.84133911 -163.29652405]
[-208.47595215 -153.82008362]
[-201.55584717 -141.98437500]
[-198.53381348 -128.95391846]
[-199.49026489 -115.94668579]
[-204.14271545 -104.12044525]
[-191.90570068 -95.44546509]
[-179.66868591 -86.77047729]
[-167.43165588 -78.09548950]
[-155.19464111 -69.42050934]
[-136.24385071 -74.06063843]
[-119.76646423 -63.05030823]
[-116.70861816 -43.15966797]
[-104.17630005 -34.91703415]
[-91.59623718 -26.74744797]
[-78.96886444 -18.65118790]
[-66.34149170 -10.55492783]
[-53.71411896 -2.45866799]
[-41.08674240 5.63759184]
[-28.45936966 13.73385143]
[-13.56902122 14.08995247]
[-6.12790489 28.05205727]
[6.49946928 36.14831543]
[19.12684250 44.24457550]
[31.93918991 52.04481888]
[44.92956924 59.54481888]
[57.91995239 67.04482269]
[70.91033173 74.54482269]
[83.90071106 82.04482269]
[97.38262177 75.46925354]
[99.47022247 60.61523056]
[101.55781555 45.76121140]
[103.64541626 30.90718842]
[99.86229706 14.38071346]
[114.69564056 6.17045975]
[126.69131470 18.15128517]
[118.49943542 32.99478531]
[116.41184235 47.84880447]
[114.32424164 62.70282745]
[112.23664856 77.55684662]
[122.01150513 88.93455505]
[137.01048279 89.10907745]
[152.00947571 89.28360748]
[165.89874268 81.70740509]
[178.53512573 89.59226227]
[193.53410339 89.76679230]
[208.53309631 89.94132233]
[223.53207397 90.11585236]
[238.53106689 90.29038239]
[253.53004456 90.46491241]
[268.52902222 90.63943481]
[283.52801514 90.81396484]
[298.52700806 90.98849487]
[313.52597046 91.16302490]
[328.52496338 91.33755493]
[343.52395630 91.51208496]
[358.52371216 91.59934998]
[373.52371216 91.59934998]
[388.52371216 91.59934998]
[403.52371216 91.59934998]
[417.86825562 87.21377563]
[430.30383301 78.82588196]
[442.73941040 70.43798828]
[455.17495728 62.05009079]
[467.61053467 53.66219711]
[480.04608154 45.27430725]
[492.48165894 36.88641357]
[493.93618774 21.31662178]
[505.09475708 10.36124802]
[520.68865967 9.19308376]
[533.35485840 18.36370087]
[537.11285400 33.54301453]
[530.18817139 47.56381607]
[515.85046387 53.80591202]
[500.86953735 49.32197571]
[488.43399048 57.70986938]
[475.99841309 66.09776306]
[463.56286621 74.48565674]
[451.12728882 82.87355042]
[438.69174194 91.26144409]
[426.25616455 99.64933777]
[428.44894409 106.82162476]
[443.06457520 110.19558716]
[432.83453369 121.16619110]
[435.02731323 128.33848572]
[450.02731323 128.33848572]
[465.02731323 128.33848572]
[480.02731323 128.33848572]
[495.02731323 128.33848572]
[510.02731323 128.33848572]
[525.02734375 128.33848572]
[540.02734375 128.33848572]
[555.02734375 128.33848572]
[566.02398682 116.98734283]
[581.82739258 116.82025146]
[593.06164551 127.93633270]
[593.06164551 143.74063110]
[581.82739258 154.85670471]
[566.02398682 154.68962097]
[555.02734375 143.33848572]
[540.02734375 143.33848572]
[525.02734375 143.33848572]
[510.02731323 143.33848572]
[495.02731323 143.33848572]
[480.02731323 143.33848572]
[465.02731323 143.33848572]
[450.02731323 143.33848572]
[435.02731323 143.33848572]
[448.19104004 150.52986145]
[453.34057617 164.61824036]
[455.20059204 179.50247192]
[453.67636108 194.42483521]
[448.84548950 208.62562561]
[440.95394897 221.38194275]
[430.40344238 232.04434204]
[417.73110962 240.07003784]
[403.58206177 245.05046082]
[388.67660522 246.73202515]
[373.77359009 245.02917480]
[359.63165283 240.02856445]
[346.97079468 231.98478699]
[336.43551636 221.30731201]
[328.56219482 208.53974915]
[323.75161743 194.33206177]
[322.24871826 179.40754700]
[324.12994385 164.52598572]
[329.29959106 150.44497681]
[337.49444580 137.88137817]
[348.29733276 127.47475433]
[361.15829468 119.75492096]
[375.42260742 115.11487579]
[390.35995483 113.79073334]
[403.52371216 106.59934998]
[388.52371216 106.59934998]
[373.52371216 106.59934998]
[358.52371216 106.59934998]
[351.85876465 109.73075104]
[343.34942627 106.51107025]
[328.35043335 106.33654022]
[313.35144043 106.16201019]
[298.35247803 105.98748016]
[283.35348511 105.81295013]
[268.35449219 105.63842010]
[253.35551453 105.46389008]
[238.35653687 105.28936768]
[223.35754395 105.11483765]
[208.35856628 104.94030762]
[193.35957336 104.76577759]
[178.36059570 104.59124756]
[165.54415894 112.17993927]
[151.83494568 104.28259277]
[136.83595276 104.10806274]
[121.83697510 103.93354034]
[123.42755127 111.50529480]
[122.26815796 120.12090302]
[123.31450653 135.08436584]
[124.36085510 150.04782104]
[137.11743164 159.09237671]
[141.02577209 174.23367310]
[134.24047852 188.32246399]
[119.96537781 194.70643616]
[104.94071198 190.37130737]
[96.26068115 177.36395264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 263]
[2 262]
[3 261]
[4 44]
[5 43]
[6 42]
[9 39]
[10 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[20 30]
[21 29]
[22 28]
[23 27]
[45 135]
[46 134]
[47 133]
[48 132]
[49 131]
[54 130]
[55 129]
[56 128]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[65 120]
[66 119]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[82 89]
[83 88]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[136 146]
[137 145]
[138 144]
[139 143]
[147 259]
[148 258]
[149 257]
[151 255]
[152 254]
[153 253]
[154 252]
[155 251]
[156 250]
[157 249]
[158 248]
[159 247]
[160 246]
[161 245]
[162 244]
[163 242]
[164 241]
[165 240]
[166 239]
[167 187]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
[191 214]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[197 208]
[198 207]
[199 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
