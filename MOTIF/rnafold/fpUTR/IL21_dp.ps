%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL21)
} def

/sequence { (\
GCUGAAGUGAAAACGAGACCAAGGUCUAGCUCUACUGUUGGUACUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.094892666 ubox
1 25 0.014622897 ubox
1 30 0.058091963 ubox
1 38 0.016177908 ubox
1 42 0.731862009 ubox
2 7 0.098152483 ubox
2 17 0.160292922 ubox
2 23 0.019891001 ubox
2 24 0.016038426 ubox
2 29 0.058186205 ubox
2 37 0.017689609 ubox
2 41 0.758632924 ubox
3 9 0.009321585 ubox
3 15 0.030252191 ubox
3 16 0.154623681 ubox
3 21 0.064187082 ubox
3 22 0.019819101 ubox
3 23 0.015988057 ubox
3 28 0.056994455 ubox
3 37 0.003856287 ubox
3 40 0.752493171 ubox
4 8 0.006438020 ubox
4 14 0.041780341 ubox
4 20 0.074704098 ubox
4 26 0.003732073 ubox
4 27 0.030560306 ubox
4 32 0.007490384 ubox
4 39 0.699467364 ubox
4 46 0.017168058 ubox
5 25 0.003518833 ubox
5 31 0.006134297 ubox
5 38 0.645026485 ubox
5 39 0.021616236 ubox
5 45 0.013745196 ubox
5 46 0.221205039 ubox
6 31 0.008812570 ubox
6 33 0.007303685 ubox
6 36 0.744397017 ubox
6 38 0.015736917 ubox
6 45 0.259766485 ubox
6 46 0.004928145 ubox
7 14 0.329732251 ubox
7 19 0.106930175 ubox
7 30 0.009974463 ubox
7 32 0.007419323 ubox
7 35 0.753456456 ubox
7 44 0.264511847 ubox
8 13 0.327172429 ubox
8 15 0.053000894 ubox
8 18 0.106694612 ubox
8 21 0.033015561 ubox
8 29 0.009471911 ubox
8 34 0.747078331 ubox
8 43 0.263980487 ubox
9 14 0.066684389 ubox
9 20 0.040600693 ubox
9 32 0.387064808 ubox
9 33 0.603763048 ubox
9 42 0.255614593 ubox
10 31 0.383674721 ubox
10 39 0.003473813 ubox
11 38 0.003352779 ubox
11 39 0.010761021 ubox
12 38 0.008997888 ubox
12 39 0.252788106 ubox
12 46 0.004222089 ubox
13 25 0.007432634 ubox
13 38 0.258276536 ubox
13 42 0.009418680 ubox
13 45 0.003966482 ubox
14 24 0.007840944 ubox
14 37 0.258578463 ubox
14 40 0.005759400 ubox
14 41 0.010356492 ubox
15 26 0.015164031 ubox
15 32 0.041881815 ubox
15 36 0.246379565 ubox
15 39 0.004844679 ubox
15 46 0.190182041 ubox
16 25 0.015004845 ubox
16 27 0.803687576 ubox
16 31 0.037140225 ubox
16 33 0.023341761 ubox
16 36 0.024177436 ubox
16 38 0.003469590 ubox
16 39 0.004453143 ubox
16 45 0.211237570 ubox
16 46 0.006331994 ubox
17 26 0.813555289 ubox
17 30 0.026675964 ubox
17 32 0.023937229 ubox
17 35 0.027148771 ubox
17 38 0.003688255 ubox
17 39 0.003295478 ubox
17 44 0.213227242 ubox
17 45 0.004514960 ubox
17 46 0.005930989 ubox
18 25 0.813818412 ubox
18 31 0.021126331 ubox
18 38 0.003568206 ubox
18 42 0.227387513 ubox
18 45 0.004097319 ubox
19 24 0.813513747 ubox
19 37 0.003706609 ubox
19 41 0.229262005 ubox
20 40 0.229260640 ubox
21 39 0.226796358 ubox
21 46 0.384794592 ubox
22 31 0.027583532 ubox
22 33 0.022954170 ubox
22 36 0.025144668 ubox
22 38 0.188117075 ubox
22 39 0.004031269 ubox
22 45 0.464978655 ubox
22 46 0.176606540 ubox
23 30 0.030399393 ubox
23 31 0.028297123 ubox
23 32 0.025759055 ubox
23 33 0.020311333 ubox
23 35 0.029531943 ubox
23 36 0.196443905 ubox
23 38 0.004430664 ubox
23 44 0.473906023 ubox
23 45 0.231516936 ubox
23 46 0.005242620 ubox
24 30 0.032822430 ubox
24 31 0.017293354 ubox
24 32 0.020602100 ubox
24 35 0.212415278 ubox
24 42 0.010634642 ubox
24 44 0.238518932 ubox
25 29 0.030743161 ubox
25 34 0.208780929 ubox
25 43 0.236084821 ubox
26 40 0.003476970 ubox
26 41 0.531636490 ubox
27 34 0.024234883 ubox
27 37 0.039022480 ubox
27 40 0.532134918 ubox
28 33 0.028357361 ubox
28 36 0.054167210 ubox
28 39 0.533261474 ubox
28 45 0.024195571 ubox
29 35 0.057602992 ubox
29 38 0.534754888 ubox
29 42 0.023768442 ubox
29 44 0.026131647 ubox
30 37 0.534970662 ubox
30 41 0.024652078 ubox
31 40 0.022224451 ubox
31 41 0.009787486 ubox
32 40 0.015854045 ubox
32 41 0.030019500 ubox
33 40 0.029828143 ubox
33 43 0.049281091 ubox
34 39 0.026031942 ubox
34 42 0.052801895 ubox
35 41 0.053219522 ubox
36 40 0.047951043 ubox
37 44 0.038027627 ubox
38 43 0.037130728 ubox
1 42 0.9500000 lbox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 36 0.9500000 lbox
7 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
showpage
end
%%EOF
