%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGCUGGACCAGCCGGCCAGCGGGAGCCCCCUUGGCAGAAGCCGGUCGUAAAGGAUCAUAAACUGGGCGGCGUCUGGCUGGGGCGAAGGUCGCUGAGGUAGGAACUGCGCCAGUCCUAGACGCCAGACCCGCUCAGACCCUCCUGCCAGGUGACAGCCGCCAAG\
) } def
/len { sequence length } bind def

/coor [
[85.87339783 295.46960449]
[86.15725708 280.47229004]
[78.65859985 280.33035278]
[72.59214783 294.04888916]
[66.52569580 307.76742554]
[60.45924759 321.48596191]
[54.39279556 335.20449829]
[48.32634354 348.92300415]
[52.74908066 364.34439087]
[43.33265686 377.33325195]
[27.30054474 377.92565918]
[16.95121002 365.66714478]
[20.22377586 349.96142578]
[34.60781097 342.85656738]
[40.67426300 329.13803101]
[46.74071503 315.41949463]
[52.80716705 301.70095825]
[58.87361908 287.98242188]
[64.94007111 274.26388550]
[67.19103241 245.22198486]
[87.42692566 233.82330322]
[87.99454498 218.83404541]
[88.56216431 203.84478760]
[89.12979126 188.85552979]
[89.69741058 173.86627197]
[90.26503754 158.87701416]
[90.83265686 143.88775635]
[84.91133881 142.90374756]
[79.09315491 141.11396790]
[73.48857880 138.52902222]
[68.20697784 135.17474365]
[63.35454178 131.09208679]
[59.03215027 126.33673096]
[55.33336639 120.97834778]
[52.34244919 115.09965515]
[37.38540649 116.23408508]
[22.42836571 117.36851501]
[9.19966507 127.06044769]
[-5.69703054 120.20330048]
[-6.93727732 103.85112000]
[6.75478411 94.82563019]
[21.29393578 102.41147614]
[36.25097656 101.27704620]
[51.20801544 100.14261627]
[53.47037888 85.31420898]
[39.53210831 79.77122498]
[25.59383774 74.22824860]
[11.65556717 68.68527222]
[-2.75736284 75.16932678]
[-17.50391960 69.48473358]
[-23.83522987 55.00405502]
[-17.99504280 40.31842422]
[-3.44823527 34.14056396]
[11.17482853 40.13569260]
[17.19854546 54.74700165]
[31.13681602 60.28998184]
[45.07508850 65.83295441]
[59.01335907 71.37593842]
[67.65495300 63.01575089]
[77.87972260 57.09309769]
[89.03274536 53.87215424]
[100.42621613 53.44782257]
[111.38179016 55.74565125]
[121.27095795 60.53201294]
[130.49592590 48.70408630]
[139.72091675 36.87616348]
[148.94589233 25.04823685]
[158.17086792 13.22031212]
[167.39584351 1.39238727]
[176.62081909 -10.43553734]
[185.84579468 -22.26346207]
[188.67417908 -30.99644661]
[195.35897827 -34.22574615]
[204.80612183 -45.87697983]
[214.25328064 -57.52821350]
[223.70043945 -69.17944336]
[233.14759827 -80.83067322]
[242.59475708 -92.48191071]
[252.04191589 -104.13314056]
[261.15457153 -116.04782867]
[269.92535400 -128.21636963]
[278.69613647 -140.38490295]
[287.46691895 -152.55345154]
[296.23770142 -164.72198486]
[305.00848389 -176.89053345]
[302.64105225 -187.56361389]
[306.48306274 -197.56329346]
[315.02954102 -203.64971924]
[325.29583740 -203.99557495]
[334.52081299 -215.82350159]
[337.34921265 -224.55648804]
[344.03399658 -227.78578186]
[353.48114014 -239.43701172]
[362.92831421 -251.08824158]
[363.75564575 -256.33160400]
[366.28094482 -260.31326294]
[369.72747803 -262.59414673]
[373.25723267 -263.11257935]
[383.35031128 -274.20895386]
[393.44338989 -285.30532837]
[396.40328979 -301.43515015]
[411.94076538 -306.68106079]
[424.07217407 -295.64651489]
[420.31777954 -279.68292236]
[404.53979492 -275.21221924]
[394.44668579 -264.11584473]
[384.35360718 -253.01947021]
[374.57952881 -241.64108276]
[365.13238525 -229.98985291]
[355.68524170 -218.33862305]
[346.34875488 -206.59852600]
[337.12377930 -194.77059937]
[335.90533447 -175.49855042]
[317.17700195 -168.11973572]
[308.40621948 -155.95120239]
[299.63543701 -143.78266907]
[290.86465454 -131.61412048]
[282.09387207 -119.44557953]
[273.32308960 -107.27704620]
[273.54537964 -103.71635437]
[272.02609253 -99.87283325]
[268.65231323 -96.57913971]
[263.69314575 -94.68598175]
[254.24598694 -83.03475189]
[244.79882812 -71.38351440]
[235.35166931 -59.73228455]
[225.90452576 -48.08105469]
[216.45736694 -36.42982101]
[207.01020813 -24.77858925]
[197.67372131 -13.03848553]
[188.44874573 -1.21056092]
[179.22377014 10.61736393]
[169.99879456 22.44528961]
[160.77380371 34.27321243]
[151.54882812 46.10113907]
[142.32385254 57.92906189]
[133.09887695 69.75698853]
[143.98428345 91.30753326]
[142.11495972 115.37875366]
[128.03298950 134.99038696]
[105.82191467 144.45538330]
[105.25428772 159.44464111]
[104.68666840 174.43389893]
[104.11904907 189.42315674]
[103.55142212 204.41241455]
[102.98380280 219.40165710]
[102.41618347 234.39091492]
[116.15756989 240.17900085]
[124.90079498 255.35089111]
[122.59149933 275.35510254]
[128.13447571 289.29336548]
[133.67745972 303.23162842]
[139.22042847 317.16992188]
[153.32530212 324.81399536]
[156.00120544 340.63232422]
[145.19540405 352.49041748]
[129.19718933 351.29174805]
[120.27902222 337.95587158]
[125.28216553 322.71289062]
[119.73918915 308.77462769]
[114.19620514 294.83633423]
[108.65322876 280.89807129]
[101.15457153 280.75613403]
[100.87071228 295.75344849]
[100.58661652 310.75076294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[21 147]
[22 146]
[23 145]
[24 144]
[25 143]
[26 142]
[27 141]
[35 44]
[36 43]
[37 42]
[45 58]
[46 57]
[47 56]
[48 55]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[89 112]
[90 111]
[92 110]
[93 109]
[94 108]
[98 107]
[99 106]
[100 105]
[150 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
