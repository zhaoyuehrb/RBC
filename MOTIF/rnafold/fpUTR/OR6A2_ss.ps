%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUUUUUGUAUGUUUGCCUUAGCUCAUUUCCAGAUUAAAGAAGAGAGCAGUGGCCUCAGCUCAGUGAUUAAUUACAUGAACUCCUUACGUGGUAUUCGACCAAUAUAAGCCCAUUAAGAGAAAGGCUGGGUUCUUGUUGUGGCCUACUGAAGACUCUCUACUCUCAUCUCCUGAAGAGCAGUAAGAGAGACCAAUGAC\
) } def
/len { sequence length } bind def

/coor [
[91.96700287 246.29800415]
[76.97426605 245.83110046]
[62.63113785 241.44081116]
[49.94576263 233.43572998]
[39.80978394 222.37852478]
[32.93563843 209.04637146]
[29.80650139 194.37638855]
[30.64231300 179.39968872]
[35.38432693 165.16897583]
[43.69923401 152.68449402]
[55.00259399 142.82376099]
[68.50312042 136.27880859]
[78.02646637 124.68976593]
[87.54981232 113.10073090]
[73.63620758 118.70532990]
[59.72260284 124.30993652]
[48.03400803 140.72720337]
[29.02556229 137.20793152]
[15.29392242 143.24465942]
[1.56228411 149.28138733]
[-1.83949876 164.30583191]
[-13.30189037 174.32916260]
[-28.29118347 175.66523743]
[-41.04038620 168.01045227]
[-54.77202606 174.04718018]
[-68.50366211 180.08390808]
[-82.23530579 186.12065125]
[-91.75469971 198.75755310]
[-106.51965332 196.79658508]
[-120.25129700 202.83331299]
[-133.98292542 208.87004089]
[-147.71456909 214.90676880]
[-150.02523804 230.16011047]
[-160.23283386 241.72767639]
[-175.08012390 245.91831970]
[-189.82940674 241.39480591]
[-199.77423096 229.60057068]
[-201.74125671 214.29913330]
[-195.10279846 200.37309265]
[-181.97717285 192.26622009]
[-166.55270386 192.56538391]
[-153.75129700 201.17512512]
[-140.01966858 195.13839722]
[-126.28802490 189.10166931]
[-112.55638123 183.06494141]
[-104.01916504 170.85981750]
[-88.27203369 172.38900757]
[-74.54039764 166.35227966]
[-60.80875778 160.31555176]
[-47.07711792 154.27882385]
[-44.09809113 139.70954895]
[-32.97980118 129.56817627]
[-17.84486198 127.89872742]
[-4.47444534 135.54974365]
[9.25719357 129.51301575]
[22.98883247 123.47628784]
[25.82794189 113.65007019]
[33.77668381 106.86962891]
[44.36358261 105.56085205]
[54.11799622 110.39633179]
[68.03160095 104.79172516]
[81.94520569 99.18712616]
[91.64675903 87.74684906]
[94.90288544 73.10452271]
[98.15901947 58.46220016]
[101.41514587 43.81987762]
[104.67127991 29.17755508]
[107.92740631 14.53523254]
[96.72691345 4.11908817]
[92.27333832 -10.40890217]
[95.66702271 -25.11771965]
[105.89895630 -36.07962799]
[120.14801788 -40.41897202]
[123.40414429 -55.06129456]
[118.84702301 -70.21197510]
[129.16259766 -80.95619202]
[132.41873169 -95.59851074]
[135.67486572 -110.24083710]
[131.11773682 -125.39151764]
[141.43331909 -136.13572693]
[144.68945312 -150.77804565]
[147.94558716 -165.42037964]
[151.20170593 -180.06269836]
[154.45783997 -194.70501709]
[157.71397400 -209.34733582]
[152.02067566 -195.46978760]
[139.49093628 -187.22323608]
[124.49317932 -187.48281860]
[112.25630951 -196.15800476]
[107.04663849 -210.22425842]
[110.68050385 -224.77743530]
[121.89222717 -234.74421692]
[120.72118378 -249.69844055]
[119.55014038 -264.65264893]
[118.37909698 -279.60687256]
[107.16725922 -291.08181763]
[109.29117584 -306.98367310]
[123.12155151 -315.11386108]
[138.04890442 -309.23562622]
[142.62225342 -293.85824585]
[133.33331299 -280.77792358]
[134.50436401 -265.82369995]
[135.67539978 -250.86947632]
[136.84645081 -235.91526794]
[144.09841919 -234.00244141]
[143.25503540 -248.97871399]
[157.23776245 -254.40855408]
[166.72262573 -242.78799438]
[158.60237122 -230.17680359]
[165.85433960 -228.26397705]
[174.24870300 -240.69517517]
[182.64308167 -253.12635803]
[191.03744507 -265.55755615]
[183.30247498 -278.71554565]
[182.05111694 -293.92727661]
[187.53181458 -308.17245483]
[198.65637207 -318.62265015]
[213.21601868 -323.20300293]
[228.31990051 -321.00408936]
[240.96916199 -312.46246338]
[248.65225220 -299.27410889]
[249.84370422 -284.05755615]
[244.30694580 -269.83407593]
[233.14131165 -259.42776489]
[218.56375122 -254.90478516]
[203.46864319 -257.16317749]
[195.07426453 -244.73199463]
[186.67990112 -232.30079651]
[178.28552246 -219.86961365]
[172.35629272 -206.09121704]
[169.10015869 -191.44888306]
[165.84403992 -176.80656433]
[162.58790588 -162.16424561]
[159.33177185 -147.52192688]
[156.07563782 -132.87959290]
[160.86566162 -118.77622986]
[150.31718445 -106.98470306]
[147.06105042 -92.34238434]
[143.80493164 -77.70005798]
[148.59495544 -63.59669495]
[138.04646301 -51.80516434]
[134.79034424 -37.16284180]
[145.85751343 -27.19372368]
[150.47952271 -12.92862606]
[147.31979370 1.83221817]
[137.12899780 13.10362530]
[122.56973267 17.79136276]
[119.31359863 32.43368530]
[116.05747223 47.07600784]
[112.80133820 61.71833038]
[109.54521179 76.36065674]
[106.28907776 91.00297546]
[110.56495667 91.91860199]
[114.70360565 94.71194458]
[117.93719482 99.32713318]
[119.53815460 105.41260529]
[130.90226746 115.20326233]
[142.26637268 124.99391937]
[153.63049316 134.78457642]
[164.99459839 144.57522583]
[176.35871887 154.36589050]
[187.79899597 164.06744385]
[199.31472778 173.67929077]
[210.83047485 183.29113770]
[222.42098999 192.81269836]
[234.08555603 202.24339294]
[245.75010681 211.67408752]
[261.34619141 214.33361816]
[266.37884521 228.35223389]
[278.04342651 237.78291321]
[294.31805420 239.79977417]
[300.45867920 255.00585938]
[290.14834595 267.75845337]
[273.99340820 264.93878174]
[268.61273193 249.44747925]
[256.94815063 240.01678467]
[242.18641663 238.03179932]
[236.31941223 223.33863831]
[224.65486145 213.90795898]
[212.99029541 204.47726440]
[205.80650330 202.71514893]
[201.21862793 194.80688477]
[189.70288086 185.19502258]
[178.18714905 175.58317566]
[171.03176880 173.70899963]
[166.56805420 165.72999573]
[155.20394897 155.93934631]
[143.83982849 146.14868164]
[132.47572327 136.35803223]
[121.11161041 126.56737518]
[109.74749756 116.77671814]
[115.02655029 130.81707764]
[120.30561066 144.85742188]
[130.97349548 155.40238953]
[138.49545288 168.38006592]
[142.34278870 182.87828064]
[142.24507141 197.87796021]
[138.20918274 212.32481384]
[130.51876831 225.20338440]
[119.71441650 235.60847473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 62]
[15 61]
[16 60]
[18 56]
[19 55]
[20 54]
[24 50]
[25 49]
[26 48]
[27 47]
[29 45]
[30 44]
[31 43]
[32 42]
[63 152]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[73 142]
[74 141]
[76 139]
[77 138]
[78 137]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 130]
[92 104]
[93 103]
[94 102]
[95 101]
[110 129]
[111 128]
[112 127]
[113 126]
[156 191]
[157 190]
[158 189]
[159 188]
[160 187]
[161 186]
[162 184]
[163 183]
[164 182]
[165 180]
[166 179]
[167 178]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
