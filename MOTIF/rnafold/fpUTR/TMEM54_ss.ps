%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGCCGGGCGGCCCGGGGGGUGACGGGAAGGGAGGCCGGUCCGGCGCCGCCCAGCCCCGGGCUCCGGGCGGGAAGUGGGCGAGCGCGACGGUGCGGGGCGCGCGGGCGACGGGCCAGCGGGAUGGGAGCAGGGUCCCCCGGCGGCCCGCAGCCUCGGGAGCCGCGCUGAAGCCGGGGGCGGGACCAGCGCGGAGCCGAC\
) } def
/len { sequence length } bind def

/coor [
[-37.37180710 229.47572327]
[-36.95682526 214.48115540]
[-49.50094223 222.70581055]
[-62.04505539 230.93048096]
[-74.58917236 239.15515137]
[-87.13328552 247.37982178]
[-99.67740631 255.60449219]
[-106.97568512 269.64178467]
[-121.86162567 270.14978027]
[-134.40574646 278.37445068]
[-146.94985962 286.59912109]
[-159.49397278 294.82379150]
[-172.03808594 303.04846191]
[-184.58219910 311.27313232]
[-197.12631226 319.49780273]
[-209.60641479 327.81927490]
[-222.02175903 336.23709106]
[-234.43708801 344.65487671]
[-246.85241699 353.07269287]
[-259.26776123 361.49050903]
[-266.90969849 378.24081421]
[-284.44604492 378.83047485]
[-296.72964478 387.43942261]
[-309.01321411 396.04833984]
[-306.05957031 410.98806763]
[-309.44415283 425.83612061]
[-318.58053589 438.01995850]
[-331.88583374 445.42868042]
[-347.05480957 446.77865601]
[-361.45932007 441.83599854]
[-372.60372925 431.45706177]
[-378.55715942 417.44006348]
[-378.28820801 402.21353149]
[-371.84341431 388.41552734]
[-360.33938599 378.43667603]
[-345.76928711 374.00585938]
[-330.65747070 375.89074707]
[-317.62213135 383.76473999]
[-305.33856201 375.15582275]
[-293.05499268 366.54690552]
[-290.64953613 354.68783569]
[-280.48077393 347.41577148]
[-267.68557739 349.07516479]
[-255.27023315 340.65734863]
[-242.85488892 332.23956299]
[-230.43955994 323.82174683]
[-218.02421570 315.40393066]
[-214.24972534 309.04418945]
[-205.35098267 306.95367432]
[-192.80686951 298.72900391]
[-180.26275635 290.50433350]
[-167.71864319 282.27966309]
[-155.17453003 274.05499268]
[-142.63040161 265.83032227]
[-130.08628845 257.60568237]
[-123.68524933 244.15666199]
[-107.90206909 243.06037903]
[-95.35795593 234.83570862]
[-82.81384277 226.61103821]
[-70.26972198 218.38636780]
[-57.72560883 210.16169739]
[-45.18149185 201.93702698]
[-32.96489334 193.23330688]
[-21.09409714 184.06356812]
[-9.22329998 174.89382935]
[2.64749765 165.72409058]
[14.51829529 156.55435181]
[26.38909340 147.38459778]
[38.25989151 138.21485901]
[43.60214615 124.31127930]
[59.25334930 121.99820709]
[71.12414551 112.82846832]
[67.71715546 104.06990814]
[66.98765564 94.42645264]
[69.15600586 84.72149658]
[74.18846130 75.82924652]
[81.78718567 68.59613800]
[91.40454102 63.76125336]
[87.05721283 49.40504456]
[82.70988464 35.04883575]
[71.30507660 24.08339691]
[75.02165222 9.65993309]
[70.67432404 -4.69627619]
[55.10385895 -12.66324997]
[50.20612717 -29.10177422]
[58.54269409 -43.70462799]
[53.97372437 -57.99184418]
[49.40475082 -72.27906036]
[44.83577728 -86.56626892]
[32.34260178 -97.18948364]
[35.56173706 -113.26956940]
[51.18161011 -118.26471710]
[63.13383865 -107.03634644]
[59.12299347 -91.13524628]
[63.69196320 -76.84803009]
[68.26094055 -62.56081772]
[72.82991028 -48.27360153]
[84.99993134 -44.02908707]
[92.61521912 -33.39011002]
[92.71190643 -20.11223221]
[85.03053284 -9.04360390]
[89.37786102 5.31260538]
[100.47172546 15.25119209]
[97.06609344 30.70150757]
[101.41342163 45.05771637]
[105.76074982 59.41392517]
[119.97554779 64.20344543]
[132.12443542 55.40546036]
[144.27331543 46.60747147]
[156.42221069 37.80948639]
[159.04919434 22.45576668]
[171.49522400 13.70642185]
[186.11645508 16.30547905]
[198.26535034 7.50749111]
[210.41423035 -1.29049695]
[222.56311035 -10.08848476]
[234.71200562 -18.88647270]
[246.86088562 -27.68446159]
[251.98011780 -35.25751877]
[259.26654053 -36.52287674]
[271.55014038 -45.13180161]
[278.41049194 -59.38823318]
[293.27359009 -60.35665894]
[305.55715942 -68.96559143]
[308.69503784 -74.79673004]
[313.57574463 -77.72379303]
[318.35678101 -77.64392853]
[330.90087891 -85.86859894]
[343.44500732 -94.09326172]
[355.98910522 -102.31793213]
[358.96139526 -117.84020996]
[372.08578491 -126.64512634]
[387.57574463 -123.50888824]
[396.24142456 -110.29216766]
[392.94158936 -94.83620453]
[379.63400269 -86.31076050]
[364.21377563 -89.77381897]
[351.66967773 -81.54914856]
[339.12554932 -73.32447815]
[326.58145142 -65.09981537]
[314.16610718 -56.68200684]
[301.88250732 -48.07307816]
[295.90075684 -34.43241882]
[280.15905762 -32.84822083]
[267.87548828 -24.23929405]
[255.65887451 -15.53557587]
[243.50999451 -6.73758793]
[231.36109924 2.06040025]
[219.21221924 10.85838795]
[207.06333923 19.65637589]
[194.91444397 28.45436478]
[192.82257080 43.15673447]
[180.62721252 52.25220871]
[165.22019958 49.95837021]
[153.07130432 58.75635910]
[140.92242432 67.55434418]
[128.77354431 76.35233307]
[133.63175964 89.07454681]
[133.41984558 101.99833679]
[128.67387390 113.27378845]
[140.40133667 122.62613678]
[155.89820862 121.04981995]
[167.65830994 130.70149231]
[169.06558228 145.48510742]
[180.79306030 154.83744812]
[192.52052307 164.18980408]
[204.24800110 173.54214478]
[219.86154175 176.09715271]
[224.98799133 190.08174133]
[236.71546936 199.43408203]
[252.00611877 196.15841675]
[265.80072021 203.52340698]
[271.58587646 218.05151367]
[266.63003540 232.88301086]
[253.27316284 241.01493835]
[237.82199097 238.60762024]
[227.57206726 226.79774475]
[227.36311340 211.16156006]
[215.63565063 201.80920410]
[200.86093140 199.92315674]
[194.89566040 185.26962280]
[183.16818237 175.91726685]
[171.44070435 166.56492615]
[159.71324158 157.21257019]
[144.98713684 159.13024902]
[132.96058655 149.81269836]
[131.04899597 134.35360718]
[119.32152557 125.00125885]
[99.75550842 131.59626770]
[80.29389191 124.69926453]
[68.42309570 133.86900330]
[62.23175812 148.42846680]
[47.42963028 150.08566284]
[35.55883408 159.25540161]
[23.68803787 168.42514038]
[11.81723976 177.59487915]
[-0.05355771 186.76463318]
[-11.92435551 195.93437195]
[-23.79515266 205.10411072]
[-9.48768234 209.60925293]
[-3.94135857 223.54618835]
[-11.24114704 236.65013123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 62]
[3 61]
[4 60]
[5 59]
[6 58]
[7 57]
[9 55]
[10 54]
[11 53]
[12 52]
[13 51]
[14 50]
[15 49]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[22 40]
[23 39]
[24 38]
[63 199]
[64 198]
[65 197]
[66 196]
[67 195]
[68 194]
[69 193]
[71 191]
[72 190]
[78 106]
[79 105]
[80 104]
[82 102]
[83 101]
[86 97]
[87 96]
[88 95]
[89 94]
[107 157]
[108 156]
[109 155]
[110 154]
[113 151]
[114 150]
[115 149]
[116 148]
[117 147]
[118 146]
[120 145]
[121 144]
[123 142]
[124 141]
[127 140]
[128 139]
[129 138]
[130 137]
[160 188]
[161 187]
[164 184]
[165 183]
[166 182]
[167 181]
[169 179]
[170 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
