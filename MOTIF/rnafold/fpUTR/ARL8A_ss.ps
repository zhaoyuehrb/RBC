%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGAGCCGAUUCCGGGGCAGCGAGUCGUCGGCAGCCGCGCUCGAGCCUCCGCCCGCACCGAGCCGCGGGACCCGGGCCGUACCGGGGAGGGGCCGCUCCGGGCCGCAGCGCGAGGGCAGCGAGGGGCGGCGGGGACCUGGCACCGGGCGGGGCCGGCGGCAGCGACC\
) } def
/len { sequence length } bind def

/coor [
[-77.59782410 574.79510498]
[-81.65624237 589.23565674]
[-85.71466064 603.67620850]
[-89.77308655 618.11676025]
[-93.83150482 632.55731201]
[-89.25817871 648.30584717]
[-100.80387878 659.95184326]
[-116.59138489 655.51483154]
[-120.37985992 639.55932617]
[-108.27204132 628.49890137]
[-104.21362305 614.05834961]
[-100.15520477 599.61779785]
[-96.09677887 585.17724609]
[-92.03836060 570.73669434]
[-97.32173920 564.78472900]
[-99.83146667 557.13287354]
[-99.08232117 549.02026367]
[-95.12332916 541.79217529]
[-88.54189301 536.67681885]
[-80.37773895 534.57733154]
[-75.27605438 520.47155762]
[-81.81101227 507.13626099]
[-76.83811951 492.75830078]
[-62.80653763 485.99426270]
[-57.70485306 471.88848877]
[-62.55698776 460.78250122]
[-58.39349365 448.97406006]
[-46.93762589 442.99505615]
[-41.57916260 428.98483276]
[-36.22069931 414.97457886]
[-30.86223412 400.96435547]
[-25.50377083 386.95410156]
[-20.14530754 372.94384766]
[-14.78684425 358.93362427]
[-9.42838097 344.92337036]
[-4.06991816 330.91314697]
[-5.18201447 326.23403931]
[-3.34034801 320.80856323]
[1.74858427 316.49499512]
[7.61515522 302.68978882]
[7.33619881 295.27658081]
[13.71700573 288.68759155]
[19.83473778 274.99185181]
[25.95246887 261.29611206]
[32.07019806 247.60037231]
[38.18793106 233.90463257]
[44.30566025 220.20889282]
[41.53990936 202.89511108]
[56.49902725 192.18630981]
[62.36559677 178.38111877]
[68.23217010 164.57592773]
[73.71835327 150.61520386]
[78.82003784 136.50942993]
[83.92173004 122.40366364]
[73.08374786 105.99584961]
[75.93257141 86.53916931]
[65.32596588 75.93257141]
[54.71936798 65.32596588]
[44.11276627 54.71936798]
[33.50616455 44.11276627]
[18.20177269 46.67308807]
[4.33039761 39.71862411]
[-2.77413535 25.92350578]
[-0.37998804 10.59224129]
[10.59224129 -0.37998804]
[25.92350578 -2.77413535]
[39.71862411 4.33039761]
[46.67308807 18.20177269]
[44.11276627 33.50616455]
[54.71936798 44.11276627]
[65.32596588 54.71936798]
[75.93257141 65.32596588]
[86.53916931 75.93257141]
[86.64470673 69.56428528]
[87.87278748 63.04079819]
[85.96017456 48.16323471]
[84.04756165 33.28567123]
[82.13494873 18.40810776]
[80.22234344 3.53054285]
[67.56169128 -5.92903328]
[65.38091278 -21.58213997]
[74.97381592 -34.14206696]
[90.64910126 -36.15723038]
[103.10690308 -26.43207169]
[104.95623016 -10.73635483]
[95.09990692 1.61793113]
[97.01251221 16.49549484]
[98.92512512 31.37306023]
[100.83773804 46.25062180]
[102.75035095 61.12818909]
[109.45145416 64.49644470]
[111.71678162 49.66849136]
[126.51903534 47.24087906]
[133.40196228 60.56849289]
[122.85366821 71.23297119]
[129.55477905 74.60122681]
[142.63551331 67.25996399]
[155.71626282 59.91869354]
[168.79699707 52.57742691]
[181.87774658 45.23616028]
[194.95848083 37.89489365]
[208.03921509 30.55362320]
[221.11996460 23.21235657]
[222.45042419 13.81134987]
[227.89537048 6.20206785]
[236.11798096 2.03374600]
[245.19824219 2.13684940]
[253.08085632 6.36061907]
[266.54403687 -0.25322661]
[280.00720215 -6.86707258]
[288.98193359 -19.89646149]
[303.81677246 -18.56363487]
[317.27993774 -25.17748070]
[322.14498901 -40.21433258]
[336.25558472 -47.33238983]
[351.24017334 -42.30863953]
[358.20864868 -28.12357903]
[353.02673340 -13.19295692]
[338.76879883 -6.37484407]
[323.89379883 -11.71430683]
[310.43063354 -5.10046053]
[302.41888428 7.45586157]
[286.62106323 6.59610128]
[273.15786743 13.20994663]
[259.69470215 19.82379341]
[249.80490112 37.91644669]
[228.46122742 36.29309845]
[215.38049316 43.63436508]
[202.29974365 50.97563171]
[189.21900940 58.31690216]
[176.13825989 65.65816498]
[163.05752563 72.99943542]
[149.97677612 80.34070587]
[136.89604187 87.68196869]
[133.19851685 111.46961212]
[117.26643372 126.16661072]
[98.02749634 127.50534821]
[92.92581177 141.61112976]
[87.82412720 155.71688843]
[88.75951385 160.92730713]
[87.68674469 165.50637817]
[85.19086456 168.78884888]
[82.03736115 170.44250488]
[76.17079163 184.24769592]
[70.30422211 198.05288696]
[74.40148163 210.30839539]
[69.20285034 221.69912720]
[58.00140381 226.32661438]
[51.88367462 240.02235413]
[45.76594162 253.71810913]
[39.64821243 267.41384888]
[33.53047943 281.10958862]
[27.41274834 294.80532837]
[21.42034721 308.55636597]
[15.55377674 322.36157227]
[9.94032383 336.27160645]
[4.58186007 350.28182983]
[-0.77660304 364.29208374]
[-6.13506651 378.30233765]
[-11.49352932 392.31256104]
[-16.85199356 406.32281494]
[-22.21045685 420.33303833]
[-27.56892014 434.34329224]
[-32.92738342 448.35354614]
[-29.59096718 466.44558716]
[-43.59907913 476.99017334]
[-48.70076370 491.09594727]
[-42.24220657 505.27075195]
[-47.61698532 519.50335693]
[-61.17028427 525.57324219]
[-66.27197266 539.67901611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[20 171]
[21 170]
[24 167]
[25 166]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[39 155]
[40 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[49 145]
[50 144]
[51 143]
[52 139]
[53 138]
[54 137]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[96 134]
[97 133]
[98 132]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[108 125]
[109 124]
[110 123]
[112 121]
[113 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
