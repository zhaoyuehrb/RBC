%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DYNLT1)
} def

/sequence { (\
CAGGUCCGGGGCGGGGCCUGAGUGCGCCUGCGCAGUCCGCGCCACUCAGGGAGCCGGAGGGGACGCGCCGGAGGAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.127273603 ubox
2 19 0.128619381 ubox
3 18 0.128799893 ubox
3 69 0.005338932 ubox
4 17 0.128807167 ubox
4 64 0.037914571 ubox
4 68 0.005118713 ubox
5 15 0.006310653 ubox
5 16 0.128590443 ubox
5 58 0.003952439 ubox
5 63 0.038025479 ubox
5 67 0.004241147 ubox
5 72 0.926500162 ubox
5 74 0.009687800 ubox
5 75 0.016897761 ubox
6 14 0.008952413 ubox
6 15 0.128476931 ubox
6 57 0.004244228 ubox
6 60 0.003215899 ubox
6 61 0.003631375 ubox
6 62 0.038089115 ubox
6 71 0.990457213 ubox
6 73 0.004144828 ubox
6 74 0.016636062 ubox
7 13 0.010937072 ubox
7 14 0.128300740 ubox
7 56 0.004237211 ubox
7 59 0.003254605 ubox
7 60 0.004100888 ubox
7 61 0.038027430 ubox
7 70 0.990756678 ubox
7 73 0.015834998 ubox
8 12 0.011799568 ubox
8 55 0.003333535 ubox
8 69 0.990803632 ubox
9 68 0.990657167 ubox
9 69 0.005725364 ubox
10 18 0.010806856 ubox
10 55 0.022773816 ubox
10 68 0.007666159 ubox
10 69 0.011151841 ubox
11 17 0.010831845 ubox
11 31 0.007950744 ubox
11 33 0.004364162 ubox
11 54 0.022844901 ubox
11 66 0.990513990 ubox
11 68 0.011212787 ubox
12 16 0.010760570 ubox
12 30 0.007977078 ubox
12 32 0.004370411 ubox
12 53 0.022940942 ubox
12 56 0.044468248 ubox
12 65 0.990178154 ubox
12 67 0.011258069 ubox
12 70 0.003408384 ubox
13 28 0.004055313 ubox
13 29 0.007895605 ubox
13 31 0.004303255 ubox
13 40 0.003361177 ubox
13 43 0.012814244 ubox
13 55 0.084292921 ubox
13 64 0.979140701 ubox
13 66 0.011042950 ubox
13 69 0.003412755 ubox
14 27 0.004279124 ubox
14 28 0.008182103 ubox
14 29 0.011790689 ubox
14 38 0.008527536 ubox
14 42 0.013943888 ubox
14 43 0.010333879 ubox
14 54 0.091873588 ubox
14 55 0.198084980 ubox
14 68 0.003410617 ubox
15 27 0.008150317 ubox
15 28 0.012560192 ubox
15 37 0.008534557 ubox
15 38 0.003725170 ubox
15 42 0.010324314 ubox
15 43 0.014134335 ubox
15 54 0.197762788 ubox
15 55 0.082080710 ubox
16 25 0.009148173 ubox
16 27 0.012582456 ubox
16 36 0.008515178 ubox
16 37 0.003694451 ubox
16 40 0.020718194 ubox
16 42 0.014174960 ubox
16 54 0.083148814 ubox
16 66 0.003361812 ubox
17 24 0.009128849 ubox
17 26 0.012594720 ubox
17 35 0.007711321 ubox
17 39 0.020702935 ubox
17 41 0.014177696 ubox
17 50 0.981914017 ubox
17 51 0.074341876 ubox
17 53 0.061786123 ubox
17 60 0.047895363 ubox
17 61 0.033745846 ubox
17 62 0.009494293 ubox
18 35 0.005166967 ubox
18 49 0.987655894 ubox
18 50 0.056545865 ubox
18 51 0.010405911 ubox
18 59 0.047641637 ubox
18 60 0.033457805 ubox
18 61 0.007934003 ubox
19 34 0.006134211 ubox
19 39 0.007587171 ubox
19 48 0.988767663 ubox
19 49 0.027924598 ubox
19 50 0.007079080 ubox
19 58 0.044909307 ubox
19 59 0.032135307 ubox
19 60 0.007450790 ubox
20 33 0.004858112 ubox
20 37 0.034181923 ubox
20 38 0.005692926 ubox
20 47 0.989560351 ubox
20 55 0.003437171 ubox
20 69 0.003561349 ubox
21 36 0.039112697 ubox
21 46 0.989433793 ubox
22 31 0.003552786 ubox
22 33 0.039480938 ubox
22 42 0.003390926 ubox
22 45 0.989550021 ubox
22 54 0.006736388 ubox
22 68 0.031472091 ubox
23 30 0.003487332 ubox
23 32 0.039595701 ubox
23 34 0.043183097 ubox
23 41 0.004106602 ubox
23 44 0.988426228 ubox
23 53 0.006705230 ubox
23 56 0.006496830 ubox
23 67 0.031538649 ubox
24 31 0.039710183 ubox
24 33 0.044129219 ubox
24 40 0.006078720 ubox
24 42 0.421559993 ubox
24 43 0.894768563 ubox
24 54 0.045238445 ubox
24 55 0.005202536 ubox
24 66 0.031629458 ubox
25 30 0.039691114 ubox
25 32 0.044138604 ubox
25 39 0.006507263 ubox
25 41 0.594706392 ubox
25 53 0.045442247 ubox
25 65 0.031629904 ubox
25 70 0.005993164 ubox
26 31 0.043002569 ubox
26 33 0.003434217 ubox
26 38 0.006387436 ubox
26 40 0.594186422 ubox
26 42 0.550608128 ubox
26 64 0.031603017 ubox
26 69 0.006040881 ubox
27 32 0.003629387 ubox
27 39 0.593408210 ubox
27 41 0.542817376 ubox
27 50 0.023338012 ubox
27 51 0.040103649 ubox
27 60 0.004009808 ubox
27 62 0.030981675 ubox
27 71 0.102153790 ubox
27 74 0.054377426 ubox
28 35 0.169389175 ubox
28 49 0.023545181 ubox
28 50 0.040069913 ubox
28 59 0.004032026 ubox
28 61 0.030952707 ubox
28 62 0.003533241 ubox
28 70 0.102409490 ubox
28 71 0.014032151 ubox
28 73 0.054535664 ubox
29 34 0.158779372 ubox
29 39 0.043515842 ubox
29 41 0.080721827 ubox
29 44 0.005433164 ubox
29 48 0.023527487 ubox
29 49 0.039459065 ubox
29 58 0.004040304 ubox
29 60 0.028807210 ubox
29 61 0.003378423 ubox
29 70 0.014116092 ubox
29 72 0.053955835 ubox
30 36 0.457281745 ubox
30 38 0.059196362 ubox
30 40 0.542241440 ubox
30 42 0.568222029 ubox
30 43 0.005863066 ubox
30 47 0.011083448 ubox
30 68 0.111764821 ubox
30 69 0.010751043 ubox
31 35 0.459896415 ubox
31 39 0.544717730 ubox
31 41 0.569538506 ubox
31 56 0.004194939 ubox
31 67 0.112337576 ubox
31 70 0.033894226 ubox
32 38 0.533331915 ubox
32 40 0.574390048 ubox
32 55 0.003860343 ubox
32 66 0.112377119 ubox
32 68 0.010840998 ubox
32 69 0.031888945 ubox
33 39 0.574038523 ubox
33 65 0.112016453 ubox
33 67 0.014952492 ubox
35 64 0.113137248 ubox
35 68 0.013897259 ubox
36 58 0.019007845 ubox
36 63 0.113223546 ubox
36 67 0.009008300 ubox
36 71 0.004551589 ubox
36 72 0.028086806 ubox
36 75 0.006143767 ubox
37 57 0.026875751 ubox
37 62 0.113212470 ubox
37 70 0.006090272 ubox
37 71 0.030835716 ubox
37 74 0.006738842 ubox
38 56 0.028114039 ubox
38 60 0.003475747 ubox
38 61 0.112464393 ubox
38 65 0.005234563 ubox
38 67 0.042271608 ubox
38 70 0.030062614 ubox
38 73 0.006214433 ubox
39 54 0.031930226 ubox
39 55 0.020749312 ubox
39 64 0.005528038 ubox
39 66 0.046791074 ubox
39 68 0.018528274 ubox
39 69 0.019252242 ubox
40 53 0.037170401 ubox
40 65 0.047233753 ubox
40 67 0.025911894 ubox
41 54 0.007051220 ubox
41 64 0.047244607 ubox
41 66 0.025868607 ubox
42 50 0.011373980 ubox
42 51 0.035875480 ubox
42 53 0.006714576 ubox
42 57 0.109068176 ubox
42 60 0.007306290 ubox
42 61 0.020344051 ubox
42 62 0.048972096 ubox
42 65 0.023386037 ubox
43 49 0.011567167 ubox
43 50 0.035920867 ubox
43 56 0.109053407 ubox
43 59 0.006810991 ubox
43 60 0.025973722 ubox
43 61 0.049337859 ubox
45 51 0.004237292 ubox
45 53 0.108874029 ubox
45 57 0.003688781 ubox
45 59 0.068825965 ubox
45 60 0.004001392 ubox
45 61 0.008260516 ubox
46 50 0.003834496 ubox
46 52 0.108949553 ubox
46 58 0.069406027 ubox
46 60 0.008212744 ubox
47 51 0.108043166 ubox
47 56 0.003549824 ubox
47 57 0.068860540 ubox
47 59 0.008093126 ubox
49 55 0.070980580 ubox
50 54 0.070086842 ubox
54 60 0.120857289 ubox
54 61 0.714731260 ubox
54 62 0.608285639 ubox
55 59 0.120479166 ubox
55 60 0.717324253 ubox
55 61 0.609619581 ubox
56 64 0.038664045 ubox
60 69 0.004141462 ubox
61 68 0.004165703 ubox
68 74 0.021915139 ubox
69 73 0.021869289 ubox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
13 64 0.9500000 lbox
17 50 0.9500000 lbox
18 49 0.9500000 lbox
19 48 0.9500000 lbox
20 47 0.9500000 lbox
21 46 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
54 61 0.9500000 lbox
55 60 0.9500000 lbox
showpage
end
%%EOF
