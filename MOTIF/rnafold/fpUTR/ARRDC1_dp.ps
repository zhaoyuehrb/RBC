%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ARRDC1)
} def

/sequence { (\
CGGGGCCGGGCCUCGGAGCCGGGACUCGCGGGCGGCGGGCGGGGGCGUCGCUGCGCGGCUGGCCGGUGAGGCCGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.171652406 ubox
1 28 0.009324880 ubox
1 30 0.005771248 ubox
1 76 0.007134239 ubox
2 14 0.174029871 ubox
2 27 0.009935471 ubox
2 29 0.005841074 ubox
2 75 0.007211092 ubox
3 13 0.173948043 ubox
3 26 0.009919358 ubox
3 27 0.006777360 ubox
4 12 0.174065530 ubox
4 25 0.009850277 ubox
4 26 0.006820378 ubox
4 73 0.007143050 ubox
5 11 0.174060308 ubox
5 25 0.007063711 ubox
5 72 0.007137587 ubox
5 75 0.005635808 ubox
5 78 0.973224305 ubox
6 10 0.172794295 ubox
6 23 0.012020935 ubox
6 71 0.007085421 ubox
6 74 0.005463257 ubox
6 77 0.984492068 ubox
7 22 0.012197598 ubox
7 70 0.006996149 ubox
7 76 0.984571407 ubox
8 75 0.980833647 ubox
9 20 0.012242521 ubox
9 73 0.983747767 ubox
10 19 0.012266142 ubox
10 67 0.006503727 ubox
10 72 0.984618051 ubox
11 18 0.012218258 ubox
11 66 0.006536783 ubox
11 71 0.984620351 ubox
12 65 0.006360644 ubox
12 70 0.984609697 ubox
13 66 0.006304610 ubox
13 69 0.984196420 ubox
14 65 0.012149718 ubox
14 68 0.983647183 ubox
15 64 0.019499056 ubox
15 67 0.562514411 ubox
16 27 0.008190675 ubox
16 63 0.015308726 ubox
17 26 0.008201944 ubox
17 60 0.010277963 ubox
18 25 0.008162119 ubox
18 59 0.011042860 ubox
18 63 0.478534340 ubox
18 67 0.790451225 ubox
18 78 0.172568704 ubox
19 58 0.011045537 ubox
19 62 0.479933479 ubox
19 66 0.859439362 ubox
19 77 0.174055315 ubox
20 57 0.011021215 ubox
20 61 0.479876254 ubox
20 65 0.859464155 ubox
20 76 0.174061228 ubox
21 56 0.010916148 ubox
21 60 0.474768263 ubox
21 64 0.851436221 ubox
21 73 0.003293672 ubox
21 75 0.173383627 ubox
22 59 0.469056045 ubox
22 60 0.065675048 ubox
22 63 0.842091343 ubox
22 64 0.118215337 ubox
22 72 0.003465118 ubox
22 73 0.173245611 ubox
23 59 0.101440586 ubox
23 63 0.166420001 ubox
23 72 0.170213991 ubox
25 58 0.226247758 ubox
25 62 0.375171999 ubox
25 70 0.171498075 ubox
25 71 0.009366001 ubox
26 57 0.064632221 ubox
26 58 0.607110462 ubox
26 61 0.367760617 ubox
26 62 0.103150773 ubox
26 69 0.173965368 ubox
26 70 0.004175629 ubox
27 55 0.121897262 ubox
27 57 0.679598463 ubox
27 61 0.116220538 ubox
27 68 0.174043484 ubox
28 54 0.122605129 ubox
28 56 0.681626765 ubox
28 59 0.415023642 ubox
28 60 0.060857074 ubox
28 63 0.021471685 ubox
28 67 0.171441317 ubox
29 53 0.122424930 ubox
29 55 0.681095594 ubox
29 57 0.631573323 ubox
29 58 0.296766136 ubox
29 62 0.028619504 ubox
29 65 0.083751942 ubox
29 66 0.152625160 ubox
30 52 0.099368112 ubox
30 54 0.610347510 ubox
30 56 0.696696479 ubox
30 64 0.114579929 ubox
31 51 0.070489436 ubox
31 52 0.552017448 ubox
31 60 0.029667008 ubox
31 63 0.114764906 ubox
31 64 0.130813968 ubox
32 51 0.613944649 ubox
32 54 0.754315636 ubox
32 56 0.004086482 ubox
32 59 0.029968723 ubox
32 63 0.130809198 ubox
33 50 0.618006248 ubox
33 53 0.765139406 ubox
33 55 0.004064615 ubox
33 58 0.029973849 ubox
33 61 0.142607908 ubox
33 62 0.099620790 ubox
34 49 0.617948353 ubox
34 52 0.765350721 ubox
34 54 0.003401714 ubox
34 60 0.165810801 ubox
35 46 0.006575769 ubox
35 48 0.617683742 ubox
35 51 0.766021548 ubox
35 56 0.030080793 ubox
35 59 0.171637686 ubox
36 45 0.006676418 ubox
36 47 0.617643984 ubox
36 50 0.765682919 ubox
36 53 0.003236881 ubox
36 55 0.030106388 ubox
36 57 0.085890410 ubox
36 58 0.150987389 ubox
37 46 0.598641898 ubox
37 49 0.712327165 ubox
37 54 0.029655950 ubox
37 56 0.118381871 ubox
37 60 0.003177515 ubox
38 48 0.602149627 ubox
38 49 0.280055995 ubox
38 52 0.027404804 ubox
38 59 0.003171472 ubox
39 46 0.609551844 ubox
39 48 0.395917459 ubox
39 51 0.030340186 ubox
39 54 0.119445333 ubox
39 56 0.126374194 ubox
40 45 0.613824713 ubox
40 47 0.485813727 ubox
40 50 0.030393401 ubox
40 53 0.119456061 ubox
40 55 0.126445121 ubox
41 46 0.484288577 ubox
41 49 0.030339861 ubox
41 52 0.119155046 ubox
41 54 0.126410447 ubox
42 48 0.028861990 ubox
42 51 0.119088619 ubox
42 52 0.005104984 ubox
43 48 0.004187113 ubox
43 49 0.046319345 ubox
43 51 0.006379120 ubox
43 52 0.123905558 ubox
44 48 0.030139475 ubox
44 51 0.123312138 ubox
44 52 0.023076917 ubox
45 51 0.027939446 ubox
46 50 0.031501316 ubox
55 78 0.007425600 ubox
56 77 0.007477721 ubox
57 64 0.003822811 ubox
58 63 0.003819287 ubox
58 75 0.011623348 ubox
58 78 0.003578613 ubox
59 74 0.011377308 ubox
59 77 0.003617681 ubox
60 74 0.004243885 ubox
61 73 0.012948139 ubox
62 72 0.012989189 ubox
63 71 0.012989846 ubox
64 70 0.012987699 ubox
5 78 0.9500000 lbox
6 77 0.9500000 lbox
7 76 0.9500000 lbox
8 75 0.9500000 lbox
9 73 0.9500000 lbox
10 72 0.9500000 lbox
11 71 0.9500000 lbox
12 70 0.9500000 lbox
13 69 0.9500000 lbox
14 68 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
20 65 0.9500000 lbox
21 64 0.9500000 lbox
22 63 0.9500000 lbox
29 57 0.9500000 lbox
30 56 0.9500000 lbox
32 54 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
