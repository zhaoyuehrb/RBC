%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUCGUCUAUGCUCCAGCAGCCGUACCUCACUCCGGUGGAGGCGGGACUUCCUACAGCACUUCCGGCCAGAGCCUCAAGCUUCGCUGCUGGGCAGUUGGCUGGAGGGGCUGCUGCUGGGAACACCUGGAGUCUCCGCGGGCAGAUCUCAUAUUUUGGAUUCUGGAUAUAUUAUA\
) } def
/len { sequence length } bind def

/coor [
[86.99266052 663.99078369]
[71.91329956 665.71624756]
[57.22988510 661.87414551]
[44.92822647 652.98406982]
[36.67202377 640.24829102]
[33.57785797 625.38928223]
[36.06418991 610.41656494]
[43.79476547 597.35504150]
[55.72408676 587.97125244]
[70.23881531 583.53424072]
[71.30286407 568.57202148]
[72.36692047 553.60980225]
[73.43096924 538.64758301]
[70.76072693 531.73089600]
[74.64900208 523.43005371]
[75.97843933 508.48907471]
[77.30787659 493.54809570]
[78.63731384 478.60711670]
[79.96675110 463.66616821]
[68.63746643 454.03363037]
[65.11089325 439.40396118]
[70.94320679 425.33850098]
[84.09135437 417.31152344]
[85.42079163 402.37054443]
[86.75022888 387.42956543]
[70.54795074 380.46426392]
[57.66462326 368.38601685]
[49.64831161 352.62405396]
[47.46975708 335.05154419]
[51.40485764 317.76303101]
[60.99984360 302.82470703]
[75.12352753 292.02746582]
[92.10066223 286.67230225]
[92.36688232 271.67465210]
[92.50000000 256.67523193]
[92.50000000 241.67524719]
[84.76270294 228.94796753]
[92.50000000 215.14779663]
[92.50000000 200.14779663]
[92.50000000 185.14779663]
[92.50000000 170.14779663]
[92.50000000 155.14779663]
[92.50000000 140.14779663]
[92.50000000 125.14780426]
[92.50000000 110.14780426]
[92.10069275 95.15311432]
[91.30236053 80.17437744]
[90.50402832 65.19564056]
[79.03238678 54.65812302]
[78.43614197 39.45617676]
[88.55274200 28.58465958]
[87.75440979 13.60591984]
[86.95607758 -1.37282062]
[86.15774536 -16.35156059]
[85.35941315 -31.33030128]
[84.56108093 -46.30904007]
[83.62985229 -61.28010941]
[82.56580353 -76.24231720]
[81.50174713 -91.20452881]
[80.43769836 -106.16674805]
[79.37364197 -121.12895966]
[77.91166687 -136.05754089]
[76.05280304 -150.94190979]
[74.19393921 -165.82629395]
[72.33506775 -180.71066284]
[70.47620392 -195.59504700]
[68.61734009 -210.47941589]
[66.75847626 -225.36378479]
[64.89960480 -240.24816895]
[63.04074097 -255.13253784]
[61.18187714 -270.01690674]
[59.32300949 -284.90127563]
[47.87140656 -299.30303955]
[55.28269958 -315.19558716]
[53.15995789 -330.04461670]
[51.03721237 -344.89367676]
[48.91447067 -359.74270630]
[45.10986710 -365.21145630]
[44.72073364 -370.92062378]
[46.98962021 -375.15542603]
[45.39521790 -390.07043457]
[43.80081558 -404.98547363]
[31.34510803 -414.71331787]
[29.49916458 -430.40942383]
[39.35815048 -442.76159668]
[55.07290268 -444.44146729]
[67.32014465 -434.45245361]
[68.83379364 -418.72082520]
[58.71583939 -406.57986450]
[60.31024170 -391.66485596]
[61.90464401 -376.74981689]
[63.76350784 -361.86544800]
[65.88625336 -347.01641846]
[68.00899506 -332.16735840]
[70.13173676 -317.31832886]
[79.63024902 -309.79644775]
[81.50480652 -297.42025757]
[74.20738220 -286.76016235]
[76.06625366 -271.87579346]
[77.92511749 -256.99139404]
[79.78398132 -242.10702515]
[81.64284515 -227.22265625]
[83.50171661 -212.33828735]
[85.36058044 -197.45390320]
[87.21944427 -182.56953430]
[89.07830811 -167.68515015]
[90.93717957 -152.80078125]
[92.79604340 -137.91641235]
[95.37011719 -135.46379089]
[96.86882019 -131.62998962]
[96.65042114 -126.94130707]
[94.33585358 -122.19300842]
[95.39990997 -107.23079681]
[96.46395874 -92.26858521]
[97.52801514 -77.30637360]
[98.59206390 -62.34415817]
[102.21425629 -55.87496948]
[99.53982544 -47.10737610]
[100.33815765 -32.12863541]
[101.13648987 -17.14989281]
[101.93482208 -2.17115331]
[102.73315430 12.80758762]
[103.53148651 27.78632736]
[114.74635315 37.52092743]
[115.76934814 52.70012665]
[105.48276520 64.39730835]
[106.28109741 79.37604523]
[107.07942963 94.35478210]
[109.58187866 97.33483124]
[110.74434662 101.41104126]
[110.10407257 105.95347595]
[107.50000000 110.14780426]
[107.50000000 125.14780426]
[107.50000000 140.14779663]
[107.50000000 155.14779663]
[107.50000000 170.14779663]
[107.50000000 185.14779663]
[107.50000000 200.14779663]
[107.50000000 215.14779663]
[115.23729706 228.94796753]
[107.50000000 241.67524719]
[107.50000000 256.67523193]
[110.63727570 265.28808594]
[107.36451721 271.94088745]
[107.09829712 286.93850708]
[119.08905029 290.50296021]
[129.85862732 296.84506226]
[138.77557373 305.58676147]
[145.31854248 316.20947266]
[149.10678101 328.08486938]
[149.92231750 340.51202393]
[147.72244263 352.75881958]
[142.64198303 364.10504150]
[134.98493958 373.88473511]
[125.20645142 381.52526855]
[113.88559723 386.58096313]
[101.69119263 388.75900269]
[100.36176300 403.69998169]
[99.03232574 418.64096069]
[110.55665588 428.86328125]
[113.81393433 443.73751831]
[107.75973511 457.51470947]
[94.90772247 464.99560547]
[93.57828522 479.93655396]
[92.24884796 494.87753296]
[90.91941071 509.81851196]
[89.58997345 524.75946045]
[88.39318085 539.71166992]
[87.32913208 554.67388916]
[86.26507568 569.63610840]
[85.20102692 584.59826660]
[98.94176483 591.04473877]
[109.42306519 602.02227783]
[115.22742462 616.04632568]
[115.56985474 631.22021484]
[110.40403748 645.49182129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 171]
[11 170]
[12 169]
[13 168]
[15 167]
[16 166]
[17 165]
[18 164]
[19 163]
[23 159]
[24 158]
[25 157]
[33 145]
[34 144]
[35 142]
[36 141]
[38 139]
[39 138]
[40 137]
[41 136]
[42 135]
[43 134]
[44 133]
[45 132]
[46 128]
[47 127]
[48 126]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[56 118]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 108]
[63 107]
[64 106]
[65 105]
[66 104]
[67 103]
[68 102]
[69 101]
[70 100]
[71 99]
[72 98]
[74 95]
[75 94]
[76 93]
[77 92]
[80 91]
[81 90]
[82 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
