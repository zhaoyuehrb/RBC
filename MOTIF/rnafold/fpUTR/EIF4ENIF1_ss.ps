%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAGGGGGAGGGGGCCGAAGAGGAGGGGCGGAGGGCCGGGCUGCAGUUACGGCGGCUGAAGAGAGACAGCCCAAGCCGGUCGGGGUGGGGGCGCGAGAGCGAAGGCUGCGGGGAGCGGCGCUGGGACCGGUGCGGGCAGCGGGGAGGGGAGCGGCGGCCGAGGCAAAGGGCCGCCGAGCGGCGGAGGCACCGAGUGCAGAGCAUUGUAGACCAAGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[139.73025513 280.24493408]
[130.19122314 291.82107544]
[117.34194946 299.56033325]
[102.64892578 302.57943726]
[87.78906250 300.53381348]
[74.45832062 293.65695190]
[64.17812347 282.73370361]
[58.12176132 269.01071167]
[56.98044205 254.05419922]
[60.88442230 239.57113647]
[69.38813782 227.21449280]
[81.52107239 218.39451599]
[95.89848328 214.11782837]
[110.87948608 214.87254333]
[124.75429535 220.57250977]
[135.94096375 230.56916809]
[131.16525269 216.34973145]
[126.38954163 202.13027954]
[121.61383057 187.91084290]
[111.68787384 189.77119446]
[101.61647034 190.51441956]
[91.52494812 190.13127136]
[81.53889465 188.62652588]
[71.78256989 186.01889038]
[62.37738800 182.34083557]
[53.44038773 177.63810730]
[45.08278275 171.96923828]
[37.40857315 165.40478516]
[30.51326180 158.02642822]
[18.24283981 166.65409851]
[5.97241640 175.28176880]
[1.81206334 190.77600098]
[-12.95270443 197.05143738]
[-26.99562073 189.29411316]
[-29.54416275 173.45478821]
[-18.64330673 161.68402100]
[-2.65525579 163.01135254]
[9.61516666 154.38368225]
[21.88558960 145.75599670]
[16.18039322 134.20155334]
[12.17352772 121.95412445]
[-2.63004684 124.37366486]
[-17.43362236 126.79320526]
[-32.23719788 129.21273804]
[-47.04077148 131.63227844]
[-61.84434509 134.05181885]
[-69.67602539 147.58691406]
[-84.39318848 152.87266541]
[-99.04683685 147.41331482]
[-106.71796417 133.78657532]
[-103.78450775 118.42660522]
[-91.63154602 108.58589172]
[-75.99733734 108.91093445]
[-64.26388550 119.24824524]
[-49.46031189 116.82870483]
[-34.65673447 114.40916443]
[-19.85316086 111.98963165]
[-5.04958582 109.57009125]
[9.75398922 107.15055084]
[9.53061104 96.71938324]
[10.50892353 86.33178711]
[12.67593193 76.12574768]
[16.00285339 66.23682404]
[20.44549561 56.79637146]
[25.94484711 47.92978668]
[32.42786407 39.75484085]
[39.80842972 32.38012314]
[47.98851013 25.90359116]
[56.85945511 20.41126823]
[66.30342102 15.97611237]
[76.19498444 12.65703201]
[73.46318054 -2.09211206]
[70.73137665 -16.84125710]
[67.99958038 -31.59040070]
[55.25965881 -40.55322266]
[52.69932938 -55.54986572]
[61.32252121 -67.64019775]
[58.59072113 -82.38934326]
[55.85891724 -97.13848877]
[53.12711716 -111.88763428]
[50.39531708 -126.63677979]
[47.66351318 -141.38592529]
[44.93171310 -156.13507080]
[32.19179153 -165.09788513]
[29.63146210 -180.09452820]
[38.25465393 -192.18486023]
[35.52285385 -206.93400574]
[32.79104996 -221.68315125]
[30.01286697 -206.94267273]
[19.05338097 -196.70111084]
[4.15873146 -194.92645264]
[-8.90030098 -202.30625916]
[-15.06412792 -215.98132324]
[-11.94478035 -230.65312195]
[-17.31701279 -244.65809631]
[-22.68924332 -258.66305542]
[-35.76502609 -268.56033325]
[-33.46342087 -284.79714966]
[-18.15211868 -290.67050171]
[-5.58207512 -280.13833618]
[-8.68427467 -264.03527832]
[-3.31204367 -250.03031921]
[2.06018734 -236.02534485]
[9.47828293 -237.13073730]
[14.98151875 -251.08474731]
[24.31447411 -239.34149170]
[31.73256874 -240.44686890]
[32.78828430 -255.40966797]
[33.84400177 -270.37246704]
[34.89971542 -285.33526611]
[35.95543289 -300.29806519]
[26.56591988 -313.30639648]
[31.02057457 -328.71859741]
[45.90216827 -334.71173096]
[59.79481506 -326.68838501]
[62.04126740 -310.80340576]
[50.91823578 -299.24237061]
[49.86251831 -284.27954102]
[48.80680466 -269.31674194]
[47.75108719 -254.35394287]
[46.69537354 -239.39114380]
[47.54019547 -224.41496277]
[50.27199936 -209.66581726]
[53.00379944 -194.91667175]
[65.38510132 -186.71673584]
[68.36564636 -171.79792786]
[59.68085861 -158.86686707]
[62.41265869 -144.11772156]
[65.14446259 -129.36857605]
[67.87625885 -114.61943817]
[70.60806274 -99.87029266]
[73.33986664 -85.12114716]
[76.07166290 -70.37200165]
[88.45297241 -62.17206955]
[91.43350983 -47.25325775]
[82.74872589 -34.32220078]
[85.48052216 -19.57305717]
[88.21232605 -4.82391357]
[90.94412994 9.92523098]
[100.30072021 9.47164822]
[109.65409088 9.98738194]
[118.90409088 11.46690845]
[127.95167542 13.89438725]
[136.69998169 17.24382591]
[145.05532837 21.47936058]
[152.92823792 26.55563927]
[160.23445129 32.41831207]
[166.89569092 39.00460434]
[172.84068298 46.24399185]
[178.00572205 54.05895996]
[182.33554077 62.36583710]
[185.78376770 71.07566833]
[188.31349182 80.09520721]
[189.89759827 89.32787323]
[204.88830566 88.79969025]
[219.87899780 88.27149963]
[234.86968994 87.74331665]
[249.86039734 87.21513367]
[264.85107422 86.68694305]
[279.84179688 86.15876007]
[294.83248901 85.63057709]
[302.62240601 72.31438446]
[316.38528442 65.34401703]
[331.72949219 66.94368744]
[343.75872803 76.60294342]
[348.63449097 91.23955536]
[344.80096436 106.18303680]
[333.48138428 116.66497040]
[318.28781128 119.34061432]
[304.06848145 113.35617828]
[295.36065674 100.62127686]
[280.36996460 101.14945984]
[265.37927246 101.67764282]
[250.38858032 102.20583344]
[235.39787292 102.73401642]
[220.40718079 103.26219940]
[205.41648865 103.79039001]
[190.42578125 104.31857300]
[182.66976929 136.89418030]
[163.60266113 164.42184448]
[135.83326721 183.13513184]
[140.60897827 197.35456848]
[145.38468933 211.57402039]
[150.16040039 225.79345703]
[155.50314331 229.24710083]
[158.66667175 234.12326050]
[159.45191956 239.33071899]
[158.13681030 243.86842346]
[165.42230225 256.98031616]
[172.70777893 270.09219360]
[186.17388916 278.39727783]
[185.59214783 293.28051758]
[192.87763977 306.39242554]
[211.96699524 307.90411377]
[226.16896057 320.52386475]
[229.85568237 339.00820923]
[221.71278381 355.84005737]
[229.54576111 368.63241577]
[237.37873840 381.42477417]
[245.21170044 394.21716309]
[260.63467407 397.66784668]
[269.02969360 411.05810547]
[265.41613770 426.44375610]
[251.93785095 434.69671631]
[236.59127808 430.92068481]
[228.48127747 417.35589600]
[232.41934204 402.05010986]
[224.58636475 389.25775146]
[216.75340271 376.46539307]
[208.92042542 363.67303467]
[197.84823608 364.90985107]
[187.06381226 361.91580200]
[178.13241577 355.08581543]
[172.36514282 345.37432861]
[170.62644958 334.16217041]
[173.20483398 323.06021118]
[179.76574707 313.67791748]
[172.48025513 300.56600952]
[159.53524780 293.19879150]
[159.59590149 277.37768555]
[152.31040955 264.26580811]
[145.02491760 251.15391541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 184]
[17 183]
[18 182]
[19 181]
[29 39]
[30 38]
[31 37]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[71 139]
[72 138]
[73 137]
[74 136]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[86 124]
[87 123]
[88 122]
[94 103]
[95 102]
[96 101]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[160 172]
[161 171]
[188 222]
[189 221]
[190 220]
[192 218]
[193 217]
[197 210]
[198 209]
[199 208]
[200 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
