%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL3L3)
} def

/sequence { (\
AGGCAGCAAAGAGUAGUCAGUCCCUUCUUGGCUCUGCUGACACUCGAGCCCACAUUCCAUCACCUGCUCCCAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 44 0.004035667 ubox
1 65 0.023373912 ubox
1 68 0.014103802 ubox
2 38 0.003917054 ubox
2 43 0.004616725 ubox
2 50 0.143324856 ubox
2 51 0.134949572 ubox
2 55 0.003482504 ubox
2 58 0.019050933 ubox
2 64 0.024768515 ubox
2 67 0.011545033 ubox
2 68 0.350936916 ubox
2 69 0.082371251 ubox
2 70 0.426913078 ubox
2 71 0.771322924 ubox
2 75 0.005432498 ubox
3 37 0.004243457 ubox
3 43 0.003477575 ubox
3 49 0.143933284 ubox
3 50 0.134039436 ubox
3 57 0.019033378 ubox
3 63 0.024713194 ubox
3 67 0.381025190 ubox
3 68 0.010077040 ubox
3 69 0.428613952 ubox
3 70 0.770730957 ubox
3 74 0.004053294 ubox
4 36 0.004250013 ubox
4 39 0.021141445 ubox
4 48 0.144006078 ubox
4 66 0.381786372 ubox
5 35 0.004040385 ubox
5 38 0.021232946 ubox
5 56 0.007956428 ubox
5 65 0.380739594 ubox
5 68 0.864898996 ubox
6 34 0.003842464 ubox
6 37 0.021247051 ubox
6 49 0.197379391 ubox
6 64 0.355341773 ubox
6 67 0.880644508 ubox
7 36 0.021222422 ubox
7 48 0.208753967 ubox
7 66 0.880510418 ubox
8 35 0.014860443 ubox
8 56 0.003676038 ubox
8 65 0.821899260 ubox
9 29 0.017333626 ubox
9 55 0.004380481 ubox
9 56 0.016452323 ubox
10 28 0.018450437 ubox
10 35 0.016742817 ubox
10 44 0.007025066 ubox
10 55 0.016418471 ubox
10 56 0.003891912 ubox
10 65 0.013494150 ubox
11 18 0.007957956 ubox
11 22 0.004616257 ubox
11 27 0.018588598 ubox
11 29 0.006776861 ubox
11 34 0.021499367 ubox
11 43 0.007346678 ubox
11 45 0.996966440 ubox
11 57 0.007092655 ubox
11 61 0.014552098 ubox
11 64 0.013140752 ubox
11 69 0.035543802 ubox
12 17 0.007763141 ubox
12 21 0.004624133 ubox
12 25 0.004794522 ubox
12 26 0.017886778 ubox
12 28 0.007389039 ubox
12 33 0.021192083 ubox
12 35 0.016595472 ubox
12 38 0.005117359 ubox
12 44 0.998049413 ubox
12 56 0.006909373 ubox
12 60 0.011829864 ubox
12 68 0.035635885 ubox
13 24 0.006254317 ubox
13 25 0.013845701 ubox
13 27 0.007443297 ubox
13 32 0.020636083 ubox
13 34 0.018535666 ubox
13 37 0.005306364 ubox
13 41 0.010398108 ubox
13 43 0.998313495 ubox
13 55 0.006536956 ubox
13 63 0.006205387 ubox
13 67 0.035651115 ubox
14 31 0.019816783 ubox
14 36 0.005282840 ubox
14 39 0.026891988 ubox
14 40 0.008070162 ubox
14 42 0.992712348 ubox
14 54 0.006324448 ubox
14 62 0.005912539 ubox
14 66 0.035641371 ubox
15 25 0.009260241 ubox
15 28 0.007242921 ubox
15 29 0.003331176 ubox
15 33 0.020399120 ubox
15 35 0.004983274 ubox
15 38 0.052904292 ubox
15 65 0.035598559 ubox
16 24 0.010141723 ubox
16 27 0.007685958 ubox
16 32 0.021401916 ubox
16 34 0.004839372 ubox
16 37 0.053361009 ubox
16 41 0.996537831 ubox
16 53 0.004124305 ubox
16 63 0.004035914 ubox
16 64 0.035186311 ubox
17 31 0.021697105 ubox
17 36 0.011086659 ubox
17 40 0.996974840 ubox
17 52 0.003911441 ubox
17 62 0.005357391 ubox
18 30 0.023102415 ubox
18 36 0.059109648 ubox
18 39 0.996798935 ubox
19 25 0.006725727 ubox
19 26 0.003466597 ubox
19 28 0.018659128 ubox
19 29 0.020154424 ubox
19 33 0.012836666 ubox
19 35 0.067887603 ubox
19 38 0.995977238 ubox
20 24 0.006815927 ubox
20 27 0.022017372 ubox
20 28 0.015053122 ubox
20 32 0.017361721 ubox
20 34 0.075088053 ubox
20 37 0.995517190 ubox
20 60 0.010439034 ubox
21 31 0.015778387 ubox
21 36 0.977547324 ubox
21 59 0.010325242 ubox
22 30 0.021675316 ubox
22 31 0.498957934 ubox
23 30 0.495197357 ubox
23 31 0.822522991 ubox
24 30 0.825503537 ubox
24 31 0.210435314 ubox
25 30 0.205721274 ubox
25 31 0.024449297 ubox
26 30 0.020618336 ubox
29 52 0.007078964 ubox
30 35 0.006255789 ubox
30 50 0.041794240 ubox
30 51 0.006628362 ubox
31 37 0.003532293 ubox
31 49 0.042147941 ubox
31 50 0.004870770 ubox
32 36 0.004612784 ubox
32 48 0.042388120 ubox
33 47 0.042374720 ubox
34 46 0.042233091 ubox
35 42 0.017054061 ubox
36 41 0.017191549 ubox
36 45 0.013510038 ubox
36 49 0.020323535 ubox
37 48 0.020421372 ubox
38 46 0.004988245 ubox
38 47 0.019879682 ubox
39 45 0.013241371 ubox
40 44 0.011543160 ubox
46 56 0.091307135 ubox
46 57 0.687518661 ubox
46 61 0.394041986 ubox
46 65 0.003278772 ubox
46 69 0.182456941 ubox
47 55 0.099291022 ubox
47 56 0.685896304 ubox
47 60 0.389848185 ubox
47 65 0.032886854 ubox
47 68 0.182880304 ubox
48 55 0.540677375 ubox
48 64 0.038237816 ubox
48 67 0.182954405 ubox
49 66 0.182321033 ubox
51 66 0.010215808 ubox
52 65 0.013953118 ubox
53 66 0.019729305 ubox
54 60 0.048445389 ubox
54 65 0.019909411 ubox
54 74 0.005132012 ubox
55 59 0.046101082 ubox
55 73 0.005488315 ubox
56 72 0.005162083 ubox
58 66 0.026924284 ubox
59 65 0.028354845 ubox
59 74 0.003183795 ubox
60 73 0.003298667 ubox
65 72 0.031697542 ubox
66 71 0.033880922 ubox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
8 65 0.9500000 lbox
11 45 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
showpage
end
%%EOF
