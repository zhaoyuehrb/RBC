%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PMM1)
} def

/sequence { (\
AUCCCUGAGCUGCUUCUGCCGUUGCAUCUUCGGGACUCCGCCCCGCGCGCGGACCUGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.111307046 ubox
2 35 0.099352304 ubox
3 7 0.117967616 ubox
3 34 0.108677779 ubox
4 33 0.108683482 ubox
4 34 0.025739722 ubox
5 32 0.108566854 ubox
5 33 0.025963186 ubox
5 60 0.003397981 ubox
6 26 0.011784424 ubox
6 32 0.026096107 ubox
6 59 0.003416657 ubox
7 20 0.006794115 ubox
7 25 0.012680409 ubox
7 28 0.008489893 ubox
7 30 0.103474465 ubox
7 31 0.031214423 ubox
7 58 0.003338129 ubox
8 23 0.015379215 ubox
8 27 0.008410346 ubox
8 29 0.108161780 ubox
8 30 0.025451285 ubox
9 19 0.009521904 ubox
9 22 0.016622442 ubox
9 25 0.009273569 ubox
9 28 0.109446226 ubox
9 29 0.015577495 ubox
9 58 0.003162325 ubox
9 61 0.991140279 ubox
10 18 0.009531815 ubox
10 21 0.016845276 ubox
10 24 0.009315904 ubox
10 57 0.003179592 ubox
10 60 0.993470721 ubox
11 26 0.109931835 ubox
11 59 0.993266383 ubox
12 19 0.019214038 ubox
12 22 0.007649168 ubox
12 25 0.111110336 ubox
12 58 0.993500179 ubox
13 18 0.019299655 ubox
13 21 0.007894828 ubox
13 24 0.111080061 ubox
13 57 0.992991024 ubox
14 35 0.003429482 ubox
14 53 0.025063662 ubox
15 34 0.003739659 ubox
15 35 0.004328498 ubox
15 52 0.013605078 ubox
15 53 0.802815677 ubox
16 33 0.003778737 ubox
16 34 0.004650632 ubox
16 51 0.013497497 ubox
16 52 0.818507834 ubox
17 26 0.034537621 ubox
17 32 0.003633867 ubox
17 49 0.004845889 ubox
17 51 0.817965101 ubox
18 25 0.038350637 ubox
18 31 0.003433922 ubox
18 48 0.005761674 ubox
18 50 0.818549778 ubox
18 56 0.003735125 ubox
19 24 0.038188495 ubox
19 33 0.015800484 ubox
19 47 0.005473853 ubox
19 49 0.739937232 ubox
19 52 0.560884753 ubox
20 32 0.016281024 ubox
20 45 0.011221670 ubox
20 47 0.611196827 ubox
20 49 0.349721102 ubox
20 51 0.561170597 ubox
21 27 0.003636054 ubox
21 31 0.016556790 ubox
21 44 0.011254873 ubox
21 46 0.609719521 ubox
21 48 0.494184650 ubox
21 50 0.560935574 ubox
21 61 0.013196088 ubox
22 26 0.004998894 ubox
22 45 0.425193451 ubox
22 47 0.356858523 ubox
22 49 0.419551828 ubox
22 52 0.003439829 ubox
22 60 0.013225742 ubox
23 32 0.005517764 ubox
23 40 0.008317262 ubox
23 45 0.128757413 ubox
23 47 0.428752332 ubox
23 49 0.367492711 ubox
23 51 0.004047782 ubox
23 59 0.013303713 ubox
24 31 0.036634983 ubox
24 39 0.008362367 ubox
24 41 0.129052087 ubox
24 44 0.179382573 ubox
24 46 0.556640411 ubox
24 48 0.533661167 ubox
24 50 0.008641434 ubox
24 58 0.013383850 ubox
24 61 0.003389098 ubox
25 40 0.123774504 ubox
25 45 0.547398153 ubox
25 47 0.533218998 ubox
25 49 0.009234821 ubox
25 57 0.013205174 ubox
25 60 0.003324125 ubox
26 56 0.010840728 ubox
27 34 0.015455413 ubox
27 35 0.052712955 ubox
28 32 0.005401751 ubox
28 33 0.016995705 ubox
28 34 0.054080651 ubox
28 60 0.012309102 ubox
29 33 0.048729081 ubox
29 35 0.009424422 ubox
29 59 0.012353476 ubox
30 34 0.008802961 ubox
30 59 0.003321245 ubox
31 40 0.511583034 ubox
31 45 0.668984539 ubox
31 47 0.005698248 ubox
31 57 0.017182155 ubox
32 38 0.008732160 ubox
32 39 0.521801170 ubox
32 42 0.031849231 ubox
32 43 0.331570126 ubox
32 44 0.767948129 ubox
32 46 0.007667674 ubox
32 55 0.012585256 ubox
32 56 0.038740755 ubox
33 37 0.005853364 ubox
33 38 0.520067125 ubox
33 39 0.042125124 ubox
33 41 0.031892926 ubox
33 42 0.335576962 ubox
33 43 0.766539708 ubox
33 44 0.036804111 ubox
33 54 0.012562985 ubox
33 55 0.040956048 ubox
34 38 0.042325901 ubox
34 41 0.338141618 ubox
34 42 0.764068618 ubox
34 43 0.036975253 ubox
34 54 0.040879892 ubox
34 55 0.003947324 ubox
36 52 0.010268878 ubox
36 60 0.005400164 ubox
37 51 0.009854831 ubox
37 52 0.004046890 ubox
37 53 0.111331580 ubox
37 59 0.003606475 ubox
38 51 0.005246721 ubox
38 52 0.119842036 ubox
39 47 0.006032233 ubox
39 49 0.012014449 ubox
39 51 0.119872460 ubox
40 46 0.012736727 ubox
40 48 0.013157708 ubox
40 50 0.119848101 ubox
41 45 0.012773751 ubox
41 47 0.013194104 ubox
41 49 0.119720171 ubox
43 52 0.005694121 ubox
44 51 0.005747736 ubox
45 50 0.005610400 ubox
45 61 0.008291896 ubox
46 60 0.008307153 ubox
47 58 0.005137105 ubox
47 61 0.006492867 ubox
48 57 0.005154232 ubox
48 60 0.006554678 ubox
49 56 0.003927202 ubox
49 58 0.010313112 ubox
50 57 0.010333683 ubox
51 56 0.007874716 ubox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
15 53 0.9500000 lbox
16 52 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 47 0.9500000 lbox
21 46 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
showpage
end
%%EOF
