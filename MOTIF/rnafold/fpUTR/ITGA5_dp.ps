%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ITGA5)
} def

/sequence { (\
AUUCGCCUCUGGGAGGUUUAGGAAGCGGCUCCGGGUCGGUGGCCCCAGGACAGGGAAGAGCGGGCGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.009801394 ubox
2 15 0.006749262 ubox
2 21 0.018251107 ubox
2 22 0.012417714 ubox
2 23 0.114639700 ubox
2 24 0.061263238 ubox
2 39 0.009378099 ubox
2 42 0.021921575 ubox
2 55 0.005807755 ubox
2 56 0.012658870 ubox
2 57 0.084315454 ubox
2 58 0.011122655 ubox
2 59 0.012116851 ubox
2 60 0.037923548 ubox
2 63 0.007364974 ubox
2 64 0.224768367 ubox
3 14 0.008878865 ubox
3 16 0.005214434 ubox
3 20 0.022023053 ubox
3 21 0.018203767 ubox
3 22 0.123724118 ubox
3 23 0.093053981 ubox
3 28 0.026226494 ubox
3 34 0.004402457 ubox
3 38 0.008567391 ubox
3 39 0.024658443 ubox
3 41 0.004512869 ubox
3 42 0.512183001 ubox
3 49 0.003335886 ubox
3 54 0.008946128 ubox
3 55 0.012393947 ubox
3 56 0.096756885 ubox
3 57 0.015232341 ubox
3 58 0.015025005 ubox
3 59 0.064376059 ubox
3 63 0.304878395 ubox
3 64 0.022033914 ubox
4 13 0.009069988 ubox
4 15 0.007097812 ubox
4 21 0.127337783 ubox
4 22 0.095551707 ubox
4 27 0.047723689 ubox
4 33 0.005298157 ubox
4 38 0.038654496 ubox
4 41 0.845974110 ubox
4 48 0.003445121 ubox
4 53 0.010054427 ubox
4 54 0.012578413 ubox
4 55 0.097595043 ubox
4 58 0.072745883 ubox
4 62 0.335096504 ubox
4 63 0.027182200 ubox
4 66 0.222928633 ubox
5 17 0.265441003 ubox
5 26 0.048506486 ubox
5 29 0.015797431 ubox
5 36 0.018977427 ubox
5 37 0.038780449 ubox
5 40 0.851782814 ubox
5 43 0.056874201 ubox
5 61 0.335791101 ubox
5 65 0.234115393 ubox
5 67 0.025601188 ubox
6 12 0.008189477 ubox
6 13 0.007963575 ubox
6 16 0.273383653 ubox
6 22 0.007570039 ubox
6 25 0.048366385 ubox
6 28 0.015829016 ubox
6 34 0.008525098 ubox
6 35 0.032201864 ubox
6 39 0.852485926 ubox
6 42 0.056998559 ubox
6 54 0.099753229 ubox
6 55 0.037742430 ubox
6 60 0.302483658 ubox
6 63 0.009653190 ubox
6 64 0.233946528 ubox
6 66 0.025560550 ubox
7 11 0.008192527 ubox
7 12 0.007963311 ubox
7 15 0.273575013 ubox
7 21 0.007631058 ubox
7 22 0.006338799 ubox
7 27 0.015821219 ubox
7 33 0.008555091 ubox
7 34 0.032295706 ubox
7 35 0.023250578 ubox
7 38 0.851642150 ubox
7 39 0.006981489 ubox
7 41 0.056868166 ubox
7 49 0.006638305 ubox
7 53 0.099870125 ubox
7 54 0.038478314 ubox
7 55 0.266085408 ubox
7 58 0.082933022 ubox
7 60 0.154598189 ubox
7 62 0.012379987 ubox
7 63 0.228244074 ubox
7 64 0.008843133 ubox
8 14 0.273374073 ubox
8 20 0.007338350 ubox
8 22 0.030305226 ubox
8 23 0.042626175 ubox
8 33 0.028388046 ubox
8 34 0.022296987 ubox
8 35 0.158746463 ubox
8 38 0.008791589 ubox
8 39 0.012114962 ubox
8 49 0.064112863 ubox
8 50 0.027306106 ubox
8 52 0.082624628 ubox
8 53 0.015844459 ubox
8 54 0.270067994 ubox
8 55 0.005366682 ubox
8 56 0.043095698 ubox
8 57 0.066375771 ubox
8 59 0.226798157 ubox
8 62 0.188995043 ubox
8 63 0.007965421 ubox
8 64 0.010274845 ubox
9 13 0.271085474 ubox
9 15 0.008391244 ubox
9 16 0.008864917 ubox
9 21 0.047789906 ubox
9 22 0.042818394 ubox
9 25 0.012798137 ubox
9 33 0.026629315 ubox
9 34 0.201566457 ubox
9 35 0.839601881 ubox
9 38 0.007824392 ubox
9 39 0.049070372 ubox
9 48 0.120774976 ubox
9 49 0.033423690 ubox
9 53 0.282037626 ubox
9 54 0.008750338 ubox
9 55 0.057284886 ubox
9 58 0.235834394 ubox
9 60 0.089899036 ubox
9 62 0.020550112 ubox
9 63 0.011643578 ubox
10 14 0.007595383 ubox
10 15 0.008803563 ubox
10 20 0.048770959 ubox
10 21 0.041267448 ubox
10 24 0.012732150 ubox
10 33 0.200382592 ubox
10 34 0.838421171 ubox
10 38 0.048725089 ubox
10 47 0.121326005 ubox
10 48 0.029646617 ubox
10 52 0.282111887 ubox
10 53 0.006762373 ubox
10 54 0.055691589 ubox
10 57 0.233537234 ubox
10 59 0.088280478 ubox
10 62 0.012728272 ubox
11 18 0.007828303 ubox
11 19 0.048488353 ubox
11 26 0.003560103 ubox
11 31 0.035171891 ubox
11 32 0.196217728 ubox
11 37 0.048526831 ubox
11 46 0.121027871 ubox
11 51 0.281624703 ubox
11 61 0.016846921 ubox
12 17 0.008846848 ubox
12 18 0.045507340 ubox
12 19 0.019416440 ubox
12 29 0.005737704 ubox
12 30 0.042781378 ubox
12 31 0.190204761 ubox
12 32 0.897814327 ubox
12 36 0.016946423 ubox
12 45 0.096182682 ubox
12 46 0.052960881 ubox
13 17 0.029719302 ubox
13 18 0.021369000 ubox
13 19 0.011193034 ubox
13 29 0.160167135 ubox
13 30 0.081602366 ubox
13 31 0.899187090 ubox
13 44 0.069752266 ubox
13 45 0.054016708 ubox
14 18 0.009940326 ubox
14 30 0.896354018 ubox
15 29 0.876235975 ubox
15 30 0.087222650 ubox
15 32 0.012382771 ubox
15 44 0.062357657 ubox
15 46 0.036523567 ubox
16 26 0.678913531 ubox
16 29 0.185928514 ubox
16 31 0.012350253 ubox
16 43 0.070844597 ubox
16 45 0.036058031 ubox
16 51 0.237084502 ubox
16 61 0.007667227 ubox
17 23 0.012057516 ubox
17 24 0.028550799 ubox
17 25 0.680664588 ubox
17 28 0.245024895 ubox
17 35 0.003856051 ubox
17 42 0.070591096 ubox
17 48 0.008565222 ubox
17 49 0.013012145 ubox
17 50 0.236911715 ubox
17 60 0.007656722 ubox
18 22 0.014814772 ubox
18 23 0.035077930 ubox
18 24 0.658071827 ubox
18 25 0.090043933 ubox
18 27 0.240562386 ubox
18 28 0.026898726 ubox
18 34 0.007876737 ubox
18 35 0.004749052 ubox
18 41 0.066817169 ubox
18 42 0.005221082 ubox
18 47 0.008033003 ubox
18 48 0.019743438 ubox
18 49 0.234517936 ubox
18 50 0.009122846 ubox
18 59 0.007556699 ubox
19 23 0.548926185 ubox
19 24 0.098933743 ubox
19 27 0.032784440 ubox
19 33 0.006672512 ubox
19 34 0.009524912 ubox
19 41 0.006995423 ubox
19 47 0.024012648 ubox
19 48 0.188020728 ubox
19 49 0.011622475 ubox
19 58 0.007286781 ubox
20 30 0.009661450 ubox
20 40 0.007491707 ubox
20 68 0.009851917 ubox
21 29 0.010949119 ubox
21 30 0.006513221 ubox
21 32 0.084235843 ubox
21 37 0.005697706 ubox
21 44 0.063527087 ubox
21 45 0.020408819 ubox
21 46 0.225741807 ubox
21 67 0.010990713 ubox
21 68 0.013604475 ubox
22 29 0.007534763 ubox
22 31 0.084343144 ubox
22 36 0.004604073 ubox
22 37 0.052397542 ubox
22 43 0.065471661 ubox
22 44 0.019530642 ubox
22 45 0.226487690 ubox
22 67 0.014958671 ubox
23 30 0.079907759 ubox
23 36 0.051601473 ubox
24 30 0.013682540 ubox
24 68 0.223798033 ubox
25 29 0.018888825 ubox
25 36 0.005003754 ubox
25 40 0.058016045 ubox
25 43 0.061249777 ubox
25 61 0.030771319 ubox
25 65 0.046000874 ubox
25 67 0.253815767 ubox
26 33 0.053883799 ubox
26 35 0.005965960 ubox
26 38 0.076795055 ubox
26 39 0.041492720 ubox
26 42 0.061324880 ubox
26 60 0.030797052 ubox
26 62 0.008946631 ubox
26 64 0.046028185 ubox
26 66 0.253764568 ubox
27 32 0.053375159 ubox
27 37 0.087455014 ubox
27 44 0.233602164 ubox
27 61 0.008443969 ubox
27 65 0.223708635 ubox
27 68 0.032733005 ubox
28 36 0.087821854 ubox
28 40 0.058739132 ubox
28 43 0.243665553 ubox
28 61 0.097315461 ubox
28 65 0.122242406 ubox
28 67 0.040599840 ubox
29 35 0.087843257 ubox
29 39 0.057285874 ubox
29 42 0.243695884 ubox
29 48 0.004068217 ubox
29 49 0.006156308 ubox
29 53 0.005800364 ubox
29 54 0.004828202 ubox
29 55 0.005311543 ubox
29 58 0.018064613 ubox
29 60 0.097429049 ubox
29 63 0.153253456 ubox
29 64 0.169399450 ubox
29 66 0.040647194 ubox
30 34 0.079138638 ubox
30 38 0.049893051 ubox
30 41 0.230132035 ubox
30 47 0.004010234 ubox
30 48 0.006131398 ubox
30 49 0.004993698 ubox
30 50 0.098909377 ubox
30 52 0.003677822 ubox
30 54 0.003648271 ubox
30 55 0.020026510 ubox
30 56 0.083039480 ubox
30 57 0.013721952 ubox
30 59 0.086177261 ubox
30 62 0.102244923 ubox
30 63 0.041487418 ubox
30 64 0.067397880 ubox
31 38 0.022539489 ubox
31 39 0.246725800 ubox
31 42 0.024125867 ubox
31 48 0.009158851 ubox
31 49 0.125097535 ubox
31 54 0.037529103 ubox
31 55 0.104049144 ubox
31 58 0.077252565 ubox
31 62 0.036506021 ubox
31 63 0.180646978 ubox
31 64 0.017486387 ubox
32 38 0.247451594 ubox
32 41 0.027286800 ubox
32 48 0.125345847 ubox
32 53 0.038870652 ubox
32 54 0.106156478 ubox
32 62 0.181577928 ubox
32 63 0.017353455 ubox
33 37 0.231594593 ubox
33 40 0.025398863 ubox
33 44 0.010727288 ubox
33 45 0.336226583 ubox
33 46 0.061624278 ubox
33 61 0.180459613 ubox
33 68 0.044340749 ubox
34 43 0.015700668 ubox
34 44 0.343983603 ubox
34 45 0.056307285 ubox
34 46 0.004212153 ubox
34 67 0.049292223 ubox
34 68 0.004079146 ubox
35 43 0.351397454 ubox
35 44 0.050188398 ubox
35 45 0.004167012 ubox
35 51 0.097216675 ubox
35 61 0.013516864 ubox
35 65 0.083698437 ubox
35 67 0.004510634 ubox
36 42 0.351747295 ubox
36 49 0.006992346 ubox
36 50 0.097191870 ubox
36 54 0.006300839 ubox
36 55 0.009597674 ubox
36 56 0.047861534 ubox
36 59 0.158986214 ubox
36 60 0.011040229 ubox
36 63 0.007605751 ubox
36 64 0.083866902 ubox
37 41 0.339559809 ubox
37 48 0.010304946 ubox
37 49 0.096699814 ubox
37 53 0.006388957 ubox
37 54 0.009963771 ubox
37 55 0.047927169 ubox
37 58 0.160667580 ubox
37 62 0.058026914 ubox
37 63 0.084222683 ubox
37 66 0.005513190 ubox
38 44 0.016039034 ubox
38 45 0.036652131 ubox
38 46 0.047557746 ubox
38 61 0.061037083 ubox
38 65 0.005758233 ubox
38 68 0.018403245 ubox
39 43 0.016700089 ubox
39 44 0.036498299 ubox
39 45 0.047588814 ubox
39 51 0.007172147 ubox
39 61 0.119535242 ubox
39 65 0.007095191 ubox
39 67 0.030724618 ubox
40 47 0.058960845 ubox
40 50 0.007016576 ubox
40 52 0.048283862 ubox
40 60 0.119688833 ubox
40 62 0.003612756 ubox
40 64 0.007058897 ubox
40 66 0.030397721 ubox
41 46 0.059738861 ubox
41 51 0.048907751 ubox
41 61 0.007924807 ubox
41 65 0.027807398 ubox
41 68 0.066157316 ubox
42 61 0.131288827 ubox
42 65 0.433098347 ubox
42 67 0.267982984 ubox
43 49 0.051030928 ubox
43 54 0.033920947 ubox
43 55 0.269586557 ubox
43 60 0.131478659 ubox
43 63 0.024699278 ubox
43 64 0.433232303 ubox
43 66 0.269346340 ubox
44 48 0.051451460 ubox
44 53 0.033968462 ubox
44 54 0.268609253 ubox
44 55 0.677104118 ubox
44 62 0.019877389 ubox
44 63 0.429680807 ubox
44 64 0.270911291 ubox
45 53 0.266636633 ubox
45 54 0.684167567 ubox
45 55 0.054475031 ubox
45 62 0.424401822 ubox
45 63 0.272519656 ubox
45 64 0.015814401 ubox
46 53 0.687096499 ubox
46 54 0.065221602 ubox
46 62 0.273849762 ubox
46 63 0.015807486 ubox
57 68 0.032880556 ubox
58 67 0.035714346 ubox
59 68 0.598691654 ubox
60 67 0.656487150 ubox
61 66 0.655822569 ubox
62 68 0.014643695 ubox
63 67 0.016363130 ubox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
7 38 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
42 65 0.9500000 lbox
43 64 0.9500000 lbox
44 63 0.9500000 lbox
45 62 0.9500000 lbox
showpage
end
%%EOF
