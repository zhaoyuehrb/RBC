%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POLR1C)
} def

/sequence { (\
GAGGCGGUGCGUUGCCACGGAGACGGAGCAGGGCUACUAGGACGCACGCGCGAGAUAGAACCUCUAGUCUCGUGGAGAGAUUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.017179597 ubox
1 64 0.475399443 ubox
1 71 0.017265954 ubox
1 82 0.011508902 ubox
2 12 0.018266369 ubox
2 38 0.019078668 ubox
2 63 0.476336660 ubox
2 65 0.038683093 ubox
2 70 0.017275850 ubox
2 81 0.011017903 ubox
2 82 0.010524571 ubox
3 13 0.008773487 ubox
3 16 0.005981321 ubox
3 37 0.019632800 ubox
3 38 0.014386827 ubox
3 62 0.476416565 ubox
3 64 0.045445344 ubox
3 65 0.040915924 ubox
3 69 0.017267268 ubox
3 81 0.008126796 ubox
3 82 0.004641442 ubox
4 10 0.019982876 ubox
4 12 0.011414276 ubox
4 15 0.006341622 ubox
4 37 0.014842233 ubox
4 45 0.358183128 ubox
4 49 0.224155681 ubox
4 51 0.720708211 ubox
4 61 0.462898464 ubox
4 63 0.044608991 ubox
4 64 0.049381791 ubox
4 68 0.016367040 ubox
5 9 0.019881506 ubox
5 11 0.011861224 ubox
5 14 0.006584259 ubox
5 44 0.358609358 ubox
5 48 0.233643176 ubox
5 50 0.727928191 ubox
5 52 0.015289464 ubox
5 67 0.016355619 ubox
5 83 0.029119140 ubox
6 10 0.011113443 ubox
6 13 0.005911641 ubox
6 35 0.014865590 ubox
6 38 0.373464540 ubox
6 43 0.328830052 ubox
6 47 0.174193042 ubox
6 49 0.725416449 ubox
6 51 0.014255608 ubox
6 62 0.085065514 ubox
6 82 0.026553105 ubox
7 12 0.004023115 ubox
7 34 0.010571256 ubox
7 37 0.476492720 ubox
7 43 0.020998275 ubox
7 45 0.056774639 ubox
7 47 0.772168747 ubox
7 49 0.003739240 ubox
7 51 0.018040458 ubox
7 56 0.014218618 ubox
7 61 0.085367332 ubox
7 81 0.022781607 ubox
8 33 0.008501185 ubox
8 36 0.469078045 ubox
8 39 0.014380676 ubox
8 42 0.028422102 ubox
8 44 0.056509456 ubox
8 46 0.788571573 ubox
8 48 0.003608289 ubox
8 50 0.018690637 ubox
8 55 0.014063388 ubox
8 57 0.010259818 ubox
8 60 0.083381482 ubox
8 80 0.022324219 ubox
9 34 0.604434699 ubox
9 35 0.091283718 ubox
9 43 0.017788200 ubox
9 45 0.789826995 ubox
9 49 0.018802255 ubox
10 33 0.611989161 ubox
10 44 0.789788281 ubox
10 48 0.018803744 ubox
11 34 0.011559033 ubox
11 37 0.005078861 ubox
11 43 0.789110768 ubox
11 47 0.018746332 ubox
11 81 0.003388205 ubox
12 31 0.627974845 ubox
12 32 0.009668040 ubox
12 33 0.012365875 ubox
12 36 0.005867562 ubox
12 40 0.007663168 ubox
12 41 0.034137821 ubox
12 42 0.758948428 ubox
12 46 0.016514478 ubox
12 77 0.005288629 ubox
12 78 0.011979488 ubox
12 80 0.003667986 ubox
13 30 0.807648000 ubox
13 31 0.012208100 ubox
13 32 0.007296049 ubox
13 36 0.008952442 ubox
13 39 0.011190432 ubox
13 40 0.027566743 ubox
13 41 0.558955016 ubox
13 44 0.005326146 ubox
13 46 0.004471173 ubox
13 76 0.006525888 ubox
13 77 0.011106923 ubox
13 79 0.003542475 ubox
14 29 0.990070578 ubox
14 34 0.103723295 ubox
14 38 0.003663784 ubox
14 43 0.005467726 ubox
14 45 0.006293935 ubox
15 26 0.035555125 ubox
15 28 0.990239521 ubox
15 32 0.007965503 ubox
15 33 0.103587063 ubox
15 41 0.047454218 ubox
15 44 0.006183474 ubox
15 75 0.031881439 ubox
16 25 0.035730029 ubox
16 31 0.010267009 ubox
16 32 0.103041779 ubox
16 40 0.048347424 ubox
16 74 0.032040727 ubox
17 73 0.032185825 ubox
18 25 0.994515159 ubox
18 72 0.032118064 ubox
19 24 0.992090446 ubox
19 35 0.009831797 ubox
19 38 0.011056798 ubox
19 71 0.023892221 ubox
20 34 0.010139495 ubox
20 37 0.011346465 ubox
20 70 0.010344163 ubox
20 71 0.021999467 ubox
21 35 0.014315845 ubox
21 38 0.006271746 ubox
21 70 0.030733155 ubox
22 34 0.014353440 ubox
22 37 0.006283344 ubox
22 69 0.032481307 ubox
23 68 0.032476258 ubox
24 67 0.032446582 ubox
25 38 0.024124318 ubox
25 65 0.007378369 ubox
26 34 0.003270765 ubox
26 37 0.034202238 ubox
26 64 0.008318184 ubox
27 35 0.072171004 ubox
27 38 0.009080493 ubox
27 63 0.007384904 ubox
27 65 0.029766139 ubox
28 34 0.073903497 ubox
28 37 0.009311307 ubox
28 62 0.005583664 ubox
28 64 0.030683474 ubox
29 33 0.073381454 ubox
30 38 0.283292283 ubox
30 63 0.031017160 ubox
31 37 0.305507169 ubox
31 38 0.459149368 ubox
31 62 0.031482136 ubox
31 63 0.005182751 ubox
32 37 0.477081454 ubox
32 38 0.081899497 ubox
32 61 0.031558160 ubox
32 62 0.006034063 ubox
33 37 0.082651673 ubox
33 45 0.011099145 ubox
33 61 0.006201485 ubox
34 40 0.113402479 ubox
34 41 0.132365083 ubox
34 44 0.011109452 ubox
34 58 0.016805891 ubox
35 39 0.102666648 ubox
35 40 0.127353645 ubox
35 57 0.018613915 ubox
36 56 0.018559102 ubox
37 54 0.023771351 ubox
37 58 0.312369403 ubox
37 79 0.003517786 ubox
37 86 0.014241642 ubox
38 53 0.023704784 ubox
38 57 0.317126373 ubox
38 78 0.003531231 ubox
38 83 0.010705807 ubox
38 85 0.014544165 ubox
39 56 0.317904797 ubox
39 63 0.008472317 ubox
39 82 0.015154432 ubox
40 62 0.009551509 ubox
40 81 0.015844684 ubox
40 82 0.007165726 ubox
41 61 0.009549752 ubox
41 81 0.007635929 ubox
41 82 0.028975705 ubox
42 81 0.028981421 ubox
43 50 0.016828611 ubox
43 52 0.459154771 ubox
43 83 0.014693602 ubox
44 49 0.016800574 ubox
44 51 0.465278983 ubox
44 82 0.013400647 ubox
45 50 0.464627079 ubox
45 83 0.012763943 ubox
46 82 0.012542118 ubox
47 74 0.016823014 ubox
47 83 0.015554587 ubox
48 73 0.013223329 ubox
48 82 0.015245725 ubox
49 72 0.012538031 ubox
49 74 0.444082301 ubox
50 71 0.010507085 ubox
50 73 0.492862647 ubox
51 72 0.496436999 ubox
52 64 0.620673415 ubox
52 69 0.009620920 ubox
52 71 0.506602621 ubox
53 63 0.621482727 ubox
53 65 0.051779794 ubox
53 68 0.009488512 ubox
53 70 0.506588208 ubox
54 62 0.620706906 ubox
54 64 0.061012685 ubox
54 69 0.506608298 ubox
55 63 0.058768923 ubox
55 68 0.497654165 ubox
55 81 0.003352688 ubox
56 66 0.361102204 ubox
56 67 0.355353976 ubox
56 80 0.003326395 ubox
56 83 0.003793186 ubox
57 63 0.026188043 ubox
57 65 0.502869360 ubox
57 82 0.004457727 ubox
58 62 0.027486087 ubox
58 64 0.506587091 ubox
58 81 0.004167399 ubox
59 63 0.440753944 ubox
59 82 0.004224964 ubox
60 81 0.004234739 ubox
62 77 0.032306505 ubox
62 79 0.007112110 ubox
62 86 0.201148291 ubox
63 76 0.032414007 ubox
63 78 0.007115521 ubox
63 84 0.164582133 ubox
63 85 0.200984062 ubox
64 75 0.032431715 ubox
64 77 0.007106720 ubox
64 83 0.174236333 ubox
64 86 0.021823591 ubox
65 74 0.032405752 ubox
65 76 0.006643614 ubox
65 83 0.767327304 ubox
65 85 0.026156831 ubox
66 73 0.031711424 ubox
66 82 0.837040147 ubox
67 81 0.857814377 ubox
68 75 0.005136710 ubox
68 78 0.013728820 ubox
68 80 0.860057733 ubox
69 74 0.005787124 ubox
69 77 0.014610055 ubox
69 79 0.860500431 ubox
70 76 0.014767163 ubox
70 78 0.860374736 ubox
71 75 0.014756719 ubox
71 77 0.860325374 ubox
72 81 0.014456390 ubox
73 80 0.015387425 ubox
74 82 0.005742452 ubox
75 81 0.006439002 ubox
75 82 0.053123311 ubox
76 81 0.054385225 ubox
76 82 0.017742279 ubox
77 81 0.013009292 ubox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 43 0.9500000 lbox
12 42 0.9500000 lbox
13 30 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
54 62 0.9500000 lbox
65 83 0.9500000 lbox
66 82 0.9500000 lbox
67 81 0.9500000 lbox
68 80 0.9500000 lbox
69 79 0.9500000 lbox
70 78 0.9500000 lbox
71 77 0.9500000 lbox
showpage
end
%%EOF
