%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR10AC1)
} def

/sequence { (\
ACCCGACUCCUCCUCCACGCGCAGGGCCAGAGCAUGCGUACCCGACAAGCUCUGCCCUCCUGUGCCUCUCUUCUACAGGUGCCUGUGGGCGGGCUCGUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 98 0.054771718 ubox
2 92 0.005931752 ubox
2 93 0.349964633 ubox
2 97 0.046165221 ubox
3 91 0.005477559 ubox
3 92 0.352910108 ubox
3 93 0.004836417 ubox
4 91 0.352909147 ubox
4 92 0.004747097 ubox
4 97 0.892907747 ubox
4 99 0.054626062 ubox
5 12 0.030002816 ubox
5 15 0.018179528 ubox
5 18 0.003644742 ubox
5 90 0.349672184 ubox
5 96 0.914092952 ubox
5 98 0.047513936 ubox
6 11 0.028306167 ubox
6 14 0.018244525 ubox
6 95 0.906011024 ubox
6 98 0.101655601 ubox
7 88 0.010628511 ubox
7 89 0.127257415 ubox
7 92 0.004476181 ubox
7 93 0.215731564 ubox
7 97 0.105595755 ubox
8 87 0.006579779 ubox
8 88 0.052537136 ubox
8 89 0.018684093 ubox
8 91 0.004011832 ubox
8 92 0.124990224 ubox
8 93 0.690785641 ubox
9 87 0.044215627 ubox
9 88 0.040939435 ubox
9 89 0.026998848 ubox
9 91 0.122308183 ubox
9 92 0.758846639 ubox
9 93 0.368316578 ubox
10 87 0.040395561 ubox
10 88 0.022273257 ubox
10 89 0.038849177 ubox
10 91 0.758421309 ubox
10 92 0.368492445 ubox
10 93 0.336717277 ubox
11 87 0.013243190 ubox
11 88 0.017962611 ubox
11 89 0.077284795 ubox
11 91 0.318821122 ubox
11 92 0.321161506 ubox
11 93 0.125692921 ubox
12 87 0.016983048 ubox
12 88 0.076703154 ubox
12 89 0.533794397 ubox
12 91 0.363207758 ubox
12 92 0.187934402 ubox
12 93 0.023418774 ubox
13 87 0.076159855 ubox
13 88 0.506095831 ubox
13 89 0.382727458 ubox
13 91 0.189155276 ubox
13 92 0.023539856 ubox
14 87 0.452923335 ubox
14 88 0.080211729 ubox
14 89 0.666517119 ubox
14 91 0.019189417 ubox
14 93 0.004563234 ubox
15 87 0.129676181 ubox
15 88 0.806867738 ubox
15 89 0.026935253 ubox
15 92 0.006949089 ubox
15 93 0.003646979 ubox
16 64 0.016823245 ubox
16 81 0.021593468 ubox
16 85 0.470454107 ubox
16 87 0.824920175 ubox
16 88 0.023032192 ubox
16 91 0.006967979 ubox
16 92 0.003705828 ubox
16 99 0.057866833 ubox
17 63 0.017125516 ubox
17 80 0.021657331 ubox
17 84 0.468004922 ubox
17 86 0.830732882 ubox
17 98 0.058339284 ubox
18 62 0.017149441 ubox
18 64 0.020833370 ubox
18 79 0.021573620 ubox
18 81 0.007301046 ubox
18 85 0.830698477 ubox
18 87 0.016488476 ubox
18 97 0.058362401 ubox
18 99 0.013892958 ubox
19 61 0.015264658 ubox
19 63 0.021957796 ubox
19 65 0.283238876 ubox
19 80 0.007048218 ubox
19 82 0.504620925 ubox
19 84 0.794124869 ubox
19 86 0.017323790 ubox
19 96 0.043789229 ubox
19 98 0.013972551 ubox
19 100 0.040412781 ubox
20 62 0.022167430 ubox
20 64 0.284006138 ubox
20 79 0.006781931 ubox
20 81 0.505778774 ubox
20 85 0.017311808 ubox
20 87 0.003416473 ubox
20 97 0.013988012 ubox
20 99 0.040712610 ubox
21 61 0.020318016 ubox
21 63 0.284402203 ubox
21 65 0.003918064 ubox
21 80 0.479948615 ubox
21 82 0.808895994 ubox
21 84 0.008397437 ubox
21 86 0.004425216 ubox
21 94 0.040439855 ubox
21 96 0.012917303 ubox
21 98 0.040649229 ubox
21 100 0.003345575 ubox
22 62 0.284527346 ubox
22 64 0.003941761 ubox
22 79 0.453291895 ubox
22 81 0.808699707 ubox
22 85 0.004457377 ubox
22 93 0.040324518 ubox
22 97 0.040607778 ubox
22 99 0.003369215 ubox
23 58 0.780434030 ubox
23 61 0.267681923 ubox
23 80 0.480784615 ubox
23 84 0.003751667 ubox
24 56 0.004526595 ubox
24 57 0.964186997 ubox
24 58 0.075802218 ubox
24 59 0.017320388 ubox
24 60 0.248837892 ubox
24 96 0.011374887 ubox
25 55 0.004176534 ubox
25 56 0.966470929 ubox
25 57 0.094902848 ubox
25 58 0.009660962 ubox
25 59 0.237897744 ubox
25 95 0.011411748 ubox
26 55 0.967942239 ubox
26 56 0.106389849 ubox
26 57 0.073296600 ubox
26 58 0.208169328 ubox
26 94 0.011459455 ubox
27 54 0.686452045 ubox
27 93 0.011448274 ubox
28 54 0.726771089 ubox
28 92 0.011413495 ubox
29 53 0.996912481 ubox
30 52 0.999970465 ubox
31 51 0.999847758 ubox
32 50 0.999987304 ubox
33 49 0.999333368 ubox
35 44 0.006858955 ubox
35 47 0.980338890 ubox
36 43 0.007722862 ubox
36 46 0.988476037 ubox
37 44 0.992278718 ubox
38 43 0.962719668 ubox
38 46 0.026577742 ubox
39 45 0.027257737 ubox
53 91 0.004508698 ubox
54 90 0.011550850 ubox
55 89 0.011565475 ubox
56 88 0.011565447 ubox
57 87 0.011557456 ubox
58 79 0.005806215 ubox
59 78 0.021810686 ubox
59 79 0.834385367 ubox
59 92 0.003883422 ubox
59 93 0.003357479 ubox
60 78 0.954603549 ubox
60 79 0.004096363 ubox
60 91 0.003848848 ubox
60 92 0.005953429 ubox
61 77 0.955361385 ubox
61 91 0.005875743 ubox
61 97 0.003703918 ubox
62 76 0.955661962 ubox
62 82 0.033366278 ubox
62 90 0.005834804 ubox
62 96 0.021007619 ubox
63 75 0.950284477 ubox
63 77 0.004251721 ubox
63 81 0.033437029 ubox
63 89 0.005296920 ubox
63 91 0.003931981 ubox
64 74 0.879702737 ubox
64 76 0.004903444 ubox
64 80 0.057425789 ubox
64 82 0.003295324 ubox
64 90 0.006661382 ubox
64 94 0.028770858 ubox
65 79 0.059678515 ubox
65 81 0.003461673 ubox
65 89 0.006767387 ubox
65 92 0.003493716 ubox
65 93 0.028945041 ubox
66 78 0.060566493 ubox
66 79 0.006517214 ubox
66 88 0.006584315 ubox
66 89 0.003462048 ubox
66 91 0.003615849 ubox
66 92 0.028979696 ubox
66 93 0.014857190 ubox
67 77 0.057658712 ubox
67 78 0.004672146 ubox
67 79 0.012524762 ubox
67 87 0.005468865 ubox
67 91 0.022667681 ubox
67 92 0.014974098 ubox
67 93 0.007853773 ubox
68 78 0.019463436 ubox
68 79 0.009127147 ubox
68 89 0.007888726 ubox
68 91 0.021321359 ubox
68 92 0.011924816 ubox
68 93 0.057679995 ubox
69 77 0.018841557 ubox
69 78 0.008143388 ubox
69 79 0.015730504 ubox
69 88 0.005863203 ubox
69 89 0.007655958 ubox
69 91 0.008343415 ubox
69 92 0.059225515 ubox
69 93 0.007447337 ubox
70 78 0.024497808 ubox
70 79 0.014100523 ubox
70 87 0.005725471 ubox
70 88 0.006950459 ubox
70 89 0.012339179 ubox
70 91 0.061800814 ubox
70 92 0.011256496 ubox
71 77 0.023527692 ubox
71 78 0.014177706 ubox
71 87 0.005897802 ubox
71 88 0.006353193 ubox
71 89 0.011344848 ubox
71 91 0.011021758 ubox
72 77 0.011358661 ubox
72 79 0.005325731 ubox
72 87 0.003483278 ubox
72 88 0.008829048 ubox
72 89 0.193429751 ubox
73 78 0.008888713 ubox
73 79 0.005365848 ubox
73 87 0.016706524 ubox
73 88 0.265168330 ubox
73 89 0.004794579 ubox
74 78 0.004960136 ubox
74 87 0.270808139 ubox
74 88 0.003538463 ubox
74 99 0.005771635 ubox
75 86 0.281945125 ubox
75 98 0.006401943 ubox
76 85 0.283227078 ubox
76 97 0.006431501 ubox
76 99 0.007121518 ubox
77 84 0.283317530 ubox
77 98 0.007048447 ubox
78 83 0.282115849 ubox
78 84 0.004716761 ubox
78 96 0.008020012 ubox
79 83 0.006751410 ubox
79 95 0.007632712 ubox
80 91 0.029292278 ubox
81 90 0.039618708 ubox
81 94 0.036566482 ubox
82 89 0.039637227 ubox
82 93 0.036642707 ubox
83 88 0.039496992 ubox
83 92 0.036719877 ubox
84 91 0.036633971 ubox
85 90 0.035971721 ubox
89 98 0.012613611 ubox
89 100 0.008361270 ubox
90 97 0.013595403 ubox
90 99 0.008603161 ubox
91 96 0.013501936 ubox
91 98 0.007962363 ubox
93 100 0.065490801 ubox
94 99 0.084203161 ubox
4 97 0.9500000 lbox
5 96 0.9500000 lbox
6 95 0.9500000 lbox
8 93 0.9500000 lbox
9 92 0.9500000 lbox
10 91 0.9500000 lbox
12 89 0.9500000 lbox
13 88 0.9500000 lbox
14 87 0.9500000 lbox
16 85 0.9500000 lbox
17 84 0.9500000 lbox
19 82 0.9500000 lbox
20 81 0.9500000 lbox
21 80 0.9500000 lbox
22 79 0.9500000 lbox
23 58 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
32 50 0.9500000 lbox
33 49 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
60 78 0.9500000 lbox
61 77 0.9500000 lbox
62 76 0.9500000 lbox
63 75 0.9500000 lbox
64 74 0.9500000 lbox
showpage
end
%%EOF
