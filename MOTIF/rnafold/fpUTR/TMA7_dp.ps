%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMA7)
} def

/sequence { (\
AGGGUGGGGCAGACGCUCCGUUUCCGGUGGCAGGGUCUGGGGAAGCGGCGGCAGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.017295360 ubox
2 16 0.019872152 ubox
2 17 0.004303530 ubox
2 18 0.093662116 ubox
2 19 0.047126584 ubox
2 23 0.006865746 ubox
2 25 0.013329055 ubox
2 59 0.017817390 ubox
3 16 0.004083605 ubox
3 17 0.102674241 ubox
3 18 0.047024201 ubox
3 19 0.010685728 ubox
3 22 0.011913901 ubox
3 24 0.013342240 ubox
3 25 0.003975679 ubox
3 58 0.016711759 ubox
3 59 0.088279853 ubox
4 10 0.003837827 ubox
4 14 0.021705497 ubox
4 16 0.113721023 ubox
4 17 0.003853568 ubox
4 18 0.010188589 ubox
4 21 0.016304538 ubox
4 23 0.011837320 ubox
4 24 0.003978179 ubox
4 46 0.033702508 ubox
4 49 0.009235566 ubox
4 56 0.009717921 ubox
4 58 0.089290178 ubox
5 9 0.003597025 ubox
5 13 0.021623828 ubox
5 15 0.113701976 ubox
5 20 0.054556014 ubox
5 45 0.033471631 ubox
5 48 0.008920743 ubox
5 55 0.009585748 ubox
5 57 0.088854480 ubox
6 14 0.113726010 ubox
6 17 0.004146868 ubox
6 18 0.003879352 ubox
6 19 0.577278471 ubox
6 56 0.067429561 ubox
6 59 0.774637736 ubox
7 16 0.004481110 ubox
7 17 0.004351321 ubox
7 18 0.578698132 ubox
7 19 0.022746240 ubox
7 58 0.783497857 ubox
7 59 0.087757723 ubox
8 16 0.004450578 ubox
8 17 0.578767574 ubox
8 18 0.022726678 ubox
8 58 0.088565103 ubox
8 59 0.135552590 ubox
9 16 0.579619229 ubox
9 52 0.051333692 ubox
9 56 0.790675714 ubox
9 58 0.137262862 ubox
10 15 0.578795379 ubox
10 39 0.036511261 ubox
10 51 0.051355696 ubox
10 55 0.790641263 ubox
10 57 0.137171262 ubox
11 38 0.036565538 ubox
12 37 0.036578699 ubox
13 36 0.036573124 ubox
14 35 0.036558774 ubox
14 47 0.021362918 ubox
14 50 0.229901302 ubox
14 57 0.012192320 ubox
15 31 0.013711196 ubox
15 46 0.021409591 ubox
15 49 0.228280215 ubox
15 52 0.769202380 ubox
15 56 0.014818189 ubox
16 30 0.013720702 ubox
16 33 0.033840138 ubox
16 45 0.021392271 ubox
16 48 0.180341226 ubox
16 51 0.770119070 ubox
16 54 0.003541279 ubox
16 55 0.014789067 ubox
17 29 0.012971549 ubox
17 32 0.033637834 ubox
17 43 0.011518889 ubox
17 44 0.017598812 ubox
17 47 0.081803215 ubox
17 48 0.007206125 ubox
17 50 0.757657143 ubox
17 53 0.003638256 ubox
17 54 0.014643944 ubox
18 27 0.020629277 ubox
18 30 0.029915673 ubox
18 41 0.004686371 ubox
18 42 0.016272158 ubox
18 47 0.045262908 ubox
18 48 0.785846957 ubox
18 50 0.004361820 ubox
19 26 0.020653833 ubox
19 29 0.029906270 ubox
19 40 0.004822021 ubox
19 41 0.016167371 ubox
19 47 0.804523229 ubox
20 25 0.020079262 ubox
20 28 0.025456118 ubox
20 31 0.004139465 ubox
20 46 0.995925410 ubox
21 27 0.015385947 ubox
21 30 0.004144328 ubox
21 43 0.051964502 ubox
21 44 0.021491731 ubox
21 45 0.995904194 ubox
22 26 0.012150616 ubox
22 29 0.003915157 ubox
22 42 0.058278132 ubox
22 43 0.026725500 ubox
22 44 0.994497389 ubox
23 35 0.009189963 ubox
23 41 0.064143078 ubox
23 42 0.029544923 ubox
23 43 0.996022420 ubox
24 34 0.009774064 ubox
24 35 0.011215248 ubox
24 40 0.069187028 ubox
24 41 0.034965691 ubox
24 42 0.996085732 ubox
25 33 0.009785553 ubox
25 34 0.011234422 ubox
25 39 0.070642867 ubox
25 40 0.039069399 ubox
25 41 0.995529494 ubox
26 37 0.018959553 ubox
26 38 0.080247406 ubox
26 59 0.007517797 ubox
27 36 0.017809375 ubox
27 37 0.080593977 ubox
27 46 0.003326168 ubox
27 49 0.004720220 ubox
27 58 0.007572516 ubox
28 35 0.038407492 ubox
28 39 0.091811762 ubox
28 45 0.003323359 ubox
28 48 0.004986557 ubox
28 57 0.007480635 ubox
29 37 0.979834880 ubox
29 38 0.100390796 ubox
29 56 0.006728750 ubox
29 59 0.007351329 ubox
30 36 0.979835944 ubox
30 37 0.101742283 ubox
30 46 0.005497448 ubox
30 56 0.003289310 ubox
30 58 0.007436467 ubox
31 35 0.975234296 ubox
31 39 0.046470283 ubox
31 45 0.005524804 ubox
31 55 0.004473497 ubox
31 57 0.007431194 ubox
32 38 0.047136519 ubox
33 37 0.046160417 ubox
33 59 0.004811935 ubox
34 58 0.004849229 ubox
35 49 0.005587558 ubox
35 52 0.003843722 ubox
35 56 0.009057913 ubox
36 48 0.003600492 ubox
36 51 0.003471790 ubox
36 55 0.009075584 ubox
37 47 0.003518119 ubox
37 48 0.005961419 ubox
37 54 0.009085821 ubox
38 47 0.006190638 ubox
38 53 0.009081757 ubox
39 46 0.006979534 ubox
39 52 0.008971923 ubox
45 52 0.004952699 ubox
45 56 0.003370569 ubox
45 58 0.013298144 ubox
46 51 0.005009500 ubox
46 55 0.003378726 ubox
46 57 0.013342542 ubox
47 56 0.011780370 ubox
47 59 0.577174178 ubox
48 56 0.040279248 ubox
48 58 0.584407589 ubox
49 55 0.041115477 ubox
49 57 0.584460597 ubox
50 56 0.583304580 ubox
50 59 0.082765709 ubox
51 58 0.083388868 ubox
52 57 0.083272243 ubox
6 59 0.9500000 lbox
7 58 0.9500000 lbox
9 56 0.9500000 lbox
10 55 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
17 50 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
31 35 0.9500000 lbox
showpage
end
%%EOF
