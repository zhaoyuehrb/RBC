%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGAACUUCCGGCUGGCUCUUCCAUCAGCUGCCUUCCCCGGGCGUCUCCCCGCAACCUCCUCAACUUCCCUAGUCAGUGACGCGGCGCCGGCCAGAAAUCCGACCGGACCGGGCUCGGGGGAGCGUGAGUUGCAGCAUGUGCCGAAGCGCCACCUCAGAAGAUAAAAAGAAAUGAGUCUCAUAUUUGGCAUUCUUUUAGUUAAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[103.95608521 114.03509521]
[100.02040100 128.50956726]
[103.86575317 143.85635376]
[93.06015778 154.10762024]
[89.12447357 168.58209229]
[85.18878937 183.05657959]
[81.25310516 197.53105164]
[82.93175507 214.40168762]
[67.18512726 220.68499756]
[56.78827286 207.29313660]
[66.77863312 193.59536743]
[70.71431732 179.12089539]
[74.65000153 164.64640808]
[78.58568573 150.17193604]
[74.45883179 135.86045837]
[85.54592896 124.57389069]
[89.48161316 110.09941101]
[86.94954681 95.31466675]
[78.42157745 82.97474670]
[69.89360046 70.63482666]
[55.68259048 63.68085480]
[54.81191635 48.81171799]
[46.28394318 36.47179794]
[37.75597000 24.13187408]
[29.22799683 11.79195213]
[20.51895332 -0.42085075]
[11.63073349 -12.50387859]
[2.74251437 -24.58690643]
[-12.63034153 -27.09948540]
[-21.47213364 -39.48000717]
[-18.98203468 -54.12019348]
[-27.87025452 -66.20322418]
[-36.75847244 -78.28624725]
[-45.64669418 -90.36927795]
[-54.53491211 -102.45230103]
[-64.12011719 -113.99023438]
[-74.36895752 -124.94292450]
[-84.61779022 -135.89559937]
[-94.86663055 -146.84829712]
[-105.11547089 -157.80097961]
[-115.36430359 -168.75366211]
[-125.61314392 -179.70634460]
[-135.86198425 -190.65904236]
[-146.11080933 -201.61172485]
[-156.35964966 -212.56440735]
[-166.60848999 -223.51708984]
[-160.62602234 -209.76173401]
[-163.51528931 -195.04261780]
[-174.25367737 -184.56947327]
[-189.04043579 -182.04913330]
[-202.64190674 -188.37367249]
[-210.24400330 -201.30458069]
[-209.15672302 -216.26327515]
[-222.25630188 -223.57087708]
[-235.35588074 -230.87846375]
[-248.45547485 -238.18605042]
[-257.10040283 -234.42823792]
[-266.36773682 -235.05915833]
[-274.18841553 -239.81123352]
[-278.87466431 -247.51094055]
[-279.48376465 -256.36614990]
[-292.24728394 -264.24603271]
[-305.06857300 -272.03158569]
[-317.94692993 -279.72235107]
[-330.62039185 -277.33068848]
[-341.18807983 -284.00024414]
[-344.27661133 -295.69488525]
[-357.04016113 -303.57473755]
[-369.80368042 -311.45462036]
[-385.68399048 -309.17535400]
[-397.26800537 -320.27447510]
[-395.66943359 -336.23767090]
[-382.11459351 -344.81936646]
[-367.00155640 -339.43643188]
[-361.92379761 -324.21813965]
[-349.16027832 -316.33828735]
[-336.39675903 -308.45840454]
[-318.85232544 -308.88607788]
[-310.25613403 -292.60070801]
[-297.37777710 -284.90994263]
[-290.02447510 -284.17941284]
[-284.36740112 -277.00955200]
[-271.60388184 -269.12969971]
[-250.99838257 -270.31777954]
[-241.14787292 -251.28564453]
[-228.04829407 -243.97804260]
[-214.94871521 -236.67045593]
[-201.84912109 -229.36286926]
[-195.58634949 -233.48931885]
[-183.06079102 -241.74221802]
[-176.79800415 -245.86866760]
[-178.34393311 -260.78878784]
[-179.88984680 -275.70892334]
[-181.43577576 -290.62902832]
[-183.09169006 -305.53735352]
[-184.85749817 -320.43304443]
[-199.30970764 -325.34182739]
[-210.19485474 -336.04119873]
[-215.35168457 -350.40676880]
[-213.75628662 -365.58627319]
[-205.72543335 -378.56582642]
[-192.85366821 -386.76828003]
[-177.69667053 -388.56506348]
[-163.26390076 -383.59939575]
[-152.42095947 -372.85726929]
[-147.32075500 -358.47149658]
[-148.97592163 -343.29837036]
[-157.05781555 -330.35058594]
[-169.96179199 -322.19885254]
[-168.19598389 -307.30316162]
[-164.28756714 -301.03186035]
[-166.51565552 -292.17495728]
[-164.96972656 -277.25482178]
[-163.42379761 -262.33471680]
[-161.87788391 -247.41458130]
[-155.65580750 -233.76593018]
[-145.40696716 -222.81324768]
[-135.15812683 -211.86056519]
[-124.90929413 -200.90786743]
[-114.66045380 -189.95518494]
[-104.41162109 -179.00250244]
[-94.16278076 -168.04981995]
[-83.91394043 -157.09713745]
[-73.66510773 -146.14443970]
[-63.41626740 -135.19175720]
[-53.16743088 -124.23907471]
[-53.68400955 -139.23017883]
[-45.38524246 -151.72538757]
[-31.36711502 -157.06318665]
[-16.85930824 -153.25221252]
[-7.27418661 -141.71421814]
[-6.18763256 -126.75361633]
[-14.00500107 -113.95171356]
[-27.80990028 -108.08444977]
[-42.45188522 -111.34052277]
[-33.56366730 -99.25749207]
[-24.67544746 -87.17446899]
[-15.78722763 -75.09143829]
[-6.89900780 -63.00841141]
[7.81853151 -61.02608490]
[17.00457764 -48.89879608]
[14.82554245 -33.47512436]
[23.71376228 -21.39209747]
[32.60198212 -9.30906963]
[37.10324097 -7.71707249]
[40.65285492 -3.28137064]
[41.56791687 3.26397967]
[50.09589005 15.60390186]
[58.62386322 27.94382477]
[67.15184021 40.28374481]
[80.75286865 46.35508347]
[82.23352814 62.10685349]
[90.76149750 74.44677734]
[99.28946686 86.78669739]
[93.34587860 73.01448822]
[94.37845612 58.05007172]
[102.15734863 45.22475052]
[114.95084381 37.39363480]
[129.91093445 36.30004883]
[143.70726013 42.18744278]
[153.26855469 53.74519348]
[156.46633911 68.40036774]
[152.58872986 82.89051056]
[142.49838257 93.99026489]
[153.82144165 103.82836914]
[165.14450073 113.66646576]
[180.63655090 116.87697601]
[185.16929626 131.06510925]
[196.49237061 140.90321350]
[207.81542969 150.74131775]
[219.13848877 160.57942200]
[230.46154785 170.41752625]
[241.78460693 180.25563049]
[253.10768127 190.09373474]
[262.33938599 188.18817139]
[271.28051758 190.70573425]
[277.96075439 196.96028137]
[280.96881104 205.45722961]
[279.74945068 214.24922180]
[290.62625122 224.57855225]
[301.50305176 234.90788269]
[316.73626709 231.95343018]
[330.78250122 238.54757690]
[338.24069214 252.15473938]
[336.24301147 267.54269409]
[325.55761719 278.79443359]
[310.29324341 281.58346558]
[296.31936646 274.83734131]
[289.00924683 261.15005493]
[291.17373657 245.78468323]
[280.29690552 235.45535278]
[269.42010498 225.12602234]
[249.00875854 222.06422424]
[243.26957703 201.41679382]
[231.94651794 191.57868958]
[220.62344360 181.74058533]
[209.30038452 171.90248108]
[197.97732544 162.06437683]
[186.65426636 152.22628784]
[175.33119202 142.38818359]
[160.64906311 139.88136292]
[155.30641174 124.98953247]
[143.98333740 115.15142822]
[132.66027832 105.31332397]
[125.48423004 107.49376678]
[130.70451355 121.55608368]
[135.92480469 135.61839294]
[143.17715454 148.74864197]
[133.71801758 160.39015198]
[119.38141632 155.97859192]
[118.10322571 141.03347778]
[114.61768341 126.44406891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[4 14]
[5 13]
[6 12]
[7 11]
[18 154]
[19 153]
[20 152]
[22 150]
[23 149]
[24 148]
[25 147]
[26 144]
[27 143]
[28 142]
[31 139]
[32 138]
[33 137]
[34 136]
[35 135]
[36 126]
[37 125]
[38 124]
[39 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[53 88]
[54 87]
[55 86]
[56 85]
[61 83]
[62 82]
[63 80]
[64 79]
[67 77]
[68 76]
[69 75]
[91 115]
[92 114]
[93 113]
[94 112]
[95 110]
[96 109]
[164 204]
[165 203]
[166 202]
[168 200]
[169 199]
[170 198]
[171 197]
[172 196]
[173 195]
[174 194]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
