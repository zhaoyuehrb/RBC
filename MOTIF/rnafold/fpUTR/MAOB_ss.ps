%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGUCCGGGCUCCCGGGGCUGGUAAUAUAGCGGCUCGCCGAGGCGCUGGUGCACGGGGGCAGCGCGCAGCAGGCCGGCGGGCAGGCGGGCGGGCUGGCUGGCACGCAGGACUGGGAUCGAGGCCCAGAAAACGGAGCAGCGGGCACCAGGGAGGCCUGGAACGGGGCGAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[165.72714233 470.67187500]
[163.86828613 455.78750610]
[152.53672791 442.40481567]
[159.79573059 425.49752808]
[157.67298889 410.64846802]
[155.55024719 395.79943848]
[153.29580688 380.96981812]
[150.90985107 366.16079712]
[148.52391052 351.35177612]
[146.13795471 336.54275513]
[143.75199890 321.73373413]
[141.36604309 306.92471313]
[138.84877014 292.13742065]
[136.20036316 277.37307739]
[133.55194092 262.60873413]
[130.90353394 247.84439087]
[121.04065704 236.68316650]
[126.21983337 221.73370361]
[123.57142639 206.96936035]
[120.79209137 192.22909546]
[117.88206482 177.51406860]
[114.97203064 162.79905701]
[104.91261292 151.81465149]
[109.82564545 136.77560425]
[106.91561127 122.06059265]
[99.79096985 122.93334198]
[92.80042267 121.58015442]
[86.61695862 118.16740417]
[81.82470703 113.05797577]
[78.86379242 106.77295685]
[64.03417969 109.02738953]
[49.20455933 111.28182983]
[34.37494278 113.53626251]
[19.54532814 115.79070282]
[7.06479454 125.51422119]
[-6.68079281 119.77766418]
[-21.51040840 122.03209686]
[-36.34002686 124.28653717]
[-51.09050369 132.64474487]
[-63.20541382 120.78451538]
[-55.16241837 105.85981750]
[-38.59446335 109.45692444]
[-23.76484489 107.20248413]
[-8.93522930 104.94805145]
[2.48459077 95.38578033]
[17.29089165 100.96108246]
[32.12050629 98.70664978]
[46.95012283 96.45220947]
[61.77973938 94.19777679]
[76.60935974 91.94333649]
[84.22434235 79.02002716]
[79.01073456 64.95523834]
[73.79713440 50.89044571]
[68.58352661 36.82565689]
[62.64826202 29.84025002]
[63.40462875 22.46470642]
[58.44146729 8.30960083]
[53.47830582 -5.84550619]
[43.38431549 -10.00212479]
[37.38240433 -18.85588074]
[37.26428223 -29.33160019]
[42.82671738 -37.94865036]
[38.36906052 -52.27098465]
[33.91139984 -66.59332275]
[29.45374489 -80.91565704]
[17.96490097 -91.79302216]
[21.57039452 -106.24465179]
[17.11273575 -120.56698608]
[12.65507889 -134.88932800]
[-1.15940082 -147.04292297]
[3.32946157 -163.99433899]
[-1.38168907 -178.23529053]
[-15.22160721 -185.38333130]
[-19.79651642 -199.89280701]
[-12.89666462 -213.04299927]
[-17.60781479 -227.28396606]
[-22.31896591 -241.52493286]
[-34.91740799 -252.02308655]
[-31.85870743 -268.13446045]
[-16.28939629 -273.28506470]
[-4.22584534 -262.17636108]
[-8.07800198 -246.23608398]
[-3.36685109 -231.99511719]
[1.34429955 -217.75415039]
[14.72523785 -211.31318665]
[19.70588303 -196.93792725]
[12.85927486 -182.94644165]
[17.57042503 -168.70549011]
[28.24778175 -162.97883606]
[32.27803802 -151.12805176]
[26.97741318 -139.34698486]
[31.43507195 -125.02464294]
[35.89273071 -110.70230865]
[47.06273270 -100.84937286]
[43.77608109 -85.37331390]
[48.23373795 -71.05097961]
[52.69139481 -56.72864532]
[57.14905167 -42.40630722]
[72.28465271 -30.40213203]
[67.63341522 -10.80866623]
[72.59657288 3.34644079]
[77.55973053 17.50154686]
[82.64831543 31.61205101]
[87.86192322 45.67684174]
[93.07553101 59.74163055]
[98.28913116 73.80641937]
[105.19897461 76.72260284]
[103.34021759 61.83821487]
[115.30116272 52.78637695]
[129.12071228 58.61903763]
[130.97914124 73.50347137]
[119.01865387 82.55496216]
[125.92848969 85.47114563]
[139.64248657 79.39443207]
[153.35647583 73.31771088]
[167.07046509 67.24098969]
[180.78445435 61.16427612]
[184.94729614 46.09096527]
[197.85441589 37.26258850]
[213.41146851 38.84763718]
[224.27287292 50.09769821]
[225.31021118 65.70083618]
[216.03369141 78.28972626]
[200.82339478 81.92028046]
[186.86116028 74.87826538]
[173.14717102 80.95497894]
[159.43318176 87.03170013]
[145.71919250 93.10842133]
[132.00520325 99.18513489]
[146.95370483 100.42714691]
[161.55287170 96.98270416]
[175.98782349 101.06095886]
[186.62622070 111.63566589]
[190.79107666 126.04586792]
[187.43435669 140.66546631]
[177.40074158 151.81564331]
[163.21502686 156.69062805]
[148.44683838 154.06372070]
[136.81236267 144.59591675]
[131.23918152 130.66905212]
[121.63063049 119.15055847]
[124.54066467 133.86557007]
[134.80822754 145.90251160]
[129.68704224 159.88902283]
[132.59707642 174.60404968]
[135.50711060 189.31906128]
[140.25569153 197.15960693]
[138.33576965 204.32093811]
[140.98417664 219.08529663]
[151.03649902 231.30255127]
[145.66787720 245.19598389]
[148.31629944 259.96032715]
[150.96470642 274.72467041]
[153.61311340 289.48901367]
[158.22178650 297.41262817]
[156.17507935 304.53875732]
[158.56101990 319.34777832]
[160.94697571 334.15679932]
[163.33293152 348.96582031]
[165.71888733 363.77484131]
[168.10482788 378.58386230]
[172.57215881 386.58801270]
[170.39929199 393.67669678]
[172.52203369 408.52572632]
[174.64477539 423.37478638]
[184.48979187 431.73931885]
[185.93748474 444.17266846]
[178.75265503 453.92864990]
[180.61152649 468.81301880]
[194.26313782 476.18951416]
[200.94136047 490.19598389]
[198.07826233 505.44662476]
[186.77476501 516.07727051]
[171.37730408 518.00024414]
[157.80650330 510.47604370]
[151.28062439 496.39797974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 169]
[2 168]
[4 165]
[5 164]
[6 163]
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[13 154]
[14 153]
[15 152]
[16 151]
[18 149]
[19 148]
[20 146]
[21 145]
[22 144]
[24 142]
[25 141]
[30 50]
[31 49]
[32 48]
[33 47]
[34 46]
[36 44]
[37 43]
[38 42]
[51 106]
[52 105]
[53 104]
[54 103]
[56 102]
[57 101]
[58 100]
[62 98]
[63 97]
[64 96]
[65 95]
[67 93]
[68 92]
[69 91]
[71 88]
[72 87]
[75 84]
[76 83]
[77 82]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
