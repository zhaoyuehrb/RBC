%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ERP29)
} def

/sequence { (\
GAGCCUCCUGGGGUGUCCACGUGAGCGCGCGUGAGUCCGCCCCCCCAGUCACGUGACCGCUGACUCGGGGCGUUCUCCACUAUCGCUUACCUACCUCCCUCUGCAGGAACCCGGCGAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003936780 ubox
1 101 0.015025804 ubox
2 6 0.003446865 ubox
2 9 0.005141697 ubox
2 100 0.015043860 ubox
3 8 0.005195345 ubox
3 99 0.014898883 ubox
3 104 0.005241623 ubox
3 115 0.995116738 ubox
4 13 0.003342127 ubox
4 103 0.005239930 ubox
4 107 0.014792896 ubox
4 114 0.996334421 ubox
5 10 0.003467796 ubox
5 12 0.003341267 ubox
5 106 0.014845083 ubox
5 113 0.995866997 ubox
5 114 0.003732259 ubox
6 105 0.014405509 ubox
6 108 0.990572930 ubox
6 117 0.042804770 ubox
7 107 0.996912123 ubox
7 114 0.004199188 ubox
7 116 0.045747015 ubox
8 106 0.996916129 ubox
8 107 0.004097290 ubox
8 113 0.004269717 ubox
8 114 0.047222008 ubox
9 19 0.007974735 ubox
9 103 0.014565532 ubox
9 105 0.994798034 ubox
9 106 0.004179200 ubox
9 113 0.047202957 ubox
10 18 0.009484096 ubox
10 20 0.003274564 ubox
10 97 0.100671986 ubox
10 98 0.105854886 ubox
10 99 0.202854857 ubox
10 100 0.347720955 ubox
10 101 0.162665133 ubox
10 102 0.041023821 ubox
10 104 0.884496214 ubox
10 112 0.049626077 ubox
11 17 0.009654479 ubox
11 18 0.031542299 ubox
11 92 0.003198332 ubox
11 95 0.006025670 ubox
11 96 0.183966309 ubox
11 97 0.121113587 ubox
11 98 0.232323057 ubox
11 99 0.856018621 ubox
11 100 0.257561807 ubox
11 101 0.093043361 ubox
11 102 0.040862104 ubox
11 111 0.049234017 ubox
11 112 0.032235816 ubox
12 16 0.006257522 ubox
12 17 0.031480897 ubox
12 18 0.011763216 ubox
12 91 0.003259417 ubox
12 94 0.005681637 ubox
12 95 0.198471735 ubox
12 96 0.100492022 ubox
12 97 0.231900576 ubox
12 98 0.856642454 ubox
12 99 0.267066690 ubox
12 100 0.069974997 ubox
12 101 0.042912964 ubox
12 102 0.281150946 ubox
12 110 0.048256038 ubox
12 111 0.032822230 ubox
13 17 0.011874838 ubox
13 20 0.029274430 ubox
13 94 0.199515598 ubox
13 95 0.123918008 ubox
13 96 0.209053536 ubox
13 97 0.856186692 ubox
13 98 0.266438724 ubox
13 99 0.072813912 ubox
13 100 0.032893021 ubox
13 101 0.280972808 ubox
13 110 0.033372885 ubox
14 19 0.027658351 ubox
14 93 0.199439702 ubox
14 109 0.033147502 ubox
15 20 0.024564550 ubox
15 92 0.188318967 ubox
15 94 0.576606457 ubox
16 93 0.562324921 ubox
16 108 0.023163535 ubox
17 107 0.024171847 ubox
18 106 0.024037015 ubox
20 103 0.008104931 ubox
21 90 0.995890668 ubox
21 94 0.014378805 ubox
22 89 0.998909385 ubox
22 93 0.013178798 ubox
23 88 0.999298237 ubox
23 92 0.008241301 ubox
24 87 0.999666993 ubox
25 86 0.999920663 ubox
26 85 0.999880962 ubox
27 84 0.993597935 ubox
27 86 0.011248152 ubox
28 85 0.012357276 ubox
29 84 0.016786930 ubox
31 80 0.981744855 ubox
31 83 0.013491940 ubox
32 79 0.981770142 ubox
32 82 0.013484404 ubox
33 75 0.005112040 ubox
33 77 0.717374024 ubox
33 78 0.696224536 ubox
34 74 0.006076660 ubox
34 76 0.997178837 ubox
35 73 0.004931170 ubox
35 75 0.998832647 ubox
38 72 0.998282060 ubox
39 71 0.999706732 ubox
39 73 0.021618480 ubox
40 70 0.998035528 ubox
40 72 0.021964554 ubox
41 69 0.996298705 ubox
41 70 0.049317827 ubox
42 68 0.994599512 ubox
42 69 0.068321289 ubox
42 70 0.035765475 ubox
43 67 0.992389268 ubox
43 68 0.082097852 ubox
43 69 0.047861811 ubox
43 70 0.013910772 ubox
44 67 0.092867919 ubox
44 68 0.058155067 ubox
44 69 0.020180100 ubox
45 67 0.067417240 ubox
45 68 0.024949249 ubox
46 62 0.019908830 ubox
46 67 0.028966505 ubox
47 61 0.019951241 ubox
47 65 0.987791641 ubox
48 57 0.005505602 ubox
48 60 0.019329819 ubox
48 64 0.999704764 ubox
49 56 0.007160109 ubox
49 59 0.017684400 ubox
49 63 0.999662134 ubox
50 55 0.008711048 ubox
50 62 0.999752074 ubox
51 61 0.992921002 ubox
52 59 0.859189065 ubox
53 58 0.834110367 ubox
53 60 0.492906091 ubox
54 59 0.472784088 ubox
92 103 0.005178516 ubox
93 102 0.005637288 ubox
94 107 0.025357923 ubox
95 106 0.025510434 ubox
96 105 0.025260576 ubox
96 108 0.029562200 ubox
97 107 0.030601093 ubox
98 106 0.030088248 ubox
98 107 0.046734074 ubox
99 106 0.047199761 ubox
99 107 0.003593732 ubox
100 105 0.043484306 ubox
100 106 0.003393333 ubox
100 108 0.011840889 ubox
100 117 0.010980806 ubox
101 106 0.003505778 ubox
101 107 0.012560028 ubox
101 116 0.011749289 ubox
102 106 0.011320081 ubox
102 116 0.024037160 ubox
103 115 0.031948558 ubox
104 114 0.031841667 ubox
106 112 0.034331735 ubox
107 111 0.033894775 ubox
3 115 0.9500000 lbox
4 114 0.9500000 lbox
5 113 0.9500000 lbox
6 108 0.9500000 lbox
7 107 0.9500000 lbox
8 106 0.9500000 lbox
9 105 0.9500000 lbox
10 104 0.9500000 lbox
11 99 0.9500000 lbox
12 98 0.9500000 lbox
13 97 0.9500000 lbox
21 90 0.9500000 lbox
22 89 0.9500000 lbox
23 88 0.9500000 lbox
24 87 0.9500000 lbox
25 86 0.9500000 lbox
26 85 0.9500000 lbox
27 84 0.9500000 lbox
31 80 0.9500000 lbox
32 79 0.9500000 lbox
33 78 0.9500000 lbox
34 76 0.9500000 lbox
35 75 0.9500000 lbox
38 72 0.9500000 lbox
39 71 0.9500000 lbox
40 70 0.9500000 lbox
41 69 0.9500000 lbox
42 68 0.9500000 lbox
43 67 0.9500000 lbox
47 65 0.9500000 lbox
48 64 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
