%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GEMIN5)
} def

/sequence { (\
ACCCCGCCCCGCUCCCUACCUAAGGCGUGAGGCUACGAGCGGUCGGCUGUGGCAGCUUCUCUUGUCUCUGACGGCUUGUAGUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.011868286 ubox
1 82 0.036692059 ubox
2 27 0.011487781 ubox
2 32 0.213972318 ubox
2 81 0.041989243 ubox
3 25 0.003251928 ubox
3 31 0.227003909 ubox
3 32 0.124723240 ubox
4 24 0.003219527 ubox
4 25 0.009528268 ubox
4 31 0.139423610 ubox
4 32 0.033503197 ubox
5 11 0.008412953 ubox
5 24 0.009549962 ubox
5 27 0.204678573 ubox
5 29 0.280845656 ubox
5 31 0.037313735 ubox
6 10 0.008255896 ubox
6 12 0.011386973 ubox
6 26 0.208782330 ubox
6 28 0.281560475 ubox
6 33 0.796606430 ubox
7 11 0.011410516 ubox
7 25 0.208507305 ubox
7 27 0.280184928 ubox
7 32 0.865425657 ubox
8 24 0.207830658 ubox
8 25 0.085839462 ubox
8 31 0.872648554 ubox
8 32 0.209781961 ubox
9 24 0.085322812 ubox
9 25 0.262289436 ubox
9 31 0.236058247 ubox
9 32 0.010394869 ubox
10 24 0.262693384 ubox
10 27 0.095727937 ubox
10 29 0.926558575 ubox
10 31 0.011291133 ubox
11 26 0.106802695 ubox
11 28 0.929712856 ubox
12 24 0.009597884 ubox
12 25 0.105114860 ubox
12 27 0.929742667 ubox
12 31 0.047582326 ubox
13 23 0.013190995 ubox
13 24 0.096175725 ubox
13 25 0.022037787 ubox
13 30 0.048203539 ubox
14 24 0.032670519 ubox
14 25 0.772206415 ubox
14 29 0.048195146 ubox
15 24 0.764269466 ubox
15 25 0.518912126 ubox
15 31 0.003323914 ubox
15 32 0.004006595 ubox
16 24 0.531193506 ubox
16 25 0.034146352 ubox
16 31 0.004453333 ubox
16 81 0.004350175 ubox
17 23 0.530647160 ubox
17 24 0.033359110 ubox
17 29 0.004956177 ubox
17 30 0.003675078 ubox
17 80 0.004381505 ubox
18 28 0.006670096 ubox
18 79 0.004371848 ubox
19 25 0.012749094 ubox
19 27 0.006699610 ubox
19 32 0.005059431 ubox
19 78 0.004254391 ubox
20 24 0.012767040 ubox
20 31 0.005310178 ubox
21 30 0.005259080 ubox
22 77 0.003851556 ubox
23 76 0.004448067 ubox
24 75 0.004463156 ubox
26 73 0.004471866 ubox
27 72 0.004479908 ubox
28 71 0.004415142 ubox
29 83 0.004776596 ubox
30 69 0.004029684 ubox
30 83 0.018075066 ubox
31 68 0.004027074 ubox
31 82 0.016164257 ubox
31 83 0.235633942 ubox
32 67 0.003568850 ubox
32 82 0.371251685 ubox
33 81 0.601909166 ubox
34 80 0.971270420 ubox
35 65 0.003934883 ubox
35 79 0.997028555 ubox
35 82 0.003273101 ubox
36 64 0.004058856 ubox
36 78 0.999823823 ubox
37 63 0.004078514 ubox
37 77 0.999060965 ubox
38 62 0.004080949 ubox
38 76 0.999679216 ubox
39 61 0.004076493 ubox
39 75 0.999975323 ubox
40 73 0.006786348 ubox
40 74 0.999566312 ubox
41 59 0.003909084 ubox
41 60 0.004695444 ubox
41 61 0.003930695 ubox
41 72 0.006868303 ubox
42 58 0.003450079 ubox
42 59 0.005138935 ubox
42 60 0.003431028 ubox
42 72 0.998871435 ubox
43 71 0.999809545 ubox
44 70 0.999870530 ubox
45 57 0.101748997 ubox
45 58 0.005111718 ubox
45 59 0.003471285 ubox
45 66 0.019426457 ubox
45 67 0.005948000 ubox
45 68 0.050248179 ubox
45 69 0.990192631 ubox
46 53 0.005305284 ubox
46 56 0.118354266 ubox
46 59 0.003445295 ubox
46 65 0.020941346 ubox
46 66 0.007122285 ubox
46 67 0.048910967 ubox
46 68 0.977962863 ubox
47 52 0.005635594 ubox
47 55 0.122183347 ubox
47 64 0.024837266 ubox
48 54 0.122053603 ubox
48 64 0.012478857 ubox
49 53 0.120112966 ubox
49 56 0.013005651 ubox
49 63 0.009983784 ubox
49 65 0.021535888 ubox
49 69 0.007548872 ubox
50 55 0.012809469 ubox
50 64 0.016341007 ubox
51 57 0.003731390 ubox
51 59 0.011814183 ubox
51 60 0.016586583 ubox
51 61 0.019047798 ubox
51 62 0.065442703 ubox
51 63 0.019747131 ubox
51 66 0.969693524 ubox
51 67 0.119510031 ubox
51 68 0.003391937 ubox
52 56 0.003745808 ubox
52 58 0.009865190 ubox
52 59 0.017997238 ubox
52 60 0.015264045 ubox
52 61 0.066507700 ubox
52 62 0.018899604 ubox
52 65 0.980772359 ubox
52 66 0.119691883 ubox
53 64 0.988452429 ubox
54 60 0.062458464 ubox
54 62 0.123185761 ubox
54 63 0.974538583 ubox
54 67 0.013931676 ubox
55 59 0.064953272 ubox
55 61 0.172530453 ubox
55 62 0.784181246 ubox
55 65 0.024983890 ubox
55 66 0.013951191 ubox
56 64 0.029479798 ubox
61 70 0.003231849 ubox
63 73 0.006565782 ubox
64 72 0.008154809 ubox
65 71 0.008158948 ubox
66 70 0.008100744 ubox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
34 80 0.9500000 lbox
35 79 0.9500000 lbox
36 78 0.9500000 lbox
37 77 0.9500000 lbox
38 76 0.9500000 lbox
39 75 0.9500000 lbox
40 74 0.9500000 lbox
42 72 0.9500000 lbox
43 71 0.9500000 lbox
44 70 0.9500000 lbox
45 69 0.9500000 lbox
46 68 0.9500000 lbox
51 66 0.9500000 lbox
52 65 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
showpage
end
%%EOF
