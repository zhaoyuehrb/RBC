%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCSAP)
} def

/sequence { (\
AGAGGAUCGGCCGGGCGCGGCGGGAAGGAGGCUGCGGGCAGCGAGGAGCGGCUGGCGCUCGAGGCGGCGGACGGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.197314285 ubox
2 60 0.008035736 ubox
3 7 0.171914860 ubox
3 59 0.008044996 ubox
4 58 0.008043319 ubox
4 78 0.239534249 ubox
5 77 0.239851165 ubox
7 23 0.012976163 ubox
7 24 0.069182683 ubox
7 25 0.029984817 ubox
7 44 0.009772261 ubox
7 55 0.007816345 ubox
7 71 0.015217856 ubox
7 74 0.014979180 ubox
8 22 0.017500236 ubox
8 23 0.107048465 ubox
8 24 0.030244680 ubox
8 43 0.010443991 ubox
8 54 0.008126705 ubox
8 70 0.016567971 ubox
8 73 0.017712260 ubox
9 21 0.012454072 ubox
9 42 0.010140802 ubox
9 53 0.008131879 ubox
9 72 0.017533486 ubox
9 78 0.055474842 ubox
10 21 0.115737488 ubox
10 39 0.012633532 ubox
10 52 0.008140137 ubox
10 65 0.004504607 ubox
10 68 0.016989228 ubox
10 75 0.990763626 ubox
10 77 0.037899750 ubox
11 20 0.116454742 ubox
11 38 0.012674352 ubox
11 51 0.008140590 ubox
11 64 0.004686233 ubox
11 67 0.017020269 ubox
11 70 0.017091521 ubox
11 74 0.992730210 ubox
12 19 0.116452995 ubox
12 37 0.012664029 ubox
12 50 0.008137754 ubox
12 61 0.003849202 ubox
12 63 0.004248967 ubox
12 66 0.016956688 ubox
12 69 0.017402962 ubox
12 73 0.992729970 ubox
13 18 0.115932443 ubox
13 49 0.007000644 ubox
13 60 0.006231735 ubox
13 65 0.010070939 ubox
13 68 0.014918135 ubox
13 72 0.992206844 ubox
14 59 0.007341564 ubox
15 39 0.011694491 ubox
15 42 0.003172043 ubox
15 58 0.007450574 ubox
15 65 0.003332646 ubox
15 68 0.008803127 ubox
16 36 0.099730040 ubox
16 38 0.011593115 ubox
16 41 0.003168520 ubox
16 43 0.004003124 ubox
16 57 0.007448814 ubox
16 64 0.003378013 ubox
16 66 0.016090392 ubox
16 67 0.007249916 ubox
16 69 0.986924095 ubox
17 35 0.105118523 ubox
17 39 0.004523465 ubox
17 42 0.004007325 ubox
17 56 0.007403538 ubox
17 65 0.016859166 ubox
17 68 0.986947196 ubox
18 34 0.105160674 ubox
18 36 0.011019497 ubox
18 38 0.004554568 ubox
18 41 0.003990297 ubox
18 55 0.007196464 ubox
18 64 0.016863805 ubox
18 66 0.010172483 ubox
18 67 0.986513238 ubox
18 69 0.027281406 ubox
19 33 0.105816189 ubox
19 35 0.008125173 ubox
19 65 0.012164003 ubox
19 68 0.027384550 ubox
20 32 0.105983384 ubox
20 35 0.053102859 ubox
20 39 0.005372394 ubox
20 65 0.984059692 ubox
21 31 0.105971520 ubox
21 34 0.054750849 ubox
21 38 0.005382831 ubox
21 61 0.026267103 ubox
21 64 0.983988459 ubox
21 66 0.046689775 ubox
22 33 0.066550564 ubox
22 59 0.004079337 ubox
22 60 0.044004611 ubox
22 65 0.047195230 ubox
22 78 0.003375514 ubox
23 32 0.067871327 ubox
23 33 0.012264791 ubox
23 58 0.004198643 ubox
23 59 0.041905745 ubox
23 60 0.032180139 ubox
23 77 0.003398559 ubox
24 32 0.013002736 ubox
24 58 0.041153882 ubox
24 59 0.017459630 ubox
24 60 0.150346799 ubox
25 59 0.118370805 ubox
26 33 0.049261842 ubox
26 59 0.042143553 ubox
27 32 0.051212008 ubox
27 33 0.006097695 ubox
27 58 0.045852199 ubox
27 59 0.026424929 ubox
27 60 0.242612174 ubox
27 78 0.102011098 ubox
28 32 0.006680160 ubox
28 58 0.027775368 ubox
28 59 0.118981948 ubox
28 60 0.909335048 ubox
28 77 0.102842056 ubox
29 53 0.003206181 ubox
29 59 0.880668501 ubox
30 53 0.038676585 ubox
30 58 0.730537085 ubox
30 59 0.362797569 ubox
30 60 0.071941037 ubox
30 78 0.011341682 ubox
31 39 0.005210519 ubox
31 42 0.080192624 ubox
31 52 0.039164899 ubox
31 56 0.091348282 ubox
31 58 0.640921524 ubox
31 59 0.039960368 ubox
31 65 0.026520681 ubox
31 68 0.008922048 ubox
31 75 0.112677135 ubox
31 77 0.011289449 ubox
32 38 0.005219339 ubox
32 41 0.080273062 ubox
32 45 0.009598116 ubox
32 51 0.039232783 ubox
32 55 0.091154065 ubox
32 57 0.788591603 ubox
32 63 0.049541312 ubox
32 64 0.026991469 ubox
32 67 0.008930076 ubox
32 70 0.003521428 ubox
32 74 0.112726811 ubox
33 37 0.004704304 ubox
33 40 0.080213325 ubox
33 43 0.010000157 ubox
33 44 0.008585457 ubox
33 50 0.039204180 ubox
33 54 0.088374831 ubox
33 57 0.469654324 ubox
33 62 0.049502752 ubox
33 63 0.026136448 ubox
33 66 0.008945411 ubox
33 69 0.003629887 ubox
33 73 0.112541261 ubox
33 76 0.011501773 ubox
34 39 0.079737617 ubox
34 42 0.017090582 ubox
34 49 0.039228206 ubox
34 52 0.025896810 ubox
34 53 0.018603677 ubox
34 56 0.971832478 ubox
34 58 0.017567559 ubox
34 65 0.009067836 ubox
34 68 0.003937629 ubox
34 72 0.111461656 ubox
34 75 0.011696270 ubox
35 41 0.017103387 ubox
35 43 0.005968957 ubox
35 48 0.039195163 ubox
35 51 0.026048601 ubox
35 54 0.028521019 ubox
35 55 0.972331226 ubox
35 57 0.018173470 ubox
35 61 0.098230310 ubox
35 64 0.008307989 ubox
35 67 0.003961124 ubox
35 69 0.009537940 ubox
35 73 0.003345454 ubox
35 74 0.011391518 ubox
36 42 0.006901299 ubox
36 53 0.026846372 ubox
36 56 0.018153824 ubox
36 60 0.101242791 ubox
36 68 0.009406656 ubox
36 72 0.004330457 ubox
37 52 0.022492208 ubox
37 53 0.972855391 ubox
37 59 0.101271717 ubox
38 49 0.027466584 ubox
38 52 0.976368389 ubox
38 56 0.003647681 ubox
38 58 0.101359329 ubox
38 65 0.035147373 ubox
38 68 0.150750250 ubox
39 48 0.027484251 ubox
39 51 0.972800708 ubox
39 54 0.029620391 ubox
39 57 0.100991994 ubox
39 64 0.035249552 ubox
39 67 0.150286391 ubox
40 53 0.030579490 ubox
41 49 0.972301219 ubox
41 52 0.030670579 ubox
41 56 0.101116448 ubox
41 65 0.154841217 ubox
42 48 0.975833132 ubox
42 50 0.030229568 ubox
42 51 0.030489222 ubox
42 55 0.101150300 ubox
42 61 0.034867348 ubox
42 64 0.155405540 ubox
42 66 0.006178023 ubox
43 49 0.030823303 ubox
43 60 0.034781684 ubox
43 65 0.006402243 ubox
44 53 0.100800484 ubox
44 59 0.034494301 ubox
45 52 0.101031612 ubox
45 58 0.033765639 ubox
45 60 0.005517480 ubox
45 78 0.010831496 ubox
46 52 0.003225770 ubox
46 58 0.005038765 ubox
46 60 0.176141730 ubox
46 77 0.010901910 ubox
47 59 0.176329663 ubox
48 56 0.034126431 ubox
48 58 0.176455466 ubox
48 75 0.011151599 ubox
49 55 0.034144903 ubox
49 57 0.176472354 ubox
49 73 0.008189449 ubox
49 74 0.009052052 ubox
50 56 0.176122223 ubox
50 72 0.010424262 ubox
52 70 0.016685846 ubox
53 69 0.017677466 ubox
54 68 0.022086851 ubox
55 68 0.004209043 ubox
56 66 0.026926827 ubox
56 69 0.007090352 ubox
57 65 0.029054148 ubox
57 68 0.007323054 ubox
58 64 0.029054152 ubox
58 67 0.007305937 ubox
59 63 0.026193244 ubox
59 66 0.005430970 ubox
60 66 0.005132085 ubox
61 65 0.005122941 ubox
63 78 0.008567270 ubox
64 75 0.005151403 ubox
64 77 0.008637787 ubox
65 74 0.004964018 ubox
66 72 0.003564169 ubox
67 75 0.025275675 ubox
68 74 0.025314472 ubox
69 78 0.005714534 ubox
70 77 0.005735773 ubox
10 75 0.9500000 lbox
11 74 0.9500000 lbox
12 73 0.9500000 lbox
13 72 0.9500000 lbox
16 69 0.9500000 lbox
17 68 0.9500000 lbox
18 67 0.9500000 lbox
20 65 0.9500000 lbox
21 64 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
showpage
end
%%EOF
