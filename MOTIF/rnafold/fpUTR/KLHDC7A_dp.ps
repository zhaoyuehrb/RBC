%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:33:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KLHDC7A)
} def

/sequence { (\
AAUUAUUAAUCAGAUUCUUGACAUUCCUCAGCCCCAGGUUGGCUGGAGAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.025994235 ubox
1 16 0.098094624 ubox
1 19 0.036172616 ubox
1 25 0.010166409 ubox
2 6 0.021990729 ubox
2 10 0.038584115 ubox
2 15 0.124741917 ubox
2 18 0.039160632 ubox
2 24 0.016302740 ubox
3 9 0.043910938 ubox
3 13 0.008386976 ubox
3 14 0.128093673 ubox
3 21 0.072300451 ubox
3 23 0.017011732 ubox
3 49 0.006462150 ubox
3 50 0.008637857 ubox
3 51 0.008568360 ubox
4 8 0.038533739 ubox
4 12 0.011429866 ubox
4 13 0.127925429 ubox
4 20 0.080158287 ubox
4 48 0.006364395 ubox
4 49 0.008818559 ubox
4 50 0.008856216 ubox
5 15 0.068874722 ubox
5 19 0.080388743 ubox
5 24 0.050838502 ubox
6 13 0.013185919 ubox
6 14 0.073524918 ubox
6 21 0.118827941 ubox
6 23 0.061909183 ubox
6 47 0.003409989 ubox
6 49 0.007467340 ubox
6 50 0.008875286 ubox
6 51 0.008519527 ubox
7 12 0.016538692 ubox
7 13 0.072910499 ubox
7 20 0.131649458 ubox
7 46 0.003204727 ubox
7 47 0.003220809 ubox
7 48 0.007520150 ubox
7 49 0.009199972 ubox
7 50 0.008744995 ubox
8 16 0.071199573 ubox
8 19 0.132883046 ubox
8 25 0.030582880 ubox
9 15 0.071455050 ubox
9 18 0.128953752 ubox
9 24 0.038166458 ubox
10 14 0.063688021 ubox
10 21 0.737023064 ubox
10 23 0.020125631 ubox
10 46 0.008411352 ubox
10 47 0.003722996 ubox
10 49 0.008167278 ubox
11 20 0.806387836 ubox
11 45 0.011574696 ubox
11 46 0.003641898 ubox
11 48 0.008584440 ubox
12 18 0.088921656 ubox
12 19 0.783443880 ubox
12 28 0.005376972 ubox
12 44 0.011639497 ubox
13 17 0.117325634 ubox
13 18 0.632330134 ubox
13 19 0.023683309 ubox
13 25 0.014119600 ubox
13 26 0.038752312 ubox
13 27 0.006084380 ubox
13 43 0.011617747 ubox
14 18 0.028601900 ubox
14 24 0.016397820 ubox
14 25 0.038376250 ubox
15 21 0.015645290 ubox
15 23 0.016653721 ubox
15 48 0.004538446 ubox
15 49 0.003479466 ubox
15 50 0.091373064 ubox
15 51 0.006305321 ubox
16 20 0.015670619 ubox
16 47 0.006809241 ubox
16 49 0.105417151 ubox
16 50 0.005699419 ubox
17 31 0.004761654 ubox
17 38 0.005307639 ubox
17 46 0.006937049 ubox
17 48 0.106844150 ubox
17 51 0.051253929 ubox
18 30 0.003476831 ubox
18 31 0.016620985 ubox
18 37 0.005308057 ubox
18 45 0.005354226 ubox
18 47 0.104161086 ubox
18 49 0.012691844 ubox
18 50 0.050955590 ubox
18 51 0.010412010 ubox
19 30 0.023104763 ubox
19 36 0.005300223 ubox
19 46 0.081214259 ubox
19 47 0.004004178 ubox
19 48 0.013358809 ubox
19 49 0.047106657 ubox
19 50 0.009686584 ubox
20 26 0.029757072 ubox
20 29 0.024515177 ubox
20 35 0.005295756 ubox
21 25 0.026030159 ubox
21 28 0.023059020 ubox
22 41 0.008517750 ubox
22 45 0.027944798 ubox
23 40 0.008394314 ubox
23 44 0.027372553 ubox
24 47 0.018281280 ubox
24 48 0.158884342 ubox
24 49 0.042558200 ubox
24 50 0.772100700 ubox
24 51 0.065823852 ubox
25 42 0.004437887 ubox
25 45 0.004529041 ubox
25 46 0.017939646 ubox
25 47 0.231987596 ubox
25 48 0.037468554 ubox
25 49 0.888632000 ubox
25 50 0.076024543 ubox
26 38 0.009752154 ubox
26 42 0.010554042 ubox
26 45 0.017733807 ubox
26 46 0.238482953 ubox
26 48 0.896683282 ubox
27 37 0.009761349 ubox
27 41 0.009672152 ubox
27 42 0.023340897 ubox
27 45 0.233490411 ubox
27 46 0.293326007 ubox
27 48 0.288867601 ubox
27 51 0.012708628 ubox
28 36 0.009419140 ubox
28 41 0.003824119 ubox
28 42 0.184417682 ubox
28 45 0.047603627 ubox
28 46 0.822780312 ubox
28 47 0.284076108 ubox
28 49 0.005436860 ubox
28 50 0.010850651 ubox
29 41 0.225502131 ubox
29 45 0.946175174 ubox
29 46 0.205219756 ubox
29 48 0.005329577 ubox
30 40 0.225725346 ubox
30 44 0.970743896 ubox
31 39 0.225967662 ubox
31 43 0.973287814 ubox
31 52 0.007196353 ubox
32 38 0.226092756 ubox
32 42 0.970250475 ubox
32 51 0.007266707 ubox
33 37 0.224469083 ubox
33 41 0.965549443 ubox
33 42 0.073084136 ubox
34 41 0.102314299 ubox
34 42 0.025781456 ubox
34 46 0.036061737 ubox
35 41 0.037724143 ubox
35 45 0.036321135 ubox
36 40 0.049385212 ubox
36 44 0.036358256 ubox
37 43 0.036337421 ubox
42 52 0.035691340 ubox
43 51 0.036715113 ubox
44 50 0.036563290 ubox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
showpage
end
%%EOF
