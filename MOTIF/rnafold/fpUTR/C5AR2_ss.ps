%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:50:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAAAGAUUCACUGGGACUGGUGAGGUGGCAGUGCUCAGCAGCAUCCGACAGGAGCCCUGGCAAACAGGACGGAUUUCCAGGACUCUACCAGCUGCCAGACACGGCAGGGAGAGACCCCAGACCUCCUGGGUCCUGGCUGUGGGCCCGGAUUGGGCUCCCAAGUGGCGUUUGACUCACGUGGGGACACUCUUGGAAGAGACGACACCAGGAGCCUGA\
) } def
/len { sequence length } bind def

/coor [
[159.21125793 176.54785156]
[152.96369934 190.18486023]
[141.84819031 200.25686646]
[127.66326141 205.13415527]
[112.70413971 204.02754211]
[99.39128876 197.11610413]
[89.87880707 185.51814270]
[85.70587158 171.11029053]
[87.54768372 156.22378540]
[95.10623932 143.26739502]
[107.15850830 134.33750916]
[121.75436401 130.87904358]
[136.53453064 133.45256042]
[125.73944855 123.03784943]
[114.94437408 112.62313080]
[104.14929199 102.20841980]
[113.54989624 114.00421906]
[115.09619904 130.76841736]
[107.00849152 148.55505371]
[95.35807800 158.00321960]
[83.70766449 167.45138550]
[77.86270142 182.15332031]
[63.10394669 184.16043091]
[51.45352936 193.60859680]
[39.80311584 203.05676270]
[28.15270042 212.50492859]
[29.95147705 227.82707214]
[23.16040611 241.67932129]
[9.94649220 249.64147949]
[-5.47375202 249.17285156]
[-18.17978287 240.42297363]
[-24.11715317 226.18391418]
[-21.39126778 210.99926758]
[-10.87194824 199.71444702]
[4.08412981 195.93035889]
[18.70453453 200.85450745]
[30.35494995 191.40634155]
[42.00536728 181.95817566]
[53.65578079 172.51000977]
[58.66743088 158.48387146]
[74.25949860 155.80097961]
[85.90991211 146.35281372]
[97.56033325 136.90464783]
[94.62819672 130.00155640]
[88.76393127 116.19538879]
[85.83179474 109.29229736]
[70.94316864 111.11678314]
[56.05453491 112.94126129]
[43.28789902 123.23422241]
[28.09020615 117.07286835]
[26.09554482 100.79547882]
[39.35585022 91.14683533]
[54.23005676 98.05263519]
[69.11868286 96.22814941]
[84.00731659 94.40367126]
[92.50784302 82.04483032]
[88.88597107 67.48865509]
[85.26410675 52.93248749]
[81.64223480 38.37631989]
[77.34049988 33.36832809]
[76.35675049 27.77865601]
[78.13163757 23.35063744]
[74.92881775 8.69655991]
[71.72600555 -5.95751762]
[58.70554352 -14.50768089]
[55.66618729 -29.41462517]
[63.89770126 -41.77495575]
[60.69488907 -56.42903137]
[57.49207687 -71.08310699]
[54.28926086 -85.73719025]
[51.08644867 -100.39126587]
[47.88363266 -115.04534149]
[39.65098953 -127.58422089]
[27.47790337 -136.34869385]
[11.11600780 -137.45341492]
[4.13566875 -152.29278564]
[13.71766090 -165.60133362]
[30.00485229 -163.68836975]
[36.24237442 -148.52178955]
[48.41546249 -139.75730896]
[60.71356201 -148.34664917]
[73.01057434 -156.93521118]
[68.97263336 -171.38150024]
[57.80599976 -182.58938599]
[61.83154678 -196.92968750]
[57.79360580 -211.37596130]
[53.75566483 -225.82225037]
[49.71772003 -240.26852417]
[44.39672470 -247.68565369]
[45.72706223 -254.95104980]
[41.89676285 -269.45376587]
[37.52363205 -274.39953613]
[36.45980453 -279.97451782]
[38.17098618 -284.42755127]
[34.75829315 -299.03414917]
[31.34560204 -313.64077759]
[27.93290901 -328.24740601]
[24.52021790 -342.85403442]
[10.96487331 -350.97982788]
[7.20668507 -366.33074951]
[15.47531986 -379.79943848]
[30.86514282 -383.39511108]
[44.24564362 -374.98455811]
[47.67840958 -359.55755615]
[39.12684250 -346.26672363]
[42.53953552 -331.66009521]
[45.95222855 -317.05346680]
[49.36492157 -302.44686890]
[52.77761078 -287.84024048]
[56.39947891 -273.28405762]
[60.22978210 -258.78134155]
[64.16400146 -244.30647278]
[68.20194244 -229.86018372]
[72.23988342 -215.41390991]
[76.27783203 -200.96763611]
[87.15563965 -190.79302979]
[83.41891479 -175.41943359]
[87.45685577 -160.97315979]
[102.40132904 -159.68368530]
[108.85414124 -173.22477722]
[115.30695343 -186.76586914]
[121.75975800 -200.30696106]
[117.77585602 -215.84748840]
[127.55661011 -228.56427002]
[143.59907532 -228.70207214]
[153.59683228 -216.15518188]
[149.88046265 -200.54850769]
[135.30085754 -193.85415649]
[128.84803772 -180.31306458]
[122.39523315 -166.77197266]
[115.94242096 -153.23086548]
[62.53771210 -118.24815369]
[65.74052429 -103.59407806]
[68.94333649 -88.94000244]
[72.14614868 -74.28591919]
[75.34896851 -59.63184357]
[78.55178070 -44.97776794]
[91.18937683 -37.17861557]
[94.64624023 -22.36292458]
[86.38008118 -9.16033077]
[89.58290100 5.49374628]
[92.78571320 20.14782333]
[96.19840240 34.75444794]
[99.82027435 49.31061935]
[103.44213867 63.86678696]
[107.06401062 78.42295837]
[114.56401062 91.41333771]
[125.35908508 101.82805634]
[136.15415955 112.24276733]
[146.94924927 122.65748596]
[158.11691284 125.83132935]
[162.42181396 135.20530701]
[174.84130859 143.61697388]
[187.26081848 152.02864075]
[199.68031311 160.44030762]
[212.09980774 168.85195923]
[224.51930237 177.26362610]
[236.93879700 185.67529297]
[249.35829163 194.08695984]
[261.77780151 202.49862671]
[274.61978149 198.44868469]
[287.26553345 202.47386169]
[295.16842651 212.89189148]
[295.62292480 225.76567078]
[307.92050171 234.35461426]
[320.21804810 242.94357300]
[335.96231079 244.50218201]
[341.96624756 258.13308716]
[354.26379395 266.72204590]
[366.56134033 275.31100464]
[378.85891724 283.89996338]
[391.15646362 292.48889160]
[397.69015503 293.43536377]
[402.10574341 297.00115967]
[403.67880249 301.50482178]
[415.72488403 310.44302368]
[431.15747070 308.32788086]
[443.24661255 317.56408691]
[445.16793823 332.28970337]
[457.21405029 341.22790527]
[472.90710449 343.23751831]
[478.51754761 357.03503418]
[490.56365967 365.97323608]
[502.60977173 374.91143799]
[518.95416260 376.25073242]
[525.72088623 391.18872070]
[515.94897461 404.35842896]
[499.69091797 402.21203613]
[493.67160034 386.95755005]
[481.62548828 378.01934814]
[469.57937622 369.08114624]
[454.74792480 367.71087646]
[448.27587891 353.27398682]
[436.22976685 344.33581543]
[421.57937622 346.76525879]
[409.23559570 337.87225342]
[406.78671265 322.48913574]
[394.74060059 313.55093384]
[382.56750488 304.78646851]
[370.26995850 296.19750977]
[357.97241211 287.60855103]
[345.67483521 279.01959229]
[333.37728882 270.43066406]
[318.51263428 269.48638916]
[311.62908936 255.24111938]
[299.33154297 246.65217590]
[287.03399658 238.06321716]
[270.61294556 241.70709229]
[256.35818481 232.15663147]
[253.36613464 214.91812134]
[240.94664001 206.50645447]
[228.52713013 198.09478760]
[216.10763550 189.68312073]
[203.68814087 181.27146912]
[191.26864624 172.85980225]
[178.84915161 164.44813538]
[166.42965698 156.03646851]
[154.01014709 147.62480164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 150]
[14 149]
[15 148]
[16 147]
[19 43]
[20 42]
[21 41]
[23 39]
[24 38]
[25 37]
[26 36]
[46 55]
[47 54]
[48 53]
[56 146]
[57 145]
[58 144]
[59 143]
[62 142]
[63 141]
[64 140]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
[73 80]
[74 79]
[82 118]
[83 117]
[85 115]
[86 114]
[87 113]
[88 112]
[90 111]
[91 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[119 131]
[120 130]
[121 129]
[122 128]
[152 218]
[153 217]
[154 216]
[155 215]
[156 214]
[157 213]
[158 212]
[159 211]
[160 210]
[164 207]
[165 206]
[166 205]
[168 203]
[169 202]
[170 201]
[171 200]
[172 199]
[175 198]
[176 197]
[179 194]
[180 193]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
