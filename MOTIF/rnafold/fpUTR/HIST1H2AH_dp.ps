%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST1H2AH)
} def

/sequence { (\
AGGCGCUGCCUUUCCUCGUUGGCUACUUUCAGUAAGUUGUGACCAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.008194642 ubox
1 11 0.740468293 ubox
1 12 0.035581783 ubox
1 13 0.009455710 ubox
1 16 0.021097843 ubox
1 24 0.009979835 ubox
1 27 0.015188759 ubox
1 28 0.012359758 ubox
2 6 0.008487289 ubox
2 10 0.851864997 ubox
2 11 0.015167270 ubox
2 14 0.004257588 ubox
2 15 0.024243628 ubox
2 17 0.003264174 ubox
2 20 0.008920811 ubox
2 23 0.010651663 ubox
2 24 0.021471123 ubox
2 26 0.017540276 ubox
2 27 0.017475611 ubox
2 28 0.003906815 ubox
2 30 0.009520639 ubox
2 38 0.011661350 ubox
2 44 0.504564816 ubox
3 9 0.852347406 ubox
3 10 0.014511910 ubox
3 13 0.003245154 ubox
3 14 0.024003973 ubox
3 19 0.015909410 ubox
3 23 0.022450471 ubox
3 26 0.017990072 ubox
3 27 0.003915369 ubox
3 28 0.003736866 ubox
3 29 0.008734466 ubox
3 33 0.005091321 ubox
3 37 0.014917070 ubox
3 40 0.024672622 ubox
3 43 0.505016022 ubox
3 47 0.007432361 ubox
4 8 0.846168091 ubox
4 18 0.016730991 ubox
4 21 0.010851961 ubox
4 22 0.022394026 ubox
4 32 0.005196176 ubox
4 36 0.015183194 ubox
4 39 0.027048527 ubox
4 41 0.504931922 ubox
4 46 0.007834051 ubox
5 17 0.016177094 ubox
5 19 0.006643895 ubox
5 20 0.009626833 ubox
5 23 0.024844303 ubox
5 33 0.022311268 ubox
5 37 0.029839773 ubox
5 38 0.019151764 ubox
5 40 0.503940699 ubox
5 47 0.046444914 ubox
6 18 0.007621479 ubox
6 22 0.024867444 ubox
6 32 0.023223031 ubox
6 36 0.035605156 ubox
6 39 0.503312967 ubox
6 46 0.049647722 ubox
7 18 0.009927249 ubox
7 21 0.022068916 ubox
7 25 0.025091103 ubox
7 31 0.023484735 ubox
7 34 0.008701526 ubox
7 35 0.036225972 ubox
7 45 0.049435401 ubox
8 17 0.012050705 ubox
8 19 0.031573637 ubox
8 20 0.015057782 ubox
8 23 0.499056417 ubox
8 24 0.006511973 ubox
8 30 0.020679590 ubox
8 33 0.008180791 ubox
8 37 0.091117680 ubox
8 38 0.011868463 ubox
8 44 0.047317827 ubox
9 18 0.035294211 ubox
9 22 0.500178901 ubox
9 32 0.008051469 ubox
9 36 0.088697597 ubox
10 21 0.500083916 ubox
10 22 0.008739754 ubox
10 32 0.011320986 ubox
10 36 0.043930566 ubox
10 46 0.003794602 ubox
11 21 0.009468603 ubox
11 31 0.010882121 ubox
11 32 0.005381224 ubox
11 35 0.052592167 ubox
11 36 0.006516036 ubox
11 42 0.005567455 ubox
11 45 0.004488580 ubox
11 46 0.006493170 ubox
12 21 0.006838575 ubox
12 31 0.004943806 ubox
12 32 0.009929119 ubox
12 34 0.048118467 ubox
12 35 0.014325718 ubox
12 41 0.005862310 ubox
12 42 0.007240994 ubox
12 45 0.009695326 ubox
12 46 0.027188959 ubox
13 22 0.009220719 ubox
13 31 0.010260937 ubox
13 34 0.015207909 ubox
13 35 0.004050844 ubox
13 41 0.007020269 ubox
13 42 0.027832933 ubox
13 45 0.033514175 ubox
14 21 0.015909417 ubox
14 22 0.112614594 ubox
14 41 0.029889462 ubox
15 21 0.116369156 ubox
15 22 0.011114560 ubox
15 32 0.028411325 ubox
15 36 0.024429973 ubox
15 46 0.564469545 ubox
16 21 0.010271772 ubox
16 22 0.005012670 ubox
16 31 0.026142991 ubox
16 35 0.024845773 ubox
16 42 0.138960163 ubox
16 45 0.561343249 ubox
17 21 0.008530650 ubox
17 39 0.024857984 ubox
17 41 0.149702318 ubox
18 26 0.034916469 ubox
18 33 0.019786639 ubox
18 37 0.004107571 ubox
18 38 0.021977114 ubox
18 40 0.115658678 ubox
18 43 0.633807095 ubox
18 47 0.108696108 ubox
19 25 0.034625844 ubox
19 32 0.034154201 ubox
19 35 0.015118868 ubox
19 36 0.008995083 ubox
19 39 0.048224116 ubox
19 42 0.632299144 ubox
19 46 0.385811483 ubox
20 31 0.039406627 ubox
20 34 0.014765527 ubox
20 35 0.012842751 ubox
20 39 0.125006735 ubox
20 41 0.545153005 ubox
20 45 0.500458924 ubox
21 27 0.018120163 ubox
21 28 0.004653305 ubox
21 30 0.040732717 ubox
21 33 0.010848744 ubox
21 38 0.334012415 ubox
21 40 0.329657326 ubox
21 44 0.517550774 ubox
22 26 0.017994129 ubox
22 27 0.003525459 ubox
22 29 0.032049456 ubox
22 33 0.050474395 ubox
22 37 0.418269931 ubox
22 40 0.404792077 ubox
22 43 0.514683007 ubox
22 47 0.033943638 ubox
23 32 0.054002450 ubox
23 36 0.422540757 ubox
23 39 0.503539344 ubox
23 46 0.038474744 ubox
24 31 0.052131983 ubox
24 34 0.439943422 ubox
24 35 0.301478828 ubox
24 39 0.066705046 ubox
24 41 0.430231530 ubox
24 45 0.037645709 ubox
25 33 0.539207577 ubox
25 37 0.652387812 ubox
25 38 0.054709922 ubox
25 40 0.439039858 ubox
25 47 0.054544867 ubox
26 32 0.541055698 ubox
26 36 0.692671808 ubox
26 39 0.437569340 ubox
26 46 0.061559377 ubox
27 31 0.487457206 ubox
27 35 0.692379756 ubox
27 36 0.058454662 ubox
27 42 0.042398177 ubox
27 45 0.059643095 ubox
27 46 0.004941369 ubox
28 34 0.677362279 ubox
28 35 0.072845117 ubox
28 36 0.062690266 ubox
28 41 0.041001184 ubox
28 42 0.010494615 ubox
28 45 0.005815151 ubox
29 34 0.064408692 ubox
29 35 0.059470971 ubox
29 41 0.008441209 ubox
29 42 0.109200223 ubox
30 39 0.053527356 ubox
30 41 0.112621859 ubox
31 38 0.055062750 ubox
31 40 0.111937079 ubox
32 37 0.039312390 ubox
32 43 0.010611743 ubox
33 39 0.012999264 ubox
33 42 0.010550514 ubox
34 38 0.012269341 ubox
36 43 0.013635932 ubox
36 47 0.004878817 ubox
37 42 0.012720859 ubox
37 46 0.019214629 ubox
38 45 0.028995981 ubox
39 44 0.030877840 ubox
40 46 0.003424542 ubox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
