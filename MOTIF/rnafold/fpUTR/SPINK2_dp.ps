%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPINK2)
} def

/sequence { (\
CGCGCCCCGUCGCACGAGCGCUCCCUGCGAGUGGCGCAGGUAACAGACCGCAGGGGCAAGACAGCCGGCGCGGGAGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.007089130 ubox
1 20 0.003475511 ubox
1 72 0.354797946 ubox
2 13 0.005072643 ubox
2 15 0.007215469 ubox
2 19 0.003679256 ubox
2 21 0.068470470 ubox
2 37 0.038176234 ubox
2 71 0.359753575 ubox
3 12 0.005080810 ubox
3 18 0.003676479 ubox
3 20 0.069113233 ubox
3 36 0.038215621 ubox
3 70 0.359763661 ubox
3 72 0.008623455 ubox
4 11 0.004890362 ubox
4 13 0.007665615 ubox
4 19 0.069136612 ubox
4 35 0.038215732 ubox
4 69 0.359758131 ubox
4 71 0.008726355 ubox
5 12 0.007655006 ubox
5 18 0.069052678 ubox
5 34 0.036802026 ubox
5 68 0.359289864 ubox
5 70 0.008708019 ubox
5 73 0.007854407 ubox
5 74 0.122601259 ubox
5 77 0.188353810 ubox
5 80 0.031018770 ubox
6 33 0.035213816 ubox
6 34 0.010496249 ubox
6 67 0.358170793 ubox
6 68 0.016544750 ubox
6 72 0.007854704 ubox
6 73 0.117875247 ubox
6 74 0.902319739 ubox
6 76 0.171411295 ubox
6 77 0.014233699 ubox
6 79 0.029056675 ubox
7 33 0.015105871 ubox
7 34 0.016818401 ubox
7 40 0.017737778 ubox
7 54 0.022643002 ubox
7 67 0.022925847 ubox
7 68 0.011919913 ubox
7 72 0.112500232 ubox
7 73 0.908688094 ubox
7 74 0.153017663 ubox
7 76 0.013366705 ubox
7 77 0.026777925 ubox
8 16 0.114546749 ubox
8 20 0.025238449 ubox
8 29 0.003390033 ubox
8 33 0.017003282 ubox
8 36 0.009404027 ubox
8 39 0.017846326 ubox
8 50 0.003166225 ubox
8 53 0.022625931 ubox
8 67 0.015229619 ubox
8 70 0.104610060 ubox
8 72 0.909715472 ubox
8 73 0.151204163 ubox
8 76 0.026752224 ubox
9 15 0.115388944 ubox
9 19 0.028370036 ubox
9 21 0.173325766 ubox
9 28 0.003396098 ubox
9 32 0.015584600 ubox
9 35 0.016998988 ubox
9 37 0.014803237 ubox
9 48 0.012538663 ubox
9 51 0.008034703 ubox
9 62 0.251055916 ubox
9 65 0.043303931 ubox
9 66 0.023096316 ubox
9 69 0.104707020 ubox
9 71 0.910304176 ubox
10 14 0.103959141 ubox
10 17 0.031827124 ubox
10 18 0.021374690 ubox
10 20 0.036433838 ubox
10 27 0.003373376 ubox
10 30 0.041587906 ubox
10 34 0.016981943 ubox
10 36 0.005802202 ubox
10 47 0.012755760 ubox
10 50 0.007573874 ubox
10 61 0.251725249 ubox
10 64 0.041669391 ubox
10 68 0.104680115 ubox
10 70 0.191100762 ubox
10 73 0.022718087 ubox
10 74 0.008288582 ubox
10 75 0.007255796 ubox
11 16 0.035019057 ubox
11 20 0.205207784 ubox
11 29 0.041886389 ubox
11 33 0.016745649 ubox
11 36 0.022309254 ubox
11 46 0.012694508 ubox
11 50 0.003652186 ubox
11 60 0.251390850 ubox
11 67 0.104598281 ubox
11 70 0.902710712 ubox
11 72 0.025361241 ubox
11 73 0.005541620 ubox
11 74 0.007385803 ubox
12 19 0.326233224 ubox
12 21 0.055829651 ubox
12 28 0.041887629 ubox
12 32 0.016602136 ubox
12 35 0.025820024 ubox
12 51 0.005088176 ubox
12 57 0.032376871 ubox
12 65 0.077937237 ubox
12 66 0.080932991 ubox
12 69 0.922987186 ubox
12 71 0.025926899 ubox
13 18 0.325976113 ubox
13 20 0.055858050 ubox
13 27 0.041882692 ubox
13 31 0.016528149 ubox
13 33 0.010078703 ubox
13 34 0.024881990 ubox
13 50 0.005081502 ubox
13 56 0.032486401 ubox
13 64 0.100695190 ubox
13 68 0.922338757 ubox
13 70 0.025901267 ubox
14 26 0.039916090 ubox
14 32 0.012354660 ubox
14 41 0.005441719 ubox
15 29 0.009652561 ubox
15 31 0.012529939 ubox
15 33 0.023021028 ubox
15 40 0.005588545 ubox
15 67 0.918303765 ubox
16 23 0.037071367 ubox
16 28 0.009255847 ubox
16 32 0.022702389 ubox
16 66 0.921032051 ubox
17 22 0.034781202 ubox
17 26 0.009518824 ubox
18 25 0.010165202 ubox
18 28 0.012803747 ubox
18 35 0.005997479 ubox
18 37 0.007165101 ubox
18 51 0.100041290 ubox
18 57 0.016803337 ubox
18 65 0.920906625 ubox
18 71 0.006231213 ubox
19 27 0.012844052 ubox
19 29 0.027321389 ubox
19 33 0.007845172 ubox
19 34 0.004384580 ubox
19 36 0.007167773 ubox
19 50 0.100150271 ubox
19 56 0.016624970 ubox
19 64 0.920553100 ubox
19 70 0.006284143 ubox
20 26 0.010412722 ubox
20 28 0.027449580 ubox
20 32 0.009079041 ubox
20 35 0.007158445 ubox
20 49 0.099917044 ubox
20 51 0.004792530 ubox
20 57 0.934320143 ubox
20 65 0.035974698 ubox
20 69 0.006393309 ubox
21 27 0.027451460 ubox
21 31 0.009311758 ubox
21 34 0.007078026 ubox
21 46 0.017165161 ubox
21 50 0.004813460 ubox
21 56 0.929114029 ubox
21 60 0.150239044 ubox
21 64 0.036104431 ubox
21 68 0.006391567 ubox
21 76 0.006645632 ubox
21 79 0.011122130 ubox
22 30 0.009401035 ubox
22 33 0.005781347 ubox
22 45 0.016696363 ubox
22 47 0.098056982 ubox
22 55 0.141019572 ubox
22 56 0.214091266 ubox
22 59 0.127667916 ubox
22 61 0.036209457 ubox
22 63 0.030762716 ubox
22 67 0.005814600 ubox
22 75 0.010341487 ubox
22 77 0.004327868 ubox
22 78 0.017339747 ubox
23 29 0.009443264 ubox
23 33 0.003379897 ubox
23 40 0.005588877 ubox
23 46 0.099754560 ubox
23 54 0.116304945 ubox
23 55 0.962365772 ubox
23 56 0.019706792 ubox
23 60 0.026838704 ubox
23 74 0.010617195 ubox
23 76 0.005185610 ubox
23 77 0.017837546 ubox
24 39 0.004010637 ubox
24 40 0.145580536 ubox
24 53 0.082995293 ubox
24 54 0.980594673 ubox
24 55 0.016706668 ubox
24 73 0.003824101 ubox
24 74 0.004025529 ubox
24 76 0.014839126 ubox
25 31 0.005147025 ubox
25 39 0.147399327 ubox
25 53 0.984057572 ubox
25 54 0.012757935 ubox
25 72 0.003644785 ubox
25 73 0.004170075 ubox
26 30 0.004649285 ubox
26 38 0.147713987 ubox
26 52 0.987198670 ubox
26 53 0.006528869 ubox
26 72 0.004207023 ubox
27 35 0.012426845 ubox
27 37 0.147893385 ubox
27 51 0.987421348 ubox
27 71 0.005051423 ubox
28 34 0.012474111 ubox
28 36 0.147913057 ubox
28 50 0.987392584 ubox
28 70 0.005052005 ubox
29 35 0.147034204 ubox
29 49 0.980685875 ubox
29 69 0.005013806 ubox
31 37 0.028109582 ubox
31 44 0.428342639 ubox
31 48 0.715380983 ubox
32 36 0.026333192 ubox
32 38 0.016738735 ubox
32 42 0.036106042 ubox
32 43 0.427950156 ubox
32 45 0.488887883 ubox
32 47 0.678108947 ubox
32 50 0.003544126 ubox
32 67 0.004500092 ubox
33 37 0.019117403 ubox
33 41 0.040313419 ubox
33 44 0.530635956 ubox
33 49 0.013918093 ubox
33 66 0.004579430 ubox
34 41 0.646712456 ubox
34 48 0.015272347 ubox
34 65 0.004579383 ubox
35 40 0.677046413 ubox
35 64 0.004572315 ubox
36 51 0.029832503 ubox
37 50 0.029922185 ubox
39 49 0.063292512 ubox
40 48 0.067365627 ubox
40 51 0.008552466 ubox
41 47 0.065980768 ubox
41 50 0.008626604 ubox
48 54 0.057044952 ubox
48 55 0.024981594 ubox
48 56 0.012199918 ubox
48 73 0.080628082 ubox
48 74 0.003479515 ubox
49 53 0.056752505 ubox
49 54 0.033156998 ubox
49 55 0.012270763 ubox
49 72 0.080868288 ubox
50 57 0.009317059 ubox
50 69 0.003329755 ubox
50 71 0.080948548 ubox
51 56 0.009311085 ubox
51 68 0.003329951 ubox
51 70 0.080850128 ubox
53 66 0.004535450 ubox
54 65 0.004486072 ubox
54 66 0.009419732 ubox
55 65 0.007835606 ubox
55 66 0.225352121 ubox
56 65 0.249716688 ubox
57 64 0.249823210 ubox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 72 0.9500000 lbox
9 71 0.9500000 lbox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
13 68 0.9500000 lbox
15 67 0.9500000 lbox
16 66 0.9500000 lbox
18 65 0.9500000 lbox
19 64 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
showpage
end
%%EOF
