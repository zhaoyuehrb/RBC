%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCGGAGCGGAGGCGGGGCGUAGGGCGGGGUCACGUGGGGCUGCGCCCAAGGCUGCCGGGAGCAGACUGGGCUGCGGGCGGCGGGGCCGGCGCCUGCCUGGAGGGAUGGGGCUGCCGGGCGCGUAGGGGCCAUGCCGCCCGGGACCCGGGCCUGCCGCGUUCCGCGCCCCGGCCGCCGCGCCCCACGUCCGCGCCGGG\
) } def
/len { sequence length } bind def

/coor [
[110.63220215 411.91796875]
[96.12163544 406.08892822]
[88.79835510 392.27215576]
[92.12018585 376.99145508]
[104.51866913 367.46194458]
[104.98748779 352.46926880]
[105.45630646 337.47659302]
[98.12056732 324.51373291]
[106.28540802 310.96212769]
[106.75422668 295.96945190]
[107.22304535 280.97677612]
[107.69186401 265.98410034]
[108.16068268 250.99142456]
[96.29668427 242.02574158]
[91.93540192 227.62284851]
[96.94995880 213.24552917]
[109.61519623 204.47637939]
[110.08401489 189.48370361]
[110.55283356 174.49104309]
[111.02165222 159.49836731]
[111.49047089 144.50569153]
[111.95928955 129.51301575]
[112.42810822 114.52034760]
[100.28749847 117.41422272]
[90.17758942 112.27402496]
[76.35327911 118.09540558]
[62.52896881 123.91678619]
[48.70465851 129.73815918]
[34.88034821 135.55953979]
[25.16460609 148.04612732]
[10.43210602 145.85462952]
[-3.39220405 151.67599487]
[-17.21651459 157.49737549]
[-31.04082489 163.31875610]
[-36.77031708 178.04792786]
[-51.27021790 184.33509827]
[-65.93798828 178.45019531]
[-72.07150269 163.88464355]
[-66.03186035 149.27990723]
[-51.40226364 143.30072021]
[-36.86220169 149.49444580]
[-23.03789330 143.67306519]
[-9.21358204 137.85168457]
[4.61072874 132.03031921]
[13.33766270 119.96010590]
[29.05896950 121.73522949]
[42.88328171 115.91384888]
[56.70759201 110.09246826]
[70.53189850 104.27109528]
[84.35620880 98.44971466]
[90.85770416 85.84438324]
[105.74394989 82.96007538]
[117.97296906 93.49840546]
[124.95977783 80.22496033]
[131.94659424 66.95150757]
[131.52783203 51.13584518]
[144.30273438 43.47746277]
[151.28955078 30.20401192]
[158.27636719 16.93056297]
[165.26316833 3.65711308]
[172.24998474 -9.61633682]
[179.23680115 -22.88978577]
[175.99578857 -48.39190674]
[203.15481567 -59.11070251]
[207.76776123 -73.38377380]
[212.38072205 -87.65685272]
[216.99366760 -101.92992401]
[212.71768188 -119.83690643]
[226.18121338 -131.08766174]
[230.57052612 -145.43109131]
[234.95983887 -159.77452087]
[239.34915161 -174.11793518]
[243.73846436 -188.46136475]
[248.01554871 -202.83866882]
[252.18014526 -217.24894714]
[251.55665588 -226.37036133]
[256.52407837 -231.85093689]
[260.91339111 -246.19436646]
[265.30270386 -260.53781128]
[269.69201660 -274.88122559]
[274.08132935 -289.22467041]
[278.47064209 -303.56808472]
[282.85995483 -317.91152954]
[287.24926758 -332.25494385]
[291.63858032 -346.59835815]
[288.27816772 -362.05859375]
[299.40106201 -371.96466064]
[303.79037476 -386.30810547]
[308.17968750 -400.65151978]
[312.56900024 -414.99496460]
[307.15109253 -434.40618896]
[321.83865356 -446.97525024]
[325.77752686 -461.44888306]
[329.71640015 -475.92248535]
[333.65527344 -490.39608765]
[332.33843994 -496.88842773]
[334.22082520 -502.26144409]
[337.95004272 -505.25680542]
[342.33935547 -519.60021973]
[346.72866821 -533.94366455]
[351.11798096 -548.28710938]
[355.50729370 -562.63049316]
[359.89660645 -576.97393799]
[364.17370605 -591.35125732]
[368.33828735 -605.76153564]
[358.70458984 -617.92584229]
[358.09445190 -633.43096924]
[366.74246216 -646.31469727]
[381.32327271 -651.62310791]
[396.23031616 -647.31494141]
[405.73147583 -635.04681396]
[406.17340088 -619.53601074]
[397.38613892 -606.74682617]
[382.74856567 -601.59692383]
[378.58398438 -587.18664551]
[379.74795532 -579.88201904]
[374.24005127 -572.58465576]
[369.85073853 -558.24121094]
[365.46142578 -543.89776611]
[361.07211304 -529.55432129]
[356.68280029 -515.21093750]
[352.29348755 -500.86749268]
[348.12887573 -486.45721436]
[344.19000244 -471.98361206]
[340.25112915 -457.51000977]
[336.31225586 -443.03637695]
[342.16851807 -434.65072632]
[342.44378662 -424.20654297]
[336.80541992 -415.15090942]
[326.91241455 -410.60565186]
[322.52310181 -396.26220703]
[318.13378906 -381.91879272]
[313.74447632 -367.57534790]
[317.41885376 -353.14108276]
[305.98199463 -342.20904541]
[301.59268188 -327.86563110]
[297.20339966 -313.52221680]
[292.81408691 -299.17877197]
[288.42477417 -284.83535767]
[284.03546143 -270.49191284]
[279.64614868 -256.14849854]
[275.25683594 -241.80505371]
[270.86752319 -227.46163940]
[266.59042358 -213.08433533]
[262.42581177 -198.67405701]
[263.58978271 -191.36946106]
[258.08187866 -184.07205200]
[253.69258118 -169.72862244]
[249.30326843 -155.38520813]
[244.91395569 -141.04177856]
[240.52464294 -126.69834137]
[245.92303467 -115.86752319]
[242.37750244 -103.87825775]
[231.26675415 -97.31697083]
[226.65379333 -83.04389954]
[222.04084778 -68.77082062]
[217.42788696 -54.49774933]
[223.78486633 -40.91139984]
[237.69847107 -35.30679703]
[251.61207581 -29.70219231]
[265.52569580 -24.09758759]
[282.47680664 -23.78787613]
[286.87173462 -7.41347647]
[272.35388184 1.34258091]
[259.92108154 -10.18398285]
[246.00747681 -15.78858662]
[232.09387207 -21.39319038]
[218.18026733 -26.99779510]
[206.42066956 -16.50589371]
[192.51025391 -15.90297508]
[185.52343750 -2.62952566]
[178.53662109 10.64392376]
[171.54981995 23.91737366]
[164.56300354 37.19082260]
[157.57618713 50.46427536]
[158.49470520 65.33052826]
[145.22004700 73.93831635]
[138.23323059 87.21176910]
[131.24641418 100.48522186]
[127.42077637 114.98916626]
[126.95195770 129.98184204]
[126.48313904 144.97450256]
[126.01432037 159.96717834]
[125.54550934 174.95985413]
[125.07669067 189.95252991]
[124.60787201 204.94519043]
[136.70048523 214.48851013]
[140.80697632 229.15106201]
[135.55433655 243.25332642]
[123.15335083 251.46025085]
[122.68453217 266.45291138]
[122.21571350 281.44558716]
[121.74689484 296.43826294]
[121.27808380 311.43093872]
[128.58027649 325.46618652]
[120.44897461 337.94543457]
[119.98015594 352.93807983]
[119.51134491 367.93075562]
[131.29020691 378.21630859]
[133.65083313 393.67468262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[17 186]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[31 44]
[32 43]
[33 42]
[34 41]
[53 179]
[54 178]
[55 177]
[57 175]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[64 157]
[65 156]
[66 155]
[67 154]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[74 145]
[75 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[87 133]
[88 132]
[89 131]
[90 130]
[92 126]
[93 125]
[94 124]
[95 123]
[98 122]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 115]
[105 114]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
