%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LOC389895)
} def

/sequence { (\
GGAGGACCAAGAGUAGGCAGCAGCGGCGGCGGCGGAGGAGGAGGCGGUGGUGGAGGUGCGCGGCCUGAAGAGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.482180052 ubox
2 7 0.479578993 ubox
3 66 0.047975016 ubox
4 65 0.049257345 ubox
5 64 0.049260296 ubox
6 14 0.030272543 ubox
7 13 0.034757378 ubox
7 17 0.019042489 ubox
7 32 0.004676020 ubox
7 35 0.010945434 ubox
7 38 0.040049028 ubox
7 41 0.021380631 ubox
7 44 0.004692309 ubox
7 63 0.049750841 ubox
7 73 0.773994130 ubox
7 76 0.229858390 ubox
8 16 0.019464390 ubox
8 31 0.004699059 ubox
8 34 0.010985291 ubox
8 37 0.040171687 ubox
8 40 0.021437982 ubox
8 43 0.004704219 ubox
8 62 0.049720000 ubox
8 67 0.013114769 ubox
8 72 0.776177341 ubox
8 75 0.232192287 ubox
9 66 0.009669870 ubox
10 66 0.021873463 ubox
11 65 0.023244910 ubox
12 66 0.012205737 ubox
13 21 0.004359613 ubox
13 27 0.008324281 ubox
13 30 0.005984147 ubox
13 33 0.050850807 ubox
13 59 0.013344465 ubox
13 61 0.027435633 ubox
13 64 0.025600857 ubox
13 65 0.011619116 ubox
14 20 0.004303811 ubox
14 26 0.008263875 ubox
14 29 0.005948686 ubox
14 32 0.050445377 ubox
14 58 0.013265400 ubox
14 60 0.026562446 ubox
14 63 0.025811182 ubox
14 67 0.948612066 ubox
15 57 0.011688751 ubox
15 66 0.988600035 ubox
16 65 0.992794542 ubox
17 24 0.017243469 ubox
17 27 0.005852121 ubox
17 30 0.057237402 ubox
17 33 0.015449404 ubox
17 57 0.013927822 ubox
17 59 0.041181169 ubox
17 61 0.078931508 ubox
17 64 0.992817506 ubox
18 23 0.017236293 ubox
18 26 0.005852943 ubox
18 29 0.057053131 ubox
18 32 0.015400441 ubox
18 52 0.006698671 ubox
18 56 0.014197395 ubox
18 58 0.041235198 ubox
18 60 0.078857118 ubox
18 63 0.989336348 ubox
18 67 0.006576512 ubox
19 51 0.006642157 ubox
19 57 0.038475639 ubox
19 66 0.006316231 ubox
20 27 0.057680782 ubox
20 30 0.015042608 ubox
20 33 0.041307492 ubox
20 57 0.026375091 ubox
20 59 0.407906694 ubox
20 61 0.895702545 ubox
20 64 0.005178179 ubox
20 65 0.004709478 ubox
21 26 0.057799209 ubox
21 29 0.015087980 ubox
21 32 0.041202579 ubox
21 49 0.006731267 ubox
21 52 0.009047825 ubox
21 56 0.033621536 ubox
21 58 0.408709618 ubox
21 60 0.896205285 ubox
21 63 0.006719432 ubox
22 48 0.006470061 ubox
22 51 0.008388347 ubox
22 57 0.404859437 ubox
23 30 0.041803827 ubox
23 33 0.003764034 ubox
23 51 0.061604452 ubox
23 57 0.200265007 ubox
23 59 0.881865576 ubox
23 61 0.025534056 ubox
24 29 0.041950575 ubox
24 31 0.003884760 ubox
24 32 0.003551075 ubox
24 46 0.005955781 ubox
24 47 0.003859559 ubox
24 49 0.006504425 ubox
24 50 0.062226769 ubox
24 52 0.042929686 ubox
24 56 0.204140399 ubox
24 58 0.882045379 ubox
24 60 0.025735800 ubox
25 30 0.004213038 ubox
25 45 0.005204465 ubox
25 48 0.005724673 ubox
25 51 0.041024674 ubox
25 57 0.863703629 ubox
25 59 0.025841331 ubox
25 65 0.005192479 ubox
26 33 0.013639704 ubox
26 45 0.004978303 ubox
26 48 0.064414475 ubox
26 51 0.957574931 ubox
26 57 0.024381345 ubox
26 59 0.005309241 ubox
26 64 0.005228190 ubox
27 32 0.013750984 ubox
27 34 0.004542218 ubox
27 44 0.005708536 ubox
27 46 0.004896275 ubox
27 47 0.064593559 ubox
27 49 0.029520761 ubox
27 50 0.963030822 ubox
27 52 0.215228179 ubox
27 56 0.032454101 ubox
27 58 0.005641264 ubox
27 63 0.005229574 ubox
28 33 0.004686549 ubox
28 45 0.003993531 ubox
28 48 0.026241118 ubox
28 51 0.217519116 ubox
28 57 0.005362307 ubox
28 65 0.008875458 ubox
29 45 0.064692227 ubox
29 48 0.962743195 ubox
29 51 0.098365502 ubox
29 61 0.005230328 ubox
29 64 0.008905702 ubox
30 44 0.064765297 ubox
30 46 0.023621220 ubox
30 47 0.964252028 ubox
30 49 0.220478441 ubox
30 50 0.098478518 ubox
30 52 0.025453873 ubox
30 60 0.005226815 ubox
30 63 0.008909824 ubox
31 45 0.020023210 ubox
31 48 0.219718102 ubox
31 51 0.025095127 ubox
31 59 0.004276255 ubox
32 45 0.964346012 ubox
32 48 0.097033177 ubox
32 51 0.007512721 ubox
32 59 0.003386128 ubox
32 61 0.009079020 ubox
33 44 0.964671842 ubox
33 46 0.222984816 ubox
33 47 0.092355923 ubox
33 49 0.024700796 ubox
33 50 0.007781687 ubox
33 58 0.004478741 ubox
33 60 0.009084500 ubox
34 45 0.224587074 ubox
34 48 0.022814913 ubox
34 57 0.004311285 ubox
34 59 0.009065985 ubox
39 66 0.005981720 ubox
40 65 0.006110912 ubox
41 64 0.006100345 ubox
42 66 0.066832939 ubox
43 65 0.068637961 ubox
44 51 0.010656126 ubox
44 61 0.008765747 ubox
44 64 0.068656104 ubox
45 50 0.010750464 ubox
45 60 0.008769169 ubox
45 63 0.068625776 ubox
45 67 0.006551210 ubox
46 59 0.008553665 ubox
46 65 0.027342098 ubox
47 61 0.068560696 ubox
47 64 0.027441037 ubox
48 58 0.003265355 ubox
48 60 0.068241672 ubox
48 63 0.027432573 ubox
49 57 0.003268939 ubox
49 59 0.065957146 ubox
50 57 0.004914543 ubox
50 59 0.018946030 ubox
50 61 0.028738016 ubox
51 56 0.011412625 ubox
51 58 0.025205803 ubox
51 60 0.028759095 ubox
52 57 0.025151176 ubox
52 59 0.034749580 ubox
54 66 0.005156007 ubox
55 65 0.005297043 ubox
56 64 0.005298493 ubox
57 63 0.005270705 ubox
64 73 0.069356022 ubox
64 76 0.020052175 ubox
65 72 0.069893203 ubox
65 73 0.004942478 ubox
65 75 0.020962516 ubox
66 71 0.069364941 ubox
66 72 0.005515584 ubox
66 74 0.021137985 ubox
66 75 0.003636724 ubox
7 73 0.9500000 lbox
8 72 0.9500000 lbox
14 67 0.9500000 lbox
15 66 0.9500000 lbox
16 65 0.9500000 lbox
17 64 0.9500000 lbox
18 63 0.9500000 lbox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
26 51 0.9500000 lbox
27 50 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
showpage
end
%%EOF
