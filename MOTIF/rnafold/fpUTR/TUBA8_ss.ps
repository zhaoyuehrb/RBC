%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGUGACCUGCCCGCCCCUCCCCGGCACUGUGAUGCCGGGGGGCAGCUGCGGGCCCGGCGCGCCUGUCCCCGGCGUCCCCCCCUCCCGGUGUGUCACAACGGCGGAGGCGGCUGUAUCUGGAGCAGUCGGGGCGGGCAGGCCCAGCUGAGAGGUGCGCGGGCGAGGACAGCGGCAGCG\
) } def
/len { sequence length } bind def

/coor [
[93.08551025 498.97344971]
[80.64115143 507.88391113]
[65.47972107 509.97906494]
[51.08521271 504.77746582]
[40.76537704 493.47436523]
[36.89163589 478.66717529]
[40.35415268 463.75848389]
[50.35725784 452.17416382]
[64.60231781 446.57623291]
[66.17024231 431.65838623]
[67.73816681 416.74057007]
[69.30609894 401.82272339]
[70.87402344 386.90490723]
[68.43937683 379.90441895]
[72.60170746 371.74121094]
[74.42974854 356.85302734]
[65.57363892 339.68243408]
[77.88065338 323.74002075]
[79.18798828 308.79708862]
[80.49532318 293.85418701]
[81.80265808 278.91125488]
[82.97954559 263.95748901]
[84.02589417 248.99403381]
[85.07224274 234.03056335]
[86.11858368 219.06710815]
[87.03431702 204.09509277]
[87.81935120 189.11564636]
[88.60439301 174.13619995]
[89.38943481 159.15675354]
[90.17446899 144.17732239]
[69.61196136 133.53720093]
[57.00231934 114.12004852]
[55.64561081 91.00753021]
[41.64190674 85.63201141]
[27.63819885 80.25649261]
[13.63449287 74.88097382]
[-0.36921319 69.50545502]
[-14.37292004 64.12993622]
[-28.37662506 58.75441742]
[-42.38033295 53.37889862]
[-56.38403702 48.00337982]
[-70.38774872 42.62786102]
[-84.39144897 37.25234222]
[-93.55321503 37.09507370]
[-98.59129333 31.65887451]
[-112.49905396 26.03977585]
[-126.40680695 20.42067528]
[-133.04127502 20.96502876]
[-138.17143250 18.43900299]
[-140.69633484 14.35513306]
[-154.39952087 8.25408363]
[-168.10269165 2.15303397]
[-183.85682678 3.60837364]
[-192.33673096 -8.63665009]
[-206.03990173 -14.73769951]
[-222.96894836 -15.65644836]
[-226.77252197 -32.17822647]
[-211.94935608 -40.40684128]
[-199.93885803 -28.44088173]
[-186.23567200 -22.33983231]
[-171.46168518 -24.23155975]
[-162.00164795 -11.55014801]
[-148.29846191 -5.44909859]
[-134.59529114 0.65195131]
[-120.78771210 6.51291800]
[-106.87995148 12.13201714]
[-92.97219849 17.75111580]
[-79.01593018 23.24863434]
[-65.01222229 28.62415314]
[-51.00851822 33.99967194]
[-37.00481415 39.37519073]
[-23.00110626 44.75070953]
[-8.99740028 50.12623215]
[5.00630617 55.50175095]
[19.01001167 60.87726974]
[33.01371765 66.25278473]
[47.01742554 71.62831116]
[61.02113342 77.00382996]
[67.40765381 65.61648560]
[77.16457367 56.08731461]
[89.72518921 49.41853714]
[104.22554779 46.43266678]
[119.56296539 47.68513489]
[122.68164062 33.01292419]
[125.80031586 18.34070778]
[128.91899109 3.66849470]
[127.64110565 -5.40507269]
[132.22224426 -11.23153591]
[135.59651184 -25.84708595]
[131.16188049 -41.03407669]
[141.56388855 -51.69463348]
[144.93815613 -66.31018829]
[148.31242371 -80.92573547]
[139.72593689 -94.19403076]
[143.11811829 -109.62998199]
[156.47645569 -118.07572174]
[171.87567139 -114.52052307]
[180.17970276 -101.07364655]
[176.46189880 -85.71286774]
[162.92797852 -77.55146790]
[159.55371094 -62.93592072]
[156.17944336 -48.32036972]
[160.85542297 -34.17878342]
[150.21206665 -22.47282028]
[146.83779907 -7.85727024]
[143.59120178 6.78716993]
[140.47253418 21.45938492]
[137.35385132 36.13159943]
[134.23518372 50.80381393]
[146.37043762 59.62059021]
[159.36080933 52.12059021]
[172.35119629 44.62059021]
[185.34158325 37.12059021]
[198.33195496 29.62059021]
[211.32234192 22.12059021]
[224.31272888 14.62059116]
[226.84979248 -0.80981004]
[238.74539185 -10.96011353]
[254.38278198 -11.03765678]
[266.37847900 -1.00582659]
[269.06845093 14.39865398]
[261.18258667 27.90225983]
[246.44438171 33.12900162]
[231.81272888 27.61097145]
[218.82234192 35.11097336]
[205.83195496 42.61097336]
[192.84158325 50.11097336]
[179.85119629 57.61097336]
[166.86080933 65.11096954]
[153.87043762 72.61096954]
[157.11703491 87.25540924]
[172.05995178 88.56275177]
[187.00286865 89.87008667]
[201.94578552 91.17742157]
[213.88995361 80.82790375]
[229.64778137 82.03880310]
[239.87043762 94.09172058]
[238.49301147 109.83586884]
[226.33268738 119.93052673]
[210.60398865 118.38671112]
[200.63845825 106.12033844]
[185.69554138 104.81300354]
[170.75260925 103.50566864]
[155.80969238 102.19833374]
[153.61973572 110.69335938]
[150.17500305 118.56159210]
[145.61668396 125.62412262]
[140.11029053 131.73054504]
[133.84037781 136.76206970]
[127.00466156 140.63372803]
[119.80820465 143.29536438]
[112.45732880 144.73190308]
[105.15391541 144.96235657]
[104.36887360 159.94180298]
[103.58383942 174.92123413]
[102.79879761 189.90068054]
[102.01375580 204.88012695]
[104.69532776 213.64207458]
[101.08204651 220.11344910]
[100.03569794 235.07691956]
[98.98935699 250.04037476]
[97.94300842 265.00384521]
[100.47125244 273.81124878]
[96.74558258 280.21859741]
[95.43824005 295.16149902]
[94.13090515 310.10443115]
[92.82357025 325.04736328]
[100.30715942 332.98922729]
[102.13123322 343.52481079]
[97.92942810 353.11730957]
[89.31793976 358.68106079]
[87.48989868 373.56924438]
[85.79184723 388.47283936]
[84.22392273 403.39065552]
[82.65599823 418.30850220]
[81.08806610 433.22631836]
[79.52014160 448.14416504]
[92.29003143 456.58148193]
[99.66603088 469.99240112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[15 172]
[16 171]
[18 167]
[19 166]
[20 165]
[21 164]
[22 162]
[23 161]
[24 160]
[25 159]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[33 78]
[34 77]
[35 76]
[36 75]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[45 67]
[46 66]
[47 65]
[50 64]
[51 63]
[52 62]
[54 60]
[55 59]
[83 109]
[84 108]
[85 107]
[86 106]
[88 105]
[89 104]
[91 102]
[92 101]
[93 100]
[110 130]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[131 144]
[132 143]
[133 142]
[134 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
