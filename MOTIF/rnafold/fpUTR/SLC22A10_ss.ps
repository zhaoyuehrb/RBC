%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAUCUACCUCCUGAUAGCAAAAGAACUGAGGAAGCUCUUUCCACUACGGCUGUAUUGCACUGGUGAGUCCGGGCCCAUGGAUGAGAAAUUGAUGCGAGGAUCAAUACAAGCUUAAUUUGAAUUAAUAAAAGGAAAUAUUUUCUCCCUUUGAACUUAUCUCCGUAAAGCCAUUGUGCCUCCUCUUGGGGGUCACGUGUUCACAAUCA\
) } def
/len { sequence length } bind def

/coor [
[174.13130188 274.66571045]
[160.63754272 281.45504761]
[145.77734375 284.16635132]
[130.75537109 282.57986450]
[116.78937531 276.82418823]
[105.01152802 267.36590576]
[96.37660980 254.97177124]
[91.58460236 240.64649963]
[91.02397919 225.55139160]
[94.74018860 210.91012573]
[102.43197632 197.90962219]
[113.47579193 187.60375977]
[126.97637177 180.82800293]
[141.83927917 178.13160706]
[143.41468811 163.21456909]
[144.99008179 148.29753113]
[135.45191956 136.91513062]
[136.83709717 121.76469421]
[148.84068298 111.83735657]
[150.41607666 96.92031860]
[119.15603638 142.56790161]
[69.68051910 130.27819824]
[57.37530136 138.85617065]
[45.07008362 147.43414307]
[32.76486969 156.01213074]
[20.45965385 164.59010315]
[13.56340504 178.82920837]
[-1.30207479 179.76022339]
[-13.60729027 188.33819580]
[-17.83027267 203.81546021]
[-32.62030029 210.03114319]
[-46.63172913 202.21708679]
[-49.11619186 186.36758423]
[-38.16781616 174.64100647]
[-22.18526649 176.03297424]
[-9.88005066 167.45500183]
[-3.86395335 153.82945251]
[11.88167858 152.28488159]
[24.18689346 143.70690918]
[36.49211121 135.12893677]
[48.79732513 126.55095673]
[61.10254288 117.97298431]
[58.54235458 110.83070374]
[57.28202057 103.34884644]
[42.35356140 101.88560486]
[27.42510223 100.42235565]
[12.49664211 98.95911407]
[-2.43181753 97.49586487]
[-14.57460499 107.25242615]
[-29.69334221 105.55583191]
[-38.91989899 93.91941071]
[-53.84835815 92.45616913]
[-65.89990234 102.68044281]
[-81.64423370 101.30512238]
[-91.74052429 89.14615631]
[-90.19882202 73.41724396]
[-77.93379211 63.45006943]
[-62.22205734 65.15798187]
[-52.38511276 77.52770996]
[-37.45665359 78.99095154]
[-26.14626503 69.36750793]
[-10.98583984 70.63878632]
[-0.96857274 82.56740570]
[13.95988750 84.03065491]
[28.88834763 85.49389648]
[43.81680679 86.95714569]
[58.74526596 88.42038727]
[79.62619781 58.00132751]
[119.38208008 53.35666656]
[108.19477081 43.36447144]
[97.00745392 33.37227631]
[85.82013702 23.38007927]
[74.63282013 13.38788319]
[58.86973953 14.52839565]
[46.97192001 4.12563467]
[45.99813080 -11.64862537]
[56.52610016 -23.43579674]
[72.30977631 -24.24275780]
[83.98497772 -13.59075451]
[84.62501526 2.20056844]
[95.81233215 12.19276428]
[106.99964905 22.18496132]
[118.18696594 32.17715836]
[129.37428284 42.16935349]
[135.91593933 38.50100708]
[124.89537048 28.32518768]
[131.16763306 14.69952202]
[146.06465149 16.45425797]
[148.99923706 31.16431046]
[155.54089355 27.49596405]
[152.84986877 12.73932552]
[150.15882874 -2.01731205]
[147.46780396 -16.77395058]
[144.77677917 -31.53058815]
[142.08573914 -46.28722382]
[128.94593811 -55.06908798]
[125.94639587 -70.58612061]
[134.86668396 -83.63233948]
[150.41456604 -86.46765900]
[163.36575317 -77.40993500]
[166.03652954 -61.83295059]
[156.84237671 -48.97825623]
[159.53341675 -34.22161865]
[162.22444153 -19.46497917]
[164.91546631 -4.70834160]
[167.60650635 10.04829597]
[170.29753113 24.80493355]
[176.63722229 28.81220627]
[181.35034180 14.57188988]
[186.06344604 0.33157352]
[190.77655029 -13.90874290]
[195.48965454 -28.14905930]
[200.20277405 -42.38937378]
[197.52536011 -57.14849091]
[200.15974426 -71.91535187]
[207.77554321 -84.83818054]
[219.41775513 -94.29645538]
[233.62641907 -99.10411072]
[248.61979675 -98.65826416]
[262.51770020 -93.01482391]
[273.57733154 -82.88147736]
[280.41180420 -69.52895355]
[282.16406250 -54.63164902]
[278.61441040 -40.05770493]
[270.20794678 -27.63468742]
[257.99884033 -18.92044830]
[243.52137756 -15.00803280]
[232.68041992 -4.64107656]
[221.83947754 5.72588015]
[210.99851990 16.09283638]
[200.15757751 26.45979309]
[189.31661987 36.82675171]
[195.65632629 40.83402252]
[210.14033508 36.93358994]
[224.62434387 33.03315735]
[235.93788147 21.97357178]
[250.23927307 26.13525963]
[264.72329712 22.23482704]
[279.20730591 18.33439636]
[287.12454224 4.91967297]
[301.86895752 1.17041063]
[314.60906982 8.80097580]
[329.09307861 4.90054417]
[343.57708740 1.00011241]
[350.00354004 -13.25592804]
[364.11245728 -19.99923897]
[379.24206543 -16.04583359]
[388.24859619 -3.26239085]
[386.87945557 12.31513977]
[375.78109741 23.33152390]
[360.19384766 24.58516312]
[347.47750854 15.48412514]
[332.99349976 19.38455772]
[318.50949097 23.28498840]
[311.32406616 36.28134155]
[296.69079590 40.44326401]
[283.10772705 32.81840897]
[268.62371826 36.71884155]
[254.13970947 40.61927414]
[243.86215210 51.39987183]
[228.52478027 47.51716995]
[214.04077148 51.41760254]
[199.55674744 55.31803513]
[197.38973999 62.49814987]
[211.97061157 66.01920319]
[226.55149841 69.54026031]
[241.13238525 73.06130981]
[256.01684570 74.91957855]
[260.26004028 89.30691528]
[248.76609802 98.94483948]
[235.33853149 92.25843048]
[221.24424744 87.12507629]
[207.14997864 81.99172974]
[193.05569458 76.85837555]
[190.88867188 84.03849030]
[200.79650879 95.30058289]
[210.70434570 106.56268311]
[220.69654846 117.75000000]
[230.77253723 128.86189270]
[240.84852600 139.97380066]
[250.92453003 151.08569336]
[261.00051880 162.19760132]
[276.77160645 166.69256592]
[280.50143433 182.66192627]
[268.35302734 193.67778015]
[252.82368469 188.40795898]
[249.88861084 172.27359009]
[239.81262207 161.16169739]
[229.73663330 150.04978943]
[219.66062927 138.93789673]
[209.58464050 127.82599640]
[202.76176453 124.98213959]
[199.44224548 116.47052002]
[189.53440857 105.20841980]
[179.62658691 93.94631958]
[165.33311462 98.49571991]
[163.75772095 113.41275787]
[173.42274475 125.62853241]
[171.61256409 140.73408508]
[159.90713501 149.87292480]
[158.33172607 164.78997803]
[156.75633240 179.70701599]
[170.72808838 185.44865417]
[182.51542664 194.89509583]
[191.16279602 207.28056335]
[195.96919250 221.60101318]
[196.54498291 236.69555664]
[192.84349060 251.34053040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 202]
[15 201]
[16 200]
[19 197]
[20 196]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[28 36]
[29 35]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[51 60]
[52 59]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[133 163]
[134 162]
[135 161]
[137 159]
[138 158]
[139 157]
[142 154]
[143 153]
[144 152]
[175 195]
[176 194]
[177 193]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
