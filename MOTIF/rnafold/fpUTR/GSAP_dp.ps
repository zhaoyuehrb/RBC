%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GSAP)
} def

/sequence { (\
CGAGGGCGAGGCGGCCACGCGGGGCCGGGAAUGCCCGCGGUGCGGGGCCCCAGAGCCGCCCGGUGGUCGUGUCCGGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.019538322 ubox
1 19 0.015480557 ubox
1 21 0.004814062 ubox
1 39 0.026734586 ubox
1 75 0.069361756 ubox
1 79 0.174982630 ubox
2 7 0.026563214 ubox
2 18 0.016909539 ubox
2 20 0.005264728 ubox
2 38 0.028564752 ubox
2 57 0.003998785 ubox
2 74 0.060181198 ubox
2 78 0.192147416 ubox
4 16 0.010429657 ubox
4 36 0.031103855 ubox
4 50 0.043306621 ubox
4 51 0.006227081 ubox
4 57 0.067851029 ubox
4 61 0.003634944 ubox
4 73 0.009574036 ubox
4 74 0.401034716 ubox
5 15 0.010384555 ubox
5 16 0.021013277 ubox
5 26 0.030533197 ubox
5 35 0.031182987 ubox
5 49 0.043510570 ubox
5 50 0.005465383 ubox
5 56 0.060643911 ubox
5 57 0.809576976 ubox
5 60 0.003645060 ubox
5 72 0.005832866 ubox
5 73 0.401537263 ubox
5 74 0.061590589 ubox
6 15 0.021058598 ubox
6 20 0.006419626 ubox
6 25 0.030585708 ubox
6 34 0.031193824 ubox
6 48 0.043612757 ubox
6 49 0.004107940 ubox
6 56 0.815948358 ubox
6 59 0.003647485 ubox
6 72 0.400438725 ubox
6 73 0.053927453 ubox
6 78 0.314216525 ubox
7 13 0.010362463 ubox
7 14 0.021056956 ubox
7 19 0.006425589 ubox
7 24 0.030601790 ubox
7 33 0.031194483 ubox
7 47 0.043687678 ubox
7 55 0.816365912 ubox
7 58 0.003645117 ubox
7 71 0.400580273 ubox
7 75 0.131701811 ubox
7 77 0.314020890 ubox
7 79 0.004359860 ubox
8 12 0.009794645 ubox
8 18 0.006407184 ubox
8 32 0.028560352 ubox
8 57 0.003207081 ubox
8 70 0.172624077 ubox
8 73 0.382828011 ubox
8 74 0.097151927 ubox
9 72 0.397318147 ubox
10 16 0.006369018 ubox
10 26 0.003419921 ubox
10 49 0.011037799 ubox
10 50 0.007456953 ubox
10 51 0.812794009 ubox
10 57 0.013147362 ubox
10 60 0.004272332 ubox
10 68 0.091212901 ubox
10 73 0.012701602 ubox
10 74 0.051059764 ubox
11 15 0.006273803 ubox
11 20 0.038960139 ubox
11 25 0.003423976 ubox
11 43 0.026054488 ubox
11 48 0.011134945 ubox
11 49 0.005544906 ubox
11 50 0.814075520 ubox
11 56 0.013300908 ubox
11 59 0.004292927 ubox
11 67 0.090914119 ubox
11 70 0.537975736 ubox
11 72 0.008532194 ubox
11 73 0.048278649 ubox
12 19 0.038978670 ubox
12 24 0.003420950 ubox
12 27 0.043893716 ubox
12 42 0.025999067 ubox
12 44 0.013799834 ubox
12 47 0.011091231 ubox
12 55 0.013289806 ubox
12 58 0.004298858 ubox
12 66 0.090882818 ubox
12 69 0.562076224 ubox
12 71 0.010609249 ubox
13 18 0.038872931 ubox
13 26 0.045825578 ubox
13 41 0.018133914 ubox
13 43 0.011129675 ubox
13 49 0.818437304 ubox
13 50 0.003805278 ubox
13 57 0.004420388 ubox
13 68 0.562251221 ubox
13 70 0.004025509 ubox
14 25 0.045832594 ubox
14 41 0.017702971 ubox
14 43 0.016693633 ubox
14 48 0.818570822 ubox
14 56 0.004422629 ubox
14 64 0.090684297 ubox
14 67 0.562210485 ubox
15 22 0.003291423 ubox
15 24 0.045802185 ubox
15 40 0.024838963 ubox
15 42 0.018479776 ubox
15 46 0.037053499 ubox
15 47 0.817742381 ubox
15 55 0.004416185 ubox
15 63 0.090834314 ubox
15 66 0.562409129 ubox
16 21 0.003304369 ubox
16 23 0.045723969 ubox
16 39 0.022327429 ubox
16 42 0.014528770 ubox
16 44 0.003314273 ubox
16 45 0.052181094 ubox
16 46 0.803844640 ubox
16 62 0.090337970 ubox
16 65 0.562407168 ubox
17 41 0.028300699 ubox
17 64 0.561858155 ubox
18 39 0.040193116 ubox
18 40 0.021614437 ubox
18 42 0.019452993 ubox
18 44 0.810432224 ubox
18 62 0.079254982 ubox
18 63 0.556319884 ubox
19 38 0.050964470 ubox
19 41 0.019154354 ubox
19 43 0.817132472 ubox
19 56 0.010701750 ubox
19 59 0.098114208 ubox
19 61 0.110937437 ubox
19 64 0.006706477 ubox
20 37 0.051129764 ubox
20 39 0.028746082 ubox
20 40 0.015850001 ubox
20 42 0.816525647 ubox
20 44 0.016752559 ubox
20 55 0.010857511 ubox
20 58 0.098253062 ubox
20 62 0.390979587 ubox
20 63 0.008304826 ubox
21 36 0.049285062 ubox
21 38 0.058662694 ubox
21 41 0.658137310 ubox
21 43 0.016878817 ubox
21 51 0.033527345 ubox
21 57 0.097619565 ubox
21 60 0.406980079 ubox
21 61 0.384024705 ubox
22 35 0.046976194 ubox
22 36 0.129379718 ubox
22 50 0.033602223 ubox
22 56 0.097389754 ubox
22 57 0.004667383 ubox
22 59 0.413836814 ubox
22 60 0.374470297 ubox
22 61 0.034491481 ubox
23 34 0.044502812 ubox
23 35 0.130341244 ubox
23 36 0.009038754 ubox
23 49 0.033636103 ubox
23 56 0.005886844 ubox
23 57 0.488318068 ubox
23 59 0.269635512 ubox
23 60 0.043878303 ubox
24 34 0.131219695 ubox
24 35 0.008845239 ubox
24 38 0.648322497 ubox
24 41 0.253299075 ubox
24 43 0.003816651 ubox
24 48 0.033637138 ubox
24 56 0.552700567 ubox
24 59 0.051543699 ubox
24 78 0.003178443 ubox
25 33 0.127631451 ubox
25 37 0.467757637 ubox
25 40 0.275297366 ubox
25 42 0.003803795 ubox
25 47 0.033619907 ubox
25 55 0.552979809 ubox
25 58 0.045652673 ubox
26 33 0.036336274 ubox
26 37 0.597762479 ubox
26 39 0.272753104 ubox
26 46 0.026877381 ubox
26 58 0.061369362 ubox
27 32 0.042960701 ubox
27 35 0.123553742 ubox
27 36 0.754269172 ubox
27 38 0.260712325 ubox
27 50 0.038267498 ubox
27 51 0.557497536 ubox
27 57 0.071908996 ubox
28 34 0.123853251 ubox
28 35 0.755339254 ubox
28 36 0.257943019 ubox
28 49 0.038766421 ubox
28 50 0.557795908 ubox
28 51 0.080896226 ubox
28 56 0.071698171 ubox
28 57 0.005177479 ubox
29 34 0.752052281 ubox
29 35 0.257583285 ubox
29 48 0.038379777 ubox
29 49 0.557097532 ubox
29 50 0.081058542 ubox
29 56 0.005375275 ubox
32 42 0.003576628 ubox
32 52 0.056729730 ubox
33 41 0.005264055 ubox
33 48 0.362087586 ubox
33 51 0.054507005 ubox
34 40 0.005331963 ubox
34 45 0.003747718 ubox
34 46 0.463123456 ubox
34 47 0.333782090 ubox
35 39 0.005294447 ubox
35 45 0.484827676 ubox
35 46 0.302343313 ubox
35 47 0.006232835 ubox
36 44 0.505083852 ubox
36 45 0.267159991 ubox
36 46 0.007361063 ubox
37 43 0.524551715 ubox
37 56 0.007421768 ubox
37 59 0.008934381 ubox
38 42 0.520865999 ubox
38 44 0.138706834 ubox
38 55 0.007437741 ubox
38 58 0.023873656 ubox
38 62 0.004663434 ubox
39 43 0.130258254 ubox
39 49 0.004866819 ubox
39 50 0.003783459 ubox
39 51 0.004746734 ubox
39 57 0.028418260 ubox
39 61 0.009288555 ubox
40 48 0.005017919 ubox
40 49 0.003885776 ubox
40 50 0.004803917 ubox
40 56 0.029112255 ubox
40 60 0.009399760 ubox
40 78 0.004515778 ubox
41 47 0.004998102 ubox
41 52 0.007122671 ubox
41 55 0.028992692 ubox
41 77 0.004511734 ubox
42 48 0.006275062 ubox
42 51 0.007406621 ubox
42 56 0.005143660 ubox
42 59 0.010112769 ubox
43 47 0.006234502 ubox
43 55 0.005165207 ubox
43 58 0.010694961 ubox
43 75 0.004514784 ubox
44 50 0.008513177 ubox
44 51 0.021140344 ubox
44 57 0.010580012 ubox
44 60 0.004125769 ubox
44 74 0.004433009 ubox
45 49 0.008386421 ubox
45 50 0.021102024 ubox
45 51 0.020633663 ubox
45 56 0.010501651 ubox
45 59 0.004159438 ubox
45 61 0.004208677 ubox
45 73 0.004348439 ubox
46 50 0.020312712 ubox
46 57 0.027745063 ubox
46 60 0.004219807 ubox
46 72 0.003885529 ubox
47 56 0.028060125 ubox
47 59 0.004227401 ubox
47 78 0.003278151 ubox
48 55 0.028073006 ubox
48 58 0.004228880 ubox
48 77 0.003274921 ubox
49 76 0.003268570 ubox
50 75 0.003259059 ubox
51 71 0.004696149 ubox
52 70 0.004744543 ubox
55 67 0.004948521 ubox
56 66 0.005296007 ubox
57 65 0.005298347 ubox
57 79 0.112050183 ubox
58 64 0.005276694 ubox
58 78 0.820927889 ubox
59 63 0.005246089 ubox
59 77 0.821782276 ubox
60 76 0.821793155 ubox
61 75 0.821775530 ubox
62 73 0.006738477 ubox
62 74 0.821539116 ubox
63 72 0.008931184 ubox
63 73 0.820411749 ubox
64 69 0.024380407 ubox
64 71 0.325451232 ubox
65 70 0.300660084 ubox
65 73 0.011918919 ubox
65 74 0.017946932 ubox
65 78 0.003280205 ubox
66 72 0.029164679 ubox
66 73 0.019844659 ubox
67 71 0.027562960 ubox
67 76 0.003301706 ubox
68 75 0.003373430 ubox
69 74 0.003300368 ubox
71 78 0.003162775 ubox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
13 49 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
18 44 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
58 78 0.9500000 lbox
59 77 0.9500000 lbox
60 76 0.9500000 lbox
61 75 0.9500000 lbox
62 74 0.9500000 lbox
63 73 0.9500000 lbox
showpage
end
%%EOF
