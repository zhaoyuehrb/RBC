%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GDPD3)
} def

/sequence { (\
CCCACACUGGCUAGGCAGGCAGCACAGUCCCGCGGACGGCUGAGCGUGUGGCUGCAGGAGCUUCUGUGGGAGUACGGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.005390371 ubox
1 70 0.994991066 ubox
1 77 0.005577033 ubox
2 68 0.003860048 ubox
2 69 0.999695881 ubox
2 70 0.010428176 ubox
2 76 0.005504425 ubox
2 77 0.009052131 ubox
3 68 0.999728106 ubox
3 69 0.009505603 ubox
3 76 0.009091616 ubox
4 67 0.999530086 ubox
4 73 0.004915500 ubox
5 66 0.999523735 ubox
5 68 0.008448803 ubox
5 72 0.005151520 ubox
6 28 0.011546656 ubox
6 65 0.964362762 ubox
6 67 0.008619190 ubox
7 18 0.005074882 ubox
7 22 0.009376572 ubox
7 27 0.016885941 ubox
7 57 0.012344119 ubox
7 58 0.009083854 ubox
7 60 0.006089294 ubox
7 66 0.008751173 ubox
8 17 0.005107983 ubox
8 21 0.009515205 ubox
8 26 0.016946503 ubox
8 54 0.003568700 ubox
8 56 0.012207345 ubox
8 57 0.008463954 ubox
8 59 0.005898580 ubox
9 16 0.005075233 ubox
9 20 0.009479555 ubox
9 25 0.016934643 ubox
9 53 0.013720885 ubox
9 55 0.010608776 ubox
9 62 0.985599271 ubox
9 63 0.018603776 ubox
9 64 0.011444074 ubox
10 23 0.016977561 ubox
10 52 0.016695571 ubox
10 55 0.010558395 ubox
10 61 0.999462490 ubox
11 18 0.009400871 ubox
11 22 0.016989943 ubox
11 51 0.016719899 ubox
11 54 0.011312681 ubox
11 57 0.003563596 ubox
11 58 0.011509146 ubox
11 60 0.999386092 ubox
12 17 0.008798603 ubox
12 21 0.016818845 ubox
12 50 0.016693077 ubox
12 54 0.030658331 ubox
12 56 0.005323705 ubox
12 57 0.020282048 ubox
12 59 0.968761598 ubox
13 49 0.016499587 ubox
13 53 0.059298159 ubox
14 52 0.059535071 ubox
14 53 0.008995642 ubox
15 23 0.003806395 ubox
15 47 0.016445544 ubox
15 49 0.006316953 ubox
15 52 0.009780118 ubox
15 55 0.994261519 ubox
16 22 0.003807174 ubox
16 46 0.016455919 ubox
16 48 0.006501338 ubox
16 50 0.059621943 ubox
16 51 0.009093626 ubox
16 54 0.995392826 ubox
17 47 0.006526566 ubox
17 49 0.059670552 ubox
17 53 0.991413596 ubox
18 52 0.980058744 ubox
18 53 0.094013212 ubox
19 45 0.008402389 ubox
19 47 0.063474736 ubox
19 49 0.193804883 ubox
19 52 0.175497679 ubox
19 55 0.053377434 ubox
20 42 0.024939835 ubox
20 44 0.007626395 ubox
20 46 0.063348351 ubox
20 48 0.201959605 ubox
20 50 0.934715108 ubox
20 51 0.227675221 ubox
20 54 0.053399087 ubox
21 41 0.029354783 ubox
21 47 0.195889251 ubox
21 49 0.799822275 ubox
21 53 0.053388194 ubox
22 33 0.004272011 ubox
22 40 0.032322117 ubox
22 45 0.502673097 ubox
22 47 0.118604772 ubox
22 49 0.538324238 ubox
22 52 0.053355329 ubox
23 32 0.004279184 ubox
23 39 0.032249793 ubox
23 42 0.004548902 ubox
23 44 0.502415248 ubox
23 46 0.125004433 ubox
23 48 0.848850200 ubox
23 50 0.037401188 ubox
23 51 0.040427250 ubox
23 77 0.003503012 ubox
24 41 0.005953498 ubox
24 47 0.850165595 ubox
24 49 0.051468393 ubox
24 73 0.003350924 ubox
24 78 0.003448995 ubox
25 42 0.525462801 ubox
25 46 0.845172072 ubox
25 48 0.052649206 ubox
25 50 0.016292702 ubox
25 72 0.003486130 ubox
25 77 0.003679909 ubox
26 41 0.534327819 ubox
26 47 0.050579339 ubox
26 49 0.016031477 ubox
27 37 0.182559040 ubox
27 40 0.532035359 ubox
27 45 0.243116872 ubox
28 36 0.187469371 ubox
28 39 0.474958221 ubox
28 43 0.790980209 ubox
28 44 0.211175352 ubox
28 71 0.015303135 ubox
29 34 0.005412295 ubox
29 35 0.192880394 ubox
29 38 0.467490618 ubox
29 39 0.151764999 ubox
29 42 0.790216263 ubox
29 70 0.020039523 ubox
30 34 0.192105553 ubox
30 38 0.140892860 ubox
30 39 0.714741392 ubox
30 69 0.020065586 ubox
31 38 0.723470734 ubox
31 42 0.046979024 ubox
31 46 0.022000298 ubox
31 48 0.007631867 ubox
31 50 0.003206070 ubox
31 68 0.020065262 ubox
32 37 0.708549135 ubox
32 40 0.443523881 ubox
32 41 0.012237132 ubox
32 45 0.023731358 ubox
32 47 0.007695051 ubox
32 49 0.003217469 ubox
32 67 0.020058122 ubox
33 39 0.444133687 ubox
33 42 0.025479441 ubox
33 44 0.023610224 ubox
33 46 0.007720303 ubox
33 48 0.003216753 ubox
33 50 0.003335414 ubox
33 66 0.020065271 ubox
34 41 0.030537166 ubox
34 45 0.007704799 ubox
34 49 0.003938764 ubox
34 65 0.020043032 ubox
35 40 0.030633205 ubox
35 64 0.020055233 ubox
36 47 0.006469379 ubox
36 63 0.019706873 ubox
37 46 0.007122208 ubox
38 45 0.054076838 ubox
38 62 0.016980645 ubox
39 45 0.153985059 ubox
39 47 0.004222193 ubox
39 61 0.017368658 ubox
40 44 0.153145076 ubox
40 46 0.004619433 ubox
40 57 0.010990114 ubox
40 60 0.016874529 ubox
41 56 0.013520426 ubox
41 59 0.014558186 ubox
42 55 0.015650478 ubox
43 53 0.020615541 ubox
44 52 0.022097753 ubox
44 55 0.010640316 ubox
45 51 0.022739676 ubox
45 54 0.010667820 ubox
46 52 0.003571855 ubox
46 53 0.007936844 ubox
47 51 0.003359756 ubox
47 56 0.003408812 ubox
48 55 0.003454177 ubox
49 54 0.003312215 ubox
54 61 0.011642174 ubox
54 67 0.003503880 ubox
55 60 0.011655633 ubox
55 66 0.003775802 ubox
56 65 0.004544121 ubox
57 64 0.004864297 ubox
58 63 0.003844438 ubox
58 64 0.003690167 ubox
59 63 0.003223387 ubox
70 79 0.020969917 ubox
71 78 0.041419662 ubox
72 78 0.012960186 ubox
73 77 0.009794511 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
3 68 0.9500000 lbox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
6 65 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
