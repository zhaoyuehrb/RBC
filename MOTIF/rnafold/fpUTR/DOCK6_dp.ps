%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DOCK6)
} def

/sequence { (\
GCGGCGGCGGCGGGGCCGGGGCCCGGGGCGGCGGCGGCGGGACGCGAGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.033888396 ubox
1 22 0.006910029 ubox
1 29 0.003509126 ubox
1 32 0.018652318 ubox
1 35 0.408473149 ubox
1 38 0.875532431 ubox
1 45 0.152060870 ubox
2 7 0.033910243 ubox
2 9 0.010087471 ubox
2 18 0.004724021 ubox
2 21 0.007788004 ubox
2 25 0.004497085 ubox
2 28 0.003504679 ubox
2 31 0.018656573 ubox
2 33 0.031671239 ubox
2 34 0.408677442 ubox
2 36 0.102606728 ubox
2 37 0.876198629 ubox
2 39 0.129653635 ubox
2 44 0.152033251 ubox
2 46 0.010118689 ubox
3 8 0.010207493 ubox
3 17 0.004863070 ubox
3 23 0.008106316 ubox
3 24 0.004031067 ubox
3 32 0.028771041 ubox
3 35 0.103688501 ubox
3 38 0.132648612 ubox
3 43 0.150499657 ubox
3 45 0.007327203 ubox
3 52 0.013765515 ubox
4 11 0.007207793 ubox
4 16 0.004871429 ubox
4 22 0.009734011 ubox
4 23 0.003379020 ubox
4 29 0.018495942 ubox
4 32 0.412299777 ubox
4 35 0.880122856 ubox
4 38 0.110210899 ubox
4 45 0.022939231 ubox
4 51 0.013713328 ubox
5 10 0.007264918 ubox
5 15 0.004863276 ubox
5 18 0.067790735 ubox
5 21 0.010722103 ubox
5 28 0.018486609 ubox
5 30 0.024896156 ubox
5 31 0.412551534 ubox
5 33 0.104835197 ubox
5 34 0.880116761 ubox
5 36 0.134555072 ubox
5 37 0.109217339 ubox
5 39 0.060534828 ubox
5 44 0.023647642 ubox
5 46 0.003760428 ubox
6 17 0.068670484 ubox
6 29 0.020956968 ubox
6 32 0.105066654 ubox
6 35 0.135425411 ubox
6 38 0.061189896 ubox
6 43 0.023527467 ubox
6 52 0.003645872 ubox
7 16 0.068676814 ubox
7 29 0.412701186 ubox
7 32 0.880155803 ubox
7 35 0.108320591 ubox
7 38 0.020526738 ubox
7 45 0.010925888 ubox
7 51 0.003659578 ubox
8 15 0.068663255 ubox
8 18 0.017463012 ubox
8 25 0.003559349 ubox
8 28 0.412754079 ubox
8 30 0.105462052 ubox
8 31 0.880108092 ubox
8 33 0.136476582 ubox
8 34 0.107067912 ubox
8 36 0.061114407 ubox
8 37 0.020298200 ubox
8 39 0.030505176 ubox
8 44 0.011236116 ubox
8 46 0.004543907 ubox
9 17 0.018096492 ubox
9 23 0.003989777 ubox
9 29 0.105813941 ubox
9 32 0.137489537 ubox
9 35 0.061159726 ubox
9 38 0.030327364 ubox
9 43 0.011203452 ubox
9 45 0.003572628 ubox
10 16 0.018101960 ubox
10 22 0.004227601 ubox
10 29 0.879185984 ubox
10 32 0.105812260 ubox
10 35 0.019947927 ubox
10 38 0.012699545 ubox
10 45 0.037595671 ubox
11 15 0.017971953 ubox
11 21 0.004445029 ubox
11 25 0.293331494 ubox
11 28 0.877224852 ubox
11 30 0.138718893 ubox
11 31 0.104269620 ubox
11 33 0.061038015 ubox
11 34 0.019605835 ubox
11 36 0.029280562 ubox
11 37 0.013198193 ubox
11 39 0.017405860 ubox
11 44 0.037789752 ubox
12 23 0.004302913 ubox
12 24 0.288107467 ubox
12 29 0.139403094 ubox
12 32 0.060622094 ubox
12 35 0.024386771 ubox
12 38 0.017329620 ubox
12 43 0.037747623 ubox
13 22 0.004462433 ubox
13 23 0.273278776 ubox
13 24 0.933721877 ubox
14 22 0.257489739 ubox
14 23 0.940451870 ubox
14 24 0.010889342 ubox
15 22 0.944881719 ubox
15 23 0.008547965 ubox
15 29 0.043633665 ubox
15 32 0.029384376 ubox
15 35 0.028491244 ubox
15 38 0.039100512 ubox
16 21 0.946221254 ubox
16 26 0.173714022 ubox
16 27 0.013513519 ubox
16 28 0.042635907 ubox
16 31 0.029544984 ubox
16 34 0.029400965 ubox
16 37 0.039112981 ubox
16 40 0.005587279 ubox
16 49 0.003232142 ubox
17 25 0.174394505 ubox
17 26 0.012438526 ubox
17 27 0.041442898 ubox
17 30 0.029531331 ubox
17 33 0.029408251 ubox
17 36 0.039111536 ubox
17 39 0.005590385 ubox
17 48 0.003202982 ubox
18 24 0.175480527 ubox
18 29 0.021705483 ubox
18 32 0.029160746 ubox
18 35 0.038821879 ubox
18 38 0.005551015 ubox
18 45 0.003294119 ubox
19 23 0.172659023 ubox
20 52 0.003748078 ubox
21 29 0.036392780 ubox
21 32 0.038491839 ubox
21 35 0.005401172 ubox
21 51 0.003791310 ubox
22 28 0.037498737 ubox
22 31 0.038190897 ubox
22 34 0.004626739 ubox
22 41 0.069320224 ubox
23 27 0.037228159 ubox
23 30 0.037762759 ubox
23 31 0.006798361 ubox
23 33 0.003462299 ubox
23 34 0.005677685 ubox
23 40 0.069806060 ubox
23 49 0.006191351 ubox
24 30 0.008758837 ubox
24 33 0.007342346 ubox
24 39 0.069813828 ubox
24 48 0.006266961 ubox
25 29 0.009801808 ubox
25 32 0.008227636 ubox
25 38 0.069296460 ubox
25 52 0.003502965 ubox
26 51 0.003534607 ubox
26 52 0.005092440 ubox
27 51 0.005152919 ubox
27 52 0.003179457 ubox
28 35 0.069291907 ubox
28 45 0.006941599 ubox
28 51 0.003214088 ubox
29 34 0.069369828 ubox
29 36 0.007878048 ubox
29 44 0.006948083 ubox
30 35 0.007955007 ubox
30 43 0.006900068 ubox
31 38 0.005693638 ubox
31 45 0.003240109 ubox
32 37 0.005733112 ubox
32 39 0.005012186 ubox
32 44 0.003291244 ubox
32 46 0.004176396 ubox
33 38 0.005562258 ubox
33 43 0.003299317 ubox
33 45 0.003812182 ubox
33 52 0.004726602 ubox
34 45 0.066496154 ubox
34 51 0.004734835 ubox
35 44 0.066829678 ubox
35 46 0.007993812 ubox
36 43 0.070817791 ubox
36 45 0.024590901 ubox
36 52 0.033137950 ubox
37 45 0.405071990 ubox
37 51 0.033128752 ubox
38 44 0.405824273 ubox
38 46 0.098375949 ubox
39 43 0.380784658 ubox
39 45 0.168632897 ubox
39 52 0.502254796 ubox
40 51 0.505824526 ubox
40 52 0.141736440 ubox
41 51 0.143136076 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
4 35 0.9500000 lbox
5 34 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
showpage
end
%%EOF
