%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCCGAGGCCGCCAGUGCCCGCCGGCCGCUUCCGCUCCCGGCGCAGGCGCGGCAGCUUGGCCAGAGCGGAGGGGGCUCGGGAGAGGAGUGGACGCCGCUGGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[116.40065765 410.16021729]
[125.94896698 397.26800537]
[125.07679749 382.29339600]
[124.20462036 367.31875610]
[123.33245087 352.34414673]
[122.46028137 337.36950684]
[112.02191925 323.34539795]
[120.21647644 306.93576050]
[118.90914154 291.99282837]
[117.60180664 277.04992676]
[106.06233215 267.70239258]
[104.52363586 252.56677246]
[114.40641785 240.52648926]
[113.09908295 225.58357239]
[111.79174805 210.64065552]
[94.46648407 201.95642090]
[85.61603546 184.55809021]
[88.84510803 165.16490173]
[103.05673218 151.37786865]
[100.02346802 136.68775940]
[96.99020386 121.99765778]
[93.95693970 107.30754852]
[90.21326447 103.39608002]
[89.01522064 97.63781738]
[91.20069885 91.67614746]
[89.02672577 76.83451843]
[86.85274506 61.99289703]
[84.67877197 47.15127182]
[75.02307892 34.61818695]
[80.83409882 20.90391350]
[78.66011810 6.06228876]
[76.48613739 -8.77933598]
[74.31216431 -23.62096024]
[72.13818359 -38.46258545]
[69.96421051 -53.30421066]
[67.79022980 -68.14583588]
[65.61624908 -82.98745728]
[63.44227219 -97.82908630]
[53.51758575 -106.22459412]
[52.08536530 -118.73936462]
[59.37575150 -128.51347351]
[57.63435745 -143.41204834]
[55.89296341 -158.31062317]
[51.73171616 -166.62054443]
[54.32409286 -173.66700745]
[53.01675797 -188.60992432]
[51.70942307 -203.55284119]
[50.40208435 -218.49575806]
[49.09474945 -233.43869019]
[36.82838058 -243.40422058]
[35.28456497 -259.13290405]
[45.37922287 -271.29324341]
[61.12337112 -272.67068481]
[73.17628479 -262.44802856]
[74.38719177 -246.69018555]
[64.03766632 -234.74601746]
[65.34500885 -219.80310059]
[66.65234375 -204.86018372]
[67.95967865 -189.91726685]
[69.26701355 -174.97433472]
[70.79154205 -160.05201721]
[72.53293610 -145.15344238]
[74.27433014 -130.25486755]
[85.51045990 -116.86140442]
[78.28389740 -100.00305939]
[80.45787811 -85.16143799]
[82.63185120 -70.31980896]
[84.80583191 -55.47818756]
[86.97981262 -40.63656235]
[89.15378571 -25.79493904]
[91.32776642 -10.95331383]
[93.50173950 3.88831091]
[95.67572021 18.72993469]
[105.17591858 30.20144653]
[99.52039337 44.97729492]
[101.69437408 59.81891632]
[103.86834717 74.66054535]
[106.04232788 89.50216675]
[108.64704895 104.27428436]
[111.68031311 118.96439362]
[114.71357727 133.65449524]
[117.74684143 148.34460449]
[128.44236755 150.71371460]
[137.66279602 156.55703735]
[144.32388306 165.15628052]
[147.65298462 175.47102356]
[147.27856445 186.26451111]
[143.27151489 196.25193787]
[136.13359070 204.25340271]
[126.73466492 209.33331299]
[128.04200745 224.27624512]
[129.34933472 239.21916199]
[141.17274475 249.36039734]
[142.28570557 264.53326416]
[132.54472351 275.74258423]
[133.85206604 290.68551636]
[135.15939331 305.62841797]
[144.57913208 314.58679199]
[145.28126526 327.16366577]
[137.43490601 336.49734497]
[138.30706787 351.47195435]
[139.17924500 366.44659424]
[140.05142212 381.42120361]
[140.92358398 396.39584351]
[151.90403748 408.09240723]
[149.46298218 423.94863892]
[135.47299194 431.80102539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 104]
[3 103]
[4 102]
[5 101]
[6 100]
[8 97]
[9 96]
[10 95]
[13 92]
[14 91]
[15 90]
[19 82]
[20 81]
[21 80]
[22 79]
[25 78]
[26 77]
[27 76]
[28 75]
[30 73]
[31 72]
[32 71]
[33 70]
[34 69]
[35 68]
[36 67]
[37 66]
[38 65]
[41 63]
[42 62]
[43 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
