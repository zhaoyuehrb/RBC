%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PYDC1)
} def

/sequence { (\
GCUGCAGGAAAGGUAGGACCUGAUGGCUCCAGGCCCUCGGAGGCUCAGAGGCGCAGGGCUGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.107388483 ubox
1 27 0.114098723 ubox
1 34 0.006809143 ubox
1 44 0.006554509 ubox
1 59 0.008182741 ubox
1 64 0.115931331 ubox
2 8 0.067065105 ubox
2 12 0.048444649 ubox
2 13 0.111764888 ubox
2 16 0.577121637 ubox
2 17 0.029296095 ubox
2 26 0.114890799 ubox
2 32 0.008492174 ubox
2 33 0.006328873 ubox
2 40 0.155297170 ubox
2 42 0.008708218 ubox
2 43 0.006600335 ubox
2 56 0.024223156 ubox
2 58 0.006987747 ubox
2 63 0.116254053 ubox
3 7 0.060694075 ubox
3 11 0.050675043 ubox
3 12 0.111272610 ubox
3 15 0.579839921 ubox
3 16 0.015931397 ubox
3 22 0.003933581 ubox
3 25 0.114888723 ubox
3 31 0.008932701 ubox
3 32 0.005683280 ubox
3 39 0.155852528 ubox
3 41 0.010388263 ubox
3 42 0.006653309 ubox
3 55 0.024365308 ubox
3 62 0.114907058 ubox
4 14 0.580478723 ubox
4 24 0.143451413 ubox
4 27 0.015390886 ubox
4 30 0.009027912 ubox
4 38 0.155650539 ubox
4 54 0.024428814 ubox
4 59 0.015814707 ubox
4 64 0.013738493 ubox
5 13 0.580389126 ubox
5 22 0.615093251 ubox
5 25 0.053539238 ubox
5 26 0.015314956 ubox
5 53 0.024210999 ubox
5 58 0.015851163 ubox
5 61 0.098674732 ubox
5 63 0.013740044 ubox
6 21 0.616756047 ubox
6 24 0.059274523 ubox
6 28 0.009045429 ubox
6 37 0.148859228 ubox
6 60 0.096613481 ubox
7 20 0.616956571 ubox
7 21 0.004407995 ubox
7 27 0.009278690 ubox
7 30 0.003558539 ubox
7 35 0.022238670 ubox
7 36 0.149183994 ubox
7 37 0.032384734 ubox
7 38 0.022396793 ubox
7 59 0.093097457 ubox
7 60 0.004671051 ubox
7 65 0.079686247 ubox
8 19 0.614918558 ubox
8 20 0.005093362 ubox
8 27 0.003900899 ubox
8 29 0.003570089 ubox
8 34 0.022620378 ubox
8 35 0.109519505 ubox
8 36 0.035497253 ubox
8 37 0.021840010 ubox
8 38 0.050433333 ubox
8 59 0.006497637 ubox
8 64 0.080330442 ubox
9 37 0.049565930 ubox
11 21 0.284355791 ubox
11 28 0.003448603 ubox
11 37 0.017026559 ubox
12 20 0.293379927 ubox
12 21 0.006223269 ubox
12 27 0.003957402 ubox
12 30 0.031743796 ubox
12 35 0.130352390 ubox
12 36 0.015894419 ubox
12 37 0.003896648 ubox
12 38 0.008027116 ubox
12 60 0.067833997 ubox
12 65 0.347427700 ubox
13 19 0.293540740 ubox
13 20 0.006758242 ubox
13 24 0.003429714 ubox
13 29 0.031706877 ubox
13 34 0.164866137 ubox
13 35 0.012880159 ubox
13 36 0.004220638 ubox
13 37 0.005449818 ubox
13 54 0.003685301 ubox
13 59 0.068888145 ubox
13 64 0.350974057 ubox
14 18 0.264696884 ubox
14 22 0.008902123 ubox
14 23 0.003536410 ubox
14 25 0.004002489 ubox
14 33 0.164684004 ubox
14 53 0.003574295 ubox
14 58 0.068774672 ubox
14 61 0.075861144 ubox
14 63 0.343568364 ubox
15 21 0.010683061 ubox
15 24 0.004714759 ubox
15 28 0.017738742 ubox
15 37 0.042320072 ubox
15 60 0.110591821 ubox
16 20 0.010637545 ubox
16 27 0.017066180 ubox
16 28 0.026026003 ubox
16 29 0.004601238 ubox
16 30 0.169969941 ubox
16 35 0.022220761 ubox
16 36 0.045888494 ubox
16 59 0.113605520 ubox
16 60 0.332009135 ubox
17 27 0.028726960 ubox
17 28 0.004516365 ubox
17 29 0.170097923 ubox
17 34 0.024838322 ubox
17 35 0.046031096 ubox
17 38 0.004170019 ubox
17 59 0.333333893 ubox
17 64 0.003426690 ubox
18 28 0.169526072 ubox
18 37 0.004135857 ubox
19 26 0.173105533 ubox
19 33 0.053700364 ubox
19 40 0.098963062 ubox
19 57 0.407766885 ubox
19 58 0.062020129 ubox
20 25 0.173255637 ubox
20 26 0.014226641 ubox
20 32 0.053768996 ubox
20 39 0.098008778 ubox
20 40 0.490296151 ubox
20 42 0.003570839 ubox
20 48 0.004043398 ubox
20 56 0.411237889 ubox
20 57 0.059259823 ubox
20 63 0.004353394 ubox
21 25 0.012849181 ubox
21 31 0.053739048 ubox
21 39 0.491898194 ubox
21 47 0.004064025 ubox
21 55 0.411578121 ubox
21 56 0.056096314 ubox
21 62 0.004294629 ubox
22 29 0.009771230 ubox
22 30 0.052829163 ubox
22 38 0.503444282 ubox
22 46 0.004080777 ubox
22 54 0.411717758 ubox
23 28 0.012513096 ubox
23 37 0.497579258 ubox
23 45 0.003635943 ubox
24 53 0.410091177 ubox
24 61 0.019441459 ubox
25 35 0.503008790 ubox
25 36 0.023444159 ubox
25 52 0.414908965 ubox
25 60 0.042641751 ubox
25 65 0.712931384 ubox
26 34 0.503871503 ubox
26 35 0.017644356 ubox
26 44 0.003362797 ubox
26 52 0.012856989 ubox
26 59 0.045187935 ubox
26 64 0.723275492 ubox
27 33 0.503969322 ubox
27 42 0.013916169 ubox
27 50 0.416071373 ubox
27 51 0.010431016 ubox
27 58 0.045249462 ubox
27 63 0.723391679 ubox
28 32 0.454017730 ubox
28 41 0.096361760 ubox
28 49 0.416203649 ubox
28 50 0.006153712 ubox
28 57 0.027935918 ubox
28 58 0.022043864 ubox
28 62 0.722860606 ubox
29 40 0.101117231 ubox
29 48 0.415902154 ubox
29 56 0.027499318 ubox
29 57 0.047414867 ubox
29 58 0.074645060 ubox
29 61 0.697768684 ubox
30 39 0.101082258 ubox
30 56 0.048286524 ubox
30 57 0.088554903 ubox
30 61 0.167369016 ubox
31 37 0.039800758 ubox
31 45 0.011089403 ubox
31 60 0.218200923 ubox
32 36 0.039165054 ubox
32 38 0.031513238 ubox
32 44 0.008234032 ubox
32 45 0.408798295 ubox
32 46 0.037145083 ubox
32 59 0.158651329 ubox
32 60 0.634973111 ubox
33 37 0.020479387 ubox
33 44 0.416157103 ubox
33 45 0.008849998 ubox
33 52 0.013232234 ubox
33 54 0.114345305 ubox
33 59 0.701644419 ubox
34 40 0.009458728 ubox
34 43 0.414869979 ubox
34 51 0.011325244 ubox
34 53 0.114358483 ubox
34 57 0.030379524 ubox
34 58 0.717714102 ubox
35 39 0.009475750 ubox
35 42 0.412643845 ubox
35 43 0.035319712 ubox
35 50 0.009011857 ubox
35 51 0.116103880 ubox
35 56 0.024800364 ubox
35 57 0.717699942 ubox
35 58 0.003622361 ubox
36 42 0.049123493 ubox
36 48 0.005700185 ubox
36 50 0.117853501 ubox
36 56 0.717601231 ubox
36 57 0.004731150 ubox
36 58 0.004485403 ubox
37 41 0.053869551 ubox
37 47 0.005636518 ubox
37 49 0.118601101 ubox
37 51 0.005638708 ubox
37 55 0.705186598 ubox
37 56 0.004070357 ubox
37 57 0.004647007 ubox
38 42 0.008599667 ubox
38 48 0.118415616 ubox
38 50 0.010782402 ubox
38 53 0.491215973 ubox
38 56 0.008781993 ubox
39 45 0.010558048 ubox
39 46 0.043030121 ubox
39 52 0.464000434 ubox
40 44 0.013261505 ubox
40 45 0.034621685 ubox
40 46 0.097910968 ubox
41 45 0.085769685 ubox
42 65 0.540107323 ubox
43 52 0.531625026 ubox
43 54 0.120019710 ubox
43 59 0.003405086 ubox
43 64 0.544991109 ubox
44 50 0.052424756 ubox
44 51 0.535966135 ubox
44 53 0.120008268 ubox
44 58 0.003455537 ubox
44 63 0.545013639 ubox
45 49 0.050215699 ubox
45 50 0.492695304 ubox
45 51 0.041050144 ubox
45 57 0.003451737 ubox
45 62 0.544890481 ubox
46 50 0.072064842 ubox
46 56 0.003444070 ubox
46 61 0.544840680 ubox
47 60 0.478876079 ubox
48 59 0.403315269 ubox
49 60 0.032024016 ubox
50 59 0.040539731 ubox
50 60 0.254073235 ubox
50 65 0.010392416 ubox
51 59 0.361963240 ubox
51 64 0.010510598 ubox
52 58 0.386268488 ubox
52 63 0.010492237 ubox
53 59 0.024601876 ubox
54 58 0.027508048 ubox
54 61 0.009963226 ubox
55 60 0.009005692 ubox
56 65 0.004327692 ubox
57 64 0.004769406 ubox
57 65 0.036019701 ubox
58 64 0.072822478 ubox
59 63 0.072433714 ubox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
25 65 0.9500000 lbox
26 64 0.9500000 lbox
27 63 0.9500000 lbox
28 62 0.9500000 lbox
29 61 0.9500000 lbox
32 60 0.9500000 lbox
33 59 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 53 0.9500000 lbox
39 52 0.9500000 lbox
showpage
end
%%EOF
