%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGUAGUUCCGAGACCGGUUGCCAUGGCGUUCUGGACAGCCUCGCGAGUCCGACCCCGCCCUUCAGGAGUGACGAGCGGCCUGACCAAUGGGAGCAGGGGGCGGGCUCUCUGACGAAGGACUGGAAGGUGGCGGUGGUGAAGGUGCAGGCCGUUGGGGCGGCUCAGAGGCAGGUGACU\
) } def
/len { sequence length } bind def

/coor [
[165.91471863 510.95297241]
[150.93917847 511.80938721]
[136.31396484 508.47723389]
[123.18743134 501.21817017]
[112.59024048 490.60217285]
[105.35448456 477.46276855]
[102.04829407 462.83166504]
[102.93126678 447.85766602]
[107.93408203 433.71652222]
[116.66391754 421.51858521]
[128.43531799 412.22158813]
[142.32402039 406.55554199]
[157.23948669 404.96533203]
[172.01058960 407.57580566]
[185.47750854 414.18200684]
[196.58457947 424.26730347]
[191.72703552 410.07559204]
[186.86950684 395.88391113]
[176.13578796 390.26940918]
[171.98222351 378.46417236]
[177.15602112 366.62991333]
[172.54553223 352.35604858]
[167.93504333 338.08218384]
[163.32456970 323.80831909]
[158.71408081 309.53445435]
[154.10359192 295.26055908]
[149.49310303 280.98669434]
[138.21842957 271.25372314]
[141.33947754 255.74340820]
[136.72898865 241.46952820]
[123.39385986 234.93424988]
[118.51483154 220.52420044]
[125.46005249 206.58139038]
[120.84956360 192.30752563]
[116.23908234 178.03364563]
[104.04642487 173.81796265]
[96.40079498 163.18592834]
[96.28146362 149.89605713]
[103.95652771 138.80809021]
[99.59446716 124.45634460]
[95.23241425 110.10460663]
[90.74597168 95.79125977]
[86.13549042 81.51738739]
[81.52500153 67.24351501]
[76.79081726 53.01019287]
[71.93328094 38.81848907]
[53.98751068 25.42092514]
[58.83261871 4.33611870]
[53.00228882 -9.48441887]
[47.17195892 -23.30495644]
[41.34162903 -37.12549210]
[35.51129913 -50.94602966]
[29.68096924 -64.76657104]
[23.85063934 -78.58710480]
[11.35775948 -88.29476166]
[13.53972340 -103.02867126]
[7.70939350 -116.84921265]
[1.87906361 -130.66975403]
[-3.95126629 -144.49028015]
[-9.90131569 -158.25970459]
[-15.97063637 -171.97697449]
[-22.15877151 -185.64105225]
[-28.46525383 -199.25090027]
[-34.77173996 -212.86076355]
[-41.66266251 -226.18424988]
[-49.12504959 -239.19627380]
[-56.58744049 -252.20829773]
[-64.04982758 -265.22030640]
[-71.51222229 -278.23233032]
[-87.63775635 -287.09744263]
[-86.93342590 -304.62078857]
[-94.62052917 -317.50134277]
[-109.76074219 -322.80734253]
[-114.91588593 -337.99957275]
[-106.13137054 -351.42385864]
[-90.14593506 -352.78225708]
[-79.22222900 -341.03271484]
[-81.73998260 -325.18844604]
[-74.05287933 -312.30789185]
[-62.39017487 -309.03427124]
[-55.88529205 -298.34304810]
[-58.50019836 -285.69473267]
[-51.03780746 -272.68270874]
[-43.57541656 -259.67068481]
[-36.11302948 -246.65866089]
[-28.65063858 -233.64663696]
[-22.12645912 -247.15348816]
[-7.53908110 -250.64753723]
[4.39649105 -241.56227112]
[4.91310835 -226.57116699]
[-6.36870527 -216.68579102]
[-21.16187859 -219.16725159]
[-14.85539532 -205.55738831]
[-8.54891205 -191.94752502]
[-2.86857414 -187.18765259]
[-2.25337195 -178.04629517]
[3.81594896 -164.32902527]
[9.41281891 -159.47126770]
[9.86927128 -150.32061768]
[15.69960117 -136.50007629]
[21.52993011 -122.67954254]
[27.36026001 -108.85900116]
[39.43611526 -100.13989258]
[37.67117691 -84.41743469]
[43.50150681 -70.59690094]
[49.33183670 -56.77635956]
[55.16216660 -42.95582199]
[60.99249649 -29.13528633]
[66.82282257 -15.31474876]
[72.65315247 -1.49421132]
[80.47356415 -0.13894954]
[87.19177246 4.26155901]
[91.66237640 11.04636097]
[93.08806610 19.14117622]
[91.16088867 27.22827530]
[86.12498474 33.96096039]
[90.98251343 48.15266418]
[96.13727570 53.47724915]
[95.79887390 62.63302994]
[100.40935516 76.90689850]
[105.01984406 91.18077087]
[110.31085205 97.29279327]
[109.58415222 105.74254608]
[113.94621277 120.09429169]
[118.30826569 134.44602966]
[133.88076782 142.38742065]
[138.80778503 158.80722046]
[130.51295471 173.42317200]
[135.12344360 187.69703674]
[139.73391724 201.97091675]
[153.52302551 209.21647644]
[157.99537659 223.75790405]
[151.00285339 236.85905457]
[155.61334229 251.13291931]
[167.21778870 261.88687134]
[163.76696777 276.37622070]
[168.37745667 290.65008545]
[172.98794556 304.92395020]
[177.59843445 319.19781494]
[182.20892334 333.47171021]
[186.81941223 347.74557495]
[191.42990112 362.01943970]
[205.37379456 374.02737427]
[201.06121826 391.02636719]
[205.91874695 405.21807861]
[210.77627563 419.40975952]
[218.01170349 432.54934692]
[227.40760803 444.24197388]
[242.87370300 446.09603882]
[252.23591614 458.08786011]
[250.37303162 472.82098389]
[259.76892090 484.51358032]
[269.16482544 496.20620728]
[283.84045410 502.11694336]
[285.78143311 516.88452148]
[295.17733765 528.57714844]
[304.57324219 540.26971436]
[313.96914673 551.96234131]
[323.36505127 563.65496826]
[338.84024048 569.08178711]
[341.61175537 585.24499512]
[328.82852173 595.51733398]
[313.64080811 589.33142090]
[311.67242432 573.05084229]
[302.27655029 561.35827637]
[292.88064575 549.66564941]
[283.48474121 537.97302246]
[274.08883667 526.28045654]
[260.08526611 521.20599365]
[257.47222900 505.60208130]
[248.07632446 493.90948486]
[238.68041992 482.21688843]
[223.89167786 480.86459351]
[214.19633484 469.14047241]
[215.71499634 453.63784790]
[206.31909180 441.94525146]
[208.90336609 456.72097778]
[207.28668213 471.63357544]
[201.59599304 485.51220703]
[192.27813721 497.26708984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 146]
[17 145]
[18 144]
[21 142]
[22 141]
[23 140]
[24 139]
[25 138]
[26 137]
[27 136]
[29 134]
[30 133]
[33 130]
[34 129]
[35 128]
[39 125]
[40 124]
[41 123]
[42 121]
[43 120]
[44 119]
[45 117]
[46 116]
[48 110]
[49 109]
[50 108]
[51 107]
[52 106]
[53 105]
[54 104]
[56 102]
[57 101]
[58 100]
[59 99]
[60 97]
[61 96]
[62 94]
[63 93]
[64 92]
[65 86]
[66 85]
[67 84]
[68 83]
[69 82]
[71 79]
[72 78]
[147 176]
[148 175]
[151 172]
[152 171]
[153 170]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
