%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DPH6)
} def

/sequence { (\
GCUGCGGCGCGACCUCCUGGCUCCCGCCCGCGCUCGCCGCACGCACGCGCACUGCGCCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.008428098 ubox
1 33 0.017880617 ubox
1 37 0.004373219 ubox
1 40 0.259234279 ubox
1 44 0.175359968 ubox
1 48 0.014093611 ubox
1 57 0.003853521 ubox
1 62 0.936967794 ubox
2 30 0.008309904 ubox
2 32 0.017524953 ubox
2 36 0.004380074 ubox
2 39 0.259258837 ubox
2 43 0.175448325 ubox
2 47 0.014120291 ubox
2 56 0.003790250 ubox
2 61 0.948111811 ubox
3 30 0.003625460 ubox
3 32 0.007769751 ubox
3 39 0.003568220 ubox
3 41 0.175201892 ubox
3 45 0.027068270 ubox
3 60 0.947988270 ubox
4 29 0.015510156 ubox
4 31 0.025244201 ubox
4 37 0.259871769 ubox
4 38 0.006439147 ubox
4 40 0.176560698 ubox
4 44 0.030327076 ubox
4 55 0.003915032 ubox
4 59 0.947859934 ubox
4 62 0.005876789 ubox
5 30 0.025380582 ubox
5 36 0.260148777 ubox
5 39 0.176557575 ubox
5 43 0.030411755 ubox
5 54 0.003951350 ubox
5 61 0.005924225 ubox
6 28 0.058081570 ubox
6 29 0.022043449 ubox
6 34 0.045988983 ubox
6 35 0.256510714 ubox
6 38 0.175751784 ubox
6 42 0.030241298 ubox
6 58 0.946612261 ubox
7 27 0.060045305 ubox
7 28 0.016977241 ubox
7 33 0.260900114 ubox
7 34 0.028703323 ubox
7 37 0.173017638 ubox
7 40 0.030299768 ubox
7 57 0.946717975 ubox
8 26 0.061675448 ubox
8 32 0.263943878 ubox
8 36 0.170239601 ubox
8 39 0.030315555 ubox
8 56 0.946704628 ubox
9 21 0.003295163 ubox
9 25 0.061822247 ubox
9 27 0.012799150 ubox
9 31 0.271265628 ubox
9 33 0.124496149 ubox
9 35 0.095988694 ubox
9 37 0.023396802 ubox
9 38 0.021454926 ubox
9 55 0.946640060 ubox
10 20 0.003303713 ubox
10 26 0.013261163 ubox
10 30 0.272688330 ubox
10 32 0.136626055 ubox
10 36 0.032327845 ubox
10 54 0.946275929 ubox
11 18 0.026956148 ubox
11 23 0.168897655 ubox
11 25 0.012904511 ubox
11 29 0.272648818 ubox
11 31 0.136787479 ubox
11 35 0.036423529 ubox
11 53 0.755892534 ubox
12 22 0.169572306 ubox
12 34 0.036760412 ubox
13 20 0.220793090 ubox
14 19 0.223279399 ubox
14 20 0.015519476 ubox
15 19 0.014167356 ubox
18 26 0.050430312 ubox
18 30 0.029340063 ubox
18 39 0.008637571 ubox
18 51 0.005020877 ubox
19 25 0.065846355 ubox
19 28 0.962429501 ubox
19 29 0.112343520 ubox
19 34 0.008114823 ubox
19 38 0.016869462 ubox
19 50 0.003574091 ubox
20 24 0.064820101 ubox
20 27 0.968621861 ubox
20 28 0.084747847 ubox
20 31 0.007541316 ubox
20 33 0.008419319 ubox
20 37 0.016963047 ubox
20 44 0.003291944 ubox
20 48 0.004392617 ubox
20 50 0.007547901 ubox
21 26 0.970052950 ubox
21 30 0.007934559 ubox
21 32 0.008417592 ubox
21 36 0.016948972 ubox
21 43 0.003285558 ubox
21 47 0.004404206 ubox
21 49 0.007655888 ubox
25 32 0.014201767 ubox
25 47 0.010799295 ubox
25 49 0.053365317 ubox
26 31 0.014064109 ubox
26 33 0.027803645 ubox
26 37 0.006951685 ubox
26 40 0.007254285 ubox
26 42 0.003521392 ubox
26 44 0.009487905 ubox
26 46 0.011050859 ubox
26 48 0.055409353 ubox
26 50 0.038586198 ubox
26 53 0.004712122 ubox
26 55 0.003936871 ubox
27 32 0.027763921 ubox
27 36 0.007003368 ubox
27 39 0.007252537 ubox
27 43 0.009468521 ubox
27 47 0.055362504 ubox
27 49 0.037571141 ubox
27 54 0.003993762 ubox
29 36 0.006357421 ubox
29 39 0.003593105 ubox
29 43 0.051629370 ubox
29 47 0.032705859 ubox
29 49 0.204134249 ubox
30 35 0.007005289 ubox
30 37 0.041484207 ubox
30 40 0.045255572 ubox
30 42 0.053729171 ubox
30 44 0.029278517 ubox
30 46 0.032843385 ubox
30 48 0.212606231 ubox
30 50 0.915753585 ubox
30 57 0.053953799 ubox
31 36 0.041591255 ubox
31 39 0.045316774 ubox
31 43 0.029308766 ubox
31 47 0.212627274 ubox
31 49 0.916721649 ubox
31 56 0.054103640 ubox
32 38 0.044322091 ubox
32 40 0.056873808 ubox
32 42 0.025821567 ubox
32 44 0.034161152 ubox
32 46 0.211913192 ubox
32 48 0.916744081 ubox
32 50 0.010162133 ubox
32 55 0.054265491 ubox
32 62 0.016519007 ubox
33 39 0.057190821 ubox
33 43 0.034311909 ubox
33 47 0.915645793 ubox
33 49 0.010045928 ubox
33 54 0.054227272 ubox
33 61 0.016752371 ubox
34 60 0.016288988 ubox
35 43 0.293364093 ubox
35 47 0.011094985 ubox
35 49 0.007282823 ubox
35 56 0.007545096 ubox
36 42 0.290609665 ubox
36 44 0.885035796 ubox
36 46 0.016606635 ubox
36 48 0.008187827 ubox
36 50 0.046413138 ubox
36 55 0.007843910 ubox
36 57 0.013917890 ubox
36 62 0.004664163 ubox
37 43 0.885026502 ubox
37 47 0.007052781 ubox
37 49 0.035828870 ubox
37 54 0.007838300 ubox
37 56 0.009899525 ubox
37 61 0.004695165 ubox
38 47 0.021199726 ubox
38 49 0.067821028 ubox
38 56 0.020559363 ubox
39 46 0.023987513 ubox
39 48 0.075668306 ubox
39 50 0.013810069 ubox
39 55 0.023752109 ubox
39 62 0.003547322 ubox
40 47 0.075614978 ubox
40 49 0.013821459 ubox
40 54 0.023754638 ubox
40 61 0.003579168 ubox
41 53 0.023051757 ubox
42 49 0.012042839 ubox
42 56 0.047497130 ubox
43 48 0.011999254 ubox
43 50 0.054421955 ubox
43 55 0.048494134 ubox
43 57 0.012670144 ubox
43 62 0.178366835 ubox
44 49 0.054452885 ubox
44 54 0.048491375 ubox
44 56 0.012039027 ubox
44 61 0.179370881 ubox
45 53 0.045358754 ubox
46 54 0.007864658 ubox
46 56 0.054653939 ubox
47 53 0.006433272 ubox
47 55 0.056434812 ubox
47 57 0.305870413 ubox
47 62 0.004556455 ubox
48 54 0.056421384 ubox
48 56 0.306449819 ubox
48 61 0.004572365 ubox
49 53 0.034824970 ubox
49 55 0.306448627 ubox
49 57 0.010769942 ubox
50 54 0.304223894 ubox
50 56 0.010786357 ubox
52 61 0.014487752 ubox
53 60 0.014603759 ubox
54 59 0.014457737 ubox
54 62 0.010476464 ubox
55 61 0.010597096 ubox
56 62 0.004735687 ubox
57 61 0.005240054 ubox
1 62 0.9500000 lbox
2 61 0.9500000 lbox
3 60 0.9500000 lbox
4 59 0.9500000 lbox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
showpage
end
%%EOF
