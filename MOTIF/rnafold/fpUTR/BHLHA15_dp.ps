%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BHLHA15)
} def

/sequence { (\
AGCUCCAAGGGCCUCACCUUCCUGCCGCCACCUCCUAGGACAGCCAGUCCAGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.009145008 ubox
1 23 0.024565180 ubox
1 33 0.007216624 ubox
2 12 0.074651142 ubox
2 13 0.007913211 ubox
2 22 0.025913889 ubox
2 25 0.903664353 ubox
2 28 0.296773454 ubox
2 32 0.008223504 ubox
2 55 0.110703136 ubox
3 9 0.029436005 ubox
3 10 0.003751706 ubox
3 11 0.075126040 ubox
3 24 0.905372030 ubox
3 27 0.297211945 ubox
3 54 0.110591177 ubox
4 8 0.026659594 ubox
4 9 0.005275519 ubox
4 10 0.073575302 ubox
4 11 0.004571566 ubox
4 40 0.005058148 ubox
4 53 0.078470554 ubox
4 54 0.010400998 ubox
5 9 0.071562231 ubox
5 10 0.015262509 ubox
5 39 0.005520380 ubox
5 52 0.076939956 ubox
5 53 0.052871810 ubox
5 54 0.011076691 ubox
6 24 0.241520062 ubox
6 38 0.005523648 ubox
6 52 0.052936616 ubox
6 53 0.011064616 ubox
7 20 0.858330456 ubox
7 23 0.201082497 ubox
8 19 0.929317144 ubox
8 20 0.133835673 ubox
8 23 0.193546667 ubox
8 33 0.039233090 ubox
8 36 0.009226606 ubox
9 18 0.934490396 ubox
9 19 0.152539641 ubox
9 20 0.007419048 ubox
9 21 0.015939180 ubox
9 22 0.219768613 ubox
9 23 0.016230840 ubox
9 26 0.010391827 ubox
9 29 0.018706865 ubox
9 32 0.043375033 ubox
9 33 0.005006566 ubox
9 35 0.009500663 ubox
9 50 0.062331300 ubox
9 56 0.046910449 ubox
10 17 0.934090199 ubox
10 18 0.154395036 ubox
10 19 0.009091835 ubox
10 20 0.012640255 ubox
10 21 0.219559678 ubox
10 22 0.017342730 ubox
10 25 0.010007960 ubox
10 26 0.069243998 ubox
10 28 0.015561395 ubox
10 29 0.177617548 ubox
10 31 0.032262921 ubox
10 32 0.004992461 ubox
10 34 0.007439405 ubox
10 45 0.005302741 ubox
10 49 0.062368342 ubox
10 50 0.005639026 ubox
10 55 0.047086976 ubox
10 56 0.062877954 ubox
11 17 0.154565161 ubox
11 18 0.014325425 ubox
11 19 0.011932805 ubox
11 20 0.204960135 ubox
11 21 0.017283298 ubox
11 25 0.069699135 ubox
11 28 0.180492051 ubox
11 31 0.004777674 ubox
11 33 0.003490971 ubox
11 44 0.005330416 ubox
11 48 0.062265597 ubox
11 49 0.005656023 ubox
11 55 0.063771345 ubox
12 24 0.069519843 ubox
12 27 0.180574849 ubox
12 43 0.004996314 ubox
12 47 0.059646843 ubox
12 53 0.047172901 ubox
12 54 0.063688489 ubox
13 43 0.007807614 ubox
13 47 0.017862088 ubox
13 52 0.047406015 ubox
13 53 0.063361842 ubox
14 42 0.007811703 ubox
14 46 0.023685670 ubox
14 51 0.046119838 ubox
14 52 0.060709188 ubox
15 24 0.172888159 ubox
15 52 0.008876592 ubox
16 23 0.156171439 ubox
16 48 0.030232104 ubox
17 39 0.007658728 ubox
17 47 0.028150000 ubox
17 53 0.004448384 ubox
17 54 0.005635645 ubox
18 38 0.007669615 ubox
18 43 0.039040397 ubox
18 47 0.066994161 ubox
18 52 0.004748243 ubox
18 53 0.005643735 ubox
19 37 0.007551881 ubox
19 40 0.003462248 ubox
19 42 0.038643612 ubox
19 46 0.067575118 ubox
19 47 0.005692048 ubox
19 51 0.004623035 ubox
19 52 0.005608037 ubox
20 40 0.059501295 ubox
20 46 0.006421330 ubox
20 51 0.005380224 ubox
20 54 0.006434813 ubox
21 39 0.060838065 ubox
21 53 0.011584739 ubox
22 38 0.060850782 ubox
22 43 0.080268862 ubox
22 47 0.012736425 ubox
22 52 0.011642630 ubox
23 30 0.025275124 ubox
23 37 0.060462318 ubox
23 42 0.080482624 ubox
23 46 0.012954764 ubox
23 51 0.011594654 ubox
24 29 0.028493205 ubox
24 36 0.055966047 ubox
24 41 0.080484612 ubox
24 44 0.005262275 ubox
24 45 0.012249390 ubox
24 50 0.010359674 ubox
24 55 0.034058472 ubox
25 39 0.077654749 ubox
25 43 0.006556567 ubox
25 47 0.004306660 ubox
25 54 0.034014837 ubox
26 38 0.077649247 ubox
26 53 0.026153875 ubox
27 44 0.014576213 ubox
27 55 0.369265621 ubox
28 39 0.023899823 ubox
28 43 0.014590859 ubox
28 53 0.005722822 ubox
28 54 0.367979049 ubox
29 38 0.023940070 ubox
29 52 0.006303922 ubox
29 53 0.271353038 ubox
31 39 0.018279845 ubox
31 53 0.125188410 ubox
31 54 0.083086977 ubox
32 38 0.018452895 ubox
32 52 0.153648620 ubox
32 53 0.071999508 ubox
32 54 0.201682036 ubox
33 37 0.016954920 ubox
33 40 0.003929957 ubox
33 51 0.152434029 ubox
33 52 0.046406719 ubox
33 53 0.049407714 ubox
33 54 0.660467650 ubox
34 39 0.004108207 ubox
34 52 0.068665205 ubox
34 53 0.921618604 ubox
34 54 0.182727220 ubox
35 47 0.035340438 ubox
35 52 0.952607092 ubox
35 53 0.184751029 ubox
35 54 0.017171683 ubox
36 46 0.035243733 ubox
36 51 0.947473436 ubox
36 52 0.169263303 ubox
36 53 0.017317143 ubox
38 45 0.037391782 ubox
38 49 0.006632441 ubox
38 50 0.993350841 ubox
39 44 0.037240635 ubox
39 48 0.004603504 ubox
39 49 0.993846707 ubox
40 48 0.993650664 ubox
41 47 0.992896150 ubox
43 55 0.015796801 ubox
44 53 0.004285165 ubox
44 54 0.015823877 ubox
45 52 0.004620368 ubox
45 53 0.015763956 ubox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
7 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
showpage
end
%%EOF
