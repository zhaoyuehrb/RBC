%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPUSD3)
} def

/sequence { (\
AAUCAGCGCGCUGGCUGGAGCGCGGGUCUGCCCCUCUGGACGCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 27 0.133116025 ubox
3 14 0.021087990 ubox
3 18 0.056579160 ubox
3 19 0.011597969 ubox
3 25 0.026942301 ubox
3 26 0.138427835 ubox
3 39 0.116022871 ubox
3 40 0.030018540 ubox
4 13 0.029007076 ubox
4 17 0.095105882 ubox
4 18 0.008981779 ubox
4 24 0.029831457 ubox
4 25 0.171908202 ubox
4 30 0.104108802 ubox
4 38 0.179649266 ubox
4 39 0.028959216 ubox
5 12 0.029018896 ubox
5 16 0.095923229 ubox
5 29 0.107626806 ubox
5 35 0.008097038 ubox
5 37 0.179994994 ubox
6 11 0.028786212 ubox
6 15 0.096044511 ubox
6 23 0.105760277 ubox
6 27 0.017204244 ubox
6 28 0.108565305 ubox
6 31 0.019445516 ubox
6 34 0.008609874 ubox
6 36 0.176990935 ubox
6 43 0.189793448 ubox
7 14 0.096013515 ubox
7 22 0.105991217 ubox
7 24 0.909238098 ubox
7 26 0.024614926 ubox
7 30 0.019499634 ubox
7 38 0.008462647 ubox
7 42 0.186968178 ubox
8 15 0.005854875 ubox
8 21 0.105929472 ubox
8 23 0.968104086 ubox
8 29 0.018657228 ubox
8 31 0.004706524 ubox
8 41 0.055167725 ubox
8 43 0.189771620 ubox
9 14 0.008365535 ubox
9 20 0.105729188 ubox
9 22 0.968796637 ubox
9 24 0.014495161 ubox
9 30 0.004744699 ubox
9 42 0.189967490 ubox
10 21 0.968839549 ubox
10 23 0.014526912 ubox
10 27 0.020033830 ubox
10 31 0.006421698 ubox
10 41 0.189470595 ubox
10 43 0.034057352 ubox
11 18 0.098772078 ubox
11 20 0.968841918 ubox
11 22 0.014423134 ubox
11 25 0.003236540 ubox
11 26 0.020326452 ubox
11 30 0.006427148 ubox
11 39 0.188636731 ubox
11 42 0.033414830 ubox
12 17 0.092637977 ubox
12 19 0.962843455 ubox
12 24 0.003263012 ubox
12 25 0.020264933 ubox
12 38 0.187860708 ubox
12 42 0.009194337 ubox
13 21 0.005134317 ubox
13 23 0.003471185 ubox
13 28 0.006453409 ubox
13 32 0.010889211 ubox
13 36 0.006772122 ubox
13 37 0.185896915 ubox
13 41 0.031979868 ubox
14 21 0.013286471 ubox
14 23 0.020754315 ubox
14 27 0.006502118 ubox
14 31 0.010938809 ubox
14 35 0.005834530 ubox
14 36 0.186288286 ubox
14 43 0.004371661 ubox
15 20 0.013428969 ubox
15 22 0.020739859 ubox
15 26 0.006281891 ubox
15 30 0.010894577 ubox
15 39 0.065768217 ubox
15 42 0.004049265 ubox
16 25 0.006019549 ubox
16 38 0.066357781 ubox
17 23 0.003769117 ubox
17 29 0.009902029 ubox
17 32 0.007995306 ubox
17 33 0.136066933 ubox
17 34 0.127991581 ubox
17 35 0.004356771 ubox
17 37 0.070438223 ubox
18 28 0.010770165 ubox
18 31 0.008067499 ubox
18 32 0.136228261 ubox
18 33 0.127851703 ubox
18 34 0.004688121 ubox
18 36 0.079864248 ubox
19 27 0.009775670 ubox
19 29 0.009053962 ubox
19 35 0.080003398 ubox
19 37 0.010997138 ubox
20 27 0.008393050 ubox
20 28 0.009208478 ubox
20 31 0.184024559 ubox
20 34 0.079670055 ubox
20 36 0.011309621 ubox
20 43 0.069961293 ubox
21 26 0.014405104 ubox
21 30 0.184076446 ubox
21 38 0.013390262 ubox
21 42 0.070023266 ubox
22 29 0.140220763 ubox
22 31 0.042226694 ubox
22 37 0.013493049 ubox
22 41 0.067632448 ubox
22 43 0.039575388 ubox
23 30 0.042292802 ubox
23 38 0.046457663 ubox
23 42 0.039542079 ubox
24 29 0.032408294 ubox
24 32 0.044563975 ubox
24 33 0.209229130 ubox
24 34 0.212779025 ubox
24 35 0.039258261 ubox
24 36 0.018971143 ubox
24 37 0.042342920 ubox
24 41 0.027608663 ubox
25 31 0.046562924 ubox
25 32 0.222061392 ubox
25 33 0.220027920 ubox
25 34 0.083721212 ubox
25 35 0.016944765 ubox
25 36 0.042718073 ubox
25 37 0.009984739 ubox
26 31 0.221088857 ubox
26 32 0.219064291 ubox
26 33 0.083486710 ubox
26 34 0.019399754 ubox
26 35 0.039343285 ubox
26 36 0.010414375 ubox
26 41 0.851103108 ubox
26 43 0.043468065 ubox
26 45 0.067816805 ubox
27 39 0.013699272 ubox
27 40 0.852392719 ubox
27 42 0.039466070 ubox
27 44 0.066486251 ubox
28 38 0.019493199 ubox
28 39 0.852455196 ubox
29 38 0.845790127 ubox
29 42 0.087777399 ubox
29 44 0.264298817 ubox
30 37 0.523844063 ubox
30 41 0.108429582 ubox
30 43 0.299304022 ubox
31 39 0.105941279 ubox
31 42 0.298457895 ubox
32 38 0.106808690 ubox
32 39 0.240372579 ubox
33 38 0.240529228 ubox
33 39 0.204513390 ubox
34 38 0.203752822 ubox
37 44 0.086956212 ubox
38 43 0.098091424 ubox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
showpage
end
%%EOF
