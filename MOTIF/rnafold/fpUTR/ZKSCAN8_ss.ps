%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCCGGAGGGGCCUGGUCCGAGUACAGCUUUCAUCGCCUUUACUCCCCGACCUUCCUUCGAGUCUGUUUAUCCGUUGCAGCCUCCCUUCCCCACGACGGGGCGCCUCUGCAACUCACAGUUGAAGAGUCUAUAAACCAACCCCCCUCGCCCCGUGCCACAACUCCAAAAACUGAAAAGAUAAGCACUGCCUUGAUGAUCCGUAUGGGGAACUAAGUACCCUUAGAAAGAGGCCCUCAGAAGAGUCUUCUCUUA\
AGAAGAUAAAGAAGGUAGUGGAAACGAACUUCCUGAGCUUUUCAGGCUCUA\
) } def
/len { sequence length } bind def

/coor [
[-343.93630981 73.48456573]
[-358.87960815 72.18147278]
[-373.82290649 70.87838745]
[-388.76620483 69.57529449]
[-403.70947266 68.27220917]
[-400.03085327 83.82693481]
[-406.16339111 102.12867737]
[-423.07244873 117.80451202]
[-432.80541992 129.21807861]
[-442.53839111 140.63163757]
[-452.27133179 152.04519653]
[-462.00430298 163.45875549]
[-471.73727417 174.87232971]
[-470.25405884 185.58300781]
[-474.79058838 195.15650940]
[-483.64575195 200.56274414]
[-493.79666138 200.23710632]
[-503.76116943 211.44909668]
[-513.72564697 222.66108704]
[-523.69018555 233.87306213]
[-526.91394043 253.80532837]
[-545.57391357 258.98373413]
[-555.30688477 270.39727783]
[-565.03985596 281.81085205]
[-574.77282715 293.22439575]
[-584.50579834 304.63796997]
[-582.81268311 322.07360840]
[-594.05145264 335.06640625]
[-610.87292480 335.86944580]
[-620.48858643 347.38198853]
[-617.56024170 362.74295044]
[-625.23583984 376.36712646]
[-639.89129639 381.82165527]
[-654.60675049 376.53100586]
[-662.43395996 362.99334717]
[-659.67718506 347.60067749]
[-647.63806152 337.62097168]
[-632.00115967 337.76632690]
[-622.38549805 326.25378418]
[-625.32202148 313.73797607]
[-620.45568848 301.62930298]
[-609.34893799 294.41464233]
[-595.91937256 294.90499878]
[-586.18640137 283.49145508]
[-576.45343018 272.07788086]
[-566.72045898 260.66430664]
[-556.98748779 249.25076294]
[-558.70794678 239.24140930]
[-554.57263184 229.72612000]
[-545.71502686 223.91444397]
[-534.90216064 223.90856934]
[-524.93768311 212.69657898]
[-514.97314453 201.48458862]
[-505.00863647 190.27259827]
[-502.44924927 171.07728577]
[-483.15081787 165.13935852]
[-473.41787720 153.72579956]
[-463.68490601 142.31224060]
[-453.95193481 130.89866638]
[-444.21896362 119.48510742]
[-434.48602295 108.07154846]
[-441.15188599 94.63404846]
[-456.12811279 95.47784424]
[-471.10437012 96.32164001]
[-484.44744873 104.82298279]
[-497.58981323 97.81388092]
[-512.56604004 98.65767670]
[-527.54229736 99.50147247]
[-542.51855469 100.34526062]
[-550.02630615 113.82256317]
[-563.63934326 121.08125305]
[-579.01379395 119.80510712]
[-591.24383545 110.40134430]
[-596.42675781 95.87067413]
[-592.90881348 80.84976959]
[-581.81250000 70.13175201]
[-566.67864990 67.13670349]
[-552.33642578 72.82033539]
[-543.36236572 85.36901855]
[-528.38610840 84.52522278]
[-513.40985107 83.68142700]
[-498.43359375 82.83763123]
[-486.16174316 74.39663696]
[-471.94815063 81.34539032]
[-456.97192383 80.50159454]
[-441.99566650 79.65779877]
[-438.49197388 73.02651215]
[-452.03939819 66.58701324]
[-465.58682251 60.14751434]
[-479.13424683 53.70801926]
[-493.54293823 49.53789520]
[-495.12451172 34.62150955]
[-481.91067505 27.52259445]
[-470.34637451 37.07564926]
[-457.39242554 44.63840866]
[-444.43847656 52.20116806]
[-431.48455811 59.76392365]
[-427.98083496 53.13263321]
[-435.72320557 40.28523636]
[-443.46560669 27.43783951]
[-451.20797729 14.59044266]
[-458.95034790 1.74304605]
[-466.69271851 -11.10435104]
[-474.43508911 -23.95174789]
[-482.17749023 -36.79914474]
[-492.05178833 -42.66359329]
[-493.87875366 -52.69835663]
[-503.84326172 -63.91034317]
[-513.80773926 -75.12232971]
[-523.77227783 -86.33432007]
[-538.72308350 -91.50958252]
[-541.39447021 -106.16267395]
[-551.35894775 -117.37466431]
[-561.32342529 -128.58665466]
[-571.28796387 -139.79864502]
[-581.25244141 -151.01062012]
[-596.29382324 -158.83325195]
[-592.94079590 -175.45231628]
[-576.04296875 -176.83093262]
[-570.04046631 -160.97512817]
[-560.07598877 -149.76313782]
[-550.11145020 -138.55116272]
[-540.14697266 -127.33916473]
[-530.18243408 -116.12718201]
[-515.94433594 -111.75386810]
[-512.56030273 -96.29882050]
[-502.59576416 -85.08683777]
[-492.63125610 -73.87484741]
[-482.66674805 -62.66286087]
[-486.64288330 -77.12627411]
[-486.28500366 -92.12200165]
[-481.62338257 -106.37925720]
[-473.05310059 -118.68982697]
[-461.30041504 -128.01048279]
[-447.36129761 -133.55133057]
[-432.41699219 -134.84284973]
[-417.73394775 -131.77558899]
[-404.55645752 -124.60945892]
[-394.00119019 -113.95175934]
[-386.96267700 -100.70565796]
[-384.03735352 -85.99367523]
[-385.47314453 -71.06254578]
[-391.14837646 -57.17760086]
[-400.58209229 -45.51548767]
[-412.97488403 -37.06449890]
[-427.27648926 -32.54079819]
[-442.27496338 -32.32774353]
[-456.69931030 -36.44338608]
[-469.33007812 -44.54151917]
[-461.58770752 -31.69412422]
[-453.84533691 -18.84672737]
[-446.10293579 -5.99933052]
[-438.36056519 6.84806633]
[-430.61819458 19.69546318]
[-422.87582397 32.54285812]
[-415.13345337 45.39025497]
[-402.40640259 53.32891846]
[-387.46310425 54.63200760]
[-372.51980591 55.93509674]
[-357.57653809 57.23818207]
[-342.63323975 58.54127121]
[-338.42605591 47.07304001]
[-331.60040283 36.92905045]
[-322.54544067 28.69700432]
[-311.77960205 22.85532570]
[-299.92102051 19.74538231]
[-287.65191650 19.55152321]
[-275.67953491 22.29017067]
[-264.69515991 27.80856514]
[-255.33439636 35.79328156]
[-248.14025879 45.78801727]
[-243.53170776 57.21967697]
[-241.77928162 69.43123627]
[-226.90182495 71.34472656]
[-212.02436829 73.25822449]
[-197.14692688 75.17172241]
[-182.26947021 77.08522034]
[-167.39202881 78.99871826]
[-152.51457214 80.91221619]
[-137.63711548 82.82571411]
[-127.56834412 71.88232422]
[-112.81179810 68.93134308]
[-98.98550415 75.30998230]
[-91.47954559 88.76237488]
[-76.60209656 90.67587280]
[-61.63526535 91.67287445]
[-46.63546371 91.74961853]
[-31.63565826 91.82637024]
[-16.63585472 91.90311432]
[-1.63605189 91.97986603]
[13.36375141 92.05661774]
[28.36355591 92.13336182]
[43.36335754 92.21011353]
[58.36316299 92.28685760]
[56.76194000 76.64801025]
[61.31902313 59.59305573]
[72.62561035 43.55495834]
[90.33000946 31.14712143]
[113.10014343 24.80818939]
[138.71571350 26.44676971]
[151.83210754 19.16940498]
[164.94851685 11.89204025]
[169.05722046 -3.36882687]
[182.79507446 -11.18208027]
[198.01164246 -6.91225481]
[205.67921448 6.90743732]
[201.24874878 22.07801819]
[187.34877014 29.59905052]
[172.22587585 25.00844002]
[159.10946655 32.28580475]
[145.99307251 39.56317139]
[151.32342529 53.58484268]
[156.65328979 67.60527802]
[171.29171753 64.33162689]
[185.93013000 61.05797958]
[200.56854248 57.78433609]
[215.20697021 54.51068878]
[226.90432739 43.01705551]
[242.63232422 47.66059494]
[246.21131897 63.66443253]
[233.95956421 74.56519318]
[218.48060608 69.14910126]
[203.84219360 72.42275238]
[189.20378113 75.69639587]
[174.56535339 78.97004700]
[159.92694092 82.24369049]
[160.46372986 89.72445679]
[173.95771790 96.27520752]
[161.53729248 104.68598938]
[162.07408142 112.16675568]
[177.02992249 113.31686401]
[191.98576355 114.46696472]
[208.24186707 109.65287018]
[217.36796570 123.94100189]
[206.16456604 136.66580200]
[190.83566284 129.42280579]
[175.87982178 128.27270508]
[160.92398071 127.12259674]
[158.87802124 134.33813477]
[173.30909729 138.43005371]
[187.74011230 142.52221680]
[183.64772034 156.95317078]
[169.21717834 152.86114502]
[154.78610229 148.76922607]
[152.74014282 155.98477173]
[166.07374573 162.85609436]
[179.40733337 169.72743225]
[192.74093628 176.59875488]
[206.07452393 183.47009277]
[219.40812683 190.34141541]
[232.74172974 197.21275330]
[249.08743286 195.88986206]
[258.18200684 209.53613281]
[250.66975403 224.11344910]
[234.27861023 224.62591553]
[225.87039185 210.54635620]
[212.53680420 203.67501831]
[199.20320129 196.80369568]
[185.86959839 189.93235779]
[172.53601074 183.06103516]
[159.20240784 176.18969727]
[145.86880493 169.31837463]
[114.01650238 173.64326477]
[86.17701721 165.36465454]
[66.64447021 148.24777222]
[57.46807480 127.22700500]
[58.28641510 107.28666687]
[43.28660965 107.20991516]
[28.28680611 107.13316345]
[13.28700352 107.05641937]
[-1.71280050 106.97966766]
[-16.71260452 106.90292358]
[-31.71240807 106.82617188]
[-46.71221161 106.74942017]
[-61.71201706 106.67267609]
[-48.84012222 114.37425995]
[-40.53485870 126.86515808]
[-38.41266251 141.71427917]
[-42.88658524 156.03153992]
[-53.08586502 167.03039551]
[-67.02542114 172.57012939]
[-81.99221802 171.57255554]
[-95.07326508 164.23184204]
[-103.72261047 151.97668457]
[-106.25684357 137.19230652]
[-102.18272400 122.75619507]
[-92.29319763 111.47801971]
[-78.51559448 105.55332184]
[-93.39304352 103.63982391]
[-104.05881500 114.75502014]
[-119.04921722 117.42733002]
[-132.57875061 110.83827209]
[-139.55061340 97.70316315]
[-154.42807007 95.78966522]
[-169.30552673 93.87616730]
[-184.18296814 91.96266937]
[-199.06042480 90.04917145]
[-213.93786621 88.13567352]
[-228.81532288 86.22218323]
[-243.69276428 84.30868530]
[-251.54716492 100.42417908]
[-264.44378662 112.84262848]
[-280.80050659 120.06345367]
[-298.61853027 121.22229767]
[-315.72671509 116.19447327]
[-330.04605103 105.60816193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 161]
[2 160]
[3 159]
[4 158]
[5 157]
[8 61]
[9 60]
[10 59]
[11 58]
[12 57]
[13 56]
[17 54]
[18 53]
[19 52]
[20 51]
[22 47]
[23 46]
[24 45]
[25 44]
[26 43]
[29 39]
[30 38]
[62 86]
[63 85]
[64 84]
[66 82]
[67 81]
[68 80]
[69 79]
[98 156]
[99 155]
[100 154]
[101 153]
[102 152]
[103 151]
[104 150]
[105 149]
[107 129]
[108 128]
[109 127]
[110 126]
[112 124]
[113 123]
[114 122]
[115 121]
[116 120]
[173 300]
[174 299]
[175 298]
[176 297]
[177 296]
[178 295]
[179 294]
[180 293]
[184 289]
[185 288]
[186 275]
[187 274]
[188 273]
[189 272]
[190 271]
[191 270]
[192 269]
[193 268]
[194 267]
[200 211]
[201 210]
[202 209]
[213 226]
[214 225]
[215 224]
[216 223]
[217 222]
[230 238]
[231 237]
[232 236]
[245 262]
[246 261]
[247 260]
[248 259]
[249 258]
[250 257]
[251 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
