%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CNKSR1)
} def

/sequence { (\
GAAAUUCCGGCGACAGCAGGGCAAAACAGGAGCUGAUUCGAGCUGGCAGAGCUGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.049147048 ubox
1 39 0.005157080 ubox
2 6 0.043321773 ubox
2 38 0.005108301 ubox
3 37 0.004469113 ubox
3 38 0.004014159 ubox
4 37 0.004978885 ubox
5 21 0.007074830 ubox
5 24 0.014665671 ubox
5 25 0.005775736 ubox
5 26 0.003410527 ubox
5 32 0.008141092 ubox
5 36 0.004912297 ubox
5 49 0.005793052 ubox
5 50 0.003595269 ubox
5 56 0.029704401 ubox
6 13 0.004883309 ubox
6 20 0.008079015 ubox
6 21 0.098165652 ubox
6 23 0.015536793 ubox
6 24 0.004840524 ubox
6 31 0.011032221 ubox
6 35 0.003423178 ubox
6 36 0.004086356 ubox
6 48 0.008444506 ubox
6 49 0.003517808 ubox
6 55 0.005974360 ubox
6 56 0.694405575 ubox
7 12 0.005268224 ubox
7 19 0.010980382 ubox
7 20 0.133702013 ubox
7 21 0.027409654 ubox
7 30 0.011582990 ubox
7 35 0.003214516 ubox
7 46 0.022185369 ubox
7 54 0.004693310 ubox
7 55 0.911930663 ubox
7 56 0.018691323 ubox
8 19 0.133784691 ubox
8 20 0.027593874 ubox
8 29 0.011566665 ubox
8 35 0.021648710 ubox
8 40 0.006630513 ubox
8 45 0.022738878 ubox
8 54 0.912920638 ubox
8 55 0.014468929 ubox
9 34 0.022033739 ubox
9 39 0.006796788 ubox
9 44 0.022910978 ubox
9 53 0.912291482 ubox
9 58 0.378168765 ubox
10 17 0.138094668 ubox
10 22 0.005826740 ubox
10 33 0.022077091 ubox
10 38 0.005975965 ubox
10 43 0.022935125 ubox
10 52 0.912987656 ubox
10 57 0.380938341 ubox
11 16 0.138541167 ubox
11 21 0.005846604 ubox
11 32 0.022071772 ubox
11 40 0.016643393 ubox
11 42 0.022345104 ubox
11 46 0.003296276 ubox
11 51 0.912764157 ubox
11 56 0.380470841 ubox
12 38 0.023107790 ubox
12 39 0.022543720 ubox
13 37 0.024771373 ubox
13 38 0.021302927 ubox
14 35 0.072500328 ubox
14 45 0.822895054 ubox
14 54 0.374767669 ubox
15 34 0.072798226 ubox
15 38 0.004896803 ubox
15 44 0.823177240 ubox
15 53 0.375215250 ubox
16 22 0.038215070 ubox
16 33 0.072841115 ubox
16 37 0.005339964 ubox
16 43 0.823383469 ubox
16 47 0.320731505 ubox
16 52 0.375371788 ubox
16 57 0.006670404 ubox
17 21 0.037982216 ubox
17 32 0.072776746 ubox
17 35 0.017622437 ubox
17 42 0.822781037 ubox
17 45 0.228087538 ubox
17 46 0.315105650 ubox
17 51 0.374903885 ubox
17 56 0.006682205 ubox
18 34 0.026872890 ubox
18 38 0.073196413 ubox
18 44 0.234848585 ubox
19 33 0.026670062 ubox
19 34 0.013709463 ubox
19 37 0.064975002 ubox
19 38 0.055966986 ubox
19 39 0.459842853 ubox
19 43 0.234224207 ubox
19 44 0.079138406 ubox
20 33 0.013869069 ubox
20 34 0.353067441 ubox
20 37 0.031428435 ubox
20 38 0.389557811 ubox
20 39 0.608098748 ubox
20 43 0.081568112 ubox
20 44 0.293670944 ubox
20 53 0.008345824 ubox
20 58 0.015741991 ubox
21 33 0.410387973 ubox
21 37 0.346235641 ubox
21 38 0.496326197 ubox
21 43 0.298613515 ubox
21 47 0.370450175 ubox
21 52 0.010433004 ubox
21 57 0.024636346 ubox
22 32 0.410909143 ubox
22 35 0.355841996 ubox
22 42 0.299573331 ubox
22 45 0.042572493 ubox
22 46 0.367900035 ubox
22 51 0.010461668 ubox
22 54 0.004171652 ubox
22 56 0.024661865 ubox
23 34 0.336311432 ubox
23 38 0.080474159 ubox
23 44 0.040727482 ubox
23 53 0.003964468 ubox
24 37 0.107272308 ubox
24 38 0.312767820 ubox
25 37 0.376565962 ubox
25 38 0.163643717 ubox
26 37 0.203337054 ubox
27 35 0.672623461 ubox
27 45 0.151862356 ubox
27 54 0.010355486 ubox
28 34 0.672810347 ubox
28 38 0.009806169 ubox
28 44 0.123505087 ubox
28 53 0.010216549 ubox
29 33 0.658336909 ubox
29 37 0.013054348 ubox
29 38 0.006394414 ubox
29 39 0.224460478 ubox
29 43 0.087012704 ubox
29 44 0.005834630 ubox
29 52 0.009807492 ubox
29 53 0.004948085 ubox
29 58 0.013608499 ubox
30 37 0.006769360 ubox
30 38 0.224543189 ubox
30 39 0.106543775 ubox
30 43 0.004633779 ubox
30 52 0.005667415 ubox
30 57 0.013662821 ubox
31 37 0.222404798 ubox
31 38 0.104584346 ubox
31 44 0.271396101 ubox
31 53 0.006864365 ubox
32 37 0.074190059 ubox
32 43 0.313406072 ubox
32 47 0.008680434 ubox
32 52 0.007045633 ubox
32 57 0.021606629 ubox
33 42 0.316947086 ubox
33 46 0.008691936 ubox
33 49 0.007190848 ubox
33 51 0.007051119 ubox
33 56 0.021512675 ubox
34 40 0.018620558 ubox
34 41 0.314805077 ubox
34 45 0.008606647 ubox
34 48 0.007235182 ubox
34 50 0.006982695 ubox
34 55 0.010049345 ubox
35 39 0.033161770 ubox
35 44 0.007791380 ubox
35 47 0.007256261 ubox
37 56 0.010924642 ubox
38 46 0.007741921 ubox
38 50 0.009095829 ubox
38 55 0.017402511 ubox
38 56 0.080051537 ubox
39 45 0.010050568 ubox
39 49 0.009583179 ubox
39 54 0.021331645 ubox
39 55 0.127001724 ubox
40 44 0.006233884 ubox
40 53 0.010504373 ubox
41 53 0.130530599 ubox
42 52 0.131566429 ubox
42 57 0.010250443 ubox
43 49 0.004330079 ubox
43 51 0.131582016 ubox
43 55 0.013025924 ubox
43 56 0.009055844 ubox
44 48 0.003975148 ubox
44 50 0.131015933 ubox
44 54 0.014255567 ubox
44 55 0.007323821 ubox
45 53 0.021637632 ubox
45 58 0.080559456 ubox
46 52 0.023010619 ubox
46 57 0.081602323 ubox
47 51 0.022863922 ubox
47 54 0.006667312 ubox
47 56 0.081589451 ubox
48 53 0.006521304 ubox
51 57 0.009959693 ubox
52 56 0.009911278 ubox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
8 54 0.9500000 lbox
9 53 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
14 45 0.9500000 lbox
15 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
29 33 0.9500000 lbox
showpage
end
%%EOF
