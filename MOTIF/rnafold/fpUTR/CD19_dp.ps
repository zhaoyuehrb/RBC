%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CD19)
} def

/sequence { (\
AGGCCCCUGCCUGCCCCAGCAUCCCCUGCGCGAAGCUGGGUGCCCCGGAGAGUCUGACCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008548116 ubox
1 12 0.832914466 ubox
1 55 0.427760067 ubox
2 7 0.009021239 ubox
2 11 0.882060178 ubox
2 12 0.003763582 ubox
2 15 0.022393916 ubox
2 44 0.087360540 ubox
2 45 0.011278143 ubox
2 54 0.452931823 ubox
2 55 0.021330774 ubox
2 59 0.041283723 ubox
2 62 0.007201130 ubox
3 10 0.882276085 ubox
3 11 0.003273658 ubox
3 14 0.022603372 ubox
3 43 0.087653787 ubox
3 44 0.010539725 ubox
3 53 0.453213371 ubox
3 54 0.022992397 ubox
3 58 0.041139556 ubox
3 61 0.007183301 ubox
4 9 0.878322865 ubox
4 13 0.022605796 ubox
4 42 0.087733191 ubox
4 48 0.004784646 ubox
4 52 0.452617229 ubox
5 40 0.086824784 ubox
5 47 0.004870150 ubox
5 48 0.025934825 ubox
6 39 0.086832461 ubox
6 40 0.006925415 ubox
6 47 0.025776654 ubox
6 48 0.100324286 ubox
7 38 0.086592532 ubox
7 39 0.006906404 ubox
7 47 0.099854271 ubox
7 48 0.158073490 ubox
7 50 0.382164640 ubox
7 52 0.040175021 ubox
8 38 0.006495964 ubox
8 47 0.158813336 ubox
8 49 0.381881204 ubox
8 51 0.043276206 ubox
9 36 0.086483607 ubox
9 43 0.023890048 ubox
9 46 0.166179201 ubox
9 53 0.011452827 ubox
10 35 0.086101971 ubox
10 42 0.023828580 ubox
10 48 0.410759890 ubox
10 52 0.011657039 ubox
11 35 0.009725247 ubox
11 47 0.410932134 ubox
11 48 0.023101865 ubox
11 50 0.012505098 ubox
11 52 0.004053427 ubox
12 21 0.003485722 ubox
12 32 0.077530398 ubox
12 34 0.012252148 ubox
12 42 0.013533114 ubox
12 47 0.023197987 ubox
12 49 0.012664011 ubox
12 51 0.005256329 ubox
12 60 0.003797572 ubox
13 20 0.005084605 ubox
13 31 0.085188700 ubox
13 41 0.045988702 ubox
13 43 0.983654818 ubox
13 46 0.009561790 ubox
13 53 0.010968897 ubox
13 59 0.005980517 ubox
14 19 0.005073224 ubox
14 30 0.085126466 ubox
14 40 0.041058291 ubox
14 42 0.986245573 ubox
14 48 0.034377669 ubox
14 52 0.011506669 ubox
15 39 0.033615415 ubox
15 40 0.991964270 ubox
15 47 0.034413233 ubox
15 48 0.024522322 ubox
16 38 0.023849166 ubox
16 39 0.992803458 ubox
16 40 0.004175621 ubox
16 47 0.024514041 ubox
16 48 0.033712871 ubox
17 28 0.073667932 ubox
17 38 0.993164663 ubox
17 47 0.033800033 ubox
17 56 0.031651775 ubox
18 27 0.073879946 ubox
18 37 0.993220835 ubox
18 55 0.031709620 ubox
19 26 0.073178200 ubox
19 29 0.045664648 ubox
19 36 0.993446212 ubox
19 43 0.066049995 ubox
19 53 0.003595341 ubox
19 54 0.031537141 ubox
20 28 0.045709594 ubox
20 35 0.992798775 ubox
20 42 0.066147363 ubox
20 52 0.019137958 ubox
21 27 0.042839474 ubox
21 41 0.065174438 ubox
21 53 0.003262736 ubox
22 33 0.966557359 ubox
22 40 0.050230402 ubox
22 49 0.016929768 ubox
22 51 0.026773488 ubox
23 32 0.979612273 ubox
23 39 0.049863899 ubox
23 40 0.036132824 ubox
23 48 0.017014014 ubox
23 50 0.026876923 ubox
24 38 0.049586395 ubox
24 39 0.036175112 ubox
24 40 0.023737197 ubox
24 47 0.016969477 ubox
24 48 0.015013211 ubox
25 38 0.036177828 ubox
25 39 0.024617219 ubox
25 47 0.014966760 ubox
25 48 0.022394562 ubox
26 35 0.012852704 ubox
26 38 0.024936350 ubox
26 47 0.022415683 ubox
27 34 0.016428359 ubox
28 36 0.065290156 ubox
28 43 0.031744250 ubox
29 35 0.065335434 ubox
29 42 0.031775042 ubox
30 36 0.003756875 ubox
30 41 0.031762393 ubox
31 35 0.003740080 ubox
31 40 0.031772861 ubox
38 46 0.003637789 ubox
39 45 0.003653278 ubox
39 62 0.012380543 ubox
40 44 0.003607466 ubox
40 61 0.029998440 ubox
41 60 0.036203226 ubox
42 53 0.005088167 ubox
42 59 0.038083705 ubox
43 52 0.005454588 ubox
46 56 0.834003028 ubox
47 54 0.044181170 ubox
47 55 0.839246209 ubox
47 59 0.153613563 ubox
47 62 0.050756263 ubox
48 53 0.032713155 ubox
48 54 0.840081044 ubox
48 58 0.153235363 ubox
48 61 0.050964965 ubox
49 53 0.730896972 ubox
49 55 0.058785269 ubox
50 54 0.061380168 ubox
52 58 0.039133431 ubox
52 61 0.043993498 ubox
53 57 0.035522209 ubox
53 60 0.041728164 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
13 43 0.9500000 lbox
14 42 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
showpage
end
%%EOF
