%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT31)
} def

/sequence { (\
GAGAAUUUAGACUCUGUCUUCAGCCAGGCACUCCCUCCCUCCCUCCCAGCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007098224 ubox
1 8 0.020336796 ubox
1 14 0.637577063 ubox
1 18 0.015218760 ubox
1 20 0.037167463 ubox
1 21 0.077941880 ubox
1 33 0.144825803 ubox
1 37 0.164440367 ubox
1 41 0.421005112 ubox
1 45 0.431096247 ubox
2 6 0.006973518 ubox
2 7 0.019929462 ubox
2 8 0.011401648 ubox
2 13 0.638932411 ubox
2 15 0.137953779 ubox
2 17 0.013197835 ubox
2 19 0.048403176 ubox
2 20 0.074163536 ubox
2 32 0.145280500 ubox
2 36 0.164900394 ubox
2 40 0.422395032 ubox
2 44 0.432432355 ubox
2 53 0.012149394 ubox
3 7 0.008512157 ubox
3 12 0.638435927 ubox
3 14 0.151698930 ubox
3 18 0.054031292 ubox
3 19 0.039053558 ubox
3 20 0.005330315 ubox
3 21 0.118435229 ubox
3 31 0.144997065 ubox
3 33 0.015713484 ubox
3 35 0.164119364 ubox
3 37 0.044778016 ubox
3 39 0.420623176 ubox
3 41 0.080349984 ubox
3 43 0.429745965 ubox
3 45 0.029336959 ubox
3 52 0.013175091 ubox
4 13 0.150617966 ubox
4 17 0.051408174 ubox
4 19 0.004936123 ubox
4 20 0.118301950 ubox
4 32 0.015802586 ubox
4 36 0.045586538 ubox
4 40 0.082028644 ubox
4 44 0.028434308 ubox
5 17 0.026278871 ubox
5 19 0.069495280 ubox
6 16 0.027972568 ubox
6 23 0.028408891 ubox
6 27 0.008042363 ubox
6 28 0.018918251 ubox
7 22 0.038323824 ubox
7 23 0.019245161 ubox
7 26 0.006825485 ubox
7 27 0.020576688 ubox
7 28 0.006756716 ubox
7 48 0.003480894 ubox
8 16 0.062783737 ubox
8 22 0.022455220 ubox
8 26 0.020084663 ubox
8 27 0.006974403 ubox
8 48 0.003244122 ubox
9 15 0.068808673 ubox
9 19 0.268878949 ubox
9 20 0.012586934 ubox
9 32 0.174563727 ubox
9 36 0.295787186 ubox
9 40 0.020201717 ubox
9 44 0.006520159 ubox
9 53 0.021316045 ubox
10 14 0.069109480 ubox
10 18 0.292762264 ubox
10 19 0.003618007 ubox
10 21 0.027302292 ubox
10 31 0.180908368 ubox
10 33 0.362796932 ubox
10 35 0.305689680 ubox
10 37 0.134700953 ubox
10 39 0.020560913 ubox
10 41 0.011491228 ubox
10 43 0.006939001 ubox
10 45 0.009355768 ubox
10 52 0.023941878 ubox
11 17 0.292489384 ubox
11 20 0.026863004 ubox
11 32 0.361118049 ubox
11 36 0.131986617 ubox
11 40 0.011088614 ubox
11 44 0.008962843 ubox
12 16 0.289611270 ubox
12 23 0.011829754 ubox
12 27 0.081174862 ubox
12 28 0.054395710 ubox
12 49 0.010649298 ubox
13 22 0.011483699 ubox
13 26 0.075414882 ubox
13 27 0.029207119 ubox
13 28 0.174273691 ubox
13 48 0.010191672 ubox
14 23 0.147543423 ubox
14 27 0.196918692 ubox
14 28 0.007623138 ubox
14 49 0.060334363 ubox
15 22 0.156076526 ubox
15 26 0.197683788 ubox
15 27 0.006578366 ubox
15 30 0.809628842 ubox
15 48 0.067663926 ubox
15 51 0.130587152 ubox
16 21 0.157792424 ubox
16 24 0.039254287 ubox
16 25 0.195490232 ubox
16 29 0.879602182 ubox
16 31 0.037508829 ubox
16 47 0.068709851 ubox
16 50 0.149638195 ubox
16 52 0.063547495 ubox
17 23 0.048691707 ubox
17 28 0.878798381 ubox
17 30 0.037215167 ubox
17 49 0.135340797 ubox
17 51 0.063361331 ubox
18 27 0.878925645 ubox
18 28 0.050017719 ubox
18 49 0.084367830 ubox
19 26 0.829600477 ubox
19 27 0.049823860 ubox
19 28 0.006172226 ubox
19 48 0.081347752 ubox
19 49 0.014978376 ubox
20 26 0.053458407 ubox
20 27 0.006608558 ubox
20 28 0.016846471 ubox
20 48 0.017346269 ubox
21 27 0.022601735 ubox
22 32 0.013376674 ubox
22 36 0.016190013 ubox
22 40 0.175705846 ubox
22 44 0.160056892 ubox
22 53 0.006371698 ubox
23 29 0.084756839 ubox
23 31 0.014163185 ubox
23 35 0.017263756 ubox
23 39 0.187321319 ubox
23 43 0.167115857 ubox
23 50 0.155152640 ubox
23 52 0.006416231 ubox
24 28 0.084258635 ubox
24 49 0.155207818 ubox
26 32 0.014507474 ubox
26 36 0.261286293 ubox
26 40 0.195771222 ubox
26 44 0.079182289 ubox
26 53 0.039418960 ubox
27 31 0.014793615 ubox
27 33 0.014184695 ubox
27 34 0.076142529 ubox
27 35 0.271990147 ubox
27 36 0.018816146 ubox
27 37 0.011606453 ubox
27 38 0.078791709 ubox
27 39 0.200727797 ubox
27 40 0.007863600 ubox
27 41 0.007020371 ubox
27 42 0.025479020 ubox
27 43 0.083348031 ubox
27 44 0.007093304 ubox
27 45 0.009751715 ubox
27 46 0.124658386 ubox
27 47 0.055520487 ubox
27 52 0.043741659 ubox
27 53 0.004591920 ubox
28 32 0.009387107 ubox
28 33 0.076053922 ubox
28 34 0.270416299 ubox
28 35 0.020878778 ubox
28 36 0.009342171 ubox
28 37 0.080478450 ubox
28 38 0.198862103 ubox
28 39 0.008567980 ubox
28 40 0.005581085 ubox
28 41 0.025581314 ubox
28 42 0.082699827 ubox
28 43 0.007750461 ubox
28 44 0.007845007 ubox
28 45 0.123480838 ubox
28 46 0.055143302 ubox
28 50 0.062503826 ubox
28 52 0.005189984 ubox
29 49 0.062515395 ubox
31 49 0.037121587 ubox
32 48 0.035603949 ubox
35 49 0.035530573 ubox
36 48 0.034240842 ubox
39 49 0.060490988 ubox
40 48 0.059067774 ubox
43 49 0.076706447 ubox
44 48 0.069941053 ubox
1 14 0.9500000 lbox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
showpage
end
%%EOF
