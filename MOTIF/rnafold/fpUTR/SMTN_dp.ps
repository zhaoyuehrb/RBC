%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SMTN)
} def

/sequence { (\
AGCGUCUGGCCGAUUUGGGGACGCGGGCAGUCGCUUCCGGCCCCGGCUCCCGCACAUUCUUGAGGAUUGGGCCGGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 35 0.852376461 ubox
1 36 0.034396562 ubox
2 10 0.012039220 ubox
2 24 0.078047571 ubox
2 34 0.995303690 ubox
2 35 0.007405596 ubox
3 9 0.012124394 ubox
3 23 0.079018381 ubox
3 33 0.995959763 ubox
4 14 0.003583981 ubox
4 22 0.079151818 ubox
4 31 0.004368812 ubox
4 32 0.994768735 ubox
5 13 0.003791833 ubox
5 21 0.079135958 ubox
5 76 0.028405270 ubox
6 12 0.003823641 ubox
6 20 0.079081224 ubox
6 30 0.994749591 ubox
6 75 0.036100151 ubox
7 19 0.069091915 ubox
7 29 0.995699127 ubox
7 74 0.036142609 ubox
8 28 0.995373095 ubox
8 42 0.007353978 ubox
8 73 0.036223287 ubox
9 28 0.030273080 ubox
9 41 0.011142219 ubox
9 72 0.036219650 ubox
10 18 0.071722376 ubox
10 19 0.027275380 ubox
10 26 0.995033298 ubox
10 27 0.041070131 ubox
10 40 0.011541980 ubox
10 70 0.015660405 ubox
10 71 0.032664148 ubox
11 17 0.071956596 ubox
11 18 0.028273149 ubox
11 23 0.005917393 ubox
11 25 0.995133090 ubox
11 26 0.040383215 ubox
11 39 0.011562933 ubox
11 69 0.022138735 ubox
11 70 0.028654850 ubox
12 16 0.044413945 ubox
12 22 0.013210939 ubox
12 24 0.989700896 ubox
12 38 0.010442673 ubox
12 68 0.027067075 ubox
13 67 0.028200775 ubox
14 20 0.066832214 ubox
14 21 0.153261289 ubox
14 64 0.017685081 ubox
14 65 0.005578238 ubox
14 66 0.027317311 ubox
15 19 0.057816571 ubox
15 20 0.146909599 ubox
15 21 0.486310415 ubox
15 46 0.003174750 ubox
15 63 0.019665473 ubox
15 64 0.008461931 ubox
15 65 0.025320126 ubox
16 20 0.445338332 ubox
16 23 0.561611772 ubox
16 25 0.009158609 ubox
16 39 0.003663963 ubox
16 45 0.003769416 ubox
16 54 0.011079040 ubox
16 62 0.021037964 ubox
16 63 0.010459711 ubox
16 64 0.019808595 ubox
17 22 0.584881989 ubox
17 24 0.020763881 ubox
17 35 0.010189095 ubox
17 38 0.004046135 ubox
17 44 0.004167306 ubox
17 53 0.012317552 ubox
17 60 0.003486067 ubox
17 61 0.026762726 ubox
18 34 0.010314373 ubox
18 37 0.003968453 ubox
18 38 0.009481749 ubox
18 43 0.004189892 ubox
18 51 0.015129450 ubox
18 59 0.003538061 ubox
18 60 0.028944227 ubox
18 61 0.013002883 ubox
19 36 0.003796648 ubox
19 37 0.009655288 ubox
19 38 0.012401467 ubox
19 42 0.004189835 ubox
19 50 0.015155204 ubox
19 58 0.003427025 ubox
19 59 0.029241479 ubox
19 60 0.013605321 ubox
20 32 0.010362750 ubox
20 36 0.009671874 ubox
20 37 0.012526563 ubox
20 41 0.004114644 ubox
20 49 0.015169589 ubox
20 58 0.029158529 ubox
20 59 0.013681329 ubox
21 31 0.010363261 ubox
21 35 0.009659361 ubox
21 36 0.012385908 ubox
21 48 0.015132095 ubox
21 57 0.028852095 ubox
21 58 0.013182309 ubox
22 30 0.010361456 ubox
22 39 0.004141378 ubox
23 34 0.016763672 ubox
23 38 0.004223617 ubox
23 47 0.005783113 ubox
23 53 0.032565334 ubox
24 33 0.016804190 ubox
24 39 0.011844813 ubox
24 45 0.014482175 ubox
24 46 0.004738858 ubox
24 52 0.032588021 ubox
25 32 0.017228517 ubox
25 35 0.003750641 ubox
25 36 0.047514752 ubox
25 37 0.014666358 ubox
25 38 0.037969944 ubox
25 44 0.014873835 ubox
25 51 0.032587876 ubox
26 31 0.015526122 ubox
26 34 0.003627771 ubox
26 35 0.062791665 ubox
26 36 0.010504767 ubox
26 37 0.037317992 ubox
26 38 0.013974601 ubox
26 43 0.014867610 ubox
26 44 0.003274127 ubox
26 50 0.032587990 ubox
27 34 0.070460984 ubox
27 36 0.025138616 ubox
27 37 0.013915247 ubox
27 42 0.014781992 ubox
27 43 0.003270087 ubox
27 49 0.032581031 ubox
28 33 0.070561966 ubox
29 35 0.018864858 ubox
29 36 0.004457260 ubox
29 48 0.032456115 ubox
30 34 0.018695633 ubox
30 35 0.003591788 ubox
30 41 0.020181267 ubox
30 47 0.032579927 ubox
31 40 0.020730250 ubox
31 46 0.032534531 ubox
32 39 0.021195562 ubox
32 45 0.032462506 ubox
33 38 0.020195752 ubox
33 41 0.021582706 ubox
33 44 0.024166772 ubox
34 40 0.023799687 ubox
34 77 0.004969261 ubox
35 39 0.021999171 ubox
35 76 0.011552943 ubox
35 77 0.172160508 ubox
36 76 0.510668747 ubox
36 77 0.020018776 ubox
37 75 0.603684534 ubox
37 76 0.026525827 ubox
37 77 0.004158893 ubox
38 74 0.604382087 ubox
38 75 0.018828525 ubox
39 73 0.604686478 ubox
40 72 0.604689534 ubox
41 71 0.556932607 ubox
41 76 0.011281186 ubox
41 77 0.780186731 ubox
42 70 0.504671595 ubox
42 71 0.235531528 ubox
42 75 0.009242823 ubox
42 76 0.795413116 ubox
42 77 0.004651662 ubox
43 69 0.445582927 ubox
43 70 0.333089052 ubox
43 74 0.006536930 ubox
43 75 0.795552746 ubox
43 76 0.003894604 ubox
44 52 0.051918085 ubox
44 64 0.003392327 ubox
44 69 0.407926511 ubox
44 74 0.795572788 ubox
45 51 0.053208618 ubox
45 68 0.467009556 ubox
45 73 0.795604478 ubox
46 50 0.052352861 ubox
46 53 0.032568808 ubox
46 67 0.464171557 ubox
46 72 0.795609460 ubox
47 52 0.032554136 ubox
47 64 0.162036000 ubox
47 65 0.039555124 ubox
47 70 0.013235500 ubox
47 71 0.794633255 ubox
48 63 0.162479226 ubox
48 64 0.029153979 ubox
48 65 0.030158290 ubox
48 66 0.552622619 ubox
48 69 0.017884215 ubox
48 70 0.788361947 ubox
48 71 0.007582100 ubox
49 62 0.161486036 ubox
49 64 0.037875318 ubox
49 65 0.554018638 ubox
49 69 0.782695501 ubox
49 70 0.067162804 ubox
49 71 0.035638382 ubox
50 64 0.548927162 ubox
50 65 0.797436610 ubox
50 69 0.062399026 ubox
50 70 0.052561421 ubox
50 71 0.006081357 ubox
51 62 0.472870754 ubox
51 64 0.800210591 ubox
51 69 0.054711056 ubox
51 70 0.008971414 ubox
52 61 0.438193334 ubox
52 68 0.053732742 ubox
53 62 0.778527092 ubox
53 69 0.026937481 ubox
54 61 0.703304819 ubox
54 68 0.032521076 ubox
55 62 0.239507669 ubox
55 69 0.035937740 ubox
56 61 0.233380720 ubox
56 67 0.083656845 ubox
56 68 0.042722282 ubox
57 63 0.018509066 ubox
57 64 0.010371053 ubox
57 66 0.087147573 ubox
58 62 0.016835827 ubox
58 63 0.009397192 ubox
58 65 0.087227962 ubox
58 66 0.058366228 ubox
59 64 0.086042614 ubox
59 65 0.060126874 ubox
60 64 0.054177222 ubox
1 35 0.9500000 lbox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
41 77 0.9500000 lbox
42 76 0.9500000 lbox
43 75 0.9500000 lbox
44 74 0.9500000 lbox
45 73 0.9500000 lbox
46 72 0.9500000 lbox
47 71 0.9500000 lbox
48 70 0.9500000 lbox
49 69 0.9500000 lbox
50 65 0.9500000 lbox
51 64 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
showpage
end
%%EOF
