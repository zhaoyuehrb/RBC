%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC29A3)
} def

/sequence { (\
AAGCCCAGUGGUCCUGGCCGUGCGCCGGAGGCAGCGGCGGCGUGGCGCAGCGGCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 15 0.018070197 ubox
3 9 0.016274962 ubox
3 12 0.116693824 ubox
3 14 0.016947934 ubox
3 18 0.007304519 ubox
3 38 0.011649312 ubox
3 41 0.012748535 ubox
3 51 0.003437737 ubox
3 54 0.118636138 ubox
4 8 0.017576740 ubox
4 11 0.121702586 ubox
4 17 0.006691988 ubox
4 37 0.011595166 ubox
4 40 0.012852989 ubox
4 50 0.003434107 ubox
4 53 0.116689849 ubox
5 10 0.121677239 ubox
5 11 0.021915860 ubox
5 16 0.006746263 ubox
5 17 0.032066324 ubox
5 36 0.011431191 ubox
5 37 0.003217978 ubox
5 39 0.012758256 ubox
5 52 0.114154700 ubox
5 53 0.028116808 ubox
6 10 0.023233886 ubox
6 16 0.102686562 ubox
6 36 0.003926931 ubox
6 52 0.035844300 ubox
7 15 0.103039081 ubox
8 14 0.102626432 ubox
8 35 0.015981860 ubox
8 48 0.031443096 ubox
8 51 0.048175900 ubox
8 54 0.026347824 ubox
8 57 0.952648700 ubox
9 34 0.015258221 ubox
9 47 0.031245091 ubox
9 49 0.098877914 ubox
9 50 0.041023766 ubox
9 53 0.026304056 ubox
9 55 0.013030575 ubox
9 56 0.961321839 ubox
10 46 0.028489032 ubox
10 48 0.101186671 ubox
10 51 0.007729452 ubox
10 54 0.013597433 ubox
11 32 0.017267010 ubox
11 46 0.047494314 ubox
11 48 0.039436868 ubox
11 51 0.027434918 ubox
11 54 0.977183732 ubox
11 57 0.037943565 ubox
12 31 0.017370863 ubox
12 45 0.027501630 ubox
12 47 0.039408893 ubox
12 50 0.017557428 ubox
12 53 0.976956402 ubox
12 56 0.038938500 ubox
13 30 0.017403764 ubox
13 44 0.026763349 ubox
13 45 0.111898717 ubox
13 52 0.976703267 ubox
13 53 0.010031120 ubox
13 55 0.039887746 ubox
14 28 0.017516110 ubox
14 44 0.111986294 ubox
14 45 0.012413580 ubox
14 50 0.977829165 ubox
14 52 0.009037626 ubox
14 53 0.003876226 ubox
15 27 0.017514743 ubox
15 42 0.011742395 ubox
15 44 0.012321934 ubox
15 49 0.977956799 ubox
15 52 0.003795768 ubox
15 55 0.010516855 ubox
16 26 0.017687569 ubox
16 41 0.009050936 ubox
16 43 0.009855978 ubox
16 48 0.976560638 ubox
16 51 0.003730230 ubox
16 54 0.009537935 ubox
17 25 0.017688163 ubox
17 38 0.010675166 ubox
17 41 0.115824634 ubox
17 46 0.977738428 ubox
17 54 0.165492839 ubox
18 24 0.017666328 ubox
18 37 0.010934110 ubox
18 40 0.116179690 ubox
18 45 0.978481543 ubox
18 47 0.003406672 ubox
18 53 0.168818586 ubox
19 36 0.010940475 ubox
19 39 0.116170997 ubox
19 42 0.015976083 ubox
19 44 0.978226853 ubox
19 52 0.168917984 ubox
20 35 0.010928692 ubox
20 38 0.115917215 ubox
20 41 0.036505721 ubox
20 43 0.921997806 ubox
20 46 0.003365555 ubox
20 51 0.168235595 ubox
20 57 0.003759307 ubox
21 34 0.010530793 ubox
21 36 0.080308504 ubox
21 37 0.082879556 ubox
21 40 0.035165233 ubox
21 42 0.916631203 ubox
21 44 0.006222672 ubox
21 49 0.136523004 ubox
21 50 0.098532172 ubox
21 56 0.003785880 ubox
22 32 0.003788946 ubox
22 35 0.113932023 ubox
22 41 0.964083538 ubox
22 43 0.088570587 ubox
22 48 0.168681816 ubox
23 31 0.003792740 ubox
23 34 0.114136130 ubox
23 36 0.018018159 ubox
23 39 0.693521443 ubox
23 40 0.682706268 ubox
23 42 0.099116898 ubox
23 47 0.168938692 ubox
23 55 0.006000789 ubox
24 32 0.114727563 ubox
24 35 0.018294072 ubox
24 38 0.971885805 ubox
24 41 0.099357347 ubox
24 46 0.168939601 ubox
24 54 0.006092197 ubox
25 31 0.115096669 ubox
25 34 0.018276180 ubox
25 37 0.973449108 ubox
25 40 0.099358519 ubox
25 45 0.168941492 ubox
25 53 0.006092495 ubox
26 30 0.114262202 ubox
26 36 0.973432361 ubox
26 39 0.099354769 ubox
26 44 0.168888435 ubox
26 52 0.006092307 ubox
27 35 0.971795463 ubox
27 38 0.098268151 ubox
27 41 0.006860172 ubox
27 43 0.160699012 ubox
27 51 0.006029921 ubox
31 38 0.160162274 ubox
31 41 0.036233372 ubox
31 43 0.031031279 ubox
31 46 0.005005798 ubox
31 48 0.003254058 ubox
32 37 0.160032009 ubox
32 40 0.036269785 ubox
32 42 0.033555505 ubox
32 45 0.004969533 ubox
32 47 0.003247491 ubox
34 41 0.036478416 ubox
34 43 0.016883551 ubox
34 46 0.003256505 ubox
34 51 0.003477384 ubox
34 54 0.003976773 ubox
35 40 0.036502265 ubox
35 42 0.018297449 ubox
35 45 0.003257493 ubox
35 50 0.003470013 ubox
35 53 0.003980027 ubox
36 41 0.018228104 ubox
37 43 0.003246671 ubox
37 48 0.003637482 ubox
37 51 0.004564564 ubox
38 42 0.003236050 ubox
38 47 0.003651204 ubox
38 50 0.004550972 ubox
39 46 0.003638163 ubox
39 54 0.004427924 ubox
40 48 0.005201635 ubox
41 47 0.005227928 ubox
41 52 0.004482910 ubox
41 55 0.011464523 ubox
42 46 0.004899407 ubox
42 51 0.004631871 ubox
42 54 0.012945088 ubox
42 57 0.012443167 ubox
43 50 0.004565103 ubox
43 53 0.012923865 ubox
43 56 0.012535268 ubox
45 51 0.012997816 ubox
45 54 0.012707810 ubox
46 50 0.012904749 ubox
46 53 0.012693443 ubox
46 55 0.008327665 ubox
47 54 0.009219319 ubox
48 53 0.009205612 ubox
8 57 0.9500000 lbox
9 56 0.9500000 lbox
11 54 0.9500000 lbox
12 53 0.9500000 lbox
13 52 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
showpage
end
%%EOF
