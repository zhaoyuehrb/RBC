%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGUCUUGGAGAGGGACGCGUAGGCUACGCCACCGCGGACGGGUCGGAUCCGGUCCCUGGACGCGGAACAGAGAUCCCCUGAUUCAGCCACCCCCAGACUGAGCCCCGUAGAGUGCGUUCUUACCUUCCUGCCCCGACGAAGGUCCCAGAGACGCUGCGGACAACACCAGC\
) } def
/len { sequence length } bind def

/coor [
[291.78277588 474.64971924]
[296.01828003 469.05200195]
[288.24478149 456.22341919]
[280.47125244 443.39483643]
[272.69775391 430.56625366]
[264.92425537 417.73767090]
[253.23490906 414.53958130]
[246.65982056 403.88479614]
[249.19978333 391.21536255]
[241.66049194 378.24774170]
[227.24093628 374.69644165]
[219.41030884 361.65283203]
[223.23301697 346.55233765]
[215.69374084 333.58471680]
[208.15444946 320.61709595]
[200.61517334 307.64947510]
[193.07588196 294.68185425]
[182.96069336 292.95285034]
[175.31997681 285.77719116]
[172.85850525 275.36218262]
[176.63012695 265.11209106]
[169.56668091 251.87927246]
[162.50323486 238.64643860]
[155.43980408 225.41360474]
[148.37635803 212.18078613]
[136.87849426 208.35090637]
[130.89334106 197.35392761]
[134.11940002 184.84159851]
[127.29740906 171.48269653]
[120.47541809 158.12377930]
[113.65342712 144.76487732]
[107.78998566 140.22164917]
[106.83134460 131.10087585]
[100.25305176 117.62028503]
[84.30586243 108.01451874]
[85.87447357 89.46396637]
[78.81102753 76.23113251]
[71.74758911 62.99830627]
[64.68414307 49.76547623]
[59.23550415 45.91951752]
[56.92154312 40.67963028]
[57.61439896 35.92140961]
[51.03611374 22.44082642]
[38.03045654 13.43174744]
[39.40243530 -1.39953542]
[32.82415009 -14.88011932]
[26.24586105 -28.36070251]
[19.66757393 -41.84128571]
[13.06793499 -48.20935440]
[13.09472752 -55.62691498]
[6.76231241 -69.22472382]
[-6.07760715 -78.46848297]
[-4.43654108 -93.27240753]
[-10.76895714 -106.87022400]
[-24.47643852 -108.49907684]
[-35.49616623 -116.63134766]
[-41.00608063 -129.05119324]
[-39.66127396 -142.46276855]
[-31.92057037 -153.36465454]
[-38.00502777 -167.07521057]
[-44.08948135 -180.78576660]
[-54.74850464 -182.02760315]
[-63.85112000 -187.55647278]
[-69.77613068 -196.30874634]
[-71.50134277 -206.65414429]
[-68.77938080 -216.69917297]
[-62.17063522 -224.63375854]
[-67.49950409 -238.65528870]
[-72.82836914 -252.67680359]
[-78.28432465 -266.64938354]
[-83.86692810 -280.57180786]
[-89.44952393 -294.49426270]
[-104.36439514 -299.19329834]
[-112.72573090 -312.40774536]
[-110.58557892 -327.89819336]
[-98.95444489 -338.35049438]
[-83.32419586 -338.82940674]
[-71.07495880 -329.10879517]
[-67.99044800 -313.77844238]
[-75.52707672 -300.07687378]
[-69.94448090 -286.15441895]
[-64.36187744 -272.23196411]
[-58.93453217 -267.17581177]
[-58.80684280 -258.00567627]
[-53.47797775 -243.98414612]
[-48.14910889 -229.96263123]
[-29.85558319 -223.35317993]
[-22.15025711 -205.16317749]
[-30.37892342 -186.87022400]
[-24.29446793 -173.15966797]
[-18.21001244 -159.44911194]
[-2.07014322 -156.54306030]
[9.28032780 -144.47746277]
[11.23489571 -127.86067200]
[2.82885599 -113.20263672]
[9.16127110 -99.60482788]
[21.54825401 -91.33367157]
[20.36012459 -75.55714417]
[26.69254112 -61.95933151]
[33.14815903 -48.41957474]
[39.72644424 -34.93899155]
[46.30473328 -21.45840645]
[52.88301849 -7.97782278]
[65.41815186 0.06703518]
[64.51669312 15.86253929]
[71.09498596 29.34312248]
[77.91697693 42.70203400]
[84.98041534 55.93486023]
[92.04386139 69.16769409]
[99.10729980 82.40052032]
[108.81694794 84.74221039]
[115.69413757 91.98548126]
[117.52958679 101.80341339]
[113.73363495 111.04199982]
[120.31192780 124.52258301]
[127.01233673 137.94288635]
[133.83433533 151.30178833]
[140.65632629 164.66070557]
[147.47830200 178.01960754]
[163.15303040 187.65165710]
[161.60919189 205.11734009]
[168.67262268 218.35017395]
[175.73606873 231.58299255]
[182.79951477 244.81582642]
[189.86296082 258.04864502]
[207.43608093 267.87741089]
[206.04350281 287.14257812]
[213.58279419 300.11019897]
[221.12207031 313.07781982]
[228.66136169 326.04544067]
[236.20063782 339.01306152]
[251.21478271 343.16192627]
[258.67596436 356.42034912]
[254.62811279 370.70846558]
[262.16738892 383.67608643]
[278.34335327 392.44033813]
[277.75283813 409.96417236]
[285.52633667 422.79275513]
[293.29983521 435.62133789]
[301.07336426 448.44992065]
[308.84686279 461.27850342]
[332.70773315 464.38082886]
[346.51321411 483.77969360]
[341.72952271 506.84677124]
[351.48675537 518.23962402]
[361.24401855 529.63238525]
[371.00125122 541.02520752]
[380.86154175 552.32897949]
[390.82406616 563.54272461]
[400.78656006 574.75646973]
[416.65243530 577.13433838]
[424.56051636 591.09289551]
[418.44439697 605.92437744]
[402.99588013 610.25134277]
[390.06570435 600.75445557]
[389.57281494 584.71899414]
[379.61029053 573.50524902]
[369.64779663 562.29150391]
[362.83016968 559.36895752]
[359.60845947 550.78247070]
[349.85119629 539.38964844]
[340.09396362 527.99682617]
[330.33670044 516.60400391]
[323.91860962 518.90545654]
[317.12438965 519.66485596]
[310.32025146 518.83288574]
[303.87484741 516.44604492]
[298.13946533 512.62536621]
[293.42868042 507.57040405]
[290.00326538 501.54843140]
[288.05563354 494.88073730]
[287.69912720 487.92523193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 141]
[3 140]
[4 139]
[5 138]
[6 137]
[9 135]
[10 134]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[21 125]
[22 124]
[23 123]
[24 122]
[25 121]
[28 119]
[29 118]
[30 117]
[31 116]
[33 115]
[34 114]
[36 110]
[37 109]
[38 108]
[39 107]
[42 106]
[43 105]
[45 103]
[46 102]
[47 101]
[48 100]
[50 99]
[51 98]
[53 96]
[54 95]
[59 91]
[60 90]
[61 89]
[67 86]
[68 85]
[69 84]
[70 82]
[71 81]
[72 80]
[144 163]
[145 162]
[146 161]
[147 160]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
