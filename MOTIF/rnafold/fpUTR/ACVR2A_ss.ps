%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGACCGAAAACGCGGCCGAGCCCGGAGCCCGGAGCUGGAGCCAGAGCCUGGACCAGAACUUGGCCGCCGCCUGCACCGCCGCCGCCGCUGCCGCCCGCCGCCCCUUCCCCGCGCCGCAGCCGCCUCGCCGCCACCGCCGCGAGCUCGGCCGCCAGUGGUCCUCGGACUUUAGGUGUCUGGGUUGAAGGAGGUUUGUCUCCGAGGAAGACCCAGGGAACUGGAUAUCUAGCGAGAACUUCCUCCGGAUUCCCC\
GGCGCCUCGGGAAA\
) } def
/len { sequence length } bind def

/coor [
[392.89465332 275.51080322]
[388.07525635 265.23266602]
[387.41946411 253.84840393]
[373.57800293 248.06785583]
[359.73657227 242.28732300]
[345.86175537 236.58740234]
[331.95397949 230.96830750]
[318.04623413 225.34921265]
[304.13845825 219.73011780]
[294.94458008 227.59640503]
[283.21276855 230.83990479]
[271.14175415 228.78932190]
[261.02075195 221.77157593]
[254.79539490 211.06140137]
[253.69381714 198.65011597]
[239.92056274 192.70892334]
[226.14732361 186.76771545]
[212.37408447 180.82652283]
[198.60084534 174.88533020]
[184.82760620 168.94413757]
[171.05436707 163.00292969]
[157.28112793 157.06173706]
[143.50787354 151.12054443]
[129.73463440 145.17935181]
[115.13896179 148.63858032]
[105.49714661 160.12925720]
[95.85533905 171.61991882]
[86.21352386 183.11058044]
[80.66408539 199.13056946]
[63.73392868 198.23278809]
[59.90989304 181.71572876]
[74.72285461 173.46876526]
[84.36466980 161.97810364]
[94.00648499 150.48744202]
[103.64830017 138.99676514]
[99.06529999 133.05992126]
[89.89929962 121.18624115]
[85.31629944 115.24939728]
[71.75878906 121.66764832]
[58.20128632 128.08590698]
[44.64377975 134.50416565]
[39.58948898 146.34552002]
[28.19396782 151.42066956]
[16.76915169 147.51408386]
[3.13788438 153.77416992]
[-10.49338245 160.03424072]
[-24.12464905 166.29431152]
[-35.99510956 178.39921570]
[-50.91301346 170.34362793]
[-47.30192566 153.77871704]
[-30.38472557 152.66305542]
[-16.75345993 146.40296936]
[-3.12219262 140.14289856]
[10.50907421 133.88282776]
[19.89424324 119.03645325]
[38.22552109 120.94665527]
[51.78302765 114.52839661]
[65.34053802 108.11014557]
[78.89804077 101.69188690]
[78.07070160 94.23766327]
[64.40323639 100.41830444]
[54.30162811 89.32968140]
[61.72599030 76.29592133]
[76.41600800 79.32920837]
[75.58866882 71.87497711]
[60.95373154 68.58580017]
[46.31879807 65.29662323]
[31.15786552 69.81952667]
[20.43697166 59.47971725]
[5.80203676 56.19054031]
[-9.35889530 60.71344757]
[-20.07979012 50.37363815]
[-34.71472549 47.08445740]
[-47.03793335 56.71111679]
[-62.66406250 56.11269379]
[-74.21492767 45.57175446]
[-76.23657227 30.06539917]
[-67.77442932 16.91526222]
[-52.82406616 12.33043098]
[-38.44458771 18.47572517]
[-31.42554474 32.44952393]
[-16.79061127 35.73870468]
[-2.67646694 30.98052979]
[9.09121609 41.55560684]
[23.72615051 44.84478378]
[37.84029388 40.08661270]
[49.60797882 50.66168594]
[64.24291229 53.95086670]
[78.87784576 57.24004364]
[86.90050507 44.56578445]
[77.66558075 32.74562073]
[68.43066406 20.92546082]
[59.19573975 9.10529900]
[49.96081543 -2.71486259]
[35.36750793 -8.82598877]
[33.62889099 -23.61877441]
[24.39396858 -35.43893433]
[9.80065918 -41.55006027]
[8.06204414 -56.34284592]
[-1.17287815 -68.16300964]
[-16.07540321 -64.86489868]
[-30.93114090 -68.36772156]
[-42.79047775 -77.97599792]
[-49.29872894 -91.78199005]
[-49.16368103 -107.04450989]
[-42.41214371 -120.73316956]
[-30.38464165 -130.13008118]
[-15.46924591 -133.36949158]
[-0.62741673 -129.80818176]
[11.19398975 -120.15328217]
[17.64782333 -106.32176971]
[17.45267296 -91.05989838]
[10.64728355 -77.39792633]
[19.88220596 -65.57776642]
[33.81497192 -60.31209946]
[36.21413040 -44.67385864]
[45.44905472 -32.85369492]
[59.38182068 -27.58802605]
[61.78097916 -11.94978523]
[71.01589966 -0.12962349]
[80.25082397 11.69053745]
[89.48574829 23.51069832]
[98.72066498 35.33086014]
[105.85359192 33.01323318]
[101.21857452 18.74730873]
[115.48457336 14.11252689]
[120.11943817 28.37797737]
[127.25236511 26.06035042]
[127.77585602 11.06948853]
[128.29934692 -3.92137432]
[128.82284546 -18.91223717]
[121.57186890 -32.97402954]
[129.74862671 -45.42352295]
[130.27212524 -60.41438293]
[122.09963226 -74.63206482]
[130.55921936 -88.68082428]
[146.94836426 -88.10849762]
[154.40734863 -73.50385284]
[145.26298523 -59.89089203]
[144.73950195 -44.90002823]
[152.02790833 -31.91048241]
[143.81370544 -18.38874435]
[143.29020691 -3.39788175]
[142.76672363 11.59298038]
[142.24322510 26.58384323]
[135.67582703 131.40609741]
[149.44908142 137.34730530]
[163.22232056 143.28849792]
[176.99555969 149.22969055]
[190.76879883 155.17088318]
[204.54203796 161.11209106]
[218.31527710 167.05328369]
[232.08853149 172.99447632]
[245.86177063 178.93566895]
[259.63500977 184.87687683]
[274.98202515 175.16670227]
[292.92581177 176.62770081]
[306.26403809 188.48309326]
[309.75756836 205.82235718]
[323.66531372 211.44145203]
[337.57308960 217.06054688]
[351.48083496 222.67965698]
[360.57369995 222.98788452]
[365.51712036 228.44589233]
[379.35855103 234.22642517]
[393.19998169 240.00695801]
[409.15756226 229.37118530]
[428.14816284 230.53599548]
[442.45751953 242.84547424]
[446.38345337 261.15377808]
[460.41818237 266.44772339]
[474.45294189 271.74169922]
[490.09579468 269.37277222]
[499.27331543 281.10403442]
[513.30804443 286.39797974]
[527.34283447 291.69195557]
[541.37756348 296.98590088]
[555.41229248 302.27987671]
[569.44702148 307.57382202]
[583.48175049 312.86776733]
[599.12463379 310.49887085]
[608.30218506 322.23013306]
[622.33691406 327.52407837]
[636.37164307 332.81805420]
[647.44885254 322.37503052]
[661.90283203 317.79574585]
[676.85052490 319.93740845]
[689.33471680 328.32223511]
[696.90917969 341.24264526]
[698.11767578 356.10888672]
[712.15246582 361.40286255]
[726.18719482 366.69680786]
[740.22192383 371.99075317]
[754.25665283 377.28472900]
[766.15197754 367.66970825]
[781.16375732 365.31527710]
[795.24487305 370.75479126]
[804.64978027 382.43402100]
[806.93054199 397.15350342]
[820.96533203 402.44747925]
[835.00006104 407.74142456]
[849.03479004 413.03540039]
[861.97705078 404.68048096]
[877.17956543 405.53839111]
[888.82415771 415.07083130]
[892.57781982 429.45999146]
[906.61260986 434.75396729]
[920.64733887 440.04791260]
[931.54986572 431.64724731]
[945.07098389 429.73666382]
[957.67309570 434.70828247]
[966.11199951 445.16757202]
[968.27215576 458.32247925]
[982.24432373 463.77938843]
[996.21655273 469.23629761]
[1010.18872070 474.69317627]
[1026.31030273 471.68850708]
[1036.76611328 484.32205200]
[1030.80029297 499.59753418]
[1014.54980469 501.80081177]
[1004.73181152 488.66537476]
[990.75964355 483.20846558]
[976.78747559 477.75158691]
[962.81524658 472.29467773]
[949.26922607 481.59603882]
[932.68255615 480.97131348]
[919.61511230 470.46881104]
[915.35339355 454.08267212]
[901.31860352 448.78869629]
[887.28387451 443.49475098]
[874.96215820 451.82019043]
[859.92285156 451.28738403]
[847.94097900 441.89123535]
[843.74084473 427.07012939]
[829.70611572 421.77618408]
[815.67132568 416.48220825]
[801.63659668 411.18826294]
[790.20269775 420.73449707]
[775.42730713 423.29284668]
[761.26159668 418.07757568]
[751.54455566 406.39532471]
[748.96270752 391.31945801]
[734.92797852 386.02551270]
[720.89324951 380.73153687]
[706.85845947 375.43759155]
[692.82373047 370.14364624]
[682.09802246 380.50823975]
[667.87738037 385.20745850]
[652.96557617 383.25839233]
[640.32720947 374.99450684]
[632.49835205 362.01007080]
[631.07769775 346.85278320]
[617.04296875 341.55883789]
[603.00817871 336.26486206]
[588.36920166 339.01242065]
[578.18780518 326.90252686]
[564.15307617 321.60855103]
[550.11834717 316.31460571]
[536.08361816 311.02066040]
[522.04882812 305.72668457]
[508.01409912 300.43273926]
[493.97937012 295.13876343]
[479.34036255 297.88632202]
[469.15896606 285.77642822]
[455.12423706 280.48248291]
[441.08947754 275.18850708]
[433.14086914 282.93069458]
[422.83633423 287.18240356]
[411.63854980 287.29895020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 166]
[4 165]
[5 164]
[6 162]
[7 161]
[8 160]
[9 159]
[15 155]
[16 154]
[17 153]
[18 152]
[19 151]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 35]
[26 34]
[27 33]
[28 32]
[38 59]
[39 58]
[40 57]
[41 56]
[44 54]
[45 53]
[46 52]
[47 51]
[65 89]
[66 88]
[67 87]
[69 85]
[70 84]
[72 82]
[73 81]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[96 117]
[97 116]
[99 114]
[100 113]
[128 145]
[129 144]
[130 143]
[131 142]
[133 140]
[134 139]
[170 266]
[171 265]
[172 264]
[174 262]
[175 261]
[176 260]
[177 259]
[178 258]
[179 257]
[180 256]
[182 254]
[183 253]
[184 252]
[190 246]
[191 245]
[192 244]
[193 243]
[194 242]
[199 237]
[200 236]
[201 235]
[202 234]
[206 230]
[207 229]
[208 228]
[213 224]
[214 223]
[215 222]
[216 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
