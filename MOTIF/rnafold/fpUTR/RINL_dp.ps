%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RINL)
} def

/sequence { (\
CUUCCUCUCUCCACUUCCUGCUACUGCAGGCCUCUCCUCCGAGAACAGAGGCCAGGUCAUGACUCACUGGCUUCCUGCAACCUGACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.015885817 ubox
1 48 0.006081394 ubox
1 50 0.003827027 ubox
1 51 0.003284336 ubox
1 55 0.003281351 ubox
2 42 0.015213435 ubox
2 43 0.017589205 ubox
2 44 0.010293666 ubox
2 45 0.095705538 ubox
2 47 0.009202900 ubox
2 49 0.003841224 ubox
2 50 0.004404661 ubox
2 54 0.003211983 ubox
2 80 0.023627328 ubox
2 85 0.029757972 ubox
3 41 0.013821060 ubox
3 42 0.021103813 ubox
3 43 0.005126124 ubox
3 44 0.111298164 ubox
3 47 0.018089188 ubox
3 48 0.003581459 ubox
3 49 0.006958915 ubox
3 79 0.024576621 ubox
3 84 0.029288301 ubox
3 85 0.125941020 ubox
4 41 0.021828492 ubox
4 43 0.087683046 ubox
4 48 0.007658924 ubox
4 51 0.032587065 ubox
4 84 0.135630424 ubox
5 43 0.265650510 ubox
5 48 0.005174102 ubox
5 50 0.039822082 ubox
6 42 0.275558799 ubox
6 44 0.327485802 ubox
6 47 0.006383597 ubox
6 49 0.040196570 ubox
6 51 0.005873601 ubox
6 85 0.168227379 ubox
7 41 0.274988910 ubox
7 43 0.343915596 ubox
7 48 0.040313464 ubox
7 50 0.023488959 ubox
7 84 0.181377692 ubox
8 42 0.343914448 ubox
8 44 0.146517451 ubox
8 47 0.037145589 ubox
8 49 0.024110595 ubox
8 85 0.167184657 ubox
9 41 0.343008021 ubox
9 43 0.153953363 ubox
9 48 0.024320722 ubox
9 50 0.008216994 ubox
9 84 0.180236920 ubox
10 42 0.153914497 ubox
10 44 0.006401960 ubox
10 47 0.022960523 ubox
10 49 0.008430396 ubox
10 85 0.125550526 ubox
11 30 0.003425318 ubox
11 41 0.153548162 ubox
11 43 0.005559001 ubox
11 48 0.008480659 ubox
11 84 0.133204240 ubox
12 20 0.006209537 ubox
12 77 0.048410254 ubox
12 84 0.189829374 ubox
13 19 0.005800396 ubox
13 76 0.043045359 ubox
13 83 0.170067538 ubox
14 30 0.008228880 ubox
14 43 0.022238921 ubox
15 29 0.003636236 ubox
15 30 0.003398435 ubox
15 42 0.022352519 ubox
15 44 0.004066978 ubox
15 45 0.007860900 ubox
15 47 0.003483045 ubox
15 80 0.036554967 ubox
15 85 0.028062222 ubox
16 30 0.010671922 ubox
16 41 0.022106901 ubox
16 44 0.006780101 ubox
16 79 0.036022984 ubox
16 84 0.028165834 ubox
16 85 0.022030929 ubox
17 29 0.009962961 ubox
17 30 0.987990174 ubox
17 84 0.020554669 ubox
18 29 0.998347019 ubox
18 30 0.004618175 ubox
19 28 0.998344631 ubox
19 87 0.003212723 ubox
20 27 0.998626600 ubox
20 31 0.006943773 ubox
20 86 0.005758833 ubox
21 26 0.998092591 ubox
21 30 0.006957711 ubox
22 29 0.006744627 ubox
22 84 0.006573462 ubox
23 83 0.006754918 ubox
25 79 0.040828890 ubox
25 87 0.010542107 ubox
26 78 0.044013388 ubox
26 86 0.018994600 ubox
27 77 0.044019829 ubox
27 84 0.026734510 ubox
28 38 0.003631552 ubox
28 76 0.043916258 ubox
28 83 0.027194615 ubox
29 37 0.005072165 ubox
29 40 0.005718560 ubox
29 53 0.014208170 ubox
29 75 0.043377846 ubox
29 82 0.027503806 ubox
30 36 0.005749986 ubox
30 37 0.004298188 ubox
30 39 0.006570099 ubox
30 52 0.026354355 ubox
30 74 0.022050139 ubox
30 78 0.023957453 ubox
30 81 0.027554776 ubox
31 51 0.028453345 ubox
31 56 0.003995485 ubox
31 77 0.024779179 ubox
32 43 0.365047182 ubox
32 48 0.005032392 ubox
32 50 0.029023863 ubox
32 55 0.004049945 ubox
33 42 0.366256914 ubox
33 44 0.759082595 ubox
33 47 0.003965342 ubox
33 49 0.028990641 ubox
33 54 0.003995028 ubox
33 85 0.007482670 ubox
34 41 0.366019705 ubox
34 43 0.797297085 ubox
34 48 0.028964690 ubox
34 84 0.007912525 ubox
35 42 0.797196828 ubox
35 44 0.021957657 ubox
35 47 0.028086104 ubox
35 85 0.005790317 ubox
36 41 0.794762448 ubox
36 43 0.023105791 ubox
36 51 0.004685965 ubox
36 84 0.006236275 ubox
37 43 0.015988374 ubox
37 50 0.005114266 ubox
38 42 0.014547169 ubox
38 44 0.025621106 ubox
38 49 0.005138110 ubox
38 85 0.023281683 ubox
39 43 0.025779703 ubox
39 48 0.005144423 ubox
39 84 0.025013315 ubox
40 84 0.017119105 ubox
40 87 0.007607923 ubox
41 83 0.013749524 ubox
41 86 0.008027360 ubox
42 76 0.009529986 ubox
42 83 0.022087180 ubox
43 75 0.009798753 ubox
43 82 0.023396177 ubox
46 77 0.894659774 ubox
46 84 0.043941459 ubox
47 76 0.895938649 ubox
47 83 0.043832880 ubox
48 73 0.004970625 ubox
48 74 0.765298579 ubox
48 75 0.638574972 ubox
48 82 0.028137413 ubox
49 72 0.007484628 ubox
49 73 0.991323891 ubox
49 76 0.006332972 ubox
50 71 0.005680916 ubox
50 72 0.996737284 ubox
50 73 0.021071658 ubox
50 74 0.015339838 ubox
50 75 0.006311694 ubox
51 71 0.998910221 ubox
51 74 0.005449064 ubox
51 78 0.007487861 ubox
52 70 0.999009178 ubox
52 77 0.007388864 ubox
53 69 0.998993844 ubox
53 77 0.007356167 ubox
53 84 0.038167556 ubox
54 64 0.010384288 ubox
54 68 0.997081402 ubox
54 73 0.015366909 ubox
54 76 0.007652012 ubox
54 83 0.038367328 ubox
55 63 0.014708103 ubox
55 64 0.072789107 ubox
55 65 0.024122244 ubox
55 67 0.989481774 ubox
55 68 0.053375166 ubox
55 72 0.018169011 ubox
55 75 0.007476134 ubox
55 82 0.038392949 ubox
56 63 0.179046431 ubox
56 64 0.022338601 ubox
56 67 0.108306111 ubox
56 71 0.018962435 ubox
56 74 0.006449384 ubox
56 81 0.038357292 ubox
56 86 0.005754428 ubox
57 62 0.165968922 ubox
57 66 0.141111281 ubox
57 70 0.019650926 ubox
57 80 0.036051055 ubox
57 85 0.005770226 ubox
58 69 0.024125179 ubox
58 77 0.025877525 ubox
58 84 0.005772457 ubox
59 68 0.023674930 ubox
59 76 0.025780591 ubox
59 83 0.005533066 ubox
60 66 0.068997639 ubox
60 79 0.010328744 ubox
61 65 0.068958457 ubox
61 73 0.004149851 ubox
61 74 0.025493067 ubox
61 78 0.010737354 ubox
62 72 0.005226477 ubox
62 73 0.024109939 ubox
63 70 0.015406730 ubox
64 69 0.013882736 ubox
64 70 0.007367896 ubox
64 85 0.005283230 ubox
65 69 0.008144564 ubox
65 77 0.005932469 ubox
65 84 0.005730567 ubox
66 76 0.005483556 ubox
66 83 0.005559913 ubox
68 79 0.011305522 ubox
69 75 0.009547234 ubox
69 78 0.010229724 ubox
70 74 0.009409002 ubox
70 78 0.021891858 ubox
71 77 0.022557145 ubox
73 85 0.003536796 ubox
74 84 0.003980749 ubox
76 84 0.007722038 ubox
76 87 0.043051771 ubox
77 83 0.008950640 ubox
77 86 0.078604529 ubox
78 84 0.161064665 ubox
79 83 0.131098145 ubox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
46 77 0.9500000 lbox
47 76 0.9500000 lbox
48 75 0.9500000 lbox
49 73 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
52 70 0.9500000 lbox
53 69 0.9500000 lbox
54 68 0.9500000 lbox
55 67 0.9500000 lbox
showpage
end
%%EOF
