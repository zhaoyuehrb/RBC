%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCGACGCAUCCCGCCCCCGCUCUGUCGCUUUAAGCUGGUCCCGCCGCCGCGCCCCGCCCUCACCCCUCCGCGCUCCGCGGCUCCCCGCCGCUUCUCCCGCUCCUCCCUUGCUCGGCCCUCUCCUCCUCCUCCCGCUCCUCCUCCCGCUCCUCCGCGCCGCCGCCAGCCCCGCUGCGCGCUCUGCUCUUCGCAGCUCCCCGGACCCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[27.31590271 305.16137695]
[20.32427406 314.31155396]
[11.35581112 321.51599121]
[0.93492669 326.36062622]
[-10.33077431 328.56924438]
[-21.78591537 328.01913452]
[-32.76547623 324.74783325]
[-40.79187393 337.41973877]
[-48.81827164 350.09164429]
[-56.84466934 362.76351929]
[-64.59400940 375.60671997]
[-72.06264496 388.61517334]
[-63.79743195 401.49713135]
[-62.47704315 416.74557495]
[-68.40489960 430.85653687]
[-80.21881866 440.58740234]
[-95.20405579 443.70208740]
[-109.91709900 439.48489380]
[-120.97701263 428.90487671]
[-125.84230804 414.39324951]
[-123.39496613 399.28466797]
[-114.19738007 387.05099487]
[-100.36307526 380.50341797]
[-85.07108307 381.14651489]
[-77.60245514 368.13809204]
[-78.16281128 364.66122437]
[-77.06977844 360.74032593]
[-74.13300323 357.15417480]
[-69.51656342 354.73712158]
[-61.49016571 342.06524658]
[-53.46377182 329.39334106]
[-45.43737411 316.72143555]
[-56.76772690 301.98229980]
[-61.59008789 283.99377441]
[-59.14316559 265.49841309]
[-49.77592850 249.32594299]
[-34.89809418 237.96052551]
[-16.76801682 233.15905762]
[1.85008657 235.67964172]
[8.93898582 222.46043396]
[8.13507652 207.58753967]
[21.47567749 199.08230591]
[28.56457710 185.86309814]
[35.65347672 172.64389038]
[42.74237823 159.42468262]
[49.83127594 146.20547485]
[47.25986481 83.07695770]
[91.31253052 58.32279968]
[81.70773315 46.80117416]
[72.10294342 35.27954865]
[62.49814224 23.75791931]
[45.02486801 34.33121872]
[19.69020462 29.91150856]
[-0.76131684 6.37932920]
[-14.90154362 1.37393236]
[-29.04176903 -3.63146448]
[-43.18199539 -8.63686180]
[-52.57914734 3.23631310]
[-65.32369232 11.41281700]
[-80.03320312 15.00572491]
[-95.11210632 13.62530422]
[-108.92474365 7.42129326]
[-119.97283173 -2.93334389]
[-127.05795288 -16.31541252]
[-129.41156006 -31.27332878]
[-126.77836609 -46.18456650]
[-119.44399261 -59.43166733]
[-108.20401764 -69.57768250]
[-94.27767181 -75.52205658]
[-79.17557526 -76.61997986]
[-64.53589630 -72.75235748]
[-51.94663620 -64.33872223]
[-42.77338028 -52.29172897]
[-38.01118088 -37.91813660]
[-38.17659760 -22.77708817]
[-24.03637314 -17.77169037]
[-9.89614582 -12.76629353]
[4.24408007 -7.76089716]
[8.92025375 -13.62463284]
[3.43984890 -27.58762550]
[18.27260017 -25.35210609]
[22.94877434 -31.21584129]
[14.92237663 -43.88773727]
[6.89597893 -56.55963135]
[-1.13041854 -69.23152924]
[-9.15681648 -81.90342712]
[-24.43257713 -86.80553436]
[-29.98928642 -101.85553741]
[-21.56431389 -115.50835419]
[-5.62057781 -117.29071045]
[5.61125374 -105.83534241]
[3.51507950 -89.92982483]
[11.54147720 -77.25792694]
[19.56787491 -64.58602905]
[27.59427261 -51.91413498]
[35.62067032 -39.24224091]
[42.86745071 -41.17464066]
[39.00264740 -55.66820145]
[35.13784409 -70.16175842]
[39.03730774 -84.64603424]
[49.63140488 -74.02656555]
[53.49620819 -59.53300476]
[57.36101151 -45.03944397]
[64.60778809 -46.97184372]
[65.25907135 -61.95769882]
[52.59610748 -70.76979065]
[46.72864532 -85.03781128]
[49.52897644 -100.20889282]
[60.10351562 -111.44199371]
[75.07797241 -115.15267944]
[89.67404938 -110.15687561]
[99.23419952 -98.04872894]
[100.70779419 -82.69190216]
[93.62463379 -68.98670959]
[80.24492645 -61.30642319]
[79.59364319 -46.32056808]
[91.23576355 -8.94329548]
[74.01976776 14.15312386]
[83.62456512 25.67475128]
[93.22936249 37.19637680]
[102.83415985 48.71800232]
[99.92891693 34.00204086]
[97.02368164 19.28607750]
[94.11843872 4.57011318]
[85.79724121 -7.91017485]
[80.49168396 -21.94053650]
[78.47286224 -36.80406189]
[79.84394836 -51.74126816]
[84.53487396 -65.98890686]
[92.30594635 -78.81896973]
[102.76007843 -89.57587433]
[115.36311340 -97.70996857]
[129.47105408 -102.80564117]
[144.36305237 -104.60250092]
[159.27813721 -103.00874329]
[173.45422363 -98.10580444]
[186.16693115 -90.14420319]
[196.76667786 -79.53075409]
[204.71186829 -66.80778503]
[209.59651184 -52.62539291]
[211.17102051 -37.70825958]
[209.35493469 -22.81860161]
[204.24107361 -8.71724319]
[196.09071350 3.87528157]
[185.32032776 14.31552982]
[172.48023987 22.07003593]
[158.22686768 26.74250793]
[146.85067749 36.51912689]
[135.47448730 46.29574966]
[124.09828949 56.07236862]
[138.76899719 52.94661331]
[153.43971252 49.82085800]
[161.82958984 36.42737961]
[177.25125122 32.97078323]
[190.55528259 41.50180435]
[193.84863281 56.95914459]
[185.17742920 70.17223358]
[169.68614197 73.30198669]
[156.56546021 64.49156189]
[141.89476013 67.61731720]
[127.22404480 70.74307251]
[126.78997040 78.23050690]
[125.92181396 93.20536041]
[125.48773193 100.69278717]
[139.69894409 105.49295044]
[153.94451904 110.19012451]
[168.22372437 114.78404999]
[182.50294495 119.37798309]
[191.62600708 119.02688599]
[196.95475769 124.14315796]
[211.16596985 128.94332886]
[225.37716675 133.74348450]
[242.31828308 133.08380127]
[247.64195251 149.18022156]
[233.64831543 158.75178528]
[220.57701111 147.95469666]
[206.36579895 143.15452576]
[192.15458679 138.35435486]
[177.90901184 133.65719604]
[163.62980652 129.06326294]
[149.35058594 124.46932983]
[142.02380371 125.41271973]
[134.89877319 119.70416260]
[120.68756866 114.90399170]
[116.53773499 121.15130615]
[104.08823395 139.89323425]
[114.02256012 151.13195801]
[123.95689392 162.37069702]
[133.89122009 173.60943604]
[149.75105286 176.02709961]
[157.62406921 190.00547791]
[151.47074890 204.82156372]
[136.01141357 209.10971069]
[123.10511780 199.58042908]
[122.65248871 183.54376221]
[112.71816254 172.30502319]
[102.78382874 161.06629944]
[92.84950256 149.82756042]
[85.39974976 150.69425964]
[94.35058594 162.73098755]
[88.40180206 176.50094604]
[73.50225830 178.23402405]
[64.55168152 166.19711304]
[70.50023651 152.42767334]
[63.05048752 153.29437256]
[55.96158600 166.51358032]
[48.87268829 179.73278809]
[41.78378677 192.95199585]
[34.69488907 206.17121887]
[34.99175262 221.98963928]
[22.15819550 229.54933167]
[15.06929588 242.76853943]
[23.35685730 250.86564636]
[29.46039581 260.70025635]
[33.03023529 271.69824219]
[33.86442184 283.21914673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 32]
[8 31]
[9 30]
[10 29]
[11 25]
[12 24]
[39 212]
[40 211]
[42 209]
[43 208]
[44 207]
[45 206]
[46 205]
[48 121]
[49 120]
[50 119]
[51 118]
[54 78]
[55 77]
[56 76]
[57 75]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[104 116]
[105 115]
[150 161]
[151 160]
[152 159]
[164 184]
[165 183]
[166 181]
[167 180]
[168 179]
[170 178]
[171 177]
[172 176]
[186 198]
[187 197]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
