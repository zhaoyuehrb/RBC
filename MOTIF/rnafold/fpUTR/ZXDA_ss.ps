%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACCUCUGGGCUUUCUAUUCCGUUCCAGAGACCCAGUACCAGAAUAUUUAAAUCACUGUGGCGUUGAAUACAUUUUAAUAUCUGAUAGGGCCAGUUUCUGCGCAUUGCACAUUUUUUUUUCCCCUUUCAGGAACGUGUUCAGGCCCGCGGCAGGGGGCGGGAUCGCGCCUCCUCCUCGGCUCUGGUUCCAGCCGAGCCUCUCGGACGCAGAG\
) } def
/len { sequence length } bind def

/coor [
[92.22177887 273.12051392]
[77.33544159 274.96359253]
[62.74998856 271.46148682]
[50.32336807 263.06036377]
[41.63851929 250.83033752]
[37.80173492 236.32933044]
[39.30111313 221.40679932]
[30.27193260 233.38485718]
[21.24275398 245.36291504]
[12.21357441 257.34097290]
[3.18439531 269.31903076]
[0.51857537 278.05337524]
[-6.06629848 281.40536499]
[-15.27033997 293.24960327]
[-24.47438240 305.09381104]
[-33.67842484 316.93804932]
[-42.88246536 328.78225708]
[-37.01753998 342.97726440]
[-39.05177689 358.20083618]
[-48.43797684 370.35794067]
[-62.65129852 376.17834473]
[-77.86843109 374.09640503]
[-89.99604034 364.67211914]
[-95.77185822 350.44064331]
[-93.64222717 335.23010254]
[-84.18000031 323.13211060]
[-69.93046570 317.40090942]
[-54.72668839 319.57821655]
[-45.52264786 307.73397827]
[-36.31860352 295.88977051]
[-27.11456299 284.04553223]
[-17.91052055 272.20132446]
[-8.79366493 260.28985596]
[0.23551454 248.31179810]
[9.26469421 236.33374023]
[18.29387283 224.35568237]
[27.32305145 212.37762451]
[26.93014717 205.91464233]
[30.47477341 199.53775024]
[37.59809113 195.63787842]
[44.19124603 182.16456604]
[50.68532562 168.64320374]
[57.07998276 155.07455444]
[63.47464371 141.50590515]
[48.80343246 144.62928772]
[33.89456177 142.97837830]
[20.26214409 136.72079468]
[9.29066849 126.49207306]
[2.09437418 113.33102417]
[-0.59589607 98.57424164]
[1.49307668 83.72042084]
[8.14914036 70.27806854]
[18.69631767 59.61236954]
[32.06345367 52.80651855]
[46.89301300 50.55170059]
[61.67892838 53.07691193]
[74.91957092 60.12569809]
[85.27024841 70.98219299]
[91.67961884 84.54335785]
[90.36009979 69.60150909]
[89.04057312 54.65966034]
[87.72105408 39.71781158]
[75.88937378 29.58622169]
[74.76404572 14.41426468]
[84.49588013 3.19700480]
[83.17636108 -11.74484444]
[81.85683441 -26.68669319]
[80.53731537 -41.62854385]
[79.21778870 -56.57039261]
[77.89826965 -71.51224518]
[76.57874298 -86.45409393]
[75.25922394 -101.39594269]
[66.33794403 -114.46197510]
[72.92565155 -127.82054138]
[71.60612488 -142.76239014]
[70.28660583 -157.70423889]
[59.85992432 -146.92071533]
[44.86494827 -146.53245544]
[33.89418030 -156.76193237]
[33.23414612 -171.74740601]
[43.26306152 -182.90182495]
[58.23410416 -183.83340454]
[69.56805420 -174.00921631]
[69.56805420 -189.00921631]
[69.56805420 -204.00921631]
[69.56805420 -219.00921631]
[61.83075333 -232.80938721]
[69.56805420 -245.53666687]
[69.56805420 -260.53665161]
[69.56805420 -275.53665161]
[69.56805420 -290.53665161]
[53.86460876 -295.45300293]
[40.46162415 -304.96697998]
[30.66219330 -318.13943481]
[25.41468620 -333.67633057]
[25.22099113 -350.05566406]
[30.08852577 -365.67669678]
[39.53063583 -379.01635742]
[52.61523438 -388.77770996]
[68.05679321 -394.01614380]
[67.61644745 -409.00967407]
[59.47735596 -422.57675171]
[66.83769226 -435.52566528]
[66.39734650 -450.51922607]
[59.88862991 -466.17401123]
[73.12985229 -476.76205444]
[86.96963501 -466.96936035]
[81.39088440 -450.95956421]
[81.83123016 -435.96603394]
[89.93881989 -423.47137451]
[82.60997772 -409.45001221]
[83.05032349 -394.45648193]
[96.28532410 -391.18206787]
[108.23068237 -384.58331299]
[118.06690979 -375.10534668]
[125.11727905 -363.39108276]
[128.89434814 -350.23757935]
[129.13365173 -336.54187012]
[125.81223297 -323.23968506]
[119.15064240 -311.24166870]
[109.59832001 -301.37084961]
[97.80325317 -294.30639648]
[84.56805420 -290.53665161]
[84.56805420 -275.53665161]
[84.56805420 -260.53665161]
[84.56805420 -245.53666687]
[92.30535126 -232.80938721]
[84.56805420 -219.00921631]
[84.56805420 -204.00921631]
[84.56805420 -189.00921631]
[84.56805420 -174.00921631]
[85.22845459 -159.02377319]
[86.54797363 -144.08192444]
[87.86750031 -129.14006042]
[96.69439697 -117.14276886]
[90.20107269 -102.71546173]
[91.52059174 -87.77361298]
[92.84011841 -72.83176422]
[94.15963745 -57.88991547]
[95.47916412 -42.94806671]
[96.79868317 -28.00621605]
[98.11820984 -13.06436729]
[99.43772888 1.87748194]
[110.98482513 11.21558762]
[112.53585815 26.34995079]
[102.66290283 38.39828873]
[103.98242188 53.34013748]
[105.30194855 68.28199005]
[106.62146759 83.22383881]
[117.30564117 93.75229645]
[132.26524353 94.85234070]
[141.05097961 92.36109924]
[147.43586731 96.07991028]
[162.37771606 97.39942932]
[177.31956482 98.71895599]
[192.26141357 100.03847504]
[207.20326233 101.35800171]
[222.14511108 102.67752075]
[237.08695984 103.99704742]
[252.02880859 105.31656647]
[263.98141479 94.97679138]
[279.73825073 96.20054626]
[289.95108032 108.26179504]
[288.56079102 124.00481415]
[276.39224243 134.08955383]
[260.66482544 132.53291321]
[250.70928955 120.25841522]
[235.76744080 118.93889618]
[220.82559204 117.61936951]
[205.88374329 116.29985046]
[190.94189453 114.98032379]
[176.00004578 113.66080475]
[161.05819702 112.34127808]
[146.11634827 111.02175903]
[131.16520691 109.81194305]
[116.20560455 108.71190643]
[112.90902710 115.44857025]
[106.31587219 128.92189026]
[103.01929474 135.65855408]
[113.06716156 146.79588318]
[123.11502075 157.93322754]
[133.16288757 169.07057190]
[143.21075439 180.20791626]
[151.28083801 184.48214722]
[153.32289124 191.58329773]
[163.20617676 202.86694336]
[173.08946228 214.15058899]
[188.78086853 218.91627502]
[192.23533630 234.94746399]
[179.89918518 245.75262451]
[164.46281433 240.21633911]
[161.80583191 224.03387451]
[151.92253113 212.75022888]
[142.03924561 201.46658325]
[132.07341003 190.25578308]
[122.02554321 179.11843872]
[111.97767639 167.98109436]
[101.92981720 156.84375000]
[91.88195038 145.70640564]
[77.04329681 147.90055847]
[70.64863586 161.46920776]
[64.25397491 175.03787231]
[63.42677307 184.13241577]
[57.66456223 188.75770569]
[51.07140732 202.23103333]
[63.70086288 194.13801575]
[78.36801910 190.99565125]
[93.20453644 193.20422363]
[106.32049561 200.48239136]
[116.04513550 211.90304565]
[121.13971710 226.01138306]
[120.95527649 241.01023865]
[115.51529694 254.98904419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[40 205]
[41 204]
[42 202]
[43 201]
[44 200]
[59 149]
[60 148]
[61 147]
[62 146]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[74 134]
[75 133]
[76 132]
[83 131]
[84 130]
[85 129]
[86 128]
[88 126]
[89 125]
[90 124]
[91 123]
[100 112]
[101 111]
[103 109]
[104 108]
[150 176]
[151 175]
[153 174]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
[179 199]
[180 198]
[181 197]
[182 196]
[183 195]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
