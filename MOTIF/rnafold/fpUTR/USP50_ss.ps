%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUCCAAGUUGGAGUGGUGCCUGAUACAGGUGAAAAUCAGUUCGCAGCUACUGGAAGAGAGAGGAGCAUAUCAAUUGUUUAAAACAAAAAGCCAGCGUUAACAGGCUCAGAGAAAUGAAGUUGAAAGGAAUAGAUGUAGCUCCUGAAUAGAAGCAAAAGUCCAACGUGGUUCCAUUAAA\
) } def
/len { sequence length } bind def

/coor [
[79.44834900 298.73614502]
[79.28774261 283.55923462]
[84.62417603 269.35055542]
[94.73594666 258.03167725]
[108.25550842 251.13343811]
[106.69621277 236.21470642]
[105.13691711 221.29597473]
[96.11849976 209.44197083]
[102.37931061 194.91224670]
[100.82001495 179.99351501]
[99.26071930 165.07478333]
[97.70142365 150.15605164]
[96.14212799 135.23731995]
[94.58283234 120.31858826]
[87.67256165 117.40341949]
[86.39818573 132.34919739]
[71.79006958 135.75549316]
[64.03647614 122.91486359]
[73.85202026 111.57308960]
[66.94175720 108.65792847]
[55.16804886 117.95200348]
[43.39434052 127.24607849]
[31.62063408 136.54014587]
[19.84692764 145.83422852]
[11.16091537 160.39408875]
[-5.23446751 156.07809448]
[-5.62584352 139.12866211]
[10.55285263 134.06051636]
[22.32655907 124.76644135]
[34.10026550 115.47236633]
[45.87397385 106.17829895]
[57.64768219 96.88422394]
[55.71701813 89.63697815]
[43.12505341 97.78820038]
[31.48176765 88.33125305]
[36.87805939 74.33554077]
[51.85569382 75.14248657]
[49.92502975 67.89524841]
[35.08798218 65.69026184]
[22.47431374 74.82991028]
[7.45884514 72.38238525]
[-1.17667735 60.30085754]
[-16.01372719 58.09587860]
[-30.85077858 55.89089584]
[-39.82682419 57.72757721]
[-45.92531204 53.51673508]
[-60.72185898 51.05457306]
[-75.51840210 48.59241104]
[-92.13516998 51.95684433]
[-99.96809387 36.92083359]
[-87.68807220 25.23163795]
[-73.05624390 33.79586792]
[-58.25969696 36.25802612]
[-43.46315384 38.72018814]
[-28.64579582 41.05384827]
[-13.80874634 43.25882721]
[1.02830374 45.46380997]
[12.80397606 36.41565323]
[27.88226509 38.44045639]
[37.29296112 50.85321426]
[52.13001251 53.05819702]
[85.40157318 64.27225494]
[100.19667816 89.85688019]
[106.97171783 76.47409821]
[113.74675751 63.09131241]
[120.52178955 49.70853043]
[127.29682922 36.32574844]
[134.07186890 22.94296646]
[140.73051453 9.50189304]
[147.27226257 -3.99646091]
[153.81401062 -17.49481392]
[160.35574341 -30.99316788]
[166.89749146 -44.49152374]
[165.95326233 -60.28452682]
[178.46655273 -68.36331177]
[185.00830078 -81.86166382]
[191.55004883 -95.36001587]
[190.60580444 -111.15302277]
[203.11909485 -119.23181152]
[209.66084290 -132.73016357]
[216.20259094 -146.22851562]
[211.25402832 -160.99839783]
[218.08056641 -174.59446716]
[232.19189453 -179.22114563]
[238.73364258 -192.71949768]
[245.27539062 -206.21784973]
[239.03465271 -212.73161316]
[235.37927246 -221.47392273]
[235.09437561 -231.40086365]
[238.53970337 -241.19941711]
[245.56144714 -249.46112061]
[255.47467041 -254.88229370]
[260.08517456 -269.15615845]
[264.69564819 -283.43002319]
[254.33935547 -294.77212524]
[251.05725098 -309.77621460]
[255.73222351 -324.40634155]
[267.10668945 -334.72702026]
[282.12103271 -337.96209717]
[296.73641968 -333.24130249]
[307.02139282 -321.83450317]
[310.20938110 -306.81011963]
[305.44277954 -292.20959473]
[294.00384521 -281.96041870]
[278.96951294 -278.81954956]
[274.35903931 -264.54568481]
[269.74853516 -250.27180481]
[282.49374390 -242.36230469]
[293.23751831 -252.82994080]
[303.98129272 -263.29757690]
[303.93637085 -279.10180664]
[315.13897705 -290.24975586]
[330.94277954 -290.12756348]
[341.97171021 -278.80773926]
[341.68243408 -263.00610352]
[330.24661255 -252.09748840]
[314.44891357 -252.55380249]
[303.70513916 -242.08616638]
[292.96136475 -231.61853027]
[283.02139282 -205.00941467]
[258.77374268 -199.67610168]
[252.23199463 -186.17774963]
[245.69024658 -172.67939758]
[250.80215454 -158.73651123]
[244.36018372 -144.95407104]
[229.70094299 -139.68676758]
[223.15919495 -126.18841553]
[216.61744690 -112.69006348]
[218.02960205 -97.86254883]
[205.04840088 -88.81827545]
[198.50665283 -75.31991577]
[191.96490479 -61.82156372]
[193.37705994 -46.99405289]
[180.39584351 -37.94977570]
[173.85411072 -24.45142174]
[167.31236267 -10.95306873]
[160.77061462 2.54528522]
[154.22886658 16.04363823]
[154.14093018 23.45410538]
[147.45465088 29.71800613]
[140.67961121 43.10078812]
[133.90457153 56.48357010]
[127.12953949 69.86634827]
[120.35449982 83.24913788]
[113.57946014 96.63191986]
[122.44868469 84.53493500]
[135.00120544 76.32311249]
[149.63806152 73.04248810]
[164.49476624 75.11096191]
[177.67880249 82.26503754]
[187.51078796 93.59342194]
[192.73826599 107.65306091]
[192.69535828 122.65299988]
[187.38752747 136.68249512]
[177.49089050 147.95445251]
[164.26612854 155.03297424]
[149.39784241 157.01641846]
[134.77999878 153.65211487]
[122.27465820 145.36860657]
[113.47479248 133.22108459]
[109.50156403 118.75929260]
[111.06085968 133.67802429]
[112.62015533 148.59675598]
[114.17945099 163.51548767]
[115.73874664 178.43421936]
[117.29804230 193.35295105]
[126.42799377 206.27404785]
[120.05564880 219.73667908]
[121.61494446 234.65541077]
[123.17424011 249.57414246]
[137.82803345 253.52774048]
[150.06176758 262.51104736]
[158.22094727 275.30920410]
[161.20208740 290.19131470]
[158.60202026 305.14471436]
[150.77239990 318.14706421]
[138.77210999 327.43994141]
[124.22407532 331.76651001]
[109.09581757 330.54168701]
[95.43330383 323.93109131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 170]
[6 169]
[7 168]
[9 166]
[10 165]
[11 164]
[12 163]
[13 162]
[14 161]
[20 32]
[21 31]
[22 30]
[23 29]
[24 28]
[38 61]
[39 60]
[42 57]
[43 56]
[44 55]
[46 54]
[47 53]
[48 52]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[75 132]
[76 131]
[77 130]
[79 128]
[80 127]
[81 126]
[84 123]
[85 122]
[86 121]
[92 107]
[93 106]
[94 105]
[108 119]
[109 118]
[110 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
