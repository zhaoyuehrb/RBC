%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGGAGGGGUGGCCUGACCCCUCGGCAGUCCCUCCCCUCAGCCUUUCCCCAAAUUGCUACUUCUCUGGGGCUCCAGGUCCUGCUUGUGCUCAGCUCCAGCUCACUGGCUGGCCACCGAGACUUCUGGACAGGAAACUGCACCAUCCUCUUCUCCCAGCAAGGGGGCUCCAGAGACUGCCCACCCAGGAAGUCUGGUGGCCUGGGGAUUUGGACAGUGCCUUGGUAAUGACCAGGGCUCCAGGAAGAG\
) } def
/len { sequence length } bind def

/coor [
[-67.32260895 416.47070312]
[-75.80193329 428.84411621]
[-84.28125763 441.21749878]
[-80.30282593 454.06930542]
[-84.38507080 466.68426514]
[-94.82780457 474.53497314]
[-107.69162750 474.93966675]
[-116.32514954 487.20596313]
[-124.95867157 499.47229004]
[-133.59219360 511.73858643]
[-142.22572327 524.00488281]
[-150.85925293 536.27117920]
[-152.09461975 554.65582275]
[-168.31455994 561.38391113]
[-176.79388428 573.75726318]
[-178.21250916 589.51477051]
[-191.78953552 595.63958740]
[-200.26885986 608.01300049]
[-208.74818420 620.38641357]
[-211.00863647 629.20935059]
[-217.41188049 632.86071777]
[-226.04539490 645.12701416]
[-226.97473145 661.49981689]
[-241.73844910 668.63873291]
[-255.14891052 659.19995117]
[-253.41058350 642.89318848]
[-238.31170654 636.49346924]
[-229.67817688 624.22717285]
[-221.12158203 611.90710449]
[-212.64225769 599.53369141]
[-204.16294861 587.16027832]
[-203.35081482 572.28784180]
[-189.16728210 565.27795410]
[-180.68795776 552.90454102]
[-182.60145569 540.97674561]
[-175.66055298 530.60406494]
[-163.12554932 527.63769531]
[-154.49203491 515.37139893]
[-145.85850525 503.10507202]
[-137.22497559 490.83874512]
[-128.59146118 478.57244873]
[-119.95793152 466.30615234]
[-123.53826904 449.86193848]
[-113.91770172 435.64321899]
[-96.65466309 432.73818970]
[-88.17533875 420.36477661]
[-79.69601440 407.99136353]
[-77.95957947 379.42263794]
[-57.90086365 368.31848145]
[-56.58832932 353.37603760]
[-55.27579880 338.43356323]
[-53.96326828 323.49108887]
[-52.65073776 308.54864502]
[-51.33820724 293.60617065]
[-61.80478287 304.35098267]
[-76.62590790 302.04138184]
[-83.32684326 288.62133789]
[-76.26750183 275.38632202]
[-61.38955688 273.47607422]
[-74.12242126 265.54675293]
[-86.85528564 257.61743164]
[-99.58815765 249.68812561]
[-112.48924255 257.77041626]
[-127.55873108 259.44299316]
[-141.80175781 254.42739868]
[-152.41110229 243.76893616]
[-157.32041931 229.61944580]
[-155.60658264 214.80296326]
[-168.33944702 206.87364197]
[-181.07231140 198.94432068]
[-193.80517578 191.01501465]
[-206.53804016 183.08569336]
[-219.27090454 175.15637207]
[-232.00376892 167.22705078]
[-244.73664856 159.29772949]
[-267.14187622 160.12924194]
[-276.45834351 140.58465576]
[-289.57208252 133.30247498]
[-302.68579102 126.02030182]
[-315.79953003 118.73812866]
[-328.91326904 111.45594788]
[-345.69598389 109.05239868]
[-348.03225708 92.26019287]
[-332.54306030 85.36666107]
[-321.63107300 98.34222412]
[-308.51736450 105.62439728]
[-295.40362549 112.90657806]
[-282.28988647 120.18875122]
[-269.17617798 127.47093201]
[-262.28744507 123.76642609]
[-254.40344238 123.06301880]
[-246.78952026 125.54759216]
[-240.69688416 130.88937378]
[-237.15698242 138.28202820]
[-236.80732727 146.56486511]
[-224.07446289 154.49418640]
[-211.34158325 162.42350769]
[-198.60871887 170.35281372]
[-185.87585449 178.28213501]
[-173.14299011 186.21145630]
[-160.41012573 194.14077759]
[-147.67726135 202.07009888]
[-135.13623047 193.99618530]
[-120.27220154 192.16043091]
[-106.02679443 196.98011780]
[-95.24268341 207.55003357]
[-90.09632111 221.81193542]
[-91.65883636 236.95526123]
[-78.92597198 244.88456726]
[-66.19309998 252.81388855]
[-53.46023560 260.74322510]
[-45.29296112 264.61944580]
[-40.16706467 270.51477051]
[-29.26601028 260.21102905]
[-18.36495399 249.90728760]
[-7.46389675 239.60356140]
[3.43715954 229.29981995]
[14.33821583 218.99609375]
[25.23927307 208.69235229]
[27.93437004 201.83157349]
[36.34184265 198.32893372]
[47.37100601 188.16244507]
[58.40016937 177.99594116]
[69.42933655 167.82945251]
[80.45849609 157.66296387]
[91.48766327 147.49647522]
[102.51682281 137.32998657]
[65.31480408 65.98473358]
[69.57353973 51.60199356]
[73.83226776 37.21925354]
[69.12503052 19.40455246]
[82.34265137 7.84395266]
[86.42103577 -6.59096289]
[90.49942017 -21.02587891]
[85.94786835 -36.78073502]
[97.50966644 -48.41073608]
[113.29101562 -43.95193481]
[117.05742645 -27.99116516]
[104.93433380 -16.94749641]
[100.85594940 -2.51258063]
[96.77757263 11.92233562]
[102.40406799 22.61233711]
[99.14372253 34.65970993]
[88.21500397 41.47798157]
[83.95627594 55.86072159]
[79.69754791 70.24346161]
[85.85759735 74.52175903]
[98.17768860 83.07835388]
[104.33773804 87.35664368]
[116.32793427 78.34358978]
[128.31813049 69.33052826]
[140.30831909 60.31747055]
[147.53634644 40.12655640]
[168.13293457 38.60993958]
[179.77633667 29.15312195]
[191.41972351 19.69630241]
[203.06311035 10.23948479]
[214.70651245 0.78266698]
[217.78372192 -14.96250153]
[232.07838440 -22.24550056]
[246.62486267 -15.47943687]
[250.26432800 0.14534412]
[240.20491028 12.64284801]
[224.16333008 12.42605972]
[212.51992798 21.88287735]
[200.87654114 31.33969498]
[189.23315430 40.79651260]
[177.58975220 50.25333023]
[178.12544250 59.07084274]
[174.50178528 67.27749634]
[167.41093445 72.99430847]
[158.35337830 74.84989166]
[149.32138062 72.30767059]
[137.33119202 81.32072449]
[125.34098816 90.33378601]
[113.35079193 99.34683990]
[118.93918610 113.26768494]
[124.52706909 127.18729401]
[139.42115784 125.40792084]
[154.31524658 123.62854767]
[163.88775635 111.05307770]
[179.55976868 109.01248932]
[192.03332520 118.71742249]
[193.90811157 134.41012573]
[184.07183838 146.78038025]
[168.36019897 148.48913574]
[156.09461975 138.52262878]
[141.20053101 140.30200195]
[126.30644226 142.08137512]
[112.68331909 148.35914612]
[101.65415192 158.52563477]
[90.62498474 168.69212341]
[79.59582520 178.85862732]
[68.56665802 189.02511597]
[57.53749847 199.19160461]
[46.50833130 209.35809326]
[35.54300690 219.59341431]
[24.64195251 229.89714050]
[13.74089527 240.20088196]
[2.83983898 250.50460815]
[-8.06121731 260.80834961]
[-18.96227455 271.11209106]
[-29.86333084 281.41583252]
[-36.39574051 294.91870117]
[-37.70827103 309.86117554]
[-39.02080154 324.80361938]
[-40.33333588 339.74609375]
[-41.64586639 354.68856812]
[-42.95839691 369.63101196]
[-25.59519577 381.88223267]
[-24.84464073 408.33465576]
[-16.52084541 420.81320190]
[-8.19705200 433.29177856]
[0.12674285 445.77032471]
[8.45053768 458.24890137]
[12.35433769 460.01278687]
[15.21905518 462.65277100]
[16.89763451 465.73965454]
[17.39579391 468.84014893]
[16.86030769 471.56680298]
[24.54919243 484.44628906]
[32.23807526 497.32574463]
[39.92695999 510.20523071]
[47.61584473 523.08471680]
[55.30472946 535.96423340]
[62.99361038 548.84368896]
[70.68249512 561.72314453]
[85.25865936 569.23767090]
[85.76863861 585.62884521]
[71.68780518 594.03491211]
[57.50131226 585.80841064]
[57.80301285 569.41204834]
[50.11412811 556.53259277]
[42.42524719 543.65307617]
[34.73636246 530.77362061]
[27.04747772 517.89410400]
[19.35859299 505.01464844]
[11.66971016 492.13516235]
[3.98082614 479.25567627]
[-4.02802229 466.57269287]
[-12.35181618 454.09411621]
[-20.67561150 441.61557007]
[-28.99940491 429.13699341]
[-37.32320023 416.65844727]
[-44.82305145 416.61151123]
[-43.50077820 431.55310059]
[-40.13717651 446.17111206]
[-52.56108856 454.57626343]
[-64.87844849 446.01574707]
[-61.33193970 431.44152832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 47]
[2 46]
[3 45]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 37]
[14 34]
[15 33]
[17 31]
[18 30]
[19 29]
[21 28]
[22 27]
[49 209]
[50 208]
[51 207]
[52 206]
[53 205]
[54 204]
[59 111]
[60 110]
[61 109]
[62 108]
[68 102]
[69 101]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[77 89]
[78 88]
[79 87]
[80 86]
[81 85]
[113 203]
[114 202]
[115 201]
[116 200]
[117 199]
[118 198]
[119 197]
[121 196]
[122 195]
[123 194]
[124 193]
[125 192]
[126 191]
[127 190]
[128 146]
[129 145]
[130 144]
[132 141]
[133 140]
[134 139]
[149 176]
[150 175]
[151 174]
[152 173]
[154 168]
[155 167]
[156 166]
[157 165]
[158 164]
[178 189]
[179 188]
[180 187]
[211 244]
[212 243]
[213 242]
[214 241]
[215 240]
[220 239]
[221 238]
[222 237]
[223 236]
[224 235]
[225 234]
[226 233]
[227 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
