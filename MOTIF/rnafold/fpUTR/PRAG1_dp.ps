%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRAG1)
} def

/sequence { (\
GAAGCCGCUCUGUGACCCACCUCUGAAUCCCACAAAACUGCACCAGAGAGCCGGGCGCAAGAUGAACCAGCACCCUGUCGGCUCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.027280781 ubox
1 84 0.808210863 ubox
2 9 0.025921501 ubox
2 83 0.570988033 ubox
3 9 0.008550085 ubox
3 11 0.004887100 ubox
3 83 0.775737579 ubox
4 8 0.010436183 ubox
4 10 0.005414239 ubox
4 13 0.003634718 ubox
4 41 0.037391175 ubox
4 56 0.043911838 ubox
4 58 0.008281941 ubox
4 71 0.004682138 ubox
4 82 0.981642913 ubox
5 12 0.003806574 ubox
5 40 0.037272300 ubox
5 54 0.014414671 ubox
5 55 0.043154389 ubox
5 57 0.005928281 ubox
5 70 0.004684222 ubox
5 81 0.981799586 ubox
6 14 0.020005068 ubox
6 40 0.003434723 ubox
6 53 0.016750737 ubox
6 54 0.042111275 ubox
6 57 0.007050389 ubox
6 64 0.027228739 ubox
6 80 0.981460829 ubox
7 13 0.021757057 ubox
7 39 0.004062853 ubox
7 41 0.020101782 ubox
7 51 0.312846992 ubox
7 52 0.023367761 ubox
7 56 0.009473739 ubox
7 63 0.046188455 ubox
7 71 0.048516519 ubox
7 78 0.077657868 ubox
7 79 0.875811371 ubox
7 82 0.007053148 ubox
8 12 0.022653674 ubox
8 40 0.020119320 ubox
8 48 0.212618137 ubox
8 50 0.321841440 ubox
8 55 0.009476015 ubox
8 61 0.312800549 ubox
8 70 0.052931721 ubox
8 77 0.367550549 ubox
8 81 0.007014037 ubox
8 87 0.004112562 ubox
9 15 0.025695225 ubox
9 26 0.003285353 ubox
9 47 0.217011097 ubox
9 49 0.322198815 ubox
9 54 0.009361404 ubox
9 60 0.309883489 ubox
9 62 0.709933820 ubox
9 65 0.081056411 ubox
9 69 0.035882889 ubox
9 80 0.005428702 ubox
9 86 0.003650341 ubox
10 14 0.027540948 ubox
10 25 0.003441981 ubox
10 46 0.217527456 ubox
10 48 0.321749604 ubox
10 50 0.005254004 ubox
10 53 0.009314971 ubox
10 61 0.750795896 ubox
10 64 0.084276570 ubox
10 70 0.005875937 ubox
11 19 0.035515686 ubox
11 32 0.007912805 ubox
11 34 0.055737075 ubox
11 42 0.003941559 ubox
11 45 0.216817838 ubox
11 47 0.318921675 ubox
11 49 0.005332117 ubox
11 59 0.695264086 ubox
11 60 0.530433729 ubox
11 69 0.004728111 ubox
11 72 0.008168601 ubox
11 77 0.007604265 ubox
12 18 0.040044826 ubox
12 20 0.200395084 ubox
12 31 0.011506118 ubox
12 33 0.066602375 ubox
12 38 0.003231339 ubox
12 41 0.005443840 ubox
12 43 0.156457566 ubox
12 44 0.160655059 ubox
12 51 0.006956172 ubox
12 58 0.886258581 ubox
12 71 0.008225452 ubox
12 73 0.033282929 ubox
12 76 0.003438351 ubox
13 19 0.201100327 ubox
13 32 0.066781216 ubox
13 34 0.005114416 ubox
13 37 0.003454384 ubox
13 40 0.005667388 ubox
13 42 0.213524278 ubox
13 45 0.310137161 ubox
13 50 0.006805407 ubox
13 57 0.886562350 ubox
13 59 0.011337569 ubox
13 70 0.007880583 ubox
13 72 0.033226392 ubox
13 85 0.005034974 ubox
14 18 0.198186688 ubox
14 23 0.015912041 ubox
14 29 0.023357138 ubox
14 31 0.065823544 ubox
14 33 0.005183185 ubox
14 39 0.003688422 ubox
14 41 0.213649962 ubox
14 44 0.309545402 ubox
14 56 0.886002575 ubox
14 58 0.012151374 ubox
14 71 0.031968691 ubox
14 79 0.008788363 ubox
14 84 0.005570062 ubox
15 22 0.015664841 ubox
15 28 0.025625585 ubox
15 78 0.010310411 ubox
15 83 0.005317610 ubox
16 54 0.066996931 ubox
16 55 0.885015692 ubox
16 77 0.010265550 ubox
17 53 0.067324465 ubox
17 54 0.885101255 ubox
17 55 0.008620380 ubox
17 81 0.004480859 ubox
18 25 0.055941572 ubox
18 40 0.210285256 ubox
18 53 0.884007481 ubox
18 54 0.008981242 ubox
18 64 0.007904715 ubox
18 80 0.004485837 ubox
19 24 0.047801235 ubox
19 39 0.200048365 ubox
19 63 0.007566343 ubox
19 78 0.004620943 ubox
20 77 0.004639495 ubox
21 48 0.663895014 ubox
21 50 0.631351079 ubox
21 61 0.003383037 ubox
22 47 0.667520317 ubox
22 49 0.631938213 ubox
22 60 0.003329228 ubox
22 62 0.024122908 ubox
23 46 0.668734730 ubox
23 48 0.631586394 ubox
23 50 0.003825156 ubox
23 61 0.024695069 ubox
24 32 0.204211684 ubox
24 34 0.199206735 ubox
24 42 0.016757974 ubox
24 45 0.669129796 ubox
24 47 0.625372513 ubox
24 49 0.003797710 ubox
24 59 0.005270729 ubox
24 60 0.024160298 ubox
25 31 0.215845702 ubox
25 33 0.206981509 ubox
25 39 0.003195359 ubox
25 41 0.021162587 ubox
25 44 0.668473170 ubox
25 58 0.006752639 ubox
28 47 0.017117554 ubox
28 55 0.003253290 ubox
29 46 0.021699347 ubox
29 54 0.003374166 ubox
29 55 0.024564454 ubox
30 53 0.003358379 ubox
30 54 0.024614949 ubox
31 40 0.562983861 ubox
31 53 0.024575371 ubox
32 39 0.509095054 ubox
33 40 0.202569707 ubox
34 39 0.183411782 ubox
38 46 0.157845092 ubox
38 48 0.008445912 ubox
38 50 0.003778474 ubox
39 45 0.158016259 ubox
39 47 0.008685927 ubox
39 49 0.003804567 ubox
39 59 0.005327056 ubox
40 44 0.155595841 ubox
40 51 0.016420056 ubox
40 56 0.003492093 ubox
40 58 0.005846453 ubox
41 50 0.016536607 ubox
41 55 0.003491849 ubox
41 57 0.005845189 ubox
43 54 0.004770237 ubox
43 55 0.004871343 ubox
44 53 0.004799477 ubox
44 54 0.004842011 ubox
48 79 0.008399332 ubox
48 84 0.067928797 ubox
49 76 0.006813272 ubox
49 78 0.013278174 ubox
49 83 0.072438790 ubox
50 58 0.004773737 ubox
50 71 0.023628062 ubox
50 75 0.004604380 ubox
50 78 0.252653406 ubox
50 82 0.073027168 ubox
51 57 0.004773817 ubox
51 70 0.023992594 ubox
51 77 0.264033374 ubox
51 81 0.073031322 ubox
52 77 0.086117334 ubox
52 80 0.072968148 ubox
53 68 0.019253146 ubox
53 74 0.016976008 ubox
53 75 0.452678427 ubox
53 76 0.038133970 ubox
53 79 0.033607868 ubox
54 67 0.019221722 ubox
54 68 0.019817839 ubox
54 73 0.017063628 ubox
54 74 0.454418392 ubox
54 75 0.036207737 ubox
54 78 0.009176146 ubox
54 79 0.004926491 ubox
55 67 0.019911058 ubox
55 71 0.016894406 ubox
55 73 0.454577519 ubox
55 74 0.033502446 ubox
55 78 0.006102882 ubox
56 64 0.010324412 ubox
56 70 0.017619495 ubox
56 77 0.007094231 ubox
57 63 0.008218648 ubox
57 71 0.455733830 ubox
57 76 0.005456262 ubox
57 78 0.005729705 ubox
57 82 0.004518654 ubox
58 64 0.023368818 ubox
58 70 0.455484822 ubox
58 77 0.006315016 ubox
58 81 0.004517671 ubox
59 63 0.019677688 ubox
59 76 0.006217630 ubox
60 76 0.064778931 ubox
60 83 0.004566662 ubox
61 75 0.066653234 ubox
61 79 0.039889468 ubox
61 82 0.004829734 ubox
61 84 0.003922963 ubox
62 78 0.041193528 ubox
62 83 0.003820266 ubox
63 69 0.111212327 ubox
63 72 0.174206306 ubox
63 77 0.034699345 ubox
63 80 0.009773055 ubox
63 85 0.153917613 ubox
64 68 0.117491475 ubox
64 71 0.198253274 ubox
64 76 0.025713825 ubox
64 79 0.165317633 ubox
64 84 0.171085005 ubox
65 78 0.155052285 ubox
65 83 0.168397511 ubox
66 78 0.144921144 ubox
67 77 0.115958505 ubox
67 81 0.173434396 ubox
68 77 0.688750928 ubox
68 80 0.173528697 ubox
69 76 0.703450848 ubox
69 83 0.009568605 ubox
70 75 0.693180631 ubox
70 78 0.314223401 ubox
70 82 0.010460781 ubox
71 77 0.322912584 ubox
71 81 0.010296068 ubox
72 76 0.261853255 ubox
72 78 0.045648062 ubox
73 77 0.048738278 ubox
73 81 0.006056796 ubox
74 80 0.006301492 ubox
74 81 0.006064973 ubox
75 80 0.006430348 ubox
76 85 0.003701757 ubox
77 84 0.004032261 ubox
1 84 0.9500000 lbox
2 83 0.9500000 lbox
4 82 0.9500000 lbox
5 81 0.9500000 lbox
6 80 0.9500000 lbox
7 79 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
