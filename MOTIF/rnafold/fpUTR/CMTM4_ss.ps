%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGACCGAGCCGCAGCCGCAGCCGGGCGGCGGGCGAGAGGCGGCGGCGGCGGGCGGGCCGCGGGCAGUCAGUCGGGCGGCGGCGGCGGCGGCGGCGGCGGCGAUGCGGCGGCCCCGCUGAGUCCGCCCGCUCCUGGCGCCGGGAGCCAGCCGCGCGAGGCGGCCCGGGCCGGGCGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[85.34402466 866.25549316]
[95.19698334 853.59460449]
[94.68206787 838.60345459]
[82.25591278 830.43469238]
[76.95993805 816.34863281]
[81.02132416 801.67352295]
[93.08453369 792.09307861]
[92.56961823 777.10192871]
[92.05471039 762.11077881]
[88.67439270 755.51733398]
[91.66185760 746.85833740]
[91.40436554 731.86053467]
[91.14686584 716.86273193]
[78.86277008 708.48187256]
[73.80938721 694.30700684]
[78.12208557 679.70379639]
[90.34798431 670.33178711]
[90.09049225 655.33404541]
[89.83299255 640.33624268]
[89.57550049 625.33843994]
[89.31800842 610.34063721]
[78.88046265 602.76043701]
[74.65894318 590.36517334]
[78.41002655 577.61639404]
[88.97699738 569.24047852]
[88.97699738 554.24047852]
[81.23969269 541.51324463]
[88.97699738 527.71307373]
[88.97699738 512.71307373]
[88.97699738 497.71304321]
[88.97699738 482.71304321]
[88.97699738 467.71304321]
[81.23969269 454.98577881]
[88.97699738 441.18560791]
[88.97699738 426.18560791]
[88.97699738 411.18560791]
[76.00967407 403.85659790]
[68.40127563 390.93499756]
[68.28144073 375.84020996]
[75.78248596 362.62539673]
[88.97699738 354.88900757]
[88.97699738 339.88900757]
[88.97699738 324.88900757]
[88.97699738 309.88900757]
[81.23969269 297.16171265]
[88.97699738 283.36154175]
[88.97699738 268.36154175]
[88.97699738 253.36155701]
[81.23969269 240.63427734]
[88.97699738 226.83410645]
[88.97699738 211.83410645]
[88.97699738 196.83410645]
[88.97699738 181.83410645]
[88.97699738 166.83410645]
[88.97699738 151.83410645]
[88.97699738 136.83410645]
[88.97699738 121.83410645]
[88.97699738 106.83410645]
[83.68571472 92.79835510]
[73.78343201 81.53137207]
[63.88114929 70.26439667]
[53.97886658 58.99741745]
[44.07658768 47.73043823]
[26.50888634 42.25011063]
[23.71454048 24.93575478]
[13.62030506 13.84042072]
[3.52606916 2.74508810]
[-12.36676025 0.55475950]
[-20.43911552 -13.30946159]
[-14.49857807 -28.21213150]
[0.89778173 -32.72119522]
[13.93919373 -23.37768936]
[14.62140179 -7.34914732]
[24.71563721 3.74618554]
[34.80987167 14.84151840]
[46.88932037 15.73090649]
[55.38971329 24.91379929]
[55.34356308 37.82815552]
[65.24584961 49.09513474]
[75.14812469 60.36211395]
[85.05040741 71.62909698]
[94.95269012 82.89607239]
[102.35317230 81.67832947]
[117.15412903 79.24283600]
[124.55461121 78.02508545]
[130.32458496 64.17924500]
[136.09455872 50.33340073]
[141.86453247 36.48756027]
[147.63452148 22.64171600]
[153.40449524 8.79587269]
[153.82070923 -0.35457641]
[159.39419556 -5.23676634]
[165.40100098 -18.98151970]
[171.40780640 -32.72627258]
[169.84431458 -48.47003555]
[182.03082275 -57.03381729]
[188.03762817 -70.77857208]
[186.47415161 -86.52233887]
[198.66065979 -95.08612061]
[204.66746521 -108.83087158]
[210.67427063 -122.57562256]
[208.31141663 -138.80364990]
[221.34976196 -148.75018311]
[236.37657166 -142.18309021]
[237.93356323 -125.85801697]
[224.41902161 -116.56881714]
[218.41221619 -102.82406616]
[212.40541077 -89.07930756]
[214.39854431 -74.31866455]
[201.78239441 -64.77176666]
[195.77557373 -51.02701187]
[197.76870728 -36.26636505]
[185.15255737 -26.71946526]
[179.14575195 -12.97471142]
[173.13894653 0.77004242]
[167.25033569 14.56584930]
[161.48036194 28.41169167]
[155.71038818 42.25753403]
[149.94039917 56.10337830]
[144.17042542 69.94921875]
[138.40045166 83.79506683]
[133.21182251 98.71897125]
[123.51735687 107.85140991]
[112.68264008 110.31891632]
[103.97699738 106.83410645]
[103.97699738 121.83410645]
[103.97699738 136.83410645]
[103.97699738 151.83410645]
[103.97699738 166.83410645]
[103.97699738 181.83410645]
[103.97699738 196.83410645]
[103.97699738 211.83410645]
[103.97699738 226.83410645]
[111.71429443 240.63427734]
[103.97699738 253.36155701]
[103.97699738 268.36154175]
[103.97699738 283.36154175]
[111.71429443 297.16171265]
[103.97699738 309.88900757]
[103.97699738 324.88900757]
[103.97699738 339.88900757]
[103.97699738 354.88900757]
[117.17150116 362.62539673]
[124.67254639 375.84020996]
[124.55271149 390.93499756]
[116.94431305 403.85659790]
[103.97699738 411.18560791]
[103.97699738 426.18560791]
[103.97699738 441.18560791]
[111.71429443 454.98577881]
[103.97699738 467.71304321]
[103.97699738 482.71304321]
[103.97699738 497.71304321]
[103.97699738 512.71307373]
[103.97699738 527.71307373]
[111.71429443 541.51324463]
[103.97699738 554.24047852]
[103.97699738 569.24047852]
[116.56742859 581.36834717]
[116.50497437 598.51226807]
[104.31579590 610.08312988]
[104.57328796 625.08093262]
[104.83078766 640.07873535]
[105.08827972 655.07653809]
[105.34577179 670.07434082]
[117.88618469 679.02105713]
[122.69763947 693.46765137]
[118.13381958 707.80761719]
[106.14466095 716.60522461]
[106.40215302 731.60302734]
[106.65964508 746.60083008]
[107.04586792 761.59582520]
[107.56078339 776.58703613]
[108.07569122 791.57818604]
[120.76783752 800.30834961]
[125.82657623 814.67016602]
[121.50959778 829.08642578]
[109.67322540 838.08850098]
[110.18814087 853.07971191]
[120.88660431 865.03472900]
[118.06821442 880.82824707]
[103.89499664 888.34484863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[7 174]
[8 173]
[9 172]
[11 171]
[12 170]
[13 169]
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[25 158]
[26 157]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[34 149]
[35 148]
[36 147]
[41 142]
[42 141]
[43 140]
[44 139]
[46 137]
[47 136]
[48 135]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[59 82]
[60 81]
[61 80]
[62 79]
[63 78]
[65 75]
[66 74]
[67 73]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[92 115]
[93 114]
[94 113]
[96 111]
[97 110]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
