%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC175)
} def

/sequence { (\
GUGGCAACCGGCAAUCCUUGGCUCUGGCUUAGGAGGCGCUCAAGUAGAGCGGCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.173218773 ubox
1 12 0.391132197 ubox
1 15 0.044233582 ubox
1 28 0.004755811 ubox
1 37 0.009714429 ubox
1 50 0.010467234 ubox
1 53 0.383022601 ubox
2 7 0.172467570 ubox
2 10 0.377714347 ubox
2 11 0.322064852 ubox
2 13 0.146284628 ubox
2 14 0.069563773 ubox
2 27 0.004674220 ubox
2 31 0.005540361 ubox
2 36 0.009506268 ubox
2 42 0.004276639 ubox
2 49 0.010312113 ubox
2 51 0.006054736 ubox
2 52 0.379777654 ubox
2 54 0.087378461 ubox
3 9 0.516712631 ubox
3 12 0.156383886 ubox
3 17 0.007371501 ubox
3 23 0.006609726 ubox
3 29 0.028494681 ubox
3 30 0.004483203 ubox
3 37 0.003615558 ubox
3 40 0.004970001 ubox
3 41 0.004706556 ubox
3 50 0.003983834 ubox
3 53 0.091432681 ubox
4 8 0.509020879 ubox
4 12 0.442240981 ubox
4 16 0.007118367 ubox
4 22 0.007816213 ubox
4 28 0.031040371 ubox
4 37 0.015882812 ubox
4 39 0.006947855 ubox
4 45 0.006226443 ubox
4 50 0.348171602 ubox
4 53 0.271438444 ubox
5 11 0.445104835 ubox
5 20 0.015772669 ubox
5 21 0.007852935 ubox
5 26 0.005196262 ubox
5 27 0.030769095 ubox
5 36 0.016276274 ubox
5 38 0.006975716 ubox
5 44 0.006515518 ubox
5 49 0.347708420 ubox
5 52 0.272741303 ubox
6 19 0.015882016 ubox
6 25 0.006323482 ubox
6 30 0.003378829 ubox
7 18 0.013657780 ubox
7 29 0.003651225 ubox
7 45 0.332165018 ubox
8 21 0.067725416 ubox
8 27 0.012959785 ubox
8 33 0.013253446 ubox
8 36 0.164776865 ubox
8 44 0.335137479 ubox
8 52 0.165615683 ubox
9 20 0.068353091 ubox
9 26 0.013206833 ubox
9 32 0.013247964 ubox
9 35 0.166132863 ubox
9 38 0.026597725 ubox
9 51 0.167090460 ubox
10 16 0.006767580 ubox
10 17 0.040229798 ubox
10 18 0.010955874 ubox
10 19 0.063898289 ubox
10 23 0.030675749 ubox
10 24 0.006483986 ubox
10 25 0.008981497 ubox
10 29 0.006235812 ubox
10 37 0.038675722 ubox
10 40 0.327299715 ubox
10 41 0.074316325 ubox
10 50 0.049214056 ubox
11 15 0.004853492 ubox
11 16 0.039761878 ubox
11 17 0.014896701 ubox
11 18 0.049818044 ubox
11 22 0.033006099 ubox
11 24 0.007747464 ubox
11 28 0.006755207 ubox
11 37 0.481798982 ubox
11 39 0.339819699 ubox
11 40 0.010251827 ubox
11 45 0.005680980 ubox
11 50 0.006835317 ubox
11 53 0.203222059 ubox
12 20 0.017408453 ubox
12 21 0.032751509 ubox
12 27 0.006466183 ubox
12 36 0.497400485 ubox
12 38 0.339437538 ubox
12 44 0.005677539 ubox
12 49 0.009187279 ubox
12 52 0.203181562 ubox
13 19 0.017968100 ubox
13 30 0.006112144 ubox
14 18 0.013827999 ubox
14 29 0.006530715 ubox
15 34 0.950358770 ubox
15 36 0.013284249 ubox
15 48 0.004885818 ubox
16 20 0.004274002 ubox
16 27 0.011543383 ubox
16 33 0.991704027 ubox
16 35 0.019028768 ubox
16 36 0.044229587 ubox
16 47 0.004976384 ubox
16 51 0.003685457 ubox
16 52 0.020185661 ubox
17 26 0.011715640 ubox
17 32 0.991843697 ubox
17 33 0.029028506 ubox
17 35 0.044980420 ubox
17 44 0.013197881 ubox
17 51 0.020446420 ubox
17 52 0.008301839 ubox
18 31 0.976704274 ubox
18 32 0.029237368 ubox
18 34 0.044757350 ubox
18 43 0.013316493 ubox
18 51 0.007758201 ubox
18 52 0.005212380 ubox
18 55 0.022408637 ubox
19 31 0.040303982 ubox
19 32 0.003407490 ubox
19 33 0.043921394 ubox
19 38 0.006929530 ubox
19 42 0.013271057 ubox
19 51 0.005871921 ubox
19 54 0.024794593 ubox
20 29 0.938649617 ubox
20 30 0.035697613 ubox
20 37 0.038026115 ubox
20 41 0.013088421 ubox
20 50 0.004790140 ubox
20 53 0.024904516 ubox
21 28 0.993067104 ubox
21 29 0.007139995 ubox
21 37 0.008395026 ubox
21 39 0.012258731 ubox
21 40 0.004269085 ubox
21 50 0.058309525 ubox
21 53 0.003445293 ubox
22 27 0.989898685 ubox
22 35 0.088467448 ubox
22 36 0.007296456 ubox
22 38 0.012241585 ubox
22 49 0.058736611 ubox
22 52 0.003375883 ubox
23 33 0.004504812 ubox
23 34 0.089046005 ubox
23 36 0.010682651 ubox
23 48 0.059089997 ubox
24 32 0.007469697 ubox
24 33 0.089122850 ubox
24 35 0.012667691 ubox
24 36 0.003630356 ubox
24 47 0.059164240 ubox
25 31 0.008189992 ubox
25 32 0.087616817 ubox
25 34 0.012676645 ubox
25 35 0.003529548 ubox
25 46 0.057196209 ubox
26 30 0.006912381 ubox
26 37 0.003194352 ubox
26 45 0.040810331 ubox
27 37 0.009380161 ubox
27 45 0.042566127 ubox
28 35 0.005191488 ubox
28 36 0.010083185 ubox
28 44 0.058454537 ubox
29 34 0.004833762 ubox
29 35 0.009930182 ubox
29 43 0.058233833 ubox
30 34 0.007588779 ubox
30 42 0.055033596 ubox
31 40 0.040401238 ubox
32 39 0.040713512 ubox
32 40 0.025671705 ubox
32 41 0.015055244 ubox
33 39 0.026245389 ubox
33 40 0.012011707 ubox
33 41 0.029878172 ubox
34 40 0.030244642 ubox
35 39 0.029654077 ubox
36 45 0.011310332 ubox
36 50 0.005552437 ubox
36 53 0.509991212 ubox
37 44 0.011637915 ubox
37 49 0.005520847 ubox
37 51 0.710351178 ubox
37 52 0.361632636 ubox
38 45 0.022587848 ubox
38 50 0.933192051 ubox
38 53 0.013384169 ubox
39 44 0.023295052 ubox
39 47 0.017160873 ubox
39 49 0.935224537 ubox
39 52 0.013253055 ubox
40 46 0.016432662 ubox
40 48 0.935863147 ubox
40 51 0.011581994 ubox
41 47 0.935477937 ubox
41 51 0.004335903 ubox
44 50 0.006709216 ubox
44 53 0.005987810 ubox
45 49 0.006285728 ubox
45 52 0.005896460 ubox
1 53 0.9500000 lbox
2 52 0.9500000 lbox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
showpage
end
%%EOF
