%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUAGGCGAACUGAGAAUUUUGUGUGCAUUUUCUCCUCAUAAGUGAUACUUAAACGGACACAGUGGAAGAGCUGGAGUGUCUAGUGUGAGCCUGAAUGCUUUGGAGUGUGGAAGAGAUAUUUUUUUUUUUUGAAGGAAUAAUACUAUUACUUUUGAAUGACUCGUGCGAAAAGUCUAAGUUAUCAUUUGAAGACCCAAAUUU\
) } def
/len { sequence length } bind def

/coor [
[-14.68573856 142.95478821]
[-17.09116936 128.14932251]
[-21.61697769 142.45027161]
[-26.14278603 156.75122070]
[-30.66859627 171.05215454]
[-35.19440460 185.35310364]
[-39.72021484 199.65405273]
[-33.63336945 214.49755859]
[-41.56895447 228.44052124]
[-57.43946838 230.78707886]
[-69.07041168 219.73715210]
[-67.53952026 203.76731873]
[-54.02116013 195.12825012]
[-49.49534988 180.82730103]
[-44.96953964 166.52635193]
[-40.44373322 152.22540283]
[-35.91792297 137.92445374]
[-31.39211464 123.62351227]
[-42.22012329 134.00398254]
[-50.43685532 146.55329895]
[-64.35726929 152.14096069]
[-78.97023010 148.75550842]
[-89.01528931 137.61563110]
[-90.87637329 122.73152924]
[-83.88352203 109.46126556]
[-70.55405426 102.58192444]
[-55.68713760 104.56961823]
[-40.75320816 103.16330719]
[-54.53318405 97.23775482]
[-68.31316376 91.31219482]
[-82.09313965 85.38663483]
[-95.87311554 79.46108246]
[-109.65309143 73.53552246]
[-120.94669342 81.44245911]
[-134.56457520 82.72510529]
[-146.93849182 77.15483856]
[-154.87919617 66.28466034]
[-156.39820862 53.01797485]
[-170.08575439 46.88194275]
[-183.77331543 40.74591446]
[-197.46086121 34.60988617]
[-211.14842224 28.47385597]
[-224.83596802 22.33782578]
[-238.26145935 29.89180565]
[-253.38391113 28.11277771]
[-264.42846680 17.89113426]
[-267.30187988 3.30067682]
[-280.98944092 -2.83535266]
[-294.67697144 -8.97138214]
[-308.36453247 -15.10741138]
[-322.05209351 -21.24344063]
[-335.73965454 -27.37947083]
[-349.42718506 -33.51549911]
[-342.54916382 -20.18535995]
[-343.86065674 -5.24280262]
[-352.95556641 6.68541431]
[-367.01782227 11.90588474]
[-381.69320679 8.80216217]
[-392.43771362 -1.66472864]
[-395.92443848 -16.25386047]
[-391.07376099 -30.44791031]
[-379.38766479 -39.85188675]
[-364.48300171 -41.55371857]
[-377.19692993 -49.51333618]
[-389.91088867 -57.47295380]
[-402.62484741 -65.43257141]
[-417.96896362 -61.64667892]
[-431.45254517 -69.89098358]
[-435.07601929 -85.27429199]
[-426.68960571 -98.66996002]
[-411.26885986 -102.13056183]
[-397.96258545 -93.60300446]
[-394.66522217 -78.14651489]
[-381.95126343 -70.18690491]
[-369.23733521 -62.22728729]
[-356.52337646 -54.26766968]
[-343.29116821 -47.20305634]
[-329.60360718 -41.06702423]
[-315.91607666 -34.93099594]
[-302.22851562 -28.79496574]
[-288.54095459 -22.65893555]
[-274.85339355 -16.52290726]
[-261.16583252 -10.38687706]
[-248.36152649 -17.94911957]
[-233.38230896 -16.50450134]
[-221.99281311 -6.39842176]
[-218.69995117 8.65027237]
[-205.01239014 14.78630161]
[-191.32484436 20.92233086]
[-177.63728333 27.05836105]
[-163.94972229 33.19438934]
[-150.26217651 39.33042145]
[-136.29621887 30.70731354]
[-119.77676392 32.12025452]
[-107.22899628 43.20988083]
[-103.72753143 59.75554657]
[-89.94755554 65.68110657]
[-76.16757965 71.60665894]
[-62.38760376 77.53221893]
[-48.60762787 83.45777893]
[-34.82764816 89.38333130]
[-0.44181108 99.27229309]
[14.52253532 98.23868561]
[29.48688126 97.20507812]
[44.45122910 96.17147064]
[59.41557312 95.13786316]
[65.87496185 91.53909302]
[74.61683655 94.20487213]
[89.59526825 93.40070343]
[103.04647064 73.64683533]
[114.54534149 64.01480865]
[126.04421234 54.38277817]
[137.54309082 44.75075150]
[143.15379333 29.95782661]
[157.87879944 27.71654701]
[169.37767029 18.08451843]
[168.44735718 2.70788980]
[176.65374756 -10.11819458]
[190.67321777 -15.58797264]
[205.05313110 -11.79903221]
[216.55200195 -21.43106079]
[228.05088806 -31.06308746]
[239.54975891 -40.69511414]
[251.04862976 -50.32714462]
[262.54748535 -59.95917130]
[274.04635620 -69.59120178]
[285.54522705 -79.22322845]
[297.04409790 -88.85525513]
[299.88256836 -104.64521027]
[314.06533813 -112.14381409]
[328.71258545 -105.59877014]
[332.58819580 -90.03089142]
[322.71917725 -77.38250732]
[306.67614746 -77.35638428]
[295.17727661 -67.72435760]
[283.67840576 -58.09232712]
[272.17953491 -48.46030045]
[260.68066406 -38.82827377]
[249.18177795 -29.19624519]
[237.68290710 -19.56421661]
[226.18403625 -9.93218899]
[214.68516541 -0.30016106]
[215.89425659 14.52131271]
[208.05125427 27.36464119]
[193.98504639 33.19519424]
[179.00970459 29.58338928]
[167.51081848 39.21541595]
[162.72259521 53.31939316]
[147.17510986 56.24962234]
[135.67623901 65.88165283]
[124.17736816 75.51367950]
[112.67849731 85.14570618]
[113.36787415 100.12985992]
[125.70258331 108.66537476]
[138.03727722 117.20088959]
[150.37199402 125.73641205]
[162.70669556 134.27192688]
[175.04139709 142.80744934]
[187.37609863 151.34295654]
[199.71080017 159.87847900]
[212.04551697 168.41400146]
[224.38021851 176.94950867]
[236.90785217 185.19926453]
[249.62179565 193.15887451]
[263.95837402 187.52246094]
[278.69259644 191.36372375]
[288.22692871 203.00677490]
[289.06707764 217.85374451]
[301.78103638 225.81335449]
[317.67529297 223.63352966]
[329.18960571 234.80493164]
[327.49114990 250.75782776]
[313.88284302 259.25451660]
[298.80383301 253.77706909]
[293.82141113 238.52731323]
[281.10745239 230.56768799]
[267.38504028 236.29769897]
[252.74667358 232.80735779]
[242.85479736 221.23133850]
[241.66218567 205.87283325]
[228.94824219 197.91320801]
[225.44436646 198.34545898]
[221.55703735 197.09904480]
[218.07887268 194.01229858]
[215.84469604 189.28422546]
[203.50999451 180.74870300]
[191.17529297 172.21318054]
[178.84059143 163.67767334]
[166.50587463 155.14215088]
[154.17117310 146.60662842]
[141.83647156 138.07112122]
[129.50177002 129.53559875]
[117.16706085 121.00007629]
[104.83235931 112.46456146]
[90.39943695 108.37912750]
[75.42100525 109.18329620]
[60.44918060 110.10221100]
[45.48483276 111.13581848]
[30.52048874 112.16942596]
[15.55614185 113.20303345]
[0.59179604 114.23664093]
[14.41582394 120.05868530]
[19.44133568 134.19177246]
[12.39644909 147.43449402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[28 101]
[29 100]
[30 99]
[31 98]
[32 97]
[33 96]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[43 87]
[47 83]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[63 76]
[64 75]
[65 74]
[66 73]
[102 201]
[103 200]
[104 199]
[105 198]
[106 197]
[108 196]
[109 195]
[110 152]
[111 151]
[112 150]
[113 149]
[115 147]
[116 146]
[120 142]
[121 141]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[153 194]
[154 193]
[155 192]
[156 191]
[157 190]
[158 189]
[159 188]
[160 187]
[161 186]
[162 185]
[163 181]
[164 180]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
