%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGCGCGGGCACGCGGGACUCCCAGCUGUCAAUCAGGCGCGGGCUGAGCUCUACGAGGCGGAGCGGCGGCGGUGGCGACGGCGAUGGGACCCCAGCGAGAGAUCUGCAGCUAGGCUGGCUGCACUUGCUCCACGGGUCAGGGGAUCGGAGGGGGAUUGAAGAAUGCGCCAUUAAAAGGAAAGAUCAAGGAGUAAACCAGAAGAAGAAGAAAAAGAGGACUUCAAAGCUGGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[145.93809509 182.33979797]
[155.67755127 161.39820862]
[144.32952881 151.58889771]
[132.98150635 141.77960205]
[121.63347626 131.97030640]
[110.28545380 122.16100311]
[95.85807037 126.26594543]
[91.37371826 140.57994080]
[86.88936615 154.89395142]
[90.99423218 170.77104187]
[79.10865021 182.06993103]
[63.45949173 177.16729736]
[60.14526749 161.10653687]
[72.57536316 150.40959167]
[77.05971527 136.09559631]
[81.54406738 121.78159332]
[72.11452484 110.11610413]
[57.17851257 111.50012207]
[42.24250031 112.88414764]
[33.42729187 122.28328705]
[20.97103691 123.13780212]
[11.57820034 115.53376007]
[-3.37477946 116.72052002]
[-18.32775879 117.90727234]
[-33.28073883 119.09403229]
[-48.23371887 120.28078461]
[-63.16973114 121.66481018]
[-78.08617401 123.24586487]
[-93.00261688 124.82691956]
[-107.91905975 126.40797424]
[-122.83550262 127.98902893]
[-137.75195312 129.57008362]
[-146.44232178 139.08474731]
[-158.88621521 140.10360718]
[-168.37860107 132.62422180]
[-183.31462097 134.00823975]
[-198.25062561 135.39227295]
[-207.06584167 144.79139709]
[-219.52209473 145.64591980]
[-228.91493225 138.04188538]
[-243.86790466 139.22863770]
[-258.82089233 140.41539001]
[-267.75939941 149.69734192]
[-280.22583008 150.38737488]
[-289.51748657 142.66001892]
[-304.48483276 143.64929199]
[-319.45217896 144.63856506]
[-325.12490845 147.97608948]
[-330.78479004 147.96353149]
[-334.82669067 145.45109558]
[-349.81494141 146.04493713]
[-364.80319214 146.63879395]
[-379.79141235 147.23263550]
[-394.77966309 147.82647705]
[-404.20544434 160.30400085]
[-419.45788574 163.75315857]
[-433.33526611 156.54536438]
[-439.28512573 142.08392334]
[-434.49807739 127.19707489]
[-421.23446655 118.91394043]
[-405.75692749 121.14556122]
[-395.37350464 132.83824158]
[-380.38525391 132.24438477]
[-365.39703369 131.65054321]
[-350.40878296 131.05670166]
[-335.42053223 130.46286011]
[-320.44143677 129.67123413]
[-305.47412109 128.68194580]
[-290.50677490 127.69267273]
[-276.45617676 117.16541290]
[-260.00762939 125.46240997]
[-245.05465698 124.27565765]
[-230.10168457 123.08889771]
[-216.19128418 112.37709808]
[-199.63465881 120.45625305]
[-184.69863892 119.07222748]
[-169.76261902 117.68820190]
[-155.99482727 106.79372406]
[-139.33300781 114.65364075]
[-124.41655731 113.07258606]
[-109.50011444 111.49153137]
[-94.58367157 109.91047668]
[-79.66722870 108.32942200]
[-64.75078583 106.74836731]
[-61.11492157 103.67754364]
[-55.51643753 102.84619141]
[-49.42047501 105.32780457]
[-34.46749496 104.14105225]
[-19.51451492 102.95429230]
[-4.56153488 101.76753998]
[10.39144516 100.58078003]
[24.30184174 89.86898041]
[40.85847473 97.94813538]
[55.79448700 96.56410980]
[70.73049927 95.18008423]
[74.46620178 88.67666626]
[66.93761444 75.70282745]
[81.93760681 75.66981506]
[85.67330933 69.16638947]
[79.34400177 55.56712723]
[65.61414337 46.59924316]
[66.78567505 30.24199677]
[81.65342712 23.32231712]
[94.92272949 32.95858002]
[92.94326782 49.23782349]
[99.27256775 62.83708572]
[113.77839661 59.01858902]
[112.59164429 44.06560898]
[111.40488434 29.11262894]
[110.21813202 14.15964890]
[109.03137207 -0.79333150]
[107.84461975 -15.74631119]
[106.65785980 -30.69929123]
[105.47110748 -45.65227127]
[98.19057465 -60.96338654]
[110.88787079 -72.19792938]
[125.19832611 -63.10687637]
[120.42408752 -46.83902740]
[121.61083984 -31.88604736]
[122.79759979 -16.93306732]
[123.98435211 -1.98008716]
[125.17111206 12.97289276]
[126.35786438 27.92587280]
[127.54462433 42.87885284]
[128.73138428 57.83183289]
[143.26208496 61.55450821]
[151.49246216 49.01413727]
[159.72283936 36.47376633]
[160.82630920 20.69108963]
[174.27824402 14.29616928]
[182.50862122 1.75579882]
[190.73899841 -10.78457165]
[198.96937561 -23.32494164]
[199.26580811 -28.49965477]
[201.30392456 -32.63741302]
[204.40162659 -35.25037003]
[207.78208923 -36.18991852]
[216.50247192 -48.39462280]
[225.22286987 -60.59932327]
[233.94325256 -72.80402374]
[234.98880005 -89.16980743]
[249.80282593 -96.20376587]
[263.14593506 -86.66996765]
[261.29190063 -70.37596893]
[246.14796448 -64.08363342]
[237.42756653 -51.87893295]
[228.70718384 -39.67422867]
[219.98678589 -27.46952820]
[211.50973511 -15.09456539]
[203.27935791 -2.55419493]
[195.04898071 9.98617554]
[186.81860352 22.52654648]
[186.30383301 37.41225433]
[172.26321411 44.70414352]
[164.03283691 57.24451447]
[155.80245972 69.78488922]
[169.03747559 62.72552872]
[182.27247620 55.66617203]
[193.12098694 66.02521515]
[198.62060547 79.98065186]
[197.75587463 94.95570374]
[190.68644714 108.18534088]
[178.71765137 117.22679901]
[164.05944824 120.41063690]
[149.41806030 117.14885712]
[134.75640869 113.98091888]
[120.09475708 110.81298065]
[131.44277954 120.62227631]
[142.79080200 130.43157959]
[154.13882446 140.24087524]
[165.48684692 150.05018616]
[171.78634644 144.85992432]
[178.64984131 140.44561768]
[185.98229980 136.86791992]
[193.68222046 134.17585754]
[201.64311218 132.40626526]
[209.75486755 131.58316040]
[217.90542603 131.71749878]
[225.98214722 132.80702209]
[233.87353516 134.83627319]
[241.47067261 137.77679443]
[248.66873169 141.58758545]
[255.36846924 146.21563721]
[261.47756958 151.59666443]
[266.91192627 157.65602112]
[271.59671021 164.30970764]
[275.46762085 171.46557617]
[278.47149658 179.02456665]
[280.56723022 186.88209534]
[281.72625732 194.92948914]
[281.93301392 203.05552673]
[281.18499756 211.14793396]
[279.49304199 219.09495544]
[276.88082886 226.78686523]
[273.38491821 234.11755371]
[269.05395508 240.98590088]
[263.94812012 247.29727173]
[258.13827515 252.96470642]
[266.69680786 265.28344727]
[275.25534058 277.60220337]
[283.81387329 289.92092896]
[297.66342163 288.03088379]
[310.91415405 292.26831055]
[321.00082397 301.75314331]
[325.99645996 314.59521484]
[324.98052979 328.27090454]
[318.20779419 340.11904907]
[326.60296631 352.54968262]
[334.99816895 364.98031616]
[343.39334106 377.41094971]
[358.70834351 376.25054932]
[372.54473877 382.91760254]
[381.18066406 395.61865234]
[382.29302979 410.93719482]
[375.58267212 424.75265503]
[362.85461426 433.34869385]
[347.53265381 434.41305542]
[333.73831177 427.65942383]
[325.18218994 414.90447998]
[324.16586304 399.57925415]
[330.96270752 385.80615234]
[322.56750488 373.37551880]
[314.17233276 360.94485474]
[305.77713013 348.51422119]
[289.68206787 350.04229736]
[274.92990112 343.20077515]
[265.59179688 329.77325439]
[264.29748535 313.37493896]
[271.49514771 298.47949219]
[262.93661499 286.16073608]
[254.37806702 273.84197998]
[245.81953430 261.52325439]
[224.10760498 269.04339600]
[201.11332703 269.02514648]
[179.38145447 261.45950317]
[161.32061768 247.17323303]
[148.93644714 227.73867798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 171]
[3 170]
[4 169]
[5 168]
[6 167]
[7 16]
[8 15]
[9 14]
[17 95]
[18 94]
[19 93]
[22 91]
[23 90]
[24 89]
[25 88]
[26 87]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[32 79]
[35 77]
[36 76]
[37 75]
[40 73]
[41 72]
[42 71]
[45 69]
[46 68]
[47 67]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[99 106]
[100 105]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[114 118]
[126 156]
[127 155]
[128 154]
[130 152]
[131 151]
[132 150]
[133 149]
[137 148]
[138 147]
[139 146]
[140 145]
[198 232]
[199 231]
[200 230]
[201 229]
[207 224]
[208 223]
[209 222]
[210 221]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
