%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUCAGGCGGAGGCAAGCUCAGAGCGCACGGACAGAGCGGUAGCGCGCGCCCGCGCGCGUUCUUAGUACUCUCCCCGGUGACGUGCCUGACCGAGGCCGCGCCAGGGCGCUGUUGCUGCCAAUACAGCUGUCAUGGCGUCCAAGGCGCUGGCUGCGGAGAAGUGGCCGCGGUCUCCAUAGAGCUGGGGGCGGGCGGCCCGGU\
) } def
/len { sequence length } bind def

/coor [
[56.59436798 116.77375793]
[41.91423798 119.85494995]
[27.23410606 122.93614197]
[12.57801533 126.12972260]
[-2.05317616 129.43551636]
[-16.68436623 132.74130249]
[-31.31555748 136.04710388]
[-45.89437103 139.57670593]
[-60.41738510 143.32931519]
[-67.94754028 148.50846863]
[-75.19171906 147.02633667]
[-89.77053833 150.55595398]
[-104.34934998 154.08557129]
[-118.92816162 157.61518860]
[-133.50697327 161.14479065]
[-139.15402222 173.37599182]
[-150.64749146 180.02323914]
[-163.67765808 178.85290527]
[-173.50575256 170.51567078]
[-188.13693237 173.82145691]
[-202.76812744 177.12725830]
[-214.52380371 187.71568298]
[-228.64334106 182.97352600]
[-243.27452087 186.27932739]
[-257.90573120 189.58511353]
[-272.53689575 192.89089966]
[-287.16809082 196.19668579]
[-301.79928589 199.50248718]
[-316.43048096 202.80827332]
[-328.18615723 213.39669800]
[-342.30569458 208.65455627]
[-356.93688965 211.96034241]
[-359.58462524 225.84584045]
[-367.30206299 237.63719177]
[-378.89602661 245.57167053]
[-392.59686279 248.47819519]
[-406.32849121 245.95011902]
[-418.02304077 238.40173340]
[-425.93225098 227.00079346]
[-440.61239624 230.08198547]
[-455.29251099 233.16317749]
[-463.72305298 246.53111267]
[-479.15512085 249.94085693]
[-492.43319702 241.36947632]
[-495.67959595 225.90220642]
[-486.96829224 212.71551514]
[-471.46755981 209.63282776]
[-458.37371826 218.48304749]
[-443.69357300 215.40185547]
[-429.01345825 212.32066345]
[-425.48428345 196.73779297]
[-415.47729492 184.20768738]
[-400.95565796 177.26979065]
[-384.80386353 177.35841370]
[-370.25479126 184.50656128]
[-360.24267578 197.32914734]
[-345.61148071 194.02336121]
[-334.90231323 183.67138672]
[-319.73626709 188.17707825]
[-305.10507202 184.87129211]
[-290.47387695 181.56550598]
[-275.84271240 178.25970459]
[-261.21151733 174.95391846]
[-246.58032227 171.64813232]
[-231.94912720 168.34234619]
[-221.23997498 157.99037170]
[-206.07391357 162.49606323]
[-191.44273376 159.19027710]
[-176.81153870 155.88447571]
[-168.45088196 141.29454041]
[-151.79766846 137.18244934]
[-137.03659058 146.56597900]
[-122.45777893 143.03636169]
[-107.87896729 139.50675964]
[-93.30014801 135.97714233]
[-78.72133636 132.44752502]
[-64.16999817 128.80630493]
[-49.64698029 125.05369568]
[-46.49147797 121.46298981]
[-41.04506302 119.81931305]
[-34.62134933 121.41590881]
[-19.99015808 118.11011505]
[-5.35896635 114.80432129]
[9.27222443 111.49853516]
[15.10655785 106.95591736]
[24.15291595 108.25601196]
[38.83304596 105.17481995]
[53.51317978 102.09362793]
[56.95735931 82.31557465]
[68.41279602 65.82901764]
[85.74736023 55.70248413]
[105.73467255 53.82077026]
[124.65463257 60.53410721]
[134.54841614 49.25966644]
[144.44221497 37.98522949]
[147.72901917 22.50920105]
[161.93933105 18.04642487]
[171.83311462 6.77198553]
[181.72691345 -4.50245333]
[191.62069702 -15.77689171]
[201.42781067 -27.12681007]
[211.14765930 -38.55154037]
[220.86750793 -49.97626877]
[230.58737183 -61.40100098]
[240.30722046 -72.82572937]
[243.20466614 -91.00828552]
[259.94946289 -96.25307465]
[269.49310303 -107.82541656]
[279.03671265 -119.39775085]
[288.58035278 -130.97009277]
[298.12399292 -142.54243469]
[307.66763306 -154.11476135]
[317.21127319 -165.68710327]
[326.75491333 -177.25944519]
[336.29855347 -188.83177185]
[338.53964233 -210.14045715]
[358.15469360 -216.55221558]
[367.15640259 -228.55093384]
[376.15811157 -240.54965210]
[385.15982056 -252.54837036]
[382.67913818 -268.15676880]
[392.02932739 -280.89840698]
[407.66305542 -283.21392822]
[420.30514526 -273.72955322]
[422.45526123 -258.07220459]
[412.83773804 -245.53111267]
[397.15853882 -243.54666138]
[388.15682983 -231.54794312]
[379.15512085 -219.54922485]
[370.15341187 -207.55050659]
[372.82467651 -199.07440186]
[371.26965332 -190.18470764]
[365.71292114 -182.89976501]
[357.30169678 -178.93243408]
[347.87088013 -179.28814697]
[338.32723999 -167.71580505]
[328.78359985 -156.14346313]
[319.23995972 -144.57112122]
[309.69635010 -132.99879456]
[300.15270996 -121.42645264]
[290.60906982 -109.85411835]
[281.06542969 -98.28177643]
[271.52178955 -86.70944214]
[272.36547852 -74.63935852]
[264.50509644 -64.91956329]
[251.73194885 -63.10587692]
[242.01210022 -51.68114471]
[232.29223633 -40.25641632]
[222.57238770 -28.83168602]
[212.85253906 -17.40695572]
[210.91165161 -10.27198505]
[202.89514160 -5.88310480]
[193.00134277 5.39133406]
[183.10755920 16.66577339]
[173.21377563 27.94021225]
[170.63462830 42.60981369]
[155.71664429 47.87901688]
[145.82286072 59.15345383]
[135.92907715 70.42789459]
[141.16035461 78.29210663]
[144.69589233 87.05065918]
[146.38999939 96.34270477]
[146.17289734 105.78543091]
[144.05352783 114.98980713]
[140.11920166 123.57661438]
[134.53202820 131.19209290]
[143.89720154 142.90933228]
[153.26237488 154.62655640]
[162.62756348 166.34378052]
[171.99273682 178.06100464]
[181.35791016 189.77824402]
[198.65623474 196.08447266]
[200.61703491 213.52154541]
[210.16067505 225.09388733]
[219.70429993 236.66621399]
[229.24794006 248.23855591]
[238.79158020 259.81088257]
[248.33522034 271.38323975]
[257.87884521 282.95556641]
[273.63269043 284.21731567]
[283.81640625 296.30316162]
[282.38815308 312.04278564]
[270.19531250 322.09814453]
[254.47167969 320.50357056]
[244.54579163 308.20510864]
[246.30651855 292.49920654]
[236.76287842 280.92687988]
[227.21923828 269.35452271]
[217.67559814 257.78219604]
[208.13197327 246.20985413]
[198.58833313 234.63751221]
[189.04469299 223.06518555]
[177.03475952 221.59541321]
[168.98930359 212.02824402]
[169.64068604 199.14341736]
[160.27551270 187.42619324]
[150.91033936 175.70896912]
[141.54515076 163.99172974]
[132.17997742 152.27450562]
[122.81479645 140.55728149]
[110.45790100 145.34358215]
[97.25293732 146.45278931]
[84.27074432 143.79495239]
[72.56409454 137.58561707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[3 86]
[4 84]
[5 83]
[6 82]
[7 81]
[8 78]
[9 77]
[11 76]
[12 75]
[13 74]
[14 73]
[15 72]
[19 69]
[20 68]
[21 67]
[23 65]
[24 64]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[31 57]
[32 56]
[39 50]
[40 49]
[41 48]
[93 159]
[94 158]
[95 157]
[97 155]
[98 154]
[99 153]
[100 152]
[101 150]
[102 149]
[103 148]
[104 147]
[105 146]
[107 143]
[108 142]
[109 141]
[110 140]
[111 139]
[112 138]
[113 137]
[114 136]
[115 135]
[117 130]
[118 129]
[119 128]
[120 127]
[166 200]
[167 199]
[168 198]
[169 197]
[170 196]
[171 195]
[173 192]
[174 191]
[175 190]
[176 189]
[177 188]
[178 187]
[179 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
