%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FCGR1B)
} def

/sequence { (\
AAUAUCUUGCAUGUUACAGAUUUCACUACUCCCACCAGCUUGGAGACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.026306470 ubox
1 15 0.296510234 ubox
1 22 0.032272207 ubox
1 23 0.089597458 ubox
2 7 0.024366639 ubox
2 12 0.025814772 ubox
2 14 0.328928690 ubox
2 21 0.032546162 ubox
2 22 0.104972693 ubox
3 9 0.016150678 ubox
3 11 0.025975267 ubox
3 13 0.331501943 ubox
3 16 0.027113175 ubox
3 20 0.025823436 ubox
3 28 0.015305281 ubox
4 8 0.015246174 ubox
4 12 0.330003143 ubox
4 14 0.015794471 ubox
4 15 0.028912406 ubox
4 21 0.547852895 ubox
4 27 0.014187983 ubox
5 11 0.314538352 ubox
5 13 0.016374352 ubox
5 20 0.599242605 ubox
5 43 0.042059805 ubox
5 44 0.090457154 ubox
5 46 0.140453963 ubox
6 19 0.607570569 ubox
6 38 0.003737019 ubox
6 42 0.065163426 ubox
6 43 0.096469777 ubox
6 45 0.153607597 ubox
7 18 0.507826086 ubox
7 19 0.160702437 ubox
7 20 0.026324852 ubox
7 37 0.003404994 ubox
7 38 0.006964372 ubox
7 42 0.095087837 ubox
7 43 0.003994658 ubox
7 44 0.149387351 ubox
7 45 0.039116829 ubox
7 46 0.005087833 ubox
7 49 0.039654190 ubox
8 16 0.176047791 ubox
8 18 0.361480784 ubox
8 19 0.026829180 ubox
8 25 0.044756289 ubox
8 28 0.012574884 ubox
8 34 0.011435473 ubox
8 37 0.009212766 ubox
8 42 0.006042810 ubox
8 43 0.138518376 ubox
8 44 0.056277825 ubox
8 45 0.004561084 ubox
8 48 0.046372723 ubox
9 15 0.169433539 ubox
9 17 0.477592387 ubox
9 24 0.050070042 ubox
9 27 0.013010051 ubox
9 33 0.012818155 ubox
9 36 0.009559945 ubox
9 39 0.142455728 ubox
9 47 0.047222503 ubox
10 38 0.142398931 ubox
10 42 0.128980326 ubox
11 21 0.050334723 ubox
11 41 0.127729820 ubox
12 18 0.021614391 ubox
12 20 0.053745876 ubox
12 25 0.071011139 ubox
12 28 0.010748591 ubox
12 34 0.037335920 ubox
12 37 0.086123360 ubox
12 48 0.117578197 ubox
13 17 0.021108649 ubox
13 21 0.062183270 ubox
13 24 0.081322014 ubox
13 26 0.058154008 ubox
13 27 0.009077726 ubox
13 29 0.051711228 ubox
13 33 0.037757547 ubox
13 35 0.093696902 ubox
13 36 0.084509241 ubox
13 39 0.137302359 ubox
13 47 0.130536692 ubox
13 50 0.020754795 ubox
14 20 0.065257337 ubox
14 25 0.055512722 ubox
14 28 0.051282000 ubox
14 34 0.092264067 ubox
14 38 0.136524444 ubox
14 45 0.006134474 ubox
14 46 0.128423930 ubox
14 49 0.020933548 ubox
15 19 0.059462109 ubox
15 28 0.018202746 ubox
15 37 0.121016216 ubox
15 44 0.005509753 ubox
15 45 0.078962811 ubox
15 48 0.019435705 ubox
16 27 0.017757746 ubox
17 42 0.049062714 ubox
18 27 0.168953669 ubox
18 30 0.087664273 ubox
18 40 0.013529025 ubox
18 41 0.046880910 ubox
19 26 0.176408137 ubox
19 29 0.090789405 ubox
19 31 0.088324092 ubox
19 39 0.018006327 ubox
19 40 0.039829691 ubox
19 41 0.008307106 ubox
20 30 0.084301480 ubox
20 40 0.008248851 ubox
21 38 0.015493866 ubox
21 44 0.003808579 ubox
21 45 0.026453496 ubox
21 46 0.036753270 ubox
21 49 0.010031376 ubox
22 37 0.013702934 ubox
22 38 0.005496524 ubox
22 44 0.046012058 ubox
22 45 0.042274081 ubox
22 46 0.008556515 ubox
22 48 0.012025399 ubox
22 49 0.022466165 ubox
23 37 0.005331862 ubox
23 43 0.047291012 ubox
23 44 0.044855616 ubox
23 45 0.003964659 ubox
23 46 0.028038511 ubox
23 48 0.024705629 ubox
24 42 0.048028335 ubox
24 43 0.044572511 ubox
24 45 0.027958569 ubox
25 41 0.045201556 ubox
26 38 0.020636101 ubox
26 43 0.025253341 ubox
26 45 0.034929835 ubox
27 37 0.020079480 ubox
27 42 0.025300671 ubox
27 44 0.033976780 ubox
28 41 0.022706477 ubox
29 38 0.058915109 ubox
29 43 0.007291259 ubox
29 45 0.850918763 ubox
30 37 0.055918472 ubox
30 42 0.006534339 ubox
30 44 0.856637061 ubox
30 46 0.355148129 ubox
31 42 0.004379027 ubox
31 43 0.810938398 ubox
31 45 0.383885515 ubox
32 42 0.760239912 ubox
32 43 0.521470259 ubox
33 42 0.590954449 ubox
34 41 0.588175936 ubox
35 43 0.118068586 ubox
36 42 0.119337646 ubox
37 41 0.098847128 ubox
39 45 0.007474357 ubox
40 44 0.006776203 ubox
40 49 0.063284551 ubox
41 48 0.074245909 ubox
42 47 0.075919727 ubox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
showpage
end
%%EOF
