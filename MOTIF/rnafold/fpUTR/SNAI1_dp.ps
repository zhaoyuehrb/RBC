%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SNAI1)
} def

/sequence { (\
AUUCAUUGCGCCGCGGCACGGCCUAGCGAGUGGUUCUUCUGCGCUACUGCUGCGCGAAUCGGCGACCCCAGUGCCUCGACCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 31 0.062401217 ubox
1 59 0.029780681 ubox
1 72 0.032526739 ubox
2 29 0.015567738 ubox
2 30 0.070330872 ubox
2 58 0.035287277 ubox
2 71 0.033643779 ubox
2 79 0.031790514 ubox
3 21 0.004924999 ubox
3 28 0.014378501 ubox
3 29 0.291397893 ubox
3 33 0.016206080 ubox
3 57 0.036263563 ubox
3 62 0.005367418 ubox
3 65 0.006371546 ubox
3 70 0.031800387 ubox
3 78 0.034798599 ubox
3 79 0.032609450 ubox
4 20 0.007185400 ubox
4 28 0.366764474 ubox
4 32 0.022934195 ubox
4 56 0.035601041 ubox
4 61 0.007881159 ubox
4 64 0.006266179 ubox
4 73 0.418562370 ubox
4 78 0.033987102 ubox
5 31 0.023416609 ubox
5 34 0.003295053 ubox
5 59 0.064371487 ubox
5 72 0.423578479 ubox
6 16 0.003420556 ubox
6 21 0.010554848 ubox
6 26 0.372368820 ubox
6 29 0.382679332 ubox
6 30 0.021362222 ubox
6 33 0.003434254 ubox
6 57 0.171677508 ubox
6 58 0.067676884 ubox
6 62 0.004250291 ubox
6 65 0.009352315 ubox
6 71 0.423629046 ubox
6 79 0.009106400 ubox
7 15 0.006830776 ubox
7 18 0.030041253 ubox
7 20 0.016234730 ubox
7 25 0.384995600 ubox
7 28 0.541976186 ubox
7 29 0.028484863 ubox
7 32 0.003390448 ubox
7 54 0.004117987 ubox
7 56 0.186111765 ubox
7 57 0.067124244 ubox
7 61 0.004321774 ubox
7 64 0.007369829 ubox
7 70 0.423738532 ubox
7 78 0.009860022 ubox
7 82 0.050166188 ubox
8 14 0.023018905 ubox
8 17 0.033739653 ubox
8 19 0.018692170 ubox
8 22 0.004303352 ubox
8 24 0.380063580 ubox
8 27 0.610371142 ubox
8 31 0.006379043 ubox
8 53 0.005093272 ubox
8 55 0.198175250 ubox
8 60 0.009311380 ubox
8 63 0.007091780 ubox
8 69 0.423799206 ubox
8 74 0.012393641 ubox
8 77 0.009976040 ubox
8 81 0.056343303 ubox
9 13 0.022873922 ubox
9 16 0.033700190 ubox
9 21 0.004181392 ubox
9 26 0.610072934 ubox
9 28 0.229877100 ubox
9 30 0.006806852 ubox
9 32 0.013473256 ubox
9 52 0.005073925 ubox
9 54 0.198205400 ubox
9 56 0.114748029 ubox
9 62 0.006741771 ubox
9 64 0.493418516 ubox
9 73 0.012269177 ubox
9 78 0.009214499 ubox
10 14 0.003348410 ubox
10 17 0.021611704 ubox
10 22 0.730854239 ubox
10 27 0.232947532 ubox
10 31 0.016166724 ubox
10 34 0.005837250 ubox
10 53 0.197721738 ubox
10 55 0.116274275 ubox
10 60 0.003460041 ubox
10 63 0.496269916 ubox
10 72 0.010743111 ubox
10 77 0.008958171 ubox
11 16 0.021610309 ubox
11 21 0.731401103 ubox
11 26 0.232613869 ubox
11 30 0.016633745 ubox
11 33 0.006113056 ubox
11 52 0.197395141 ubox
11 54 0.082244383 ubox
11 62 0.496284583 ubox
11 71 0.010715039 ubox
12 20 0.731394788 ubox
12 28 0.199427981 ubox
12 32 0.006123763 ubox
12 43 0.013321519 ubox
12 52 0.005266491 ubox
12 54 0.084687794 ubox
12 56 0.013681489 ubox
12 61 0.496218388 ubox
12 64 0.008557690 ubox
12 78 0.217333670 ubox
13 19 0.722785814 ubox
13 22 0.175090817 ubox
13 27 0.201472132 ubox
13 31 0.006136019 ubox
13 42 0.015434293 ubox
13 50 0.193530344 ubox
13 53 0.118905958 ubox
13 55 0.016874969 ubox
13 60 0.492985880 ubox
13 63 0.008591699 ubox
13 77 0.219392905 ubox
14 20 0.014041758 ubox
14 21 0.174997878 ubox
14 26 0.200597944 ubox
14 30 0.006136001 ubox
14 33 0.004115034 ubox
14 41 0.015440368 ubox
14 49 0.193622333 ubox
14 52 0.119074752 ubox
14 54 0.017400716 ubox
14 56 0.116255499 ubox
14 61 0.003798915 ubox
14 62 0.008101984 ubox
14 78 0.003181933 ubox
15 19 0.016399324 ubox
15 23 0.296291845 ubox
15 24 0.015154716 ubox
15 40 0.015431774 ubox
15 45 0.028860595 ubox
15 48 0.178554727 ubox
15 51 0.119846566 ubox
15 53 0.014624980 ubox
15 55 0.094173137 ubox
15 60 0.006926335 ubox
15 75 0.222224436 ubox
16 22 0.297370309 ubox
16 23 0.015527196 ubox
16 27 0.010733519 ubox
16 31 0.004176880 ubox
16 39 0.015395362 ubox
16 42 0.004548459 ubox
16 44 0.033511280 ubox
16 47 0.177577190 ubox
16 50 0.119960202 ubox
16 53 0.064151738 ubox
16 55 0.485183272 ubox
16 59 0.008171167 ubox
16 74 0.222325984 ubox
17 21 0.295281816 ubox
17 26 0.010804392 ubox
17 30 0.004223802 ubox
17 32 0.004291204 ubox
17 41 0.005116303 ubox
17 43 0.034579567 ubox
17 49 0.119542823 ubox
17 52 0.064631652 ubox
17 54 0.490033629 ubox
17 73 0.222326051 ubox
18 31 0.004338119 ubox
18 40 0.004985347 ubox
18 48 0.110395005 ubox
18 51 0.061724999 ubox
18 72 0.222170719 ubox
19 28 0.028437800 ubox
19 30 0.004334477 ubox
19 41 0.034713121 ubox
19 43 0.005950668 ubox
19 49 0.060277650 ubox
19 52 0.490285711 ubox
19 54 0.005000141 ubox
19 56 0.018964773 ubox
19 71 0.221654580 ubox
20 27 0.028867343 ubox
20 35 0.019767091 ubox
20 36 0.006887999 ubox
20 40 0.034260499 ubox
20 42 0.005718802 ubox
20 45 0.171013918 ubox
20 48 0.068469188 ubox
20 51 0.491143982 ubox
20 53 0.004970122 ubox
20 55 0.016602358 ubox
20 67 0.045472920 ubox
20 68 0.054865369 ubox
20 69 0.192053178 ubox
20 75 0.003398592 ubox
21 27 0.020711647 ubox
21 34 0.025152136 ubox
21 35 0.005032068 ubox
21 39 0.033544722 ubox
21 42 0.012526492 ubox
21 44 0.173967204 ubox
21 47 0.076251099 ubox
21 50 0.491928214 ubox
21 53 0.021353466 ubox
21 55 0.051337841 ubox
21 63 0.011120627 ubox
21 66 0.045310645 ubox
21 67 0.055136591 ubox
21 68 0.191219092 ubox
21 74 0.003406473 ubox
22 26 0.020899590 ubox
22 33 0.028254494 ubox
22 41 0.012529982 ubox
22 43 0.173897060 ubox
22 49 0.491310656 ubox
22 52 0.023250755 ubox
22 54 0.052488132 ubox
22 62 0.013346556 ubox
22 73 0.003402810 ubox
23 30 0.003232856 ubox
23 32 0.028273118 ubox
23 33 0.004572807 ubox
23 61 0.013320875 ubox
24 29 0.003667656 ubox
24 32 0.004625086 ubox
24 41 0.161731239 ubox
24 46 0.493641432 ubox
24 52 0.149091909 ubox
25 31 0.005305174 ubox
25 35 0.029224150 ubox
25 37 0.003642256 ubox
25 38 0.004161445 ubox
25 40 0.164906132 ubox
25 45 0.511960009 ubox
25 48 0.015380568 ubox
25 51 0.167862221 ubox
26 34 0.032658425 ubox
26 36 0.003558717 ubox
26 37 0.004122170 ubox
26 39 0.164730472 ubox
26 42 0.053156799 ubox
26 44 0.513619540 ubox
26 47 0.016495702 ubox
26 50 0.169961744 ubox
26 53 0.003947792 ubox
26 55 0.010381676 ubox
26 63 0.121870167 ubox
27 33 0.033173715 ubox
27 41 0.053152016 ubox
27 43 0.513512329 ubox
27 49 0.169788379 ubox
27 52 0.004066210 ubox
27 54 0.010387464 ubox
27 61 0.015402914 ubox
27 62 0.121211556 ubox
27 64 0.078604653 ubox
27 78 0.003919593 ubox
28 35 0.012610032 ubox
28 36 0.040673950 ubox
28 38 0.158563557 ubox
28 39 0.038698596 ubox
28 40 0.023911252 ubox
28 42 0.498822241 ubox
28 48 0.083845162 ubox
28 51 0.003299776 ubox
28 53 0.010344746 ubox
28 60 0.019455488 ubox
28 63 0.078454687 ubox
28 77 0.004061610 ubox
29 34 0.012917399 ubox
29 35 0.040071014 ubox
29 37 0.168381063 ubox
29 38 0.039159464 ubox
29 40 0.465891179 ubox
29 45 0.021927664 ubox
29 48 0.152979009 ubox
29 51 0.010768891 ubox
29 59 0.018835959 ubox
29 76 0.003952566 ubox
29 84 0.590021953 ubox
30 34 0.027205457 ubox
30 36 0.168899591 ubox
30 37 0.031574457 ubox
30 39 0.467461101 ubox
30 42 0.109874098 ubox
30 44 0.022382438 ubox
30 47 0.175218205 ubox
30 50 0.010885465 ubox
30 59 0.007893601 ubox
30 63 0.009288413 ubox
30 66 0.018797318 ubox
30 83 0.800978622 ubox
31 41 0.128743763 ubox
31 43 0.022266794 ubox
31 46 0.175179580 ubox
31 49 0.010858100 ubox
31 58 0.007078063 ubox
31 61 0.138736857 ubox
31 62 0.006802430 ubox
31 65 0.018813590 ubox
31 82 0.802477942 ubox
32 38 0.041813896 ubox
32 39 0.090420875 ubox
32 40 0.167068687 ubox
32 42 0.021474478 ubox
32 45 0.175152651 ubox
32 48 0.010816101 ubox
32 60 0.148987554 ubox
32 67 0.011366841 ubox
32 81 0.804857292 ubox
33 37 0.032394822 ubox
33 38 0.084169254 ubox
33 39 0.170223456 ubox
33 42 0.011574740 ubox
33 44 0.175164843 ubox
33 47 0.010855337 ubox
33 59 0.149680754 ubox
33 63 0.019044726 ubox
33 66 0.011410392 ubox
33 80 0.804803895 ubox
33 83 0.003959561 ubox
34 41 0.013837647 ubox
34 43 0.173640310 ubox
34 46 0.010704563 ubox
34 58 0.149865485 ubox
34 62 0.018787388 ubox
34 65 0.011186901 ubox
34 79 0.766521979 ubox
34 82 0.003780009 ubox
35 57 0.150226472 ubox
35 61 0.016394856 ubox
35 62 0.003780278 ubox
35 64 0.010504507 ubox
35 65 0.003398516 ubox
35 78 0.685486859 ubox
35 79 0.223572427 ubox
36 56 0.148208661 ubox
36 61 0.008232776 ubox
36 62 0.009071116 ubox
36 64 0.004142845 ubox
36 78 0.316130600 ubox
37 57 0.038365920 ubox
37 58 0.508605865 ubox
37 61 0.008348958 ubox
37 79 0.006867006 ubox
38 56 0.031076463 ubox
38 57 0.584151764 ubox
38 62 0.003647756 ubox
38 78 0.010543695 ubox
38 79 0.030848590 ubox
39 56 0.582005545 ubox
39 61 0.004223965 ubox
39 71 0.004895142 ubox
39 78 0.040512300 ubox
40 54 0.106981476 ubox
40 56 0.402267227 ubox
40 70 0.004820562 ubox
40 78 0.022845762 ubox
41 50 0.006996931 ubox
41 53 0.112034369 ubox
41 55 0.776346804 ubox
41 69 0.004506801 ubox
41 72 0.003804069 ubox
41 74 0.214338576 ubox
41 77 0.040404619 ubox
42 49 0.007006812 ubox
42 52 0.112004954 ubox
42 54 0.776741600 ubox
42 56 0.006906300 ubox
42 71 0.003815271 ubox
42 73 0.214488559 ubox
42 78 0.014203277 ubox
43 48 0.004759807 ubox
43 50 0.110257754 ubox
43 51 0.025475855 ubox
43 53 0.776664092 ubox
43 55 0.007041516 ubox
43 72 0.207588032 ubox
43 74 0.098905258 ubox
43 77 0.015056671 ubox
44 49 0.112804363 ubox
44 52 0.776390258 ubox
44 54 0.007035587 ubox
44 71 0.205795668 ubox
44 73 0.097244544 ubox
45 52 0.013467069 ubox
45 70 0.195315399 ubox
45 73 0.032110511 ubox
46 51 0.058935885 ubox
46 72 0.113756126 ubox
47 71 0.118828494 ubox
48 56 0.003926804 ubox
48 64 0.050905820 ubox
48 70 0.124716908 ubox
49 55 0.004792314 ubox
49 63 0.055860743 ubox
49 69 0.130118042 ubox
49 72 0.008392910 ubox
50 54 0.004760064 ubox
50 62 0.055875183 ubox
50 71 0.008898149 ubox
51 61 0.055654100 ubox
51 64 0.081100830 ubox
51 70 0.009805292 ubox
52 60 0.054618956 ubox
52 63 0.091153615 ubox
52 69 0.010685096 ubox
52 74 0.003451017 ubox
53 61 0.006425608 ubox
53 62 0.091058133 ubox
53 64 0.264303905 ubox
53 73 0.003466182 ubox
54 60 0.008041063 ubox
54 63 0.266303906 ubox
54 72 0.003470467 ubox
55 61 0.057236944 ubox
55 62 0.265942062 ubox
55 64 0.006494346 ubox
55 71 0.003471712 ubox
55 78 0.030641680 ubox
56 60 0.060514349 ubox
56 63 0.007679102 ubox
56 77 0.112821712 ubox
57 76 0.112244943 ubox
58 72 0.007270388 ubox
59 65 0.004187641 ubox
59 71 0.007435240 ubox
59 79 0.066806408 ubox
60 64 0.004561813 ubox
60 73 0.004496097 ubox
60 78 0.080585541 ubox
61 67 0.019950390 ubox
61 68 0.028852575 ubox
61 69 0.035663015 ubox
61 72 0.003343574 ubox
61 75 0.798924970 ubox
61 76 0.015397585 ubox
61 77 0.046098426 ubox
61 81 0.059106617 ubox
62 66 0.019690064 ubox
62 67 0.028618707 ubox
62 68 0.035472880 ubox
62 72 0.012286367 ubox
62 74 0.800624516 ubox
62 75 0.031899797 ubox
62 76 0.013951214 ubox
62 80 0.059167902 ubox
63 71 0.013824262 ubox
63 73 0.800171709 ubox
63 78 0.059670698 ubox
64 72 0.560526140 ubox
64 77 0.059785349 ubox
65 72 0.507032441 ubox
65 76 0.056119515 ubox
66 71 0.624020715 ubox
70 76 0.008851004 ubox
70 84 0.204748243 ubox
71 75 0.009699311 ubox
71 80 0.057126000 ubox
71 83 0.227877983 ubox
72 78 0.006319786 ubox
72 79 0.056887056 ubox
72 82 0.227904996 ubox
73 77 0.009590320 ubox
73 81 0.226998895 ubox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
showpage
end
%%EOF
