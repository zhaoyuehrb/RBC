%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TARSL2)
} def

/sequence { (\
CCCUCGCCGCAGUCGCGGGCACCCCGCUCGGCGUCGGUGCCUGAGGGAGGCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 37 0.248601796 ubox
1 46 0.003810947 ubox
1 47 0.582717670 ubox
1 50 0.014816661 ubox
2 36 0.271383898 ubox
2 37 0.080086228 ubox
2 46 0.585349105 ubox
2 47 0.009740733 ubox
2 49 0.011340314 ubox
2 50 0.265989810 ubox
3 12 0.006567814 ubox
3 36 0.083976986 ubox
3 37 0.009928978 ubox
3 45 0.585374434 ubox
3 46 0.009437701 ubox
3 47 0.005374102 ubox
3 49 0.268449298 ubox
4 11 0.006249390 ubox
4 18 0.004014468 ubox
4 36 0.009016610 ubox
4 37 0.011489925 ubox
4 44 0.584980195 ubox
4 45 0.008972058 ubox
4 46 0.005324673 ubox
4 48 0.268584288 ubox
5 15 0.005283881 ubox
5 17 0.015046848 ubox
5 33 0.296841557 ubox
5 36 0.030153418 ubox
5 39 0.127795775 ubox
5 43 0.570886480 ubox
5 45 0.004998519 ubox
5 47 0.268281902 ubox
5 53 0.053962744 ubox
5 55 0.611301751 ubox
6 13 0.016186775 ubox
6 14 0.007066696 ubox
6 16 0.061847516 ubox
6 20 0.010771420 ubox
6 32 0.298227829 ubox
6 35 0.030517826 ubox
6 38 0.312307084 ubox
6 40 0.024935018 ubox
6 42 0.362888247 ubox
6 51 0.194392996 ubox
6 52 0.040547518 ubox
6 54 0.668868992 ubox
7 12 0.018037374 ubox
7 15 0.059554671 ubox
7 18 0.314188236 ubox
7 19 0.008912224 ubox
7 31 0.298239409 ubox
7 37 0.334596408 ubox
7 39 0.019561998 ubox
7 46 0.265490750 ubox
7 47 0.005711356 ubox
7 50 0.198763599 ubox
7 53 0.668242304 ubox
8 15 0.021898266 ubox
8 17 0.462568614 ubox
8 18 0.006474533 ubox
8 30 0.298229853 ubox
8 33 0.032882402 ubox
8 36 0.334827764 ubox
8 39 0.045603086 ubox
8 45 0.264899075 ubox
8 46 0.006545441 ubox
8 49 0.198733983 ubox
8 53 0.023282653 ubox
8 55 0.036228736 ubox
9 14 0.027855702 ubox
9 16 0.478484234 ubox
9 29 0.296961282 ubox
9 32 0.033800062 ubox
9 34 0.029114212 ubox
9 35 0.331450223 ubox
9 38 0.047397508 ubox
9 40 0.043336375 ubox
9 51 0.667121305 ubox
9 52 0.024257662 ubox
9 54 0.038719467 ubox
10 15 0.478062629 ubox
10 31 0.033930468 ubox
10 33 0.138011697 ubox
10 37 0.047430242 ubox
10 39 0.043389473 ubox
10 43 0.252139666 ubox
10 50 0.667377612 ubox
10 53 0.038687186 ubox
11 28 0.184310549 ubox
11 38 0.043045473 ubox
11 42 0.251355609 ubox
12 27 0.129282482 ubox
12 32 0.334039472 ubox
12 34 0.010363853 ubox
12 40 0.012798298 ubox
12 41 0.248851537 ubox
12 51 0.036229460 ubox
13 26 0.056802873 ubox
13 31 0.333953700 ubox
13 37 0.007446425 ubox
13 39 0.003422243 ubox
13 44 0.037661319 ubox
13 46 0.426171220 ubox
13 47 0.479693369 ubox
13 48 0.135543499 ubox
13 50 0.035410284 ubox
14 26 0.093241530 ubox
14 30 0.325453842 ubox
14 33 0.064387436 ubox
14 36 0.007858224 ubox
14 39 0.247764306 ubox
14 43 0.035508650 ubox
14 45 0.445223615 ubox
14 46 0.490486384 ubox
14 47 0.134372442 ubox
14 49 0.031226727 ubox
14 55 0.034513092 ubox
15 25 0.094784213 ubox
15 27 0.408182865 ubox
15 29 0.134836593 ubox
15 32 0.064494033 ubox
15 35 0.007447702 ubox
15 38 0.248930409 ubox
15 42 0.016896177 ubox
15 54 0.037788426 ubox
16 26 0.435304292 ubox
16 30 0.047355860 ubox
16 31 0.047312601 ubox
16 37 0.248979191 ubox
16 43 0.697026252 ubox
16 53 0.037761278 ubox
17 23 0.031890555 ubox
17 24 0.091019054 ubox
17 25 0.439199977 ubox
17 28 0.004433543 ubox
17 29 0.065488309 ubox
17 41 0.006897094 ubox
17 42 0.713721390 ubox
17 52 0.032307186 ubox
17 54 0.003639863 ubox
18 22 0.031442822 ubox
18 23 0.090797345 ubox
18 24 0.439197619 ubox
18 25 0.005961235 ubox
18 27 0.004290811 ubox
18 28 0.067440230 ubox
18 29 0.015522218 ubox
18 35 0.248545453 ubox
18 40 0.005084757 ubox
18 41 0.792412925 ubox
18 42 0.003357316 ubox
18 51 0.025735027 ubox
18 52 0.046740520 ubox
19 23 0.432103233 ubox
19 24 0.006257224 ubox
19 27 0.069907675 ubox
19 34 0.248946533 ubox
19 40 0.851351161 ubox
19 41 0.014447106 ubox
19 51 0.052227670 ubox
19 54 0.040809190 ubox
20 26 0.069902003 ubox
20 33 0.248992260 ubox
20 39 0.851753913 ubox
20 50 0.055685863 ubox
20 53 0.040836903 ubox
21 38 0.851576639 ubox
22 31 0.245852488 ubox
22 33 0.003703861 ubox
22 37 0.851216482 ubox
22 47 0.006582586 ubox
22 50 0.045524282 ubox
23 30 0.245298744 ubox
23 31 0.022031651 ubox
23 36 0.849502487 ubox
23 37 0.028500800 ubox
23 46 0.006592364 ubox
23 47 0.054748627 ubox
23 49 0.045665826 ubox
24 30 0.023956810 ubox
24 31 0.113674501 ubox
24 36 0.039952637 ubox
24 37 0.009705106 ubox
24 45 0.006130732 ubox
24 46 0.054538855 ubox
24 47 0.046463737 ubox
25 30 0.113611271 ubox
25 33 0.834389546 ubox
25 36 0.011296792 ubox
25 43 0.003916689 ubox
25 45 0.052127503 ubox
25 46 0.046714451 ubox
26 32 0.839471459 ubox
26 34 0.080126669 ubox
26 35 0.015930759 ubox
26 42 0.003741109 ubox
27 31 0.833393325 ubox
27 33 0.082350089 ubox
27 45 0.049582235 ubox
28 37 0.006698575 ubox
28 44 0.057562175 ubox
29 36 0.008776658 ubox
29 43 0.058268698 ubox
30 35 0.009555065 ubox
30 41 0.074975948 ubox
30 42 0.018854936 ubox
31 38 0.004028454 ubox
31 40 0.075875731 ubox
31 41 0.016415213 ubox
32 37 0.004441022 ubox
32 39 0.076397565 ubox
33 38 0.049489301 ubox
33 40 0.013884892 ubox
33 54 0.011478528 ubox
34 39 0.012993238 ubox
34 44 0.003812768 ubox
35 43 0.004824755 ubox
35 53 0.027977678 ubox
35 55 0.059493682 ubox
36 42 0.005120996 ubox
36 52 0.029192703 ubox
36 54 0.064871051 ubox
37 41 0.005049188 ubox
37 51 0.026908986 ubox
37 54 0.120806916 ubox
38 50 0.024697825 ubox
38 53 0.123942582 ubox
38 55 0.008897444 ubox
39 51 0.286002914 ubox
39 52 0.090280626 ubox
39 54 0.012260881 ubox
40 46 0.007520679 ubox
40 47 0.022082767 ubox
40 50 0.301089401 ubox
40 53 0.011957310 ubox
41 45 0.007573827 ubox
41 46 0.022120407 ubox
41 47 0.009857364 ubox
41 49 0.301133111 ubox
41 50 0.005747647 ubox
42 46 0.008950526 ubox
42 48 0.299782842 ubox
42 49 0.005727491 ubox
42 55 0.008954325 ubox
43 54 0.016068659 ubox
45 52 0.025846924 ubox
46 51 0.025874554 ubox
46 52 0.006121908 ubox
47 51 0.006235207 ubox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
9 51 0.9500000 lbox
10 50 0.9500000 lbox
13 47 0.9500000 lbox
14 46 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
27 31 0.9500000 lbox
showpage
end
%%EOF
