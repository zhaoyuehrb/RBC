%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUAGGAACGGGUUGCUAAGCUGGUGUUUUUGCUCCAAGACAUGGCUGCAGCUUCCCAGGGAGGAGCCCAGGGGCAUCUCCAACACUCAGCCUUUCCCUCCGGACCCUUUUAAAAGAUUCAACAGCACCGUCUCUCUCCACUUCCAUCCUAGAAUGCAGAAUCUGCAAAGUGCCUUUUGUAAAGUUUCUUAAGCUAUAUUCUAAUGGAUAUGGGCUGACAUUAACAAGGACCCAUCCCAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[81.16875458 127.51188660]
[75.72431946 121.94377136]
[71.81365204 115.37673187]
[69.59767151 108.21263123]
[69.13608551 100.87237549]
[54.48820114 97.64137268]
[39.84031677 94.41036224]
[25.17209625 91.27294922]
[10.48414230 88.22926331]
[-4.20381117 85.18558502]
[-18.89176559 82.14189911]
[-33.59885406 79.19206238]
[-48.32447815 76.33619690]
[-63.05010223 73.48032379]
[-77.77572632 70.62445831]
[-80.08340454 78.54320526]
[-85.39891052 85.94593811]
[-93.55556488 91.71261597]
[-103.98161316 94.79819489]
[-115.73697662 94.37442017]
[-130.56118774 96.66416168]
[-145.38539124 98.95390320]
[-160.20959473 101.24363708]
[-175.01887512 103.62799072]
[-189.81263733 106.10684967]
[-204.60639954 108.58571625]
[-219.40014648 111.06457520]
[-234.19390869 113.54344177]
[-245.00715637 130.50244141]
[-264.51135254 133.95091248]
[-279.99752808 122.10005188]
[-294.68548584 125.14373779]
[-309.37344360 128.18742371]
[-324.06140137 131.23110962]
[-338.74935913 134.27479553]
[-353.43731689 137.31848145]
[-341.43344116 146.31330872]
[-339.18853760 161.14437866]
[-347.99270630 173.28878784]
[-362.78649902 175.76757812]
[-375.06838989 167.15626526]
[-377.78048706 152.40348816]
[-369.36434937 139.98724365]
[-384.24218750 141.89764404]
[-399.12005615 143.80804443]
[-404.56994629 147.48480225]
[-410.21374512 147.82398987]
[-414.40167236 145.57223511]
[-429.32345581 147.10205078]
[-439.28741455 159.07524109]
[-454.44201660 160.41412354]
[-465.79519653 150.84123230]
[-480.71697998 152.37104797]
[-495.63876343 153.90086365]
[-510.56057739 155.43069458]
[-523.52819824 165.46926880]
[-538.60107422 159.00871277]
[-540.27362061 142.69508362]
[-526.82519531 133.31044006]
[-512.09039307 140.50889587]
[-497.16860962 138.97908020]
[-482.24682617 137.44926453]
[-467.32504272 135.91944885]
[-458.15048218 124.24198914]
[-443.03945923 122.47796631]
[-430.85327148 132.18026733]
[-415.93148804 130.65045166]
[-401.03045654 128.93019104]
[-386.15258789 127.01979065]
[-371.27474976 125.10939026]
[-356.48098755 122.63052368]
[-341.79302979 119.58683777]
[-327.10510254 116.54315948]
[-312.41714478 113.49947357]
[-297.72918701 110.45578766]
[-283.04122925 107.41210175]
[-279.94110107 97.66806030]
[-273.03085327 90.02209473]
[-263.50109863 85.89115906]
[-253.03555298 86.07783508]
[-243.51359558 90.61536407]
[-236.67277527 98.74968719]
[-221.87901306 96.27082062]
[-207.08525085 93.79196167]
[-192.29150391 91.31309509]
[-177.49774170 88.83423615]
[-171.43441772 84.63892365]
[-162.49934387 86.41943359]
[-147.67512512 84.12969208]
[-132.85092163 81.83995819]
[-118.02671814 79.55021667]
[-115.04634857 72.66781616]
[-123.98667145 60.62329102]
[-109.08561707 58.90301895]
[-106.10524750 52.02062225]
[-114.57764435 39.64247513]
[-123.05004120 27.26432991]
[-138.06394958 20.66776276]
[-139.58891296 4.33967161]
[-126.05616760 -4.92300129]
[-111.38706207 2.40838695]
[-110.67189789 18.79193306]
[-102.19950104 31.17007828]
[-93.72710419 43.54822540]
[-95.22793579 28.62349510]
[-100.80954742 14.70065212]
[-101.77838898 -0.26802683]
[-98.03813171 -14.79422569]
[-89.96065521 -27.43362617]
[-78.34910583 -36.92950821]
[-64.35798645 -42.33771133]
[-49.37842560 -43.12050247]
[-34.89981842 -39.20005417]
[-22.36175156 -30.96616554]
[-13.01086807 -19.23752594]
[-7.77691412 -5.18029642]
[-7.18029308 9.80783367]
[-11.28032684 24.23661423]
[-19.66935539 36.67141342]
[-31.51326752 45.87585449]
[-45.63444138 50.93475342]
[-60.62773514 51.34525299]
[-74.91986084 55.89883423]
[-60.19423676 58.75470352]
[-45.46861267 61.61056900]
[-30.74298668 64.46643829]
[-23.59479332 62.65870285]
[-15.84807968 67.45394135]
[-1.16012585 70.49762726]
[13.52782726 73.54131317]
[28.21578217 76.58499908]
[35.38647842 74.86869812]
[43.07132339 79.76247406]
[57.71920776 82.99348450]
[72.36709595 86.22448730]
[85.39666748 71.23254395]
[105.65481567 66.83121490]
[125.31249237 75.78050995]
[136.13554382 95.46905518]
[150.74096680 92.05125427]
[159.09887695 78.90655518]
[173.95954895 75.64847565]
[186.43951416 83.69747162]
[201.04493713 80.27967072]
[215.65037537 76.86186981]
[230.25579834 73.44406891]
[244.86123657 70.02626038]
[249.90771484 65.81285095]
[255.48750305 64.89982605]
[259.88323975 66.71273041]
[274.57119751 63.66904831]
[289.25915527 60.62536240]
[303.94711304 57.58167648]
[318.63504028 54.53799438]
[333.32299805 51.49430847]
[347.94995117 48.16983414]
[362.51055908 44.56579590]
[376.99945068 40.68350983]
[391.41131592 36.52440262]
[405.82318115 32.36529541]
[420.23504639 28.20619011]
[431.34875488 16.94583511]
[445.72238159 20.85082626]
[460.13421631 16.69171906]
[474.49182129 12.34890747]
[488.79275513 7.82309866]
[503.09368896 3.29728961]
[517.39465332 -1.22851932]
[531.69561768 -5.75432825]
[545.99652100 -10.28013706]
[556.65740967 -22.74117851]
[572.72772217 -19.47350311]
[577.67565918 -3.83861446]
[566.41125488 8.07965374]
[550.52233887 4.02080870]
[536.22137451 8.54661751]
[521.92047119 13.07242680]
[507.61950684 17.59823608]
[493.31857300 22.12404442]
[479.01760864 26.64985275]
[476.06936646 30.38039398]
[470.75552368 32.31188583]
[464.29333496 31.10358429]
[449.88146973 35.26269150]
[439.79858398 46.22555542]
[424.39413452 42.61805344]
[409.98226929 46.77716064]
[395.57040405 50.93626785]
[381.15853882 55.09537125]
[379.14794922 57.96537781]
[375.65808105 60.01370621]
[371.08578491 60.56040573]
[366.11459351 59.12638855]
[351.55401611 62.73042679]
[349.43496704 65.52131653]
[345.86920166 67.43447113]
[341.27932739 67.80563354]
[336.36669922 66.18225861]
[321.67874146 69.22594452]
[306.99078369 72.26963043]
[292.30282593 75.31331635]
[277.61486816 78.35700226]
[262.92691040 81.40068817]
[248.27903748 84.63169098]
[233.67359924 88.04949951]
[219.06817627 91.46730042]
[204.46273804 94.88510132]
[189.85731506 98.30290222]
[182.24470520 111.05374146]
[167.48141479 114.72793579]
[154.15876770 106.65668488]
[139.55334473 110.07448578]
[133.24302673 123.68256378]
[140.06994629 137.03895569]
[146.89686584 150.39533997]
[153.72378540 163.75173950]
[160.55070496 177.10812378]
[162.69204712 162.26176453]
[171.90286255 150.42279053]
[185.76695251 144.69682312]
[200.64753723 146.58584595]
[212.64114380 155.59436035]
[218.60163879 169.35926819]
[216.96546936 184.26976013]
[208.16183472 196.41456604]
[194.50009155 202.60784912]
[179.56396484 201.22502136]
[167.27214050 192.62959290]
[172.34239197 206.74668884]
[177.41264343 220.86380005]
[190.27288818 231.03956604]
[187.62315369 247.22322083]
[172.18925476 252.76641846]
[159.84826660 241.96676636]
[163.29554749 225.93405151]
[158.22529602 211.81694031]
[153.15504456 197.69984436]
[147.19430542 183.93504333]
[140.36738586 170.57865906]
[133.54046631 157.22225952]
[126.71354675 143.86587524]
[119.88662720 130.50949097]
[112.00975800 133.72830200]
[103.74027252 134.98753357]
[95.55001068 134.28347778]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 135]
[6 134]
[7 133]
[8 131]
[9 130]
[10 129]
[11 128]
[12 126]
[13 125]
[14 124]
[15 123]
[20 91]
[21 90]
[22 89]
[23 88]
[24 86]
[25 85]
[26 84]
[27 83]
[28 82]
[31 76]
[32 75]
[33 74]
[34 73]
[35 72]
[36 71]
[43 70]
[44 69]
[45 68]
[48 67]
[49 66]
[52 63]
[53 62]
[54 61]
[55 60]
[95 104]
[96 103]
[97 102]
[139 212]
[140 211]
[143 208]
[144 207]
[145 206]
[146 205]
[147 204]
[150 203]
[151 202]
[152 201]
[153 200]
[154 199]
[155 198]
[156 194]
[157 193]
[158 189]
[159 188]
[160 187]
[161 186]
[163 184]
[164 183]
[165 180]
[166 179]
[167 178]
[168 177]
[169 176]
[170 175]
[213 242]
[214 241]
[215 240]
[216 239]
[217 238]
[228 237]
[229 236]
[230 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
