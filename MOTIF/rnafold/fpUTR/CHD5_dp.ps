%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CHD5)
} def

/sequence { (\
CCGAGGCCGCCUCGCCCGCCGCGCGCGCCGGUCCGGCAGCGCACGGGUUAAGGCUGGCACCGCGCCCGGCGGGAGGGGGGGCGCCCACCUCCCCUCCUCCCCGCGCCGGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 109 0.004947222 ubox
2 62 0.958108288 ubox
2 64 0.016484443 ubox
2 108 0.004963652 ubox
3 61 0.992912028 ubox
3 63 0.040391871 ubox
3 107 0.004656557 ubox
5 61 0.026145705 ubox
6 58 0.999775325 ubox
6 60 0.018890152 ubox
6 63 0.004177150 ubox
7 57 0.999940453 ubox
7 62 0.004165749 ubox
8 56 0.999419908 ubox
9 54 0.977233809 ubox
9 55 0.209767576 ubox
9 58 0.009691727 ubox
10 53 0.999790945 ubox
10 57 0.009694348 ubox
11 52 0.999667112 ubox
11 53 0.016084803 ubox
11 56 0.009687892 ubox
12 51 0.969054666 ubox
12 52 0.016028818 ubox
14 48 0.982081542 ubox
14 54 0.011002755 ubox
15 47 0.998571508 ubox
15 53 0.011007601 ubox
16 46 0.998396900 ubox
16 47 0.013806224 ubox
16 52 0.010992450 ubox
17 45 0.998132213 ubox
17 46 0.010628993 ubox
18 44 0.994649551 ubox
18 48 0.008585430 ubox
19 46 0.054959839 ubox
19 47 0.007262671 ubox
20 41 0.005306988 ubox
20 45 0.060020487 ubox
20 46 0.005470510 ubox
21 40 0.005318410 ubox
21 42 0.986474659 ubox
21 44 0.075330721 ubox
22 39 0.005304622 ubox
22 41 0.986909178 ubox
23 40 0.986847995 ubox
23 42 0.160718107 ubox
24 39 0.986678682 ubox
24 41 0.161016000 ubox
25 37 0.024078103 ubox
25 40 0.161425850 ubox
26 35 0.005580057 ubox
26 36 0.023236770 ubox
26 39 0.161437088 ubox
27 34 0.006768596 ubox
27 37 0.998586192 ubox
28 36 0.999700621 ubox
29 35 0.999624569 ubox
30 34 0.935149744 ubox
60 109 0.011912565 ubox
61 108 0.011942791 ubox
62 106 0.008904439 ubox
62 107 0.009834489 ubox
63 105 0.011218152 ubox
64 104 0.011219030 ubox
64 106 0.007246682 ubox
64 111 0.992426235 ubox
65 103 0.011170579 ubox
65 105 0.007249349 ubox
65 110 0.999835627 ubox
66 109 0.999903972 ubox
67 103 0.007267370 ubox
67 108 0.999887907 ubox
68 100 0.006031279 ubox
68 101 0.009409855 ubox
68 102 0.007481371 ubox
68 107 0.999835388 ubox
69 99 0.006042164 ubox
69 100 0.009498484 ubox
69 101 0.007395466 ubox
69 104 0.048518959 ubox
69 106 0.998714455 ubox
70 103 0.065472735 ubox
70 105 0.997274469 ubox
71 93 0.003202823 ubox
71 97 0.004048610 ubox
71 98 0.251897318 ubox
71 99 0.064066326 ubox
71 100 0.020169222 ubox
71 101 0.743699912 ubox
71 102 0.103751638 ubox
71 104 0.604950024 ubox
72 92 0.003560614 ubox
72 96 0.003347664 ubox
72 97 0.548478854 ubox
72 98 0.013498317 ubox
72 99 0.016386402 ubox
72 100 0.827678236 ubox
72 101 0.092192502 ubox
72 102 0.067866390 ubox
73 91 0.003566661 ubox
73 96 0.550355977 ubox
73 97 0.010897099 ubox
73 98 0.003617226 ubox
73 99 0.830254606 ubox
73 100 0.067032282 ubox
73 101 0.055574766 ubox
74 90 0.003572679 ubox
74 95 0.552986627 ubox
74 98 0.832752005 ubox
75 89 0.003573365 ubox
75 93 0.004286264 ubox
75 94 0.553749527 ubox
75 95 0.006940333 ubox
75 96 0.016185658 ubox
75 97 0.832361863 ubox
75 98 0.006889501 ubox
75 99 0.007933167 ubox
75 100 0.006157527 ubox
76 88 0.003569500 ubox
76 92 0.005624652 ubox
76 93 0.553953383 ubox
76 94 0.016934174 ubox
76 95 0.021784685 ubox
76 96 0.831927942 ubox
76 97 0.008571517 ubox
76 98 0.006924810 ubox
76 99 0.006100281 ubox
77 86 0.003529194 ubox
77 91 0.006698467 ubox
77 92 0.554152567 ubox
77 93 0.022379301 ubox
77 94 0.175033292 ubox
77 95 0.812817768 ubox
77 96 0.009118205 ubox
77 97 0.007489619 ubox
77 98 0.005177945 ubox
78 85 0.003534997 ubox
78 90 0.007480811 ubox
78 91 0.554133689 ubox
78 92 0.022936075 ubox
78 93 0.175653931 ubox
78 94 0.813189764 ubox
78 95 0.008671529 ubox
78 96 0.007466203 ubox
78 97 0.005145960 ubox
79 84 0.003533538 ubox
79 89 0.038658215 ubox
79 90 0.552512782 ubox
79 91 0.023353757 ubox
79 92 0.176225329 ubox
79 93 0.813038208 ubox
79 94 0.009834229 ubox
79 95 0.006477857 ubox
79 96 0.005114302 ubox
80 86 0.004085580 ubox
80 88 0.038817652 ubox
80 89 0.553452312 ubox
80 90 0.015632832 ubox
80 91 0.176444208 ubox
80 92 0.812718362 ubox
80 93 0.010222222 ubox
80 94 0.006934564 ubox
80 95 0.004402913 ubox
81 85 0.005168983 ubox
81 88 0.551666198 ubox
81 89 0.036739083 ubox
81 90 0.162589167 ubox
81 91 0.805464360 ubox
81 92 0.010521223 ubox
81 93 0.006886169 ubox
81 94 0.004362401 ubox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 54 0.9500000 lbox
10 53 0.9500000 lbox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
17 45 0.9500000 lbox
18 44 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
30 34 0.9500000 lbox
64 111 0.9500000 lbox
65 110 0.9500000 lbox
66 109 0.9500000 lbox
67 108 0.9500000 lbox
68 107 0.9500000 lbox
69 106 0.9500000 lbox
70 105 0.9500000 lbox
71 101 0.9500000 lbox
72 100 0.9500000 lbox
73 99 0.9500000 lbox
74 98 0.9500000 lbox
75 97 0.9500000 lbox
76 96 0.9500000 lbox
77 95 0.9500000 lbox
78 94 0.9500000 lbox
79 93 0.9500000 lbox
80 92 0.9500000 lbox
81 91 0.9500000 lbox
showpage
end
%%EOF
