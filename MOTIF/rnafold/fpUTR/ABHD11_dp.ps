%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABHD11)
} def

/sequence { (\
UGAAGACGGAAAUGGGCGGGGCUGCGAGCUAGGGCGGGAGAAGGAGCGCGGGGAGGACGUACCUUGUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.098578145 ubox
1 14 0.007828202 ubox
1 18 0.008004148 ubox
1 68 0.006125694 ubox
2 7 0.126981967 ubox
2 13 0.006619713 ubox
2 17 0.011157922 ubox
3 65 0.004919636 ubox
4 23 0.003224378 ubox
4 64 0.005113140 ubox
5 22 0.003485934 ubox
5 63 0.005071840 ubox
6 60 0.006819575 ubox
6 67 0.017962796 ubox
7 14 0.294209992 ubox
7 18 0.120055512 ubox
7 36 0.024449878 ubox
7 59 0.007147478 ubox
7 66 0.018288281 ubox
7 68 0.034480336 ubox
8 13 0.257574651 ubox
8 17 0.121374497 ubox
8 35 0.024605738 ubox
8 58 0.007142272 ubox
8 63 0.004092560 ubox
8 65 0.016659215 ubox
8 67 0.023162590 ubox
9 62 0.004097316 ubox
9 64 0.014258579 ubox
10 65 0.018932634 ubox
11 64 0.016083469 ubox
11 65 0.008334603 ubox
12 60 0.004940949 ubox
12 64 0.008930375 ubox
12 67 0.007901619 ubox
13 31 0.022162233 ubox
13 36 0.003181696 ubox
13 50 0.008020297 ubox
13 59 0.005067059 ubox
13 66 0.005624920 ubox
13 68 0.029102364 ubox
14 30 0.022323236 ubox
14 35 0.004300768 ubox
14 49 0.011071725 ubox
14 58 0.005094173 ubox
14 63 0.032222328 ubox
14 64 0.005276300 ubox
14 67 0.009727579 ubox
15 23 0.007156507 ubox
15 29 0.022214851 ubox
15 30 0.010068261 ubox
15 62 0.032151416 ubox
15 63 0.005796081 ubox
16 22 0.007992906 ubox
16 25 0.010518766 ubox
16 29 0.010491691 ubox
16 35 0.046029487 ubox
16 47 0.018369397 ubox
16 49 0.007933104 ubox
16 60 0.032053523 ubox
16 62 0.005513944 ubox
16 67 0.956677087 ubox
17 21 0.008197042 ubox
17 24 0.010523627 ubox
17 26 0.021329999 ubox
17 28 0.010699159 ubox
17 34 0.046035107 ubox
17 36 0.003284350 ubox
17 46 0.018841376 ubox
17 48 0.007969974 ubox
17 59 0.034154704 ubox
17 66 0.986595888 ubox
17 68 0.013055435 ubox
18 23 0.008020944 ubox
18 25 0.021471103 ubox
18 35 0.003251862 ubox
18 47 0.007971303 ubox
18 58 0.034146603 ubox
18 64 0.011655402 ubox
18 65 0.984219372 ubox
18 67 0.009978346 ubox
19 63 0.015505331 ubox
19 64 0.987614101 ubox
19 65 0.009719335 ubox
20 30 0.047164149 ubox
20 62 0.015306238 ubox
20 63 0.988844278 ubox
20 64 0.011662819 ubox
21 29 0.048665371 ubox
21 35 0.008296992 ubox
21 47 0.003505330 ubox
21 62 0.988592770 ubox
21 63 0.012710224 ubox
22 28 0.048674485 ubox
22 34 0.008277752 ubox
22 37 0.130689753 ubox
22 38 0.008139541 ubox
22 40 0.005689713 ubox
22 43 0.003618368 ubox
22 46 0.003614515 ubox
22 51 0.034090281 ubox
22 52 0.003421165 ubox
22 53 0.024172443 ubox
23 27 0.043850185 ubox
23 33 0.008165667 ubox
23 36 0.131246925 ubox
23 37 0.005792758 ubox
23 39 0.005499955 ubox
23 42 0.003521896 ubox
23 45 0.003470811 ubox
23 50 0.034214853 ubox
23 52 0.024094674 ubox
23 61 0.978418067 ubox
24 35 0.131950703 ubox
24 49 0.034427705 ubox
24 60 0.988142072 ubox
25 34 0.131950526 ubox
25 48 0.034429102 ubox
25 50 0.024159929 ubox
25 59 0.988677507 ubox
26 47 0.034332584 ubox
26 49 0.024081924 ubox
26 58 0.987196044 ubox
28 35 0.008317858 ubox
28 47 0.024262519 ubox
29 34 0.008303242 ubox
29 38 0.003218503 ubox
29 40 0.003492961 ubox
29 44 0.033948455 ubox
29 46 0.024331302 ubox
29 51 0.008210436 ubox
29 52 0.034533589 ubox
29 53 0.083478128 ubox
29 55 0.980985498 ubox
29 56 0.037212553 ubox
30 37 0.003170904 ubox
30 39 0.003530261 ubox
30 42 0.003307974 ubox
30 43 0.033028214 ubox
30 45 0.023589169 ubox
30 50 0.008177793 ubox
30 51 0.033565896 ubox
30 52 0.081513497 ubox
30 54 0.972720868 ubox
30 55 0.035551143 ubox
34 47 0.053656720 ubox
34 49 0.985594070 ubox
35 46 0.053686197 ubox
35 48 0.985818743 ubox
35 50 0.053155062 ubox
36 47 0.983519015 ubox
36 49 0.053088428 ubox
41 65 0.019432039 ubox
42 64 0.020456800 ubox
43 63 0.020619074 ubox
44 62 0.020595971 ubox
46 60 0.012851870 ubox
47 59 0.013060877 ubox
47 68 0.138050042 ubox
48 58 0.012858307 ubox
48 60 0.022751306 ubox
48 67 0.140232406 ubox
49 59 0.023171195 ubox
49 66 0.140425514 ubox
50 58 0.023203943 ubox
50 64 0.007618791 ubox
50 65 0.139837990 ubox
51 63 0.010221797 ubox
51 64 0.140020256 ubox
52 62 0.010245499 ubox
52 63 0.140183132 ubox
53 62 0.140059141 ubox
53 65 0.015218220 ubox
54 64 0.016287153 ubox
55 63 0.016455899 ubox
56 62 0.016424068 ubox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
18 65 0.9500000 lbox
19 64 0.9500000 lbox
20 63 0.9500000 lbox
21 62 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
showpage
end
%%EOF
