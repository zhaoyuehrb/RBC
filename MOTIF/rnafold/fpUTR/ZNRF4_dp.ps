%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNRF4)
} def

/sequence { (\
UCCUGGUCUCCAUGUCAUCUGCCAGAAAGGCCACCUGCGCCAGCACCUCCUGAGACCGGCCUUCAAAGACACGACGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.018640334 ubox
1 59 0.012098010 ubox
1 69 0.075317908 ubox
1 74 0.054810845 ubox
2 25 0.014133290 ubox
2 58 0.015911196 ubox
2 59 0.219904764 ubox
2 68 0.083487797 ubox
2 73 0.060740630 ubox
3 25 0.110034233 ubox
3 58 0.219763359 ubox
3 59 0.939332284 ubox
3 68 0.008750078 ubox
4 12 0.093951134 ubox
4 24 0.111938884 ubox
4 33 0.006645730 ubox
4 58 0.952155918 ubox
4 67 0.007684668 ubox
4 71 0.004397428 ubox
4 73 0.011194323 ubox
5 11 0.104284392 ubox
5 23 0.112151709 ubox
5 32 0.007531886 ubox
5 57 0.984685183 ubox
5 61 0.004734071 ubox
5 70 0.003254426 ubox
5 72 0.013859797 ubox
6 10 0.102619988 ubox
6 22 0.112122155 ubox
6 31 0.007534311 ubox
6 56 0.984761904 ubox
6 60 0.004733603 ubox
6 70 0.018696511 ubox
6 75 0.030578452 ubox
6 77 0.008108648 ubox
7 21 0.107081485 ubox
7 30 0.007529957 ubox
7 55 0.984644898 ubox
7 59 0.004586272 ubox
7 69 0.018945890 ubox
7 74 0.030643502 ubox
7 76 0.008045905 ubox
8 29 0.007526691 ubox
8 54 0.984751675 ubox
8 58 0.004483885 ubox
8 68 0.018956283 ubox
8 73 0.030531064 ubox
9 28 0.007269916 ubox
9 53 0.984092278 ubox
9 67 0.018194585 ubox
9 74 0.009358856 ubox
10 52 0.969025942 ubox
10 59 0.005227701 ubox
10 73 0.009708067 ubox
11 21 0.026810073 ubox
11 29 0.003911519 ubox
11 37 0.014886672 ubox
11 52 0.147103078 ubox
11 58 0.005230845 ubox
12 18 0.036206600 ubox
12 20 0.030657901 ubox
12 36 0.016673259 ubox
12 51 0.191209702 ubox
13 17 0.034704594 ubox
13 21 0.003846304 ubox
13 24 0.040121928 ubox
13 33 0.058135273 ubox
13 39 0.056647224 ubox
13 42 0.029491486 ubox
13 45 0.077587715 ubox
13 65 0.008722499 ubox
13 71 0.032334690 ubox
13 73 0.005782120 ubox
13 76 0.088485117 ubox
14 20 0.021721678 ubox
14 22 0.033595581 ubox
14 23 0.044138647 ubox
14 31 0.075469258 ubox
14 32 0.065575349 ubox
14 34 0.067023112 ubox
14 36 0.005568387 ubox
14 38 0.066465022 ubox
14 40 0.026812822 ubox
14 41 0.028247656 ubox
14 44 0.079856400 ubox
14 46 0.245869693 ubox
14 51 0.025661438 ubox
14 56 0.006164403 ubox
14 60 0.006946350 ubox
14 64 0.008764417 ubox
14 70 0.034298644 ubox
14 72 0.011747561 ubox
14 75 0.125173992 ubox
15 21 0.033193715 ubox
15 26 0.073415228 ubox
15 30 0.076571115 ubox
15 33 0.065316480 ubox
15 37 0.056940845 ubox
15 39 0.028102858 ubox
15 43 0.072542023 ubox
15 45 0.239226468 ubox
15 53 0.009216680 ubox
15 55 0.006185656 ubox
15 59 0.006961465 ubox
15 69 0.033896398 ubox
15 71 0.011446443 ubox
15 74 0.125246416 ubox
16 25 0.078587901 ubox
16 29 0.076062595 ubox
16 37 0.061068099 ubox
16 52 0.011640791 ubox
16 54 0.006172210 ubox
16 58 0.006906839 ubox
16 68 0.033542527 ubox
16 73 0.125165078 ubox
17 36 0.062173070 ubox
17 51 0.013300304 ubox
18 26 0.120257424 ubox
18 30 0.032933743 ubox
18 53 0.005398701 ubox
18 55 0.006529504 ubox
18 69 0.119532846 ubox
19 25 0.126628108 ubox
19 29 0.040624717 ubox
19 30 0.009997283 ubox
19 43 0.672720111 ubox
19 52 0.005662934 ubox
19 54 0.006671339 ubox
19 68 0.120544959 ubox
20 24 0.114122535 ubox
20 28 0.040836916 ubox
20 29 0.010092273 ubox
20 33 0.143619017 ubox
20 39 0.034737760 ubox
20 42 0.673672357 ubox
20 45 0.084996244 ubox
20 53 0.006256088 ubox
20 65 0.019597350 ubox
20 67 0.119841865 ubox
20 71 0.016181876 ubox
21 31 0.648756799 ubox
21 32 0.113784674 ubox
21 38 0.039784799 ubox
21 40 0.491435203 ubox
21 41 0.492953869 ubox
21 44 0.088633308 ubox
21 60 0.008220835 ubox
21 64 0.020579366 ubox
21 70 0.016319783 ubox
22 30 0.660887432 ubox
22 37 0.033120317 ubox
22 39 0.671852488 ubox
22 43 0.088517912 ubox
22 59 0.008235936 ubox
23 29 0.660497859 ubox
23 37 0.680886712 ubox
23 52 0.031211650 ubox
23 58 0.008207043 ubox
24 36 0.679710629 ubox
24 48 0.004539519 ubox
24 51 0.048522455 ubox
24 63 0.005219012 ubox
25 35 0.676894577 ubox
25 47 0.004768444 ubox
25 49 0.009532653 ubox
25 50 0.048807495 ubox
25 63 0.004988017 ubox
25 64 0.113922933 ubox
26 48 0.008016073 ubox
26 63 0.093350358 ubox
27 62 0.065645637 ubox
27 63 0.132554020 ubox
28 36 0.176233801 ubox
28 48 0.076253777 ubox
28 51 0.120517111 ubox
28 62 0.158206457 ubox
29 35 0.185198205 ubox
29 36 0.014390042 ubox
29 41 0.081892052 ubox
29 47 0.080138483 ubox
29 48 0.003568186 ubox
29 49 0.003252888 ubox
29 50 0.123648716 ubox
29 51 0.009684007 ubox
29 61 0.172788695 ubox
30 34 0.183845834 ubox
30 35 0.015086569 ubox
30 38 0.023412311 ubox
30 40 0.082743682 ubox
30 44 0.003536802 ubox
30 46 0.080133942 ubox
30 47 0.003849304 ubox
30 49 0.123456655 ubox
30 50 0.010234860 ubox
30 60 0.172803883 ubox
31 37 0.023399298 ubox
31 39 0.082662028 ubox
31 43 0.003569655 ubox
31 59 0.172786501 ubox
32 52 0.011752177 ubox
32 58 0.172462581 ubox
33 51 0.014754560 ubox
35 43 0.064268451 ubox
35 54 0.068428567 ubox
36 42 0.064961197 ubox
36 45 0.613344906 ubox
36 53 0.061439254 ubox
37 41 0.064078746 ubox
37 44 0.693532745 ubox
37 57 0.011549199 ubox
38 43 0.693448493 ubox
38 52 0.028065378 ubox
39 51 0.023482875 ubox
39 57 0.003270594 ubox
39 60 0.003465027 ubox
40 59 0.003473242 ubox
41 52 0.074530577 ubox
41 58 0.003454920 ubox
42 48 0.027677993 ubox
42 51 0.082321884 ubox
43 47 0.028358754 ubox
43 50 0.082378625 ubox
44 52 0.008972328 ubox
45 51 0.013272870 ubox
46 59 0.003525730 ubox
47 54 0.088120372 ubox
47 58 0.003701339 ubox
47 68 0.003286200 ubox
48 53 0.081814659 ubox
48 55 0.069648906 ubox
48 67 0.003213134 ubox
49 54 0.074974265 ubox
50 58 0.003270048 ubox
50 59 0.005469384 ubox
51 58 0.006170255 ubox
51 65 0.007597852 ubox
52 57 0.043097004 ubox
52 63 0.004095950 ubox
52 64 0.008181028 ubox
53 62 0.005588888 ubox
53 63 0.007391135 ubox
54 61 0.006558551 ubox
54 62 0.005990784 ubox
57 73 0.005037781 ubox
58 64 0.014280884 ubox
58 72 0.014072713 ubox
58 75 0.009829336 ubox
59 63 0.009398329 ubox
59 77 0.072765372 ubox
60 76 0.093994611 ubox
61 68 0.224370249 ubox
62 67 0.208221925 ubox
62 68 0.023926909 ubox
62 69 0.041115329 ubox
62 74 0.036971391 ubox
63 67 0.022357032 ubox
63 68 0.041403724 ubox
63 69 0.093300996 ubox
63 73 0.030124932 ubox
63 74 0.297753778 ubox
64 68 0.100139883 ubox
64 73 0.321267611 ubox
3 59 0.9500000 lbox
4 58 0.9500000 lbox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
8 54 0.9500000 lbox
9 53 0.9500000 lbox
10 52 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
showpage
end
%%EOF
