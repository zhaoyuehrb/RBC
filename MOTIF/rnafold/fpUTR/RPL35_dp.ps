%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPL35)
} def

/sequence { (\
CUUCCUCUUUCCCUCGGAGCGGGCGGCGGCGUUGGCGGCUUGUGCAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.013872047 ubox
1 19 0.054071917 ubox
1 22 0.122502523 ubox
1 23 0.057868593 ubox
1 26 0.040556627 ubox
1 29 0.033907766 ubox
1 47 0.033151046 ubox
2 16 0.013113885 ubox
2 18 0.065565662 ubox
2 19 0.143379091 ubox
2 21 0.121200307 ubox
2 22 0.065244387 ubox
2 23 0.048743776 ubox
2 25 0.047135417 ubox
2 26 0.009955947 ubox
2 28 0.033998423 ubox
2 29 0.003720681 ubox
2 46 0.031541969 ubox
2 47 0.008243221 ubox
3 17 0.056175526 ubox
3 18 0.564555123 ubox
3 21 0.064282470 ubox
3 22 0.128465745 ubox
3 23 0.151486762 ubox
3 25 0.026596560 ubox
3 26 0.036795689 ubox
3 28 0.004408008 ubox
3 29 0.004736452 ubox
3 46 0.008236997 ubox
4 16 0.056329851 ubox
4 17 0.592198126 ubox
4 21 0.152991245 ubox
4 22 0.402757376 ubox
4 23 0.165238288 ubox
4 25 0.100057682 ubox
4 26 0.036366149 ubox
4 28 0.006344496 ubox
4 29 0.052333095 ubox
4 35 0.003750148 ubox
4 37 0.004721496 ubox
4 38 0.009311612 ubox
5 16 0.591713500 ubox
5 17 0.032234664 ubox
5 19 0.254005031 ubox
5 21 0.403189095 ubox
5 22 0.179945274 ubox
5 23 0.235532122 ubox
5 25 0.037281533 ubox
5 26 0.004071329 ubox
5 28 0.053085242 ubox
5 29 0.007149974 ubox
5 34 0.005043748 ubox
5 37 0.010891022 ubox
5 47 0.022244359 ubox
6 16 0.025645931 ubox
6 17 0.041535059 ubox
6 18 0.278508200 ubox
6 21 0.142980087 ubox
6 22 0.253729847 ubox
6 23 0.034804696 ubox
6 25 0.003680817 ubox
6 26 0.010228081 ubox
6 28 0.006782471 ubox
6 29 0.007117920 ubox
6 46 0.021009550 ubox
7 16 0.054633107 ubox
7 17 0.280680544 ubox
7 19 0.342729984 ubox
7 21 0.282129832 ubox
7 22 0.067969450 ubox
7 23 0.027715745 ubox
7 25 0.012227562 ubox
7 26 0.050822525 ubox
7 28 0.009964755 ubox
7 29 0.010045985 ubox
7 37 0.007055641 ubox
7 47 0.018877294 ubox
8 16 0.269809510 ubox
8 17 0.010937940 ubox
8 18 0.322600243 ubox
8 19 0.133111757 ubox
8 21 0.066306832 ubox
8 22 0.027211989 ubox
8 25 0.049458693 ubox
8 26 0.010480450 ubox
8 28 0.009895669 ubox
8 29 0.007553736 ubox
8 46 0.018044101 ubox
8 47 0.004874350 ubox
9 16 0.024779306 ubox
9 17 0.304816378 ubox
9 18 0.174307933 ubox
9 19 0.364498703 ubox
9 21 0.017109579 ubox
9 25 0.013726554 ubox
9 26 0.003385838 ubox
9 28 0.009753416 ubox
9 29 0.003272497 ubox
9 37 0.004803888 ubox
9 46 0.005231342 ubox
9 47 0.003745860 ubox
10 16 0.259168167 ubox
10 17 0.184808799 ubox
10 18 0.583106283 ubox
10 22 0.004242557 ubox
10 23 0.038459157 ubox
10 25 0.004719301 ubox
10 26 0.007761536 ubox
10 28 0.004124276 ubox
10 46 0.003427913 ubox
11 16 0.195486687 ubox
11 17 0.605933423 ubox
11 21 0.004919340 ubox
11 22 0.057617208 ubox
11 23 0.063751783 ubox
11 25 0.014235423 ubox
11 26 0.025457153 ubox
11 29 0.006915826 ubox
11 35 0.014207016 ubox
11 37 0.007254173 ubox
11 38 0.004815089 ubox
12 16 0.601823874 ubox
12 21 0.057663927 ubox
12 22 0.067647821 ubox
12 23 0.022031692 ubox
12 25 0.027005371 ubox
12 26 0.003414554 ubox
12 28 0.006989267 ubox
12 29 0.004859093 ubox
12 34 0.019267644 ubox
12 35 0.009242706 ubox
12 37 0.005599554 ubox
12 38 0.005059289 ubox
13 19 0.044818453 ubox
13 21 0.067601909 ubox
13 22 0.022964180 ubox
13 23 0.035604548 ubox
13 25 0.003434909 ubox
13 28 0.004903724 ubox
13 34 0.010505492 ubox
13 37 0.005685621 ubox
13 47 0.070741263 ubox
14 18 0.040517613 ubox
14 21 0.017086271 ubox
14 22 0.036743573 ubox
14 23 0.004701007 ubox
14 26 0.007886352 ubox
14 35 0.005593203 ubox
14 46 0.069612763 ubox
15 21 0.039948435 ubox
15 22 0.007522500 ubox
15 25 0.008772728 ubox
15 31 0.023488247 ubox
15 34 0.013406926 ubox
15 37 0.005437403 ubox
15 42 0.005132951 ubox
15 44 0.024258993 ubox
16 20 0.037655705 ubox
16 24 0.008820814 ubox
16 30 0.023644478 ubox
16 33 0.013379626 ubox
16 36 0.003330555 ubox
16 40 0.010433495 ubox
16 41 0.004507658 ubox
16 43 0.010660585 ubox
17 32 0.013159274 ubox
17 39 0.011374784 ubox
17 41 0.004825491 ubox
18 33 0.007877143 ubox
18 40 0.005314257 ubox
18 41 0.004317248 ubox
19 27 0.025054304 ubox
19 30 0.016083233 ubox
19 32 0.010867075 ubox
19 36 0.179248564 ubox
19 39 0.005462964 ubox
19 43 0.439890038 ubox
19 45 0.273693333 ubox
19 48 0.538716800 ubox
20 26 0.025068195 ubox
20 28 0.006631454 ubox
20 29 0.015704519 ubox
20 31 0.011474937 ubox
20 34 0.019199762 ubox
20 35 0.180055149 ubox
20 37 0.004745965 ubox
20 38 0.005276127 ubox
20 42 0.508213824 ubox
20 44 0.273722854 ubox
20 47 0.540291174 ubox
21 27 0.007568240 ubox
21 30 0.011157069 ubox
21 33 0.017755331 ubox
21 36 0.004923356 ubox
21 40 0.021287611 ubox
21 41 0.513408521 ubox
21 43 0.231014075 ubox
22 32 0.014790595 ubox
22 33 0.180202234 ubox
22 39 0.024849902 ubox
22 40 0.526947494 ubox
22 41 0.017178433 ubox
23 30 0.064560696 ubox
23 32 0.187664655 ubox
23 36 0.005356023 ubox
23 39 0.529905778 ubox
23 40 0.007236980 ubox
23 43 0.481333412 ubox
23 45 0.479928108 ubox
23 48 0.123290283 ubox
24 29 0.064827335 ubox
24 31 0.189956812 ubox
24 34 0.035931531 ubox
24 35 0.004917731 ubox
24 37 0.049434836 ubox
24 38 0.529030962 ubox
24 42 0.502960797 ubox
24 44 0.481310208 ubox
24 47 0.123868094 ubox
25 30 0.189238023 ubox
25 33 0.036167310 ubox
25 36 0.056431964 ubox
25 40 0.658033083 ubox
25 41 0.355315500 ubox
25 43 0.248419069 ubox
26 32 0.036410137 ubox
26 36 0.528230388 ubox
26 39 0.804201702 ubox
26 40 0.047192645 ubox
26 43 0.032508561 ubox
26 45 0.059515345 ubox
26 48 0.025192994 ubox
27 31 0.036243745 ubox
27 34 0.064249874 ubox
27 35 0.527577384 ubox
27 37 0.020259162 ubox
27 38 0.805498622 ubox
27 42 0.043363466 ubox
27 44 0.059677557 ubox
27 47 0.025183844 ubox
28 33 0.053817442 ubox
28 36 0.017103124 ubox
28 40 0.106305827 ubox
28 41 0.031471557 ubox
28 43 0.033723274 ubox
29 36 0.806518065 ubox
29 39 0.115456517 ubox
29 40 0.008410558 ubox
29 43 0.010314364 ubox
29 45 0.022848678 ubox
29 48 0.011511349 ubox
30 35 0.806682225 ubox
30 37 0.020388414 ubox
30 38 0.114120874 ubox
30 42 0.014369670 ubox
30 44 0.022926282 ubox
30 47 0.011513961 ubox
31 36 0.026497999 ubox
31 39 0.013757857 ubox
31 41 0.012684887 ubox
31 43 0.018261606 ubox
31 45 0.004357513 ubox
31 48 0.069726425 ubox
32 38 0.013689864 ubox
32 42 0.012347583 ubox
32 44 0.004261320 ubox
32 47 0.069728112 ubox
33 37 0.010159835 ubox
33 46 0.067013662 ubox
33 49 0.010300424 ubox
34 40 0.016220790 ubox
34 41 0.003451005 ubox
34 45 0.055159309 ubox
34 48 0.010282167 ubox
35 39 0.016228776 ubox
35 43 0.035027620 ubox
35 45 0.045331084 ubox
35 48 0.115238279 ubox
36 42 0.036952243 ubox
36 44 0.058971053 ubox
36 47 0.115480548 ubox
37 41 0.022820502 ubox
37 43 0.055810401 ubox
38 45 0.171375676 ubox
38 48 0.130685834 ubox
39 44 0.171730322 ubox
39 47 0.130858514 ubox
40 46 0.125300813 ubox
40 47 0.004851080 ubox
41 46 0.010819256 ubox
41 49 0.093908702 ubox
42 48 0.119731719 ubox
43 47 0.112075564 ubox
43 49 0.023635581 ubox
44 48 0.036092786 ubox
3 18 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
showpage
end
%%EOF
