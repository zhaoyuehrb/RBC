%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF880)
} def

/sequence { (\
GCGCGCAGUUUCCUGGAGACCCGGAAGCAGAUUACGUGGAGUGACGGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.013484361 ubox
1 28 0.027554456 ubox
1 37 0.101316268 ubox
1 42 0.042717575 ubox
1 48 0.124451290 ubox
2 8 0.015764899 ubox
2 27 0.027470924 ubox
2 36 0.105488356 ubox
2 38 0.435993222 ubox
2 41 0.043441431 ubox
2 43 0.076881163 ubox
2 46 0.144734729 ubox
2 47 0.135455027 ubox
3 9 0.005382598 ubox
3 28 0.029656935 ubox
3 35 0.104975186 ubox
3 37 0.440473567 ubox
3 42 0.077513014 ubox
3 45 0.146019325 ubox
3 48 0.106754235 ubox
4 8 0.005700609 ubox
4 23 0.012414400 ubox
4 27 0.029536736 ubox
4 36 0.440938634 ubox
4 38 0.048469699 ubox
4 41 0.077406479 ubox
4 43 0.124623507 ubox
4 46 0.139010379 ubox
4 47 0.110730172 ubox
5 22 0.012493798 ubox
5 28 0.057175552 ubox
5 35 0.438635273 ubox
5 37 0.050166810 ubox
5 42 0.123775444 ubox
5 45 0.137878877 ubox
5 48 0.089719240 ubox
6 15 0.005660430 ubox
6 27 0.056946087 ubox
6 36 0.050125900 ubox
6 38 0.066756635 ubox
6 41 0.123352421 ubox
6 43 0.054491405 ubox
6 47 0.093476338 ubox
7 14 0.005700721 ubox
7 33 0.255978768 ubox
7 37 0.066773490 ubox
7 42 0.048375461 ubox
8 13 0.005651871 ubox
8 20 0.019106617 ubox
8 28 0.984811020 ubox
8 32 0.142260819 ubox
8 35 0.011717537 ubox
9 19 0.019210478 ubox
9 26 0.007822970 ubox
9 27 0.985978410 ubox
9 30 0.007586327 ubox
9 31 0.138380577 ubox
9 34 0.011031402 ubox
9 40 0.010028800 ubox
9 41 0.003169324 ubox
10 18 0.019210950 ubox
10 25 0.007136644 ubox
10 26 0.989359844 ubox
10 27 0.014038572 ubox
10 29 0.006948167 ubox
10 30 0.121482249 ubox
10 39 0.008573507 ubox
10 40 0.003836589 ubox
11 17 0.019192970 ubox
11 24 0.003683047 ubox
11 25 0.995131323 ubox
11 26 0.024453339 ubox
11 29 0.073321357 ubox
11 31 0.007084460 ubox
11 38 0.003971535 ubox
11 39 0.003934760 ubox
11 40 0.004189538 ubox
12 16 0.019041372 ubox
12 23 0.003526362 ubox
12 24 0.987278546 ubox
12 30 0.007304204 ubox
12 38 0.004008663 ubox
12 39 0.004272618 ubox
13 23 0.977826056 ubox
13 24 0.155788856 ubox
13 27 0.020957325 ubox
13 30 0.004088261 ubox
13 38 0.003975916 ubox
14 23 0.204408032 ubox
14 26 0.018805292 ubox
14 29 0.004246966 ubox
15 21 0.575847185 ubox
15 22 0.812496919 ubox
15 28 0.004252861 ubox
16 20 0.567116128 ubox
16 21 0.810169472 ubox
18 49 0.005089024 ubox
19 48 0.005137283 ubox
20 39 0.003416720 ubox
20 47 0.004578573 ubox
21 38 0.003814183 ubox
21 39 0.003993539 ubox
21 46 0.003920337 ubox
21 47 0.006093693 ubox
22 36 0.004348896 ubox
22 38 0.003990557 ubox
22 46 0.006556111 ubox
23 35 0.004444879 ubox
23 37 0.003583462 ubox
23 45 0.006952990 ubox
26 32 0.004278657 ubox
27 37 0.007006401 ubox
27 42 0.005078303 ubox
27 48 0.012035172 ubox
28 36 0.007563567 ubox
28 38 0.014126006 ubox
28 41 0.005097089 ubox
28 47 0.012822315 ubox
29 37 0.021107675 ubox
30 49 0.380471076 ubox
31 37 0.032873729 ubox
31 42 0.023594306 ubox
31 48 0.382425911 ubox
32 36 0.031023562 ubox
32 39 0.014185650 ubox
32 40 0.039413891 ubox
32 41 0.024206140 ubox
32 44 0.317068185 ubox
32 47 0.351818860 ubox
33 38 0.017772459 ubox
33 39 0.041761049 ubox
33 40 0.028910216 ubox
33 43 0.358242989 ubox
33 46 0.091586933 ubox
34 42 0.367252567 ubox
34 48 0.089860427 ubox
35 41 0.368221471 ubox
35 43 0.021174786 ubox
35 46 0.770168602 ubox
35 47 0.080840408 ubox
36 42 0.017064888 ubox
36 45 0.782653121 ubox
37 41 0.005332439 ubox
37 43 0.015756979 ubox
37 44 0.777776320 ubox
37 46 0.067295882 ubox
38 42 0.017740630 ubox
38 45 0.089036748 ubox
38 49 0.008311912 ubox
39 48 0.011138829 ubox
39 49 0.062953718 ubox
40 48 0.063181474 ubox
41 48 0.008874334 ubox
42 47 0.018522922 ubox
43 49 0.031611455 ubox
44 48 0.027917466 ubox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
showpage
end
%%EOF
