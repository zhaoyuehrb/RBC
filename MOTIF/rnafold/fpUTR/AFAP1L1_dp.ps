%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AFAP1L1)
} def

/sequence { (\
CUGUCUGGGGGAGGGGACCGCAGAGAGCGCCGGCCGCUGGGCUGGCCUGAGAGCGCAGCGCGCCGGCCGCUACCAGCCGCGCCGGAGCCCCUGCGCCCUGCGGCCCGCUCCCCGGGGACCGGGCCGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 25 0.006009867 ubox
1 27 0.027576823 ubox
1 115 0.003345259 ubox
1 116 0.003984566 ubox
1 117 0.026577960 ubox
1 122 0.365078919 ubox
1 123 0.034871605 ubox
1 127 0.030882540 ubox
2 24 0.003641669 ubox
2 26 0.076621009 ubox
2 114 0.003461769 ubox
2 116 0.017371601 ubox
2 121 0.395495021 ubox
2 122 0.033017694 ubox
2 126 0.031254006 ubox
2 129 0.027696464 ubox
3 119 0.732426758 ubox
3 120 0.354494605 ubox
3 124 0.032520942 ubox
3 125 0.025538967 ubox
3 128 0.037550500 ubox
3 130 0.015533221 ubox
4 24 0.084156232 ubox
4 115 0.004496127 ubox
4 116 0.058940649 ubox
4 117 0.541921690 ubox
4 118 0.731533641 ubox
4 123 0.036383049 ubox
4 127 0.032268468 ubox
4 129 0.014296257 ubox
5 23 0.085405840 ubox
5 114 0.010184971 ubox
5 115 0.081672409 ubox
5 116 0.749140247 ubox
5 117 0.641787103 ubox
5 122 0.036206338 ubox
5 126 0.031072734 ubox
5 127 0.014516610 ubox
6 22 0.085395357 ubox
6 114 0.082291958 ubox
6 115 0.826339488 ubox
6 116 0.528113728 ubox
6 121 0.036018736 ubox
6 126 0.014596445 ubox
7 21 0.085397549 ubox
7 92 0.004265665 ubox
7 112 0.003945850 ubox
7 113 0.079922869 ubox
7 120 0.035762282 ubox
7 125 0.016357078 ubox
8 19 0.014178914 ubox
8 91 0.004479480 ubox
8 111 0.004094287 ubox
8 112 0.073125078 ubox
8 113 0.992337704 ubox
8 119 0.025344207 ubox
8 124 0.016022069 ubox
9 18 0.014183721 ubox
9 19 0.084172316 ubox
9 90 0.004481100 ubox
9 110 0.004584059 ubox
9 111 0.065604549 ubox
9 112 0.993539205 ubox
9 113 0.004383135 ubox
10 18 0.084139495 ubox
10 89 0.004481658 ubox
10 109 0.004651103 ubox
10 110 0.057087406 ubox
10 111 0.994128874 ubox
10 112 0.003599696 ubox
11 18 0.003648481 ubox
11 88 0.004480311 ubox
11 108 0.009900538 ubox
11 109 0.044916617 ubox
11 110 0.994670854 ubox
12 109 0.995029404 ubox
13 106 0.005044240 ubox
13 108 0.993947068 ubox
14 105 0.005032812 ubox
14 106 0.866030497 ubox
15 83 0.004430172 ubox
15 104 0.004789345 ubox
15 105 0.866792812 ubox
15 106 0.491154040 ubox
16 82 0.004430288 ubox
16 104 0.867046551 ubox
16 105 0.490016418 ubox
18 103 0.995947973 ubox
19 79 0.003607834 ubox
19 102 0.996305974 ubox
20 77 0.004218311 ubox
20 101 0.996309384 ubox
21 76 0.004819160 ubox
21 100 0.996303521 ubox
22 48 0.003360466 ubox
22 99 0.992763652 ubox
23 47 0.003553022 ubox
23 98 0.988873873 ubox
24 48 0.065501451 ubox
24 71 0.016296188 ubox
24 99 0.012485445 ubox
25 47 0.066700110 ubox
25 70 0.013813779 ubox
25 98 0.018276236 ubox
26 48 0.578401680 ubox
26 71 0.733289363 ubox
27 46 0.006217136 ubox
27 47 0.593670739 ubox
27 70 0.756241931 ubox
27 77 0.008998096 ubox
27 94 0.018090637 ubox
27 96 0.018359975 ubox
27 130 0.080349068 ubox
28 45 0.004658013 ubox
28 49 0.026875743 ubox
28 69 0.756195743 ubox
28 76 0.009009522 ubox
28 93 0.018075023 ubox
28 95 0.018256861 ubox
28 129 0.084301602 ubox
29 46 0.636879111 ubox
29 48 0.003547652 ubox
29 67 0.548174431 ubox
29 68 0.534678058 ubox
29 94 0.014323672 ubox
29 128 0.084413284 ubox
30 45 0.637121483 ubox
30 66 0.765926769 ubox
30 93 0.014058213 ubox
30 127 0.084412895 ubox
31 44 0.637119261 ubox
31 65 0.765961787 ubox
31 84 0.003288489 ubox
31 126 0.084404099 ubox
32 43 0.636659514 ubox
32 64 0.765969102 ubox
32 83 0.003334316 ubox
32 89 0.009660588 ubox
32 91 0.008611845 ubox
32 125 0.084354585 ubox
33 42 0.637137971 ubox
33 63 0.765981980 ubox
33 82 0.003334110 ubox
33 88 0.009676047 ubox
33 90 0.008508856 ubox
33 124 0.084332546 ubox
34 40 0.005132122 ubox
34 41 0.637122114 ubox
34 62 0.765902372 ubox
34 81 0.003332040 ubox
34 87 0.009630085 ubox
34 122 0.012112126 ubox
34 123 0.081350937 ubox
35 39 0.007100417 ubox
35 40 0.636892517 ubox
35 60 0.765624066 ubox
35 121 0.017120922 ubox
35 122 0.069823062 ubox
36 59 0.766081460 ubox
36 108 0.005298044 ubox
36 113 0.006742608 ubox
36 120 0.020863009 ubox
37 58 0.766089279 ubox
37 76 0.003639257 ubox
37 107 0.005185546 ubox
37 115 0.022239597 ubox
37 116 0.005552944 ubox
37 117 0.005386215 ubox
37 122 0.004957135 ubox
38 57 0.765908169 ubox
38 75 0.003638926 ubox
38 114 0.022351608 ubox
38 115 0.005317275 ubox
38 116 0.005365082 ubox
38 121 0.010023903 ubox
39 56 0.765936224 ubox
39 74 0.003638482 ubox
39 106 0.005592599 ubox
39 110 0.070006559 ubox
39 111 0.035519821 ubox
39 112 0.008449364 ubox
39 113 0.022009618 ubox
39 120 0.011813107 ubox
40 73 0.003566025 ubox
40 105 0.005594853 ubox
40 109 0.071328720 ubox
40 110 0.035544322 ubox
40 111 0.008387551 ubox
40 112 0.021687073 ubox
40 119 0.011755863 ubox
41 54 0.766008203 ubox
41 104 0.005591488 ubox
41 108 0.081907338 ubox
41 109 0.004236557 ubox
41 110 0.006907049 ubox
41 111 0.017073116 ubox
42 51 0.006163786 ubox
42 53 0.766059985 ubox
42 103 0.005587743 ubox
42 107 0.083001883 ubox
43 50 0.012084863 ubox
43 52 0.764881707 ubox
43 102 0.005279878 ubox
43 107 0.005911229 ubox
44 48 0.005607385 ubox
44 68 0.003604713 ubox
44 101 0.003961666 ubox
44 105 0.083870253 ubox
44 106 0.005822945 ubox
45 67 0.003606280 ubox
45 101 0.003924678 ubox
45 104 0.084024691 ubox
45 105 0.004361279 ubox
46 66 0.003585672 ubox
46 100 0.005223177 ubox
46 103 0.084085207 ubox
47 53 0.003230802 ubox
47 65 0.003560960 ubox
47 102 0.084028030 ubox
48 52 0.007281190 ubox
48 100 0.003583404 ubox
48 102 0.003768784 ubox
49 101 0.013651790 ubox
50 99 0.110201502 ubox
51 98 0.118321853 ubox
53 63 0.003768012 ubox
53 96 0.641112282 ubox
54 62 0.003777293 ubox
54 95 0.642587981 ubox
55 61 0.003777093 ubox
55 94 0.642693553 ubox
56 60 0.003749668 ubox
56 93 0.642698677 ubox
57 92 0.642365580 ubox
58 88 0.005513269 ubox
58 91 0.640404780 ubox
59 87 0.006188506 ubox
60 88 0.640637840 ubox
61 81 0.003271946 ubox
61 87 0.640152804 ubox
62 80 0.003275525 ubox
62 88 0.004532811 ubox
63 85 0.641726826 ubox
63 87 0.003364539 ubox
64 79 0.003305947 ubox
64 84 0.642810258 ubox
65 78 0.004467569 ubox
65 83 0.642820017 ubox
66 77 0.004484835 ubox
66 80 0.006846107 ubox
66 82 0.642785314 ubox
67 76 0.004490005 ubox
67 79 0.009000989 ubox
67 81 0.567263067 ubox
68 79 0.433289877 ubox
68 81 0.302052080 ubox
69 77 0.369861504 ubox
69 78 0.325989575 ubox
69 80 0.427171869 ubox
69 88 0.019131414 ubox
70 76 0.467136946 ubox
70 79 0.427162031 ubox
70 87 0.019170917 ubox
71 75 0.420930352 ubox
71 86 0.019102020 ubox
73 85 0.020645018 ubox
74 84 0.020665284 ubox
74 93 0.012170145 ubox
74 100 0.004364722 ubox
75 92 0.012284607 ubox
75 99 0.010458636 ubox
76 82 0.021386574 ubox
76 91 0.012277983 ubox
76 96 0.021264860 ubox
76 98 0.013124316 ubox
77 81 0.021242842 ubox
77 85 0.006792933 ubox
77 95 0.015837855 ubox
78 84 0.006831375 ubox
78 95 0.020543593 ubox
79 83 0.006418077 ubox
79 88 0.012546066 ubox
79 94 0.025168065 ubox
79 96 0.763332867 ubox
79 130 0.005403847 ubox
80 87 0.012552576 ubox
80 93 0.025160521 ubox
80 95 0.764863433 ubox
80 129 0.005415011 ubox
81 88 0.004084267 ubox
81 92 0.020545159 ubox
81 94 0.764973188 ubox
81 96 0.008277424 ubox
81 128 0.005415684 ubox
82 87 0.004100830 ubox
82 93 0.762217588 ubox
82 95 0.008175541 ubox
82 127 0.005415562 ubox
83 93 0.059500957 ubox
83 126 0.005377395 ubox
84 90 0.062776969 ubox
84 91 0.757641055 ubox
84 92 0.080206347 ubox
84 97 0.009444026 ubox
84 125 0.004978800 ubox
85 89 0.063017088 ubox
85 90 0.755664850 ubox
85 91 0.080749962 ubox
85 96 0.009458229 ubox
85 124 0.004721802 ubox
86 92 0.008217335 ubox
87 91 0.008150797 ubox
87 94 0.011567220 ubox
87 96 0.007333720 ubox
88 93 0.011536269 ubox
88 95 0.007337848 ubox
90 123 0.003912765 ubox
91 122 0.003925235 ubox
92 121 0.003935771 ubox
93 120 0.004308931 ubox
93 130 0.005930856 ubox
94 129 0.005956687 ubox
95 128 0.005958910 ubox
96 117 0.004856540 ubox
96 127 0.005946365 ubox
97 116 0.004858419 ubox
97 126 0.005346309 ubox
98 115 0.004858322 ubox
99 114 0.004846439 ubox
100 113 0.004829585 ubox
100 128 0.008164116 ubox
101 126 0.010164163 ubox
101 127 0.005788501 ubox
102 111 0.003918140 ubox
102 125 0.013528412 ubox
103 110 0.003886706 ubox
103 124 0.013548877 ubox
104 123 0.013562554 ubox
105 122 0.013564057 ubox
106 121 0.013773842 ubox
107 120 0.013761254 ubox
109 117 0.003490384 ubox
109 118 0.017144456 ubox
110 116 0.004475089 ubox
110 117 0.018080072 ubox
111 115 0.004503145 ubox
111 116 0.018046553 ubox
111 117 0.008647529 ubox
111 123 0.019463999 ubox
112 116 0.008621397 ubox
112 121 0.003713377 ubox
112 122 0.045327732 ubox
113 121 0.079728217 ubox
113 126 0.003853421 ubox
114 120 0.081627571 ubox
114 125 0.022115088 ubox
114 131 0.017162883 ubox
115 119 0.080327454 ubox
115 124 0.022134333 ubox
115 125 0.015970992 ubox
115 130 0.016590437 ubox
115 131 0.084758498 ubox
116 124 0.016024663 ubox
116 125 0.023299742 ubox
116 130 0.090866539 ubox
116 131 0.024660044 ubox
117 124 0.023621825 ubox
117 130 0.034226309 ubox
119 127 0.277879225 ubox
120 126 0.281175723 ubox
120 129 0.125440254 ubox
121 125 0.263104471 ubox
121 128 0.129728053 ubox
121 131 0.133961490 ubox
122 130 0.126129523 ubox
122 131 0.839470146 ubox
123 130 0.885828117 ubox
124 129 0.884881692 ubox
3 119 0.9500000 lbox
4 118 0.9500000 lbox
5 117 0.9500000 lbox
6 116 0.9500000 lbox
8 113 0.9500000 lbox
9 112 0.9500000 lbox
10 111 0.9500000 lbox
11 110 0.9500000 lbox
12 109 0.9500000 lbox
13 108 0.9500000 lbox
14 106 0.9500000 lbox
15 105 0.9500000 lbox
16 104 0.9500000 lbox
18 103 0.9500000 lbox
19 102 0.9500000 lbox
20 101 0.9500000 lbox
21 100 0.9500000 lbox
22 99 0.9500000 lbox
23 98 0.9500000 lbox
26 71 0.9500000 lbox
27 70 0.9500000 lbox
28 69 0.9500000 lbox
29 68 0.9500000 lbox
30 66 0.9500000 lbox
31 65 0.9500000 lbox
32 64 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 60 0.9500000 lbox
36 59 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
41 54 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
79 96 0.9500000 lbox
80 95 0.9500000 lbox
81 94 0.9500000 lbox
82 93 0.9500000 lbox
84 91 0.9500000 lbox
85 90 0.9500000 lbox
122 131 0.9500000 lbox
123 130 0.9500000 lbox
124 129 0.9500000 lbox
showpage
end
%%EOF
