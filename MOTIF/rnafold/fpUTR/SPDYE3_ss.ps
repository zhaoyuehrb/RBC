%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGUCGGCGCCUGGCAGUUCAGGUGAACAACAGUAACUUCUCAGAGCUGUUCUCCACUCCUGACUUCUCCCAGCCUCGAGAAUUGAUAACACACUCUUCUGGAUCCCAGCAGUGUCCAGAAGAAGACCAAGGACAGAACAGAGACUAGCUUCGGUGAGAUUGGACAGAUUUUGGGAAAGAUC\
) } def
/len { sequence length } bind def

/coor [
[-67.68528748 443.25598145]
[-78.80714417 443.51367188]
[-89.45091248 440.37036133]
[-98.47248840 452.35415649]
[-107.49406433 464.33795166]
[-116.51563263 476.32174683]
[-111.34201813 492.41400146]
[-116.71814728 508.26449585]
[-130.34123230 517.69964600]
[-146.73796082 517.16925049]
[-155.55473328 529.30450439]
[-164.37152100 541.43975830]
[-173.18829346 553.57501221]
[-182.00506592 565.71026611]
[-190.82185364 577.84552002]
[-199.63862610 589.98077393]
[-200.81375122 606.33776855]
[-215.68302917 613.25421143]
[-228.95021057 603.61499023]
[-226.96717834 587.33618164]
[-211.77388000 581.16400146]
[-202.95710754 569.02874756]
[-194.14033508 556.89349365]
[-185.32354736 544.75823975]
[-176.50677490 532.62298584]
[-167.68998718 520.48773193]
[-158.87321472 508.35247803]
[-164.16180420 496.08013916]
[-162.67811584 482.69039917]
[-154.70384216 471.69824219]
[-142.23861694 466.04241943]
[-128.49942017 467.30017090]
[-119.47785187 455.31637573]
[-110.45627594 443.33258057]
[-101.43470764 431.34878540]
[-109.76509094 414.41055298]
[-108.35726929 395.50552368]
[-97.51717377 379.85403442]
[-80.16670990 371.81982422]
[-61.05656815 373.69378662]
[-52.86919022 361.12530518]
[-44.68180847 348.55682373]
[-36.49443054 335.98834229]
[-28.30705070 323.41986084]
[-20.11967087 310.85137939]
[-11.93229103 298.28286743]
[-3.74491119 285.71438599]
[4.44246864 273.14590454]
[12.52283764 260.50836182]
[20.49561501 247.80265808]
[28.46839142 235.09695435]
[36.44116974 222.39126587]
[44.41394424 209.68556213]
[52.38672256 196.97985840]
[46.27734756 185.09478760]
[46.84880829 171.63522339]
[54.05860138 160.12716675]
[66.11119843 153.63830566]
[79.90407562 153.96063232]
[88.09145355 141.39215088]
[96.27883148 128.82365417]
[85.57940674 126.70626068]
[75.98491669 120.59853363]
[68.98265839 111.05044556]
[65.79519653 99.16274261]
[67.17898560 86.46298981]
[73.27959442 74.70953369]
[65.09220886 62.14105225]
[56.90483093 49.57256699]
[48.71745300 37.00408173]
[40.53007126 24.43559647]
[25.02685547 23.77994537]
[12.89082241 14.11059570]
[8.78852463 -0.85438925]
[14.29738045 -15.36066818]
[27.29912186 -23.83028030]
[42.79431534 -23.00648880]
[54.82474136 -13.20605469]
[58.76445389 1.80255151]
[53.09855652 16.24821663]
[61.28593826 28.81670189]
[69.47332001 41.38518524]
[77.66069794 53.95367050]
[85.84807587 66.52215576]
[93.34564209 66.71318054]
[92.18619537 51.75805664]
[91.02674866 36.80293274]
[89.86729431 21.84781265]
[85.90756989 7.37989759]
[95.15832520 -4.42787552]
[110.15345001 -4.04567432]
[118.79066467 8.21803379]
[114.09928131 22.46519089]
[112.17977905 37.34186935]
[110.26027679 52.21854401]
[108.34077454 67.09522247]
[115.83834839 67.28624725]
[124.65512085 55.15098953]
[133.47190857 43.01573563]
[142.28868103 30.88047981]
[151.10545349 18.74522400]
[159.92224121 6.60997009]
[168.73901367 -5.52528477]
[177.55580139 -17.66053963]
[186.37257385 -29.79579544]
[195.18934631 -41.93104935]
[189.49649048 -56.26963043]
[192.48179626 -71.40539551]
[203.19265747 -82.50859070]
[218.21128845 -86.03621674]
[232.74530029 -80.86261749]
[242.15693665 -68.63867950]
[243.44297791 -53.26501465]
[236.19306946 -39.64730072]
[222.72059631 -32.13090134]
[207.32461548 -33.11426926]
[198.50782776 -20.97901535]
[189.69105530 -8.84376144]
[180.87426758 3.29149389]
[172.05749512 15.42674923]
[163.24070740 27.56200409]
[154.42393494 39.69725800]
[145.60716248 51.83251190]
[136.79037476 63.96776962]
[127.97360229 76.10301971]
[132.89015198 90.57089996]
[131.29040527 104.68345642]
[124.36806488 115.83818054]
[139.24656677 117.74345398]
[154.12507629 119.64871979]
[168.79624939 113.72695160]
[180.43765259 123.01818085]
[195.31616211 124.92344666]
[210.19467163 126.82871246]
[222.62142944 117.43650818]
[237.68321228 119.58066559]
[246.56065369 131.48556519]
[261.43917847 133.39082336]
[271.98211670 122.00549316]
[287.21017456 119.02458954]
[301.26785278 125.59432983]
[308.74966431 139.18852234]
[306.77871704 154.57991028]
[296.11288452 165.85020447]
[280.85336304 168.66574097]
[266.86779785 161.94389343]
[259.53390503 148.26933289]
[244.65539551 146.36405945]
[233.06462097 155.64790344]
[217.94854736 153.92764282]
[208.28939819 141.70721436]
[193.41090393 139.80195618]
[178.53239441 137.89668274]
[164.92543030 143.95472717]
[152.21980286 134.52722168]
[137.34130859 132.62196350]
[122.46279144 130.71669006]
[108.84732056 137.01104736]
[100.65994263 149.57952881]
[92.47255707 162.14801025]
[98.72649384 177.85200500]
[94.43860626 194.03085327]
[81.48734283 204.36888123]
[65.09242249 204.95263672]
[57.11964417 217.65834045]
[49.14686966 230.36402893]
[41.17409134 243.06973267]
[33.20131683 255.77543640]
[25.22853851 268.48114014]
[23.31074142 277.43591309]
[17.01095390 281.33328247]
[8.82357407 293.90176392]
[0.63619387 306.47024536]
[-7.55118608 319.03875732]
[-15.73856544 331.60723877]
[-23.92594528 344.17572021]
[-32.11332703 356.74420166]
[-40.30070496 369.31268311]
[-48.48808670 381.88116455]
[-41.87353516 391.05688477]
[-38.38506699 401.78881836]
[-38.34045410 413.04678345]
[-41.72769165 423.75521851]
[-48.20769119 432.89611816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[5 33]
[6 32]
[10 27]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[40 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 169]
[50 168]
[51 167]
[52 166]
[53 165]
[54 164]
[59 160]
[60 159]
[61 158]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[97 125]
[98 124]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[104 118]
[105 117]
[106 116]
[128 157]
[129 156]
[130 155]
[132 153]
[133 152]
[134 151]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
