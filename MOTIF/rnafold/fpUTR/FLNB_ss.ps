%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCAGGGGCGGGCGGCCGCAGAGCAGCACCGGCCGUGGCUCCGGUAGCAGCAAGUUCGAACCCCGCUCCCGCUCCGCUUCGGUUCUCGCUCCUUCGGCCCUUGGGCCUCCAAACACCAGUCCCCGGCAGCUCGUUGCGCAUUGCGCUCUCCCCGCCACCAGG\
) } def
/len { sequence length } bind def

/coor [
[102.24757385 328.05993652]
[87.33464813 333.97470093]
[73.48441315 325.87835693]
[71.32157135 309.98178101]
[82.50527954 298.47943115]
[83.63970947 283.52236938]
[76.88711548 270.24639893]
[85.64595032 257.07092285]
[86.78038025 242.11386108]
[87.77323151 227.14675903]
[88.62441254 212.17092896]
[89.47558594 197.19509888]
[90.32676697 182.21926880]
[91.17794800 167.24343872]
[92.02912903 152.26760864]
[63.92853546 119.64159393]
[73.29767609 88.00460815]
[61.64644241 78.55744934]
[49.99520874 69.11029053]
[38.34397888 59.66313553]
[26.69274521 50.21597672]
[9.35267258 52.36156464]
[-3.92695570 41.53273010]
[-5.26082087 24.78785324]
[-17.08874512 15.56287575]
[-28.91666985 6.33789968]
[-40.74459457 -2.88707709]
[-52.65928268 -11.99971962]
[-64.65966034 -20.99921036]
[-80.34226990 -23.08880997]
[-85.88229370 -36.91477966]
[-97.88267517 -45.91426849]
[-109.88305664 -54.91376114]
[-121.88343811 -63.91325378]
[-133.88381958 -72.91274261]
[-146.76849365 -71.86763000]
[-156.58552551 -79.64680481]
[-158.39230347 -91.63559723]
[-170.22021484 -100.86057281]
[-182.04814148 -110.08554840]
[-193.87606812 -119.31052399]
[-206.99104309 -116.12878418]
[-219.35824585 -121.02336884]
[-226.53025818 -131.99246216]
[-226.06799316 -144.89501953]
[-237.71922302 -154.34217834]
[-249.37045288 -163.78932190]
[-264.96273804 -166.47088623]
[-269.97561646 -180.49659729]
[-281.62683105 -189.94375610]
[-293.27807617 -199.39091492]
[-306.26345825 -191.57069397]
[-321.14099121 -188.66639709]
[-336.11413574 -191.02874756]
[-349.37481689 -198.37245178]
[-359.32174683 -209.81072998]
[-364.75378418 -223.96237183]
[-365.01498413 -239.11848450]
[-360.07379150 -253.44888306]
[-350.52688599 -265.22311401]
[-337.52713013 -273.01937866]
[-322.64428711 -275.89627075]
[-307.67550659 -273.50631714]
[-294.42837524 -266.13818359]
[-284.50253296 -254.68159485]
[-279.09658813 -240.51997375]
[-278.86334229 -225.36341858]
[-283.83093262 -211.04214478]
[-272.17968750 -201.59498596]
[-260.52844238 -192.14782715]
[-245.76953125 -190.14199829]
[-239.92329407 -175.44056702]
[-228.27206421 -165.99340820]
[-216.62083435 -156.54624939]
[-200.00558472 -159.01684570]
[-186.46482849 -148.51637268]
[-184.65109253 -131.13845825]
[-172.82316589 -121.91347504]
[-160.99523926 -112.68849945]
[-149.16731262 -103.46352386]
[-131.69847107 -101.99814606]
[-124.88432312 -84.91312408]
[-112.88394928 -75.91363525]
[-100.88356781 -66.91413879]
[-88.88318634 -57.91464996]
[-76.88280487 -48.91516113]
[-62.05854416 -47.46926498]
[-55.66017151 -32.99959183]
[-43.65979004 -24.00010109]
[-36.38979340 -22.49614906]
[-31.51961899 -14.71500206]
[-19.69169426 -5.49002552]
[-7.86376905 3.73495126]
[3.96415567 12.95992756]
[16.43131447 9.60443687]
[28.73357773 14.12253952]
[36.28703308 25.07013512]
[36.13990402 38.56474304]
[47.79113388 48.01190186]
[59.44236755 57.45906067]
[71.09359741 66.90621948]
[82.74483490 76.35337830]
[95.03678894 65.17927551]
[113.97644806 61.37874222]
[134.85272217 68.50918579]
[151.28065491 87.12627411]
[166.10905457 84.86390686]
[180.93746948 82.60154724]
[195.76586914 80.33917999]
[205.12847900 67.89010620]
[220.19882202 65.80698395]
[232.00941467 74.80951691]
[246.83781433 72.54714966]
[250.43627930 57.77828217]
[259.41665649 45.51364899]
[272.40951538 37.62352371]
[287.43353271 35.31108856]
[302.19766235 38.92897415]
[314.45046997 47.92547989]
[322.32348633 60.92870331]
[324.61618042 75.95574951]
[320.97885132 90.71510315]
[311.96624756 102.95606232]
[298.95266724 110.81198120]
[283.92263794 113.08488464]
[269.16806030 109.42816925]
[256.93896484 100.39945221]
[249.10018921 87.37556458]
[234.27177429 89.63792419]
[225.68305969 101.75276947]
[210.67716980 104.25836945]
[198.02824402 95.16758728]
[183.19982910 97.42995453]
[168.37142944 99.69231415]
[153.54301453 101.95468140]
[151.37437439 109.13430786]
[161.64141846 120.06991577]
[147.03707886 123.49355316]
[144.86843872 130.67317200]
[155.96481323 140.76626587]
[167.06118774 150.85934448]
[178.15756226 160.95243835]
[193.94311523 167.13732910]
[192.36981201 184.01811218]
[175.71319580 187.17936707]
[168.06448364 172.04881287]
[156.96810913 161.95571899]
[145.87171936 151.86264038]
[134.77534485 141.76954651]
[127.83274841 144.60685730]
[133.50714111 158.49215698]
[119.62175751 164.16630554]
[113.94755554 150.28147888]
[107.00495911 153.11878967]
[106.15377808 168.09461975]
[105.30259705 183.07044983]
[104.45141602 198.04627991]
[103.60024261 213.02210999]
[102.74906158 227.99794006]
[105.39504242 236.78791809]
[101.73741913 243.24829102]
[100.60298920 258.20535278]
[107.27444458 272.55114746]
[98.59675598 284.65679932]
[97.46231842 299.61386108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 165]
[6 164]
[8 162]
[9 161]
[10 159]
[11 158]
[12 157]
[13 156]
[14 155]
[15 154]
[17 102]
[18 101]
[19 100]
[20 99]
[21 98]
[24 94]
[25 93]
[26 92]
[27 91]
[28 89]
[29 88]
[31 86]
[32 85]
[33 84]
[34 83]
[35 82]
[38 80]
[39 79]
[40 78]
[41 77]
[45 74]
[46 73]
[47 72]
[49 70]
[50 69]
[51 68]
[106 135]
[107 134]
[108 133]
[109 132]
[112 129]
[113 128]
[139 149]
[140 148]
[141 147]
[142 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
