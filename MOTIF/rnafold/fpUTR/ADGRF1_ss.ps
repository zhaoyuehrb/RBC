%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUAAUGCGUGCCAGGAAUUGCUGAUGGAUCAGUGAGCCUGUGUUCAUGCCAGUGAGCUGCUGUGGCUCAGAUACUGAUACUUUCUUUCCAAACAGCAUAAGAAGUGAUUGAGCCACAAGUAUACUGAAGGAAGGGCUCCCUCGAGUUCUGGUGUGAAGAGAUAAAUCACCAGUCACAGACUAUGCACCCGACUGCUGCUGUUCAGUCCAGGGAAA\
) } def
/len { sequence length } bind def

/coor [
[115.80613708 258.20095825]
[113.85530853 243.32833862]
[120.16117859 229.71820068]
[132.76846313 221.59068298]
[147.76794434 221.46595764]
[160.50758362 229.38148499]
[155.39996338 215.27786255]
[150.29234314 201.17424011]
[145.18472290 187.07061768]
[140.07710266 172.96699524]
[125.45317841 169.62918091]
[114.73204041 180.11997986]
[104.08712006 190.68812561]
[93.51897430 201.33305359]
[82.95083618 211.97796631]
[72.38269043 222.62289429]
[71.64962769 235.49726868]
[62.63203049 244.14566040]
[50.53965759 244.32707214]
[39.81851578 254.81788635]
[29.09737587 265.30871582]
[18.37623405 275.79949951]
[7.65509367 286.29031372]
[-3.06604743 296.78112793]
[-13.78718853 307.27194214]
[-17.67984009 323.20239258]
[-33.49600220 327.53613281]
[-44.96535873 315.81494141]
[-40.28922272 300.09661865]
[-24.27799988 296.55081177]
[-13.55685902 286.05999756]
[-2.83571815 275.56918335]
[7.88542271 265.07836914]
[18.60656357 254.58755493]
[29.32770538 244.09675598]
[40.04884720 233.60594177]
[43.85955429 216.47372437]
[61.73776627 212.05474854]
[72.30590820 201.40983582]
[82.87405396 190.76490784]
[93.44219971 180.11997986]
[95.92288971 173.16169739]
[104.24122620 169.39884949]
[114.96237183 158.90803528]
[92.40815735 157.87615967]
[72.69879913 148.85456848]
[58.42282486 133.76219177]
[51.17601395 115.25684357]
[51.39611053 96.28469086]
[58.38468933 79.61669159]
[70.50113678 67.44411469]
[62.47474289 54.77222061]
[54.44834518 42.10032272]
[46.42194748 29.42842674]
[38.39554977 16.75653267]
[24.47475433 9.23841858]
[24.20089531 -5.65366888]
[16.17449760 -18.32556534]
[8.14809990 -30.99745941]
[2.48484492 -34.39498901]
[-0.21106805 -39.39147186]
[0.07893461 -44.15444946]
[-7.57723808 -57.05340576]
[-15.23341084 -69.95236206]
[-22.88958359 -82.85131073]
[-30.54575539 -95.75026703]
[-38.20192719 -108.64922333]
[-45.85810089 -121.54817200]
[-53.51427460 -134.44712830]
[-61.17044830 -147.34608459]
[-68.82662201 -160.24504089]
[-82.52392578 -168.16300964]
[-82.36653137 -183.05679321]
[-90.02270508 -195.95574951]
[-97.67887878 -208.85470581]
[-105.33505249 -221.75364685]
[-119.63366699 -217.02464294]
[-134.61463928 -215.48042297]
[-149.57727051 -217.19322205]
[-163.82174683 -222.08293152]
[-176.68179321 -229.92085266]
[-187.55596924 -240.34037781]
[-195.93563843 -252.85418701]
[-201.42886353 -266.87695312]
[-203.77874756 -281.75286865]
[-202.87535095 -296.78607178]
[-198.76095581 -311.27352905]
[-191.62797546 -324.53753662]
[-181.81002808 -335.95779419]
[-169.76634216 -345.00012207]
[-156.06021118 -351.24160767]
[-141.33270264 -354.39028931]
[-126.27262878 -354.29895020]
[-111.58438873 -350.97183228]
[-97.95497894 -344.56454468]
[-86.02187347 -335.37677002]
[-76.34320831 -323.83825684]
[-69.37165833 -310.48864746]
[-65.43331146 -295.95239258]
[-64.71235657 -280.90930176]
[-67.24252319 -266.06301880]
[-72.90547180 -252.10789490]
[-81.43632507 -239.69667053]
[-92.43609619 -229.40982056]
[-84.77992249 -216.51086426]
[-77.12374878 -203.61192322]
[-69.46757507 -190.71296692]
[-56.31789398 -183.71760559]
[-55.92766571 -167.90121460]
[-48.27149200 -155.00225830]
[-40.61531830 -142.10330200]
[-32.95914841 -129.20434570]
[-25.30297470 -116.30539703]
[-17.64680099 -103.40644073]
[-9.99062920 -90.50748444]
[-2.33445644 -77.60852814]
[5.32171631 -64.70957947]
[12.97788906 -51.81062317]
[20.81999588 -39.02385712]
[28.84639359 -26.35196114]
[36.87279129 -13.68006611]
[50.21948624 -7.06833220]
[51.06744385 8.73013401]
[59.09384155 21.40202904]
[67.12023926 34.07392502]
[75.14663696 46.74582291]
[83.17303467 59.41771698]
[95.34721375 53.49195099]
[109.53459930 51.37816238]
[124.50074005 53.73104858]
[138.80851746 60.79697800]
[150.95448303 72.35471344]
[159.52125549 87.70166016]
[171.77035522 79.04373932]
[184.01945496 70.38582611]
[196.26855469 61.72790527]
[208.51765442 53.06999207]
[220.76675415 44.41207504]
[233.01585388 35.75415802]
[239.38549805 20.64257622]
[255.68875122 18.87180519]
[265.15426636 32.26345825]
[258.04467773 47.04135513]
[241.67378235 48.00325775]
[229.42468262 56.66117477]
[217.17558289 65.31909180]
[204.92646790 73.97700500]
[192.67736816 82.63492584]
[180.42826843 91.29283905]
[168.17916870 99.95075989]
[173.08207703 114.12684631]
[188.06283569 113.36711121]
[203.04357910 112.60736847]
[218.02432251 111.84763336]
[223.46649170 97.62432098]
[234.22790527 86.84879303]
[248.44406128 81.38797760]
[263.65194702 82.18798828]
[277.21670532 89.11022949]
[286.78814697 100.95536804]
[290.70797729 115.67117310]
[288.29702759 130.70803833]
[279.97305298 143.46073914]
[267.17822266 151.71978760]
[252.12928772 154.05424500]
[237.43359375 150.05967712]
[225.63725281 140.42814636]
[218.78405762 126.82838440]
[203.80331421 127.58811951]
[188.82257080 128.34785461]
[173.84181213 129.10758972]
[171.14210510 143.86264038]
[184.88328552 149.87760925]
[198.62448120 155.89257812]
[212.36566162 161.90753174]
[229.30012512 162.72006226]
[233.20727539 179.21765137]
[218.43603516 187.53909302]
[206.35069275 175.64872742]
[192.60951233 169.63375854]
[178.86833191 163.61878967]
[165.12713623 157.60383606]
[154.18072510 167.85937500]
[159.28834534 181.96299744]
[164.39596558 196.06661987]
[169.50358582 210.17024231]
[174.61120605 224.27386475]
[180.62617493 238.01504517]
[187.52296448 251.33549500]
[194.41973877 264.65594482]
[201.50863647 277.87515259]
[208.78816223 290.99035645]
[216.06770325 304.10556030]
[223.34722900 317.22076416]
[230.62675476 330.33596802]
[246.04498291 332.08459473]
[257.46801758 342.58670044]
[260.50344849 357.80398560]
[253.98410034 371.88510132]
[240.41680908 379.41555786]
[225.01844788 377.49975586]
[213.71002197 366.87435913]
[210.83984375 351.62506104]
[217.51156616 337.61547852]
[210.23202515 324.50027466]
[202.95249939 311.38507080]
[195.67297363 298.26989746]
[188.39344788 285.15469360]
[184.13391113 283.00375366]
[181.17814636 278.15646362]
[181.09928894 271.55273438]
[174.20251465 258.23226929]
[167.30572510 244.91183472]
[164.47787476 259.64285278]
[154.20989990 270.57760620]
[139.68566895 274.32550049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 44]
[12 43]
[13 41]
[14 40]
[15 39]
[16 38]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[25 30]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[57 121]
[58 120]
[59 119]
[62 118]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[73 107]
[74 106]
[75 105]
[76 104]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[151 171]
[152 170]
[153 169]
[154 168]
[172 182]
[173 181]
[174 180]
[175 179]
[188 213]
[189 212]
[190 211]
[191 208]
[192 207]
[193 206]
[194 205]
[195 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
