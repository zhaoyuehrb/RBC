%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGACGCGGCCGGCGUCCCAAGAUGGCGGCGGCGGCGGCUCCCGGAAGGCCGCGGCGGCGUCCCGGCUGCUAAGGCGGGCCCCACGCGGCUGGCAGCGGACAGGCCGGACCUACGGCCGGAGGACGGGCGGCAGCCGCCUCUGCGCGGACCGGGGCUGGGCCGUGCGGCGGCAGCGGCGCCAGGGGAUGCUCUUGCUGGGCCUGGCCUCUCCCUUCUCAACUUAGGGCGGCGGCGGGCCCGCGCCCCUGGCUC\
CCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[268.63607788 419.66409302]
[265.25503540 423.95462036]
[257.26913452 436.65206909]
[255.35957336 445.55105591]
[249.11125183 449.45272827]
[240.97424316 462.05386353]
[238.95852661 470.92938232]
[232.66403198 474.75616455]
[224.37709045 487.25921631]
[223.20234680 503.03674316]
[209.72167969 509.37084961]
[201.43473816 521.87390137]
[193.14779663 534.37695312]
[184.86085510 546.88006592]
[183.68611145 562.65759277]
[170.20544434 568.99163818]
[161.91850281 581.49475098]
[153.63156128 593.99780273]
[145.34461975 606.50085449]
[137.13250732 619.05322266]
[128.99551392 631.65435791]
[120.85850525 644.25549316]
[117.34570312 660.84155273]
[100.43540955 662.05749512]
[94.58575439 646.14465332]
[108.25734711 636.11853027]
[116.39434814 623.51733398]
[124.53134918 610.91619873]
[125.51650238 603.61590576]
[132.84155273 598.21392822]
[141.12849426 585.71087646]
[149.41543579 573.20776367]
[157.70237732 560.70471191]
[158.28437805 545.82147217]
[172.35778809 538.59307861]
[180.64472961 526.09002686]
[188.93167114 513.58697510]
[197.21861267 501.08389282]
[197.80061340 486.20068359]
[211.87402344 478.97229004]
[220.16096497 466.46920776]
[228.37309265 453.91687012]
[236.51008606 441.31570435]
[244.57167053 428.66616821]
[252.55757141 415.96871948]
[239.18215942 422.75830078]
[225.14807129 417.46258545]
[219.59226990 403.52944946]
[226.13188171 390.03005981]
[240.50926208 385.75326538]
[253.36370850 393.48318481]
[246.30757141 380.24642944]
[239.25143433 367.00970459]
[232.19531250 353.77297974]
[225.13917542 340.53625488]
[218.08303833 327.29953003]
[212.18241882 322.88961792]
[211.02275085 313.86227417]
[204.12524414 300.54220581]
[197.22772217 287.22213745]
[190.33020020 273.90206909]
[183.19514465 260.70770264]
[175.82482910 247.64332581]
[168.45449829 234.57891846]
[161.08418274 221.51452637]
[153.71386719 208.45013428]
[146.34353638 195.38574219]
[138.97322083 182.32135010]
[131.52500916 169.30120850]
[123.99916077 156.32579041]
[116.47331238 143.35035706]
[108.94746399 130.37493896]
[96.21920013 135.65127563]
[80.88346100 135.17843628]
[65.63858032 127.83805084]
[53.59579086 113.78607941]
[47.68597412 94.57465363]
[34.49162674 87.43959045]
[18.67226219 87.68115997]
[11.15746689 74.82125854]
[-2.03688335 67.68619537]
[-15.23123264 60.55112839]
[-28.42558289 53.41606522]
[-43.49793625 58.16998672]
[-57.47845840 50.79974365]
[-62.07276154 35.67797470]
[-54.55511856 21.77615356]
[-39.38562012 17.34198570]
[-25.56405830 25.00618362]
[-21.29051971 40.22171783]
[-8.09616947 47.35678101]
[5.09818029 54.49184418]
[18.29253006 61.62690735]
[33.16814423 60.87498856]
[41.62668991 74.24523926]
[54.82103729 81.38030243]
[60.23403168 76.18901825]
[49.85145569 65.36302185]
[39.46887589 54.53703308]
[29.08647728 43.71087265]
[39.91281128 33.32865143]
[50.29486465 44.15445709]
[60.67744446 54.98044586]
[71.06002045 65.80643463]
[76.47301483 60.61514664]
[69.89566040 47.13410950]
[63.31830597 33.65307236]
[56.74094772 20.17203331]
[50.16359329 6.69099569]
[35.13997269 1.78524148]
[28.06015968 -12.34457779]
[33.12447739 -27.31549072]
[47.32835770 -34.24551773]
[62.24489212 -29.02320290]
[69.02436066 -14.74684620]
[63.64463043 0.11363900]
[70.22198486 13.59467697]
[76.79934692 27.07571411]
[83.37670135 40.55675125]
[89.95405579 54.03779221]
[104.60865784 50.83737564]
[104.96697998 35.84165573]
[105.32530212 20.84593582]
[105.68362427 5.85021591]
[106.04194641 -9.14550400]
[103.12576294 -17.76721191]
[106.49517822 -24.31791306]
[107.03260040 -39.30828094]
[104.21960449 -47.96421051]
[107.66703033 -54.47419739]
[108.38346863 -69.45707703]
[100.39469147 -83.77879333]
[109.03443146 -97.71747589]
[125.41486359 -96.93421173]
[132.68519592 -82.23474884]
[123.36634827 -68.74063873]
[122.64990997 -53.75775528]
[122.02296448 -38.77086258]
[121.48554993 -23.78049278]
[121.03766632 -8.78718090]
[120.67934418 6.20853853]
[120.32102203 21.20425797]
[119.96269989 36.19997787]
[119.60437775 51.19569778]
[139.50054932 77.18060303]
[138.25767517 105.43470764]
[121.92288971 122.84909058]
[129.44873047 135.82450867]
[136.97457886 148.79994202]
[144.50042725 161.77536011]
[151.48997498 167.60496521]
[152.03761292 174.95103455]
[159.40794373 188.01542664]
[166.77825928 201.07981873]
[174.14857483 214.14421082]
[181.51889038 227.20860291]
[188.88922119 240.27299500]
[196.25953674 253.33738708]
[200.69816589 255.96102905]
[203.43315125 259.64752197]
[204.34428406 263.57839966]
[203.65026855 267.00454712]
[210.54779053 280.32461548]
[217.44531250 293.64468384]
[224.34281921 306.96475220]
[231.31977844 320.24337769]
[238.37590027 333.48013306]
[245.43203735 346.71685791]
[252.48817444 359.95358276]
[259.54431152 373.19030762]
[266.60043335 386.42703247]
[277.30163574 396.93820190]
[290.66265869 403.75604248]
[304.02368164 410.57388306]
[316.48974609 407.34622192]
[327.46804810 413.27462769]
[331.34790039 424.71078491]
[344.62652588 431.68774414]
[357.90515137 438.66470337]
[376.29840088 437.51773071]
[385.06018066 452.73867798]
[398.42120361 459.55651855]
[411.78222656 466.37435913]
[425.14324951 473.19219971]
[438.50427246 480.01004028]
[451.86532593 486.82788086]
[465.22634888 493.64572144]
[478.58737183 500.46353149]
[487.62149048 501.56927490]
[492.06655884 507.44345093]
[505.34518433 514.42041016]
[518.62384033 521.39733887]
[513.85504150 507.17556763]
[519.24945068 493.17913818]
[532.32940674 485.83645630]
[547.08740234 488.51995850]
[556.74530029 499.99716187]
[556.86724854 514.99664307]
[547.39721680 526.62933350]
[532.68389893 529.55230713]
[545.33343506 537.61389160]
[557.98297119 545.67547607]
[570.63250732 553.73706055]
[583.28204346 561.79864502]
[595.93157959 569.86029053]
[608.58111572 577.92187500]
[617.46850586 579.88452148]
[621.33276367 586.15606689]
[633.88513184 594.36816406]
[646.48626709 602.50518799]
[659.13580322 610.56677246]
[674.93188477 611.45861816]
[681.50646973 624.82366943]
[694.15600586 632.88525391]
[706.80554199 640.94683838]
[719.45507812 649.00842285]
[733.42047119 642.45318604]
[748.70989990 644.51141357]
[760.44458008 654.52642822]
[764.88006592 669.30242920]
[760.60095215 684.12445068]
[748.97265625 694.26287842]
[733.70581055 696.48248291]
[719.67199707 690.07513428]
[711.34930420 677.08526611]
[711.39349365 661.65795898]
[698.74395752 653.59637451]
[686.09442139 645.53479004]
[673.44488525 637.47320557]
[658.55358887 637.15795898]
[651.07421875 623.21630859]
[638.42468262 615.15472412]
[631.11865234 614.21319580]
[625.67297363 606.92053223]
[613.12066650 598.70837402]
[600.51953125 590.57141113]
[587.86999512 582.50982666]
[575.22045898 574.44818115]
[562.57092285 566.38659668]
[549.92138672 558.32501221]
[537.27185059 550.26342773]
[524.62231445 542.20184326]
[511.64688110 534.67596436]
[498.36822510 527.69903564]
[485.08959961 520.72210693]
[471.76953125 513.82458496]
[458.40850830 507.00674438]
[445.04748535 500.18890381]
[431.68643188 493.37106323]
[418.32540894 486.55322266]
[404.96438599 479.73538208]
[391.60336304 472.91754150]
[378.24234009 466.09970093]
[366.66369629 469.53103638]
[355.48651123 463.98669434]
[350.92822266 451.94332886]
[337.64956665 444.96636963]
[324.37094116 437.98944092]
[306.88400269 439.61804199]
[297.20584106 423.93490601]
[283.84481812 417.11706543]
[270.48379517 410.29922485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 45]
[3 44]
[5 43]
[6 42]
[8 41]
[9 40]
[11 38]
[12 37]
[13 36]
[14 35]
[16 33]
[17 32]
[18 31]
[19 30]
[20 28]
[21 27]
[22 26]
[51 171]
[52 170]
[53 169]
[54 168]
[55 167]
[56 166]
[58 165]
[59 164]
[60 163]
[61 162]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[69 150]
[70 149]
[71 148]
[72 147]
[77 96]
[78 95]
[80 93]
[81 92]
[82 91]
[83 90]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[121 144]
[122 143]
[123 142]
[124 141]
[125 140]
[127 139]
[128 138]
[130 137]
[131 136]
[172 262]
[173 261]
[174 260]
[177 258]
[178 257]
[179 256]
[181 253]
[182 252]
[183 251]
[184 250]
[185 249]
[186 248]
[187 247]
[188 246]
[190 245]
[191 244]
[192 243]
[200 242]
[201 241]
[202 240]
[203 239]
[204 238]
[205 237]
[206 236]
[208 235]
[209 234]
[210 232]
[211 231]
[213 229]
[214 228]
[215 227]
[216 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
