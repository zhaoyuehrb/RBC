%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HRASLS2)
} def

/sequence { (\
AGCUAAUUUAAGGCUGGACACAGAGUCAGCAACACACAAGACAUCAUCUUGAAGGAAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.016859452 ubox
1 9 0.022766176 ubox
1 15 0.157492661 ubox
2 7 0.016913512 ubox
2 8 0.022753899 ubox
2 14 0.168202609 ubox
2 26 0.008753106 ubox
2 30 0.191757687 ubox
3 12 0.290136636 ubox
3 13 0.168031038 ubox
3 25 0.009075882 ubox
3 29 0.191945183 ubox
3 40 0.086413046 ubox
3 54 0.109935885 ubox
3 55 0.109091912 ubox
3 58 0.157764285 ubox
3 59 0.051703528 ubox
4 10 0.040679112 ubox
4 11 0.282181918 ubox
4 12 0.165037595 ubox
4 24 0.008987935 ubox
4 28 0.188017786 ubox
4 39 0.083230796 ubox
4 53 0.106292260 ubox
4 54 0.105366688 ubox
4 57 0.152436662 ubox
4 58 0.051062427 ubox
5 9 0.041445496 ubox
6 26 0.121864428 ubox
7 24 0.008859660 ubox
7 25 0.121887849 ubox
7 29 0.003754045 ubox
7 32 0.025103605 ubox
7 39 0.004902324 ubox
7 40 0.003589422 ubox
7 41 0.003739740 ubox
7 52 0.009297431 ubox
7 53 0.111321817 ubox
7 54 0.074493608 ubox
7 55 0.022319512 ubox
7 56 0.047226061 ubox
7 57 0.054509587 ubox
7 58 0.026476627 ubox
7 59 0.014840692 ubox
8 12 0.012169434 ubox
8 23 0.005352636 ubox
8 24 0.119639606 ubox
8 25 0.013995291 ubox
8 28 0.005818221 ubox
8 29 0.006982337 ubox
8 31 0.029309294 ubox
8 32 0.036242568 ubox
8 38 0.005308756 ubox
8 39 0.005202832 ubox
8 40 0.004091494 ubox
8 51 0.003361492 ubox
8 52 0.119410861 ubox
8 53 0.078213871 ubox
8 54 0.028607595 ubox
8 55 0.049935324 ubox
8 56 0.062974292 ubox
8 57 0.034100070 ubox
8 58 0.021840521 ubox
8 59 0.008163918 ubox
9 16 0.003850754 ubox
9 22 0.004391249 ubox
9 23 0.048451639 ubox
9 24 0.016046386 ubox
9 28 0.008502829 ubox
9 31 0.041237626 ubox
9 38 0.005151816 ubox
9 39 0.003747786 ubox
9 51 0.117745513 ubox
9 52 0.074834755 ubox
9 53 0.027975579 ubox
9 54 0.045353639 ubox
9 55 0.061926661 ubox
9 56 0.033816272 ubox
9 57 0.021752769 ubox
9 58 0.011696006 ubox
10 15 0.003775492 ubox
10 50 0.117639619 ubox
11 49 0.117289447 ubox
12 27 0.173563268 ubox
12 48 0.116991714 ubox
13 26 0.173820715 ubox
13 30 0.956484331 ubox
13 47 0.047330685 ubox
14 23 0.142059159 ubox
14 25 0.173028397 ubox
14 29 0.957761929 ubox
14 54 0.003555806 ubox
14 58 0.003367691 ubox
15 22 0.149955094 ubox
15 24 0.170813703 ubox
15 28 0.944319874 ubox
15 31 0.016361693 ubox
15 34 0.005192599 ubox
15 36 0.003553153 ubox
15 43 0.004565206 ubox
15 46 0.012049609 ubox
15 53 0.003516991 ubox
15 57 0.003324369 ubox
16 21 0.152840715 ubox
16 27 0.775853555 ubox
16 30 0.024480820 ubox
16 33 0.009107914 ubox
16 35 0.006220738 ubox
16 42 0.004668073 ubox
16 45 0.012003684 ubox
16 49 0.004027398 ubox
17 26 0.536241281 ubox
17 27 0.584749543 ubox
17 44 0.008445998 ubox
17 48 0.004362817 ubox
18 26 0.795006525 ubox
18 47 0.004261430 ubox
19 25 0.861532797 ubox
19 51 0.004134914 ubox
20 26 0.032198005 ubox
20 50 0.004077290 ubox
21 25 0.037042443 ubox
22 49 0.005015022 ubox
23 45 0.027983155 ubox
23 48 0.005458742 ubox
24 44 0.028388594 ubox
24 47 0.005445818 ubox
25 33 0.015770922 ubox
25 35 0.011656076 ubox
25 37 0.004526956 ubox
25 42 0.066970445 ubox
26 32 0.015238344 ubox
26 34 0.011261326 ubox
26 36 0.004335011 ubox
26 41 0.067078185 ubox
26 56 0.003822563 ubox
27 40 0.067045063 ubox
27 55 0.004104319 ubox
30 51 0.003237596 ubox
31 50 0.003301021 ubox
33 51 0.013903070 ubox
34 50 0.012188347 ubox
35 51 0.027218989 ubox
36 50 0.023197019 ubox
37 51 0.964145516 ubox
38 50 0.968076595 ubox
39 49 0.969277423 ubox
39 50 0.004942596 ubox
40 48 0.969794264 ubox
40 49 0.004572271 ubox
41 47 0.915862406 ubox
42 51 0.039680925 ubox
43 50 0.038980635 ubox
44 52 0.044315855 ubox
44 55 0.009683404 ubox
44 56 0.014113791 ubox
44 59 0.049713748 ubox
45 51 0.047377651 ubox
45 54 0.015012488 ubox
45 55 0.014955846 ubox
45 58 0.076472578 ubox
46 50 0.038409476 ubox
47 55 0.014024597 ubox
47 56 0.094816062 ubox
47 59 0.095097744 ubox
48 54 0.021335258 ubox
48 55 0.098045731 ubox
48 58 0.146818777 ubox
48 59 0.036279015 ubox
49 53 0.019463092 ubox
49 54 0.090674930 ubox
49 56 0.012739619 ubox
49 57 0.146721533 ubox
49 58 0.037348150 ubox
50 54 0.003625389 ubox
50 55 0.014975338 ubox
50 56 0.145456395 ubox
50 57 0.037381251 ubox
13 30 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
showpage
end
%%EOF
