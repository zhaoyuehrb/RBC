%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TTLL2)
} def

/sequence { (\
AGUGCUCCCUCCAGCCUCCGCGCAUUUCAGCUGGCGCUGCAGCUGCUGCACAGAGACCCACAGAGGCCACCCUCGGAACCAGCGCCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.017472674 ubox
1 26 0.004278802 ubox
2 16 0.020122571 ubox
2 23 0.014008295 ubox
2 25 0.006041984 ubox
2 51 0.007061703 ubox
2 61 0.004461646 ubox
2 70 0.005891191 ubox
2 83 0.005087405 ubox
2 85 0.995346387 ubox
3 22 0.014015437 ubox
3 24 0.006181808 ubox
3 50 0.007070236 ubox
3 60 0.004454844 ubox
3 69 0.005911101 ubox
3 82 0.004884890 ubox
3 84 0.996948444 ubox
4 15 0.026083577 ubox
4 21 0.014075360 ubox
4 23 0.006226921 ubox
4 31 0.011349285 ubox
4 49 0.007071830 ubox
4 59 0.004337094 ubox
4 68 0.005879113 ubox
4 83 0.999302054 ubox
4 85 0.003704589 ubox
5 14 0.026146636 ubox
5 20 0.014060125 ubox
5 22 0.006221548 ubox
5 30 0.011369262 ubox
5 48 0.007066554 ubox
5 82 0.999236680 ubox
5 84 0.003705334 ubox
6 13 0.024727626 ubox
6 29 0.010905004 ubox
6 77 0.076713595 ubox
6 81 0.965742611 ubox
7 53 0.003187651 ubox
7 66 0.003600563 ubox
7 75 0.003820252 ubox
7 76 0.097591603 ubox
8 65 0.003480219 ubox
8 66 0.023334236 ubox
8 75 0.097257544 ubox
8 76 0.053914113 ubox
9 42 0.010543719 ubox
9 53 0.003376357 ubox
9 55 0.029209022 ubox
9 63 0.003872830 ubox
9 65 0.023583395 ubox
9 75 0.054205993 ubox
9 76 0.012567992 ubox
10 41 0.010599036 ubox
10 52 0.003233411 ubox
10 54 0.029309082 ubox
10 62 0.004253765 ubox
10 64 0.023604607 ubox
10 75 0.011430014 ubox
10 76 0.013427178 ubox
10 77 0.969886390 ubox
11 34 0.005660108 ubox
11 53 0.029238179 ubox
11 63 0.023553246 ubox
11 75 0.014852541 ubox
11 76 0.988772606 ubox
12 33 0.005861461 ubox
12 39 0.014278073 ubox
12 45 0.006567210 ubox
12 48 0.007123851 ubox
12 75 0.987788594 ubox
13 32 0.005986403 ubox
13 38 0.041795308 ubox
13 44 0.007792716 ubox
13 47 0.007330758 ubox
13 73 0.051899415 ubox
14 21 0.322614608 ubox
14 23 0.045464376 ubox
14 31 0.006008488 ubox
14 35 0.061477042 ubox
14 37 0.049636257 ubox
14 40 0.003515541 ubox
14 43 0.007922761 ubox
14 46 0.007327778 ubox
14 49 0.003361132 ubox
14 67 0.093882373 ubox
14 72 0.035046213 ubox
15 20 0.322118876 ubox
15 22 0.045442751 ubox
15 30 0.005920649 ubox
15 34 0.061539097 ubox
15 36 0.049621765 ubox
15 39 0.003513096 ubox
15 42 0.007725875 ubox
15 45 0.007007116 ubox
15 48 0.003345621 ubox
15 66 0.096120668 ubox
15 76 0.005652658 ubox
16 33 0.061465952 ubox
16 34 0.013899633 ubox
16 42 0.005276791 ubox
16 53 0.034551974 ubox
16 55 0.923382835 ubox
16 65 0.096086978 ubox
16 75 0.005430144 ubox
17 33 0.010067934 ubox
17 34 0.026439868 ubox
17 41 0.005456792 ubox
17 52 0.033625589 ubox
17 54 0.926139183 ubox
17 56 0.017738195 ubox
17 64 0.095933923 ubox
17 77 0.006317038 ubox
18 33 0.028905181 ubox
18 34 0.039285502 ubox
18 53 0.924763083 ubox
18 55 0.019131557 ubox
18 63 0.095602216 ubox
18 76 0.006546369 ubox
19 33 0.039435244 ubox
19 36 0.013093574 ubox
19 39 0.005423807 ubox
19 48 0.007606932 ubox
19 75 0.006544125 ubox
19 84 0.005305431 ubox
20 31 0.074120058 ubox
20 32 0.031860761 ubox
20 35 0.013788651 ubox
20 37 0.066189911 ubox
20 46 0.003424568 ubox
20 47 0.007366386 ubox
20 49 0.145409218 ubox
20 83 0.005502901 ubox
20 85 0.014528391 ubox
21 30 0.074360987 ubox
21 34 0.013650179 ubox
21 36 0.066291380 ubox
21 45 0.003386207 ubox
21 48 0.145341580 ubox
21 82 0.005496672 ubox
21 84 0.014557211 ubox
22 31 0.037647711 ubox
22 35 0.066285342 ubox
22 43 0.003579970 ubox
22 46 0.117551845 ubox
22 47 0.079279778 ubox
22 49 0.979521305 ubox
22 83 0.014509241 ubox
23 30 0.037670387 ubox
23 33 0.012148491 ubox
23 34 0.065383108 ubox
23 42 0.003628199 ubox
23 45 0.118640844 ubox
23 48 0.980683808 ubox
23 82 0.014491009 ubox
24 32 0.015137017 ubox
24 44 0.111603964 ubox
24 47 0.969150829 ubox
25 42 0.058900230 ubox
25 54 0.009486569 ubox
25 55 0.005403914 ubox
25 56 0.017778663 ubox
25 78 0.003893637 ubox
26 33 0.007428095 ubox
26 41 0.056941164 ubox
26 42 0.071653428 ubox
26 53 0.009651806 ubox
26 54 0.006462079 ubox
26 55 0.018580919 ubox
26 77 0.003973043 ubox
27 41 0.076464464 ubox
27 52 0.009345860 ubox
27 53 0.006477487 ubox
27 54 0.018730520 ubox
27 56 0.005238965 ubox
27 76 0.003877329 ubox
28 33 0.007880233 ubox
28 39 0.106367087 ubox
28 45 0.985057715 ubox
28 48 0.018958049 ubox
28 53 0.016835666 ubox
28 55 0.005488953 ubox
28 75 0.003557876 ubox
29 38 0.106571381 ubox
29 44 0.986879825 ubox
29 47 0.020764570 ubox
30 37 0.106653810 ubox
30 43 0.987909632 ubox
30 46 0.021310087 ubox
30 49 0.012440052 ubox
30 83 0.004253888 ubox
31 36 0.106473346 ubox
31 42 0.987909873 ubox
31 45 0.021158473 ubox
31 48 0.012369249 ubox
31 53 0.010437633 ubox
31 82 0.004261508 ubox
32 41 0.987042763 ubox
32 45 0.003652878 ubox
32 52 0.011238972 ubox
32 60 0.011890924 ubox
32 81 0.004270464 ubox
32 88 0.004284309 ubox
33 40 0.979477948 ubox
33 44 0.020599274 ubox
33 47 0.011030084 ubox
33 51 0.011303744 ubox
33 59 0.013425200 ubox
33 80 0.004272938 ubox
33 86 0.026186433 ubox
33 87 0.004600837 ubox
34 40 0.123913908 ubox
34 43 0.021959370 ubox
34 46 0.011765823 ubox
34 49 0.008043034 ubox
34 58 0.013410162 ubox
34 79 0.004261115 ubox
34 85 0.026518416 ubox
34 86 0.003260876 ubox
35 39 0.170457740 ubox
35 42 0.021957018 ubox
35 45 0.011762214 ubox
35 48 0.008049744 ubox
35 84 0.026723073 ubox
36 43 0.011466894 ubox
36 44 0.003492904 ubox
36 46 0.007071520 ubox
36 47 0.003972644 ubox
36 49 0.027146479 ubox
36 83 0.026723476 ubox
37 42 0.011682728 ubox
37 45 0.007209028 ubox
37 48 0.027113014 ubox
37 53 0.020864801 ubox
37 55 0.012710627 ubox
37 82 0.026714498 ubox
38 50 0.080333123 ubox
38 52 0.018930784 ubox
38 54 0.009658031 ubox
38 81 0.024947527 ubox
39 46 0.027787557 ubox
39 49 0.100087323 ubox
39 51 0.016859716 ubox
39 80 0.020657163 ubox
40 45 0.027829348 ubox
40 48 0.100370046 ubox
41 47 0.100126104 ubox
42 46 0.097931845 ubox
42 49 0.026281026 ubox
43 48 0.026301908 ubox
43 53 0.015374876 ubox
43 55 0.003924172 ubox
43 76 0.004376877 ubox
44 52 0.015494106 ubox
44 54 0.003925000 ubox
44 75 0.004215719 ubox
45 51 0.015536966 ubox
46 53 0.016387134 ubox
46 55 0.047039352 ubox
46 63 0.004963452 ubox
47 52 0.015412475 ubox
47 54 0.046986542 ubox
47 60 0.004572278 ubox
47 62 0.008134258 ubox
48 59 0.005074113 ubox
48 61 0.008529481 ubox
52 73 0.003195997 ubox
53 72 0.003402716 ubox
53 74 0.033694200 ubox
54 73 0.033726215 ubox
55 72 0.033619820 ubox
57 66 0.039805781 ubox
57 76 0.033995889 ubox
58 65 0.039846567 ubox
58 66 0.040785350 ubox
58 75 0.034165930 ubox
58 76 0.064792451 ubox
59 65 0.041067621 ubox
59 75 0.065029185 ubox
62 73 0.023847793 ubox
63 72 0.025430916 ubox
63 74 0.991157237 ubox
64 73 0.992448097 ubox
65 71 0.042105732 ubox
65 72 0.992228259 ubox
65 73 0.003647334 ubox
65 74 0.005979570 ubox
65 80 0.005670864 ubox
66 70 0.051130902 ubox
66 71 0.980122266 ubox
66 72 0.004891262 ubox
66 73 0.004659479 ubox
66 79 0.005655744 ubox
67 76 0.023665539 ubox
68 75 0.023824708 ubox
70 76 0.007870359 ubox
71 75 0.007861375 ubox
75 86 0.008483296 ubox
75 87 0.006676525 ubox
76 85 0.008511967 ubox
76 86 0.006650570 ubox
2 85 0.9500000 lbox
3 84 0.9500000 lbox
4 83 0.9500000 lbox
5 82 0.9500000 lbox
6 81 0.9500000 lbox
10 77 0.9500000 lbox
11 76 0.9500000 lbox
12 75 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
18 53 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
63 74 0.9500000 lbox
64 73 0.9500000 lbox
65 72 0.9500000 lbox
66 71 0.9500000 lbox
showpage
end
%%EOF
