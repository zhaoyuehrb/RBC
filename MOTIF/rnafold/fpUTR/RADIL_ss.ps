%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCGCCGGCAGGAGGCGCCGCGGCACGCGCGGGUCUGGGCGCCGGCCCCAGCCAACGGCGGGUGGGAGCAGCGCGGGAACGUGGCGGCGCGGCGGGUUGUGCCGGAGGUCACGGCCUCCCCACAUCCUUUGGCUGAAGCCCACAGUCCUCAUCCAUGAAGCCUCACCCACC\
) } def
/len { sequence length } bind def

/coor [
[97.39479828 142.59469604]
[91.84272766 156.52934265]
[86.29064941 170.46400452]
[80.73857880 184.39865112]
[75.18650818 198.33329773]
[77.26631165 214.01721191]
[65.36769104 222.97668457]
[59.81561661 236.91133118]
[62.71026230 253.05299377]
[50.00568008 263.42245483]
[34.77125549 257.35250854]
[32.67885590 241.08738708]
[45.88096619 231.35925293]
[51.43303680 217.42460632]
[48.95611572 202.73739624]
[61.25185776 192.78123474]
[66.80393219 178.84657288]
[72.35600281 164.91192627]
[77.90807343 150.97727966]
[83.46014404 137.04263306]
[71.76894379 127.64497375]
[59.35361099 136.06278992]
[46.93827438 144.48059082]
[34.52294159 152.89839172]
[30.09976006 168.31964111]
[15.23043156 174.34315491]
[1.32143331 166.34820557]
[-0.95744306 150.46781921]
[10.14196205 138.88409424]
[26.10513496 140.48306274]
[38.52046967 132.06524658]
[50.93580246 123.64744568]
[63.35113907 115.22964478]
[59.20790100 100.81320953]
[44.21768188 100.27166748]
[29.22745895 99.73013306]
[17.70827293 110.21565247]
[2.51377010 109.45291901]
[-7.41158009 98.40651703]
[-22.40180206 97.86497498]
[-37.39202118 97.32344055]
[-52.38224411 96.78190613]
[-66.60974884 104.93727875]
[-80.64831543 96.46080017]
[-80.05626678 80.07234192]
[-65.44264984 72.63094330]
[-51.84070969 81.79168701]
[-36.85048676 82.33322144]
[-21.86026573 82.87475586]
[-6.87004375 83.41629028]
[3.82651687 73.11487579]
[19.03644753 73.45053101]
[29.76899529 84.73991394]
[44.75921631 85.28144836]
[59.74943924 85.82298279]
[74.18963623 71.52275848]
[91.85642242 66.79137421]
[107.56543732 71.01953888]
[117.54780579 81.20851898]
[130.53819275 73.70851898]
[138.62083435 60.10773087]
[153.51162720 60.44479370]
[166.50201416 52.94479370]
[179.49238586 45.44479370]
[192.48277283 37.94479370]
[205.47314453 30.44479370]
[218.46353149 22.94479370]
[231.45391846 15.44479370]
[237.34667969 8.41902351]
[244.74722290 7.92908001]
[257.87088013 0.66483289]
[262.33532715 -14.25852013]
[275.74807739 -21.43854713]
[289.94772339 -17.09041023]
[303.07138062 -24.35465813]
[307.38955688 -36.53250885]
[318.49819946 -42.30618286]
[330.17257690 -39.05655670]
[343.42526245 -46.08268356]
[356.67794800 -53.10881042]
[357.33273315 -68.39012146]
[365.49462891 -81.20731354]
[378.88717651 -88.17195129]
[393.86740112 -87.50244141]
[406.41668701 -79.47861481]
[419.66934204 -86.50474548]
[432.92202759 -93.53086853]
[445.91241455 -101.03086853]
[458.62356567 -108.99496460]
[471.33471680 -116.95906067]
[479.55978394 -133.41630554]
[497.09402466 -133.40446472]
[509.65930176 -141.59675598]
[522.22460938 -149.78903198]
[534.78991699 -157.98132324]
[547.12872314 -166.51086426]
[559.23205566 -175.37139893]
[571.33538818 -184.23194885]
[577.90014648 -198.62689209]
[592.74011230 -199.90177917]
[604.84344482 -208.76232910]
[616.94677734 -217.62286377]
[629.05010986 -226.48341370]
[631.79882812 -239.10842896]
[642.09112549 -246.23629761]
[654.08197021 -244.48414612]
[666.34332275 -253.12472534]
[678.60467529 -261.76531982]
[690.86596680 -270.40588379]
[703.12731934 -279.04647827]
[715.38867188 -287.68704224]
[721.77966309 -302.78961182]
[738.08538818 -304.53732300]
[747.53198242 -291.13229370]
[740.40148926 -276.36447144]
[724.02923584 -275.42572021]
[711.76788330 -266.78512573]
[699.50659180 -258.14456177]
[687.24523926 -249.50396729]
[674.98388672 -240.86338806]
[662.72259521 -232.22280884]
[656.24346924 -215.92950439]
[637.91064453 -214.38006592]
[625.80731201 -205.51953125]
[613.70397949 -196.65898132]
[601.60064697 -187.79844666]
[595.90161133 -174.03726196]
[580.19592285 -172.12860107]
[568.09259033 -163.26806641]
[555.98925781 -154.40753174]
[555.09802246 -150.96232605]
[552.47332764 -147.78572083]
[548.26379395 -145.69697571]
[542.98217773 -145.41603088]
[530.41687012 -137.22375488]
[517.85162354 -129.03146362]
[505.28631592 -120.83917999]
[502.47573853 -109.05139160]
[492.04455566 -102.12839508]
[479.29879761 -104.24791718]
[466.58764648 -96.28382111]
[453.87649536 -88.31972504]
[453.12866211 -85.58397675]
[451.23321533 -82.98526764]
[448.23889160 -80.96929169]
[444.35720825 -79.95502472]
[439.94815063 -80.27819061]
[426.69546509 -73.25205994]
[413.44281006 -66.22593689]
[413.04153442 -51.33618927]
[405.18896484 -38.56148148]
[391.90869141 -31.38508987]
[376.71969604 -31.82242393]
[363.70407104 -39.85612869]
[350.45138550 -32.83000183]
[337.19869995 -25.80387688]
[328.71752930 -10.45722198]
[310.33563232 -11.23098850]
[297.21197510 -3.96674109]
[293.35748291 10.37475491]
[280.15167236 17.92868614]
[265.13513184 13.78850269]
[252.01147461 21.05274963]
[238.95391846 28.43517494]
[225.96353149 35.93517303]
[212.97314453 43.43517303]
[199.98277283 50.93517303]
[186.99238586 58.43517303]
[174.00201416 65.93517303]
[161.01162720 73.43517303]
[153.85813904 86.49951172]
[138.03819275 86.69889832]
[125.04780579 94.19889832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[7 14]
[8 13]
[21 33]
[22 32]
[23 31]
[24 30]
[34 55]
[35 54]
[36 53]
[39 50]
[40 49]
[41 48]
[42 47]
[59 173]
[60 172]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[70 163]
[71 162]
[74 159]
[75 158]
[78 156]
[79 155]
[80 154]
[85 149]
[86 148]
[87 147]
[88 142]
[89 141]
[90 140]
[92 137]
[93 136]
[94 135]
[95 134]
[96 130]
[97 129]
[98 128]
[100 126]
[101 125]
[102 124]
[103 123]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
