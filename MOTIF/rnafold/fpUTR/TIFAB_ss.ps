%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCAAUGAAAAAUUACACUUCUAUUUUCUUUCCUAAAGGGAAAAAGGAAGAAUGCAACAAAACUGAAGUAUGUUCUGCCACGUUCCUGAACUGCAGCCAUAGGAGCCCUCCCAGCCCUACCCAAACCAGCCUACUCCCUCUCAAGAGCUCACAGCUGCAGGACUAGAGCCAGAUGUGCCCCGGCAAUAAGGACUUCUUCC\
) } def
/len { sequence length } bind def

/coor [
[-298.37039185 564.48181152]
[-283.37103271 564.34515381]
[-268.62478638 567.09259033]
[-254.68099976 572.62170410]
[-242.05911255 580.72650146]
[-231.22933960 591.10516357]
[-222.59509277 603.37091064]
[-216.47802734 617.06695557]
[-213.10601807 631.68304443]
[-212.60467529 646.67468262]
[-214.99267578 661.48333740]
[-220.18107605 675.55749512]
[-227.97657776 688.37268066]
[-238.08877563 699.45166016]
[-250.14099121 708.38165283]
[-263.68423462 714.82995605]
[-278.21398926 718.55639648]
[-293.18896484 719.42211914]
[-308.05136108 717.39495850]
[-322.24746704 712.55035400]
[-335.24847412 705.06878662]
[-346.57006836 695.22894287]
[-355.79046631 683.39746094]
[-362.56622314 670.01501465]
[-366.64486694 655.58020020]
[-367.87451172 640.63067627]
[-366.20935059 625.72338867]
[-361.71136475 611.41369629]
[-354.54818726 598.23455811]
[-344.98358154 586.67407227]
[-358.68041992 592.78930664]
[-372.37725830 598.90454102]
[-386.07412720 605.01983643]
[-399.77096558 611.13507080]
[-413.46780396 617.25030518]
[-425.46591187 629.22875977]
[-440.29757690 621.01550293]
[-436.51113892 604.48974609]
[-419.58306885 603.55346680]
[-405.88623047 597.43823242]
[-392.18936157 591.32293701]
[-378.49252319 585.20770264]
[-364.79568481 579.09246826]
[-351.09881592 572.97717285]
[-348.81185913 568.32281494]
[-344.31695557 564.79907227]
[-338.22723389 563.44067383]
[-328.38830566 552.11834717]
[-318.54937744 540.79595947]
[-308.71044922 529.47363281]
[-298.87152100 518.15130615]
[-289.03259277 506.82894897]
[-279.19366455 495.50662231]
[-287.59570312 483.12295532]
[-292.50964355 468.97549438]
[-293.59481812 454.02670288]
[-290.77127075 439.29510498]
[-284.22561646 425.78604126]
[-274.39855957 414.42300415]
[-261.95550537 405.98452759]
[-247.74127197 401.05075073]
[-232.72280884 399.96371460]
[-217.92344666 402.80349731]
[-204.35314941 409.38238525]
[-194.51422119 398.06005859]
[-184.67529297 386.73770142]
[-185.96978760 371.94378662]
[-176.15301514 360.32116699]
[-160.62701416 359.06369019]
[-150.78808594 347.74133301]
[-140.94915771 336.41897583]
[-131.11022949 325.09664917]
[-121.27130127 313.77429199]
[-111.43237305 302.45196533]
[-109.41644287 295.33587646]
[-101.35131073 291.03158569]
[-91.33749390 279.86361694]
[-81.32366943 268.69564819]
[-81.34546661 265.88562012]
[-80.25141144 262.89770508]
[-77.96814728 260.15835571]
[-74.57847595 258.11270142]
[-70.32321167 257.16958618]
[-59.63444901 246.64578247]
[-48.94569016 236.12197876]
[-38.25693130 225.59817505]
[-43.17197037 211.51599121]
[-41.47843552 196.63508606]
[-33.45901489 183.91305542]
[-20.65900421 175.90182495]
[-5.58879423 174.23576355]
[8.76841450 179.29855347]
[19.45717430 168.77474976]
[30.14593315 158.25094604]
[40.83469391 147.72714233]
[51.52345276 137.20333862]
[62.21221161 126.67954254]
[72.90097046 116.15573883]
[65.41454315 93.67994690]
[75.87440491 69.65481567]
[101.97553253 57.67038345]
[106.34375000 43.32051849]
[110.71196747 28.97065353]
[115.08019257 14.62078762]
[114.58587646 5.49231386]
[119.62953949 0.08268519]
[124.22039795 -14.19751167]
[115.73994446 -27.33585358]
[117.73999023 -42.84500504]
[129.27616882 -53.40202332]
[144.90144348 -54.02220535]
[157.23805237 -44.41271591]
[160.46101379 -29.11086845]
[153.04853821 -15.34172440]
[138.50059509 -9.60665226]
[133.90972900 4.67354393]
[129.43005371 18.98900795]
[125.06183624 33.33887482]
[120.69361877 47.68873978]
[116.32539368 62.03860474]
[121.66977692 67.30050659]
[132.19357300 56.61174774]
[142.71737671 45.92298889]
[153.24118042 35.23423004]
[163.76498413 24.54546928]
[174.28878784 13.85670948]
[184.81277466 3.16812444]
[195.50117493 13.69228172]
[184.97755432 24.38051224]
[174.45375061 35.06927109]
[163.92994690 45.75802994]
[153.40614319 56.44678879]
[142.88233948 67.13555145]
[132.35853577 77.82431030]
[137.70291138 83.08621216]
[151.98310852 78.49535370]
[166.26330566 73.90449524]
[170.97610474 59.12040710]
[183.49861145 49.95708847]
[199.01567078 49.93801880]
[211.56066895 59.07053375]
[216.30978394 73.84299469]
[211.43688965 88.57508850]
[198.81570435 97.60202026]
[183.29934692 97.45275879]
[170.85417175 88.18469238]
[156.57397461 92.77555084]
[142.29377747 97.36640930]
[139.55862427 110.10589600]
[133.23162842 120.94686890]
[124.19644165 128.95733643]
[113.54969025 133.55693054]
[102.47335815 134.55422974]
[92.10571289 132.14073181]
[83.42477417 126.84449768]
[72.73601532 137.36830139]
[62.04725647 147.89210510]
[51.35849380 158.41590881]
[40.66973495 168.93971252]
[29.98097610 179.46351624]
[19.29221725 189.98731995]
[24.13112259 204.42152405]
[22.23089027 219.46400452]
[14.02155972 232.13787842]
[1.17635787 239.95848083]
[-13.72908688 241.42037964]
[-27.73312950 236.28692627]
[-38.42189026 246.81072998]
[-49.11064911 257.33453369]
[-59.79940796 267.85833740]
[-70.15570831 278.70947266]
[-80.16953278 289.87744141]
[-90.18334961 301.04537964]
[-100.11003113 312.29089355]
[-109.94895935 323.61322021]
[-119.78788757 334.93557739]
[-129.62681580 346.25790405]
[-139.46574402 357.58026123]
[-149.30467224 368.90261841]
[-148.38374329 384.45220947]
[-158.52311707 395.79449463]
[-173.35293579 396.57662964]
[-183.19187927 407.89898682]
[-193.03080750 419.22131348]
[-184.62297058 431.74105835]
[-179.74623108 445.99948120]
[-178.72734070 461.02273560]
[-181.62974548 475.78628540]
[-188.24971008 489.28494263]
[-198.13058472 500.60116577]
[-210.59429932 508.96755981]
[-224.78790283 513.81878662]
[-239.74189758 514.82977295]
[-254.43655396 511.93771362]
[-267.87130737 505.34555054]
[-277.71023560 516.66790771]
[-287.54916382 527.99023438]
[-297.38809204 539.31256104]
[-307.22702026 550.63488770]
[-317.06594849 561.95727539]
[-326.90487671 573.27960205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[47 201]
[48 200]
[49 199]
[50 198]
[51 197]
[52 196]
[53 195]
[64 184]
[65 183]
[66 182]
[69 179]
[70 178]
[71 177]
[72 176]
[73 175]
[74 174]
[76 173]
[77 172]
[78 171]
[83 170]
[84 169]
[85 168]
[86 167]
[92 161]
[93 160]
[94 159]
[95 158]
[96 157]
[97 156]
[98 155]
[101 120]
[102 119]
[103 118]
[104 117]
[106 116]
[107 115]
[135 148]
[136 147]
[137 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
