%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NEMP2)
} def

/sequence { (\
CUUCUCUGAGCCCCCGCGCCACUUCCGCUCCUCGCAGCGGAGCCGGUCCCCUAGGGCUCGGGUCGCACGGAGCUGACCCCUAACGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.004711868 ubox
1 72 0.006202873 ubox
2 9 0.004816044 ubox
2 71 0.006307573 ubox
2 76 0.003763511 ubox
2 83 0.012757641 ubox
2 86 0.023754605 ubox
2 87 0.149660362 ubox
3 8 0.004395605 ubox
3 9 0.004580858 ubox
3 70 0.006305253 ubox
3 75 0.003767690 ubox
3 82 0.013031001 ubox
3 85 0.022513906 ubox
3 86 0.211453874 ubox
4 8 0.005120866 ubox
4 60 0.004547094 ubox
4 62 0.015037630 ubox
4 69 0.006288998 ubox
4 72 0.022705277 ubox
4 85 0.216656588 ubox
5 61 0.007468508 ubox
5 62 0.049114259 ubox
5 71 0.023102620 ubox
5 86 0.148576690 ubox
6 60 0.021204277 ubox
6 61 0.096562676 ubox
6 70 0.023143576 ubox
6 85 0.155834659 ubox
7 60 0.129668863 ubox
7 69 0.023119386 ubox
7 82 0.021389911 ubox
7 85 0.009216897 ubox
8 48 0.003543225 ubox
8 59 0.998084827 ubox
8 68 0.022937872 ubox
8 84 0.004366960 ubox
9 47 0.003507099 ubox
9 58 0.999164978 ubox
9 74 0.005356611 ubox
10 17 0.008057783 ubox
10 57 0.999461595 ubox
10 66 0.023053004 ubox
10 73 0.005536579 ubox
11 16 0.008046406 ubox
11 55 0.003264672 ubox
11 56 0.999258362 ubox
11 65 0.023052502 ubox
11 72 0.005532003 ubox
12 54 0.004599816 ubox
12 55 0.999030299 ubox
12 56 0.019715993 ubox
13 46 0.005661466 ubox
13 54 0.997744281 ubox
13 55 0.027807209 ubox
13 56 0.004355050 ubox
13 62 0.023079960 ubox
14 45 0.006940971 ubox
14 46 0.782119953 ubox
14 54 0.033682694 ubox
14 55 0.006510852 ubox
14 61 0.023124501 ubox
14 70 0.004563533 ubox
15 45 0.782638384 ubox
15 54 0.008226205 ubox
15 60 0.023135851 ubox
15 69 0.004691075 ubox
16 43 0.029496141 ubox
16 44 0.781736146 ubox
16 47 0.014577571 ubox
16 59 0.023126677 ubox
16 68 0.004809284 ubox
17 42 0.040780426 ubox
17 45 0.011989532 ubox
17 46 0.014469462 ubox
18 43 0.780604019 ubox
18 44 0.011850890 ubox
18 47 0.607025999 ubox
18 57 0.023090443 ubox
18 66 0.004817861 ubox
19 40 0.007887851 ubox
19 42 0.775490166 ubox
19 46 0.618741168 ubox
19 56 0.023082633 ubox
19 65 0.004814258 ubox
20 39 0.007890003 ubox
20 45 0.617628954 ubox
20 55 0.023020378 ubox
21 47 0.042514600 ubox
21 63 0.004237550 ubox
22 37 0.007731372 ubox
22 42 0.243243660 ubox
22 46 0.043963924 ubox
22 54 0.014701133 ubox
22 62 0.004278405 ubox
23 36 0.007569881 ubox
23 41 0.179585459 ubox
23 42 0.492009433 ubox
23 45 0.040661610 ubox
23 53 0.013604863 ubox
24 40 0.024228791 ubox
24 41 0.976930900 ubox
24 46 0.009604582 ubox
25 39 0.017277415 ubox
25 40 0.998721169 ubox
25 45 0.010480495 ubox
25 46 0.031873485 ubox
26 39 0.998877551 ubox
26 45 0.031941854 ubox
27 35 0.008893221 ubox
27 38 0.999018068 ubox
27 43 0.036215539 ubox
27 44 0.022625475 ubox
28 34 0.009077950 ubox
28 37 0.998971201 ubox
28 42 0.042701655 ubox
29 36 0.943377635 ubox
29 41 0.042707005 ubox
30 40 0.042707764 ubox
31 39 0.042656625 ubox
32 36 0.006045686 ubox
43 61 0.005177850 ubox
44 60 0.005579656 ubox
45 51 0.018611607 ubox
45 52 0.005499321 ubox
45 59 0.005572725 ubox
46 50 0.018484534 ubox
46 51 0.007284184 ubox
46 57 0.005354597 ubox
47 56 0.005254269 ubox
47 86 0.006941289 ubox
48 54 0.004405485 ubox
48 55 0.007079950 ubox
48 56 0.003503024 ubox
48 85 0.007513749 ubox
49 54 0.008511422 ubox
49 55 0.004299783 ubox
50 54 0.004943609 ubox
52 82 0.020629556 ubox
53 81 0.021621663 ubox
54 80 0.021712378 ubox
55 79 0.021701896 ubox
56 78 0.021664108 ubox
58 76 0.021450860 ubox
59 75 0.021830608 ubox
59 85 0.004359501 ubox
60 74 0.021989348 ubox
60 78 0.004923213 ubox
60 79 0.983694053 ubox
60 80 0.099976960 ubox
60 81 0.003906219 ubox
60 84 0.004121736 ubox
61 73 0.022055548 ubox
61 77 0.003850690 ubox
61 78 0.991311114 ubox
61 79 0.082084678 ubox
61 80 0.003431307 ubox
62 77 0.995658899 ubox
62 78 0.058446319 ubox
63 71 0.022624776 ubox
63 76 0.997235829 ubox
63 86 0.054878994 ubox
64 70 0.022793605 ubox
64 75 0.996678828 ubox
64 85 0.058661329 ubox
65 73 0.942336450 ubox
65 74 0.310973145 ubox
65 84 0.058367461 ubox
66 72 0.963461623 ubox
66 75 0.006073614 ubox
67 74 0.007907040 ubox
68 85 0.004029928 ubox
69 74 0.003667551 ubox
69 78 0.014926645 ubox
69 79 0.021327396 ubox
69 80 0.054915110 ubox
69 81 0.003548855 ubox
69 84 0.004056240 ubox
70 77 0.014944525 ubox
70 78 0.021368804 ubox
70 79 0.054943944 ubox
70 80 0.003680395 ubox
74 85 0.003638191 ubox
75 84 0.004553155 ubox
8 59 0.9500000 lbox
9 58 0.9500000 lbox
10 57 0.9500000 lbox
11 56 0.9500000 lbox
12 55 0.9500000 lbox
13 54 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
24 41 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
60 79 0.9500000 lbox
61 78 0.9500000 lbox
62 77 0.9500000 lbox
63 76 0.9500000 lbox
64 75 0.9500000 lbox
65 73 0.9500000 lbox
66 72 0.9500000 lbox
showpage
end
%%EOF
