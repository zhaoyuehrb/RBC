%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCGGGGGGCGAUGGAAUAAAAGAAGAUGGAGAGACUUCAGCGCCUGGGACUCGGGUGGGCGAGGCGGAAGGUGUCCUCGCAGCACGGCUUUUCUCCGCGCCGCGGUUGGUUAGCGAGUGCCCUCUGGGUGCUAGGCGUUGGGCGGAUGGUAGGAUCGCGGUAGCAUACGGAUCCGAGUCCUGCGCCGAGUGAGAGGAGAGGCUGGCAGGGGCUAAGUG\
) } def
/len { sequence length } bind def

/coor [
[84.49670410 157.35841370]
[81.44034576 142.67309570]
[74.09768677 144.20126343]
[70.93750000 158.86459351]
[67.77731323 173.52792358]
[73.31310272 188.96447754]
[62.50754547 201.30027771]
[46.47647476 197.84532166]
[41.71127701 182.15376282]
[53.11397934 170.36773682]
[56.27416992 155.70440674]
[59.43436050 141.04107666]
[49.63105774 152.39428711]
[45.64472198 166.85488892]
[38.52180099 180.05580139]
[28.62397957 191.32670593]
[16.45384598 200.09527588]
[2.62937689 205.91627502]
[-12.14745235 208.49412537]
[-27.12630653 207.69792175]
[-41.54659271 203.56809998]
[-54.67607498 196.31436157]
[-65.84806824 186.30505371]
[-74.49528503 174.04838562]
[-80.17864227 160.16676331]
[-82.60954285 145.36505127]
[-81.66455078 130.39485168]
[-77.39165497 116.01631165]
[-70.00782776 102.95954895]
[-59.88799286 91.88755798]
[-47.54602432 83.36254883]
[-33.60861206 77.81740570]
[-18.78347778 75.53369141]
[-3.82340240 76.62738037]
[10.51197147 81.04293060]
[23.49472237 88.55612946]
[34.46561813 98.78546906]
[42.86989975 111.21598053]
[55.78884888 118.83837128]
[48.10577393 105.95542145]
[40.42269897 93.07247162]
[32.73962402 80.18952942]
[25.05655098 67.30657959]
[17.37347794 54.42362976]
[9.69040394 41.54067993]
[2.00732970 28.65773010]
[-5.67574406 15.77478123]
[-13.35881805 2.89183235]
[-21.04189301 -9.99111652]
[-28.72496605 -22.87406540]
[-42.43876648 -30.76344299]
[-42.31245422 -45.65751266]
[-49.99552917 -58.54046249]
[-57.67860031 -71.42340851]
[-65.36167908 -84.30635834]
[-73.04474640 -97.18930817]
[-80.72782135 -110.07225800]
[-88.41089630 -122.95520782]
[-95.48833466 -128.71690369]
[-96.11005402 -136.07527161]
[-103.61005402 -149.06565857]
[-114.43939972 -159.44473267]
[-127.73638153 -166.38664246]
[-141.03337097 -173.32856750]
[-154.33035278 -180.27047729]
[-167.62733459 -187.21238708]
[-180.92433167 -194.15431213]
[-194.27009583 -201.00196838]
[-207.66398621 -207.75502014]
[-223.28945923 -204.11853027]
[-235.78504944 -214.18032837]
[-235.56520081 -230.22187805]
[-222.79856873 -239.93746948]
[-207.27862549 -235.87413025]
[-200.91091919 -221.14891052]
[-187.51704407 -214.39585876]
[-180.13528442 -214.19142151]
[-173.98240662 -207.45129395]
[-160.68542480 -200.50938416]
[-147.38844299 -193.56745911]
[-134.09144592 -186.62554932]
[-120.79447174 -179.68363953]
[-107.49748230 -172.74171448]
[-95.50041199 -181.74673462]
[-83.50439453 -190.75093079]
[-86.45677185 -205.45750427]
[-89.40914154 -220.16409302]
[-92.36151886 -234.87066650]
[-104.84477997 -248.41270447]
[-98.57906342 -264.80865479]
[-101.73925018 -279.47198486]
[-104.89944458 -294.13531494]
[-117.89498901 -302.72332764]
[-120.89098358 -317.63903809]
[-112.62356567 -329.97537231]
[-115.78375244 -344.63870239]
[-128.45739746 -358.00271606]
[-122.42432404 -374.48571777]
[-125.79169464 -389.10287476]
[-129.15907288 -403.72000122]
[-132.52644348 -418.33715820]
[-141.97419739 -432.41464233]
[-131.06225586 -445.39022827]
[-115.57303619 -438.49673462]
[-117.90929413 -421.70452881]
[-114.54192352 -407.08737183]
[-111.17455292 -392.47024536]
[-107.80718231 -377.85308838]
[-97.72491455 -371.17834473]
[-94.79640198 -359.03427124]
[-101.12042236 -347.79888916]
[-97.96023560 -333.13555908]
[-85.34536743 -325.29971313]
[-81.93160248 -310.47402954]
[-90.23611450 -297.29550171]
[-87.07592773 -282.63217163]
[-83.91573334 -267.96887207]
[-73.92893219 -261.15209961]
[-71.17256165 -248.96780396]
[-77.65493774 -237.82304382]
[-74.70256042 -223.11647034]
[-71.75019073 -208.40988159]
[-68.79781342 -193.70330811]
[-90.61967468 -156.56565857]
[-83.11967468 -143.57527161]
[-75.52794647 -130.63827515]
[-67.84487152 -117.75533295]
[-60.16180038 -104.87238312]
[-52.47872543 -91.98943329]
[-44.79565430 -79.10648346]
[-37.11257935 -66.22353363]
[-29.42950439 -53.34058762]
[-16.26525116 -46.37268448]
[-15.84201717 -30.55714035]
[-8.15894318 -17.67419052]
[-0.47586921 -4.79124165]
[7.20720482 8.09170723]
[14.89027882 20.97465706]
[22.57335281 33.85760498]
[30.25642586 46.74055481]
[37.93949890 59.62350464]
[45.62257385 72.50645447]
[53.30564880 85.38940430]
[60.98872375 98.27235413]
[68.67179871 111.15529633]
[90.09700775 74.36270905]
[120.03868866 91.64200592]
[135.02517700 91.00538635]
[150.01165771 90.36876678]
[164.99813843 89.73214722]
[171.17637634 79.58633423]
[181.37869263 73.73921967]
[193.01628113 73.54132080]
[203.19964600 78.92618561]
[209.45608521 88.45555115]
[224.45457458 88.24328613]
[239.45307922 88.03102112]
[254.45158386 87.81875610]
[269.45007324 87.60649872]
[277.97857666 84.35810852]
[284.66195679 87.49886322]
[299.66195679 87.49886322]
[308.67337036 74.86660004]
[323.39947510 69.97560883]
[338.17776489 74.70656586]
[347.32568359 87.24032593]
[347.32568359 102.75740051]
[338.17776489 115.29116058]
[323.39947510 120.02211761]
[308.67337036 115.13111877]
[299.66195679 102.49886322]
[284.66195679 102.49886322]
[269.66235352 102.60499573]
[254.66383362 102.81726074]
[239.66534424 103.02951813]
[224.66683960 103.24178314]
[209.66835022 103.45404816]
[197.71369934 117.32540131]
[179.09646606 118.05781555]
[165.63476562 104.71863556]
[150.64828491 105.35525513]
[135.66178894 105.99186707]
[120.67530823 106.62848663]
[121.10037231 117.61006165]
[115.65329742 129.34060669]
[124.40124512 141.52557373]
[138.73471069 148.22352600]
[139.87194824 163.07464600]
[148.61990356 175.25961304]
[161.19297791 178.11347961]
[168.22904968 188.43571472]
[166.40914917 200.38948059]
[174.98379517 212.69702148]
[189.22103882 219.59712219]
[190.14802551 234.46286011]
[198.72265625 246.77038574]
[214.23876953 246.94314575]
[226.66992188 256.23004150]
[231.23605347 271.06008911]
[226.18141174 285.73080444]
[213.44961548 294.60104370]
[197.93629456 294.25997925]
[185.60662842 284.83877563]
[181.20162964 269.96005249]
[186.41513062 255.34503174]
[177.84048462 243.03749084]
[164.21655273 237.01771545]
[162.67625427 221.27165222]
[154.10162354 208.96412659]
[137.83404541 202.37222290]
[136.43493652 184.00755310]
[127.68698883 171.82258606]
[113.97924042 165.99620056]
[112.21627808 150.27352905]
[103.46833038 138.08854675]
[96.12567139 139.61672974]
[99.18202972 154.30204773]
[102.23838806 168.98738098]
[109.68300629 182.00956726]
[99.59854126 193.11378479]
[85.92160797 186.95410156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[5 10]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[52 132]
[53 131]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[60 125]
[61 124]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[68 76]
[69 75]
[85 123]
[86 122]
[87 121]
[88 120]
[90 117]
[91 116]
[92 115]
[95 112]
[96 111]
[98 108]
[99 107]
[100 106]
[101 105]
[147 183]
[148 182]
[149 181]
[150 180]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[161 172]
[162 171]
[185 215]
[186 214]
[188 212]
[189 211]
[192 209]
[193 208]
[195 206]
[196 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
