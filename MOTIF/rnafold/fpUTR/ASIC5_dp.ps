%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ASIC5)
} def

/sequence { (\
AUGAAAAUUGGGUUACCCUGAGGACUCUUGCUUAACUGAAAUCACAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.027981895 ubox
1 42 0.013877671 ubox
2 7 0.036287266 ubox
2 10 0.004029600 ubox
2 15 0.006033729 ubox
2 30 0.007467708 ubox
2 34 0.063733702 ubox
2 41 0.016098702 ubox
2 44 0.647117259 ubox
2 46 0.211882514 ubox
3 9 0.013059978 ubox
3 14 0.006788025 ubox
3 27 0.092815440 ubox
3 29 0.012106969 ubox
3 33 0.069091109 ubox
3 37 0.004003277 ubox
3 43 0.743816035 ubox
3 45 0.234037904 ubox
4 8 0.011948878 ubox
4 13 0.006751518 ubox
4 26 0.091224407 ubox
4 28 0.012300242 ubox
4 29 0.012507505 ubox
4 32 0.066649130 ubox
4 33 0.046035633 ubox
4 42 0.737140925 ubox
5 14 0.003376355 ubox
5 28 0.012828352 ubox
5 29 0.016190470 ubox
5 32 0.045638964 ubox
5 33 0.032090632 ubox
6 13 0.003200721 ubox
6 14 0.005337777 ubox
6 28 0.016619257 ubox
6 29 0.029995665 ubox
6 32 0.031993598 ubox
6 33 0.022641047 ubox
7 13 0.005608039 ubox
7 28 0.026915401 ubox
7 32 0.022820973 ubox
7 42 0.094928879 ubox
8 12 0.005230247 ubox
8 21 0.122222161 ubox
8 22 0.021098072 ubox
8 23 0.003312071 ubox
8 24 0.004786409 ubox
8 35 0.065916821 ubox
8 39 0.048624087 ubox
8 40 0.824772328 ubox
8 41 0.097446655 ubox
8 47 0.146686497 ubox
9 20 0.128490732 ubox
9 21 0.021563128 ubox
9 22 0.003765676 ubox
9 23 0.004921479 ubox
9 30 0.016894342 ubox
9 34 0.077717835 ubox
9 38 0.045386300 ubox
9 39 0.866849541 ubox
9 40 0.082001258 ubox
9 44 0.069717112 ubox
9 46 0.192544424 ubox
10 17 0.131419095 ubox
10 18 0.142983950 ubox
10 19 0.146687386 ubox
10 26 0.003702803 ubox
10 27 0.257842134 ubox
10 28 0.022123834 ubox
10 29 0.022488541 ubox
10 32 0.003177837 ubox
10 33 0.079010517 ubox
10 37 0.040595375 ubox
10 43 0.078045417 ubox
10 45 0.198919689 ubox
11 16 0.132065848 ubox
11 17 0.142923199 ubox
11 18 0.154690765 ubox
11 19 0.015676764 ubox
11 25 0.003847836 ubox
11 26 0.259821893 ubox
11 27 0.023531522 ubox
11 28 0.024793840 ubox
11 31 0.003412057 ubox
11 32 0.079633657 ubox
11 36 0.034503420 ubox
11 37 0.894881134 ubox
11 42 0.073129023 ubox
11 43 0.207510869 ubox
12 16 0.121770670 ubox
12 17 0.153627956 ubox
12 18 0.015988902 ubox
12 25 0.261169840 ubox
12 26 0.008270911 ubox
12 27 0.025085707 ubox
12 31 0.079817426 ubox
12 36 0.898677794 ubox
12 42 0.207993261 ubox
12 45 0.004148710 ubox
13 23 0.004745148 ubox
13 24 0.257996017 ubox
13 30 0.078683632 ubox
13 35 0.898072077 ubox
13 39 0.035059053 ubox
13 40 0.051348272 ubox
13 41 0.204601688 ubox
13 44 0.003858050 ubox
14 20 0.004656780 ubox
14 21 0.004501986 ubox
14 22 0.007969364 ubox
14 23 0.231699502 ubox
14 30 0.008050885 ubox
14 34 0.872639367 ubox
14 38 0.038976237 ubox
14 39 0.059763794 ubox
14 40 0.187150411 ubox
15 19 0.005372756 ubox
15 29 0.010204403 ubox
15 33 0.822249061 ubox
15 37 0.038843238 ubox
16 23 0.175571746 ubox
17 22 0.176424957 ubox
17 23 0.061729781 ubox
18 22 0.061995290 ubox
19 30 0.491512335 ubox
19 34 0.329930865 ubox
19 44 0.027375772 ubox
19 46 0.016202440 ubox
20 27 0.271506466 ubox
20 29 0.750360085 ubox
20 33 0.390207602 ubox
20 43 0.032410543 ubox
20 45 0.018045377 ubox
21 26 0.254221559 ubox
21 28 0.767342840 ubox
21 29 0.137405327 ubox
21 32 0.429309002 ubox
21 33 0.049240850 ubox
21 37 0.020313215 ubox
21 42 0.032107542 ubox
22 27 0.765353641 ubox
22 28 0.140210096 ubox
22 29 0.020903463 ubox
22 31 0.429961655 ubox
22 32 0.066227901 ubox
22 33 0.005301412 ubox
22 36 0.021561315 ubox
22 37 0.006721363 ubox
22 43 0.019617152 ubox
23 27 0.138198003 ubox
23 28 0.018417238 ubox
23 29 0.029769019 ubox
23 31 0.066851261 ubox
23 32 0.007402419 ubox
23 33 0.005602476 ubox
23 36 0.007140861 ubox
23 42 0.017536669 ubox
23 43 0.025953675 ubox
24 28 0.027873017 ubox
24 32 0.006257891 ubox
24 42 0.025379295 ubox
26 39 0.048901981 ubox
27 38 0.050507664 ubox
28 35 0.012806980 ubox
28 39 0.022165282 ubox
28 40 0.016281743 ubox
28 41 0.012701112 ubox
28 47 0.021895172 ubox
29 34 0.013115951 ubox
29 38 0.023309791 ubox
29 39 0.017792973 ubox
29 40 0.014328577 ubox
29 44 0.029731638 ubox
29 46 0.030992693 ubox
30 37 0.015570292 ubox
30 43 0.033620894 ubox
30 45 0.032226537 ubox
32 39 0.018717259 ubox
32 40 0.014335748 ubox
32 41 0.034261855 ubox
32 47 0.004691310 ubox
33 38 0.018486736 ubox
33 39 0.015250674 ubox
33 40 0.034321338 ubox
33 46 0.006342495 ubox
37 44 0.079932388 ubox
37 46 0.084773885 ubox
38 43 0.090611962 ubox
38 45 0.091882230 ubox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
4 42 0.9500000 lbox
8 40 0.9500000 lbox
9 39 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
showpage
end
%%EOF
