%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGAUUCCAGUAUGGCGUAUAAAUAAAGGCGAGGAGAAGGCGGUGGUCCGCCAUUUCGUGGACGCCGGGUGAGUGAGAGAGUUGGUUGGUGUUGGGCCGGAGGAAAGCGGGAAGACUCAUCGGAGCGUGUGGAUUUGAGCCGCCGCAUUUUUUAACCCUAGAUCUCGAA\
) } def
/len { sequence length } bind def

/coor [
[-3.18098640 300.72320557]
[-8.79443932 314.63323975]
[-14.40789318 328.54327393]
[-20.02134705 342.45330811]
[-18.01071167 358.14624023]
[-29.94871902 367.05316162]
[-35.56217194 380.96319580]
[-29.15114784 395.40875244]
[-34.91030884 410.12634277]
[-49.42284775 416.38427734]
[-64.07872772 410.46984863]
[-70.18288422 395.89196777]
[-64.11382294 381.29940796]
[-49.47220993 375.34973145]
[-43.85875702 361.43969727]
[-46.27090073 346.74169922]
[-33.93138504 336.83984375]
[-28.31793022 322.92980957]
[-22.70447731 309.01977539]
[-17.09102440 295.10974121]
[-23.37159157 289.69406128]
[-28.20576668 282.93621826]
[-31.31435966 275.21371460]
[-32.51481628 266.96008301]
[-31.73193169 258.64056396]
[-29.00251389 250.72589111]
[-24.47372627 243.66567993]
[-18.39515877 237.86283875]
[-11.10509872 233.65063477]
[-3.01169467 231.27349854]
[5.42988586 230.87289429]
[13.74305534 232.47891235]
[21.32200623 219.53443909]
[28.90095711 206.58995056]
[36.47990799 193.64547729]
[44.05885696 180.70100403]
[37.92429352 167.15458679]
[40.97885132 152.41912842]
[52.25632477 142.18820190]
[67.57270050 140.54051208]
[75.15164948 127.59603119]
[82.73059845 114.65155029]
[78.54047394 100.24867249]
[65.20034027 93.39003754]
[51.86020660 86.53140259]
[38.52007294 79.67276764]
[25.17994118 72.81413269]
[16.08004189 71.66477966]
[11.66050053 65.70646667]
[-1.55213988 58.60533142]
[-14.76478004 51.50419617]
[-27.97742081 44.40306091]
[-41.19006348 37.30192566]
[-56.25014877 42.09455872]
[-70.24956512 34.76026535]
[-74.88270569 19.65035248]
[-67.40081787 5.72925901]
[-52.24275970 1.25612652]
[-38.40155029 8.88478374]
[-34.08892441 24.08928490]
[-20.87628555 31.19042015]
[-7.66364479 38.29155731]
[5.54899597 45.39269257]
[18.76163673 52.49382782]
[32.03857803 59.47400284]
[45.37870789 66.33264160]
[58.71884155 73.19127655]
[72.05897522 80.04991150]
[85.39910889 86.90854645]
[99.45769501 81.67825317]
[105.07115173 67.76821136]
[110.68460846 53.85817719]
[116.29805756 39.94813919]
[121.91151428 26.03810120]
[127.52496338 12.12806320]
[133.13841248 -1.78197384]
[122.35701752 -12.46078682]
[116.50125885 -26.41618347]
[116.43475342 -41.50953293]
[122.13648987 -55.44071198]
[132.70880127 -66.09862518]
[146.51852417 -71.88109589]
[161.44924927 -71.93569183]
[167.06269836 -85.84573364]
[172.67614746 -99.75576782]
[163.82791138 -117.75599670]
[170.90530396 -136.19828796]
[188.96011353 -143.43176270]
[193.80331421 -157.62835693]
[198.64653015 -171.82496643]
[203.48973083 -186.02156067]
[208.33293152 -200.21815491]
[202.57820129 -215.19355774]
[210.82237244 -228.95629883]
[226.74121094 -230.94880676]
[238.12315369 -219.64257812]
[236.23695374 -203.71078491]
[222.52954102 -195.37495422]
[217.68632507 -181.17834473]
[212.84312439 -166.98175049]
[207.99992371 -152.78515625]
[203.15670776 -138.58856201]
[210.03579712 -130.88450623]
[213.10165405 -120.93697357]
[211.73184204 -110.53655243]
[206.10874939 -101.58495331]
[197.19865417 -95.74724579]
[186.58618164 -94.14231873]
[180.97273254 -80.23227692]
[175.35928345 -66.32224274]
[186.07005310 -55.91991043]
[191.99826050 -42.17211533]
[192.21192932 -27.16147995]
[186.64735413 -13.17494392]
[176.12358093 -2.35534883]
[162.22190857 3.62685847]
[147.04846191 3.83147955]
[141.43499756 17.74151611]
[135.82154846 31.65155411]
[130.20809937 45.56159210]
[124.59464264 59.47163010]
[118.98118591 73.38166809]
[113.36773682 87.29170227]
[116.11207581 89.64669037]
[118.42640686 92.59386444]
[120.18378448 96.05130005]
[121.27355194 99.91011810]
[135.55622864 104.49323273]
[149.83891296 109.07633972]
[159.00422668 108.72103882]
[164.33924866 113.87578583]
[178.53584290 118.71899414]
[192.73243713 123.56219482]
[206.92904663 128.40541077]
[220.21560669 120.15911865]
[235.68687439 122.43370056]
[246.03779602 134.15515137]
[246.38098145 149.78897095]
[236.55436707 161.95333862]
[221.19781494 164.90461731]
[207.56219482 157.24929810]
[202.08583069 142.60200500]
[187.88923645 137.75878906]
[173.69264221 132.91558838]
[159.49604797 128.07238770]
[145.25581360 123.35903168]
[130.97312927 118.77591705]
[116.69043732 114.19281006]
[127.02741241 125.06234741]
[139.61894226 133.21423340]
[146.08680725 146.74815369]
[144.52035522 161.66613770]
[135.38232422 173.56137085]
[121.37213135 178.91995239]
[106.62842560 176.15896606]
[95.50653839 166.09397888]
[91.29192352 151.69825745]
[95.22983551 137.22389221]
[95.67507935 122.23049927]
[88.09612274 135.17497253]
[80.51717377 148.11946106]
[86.57640839 162.28250122]
[83.17392731 177.12422180]
[71.81884003 186.99974060]
[57.00333405 188.27995300]
[49.42438507 201.22442627]
[41.84543610 214.16889954]
[34.26648331 227.11338806]
[26.68753433 240.05786133]
[37.43733978 259.73977661]
[34.28539276 281.81637573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[6 15]
[7 14]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[40 161]
[41 160]
[42 159]
[43 69]
[44 68]
[45 67]
[46 66]
[47 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[83 110]
[84 109]
[85 108]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[127 148]
[128 147]
[129 146]
[131 145]
[132 144]
[133 143]
[134 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
