%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUCAAUGAUUAGCUGAGCUCUCUUUCCGACAGUGCAGGGAUUCUGAAGCUGUCUGCUUGAGUUACUGUGCUCUCUUCCAAGGCUGUAGGAGUUCUGGAGCUGCUGGCUGGAGAGGAGGGUGGACGAAGCUCUCUCCAGAAAGACAUCCUGAGAGGACUUGGCAGCCUGCAGAUGGCCUAUUGUGGGACCUUGUGAUCAUGCCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[1.34040451 428.12332153]
[-6.51135111 440.90417480]
[-14.36310673 453.68499756]
[-22.21486092 466.46585083]
[-30.06661797 479.24670410]
[-37.91837311 492.02752686]
[-30.50176430 508.57296753]
[-34.46694183 526.10455322]
[-48.04212189 537.64428711]
[-65.66949463 538.71545410]
[-73.13723755 551.72442627]
[-70.52754974 564.35577393]
[-77.01526642 575.03723145]
[-88.65625000 578.32568359]
[-96.31684875 591.22204590]
[-103.97744751 604.11834717]
[-106.86821747 620.82403564]
[-123.72128296 622.67083740]
[-130.16128540 606.98760986]
[-116.87377167 596.45776367]
[-109.21317291 583.56146240]
[-101.55257416 570.66510010]
[-102.28072357 553.13122559]
[-86.14618683 544.25665283]
[-78.67845154 531.24768066]
[-85.23117065 521.02825928]
[-86.82653046 508.92089844]
[-83.10092163 497.21533203]
[-74.70290375 488.15148926]
[-63.18117142 483.49124146]
[-50.69921494 484.17578125]
[-42.84746170 471.39492798]
[-34.99570465 458.61410522]
[-27.14394951 445.83325195]
[-19.29219437 433.05242920]
[-11.44043827 420.27157593]
[-5.06183290 406.69537354]
[-0.23583531 392.49291992]
[4.59016228 378.29046631]
[9.41615963 364.08801270]
[14.24215794 349.88552856]
[19.06815529 335.68307495]
[18.24380684 328.33856201]
[24.07317543 321.30603027]
[29.11009216 307.17700195]
[34.14700699 293.04797363]
[39.18392181 278.91894531]
[44.22084045 264.78991699]
[33.93931580 247.12406921]
[40.12731934 227.33509827]
[59.17384720 218.42437744]
[63.36085892 204.02059937]
[67.54786682 189.61680603]
[71.73487854 175.21302795]
[75.92189026 160.80924988]
[80.10890198 146.40547180]
[84.29591370 132.00167847]
[88.48292542 117.59790039]
[92.66993713 103.19411469]
[86.26660919 104.55781555]
[79.60707092 104.77347565]
[72.84773254 103.81057739]
[59.46746063 97.03057861]
[46.08718872 90.25058746]
[32.70691681 83.47059631]
[17.76696014 88.62552643]
[3.59450793 81.63144684]
[-1.40217459 66.63781738]
[5.74135494 52.54010773]
[20.78696632 47.70222473]
[34.80836868 54.99440384]
[39.48690796 70.09032440]
[52.86717987 76.87031555]
[66.24745178 83.65030670]
[79.62772369 90.43029785]
[67.22837830 81.98896027]
[62.59068298 67.72390747]
[67.65543365 53.60483170]
[80.30311584 45.54034042]
[95.24089050 46.90528870]
[106.21752167 57.12847137]
[108.63948822 71.93164825]
[101.49228668 85.12078857]
[110.27289581 72.95933533]
[119.05349731 60.79788208]
[127.83409882 48.63642502]
[136.61470032 36.47496796]
[145.39530945 24.31351280]
[154.17590332 12.15205669]
[152.89448547 -0.68230176]
[160.45823669 -10.63083935]
[172.37817383 -12.69039249]
[181.33886719 -24.71977043]
[190.29956055 -36.74914932]
[199.26026917 -48.77852631]
[208.22096252 -60.80790329]
[217.18165588 -72.83728027]
[226.14234924 -84.86666107]
[234.74092102 -97.15749359]
[242.96972656 -109.69889832]
[251.19853210 -122.24029541]
[245.37394714 -134.73289490]
[246.47402954 -148.36404419]
[254.10482788 -159.58190918]
[266.18475342 -165.51651001]
[279.51132202 -164.71369934]
[287.92596436 -177.13119507]
[285.15249634 -192.45913696]
[293.86300659 -204.93237305]
[308.49291992 -207.48199463]
[316.90756226 -219.89949036]
[325.32217407 -232.31698608]
[333.73678589 -244.73448181]
[342.15139771 -257.15197754]
[350.56600952 -269.56945801]
[358.98065186 -281.98696899]
[367.39526367 -294.40444946]
[369.61871338 -303.26416016]
[376.02874756 -306.94290161]
[384.62731934 -319.23376465]
[377.54339600 -332.80123901]
[377.58761597 -348.10668945]
[384.74981689 -361.63299561]
[397.38418579 -370.27194214]
[412.58743286 -372.03836060]
[426.86593628 -366.52633667]
[436.93862915 -355.00247192]
[440.49087524 -340.11486816]
[436.70642090 -325.28463745]
[426.45483398 -313.91961670]
[412.09191895 -308.63137817]
[396.91815186 -310.63519287]
[388.31958008 -298.34436035]
[379.81274414 -285.98983765]
[371.39813232 -273.57235718]
[362.98352051 -261.15484619]
[354.56890869 -248.73735046]
[346.15429688 -236.31985474]
[337.73965454 -223.90235901]
[329.32504272 -211.48486328]
[320.91043091 -199.06736755]
[323.96444702 -184.53436279]
[315.60772705 -171.82138062]
[300.34344482 -168.71658325]
[291.92883301 -156.29908752]
[298.00177002 -141.04795837]
[293.74493408 -125.02169800]
[280.64450073 -114.58714294]
[263.73992920 -114.01148987]
[255.51112366 -101.47008514]
[247.28231812 -88.92868805]
[247.71949768 -86.15975189]
[247.08621216 -83.05080414]
[245.24745178 -80.00870514]
[242.21786499 -77.48162079]
[238.17172241 -75.90596008]
[229.21102905 -63.87658310]
[220.25033569 -51.84720612]
[211.28964233 -39.81782913]
[202.32894897 -27.78845215]
[193.36825562 -15.75907421]
[184.40754700 -3.72969627]
[183.30761719 13.78478527]
[166.33737183 20.93266106]
[157.55676270 33.09411621]
[148.77615356 45.25557327]
[139.99555969 57.41702652]
[131.21495056 69.57848358]
[122.43434906 81.73993683]
[113.65374756 93.90139771]
[107.07371521 107.38112640]
[102.88671112 121.78491211]
[98.69969940 136.18869019]
[94.51268768 150.59246826]
[90.32567596 164.99626160]
[86.13866425 179.40003967]
[81.95165253 193.80381775]
[77.76464081 208.20761108]
[73.57762909 222.61138916]
[80.51087189 229.39816284]
[84.47229004 238.19119263]
[84.95613098 247.76527405]
[81.93805695 256.80303955]
[75.87264252 264.07635498]
[67.62548828 268.61303711]
[58.34986877 269.82684326]
[53.31295395 283.95587158]
[48.27603531 298.08489990]
[43.23912048 312.21392822]
[38.20220566 326.34295654]
[33.27061081 340.50909424]
[28.44461250 354.71154785]
[23.61861610 368.91400146]
[18.79261780 383.11645508]
[13.96662045 397.31890869]
[9.14062309 411.52136230]
[20.36256218 401.56805420]
[34.39669037 396.27249146]
[49.39657593 396.33132935]
[63.38872528 401.73684692]
[74.53222656 411.77789307]
[81.36096954 425.13333130]
[82.97650909 440.04608154]
[79.16629791 454.55410767]
[70.43162537 466.74859619]
[57.92169571 475.02517700]
[43.28240585 478.29489136]
[28.43980408 476.12762451]
[15.34669018 468.80844116]
[5.72568703 457.30032349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 36]
[2 35]
[3 34]
[4 33]
[5 32]
[6 31]
[10 25]
[11 24]
[14 22]
[15 21]
[16 20]
[37 196]
[38 195]
[39 194]
[40 193]
[41 192]
[42 191]
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[59 171]
[62 75]
[63 74]
[64 73]
[65 72]
[83 170]
[84 169]
[85 168]
[86 167]
[87 166]
[88 165]
[89 164]
[92 162]
[93 161]
[94 160]
[95 159]
[96 158]
[97 157]
[98 156]
[99 151]
[100 150]
[101 149]
[106 145]
[107 144]
[110 141]
[111 140]
[112 139]
[113 138]
[114 137]
[115 136]
[116 135]
[117 134]
[119 133]
[120 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
