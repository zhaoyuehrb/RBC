%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TOR2A)
} def

/sequence { (\
GCGGAGCGGUGCACGCCGGGAGUUGCAGUUCCCGGGCGAGGCAGUUGACUGCCCCACAACGAGCUCGGGCCUCACCCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.060828634 ubox
1 10 0.046312986 ubox
1 12 0.324238432 ubox
1 16 0.133018040 ubox
1 23 0.010987359 ubox
1 26 0.193296104 ubox
1 37 0.013615317 ubox
1 52 0.169666284 ubox
1 64 0.274803008 ubox
1 70 0.068700569 ubox
2 6 0.060458634 ubox
2 8 0.020881570 ubox
2 9 0.048060276 ubox
2 11 0.324459458 ubox
2 15 0.143523206 ubox
2 18 0.017537968 ubox
2 22 0.012033399 ubox
2 25 0.193430656 ubox
2 36 0.013602901 ubox
2 38 0.003646489 ubox
2 51 0.170214128 ubox
2 61 0.075199031 ubox
2 63 0.275045910 ubox
2 67 0.016876404 ubox
2 69 0.068979533 ubox
2 78 0.063644228 ubox
3 7 0.020314909 ubox
3 10 0.300253777 ubox
3 14 0.143953651 ubox
3 17 0.018746627 ubox
3 24 0.191283109 ubox
3 31 0.004070891 ubox
3 32 0.153638097 ubox
3 37 0.003648651 ubox
3 50 0.169513914 ubox
3 53 0.056661631 ubox
3 54 0.385207644 ubox
3 55 0.616055065 ubox
3 60 0.073922129 ubox
3 65 0.179903398 ubox
3 66 0.023466190 ubox
3 71 0.025602459 ubox
3 76 0.006537932 ubox
3 77 0.061657544 ubox
4 16 0.013893756 ubox
4 23 0.185072906 ubox
4 24 0.003252328 ubox
4 31 0.162801134 ubox
4 49 0.168893045 ubox
4 52 0.056630300 ubox
4 53 0.386626724 ubox
4 54 0.615820397 ubox
4 64 0.198697605 ubox
4 65 0.010297556 ubox
4 66 0.356777966 ubox
4 70 0.025611340 ubox
4 73 0.007639772 ubox
4 75 0.006955713 ubox
4 76 0.055792881 ubox
5 23 0.003926325 ubox
5 30 0.162786592 ubox
5 46 0.050771898 ubox
5 50 0.062171119 ubox
5 65 0.373873628 ubox
5 72 0.009117309 ubox
6 12 0.153902969 ubox
6 16 0.111399878 ubox
6 23 0.003335720 ubox
6 29 0.162546528 ubox
6 37 0.003810182 ubox
6 45 0.064020944 ubox
6 49 0.063108581 ubox
6 52 0.725242359 ubox
6 64 0.377011962 ubox
6 70 0.007542467 ubox
6 71 0.008037844 ubox
7 11 0.152910273 ubox
7 15 0.119624644 ubox
7 18 0.194789138 ubox
7 28 0.161975455 ubox
7 36 0.003789606 ubox
7 44 0.063971435 ubox
7 47 0.112001254 ubox
7 51 0.725642781 ubox
7 61 0.204687637 ubox
7 63 0.375900895 ubox
7 67 0.026682593 ubox
7 69 0.008558437 ubox
7 78 0.015403111 ubox
8 14 0.121984738 ubox
8 17 0.195754048 ubox
8 46 0.111555850 ubox
8 50 0.724834438 ubox
8 53 0.004425886 ubox
8 54 0.008443336 ubox
8 55 0.077654929 ubox
8 60 0.209098687 ubox
8 65 0.010287888 ubox
8 66 0.027240043 ubox
8 71 0.022965319 ubox
8 72 0.023894121 ubox
8 73 0.010181863 ubox
8 76 0.015343169 ubox
8 77 0.015008124 ubox
9 16 0.195715536 ubox
9 26 0.034148595 ubox
9 37 0.006725816 ubox
9 42 0.015946989 ubox
9 45 0.098394119 ubox
9 49 0.725056554 ubox
9 52 0.004419232 ubox
9 53 0.006174889 ubox
9 54 0.077368221 ubox
9 57 0.233625549 ubox
9 60 0.258754598 ubox
9 64 0.011725136 ubox
9 65 0.025756814 ubox
9 70 0.022986310 ubox
9 71 0.024837087 ubox
9 72 0.009272398 ubox
9 75 0.016850301 ubox
9 76 0.014216644 ubox
10 15 0.187663782 ubox
10 25 0.033879634 ubox
10 27 0.147258462 ubox
10 36 0.006730209 ubox
10 38 0.047617909 ubox
10 41 0.015894264 ubox
10 43 0.516474804 ubox
10 44 0.018781106 ubox
10 47 0.042505643 ubox
10 48 0.536244976 ubox
10 51 0.003620391 ubox
10 56 0.235006182 ubox
10 58 0.195595546 ubox
10 59 0.238625504 ubox
10 61 0.090826311 ubox
10 63 0.011120529 ubox
10 69 0.022172121 ubox
10 74 0.017272420 ubox
11 23 0.008376190 ubox
11 24 0.030002964 ubox
11 26 0.159022898 ubox
11 37 0.074844141 ubox
11 42 0.739591455 ubox
11 45 0.032860393 ubox
11 46 0.007112723 ubox
11 52 0.006580256 ubox
11 55 0.233441257 ubox
11 57 0.223714480 ubox
11 60 0.097999252 ubox
11 64 0.054253575 ubox
11 70 0.027088919 ubox
11 73 0.016130608 ubox
12 22 0.009825053 ubox
12 25 0.159067811 ubox
12 36 0.074888831 ubox
12 41 0.739588997 ubox
12 44 0.033792198 ubox
12 47 0.091251427 ubox
12 51 0.006577098 ubox
12 63 0.054273576 ubox
12 69 0.027098884 ubox
13 23 0.095310183 ubox
13 24 0.128736370 ubox
13 45 0.048833034 ubox
13 46 0.089719131 ubox
13 50 0.005726327 ubox
14 22 0.131128810 ubox
14 38 0.913564987 ubox
14 44 0.044422329 ubox
14 61 0.020718000 ubox
14 67 0.004068799 ubox
15 23 0.084623315 ubox
15 26 0.003398886 ubox
15 37 0.920463289 ubox
15 42 0.021185696 ubox
15 60 0.019797825 ubox
15 64 0.003448387 ubox
15 66 0.003578937 ubox
15 70 0.008921601 ubox
16 22 0.085546231 ubox
16 25 0.003375435 ubox
16 35 0.547694736 ubox
16 36 0.752412611 ubox
16 41 0.019728160 ubox
16 69 0.008919198 ubox
16 79 0.190874480 ubox
17 34 0.763704968 ubox
17 35 0.533566473 ubox
17 40 0.017772494 ubox
17 68 0.008885627 ubox
17 78 0.251820788 ubox
18 32 0.016277955 ubox
18 33 0.930951838 ubox
18 76 0.007052148 ubox
18 77 0.252894057 ubox
19 31 0.017996908 ubox
19 32 0.932348466 ubox
19 33 0.036041229 ubox
19 75 0.008333305 ubox
19 76 0.252827863 ubox
19 77 0.018314942 ubox
20 30 0.018143090 ubox
20 31 0.932506679 ubox
20 32 0.032162476 ubox
20 66 0.006443510 ubox
20 73 0.015806698 ubox
20 75 0.251897111 ubox
20 76 0.018889108 ubox
21 29 0.033031786 ubox
21 30 0.928519148 ubox
21 65 0.006828791 ubox
21 72 0.023491811 ubox
22 29 0.741335048 ubox
22 64 0.006912489 ubox
22 70 0.005961107 ubox
22 71 0.024264269 ubox
22 75 0.023666146 ubox
23 28 0.242559762 ubox
23 63 0.006843005 ubox
23 69 0.004994653 ubox
23 74 0.025724248 ubox
24 62 0.005809694 ubox
24 68 0.004685158 ubox
24 74 0.242370759 ubox
25 70 0.029596303 ubox
25 73 0.246576404 ubox
26 69 0.021926881 ubox
27 65 0.009704413 ubox
27 72 0.240142464 ubox
28 60 0.006773249 ubox
28 64 0.010375566 ubox
28 70 0.041671581 ubox
28 71 0.240336637 ubox
28 75 0.003209452 ubox
29 59 0.006771428 ubox
29 63 0.010372905 ubox
29 69 0.014148897 ubox
29 74 0.003324913 ubox
30 58 0.006330542 ubox
30 62 0.010348449 ubox
30 69 0.011151044 ubox
31 61 0.010297990 ubox
31 68 0.010112505 ubox
31 69 0.252454599 ubox
31 79 0.010500512 ubox
32 67 0.007166879 ubox
32 68 0.254245883 ubox
32 78 0.007610554 ubox
32 79 0.197915376 ubox
33 67 0.254362606 ubox
33 78 0.253314826 ubox
34 54 0.014639543 ubox
34 55 0.008861460 ubox
34 60 0.003320346 ubox
34 66 0.254490957 ubox
34 72 0.003591714 ubox
34 77 0.257164864 ubox
35 53 0.015320173 ubox
35 54 0.008964373 ubox
35 55 0.030846581 ubox
35 65 0.254636287 ubox
35 71 0.009934760 ubox
35 76 0.257490376 ubox
36 42 0.026061903 ubox
36 45 0.011343908 ubox
36 52 0.015385019 ubox
36 53 0.006759689 ubox
36 54 0.031444703 ubox
36 64 0.255321199 ubox
36 70 0.010001829 ubox
36 75 0.257591413 ubox
37 41 0.025906043 ubox
37 44 0.011763629 ubox
37 47 0.006003482 ubox
37 51 0.015393252 ubox
37 61 0.011312610 ubox
37 63 0.255127975 ubox
37 67 0.005758185 ubox
37 69 0.009847726 ubox
38 46 0.006293514 ubox
38 50 0.007816310 ubox
38 60 0.021046739 ubox
38 66 0.007710228 ubox
38 73 0.257730644 ubox
39 45 0.006951768 ubox
39 46 0.006510794 ubox
39 50 0.013972439 ubox
39 65 0.008691165 ubox
39 72 0.257833422 ubox
40 45 0.006847728 ubox
40 49 0.015957258 ubox
40 53 0.606645560 ubox
40 54 0.039380533 ubox
40 55 0.008045924 ubox
40 64 0.008066307 ubox
40 65 0.022984231 ubox
40 66 0.003709150 ubox
40 71 0.257758756 ubox
41 52 0.609191525 ubox
41 53 0.027970158 ubox
41 54 0.005493023 ubox
41 64 0.025396093 ubox
41 70 0.256597299 ubox
42 51 0.610285714 ubox
42 63 0.025520385 ubox
42 69 0.255055292 ubox
43 50 0.609475128 ubox
43 65 0.162085985 ubox
44 49 0.604427353 ubox
44 52 0.014681659 ubox
44 57 0.006585260 ubox
44 60 0.047388100 ubox
44 64 0.164318770 ubox
44 75 0.009523689 ubox
45 51 0.014610843 ubox
45 56 0.005165200 ubox
45 59 0.047903104 ubox
45 62 0.027358950 ubox
45 63 0.162558290 ubox
45 68 0.135283519 ubox
45 74 0.006808449 ubox
46 56 0.010168146 ubox
46 58 0.048619997 ubox
46 61 0.031209206 ubox
46 62 0.158206404 ubox
46 67 0.176770305 ubox
46 68 0.005223024 ubox
46 74 0.015382379 ubox
47 55 0.011782296 ubox
47 57 0.048604812 ubox
47 60 0.042115325 ubox
47 66 0.186876881 ubox
47 73 0.019424650 ubox
48 65 0.184586933 ubox
48 72 0.019068361 ubox
49 63 0.166821900 ubox
49 68 0.006829759 ubox
50 56 0.028822715 ubox
50 58 0.131542055 ubox
50 61 0.052986584 ubox
50 62 0.161636628 ubox
50 67 0.006641026 ubox
51 55 0.029931860 ubox
51 57 0.135548982 ubox
51 60 0.085514254 ubox
51 64 0.082032113 ubox
51 66 0.005315839 ubox
51 70 0.030923747 ubox
52 63 0.082136373 ubox
52 68 0.006306237 ubox
52 69 0.034928573 ubox
53 67 0.006300285 ubox
53 68 0.035927442 ubox
53 69 0.031628192 ubox
54 67 0.035773242 ubox
54 68 0.040653508 ubox
54 69 0.006398862 ubox
54 79 0.006029182 ubox
55 67 0.040697792 ubox
55 68 0.006729130 ubox
55 78 0.005974991 ubox
60 67 0.033275144 ubox
60 78 0.007987594 ubox
61 66 0.036808022 ubox
61 73 0.030676367 ubox
61 77 0.007474801 ubox
62 72 0.030705838 ubox
63 70 0.022158525 ubox
63 71 0.024073611 ubox
64 69 0.029115520 ubox
64 79 0.145118936 ubox
65 78 0.027394053 ubox
65 79 0.476010566 ubox
66 78 0.851363833 ubox
67 73 0.003497534 ubox
67 76 0.075949592 ubox
67 77 0.922813487 ubox
68 75 0.077053733 ubox
68 76 0.922941335 ubox
68 77 0.027559052 ubox
69 75 0.920393643 ubox
69 76 0.027482667 ubox
70 79 0.018460935 ubox
71 78 0.020789006 ubox
71 79 0.006094597 ubox
72 78 0.005578111 ubox
72 79 0.006830909 ubox
73 78 0.011828789 ubox
3 55 0.9500000 lbox
4 54 0.9500000 lbox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
66 78 0.9500000 lbox
67 77 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
showpage
end
%%EOF
