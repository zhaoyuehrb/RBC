%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCAGUGAAUCAGAACAAUGACUGCGCCGCCGGGUACCCGGGAGCGCGUCGGAGGACUGUGAGCAGCCGCCGCCGGGAGAGCUGCGGGCGGCGCAGUGUCAACGCUGGGCUCGGGAGCCUCCAGCGCAGAUCCUGCCCAGCGCCCGCAGCCCGCGCGAAGCCGCUGGGCUCCGGCACUGCAGCGCUGCUCGGGGACUGUGCAUUGUUGUGAGCCGGAGAAGGGGCGCGGGGAUUACAAAGCCUGAAGACCCCG\
GAGCCCCUUUAGCC\
) } def
/len { sequence length } bind def

/coor [
[191.98783875 295.81872559]
[184.41056824 294.89367676]
[177.19763184 292.35479736]
[170.68917847 288.31567383]
[165.19337463 282.96099854]
[160.97190857 276.53768921]
[158.22747803 269.34390259]
[157.09410095 261.71493530]
[157.63052368 254.00767517]
[159.81727600 246.58393860]
[163.55726624 239.79345703]
[168.68006897 233.95738220]
[161.18006897 220.96699524]
[153.68006897 207.97662354]
[140.61573792 200.82312012]
[140.41635132 185.00317383]
[132.91635132 172.01280212]
[125.41635132 159.02241516]
[117.91635132 146.03202820]
[110.41635132 133.04165649]
[102.91635132 120.05126953]
[88.12933350 117.53253174]
[76.75162506 127.30738831]
[65.37392426 137.08224487]
[60.92497253 145.01835632]
[53.80650330 146.90371704]
[42.31583405 156.54553223]
[30.82516861 166.18734741]
[19.33450127 175.82914734]
[17.80891800 191.33110046]
[6.01839590 200.94558716]
[-8.75093937 199.39564514]
[-20.24160576 209.03744507]
[-31.73227310 218.67926025]
[-43.22293854 228.32107544]
[-48.32027054 243.90791321]
[-64.42109680 247.02166748]
[-74.96226501 234.45919800]
[-69.09992218 219.14367676]
[-52.86475372 216.83041382]
[-41.37408829 207.18859863]
[-29.88341904 197.54678345]
[-18.39275360 187.90496826]
[-17.35448265 173.09086609]
[-5.83866405 163.14901733]
[9.69268799 164.33848572]
[21.18335533 154.69667053]
[32.67402267 145.05485535]
[44.16468811 135.41304016]
[55.59906769 125.70454407]
[66.97676849 115.92968750]
[78.35447693 106.15483093]
[76.69978333 91.24637604]
[63.45557022 84.20429993]
[50.21135712 77.16222382]
[36.96714401 70.12015533]
[23.72293091 63.07807922]
[14.71210480 61.82107544]
[10.36628628 55.87624359]
[-2.79509497 48.68054581]
[-21.20642853 49.52164841]
[-29.71248055 34.15470123]
[-42.95669556 27.11262512]
[-56.20090866 20.07055283]
[-69.44512177 13.02847862]
[-82.68933868 5.98640585]
[-99.29026794 17.05985641]
[-123.73186493 7.59733582]
[-137.99771118 2.96208096]
[-152.26354980 -1.67317402]
[-166.52940369 -6.30842876]
[-180.79525757 -10.94368362]
[-195.06109619 -15.57893848]
[-209.01593018 -8.65792751]
[-223.41749573 -13.56195831]
[-229.92962646 -26.90841103]
[-244.19548035 -31.54366493]
[-258.46133423 -36.17892075]
[-273.35104370 -30.20598984]
[-287.23278809 -38.24818039]
[-289.45767212 -54.13620758]
[-278.31893921 -65.68214417]
[-262.36129761 -64.02892303]
[-253.82606506 -50.44476700]
[-239.56022644 -45.80951309]
[-225.29437256 -41.17425919]
[-212.18110657 -48.14403152]
[-197.64747620 -43.64644623]
[-190.42584229 -29.84478569]
[-176.16000366 -25.20953178]
[-161.89414978 -20.57427597]
[-147.62829590 -15.93902206]
[-133.36245728 -11.30376720]
[-119.09660339 -6.66851187]
[-115.08527374 -13.00564289]
[-103.05128479 -32.01703644]
[-113.34490967 -42.92764282]
[-123.63853455 -53.83824539]
[-133.93215942 -64.74884796]
[-144.22578430 -75.65945435]
[-160.08262634 -79.84186554]
[-164.12730408 -95.73440552]
[-152.19898987 -106.98818207]
[-136.56852722 -102.02628326]
[-133.31518555 -85.95307922]
[-123.02155304 -75.04247284]
[-112.72792816 -64.13186646]
[-102.43430328 -53.22126389]
[-92.14067841 -42.31066132]
[-74.38433075 -25.79015732]
[-75.64726257 -7.25780821]
[-62.40304947 -0.21573481]
[-49.15883636 6.82633877]
[-35.91461945 13.86841202]
[-22.67040634 20.91048622]
[-11.03777218 17.67480850]
[0.04337703 23.40396500]
[4.40060186 35.51916504]
[17.56198311 42.71485901]
[30.76500320 49.83386612]
[44.00921631 56.87593842]
[57.25343323 63.91801453]
[70.49764252 70.96008301]
[83.74185944 78.00215912]
[97.95915222 79.86327362]
[105.52503967 88.09353638]
[115.03250122 76.49145508]
[124.53997040 64.88938141]
[134.04743958 53.28731155]
[143.55490112 41.68523788]
[153.06236267 30.08316231]
[155.82475281 14.50498104]
[169.87628174 9.56493855]
[179.38374329 -2.03713536]
[188.89120483 -13.63920879]
[198.39866638 -25.24128342]
[207.90614319 -36.84335709]
[206.53602600 -52.35981750]
[216.34323120 -63.99053192]
[231.14424133 -65.20109558]
[240.65170288 -76.80317688]
[250.15916443 -88.40525055]
[259.66662598 -100.00732422]
[269.17410278 -111.60939789]
[278.68157959 -123.21147156]
[287.70880127 -135.19099426]
[296.24081421 -147.52812195]
[304.77282715 -159.86524963]
[306.25863647 -175.61653137]
[319.86166382 -181.68341064]
[328.39367676 -194.02053833]
[336.92568970 -206.35766602]
[345.45770264 -218.69479370]
[353.98974609 -231.03192139]
[362.52175903 -243.36904907]
[364.81634521 -252.17301941]
[371.22549438 -255.79930115]
[379.90048218 -268.03631592]
[388.57546997 -280.27334595]
[389.56021118 -296.64288330]
[404.34799194 -303.73184204]
[417.72644043 -294.24768066]
[415.93292236 -277.94689941]
[400.81250000 -271.59835815]
[392.13751221 -259.36132812]
[383.46252441 -247.12431335]
[374.85888672 -234.83703613]
[366.32684326 -222.49990845]
[357.79483032 -210.16278076]
[349.26281738 -197.82565308]
[340.73080444 -185.48852539]
[332.19879150 -173.15139771]
[331.32324219 -158.28254700]
[317.10995483 -151.33323669]
[308.57794189 -138.99610901]
[300.04592896 -126.65898132]
[314.73501587 -129.69714355]
[327.98678589 -122.66927338]
[333.71182251 -108.80478668]
[329.27941895 -94.47461700]
[316.72631836 -86.26367188]
[301.82083130 -87.94499969]
[291.41226196 -98.74600220]
[290.28363037 -113.70400238]
[280.77618408 -102.10192871]
[271.26870728 -90.49985504]
[261.76123047 -78.89778137]
[252.25378418 -67.29570770]
[242.74632263 -55.69363403]
[244.46800232 -40.94333267]
[234.99136353 -29.04174232]
[219.50820923 -27.33589172]
[210.00074768 -15.73381901]
[200.49328613 -4.13174486]
[190.98580933 7.47032928]
[181.47834778 19.07240295]
[179.39599609 33.82072830]
[164.66442871 39.59062576]
[155.15696716 51.19270325]
[145.64950562 62.79477692]
[136.14204407 74.39685059]
[126.63457489 85.99892426]
[117.12711334 97.60099792]
[115.90673065 112.55126953]
[123.40673065 125.54164886]
[130.90673828 138.53202820]
[138.40673828 151.52241516]
[145.90673828 164.51280212]
[153.40673828 177.50317383]
[167.00752258 185.58583069]
[166.67045593 200.47662354]
[174.17045593 213.46699524]
[181.67045593 226.45738220]
[204.61752319 226.95001221]
[222.44787598 241.20043945]
[227.92547607 263.22790527]
[218.94747925 283.93685913]
[227.76425171 296.07211304]
[244.76492310 303.18978882]
[245.87771606 320.71856689]
[254.83509827 332.75042725]
[263.79248047 344.78225708]
[272.74984741 356.81411743]
[281.70724487 368.84594727]
[290.66461182 380.87780762]
[299.62197876 392.90966797]
[308.57937622 404.94149780]
[325.66171265 411.86090088]
[326.97839355 429.37554932]
[336.07513428 441.30233765]
[345.17190552 453.22915649]
[354.26867676 465.15597534]
[363.36544800 477.08279419]
[378.54843140 475.23236084]
[392.52679443 481.19070435]
[401.58575439 493.26553345]
[403.37249756 508.15390015]
[397.50659180 521.84539795]
[406.60336304 533.77221680]
[422.24719238 537.32891846]
[429.09014893 551.83935547]
[421.88293457 566.17236328]
[406.15429688 569.33288574]
[393.96987915 558.89642334]
[394.67654419 542.86895752]
[385.57977295 530.94213867]
[370.82452393 532.97875977]
[356.93859863 527.31866455]
[347.68905640 515.38916016]
[345.63916016 500.33276367]
[351.43862915 486.17956543]
[342.34185791 474.25274658]
[333.24511719 462.32592773]
[324.14834595 450.39910889]
[315.05157471 438.47232056]
[303.13003540 436.55798340]
[295.45101929 426.72702026]
[296.54751587 413.89886475]
[287.59014893 401.86703491]
[278.63275146 389.83517456]
[269.67538452 377.80334473]
[260.71801758 365.77148438]
[251.76063538 353.73965454]
[242.80325317 341.70779419]
[233.84587097 329.67593384]
[221.94740295 327.62304688]
[214.38330078 317.70339966]
[215.62899780 304.88888550]
[206.81222534 292.75363159]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 213]
[13 212]
[14 211]
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 52]
[23 51]
[24 50]
[26 49]
[27 48]
[28 47]
[29 46]
[32 43]
[33 42]
[34 41]
[35 40]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[59 119]
[60 118]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
[68 94]
[69 93]
[70 92]
[71 91]
[72 90]
[73 89]
[76 86]
[77 85]
[78 84]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[126 203]
[127 202]
[128 201]
[129 200]
[130 199]
[131 198]
[133 196]
[134 195]
[135 194]
[136 193]
[137 192]
[140 189]
[141 188]
[142 187]
[143 186]
[144 185]
[145 184]
[146 176]
[147 175]
[148 174]
[150 172]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
[157 166]
[158 165]
[159 164]
[217 269]
[218 268]
[220 265]
[221 264]
[222 263]
[223 262]
[224 261]
[225 260]
[226 259]
[227 258]
[229 255]
[230 254]
[231 253]
[232 252]
[233 251]
[238 246]
[239 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
