%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RLN3)
} def

/sequence { (\
GCCAAGAGGCAGCAGAGACACUGGCCCACUCUCACGUUCAAAGCAUCUCCGUCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.986375653 ubox
1 13 0.010224451 ubox
1 25 0.011504768 ubox
1 37 0.027485859 ubox
1 44 0.034292688 ubox
1 52 0.028237421 ubox
1 57 0.018516166 ubox
2 9 0.987139287 ubox
2 12 0.010032740 ubox
2 24 0.011542076 ubox
2 36 0.030011996 ubox
2 43 0.034267109 ubox
2 51 0.030878570 ubox
2 56 0.018696521 ubox
3 8 0.985729678 ubox
3 23 0.011525426 ubox
4 22 0.009797464 ubox
5 22 0.004059604 ubox
5 30 0.017433870 ubox
5 32 0.101129263 ubox
5 48 0.037514918 ubox
6 21 0.005716632 ubox
6 29 0.018386862 ubox
6 31 0.106866232 ubox
6 33 0.022297016 ubox
6 39 0.024332646 ubox
6 47 0.038702397 ubox
6 49 0.027449158 ubox
6 53 0.007192712 ubox
7 30 0.106729548 ubox
7 32 0.022299121 ubox
7 38 0.023870843 ubox
7 46 0.036626024 ubox
7 48 0.027494321 ubox
7 52 0.006771254 ubox
8 21 0.004161797 ubox
8 26 0.059499924 ubox
8 27 0.014272779 ubox
8 29 0.099037295 ubox
8 31 0.019961986 ubox
8 37 0.017120359 ubox
8 38 0.007889618 ubox
8 47 0.027292953 ubox
8 50 0.008534954 ubox
8 53 0.012929193 ubox
8 54 0.080139799 ubox
9 25 0.063939191 ubox
9 26 0.014213705 ubox
9 29 0.009147804 ubox
9 30 0.015653802 ubox
9 37 0.012742917 ubox
9 44 0.039674244 ubox
9 46 0.021998260 ubox
9 49 0.008462289 ubox
9 52 0.012836410 ubox
9 53 0.079941625 ubox
9 57 0.031612704 ubox
10 23 0.028149048 ubox
10 24 0.058340140 ubox
10 36 0.015668738 ubox
10 43 0.039880589 ubox
10 51 0.014814625 ubox
10 56 0.032543173 ubox
11 22 0.038882696 ubox
11 30 0.004361040 ubox
11 32 0.003652977 ubox
11 38 0.090911819 ubox
11 48 0.005900088 ubox
12 21 0.039682634 ubox
12 25 0.086742569 ubox
12 29 0.004618971 ubox
12 31 0.003817503 ubox
12 37 0.106897914 ubox
12 44 0.085139334 ubox
12 47 0.005703522 ubox
12 52 0.856339939 ubox
12 57 0.062071449 ubox
13 23 0.114798558 ubox
13 24 0.067503362 ubox
13 36 0.107853935 ubox
13 43 0.085152336 ubox
13 51 0.887224935 ubox
13 56 0.062334267 ubox
14 22 0.127451235 ubox
14 32 0.084343751 ubox
14 48 0.024071381 ubox
15 21 0.128047525 ubox
15 31 0.088185531 ubox
15 33 0.177751415 ubox
15 39 0.048779435 ubox
15 47 0.025685852 ubox
15 49 0.944654157 ubox
15 53 0.016777380 ubox
16 22 0.025237883 ubox
16 30 0.088162724 ubox
16 32 0.177990436 ubox
16 38 0.047081085 ubox
16 46 0.025556405 ubox
16 48 0.945698872 ubox
16 52 0.016457261 ubox
17 21 0.025012872 ubox
17 29 0.087796142 ubox
17 31 0.178003642 ubox
17 33 0.005296563 ubox
17 37 0.039818451 ubox
17 38 0.034169540 ubox
17 39 0.054580891 ubox
17 47 0.945836860 ubox
17 49 0.005219298 ubox
17 53 0.044591999 ubox
18 30 0.169976598 ubox
18 32 0.005114507 ubox
18 37 0.042393818 ubox
18 38 0.053088595 ubox
18 46 0.939098934 ubox
18 48 0.005104356 ubox
18 52 0.044696106 ubox
19 36 0.048833060 ubox
19 51 0.044462954 ubox
20 37 0.066890790 ubox
20 52 0.003949716 ubox
21 36 0.068419209 ubox
21 43 0.905971451 ubox
21 51 0.004243416 ubox
21 56 0.186439985 ubox
22 28 0.092512502 ubox
22 34 0.086357435 ubox
22 36 0.023781746 ubox
22 40 0.183289082 ubox
22 42 0.889192533 ubox
22 45 0.141779741 ubox
22 51 0.007076064 ubox
22 55 0.187601886 ubox
23 27 0.092466257 ubox
23 30 0.058425112 ubox
23 31 0.043873341 ubox
23 32 0.053389001 ubox
23 33 0.091903776 ubox
23 35 0.044046928 ubox
23 38 0.227726757 ubox
23 39 0.231591754 ubox
23 44 0.138082616 ubox
23 47 0.015742649 ubox
23 48 0.005392024 ubox
23 49 0.007153268 ubox
23 50 0.017308801 ubox
23 53 0.010939752 ubox
23 54 0.187619449 ubox
24 29 0.063521215 ubox
24 30 0.034467902 ubox
24 31 0.061595823 ubox
24 32 0.073874834 ubox
24 37 0.253779614 ubox
24 38 0.200066204 ubox
24 44 0.094767571 ubox
24 46 0.008875268 ubox
24 47 0.005666425 ubox
24 48 0.005421823 ubox
24 49 0.017201312 ubox
24 52 0.014584149 ubox
24 53 0.187042662 ubox
24 57 0.007521793 ubox
25 36 0.270069483 ubox
25 43 0.102020195 ubox
25 51 0.084764555 ubox
25 56 0.007591197 ubox
28 37 0.728473529 ubox
28 52 0.097437088 ubox
29 36 0.749534264 ubox
29 43 0.018047676 ubox
29 51 0.098346147 ubox
29 56 0.013615079 ubox
30 42 0.017537170 ubox
30 55 0.013146469 ubox
31 43 0.029552203 ubox
31 56 0.010719970 ubox
32 42 0.028504953 ubox
32 55 0.010603649 ubox
34 52 0.121072660 ubox
35 51 0.124524935 ubox
36 44 0.131283223 ubox
36 46 0.007308016 ubox
36 50 0.122123009 ubox
36 57 0.024212435 ubox
37 43 0.130299452 ubox
37 45 0.008562870 ubox
37 56 0.024241344 ubox
38 42 0.099429211 ubox
38 55 0.021721392 ubox
42 48 0.023493459 ubox
43 47 0.024028978 ubox
43 52 0.088934030 ubox
43 57 0.055324577 ubox
44 51 0.091296562 ubox
44 56 0.055744360 ubox
45 52 0.012795510 ubox
46 51 0.012397077 ubox
47 56 0.025898574 ubox
48 55 0.024995495 ubox
51 57 0.033896707 ubox
52 56 0.031978432 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
3 8 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
showpage
end
%%EOF
