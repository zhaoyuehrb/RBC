%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGAUAUUAACCCGGGAGGCGGCGGCGGGGAGGGGAGAGGCUCUGAGAGGCGAGGCCGGGUGAGGCGGCGAGGGCGGCCCGACGGGCGCGGGACGGGACGGGGCAGCGAGGGCGCCGGGAGCCGCGGCCCGGAAUCGGGGCGCUUCGCCCCGGGCCCCCCAGC\
) } def
/len { sequence length } bind def

/coor [
[158.38716125 180.68649292]
[163.07958984 194.93363953]
[162.76028442 209.93023682]
[157.46568298 223.96473694]
[147.80004883 235.43537903]
[134.86653137 243.03302002]
[120.14122772 245.89054871]
[105.30473328 243.68182373]
[92.05033875 236.65893555]
[81.89076233 225.62339783]
[75.98551178 211.83470154]
[75.00856018 196.86654663]
[79.07249451 182.42497253]
[67.97612000 192.51806641]
[56.87974167 202.61114502]
[45.78336334 212.70423889]
[49.70228958 227.49952698]
[46.28530502 242.41873169]
[36.31760788 254.03353882]
[22.08970833 259.67492676]
[6.87106609 258.04656982]
[-5.84118223 249.52265930]
[-13.12585640 236.06188965]
[-13.30899143 220.75747681]
[-6.34850407 207.12626648]
[6.15613651 198.30058289]
[21.33145523 196.30853271]
[35.69027710 201.60786438]
[46.78665161 191.51477051]
[57.88302994 181.42167664]
[68.97940826 171.32859802]
[69.77093506 165.31819153]
[73.94575500 159.96226501]
[80.92479706 157.15327454]
[88.99093628 144.50665283]
[97.05708313 131.86001587]
[94.55130005 124.79099274]
[80.41317749 129.80233765]
[75.40205383 115.66413879]
[89.53973389 110.65294647]
[87.03395844 103.58393097]
[72.80360413 98.84081268]
[58.57325745 94.09770203]
[49.39712524 94.34956360]
[44.11997604 89.12783051]
[29.98193550 84.11627197]
[17.26785660 93.01187897]
[1.75388110 92.70176697]
[-10.59455299 83.30518341]
[-15.02922058 68.43530273]
[-9.84490108 53.80990219]
[2.96492887 45.05273819]
[18.47462845 45.53112793]
[30.72040176 55.06111526]
[34.99349594 69.97822571]
[49.13153839 74.98979187]
[63.31637192 79.86734772]
[77.54672241 84.61046600]
[91.77706909 89.35357666]
[106.66371918 87.51301575]
[119.31035614 79.44687653]
[131.95698547 71.38072968]
[144.60362244 63.31458664]
[148.13159180 48.14253235]
[161.07197571 40.14247131]
[175.51446533 43.59934998]
[188.16110229 35.53320694]
[193.74468994 28.24703026]
[201.12426758 27.43671227]
[213.92127991 19.61133957]
[226.71829224 11.78596783]
[239.51530457 3.96059489]
[252.31231689 -3.86477780]
[265.10934448 -11.69015026]
[277.90634155 -19.51552391]
[283.62683105 -26.69473076]
[291.02041626 -27.36524963]
[303.96322632 -34.94704819]
[311.95989990 -48.59855270]
[326.85253906 -48.35543442]
[339.79534912 -55.93723297]
[352.73815918 -63.51903152]
[365.68096924 -71.10083008]
[378.62377930 -78.68263245]
[391.34616089 -86.62874603]
[403.83789062 -94.93276978]
[416.32958984 -103.23679352]
[428.82131958 -111.54081726]
[441.31304932 -119.84484863]
[453.72564697 -128.26670837]
[466.05798340 -136.80563354]
[478.39031982 -145.34457397]
[490.72265625 -153.88349915]
[488.20153809 -165.70948792]
[489.83016968 -177.65602112]
[495.39276123 -188.31404114]
[504.21090698 -196.43457031]
[515.22625732 -201.07496643]
[527.12762451 -201.70834351]
[538.50677490 -198.28330994]
[548.02545166 -191.22726440]
[560.82244873 -199.05262756]
[573.61950684 -206.87800598]
[581.35638428 -220.67839050]
[596.25097656 -220.71714783]
[609.04797363 -228.54252625]
[611.19488525 -244.03202820]
[622.83062744 -254.47923279]
[638.46105957 -254.95129395]
[650.70605469 -245.22532654]
[653.78381348 -229.89361572]
[646.24121094 -216.19534302]
[631.63952637 -210.59840393]
[616.87335205 -215.74551392]
[604.07629395 -207.92013550]
[597.25476074 -194.67947388]
[581.44482422 -194.08099365]
[568.64782715 -186.25561523]
[555.85083008 -178.43025208]
[557.16357422 -160.40533447]
[549.14434814 -144.11488342]
[533.91778564 -134.06895447]
[515.61700439 -133.09693909]
[499.26159668 -141.55116272]
[486.92926025 -133.01222229]
[474.59692383 -124.47329712]
[462.26458740 -115.93436432]
[458.53897095 -109.51294708]
[449.61706543 -107.35311890]
[437.12536621 -99.04909515]
[424.63363647 -90.74507141]
[412.14190674 -82.44104767]
[399.65017700 -74.13701630]
[398.60531616 -70.72583771]
[395.83071899 -67.66274261]
[391.51373291 -65.76686859]
[386.20556641 -65.73982239]
[373.26275635 -58.15802002]
[360.31994629 -50.57622147]
[347.37713623 -42.99442291]
[334.43432617 -35.41262436]
[327.36340332 -22.30342102]
[311.54501343 -22.00424004]
[298.60220337 -14.42244053]
[285.73171997 -6.71851015]
[272.93469238 1.10686266]
[260.13769531 8.93223572]
[247.34068298 16.75760841]
[234.54367065 24.58298111]
[221.74665833 32.40835190]
[208.94963074 40.23372650]
[196.22724915 48.17984009]
[183.58061218 56.24598312]
[180.62524414 70.79938507]
[167.91467285 79.15975189]
[152.66976929 75.96121979]
[140.02313232 84.02735901]
[127.37649536 92.09350586]
[114.72986603 100.15965271]
[109.70371246 139.92616272]
[101.63757324 152.57278442]
[93.57142639 165.21942139]
[107.11273956 158.76707458]
[122.02980042 157.19186401]
[136.62013245 160.67356873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 31]
[14 30]
[15 29]
[16 28]
[34 162]
[35 161]
[36 160]
[41 59]
[42 58]
[43 57]
[45 56]
[46 55]
[60 159]
[61 158]
[62 157]
[63 156]
[66 153]
[67 152]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[77 144]
[78 143]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 127]
[91 126]
[92 125]
[93 124]
[101 119]
[102 118]
[103 117]
[105 115]
[106 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
