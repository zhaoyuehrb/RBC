%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAAACCAAUCGCAAGCCUCGUUGAGUGGAAGGGGUGGGAUCUUCCCCGGAAGUGUUGGUUAAAGCCCCUCCAAUCAGCGGCUCGGUGCGGCAAGUUUGAAUUUCGUGGAGGCUCGGGUUGUGAGGGUUCCUGCUUCGGAGUCGGCGGUGGUCGUCCAGACCGAGUGUUCUUUACUUUUUGUUUGGUUGAGGUUUCACGCUAGAAGGUGGCUCAGG\
) } def
/len { sequence length } bind def

/coor [
[60.94360352 128.29133606]
[56.25981140 120.31249237]
[53.18585205 111.58606720]
[38.24188995 112.88143921]
[23.29792786 114.17681122]
[8.35396576 115.47218323]
[-6.58999634 116.76755524]
[-14.64693546 129.89736938]
[-28.72566795 135.69760132]
[-43.34725952 132.13768005]
[-52.95392609 120.78647614]
[-67.89788818 122.08184814]
[-82.84185028 123.37722015]
[-97.78581238 124.67259216]
[-112.72977448 125.96796417]
[-127.64225006 127.58604431]
[-142.51626587 129.52607727]
[-157.39027405 131.46611023]
[-172.26428223 133.40614319]
[-177.73069763 137.11000061]
[-183.39697266 137.45014954]
[-187.59416199 135.18135071]
[-202.51789856 136.69194031]
[-217.44165039 138.20252991]
[-232.36538696 139.71311951]
[-247.28913879 141.22370911]
[-260.23995972 150.31143188]
[-273.68173218 143.89517212]
[-288.60546875 145.40576172]
[-303.52920532 146.91635132]
[-318.45294189 148.42694092]
[-326.67077637 152.40283203]
[-333.60241699 149.85017395]
[-348.54635620 151.14553833]
[-363.49032593 152.44091797]
[-378.43429565 153.73628235]
[-393.37826538 155.03166199]
[-408.05197144 158.14329529]
[-422.23553467 163.02453613]
[-436.41909790 167.90579224]
[-450.60266113 172.78704834]
[-463.61209106 183.65859985]
[-477.66015625 174.16712952]
[-472.42849731 158.04055786]
[-455.48388672 158.60348511]
[-441.30032349 153.72222900]
[-427.11679077 148.84097290]
[-412.93322754 143.95973206]
[-427.74667358 141.60144043]
[-441.02157593 134.61740112]
[-451.35580444 123.74524689]
[-457.65783691 110.13333130]
[-459.26205444 95.21936035]
[-455.99902344 80.57857513]
[-448.21334839 67.75736237]
[-436.72741699 58.10992050]
[-422.75436401 52.65522385]
[-407.77005005 51.96940994]
[-393.35714722 56.12491608]
[-381.03796387 64.68283081]
[-372.11367798 76.73925018]
[-367.52691650 91.02075195]
[-367.76208496 106.01891327]
[-372.79437256 120.14958954]
[-382.09228516 131.92027283]
[-394.67361450 140.08769226]
[-379.72967529 138.79232788]
[-364.78570557 137.49694824]
[-349.84173584 136.20158386]
[-334.89776611 134.90620422]
[-319.96353149 133.50318909]
[-305.03979492 131.99259949]
[-290.11605835 130.48202515]
[-275.19229126 128.97143555]
[-263.30892944 119.99175262]
[-248.79971313 126.29996490]
[-233.87597656 124.78937531]
[-218.95223999 123.27878571]
[-204.02848816 121.76820374]
[-189.10475159 120.25761414]
[-174.20431519 118.53212738]
[-159.33030701 116.59209442]
[-144.45629883 114.65206146]
[-129.58227539 112.71202850]
[-127.15604401 110.16034698]
[-123.37541199 108.65454865]
[-118.74425507 108.81748962]
[-114.02514648 111.02400208]
[-99.08118439 109.72863007]
[-84.13722229 108.43325806]
[-69.19326019 107.13788605]
[-54.24929810 105.84251404]
[-46.73913574 93.00758362]
[-32.94818878 86.98480988]
[-18.08139610 90.27598572]
[-7.88536882 101.82359314]
[7.05859375 100.52822113]
[22.00255585 99.23284912]
[36.94651794 97.93747711]
[51.89048004 96.64210510]
[54.19742203 84.90280914]
[59.32311630 74.09262085]
[66.95212555 64.87680054]
[76.61494446 57.82251358]
[87.71690369 53.36388779]
[99.57479095 51.77531052]
[111.45884705 53.15454865]
[122.63770294 57.41672134]
[132.42341614 64.29953003]
[144.11227417 54.89897156]
[155.80114746 45.49841690]
[161.70603943 30.82044792]
[176.47285461 28.87357140]
[188.16172791 19.47301674]
[199.85058594 10.07246208]
[211.53944397 0.67190760]
[223.22831726 -8.72864723]
[234.91717529 -18.12920189]
[236.76510620 -33.59603500]
[248.75318909 -42.96302414]
[263.48706055 -41.10599899]
[275.17593384 -50.50655365]
[279.89880371 -58.31902695]
[287.10165405 -59.95689392]
[298.92474365 -69.18802643]
[305.04055786 -83.77938080]
[319.83389282 -85.51325989]
[331.65701294 -94.74440002]
[343.48013306 -103.97553253]
[355.30325317 -113.20667267]
[361.41906738 -127.79801941]
[376.21240234 -129.53190613]
[388.03552246 -138.76303101]
[399.85864258 -147.99417114]
[411.68176270 -157.22531128]
[423.50485229 -166.45645142]
[422.83374023 -181.95899963]
[431.43099976 -194.87669373]
[445.99081421 -200.24240112]
[460.91467285 -195.99290466]
[470.46401978 -183.76223755]
[470.96694946 -168.25331116]
[462.23007202 -155.42964172]
[447.61288452 -150.22218323]
[432.73599243 -154.63333130]
[420.91287231 -145.40219116]
[409.08975220 -136.17105103]
[397.26666260 -126.93991852]
[385.44354248 -117.70877838]
[380.17340088 -103.77770233]
[364.53439331 -101.38355255]
[352.71127319 -92.15241241]
[340.88815308 -82.92127991]
[329.06503296 -73.69013977]
[323.79489136 -59.75906372]
[308.15588379 -57.36491013]
[296.33276367 -48.13377380]
[284.57647705 -38.81768799]
[272.88760376 -29.41713333]
[271.54122925 -14.62785339]
[259.82095337 -4.92784166]
[244.31773376 -6.44033623]
[232.62887573 2.96021843]
[220.94000244 12.36077309]
[209.25114441 21.76132774]
[197.56227112 31.16188240]
[185.87341309 40.56243515]
[180.80458069 54.56801605]
[165.20169067 57.18728256]
[153.51283264 66.58783722]
[141.82395935 75.98838806]
[148.10142517 103.47195435]
[137.94207764 129.76910400]
[148.15975952 140.75086975]
[158.37742615 151.73263550]
[168.59509277 162.71440125]
[178.81277466 173.69616699]
[189.03044128 184.67793274]
[199.24812317 195.65969849]
[209.46578979 206.64146423]
[219.68345642 217.62322998]
[229.97999573 228.53108215]
[240.35485840 239.36447144]
[255.48793030 243.97973633]
[258.70275879 258.52325439]
[269.07763672 269.35665894]
[279.45251465 280.19003296]
[294.80865479 277.96112061]
[308.52645874 285.21377563]
[315.33117676 299.15924072]
[312.60620117 314.43518066]
[301.39938354 325.16766357]
[286.01992798 327.22988892]
[272.38162231 319.82882690]
[265.72860718 305.81036377]
[268.61911011 290.56491089]
[258.24426270 279.73150635]
[247.86938477 268.89813232]
[233.47839355 265.05773926]
[229.52148438 249.73933411]
[219.14662170 238.90594482]
[212.25364685 236.25065613]
[208.70170593 227.84089661]
[198.48402405 216.85913086]
[188.26635742 205.87736511]
[178.04867554 194.89559937]
[167.83100891 183.91383362]
[157.61332703 172.93208313]
[147.39566040 161.95031738]
[137.17799377 150.96855164]
[126.96031952 139.98678589]
[118.82830811 144.39927673]
[110.00333405 147.17768860]
[100.81018829 148.21975708]
[91.58723450 147.48712158]
[82.67389679 145.00674438]
[74.39823914 140.86993408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 100]
[4 99]
[5 98]
[6 97]
[7 96]
[11 92]
[12 91]
[13 90]
[14 89]
[15 88]
[16 84]
[17 83]
[18 82]
[19 81]
[22 80]
[23 79]
[24 78]
[25 77]
[26 76]
[28 74]
[29 73]
[30 72]
[31 71]
[33 70]
[34 69]
[35 68]
[36 67]
[37 66]
[38 48]
[39 47]
[40 46]
[41 45]
[109 171]
[110 170]
[111 169]
[113 167]
[114 166]
[115 165]
[116 164]
[117 163]
[118 162]
[121 159]
[122 158]
[124 157]
[125 156]
[127 154]
[128 153]
[129 152]
[130 151]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[173 211]
[174 210]
[175 209]
[176 208]
[177 207]
[178 206]
[179 205]
[180 204]
[181 203]
[182 201]
[183 200]
[185 198]
[186 197]
[187 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
