%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCGCCCGCUUUUCUCUCGGGUGAUCCGGCCGAGUGGCCCUGGGUUAGCAGCUGCUGCAUUUCCCCGGCUGGCUGCGGUCACUGGUGGCAGUGCUCAGGCGCCCGCCGCCCUUGACCUUCGGCCCCGCGAGCUCUAACCCUACAGCGCAGGAAGAUCGGCCGCCGCGGCCAGGCUCUG\
) } def
/len { sequence length } bind def

/coor [
[3.97722721 525.44927979]
[-2.88919592 528.79315186]
[-10.37611103 530.15832520]
[-17.92709351 529.45819092]
[-24.96916580 542.70239258]
[-32.01123810 555.94665527]
[-39.05331421 569.19085693]
[-46.09538651 582.43505859]
[-53.13745880 595.67926025]
[-45.50445557 609.08599854]
[-46.35420990 624.48992920]
[-55.41557693 636.97576904]
[-69.79710388 642.55926514]
[-84.90969086 639.45874023]
[-95.93097687 628.66363525]
[-99.34410858 613.61853027]
[-94.05995941 599.12432861]
[-81.76469421 589.80609131]
[-66.38167572 588.63720703]
[-59.33959961 575.39300537]
[-52.29752731 562.14874268]
[-45.25545502 548.90454102]
[-38.21337891 535.66033936]
[-31.17130661 522.41613770]
[-40.12591553 501.74768066]
[-30.85088539 480.92929077]
[-8.99131012 473.59500122]
[-3.61579061 459.59130859]
[1.63732004 445.54122925]
[6.76762199 431.44583130]
[11.89792442 417.35043335]
[17.02822685 403.25506592]
[22.15852928 389.15966797]
[18.17418098 372.08120728]
[32.34583282 360.34371948]
[37.22935486 346.16091919]
[42.11287689 331.97814941]
[46.99639893 317.79537964]
[51.87992096 303.61257935]
[56.76344299 289.42980957]
[54.56303787 283.76260376]
[55.66419220 277.04034424]
[60.46854019 271.21868896]
[61.51488495 256.25521851]
[62.56123352 241.29176331]
[63.60758209 226.32829285]
[64.65393066 211.36483765]
[65.70027161 196.40138245]
[66.74662018 181.43791199]
[64.06914520 174.52664185]
[67.94404602 166.22317505]
[69.25138855 151.28024292]
[70.55872345 136.33732605]
[71.86605835 121.39440918]
[65.52678680 107.79978943]
[53.23950195 99.19614410]
[40.95222092 90.59249878]
[28.66494179 81.98885345]
[14.03765392 87.16785431]
[-0.83061427 82.72778320]
[-10.22271061 70.37593842]
[-10.52718163 54.86184692]
[-1.62695265 42.15100479]
[13.05565643 37.13098145]
[27.87488365 41.73208618]
[37.13243103 54.18509293]
[37.26858902 69.70156860]
[49.55587006 78.30521393]
[61.84315109 86.90886688]
[74.13043213 95.51251221]
[84.07957458 82.17096710]
[98.73421478 78.48790741]
[103.11979675 64.14334106]
[107.50537109 49.79876709]
[111.89094543 35.45419693]
[116.27651978 21.10962486]
[111.71054840 3.28389287]
[124.97241974 -8.19092464]
[129.10697937 -22.60984993]
[133.24153137 -37.02877426]
[137.37609863 -51.44770050]
[141.51065063 -65.86662292]
[134.10684204 -79.57141876]
[138.50527954 -94.13536072]
[151.61633301 -101.10930634]
[155.75090027 -115.52822876]
[159.88545227 -129.94715881]
[164.02001953 -144.36608887]
[168.15457153 -158.78500366]
[172.28913879 -173.20393372]
[167.41275024 -190.94726562]
[180.47233582 -202.65177917]
[184.35462952 -217.14067078]
[188.23690796 -231.62956238]
[192.11920166 -246.11843872]
[187.35444641 -261.81015015]
[198.75749207 -273.59582520]
[214.59785461 -269.35140991]
[218.58032227 -253.44319153]
[206.60809326 -242.23616028]
[202.72579956 -227.74726868]
[198.84352112 -213.25839233]
[194.96122742 -198.76950073]
[200.73997498 -188.12254333]
[197.60345459 -176.00666809]
[186.70805359 -169.06936646]
[182.57350159 -154.65045166]
[178.43893433 -140.23152161]
[174.30438232 -125.81259918]
[170.16981506 -111.39366913]
[166.03526306 -96.97474670]
[173.45843506 -84.11270905]
[169.47080994 -69.43096924]
[155.92958069 -61.73206711]
[151.79502869 -47.31314087]
[147.66046143 -32.89421463]
[143.52590942 -18.47529030]
[139.39134216 -4.05636454]
[144.98338318 6.68982172]
[141.63589478 18.74911499]
[130.62109375 25.49519920]
[126.23551941 39.83977127]
[121.84993744 54.18434143]
[117.46436310 68.52891541]
[113.07878876 82.87348175]
[120.42911530 90.97521210]
[123.03143311 102.00066376]
[119.87121582 113.28416443]
[111.37555695 121.90995789]
[99.39525604 125.46428680]
[86.80897522 122.70174408]
[85.50164032 137.64466858]
[84.19430542 152.58758545]
[82.88697052 167.53050232]
[81.71008301 182.48426819]
[80.66373444 197.44772339]
[79.61738586 212.41119385]
[78.57104492 227.37464905]
[77.52469635 242.33810425]
[76.47834778 257.30157471]
[75.43199921 272.26501465]
[83.95909882 259.92449951]
[95.95398712 250.91769409]
[110.18309784 246.17085266]
[125.18309784 246.17214966]
[139.41137695 250.92146301]
[151.40469360 259.93035889]
[159.92965698 272.27236938]
[164.10952759 286.67822266]
[163.51448059 301.66641235]
[158.20568848 315.69555664]
[148.72911072 327.32287598]
[136.05932617 335.35260010]
[121.49930573 338.95898438]
[106.54641724 337.77108765]
[92.73841095 331.91113281]
[81.49533081 321.98175049]
[73.97340393 309.00405884]
[70.94622040 294.31332397]
[66.06269836 308.49612427]
[61.17917633 322.67889404]
[56.29565430 336.86166382]
[51.41213226 351.04446411]
[46.52861023 365.22723389]
[51.47452164 377.15927124]
[47.09442520 388.88305664]
[36.25391769 394.28997803]
[31.12361526 408.38534546]
[25.99331284 422.48074341]
[20.86301231 436.57614136]
[15.73270893 450.67153931]
[15.73536015 459.83462524]
[10.38791561 464.96682739]
[5.01239634 478.97052002]
[10.58355618 484.46719360]
[14.45421124 491.23825073]
[16.35067368 498.77566528]
[16.14676857 506.51831055]
[13.87211800 513.89385986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[27 174]
[28 173]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[40 159]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 70]
[56 69]
[57 68]
[58 67]
[72 125]
[73 124]
[74 123]
[75 122]
[76 121]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[85 111]
[86 110]
[87 109]
[88 108]
[89 107]
[90 106]
[92 103]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
