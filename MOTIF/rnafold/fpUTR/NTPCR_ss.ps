%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAAGGCGCAUGCGUGGUCUUGAGGGCGGUGCUUCCGGUCAAAGCACCGCUUGGGGGCGGGGCCUGCGACACGCGGUGGGCGGGUCCUGAGUCGCGACCCUGGUCCGGACCUGACCUGAAUUGCGACCCCAACCUGGACUGCUCCCCUGACCGCAACCCCUACCCCCGCCCACCAGU\
) } def
/len { sequence length } bind def

/coor [
[131.36280823 153.04742432]
[129.80351257 138.12869263]
[128.24421692 123.20995331]
[120.90631104 121.65911102]
[106.23049927 118.55741119]
[98.89259338 117.00656891]
[91.43019867 130.01858521]
[83.96781158 143.03060913]
[76.50542450 156.04263306]
[69.04302979 169.05465698]
[67.48088837 178.08253479]
[61.33652496 182.22613525]
[53.64942169 195.10668945]
[53.95338821 211.50302124]
[39.76803589 219.73149109]
[25.68603897 211.32736206]
[26.19374657 194.93608093]
[40.76887512 187.41958618]
[48.45597839 174.53903198]
[56.03100967 161.59226990]
[63.49340057 148.58024597]
[70.95578766 135.56822205]
[78.41818237 122.55619812]
[85.88056946 109.54417419]
[81.65310669 103.34912872]
[73.19818878 90.95904541]
[68.97072601 84.76399994]
[54.13367462 86.96897888]
[39.29662323 89.17395782]
[24.45957375 91.37894440]
[9.62252426 93.58392334]
[-5.21452570 95.78890228]
[-20.05157661 97.99388123]
[-34.88862610 100.19886780]
[-49.72567749 102.40384674]
[-64.56272888 104.60882568]
[-79.39978027 106.81380463]
[-87.42657471 120.23410797]
[-102.21871948 125.30625153]
[-116.79179382 119.63533020]
[-124.26485443 105.89897919]
[-121.10934448 90.58308411]
[-108.81519318 80.91933441]
[-93.18733215 81.47067261]
[-81.60475922 91.97676086]
[-66.76770782 89.77177429]
[-51.93065643 87.56679535]
[-37.09360886 85.36181641]
[-22.25655746 83.15683746]
[-7.41950703 80.95185089]
[7.41754341 78.74687195]
[22.25459290 76.54189301]
[37.09164429 74.33690643]
[51.92869568 72.13192749]
[66.76574707 69.92694855]
[80.14852905 63.15190887]
[90.70900726 52.49938202]
[101.26948547 41.84685898]
[111.82995605 31.19433212]
[122.39043427 20.54180527]
[126.61141205 5.29405355]
[141.06660461 1.70285285]
[151.62707520 -8.94967270]
[162.18756104 -19.60219955]
[172.74803162 -30.25472450]
[172.84913635 -45.83123016]
[183.71072388 -56.48397064]
[198.55990601 -56.29158783]
[209.12039185 -66.94411469]
[219.68086243 -77.59664154]
[230.24134827 -88.24916840]
[228.63400269 -101.63819122]
[234.94702148 -113.33351135]
[246.67346191 -119.16332245]
[259.42343140 -117.19586945]
[270.16720581 -127.66350555]
[274.65219116 -142.83569336]
[289.16754150 -146.17547607]
[299.91131592 -156.64311218]
[303.88861084 -164.89682007]
[310.93356323 -167.19717407]
[321.85739136 -177.47676086]
[332.78121948 -187.75634766]
[343.70504761 -198.03593445]
[354.62887573 -208.31552124]
[365.55270386 -218.59510803]
[369.67266846 -226.77854919]
[376.75646973 -228.95628357]
[387.85708618 -239.04472351]
[398.95767212 -249.13317871]
[409.70144653 -259.60079956]
[420.07543945 -270.43502808]
[424.02416992 -288.40805054]
[441.03277588 -292.68258667]
[451.21719360 -303.69522095]
[461.40158081 -314.70782471]
[471.58599854 -325.72045898]
[481.77038574 -336.73309326]
[491.95477295 -347.74572754]
[502.13919067 -358.75836182]
[497.70483398 -373.39678955]
[501.17007446 -388.19168091]
[511.50680542 -399.19250488]
[525.86596680 -403.51345825]
[540.36236572 -400.08993530]
[550.54675293 -411.10256958]
[560.73114014 -422.11517334]
[570.91552734 -433.12780762]
[568.76611328 -448.61697388]
[577.11950684 -461.83642578]
[592.03155518 -466.54440308]
[606.46124268 -460.51788330]
[613.59527588 -446.60244751]
[610.06518555 -431.36849976]
[597.53784180 -422.00909424]
[581.92816162 -422.94342041]
[571.74377441 -411.93078613]
[561.55938721 -400.91815186]
[551.37493896 -389.90551758]
[555.91912842 -375.72045898]
[552.73181152 -361.06793213]
[542.57104492 -349.90435791]
[528.09161377 -345.29528809]
[513.15179443 -348.57394409]
[502.96740723 -337.56130981]
[492.78302002 -326.54870605]
[482.59860229 -315.53607178]
[472.41421509 -304.52343750]
[462.22982788 -293.51080322]
[452.04541016 -282.49816895]
[452.19970703 -270.38571167]
[443.78149414 -261.12564087]
[430.90966797 -260.06100464]
[420.53564453 -249.22680664]
[420.47625732 -246.39857483]
[419.27764893 -243.42414856]
[416.87872314 -240.74322510]
[413.38046265 -238.80935669]
[409.04611206 -238.03257751]
[397.94552612 -227.94412231]
[386.84490967 -217.85568237]
[375.83230591 -207.67127991]
[364.90847778 -197.39169312]
[353.98464966 -187.11210632]
[343.06079102 -176.83251953]
[332.13696289 -166.55293274]
[321.21313477 -156.27334595]
[310.37893677 -145.89933777]
[299.63516235 -135.43170166]
[295.91864014 -121.00822449]
[280.63485718 -116.91973114]
[269.89108276 -106.45209503]
[270.39855957 -89.65410614]
[258.37258911 -77.43685913]
[240.89387512 -77.68869019]
[230.33338928 -67.03616333]
[219.77291870 -56.38363647]
[209.21243286 -45.73110962]
[209.53367615 -30.88414383]
[198.97560120 -19.93052864]
[183.40055847 -19.69424820]
[172.84008789 -9.04172134]
[162.27960205 1.61080456]
[151.71913147 12.26333046]
[148.25350952 26.74914360]
[133.04296875 31.10228348]
[122.48248291 41.75481033]
[111.92200470 52.40733719]
[101.36152649 63.05986023]
[90.80105591 73.71238708]
[128.58978271 74.86193848]
[143.16294861 121.65065765]
[144.72224426 136.56939697]
[146.28153992 151.48812866]
[159.34101868 160.08952332]
[163.76672363 175.08776855]
[157.46899414 189.40112305]
[143.42138672 196.27128601]
[128.25679016 192.45436096]
[119.13544464 179.75259399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[12 19]
[13 18]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[36 46]
[37 45]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[62 164]
[63 163]
[64 162]
[65 161]
[68 158]
[69 157]
[70 156]
[71 155]
[75 152]
[76 151]
[78 149]
[79 148]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[88 141]
[89 140]
[90 139]
[91 134]
[92 133]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
[105 119]
[106 118]
[107 117]
[108 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
