%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUGGCUCCGCGGCCCCGGCUUCCCCCGGCAGCUCAGCGACCAAUGGGCGCGCGAGCGGGGCCGCCCGCAGCUUCCCAGCCCGAGGCCCAGGCGCGCCCCUCUGCUCCGGCUCGGGGCGGGCACUGGCGGAGGGACUGGCCAGUCCCCUCCUCCGCGCCGGCCCCAACCCUGUCGCUGCCGCCGCGCUCCGAGUCCCCAUUCCCGAGCUGCCGCUGUUGUCGCUCGCUCAGCGUCUCCCUCUCGGCCGCCCUC\
UCCUCGGGACG\
) } def
/len { sequence length } bind def

/coor [
[342.64779663 387.85012817]
[331.76412964 377.52801514]
[320.88049316 367.20590210]
[306.32150269 364.06173706]
[301.63278198 348.95126343]
[290.74914551 338.62915039]
[279.86547852 328.30703735]
[267.17950439 330.44827271]
[255.39599609 324.81732178]
[248.90220642 313.26290894]
[250.25758362 299.88281250]
[239.49612427 289.43334961]
[228.73468018 278.98388672]
[217.97323608 268.53442383]
[207.21177673 258.08496094]
[196.45033264 247.63551331]
[185.54640198 251.24356079]
[174.11392212 250.14271545]
[165.93693542 262.71795654]
[157.75994873 275.29321289]
[149.58296204 287.86846924]
[153.10453796 303.27542114]
[144.62966919 316.61529541]
[129.18635559 319.97378540]
[115.93682861 311.35833740]
[112.74180603 295.88037109]
[121.49683380 282.72268677]
[137.00772095 279.69146729]
[145.18470764 267.11624146]
[153.36167908 254.54098511]
[161.53866577 241.96572876]
[157.61871338 236.54347229]
[155.08682251 230.30744934]
[154.10591125 223.60884094]
[154.75097656 216.82980347]
[157.00373840 210.36160278]
[160.75254822 204.58204651]
[152.42817688 192.10388184]
[144.10379028 179.62570190]
[135.77941895 167.14753723]
[127.45503235 154.66937256]
[119.13065338 142.19119263]
[110.80627441 129.71302795]
[95.51023865 132.35220337]
[80.28852844 127.34317017]
[68.85169983 115.41193390]
[64.21548462 99.02495575]
[67.91687012 81.88708496]
[53.81144714 76.78443909]
[39.70602417 71.68178558]
[25.60060120 66.57913208]
[16.50110245 66.60612488]
[11.35983086 61.33257294]
[-2.68457747 56.06431198]
[-11.78376389 55.98423386]
[-16.86263084 50.65055847]
[-30.84408188 45.21741486]
[-44.82553101 39.78427124]
[-58.80698395 34.35112762]
[-72.88214111 29.16558266]
[-87.04662323 24.22924995]
[-101.21111298 19.29291534]
[-115.37559509 14.35658360]
[-129.54008484 9.42024994]
[-143.73335266 4.56733322]
[-157.95494080 -0.20199876]
[-172.17652893 -4.97133112]
[-186.39811707 -9.74066353]
[-196.98199463 -0.94066173]
[-210.42378235 1.47015369]
[-223.20220947 -3.03134274]
[-232.02317810 -13.17157555]
[-234.66873169 -26.23831558]
[-248.83320618 -31.17464828]
[-262.99771118 -36.11098099]
[-277.16217041 -41.04731369]
[-291.32666016 -45.98364639]
[-304.66711426 -37.82479858]
[-320.12310791 -40.20092773]
[-330.39682007 -51.99010468]
[-330.63732910 -67.62583923]
[-320.73104858 -79.72541809]
[-305.35543823 -82.57578278]
[-291.77038574 -74.83108521]
[-286.39031982 -60.14813232]
[-272.22586060 -55.21179962]
[-258.06137085 -50.27546692]
[-243.89688110 -45.33913422]
[-229.73239136 -40.40279770]
[-216.54039001 -50.19873047]
[-199.94262695 -50.18878937]
[-186.49536133 -40.17835236]
[-181.62878418 -23.96224785]
[-167.40719604 -19.19291496]
[-153.18560791 -14.42358303]
[-138.96401978 -9.65425110]
[-131.64823914 -10.50414944]
[-124.60374451 -4.74423409]
[-110.43926239 0.19209884]
[-96.27478027 5.12843180]
[-82.11029053 10.06476498]
[-67.94580841 15.00109768]
[-64.65435791 13.82902527]
[-60.63639450 14.17236996]
[-56.60102081 16.35340500]
[-53.37384033 20.36967850]
[-39.39238739 25.80282211]
[-25.41093826 31.23596573]
[-11.42948818 36.66910934]
[2.58368421 42.01990509]
[16.62809372 47.28816605]
[30.70325279 52.47371292]
[44.80867386 57.57636261]
[58.91409683 62.67901230]
[73.01952362 67.78166199]
[86.05380249 60.35821533]
[88.86105347 45.62324524]
[91.66830444 30.88827705]
[94.47555542 16.15330696]
[97.28280640 1.41833746]
[92.26492310 -13.58604050]
[102.24742889 -24.64040184]
[105.05467987 -39.37537003]
[107.86193085 -54.11034012]
[101.27572632 -65.17421722]
[103.89443207 -77.37177277]
[113.78626251 -84.29716492]
[116.76669312 -98.99808502]
[119.74712372 -113.69900513]
[114.90612793 -128.76138306]
[125.01800537 -139.69752502]
[127.99843597 -154.39845276]
[130.97886658 -169.09936523]
[133.95928955 -183.80029297]
[136.93972778 -198.50120544]
[139.92015076 -213.20213318]
[142.81404114 -227.92033386]
[145.62129211 -242.65528870]
[148.42854309 -257.39025879]
[142.52375793 -272.68945312]
[153.03005981 -285.28112793]
[169.13945007 -282.21203613]
[174.27998352 -266.63937378]
[163.16351318 -254.58300781]
[160.35626221 -239.84803772]
[157.54901123 -225.11306763]
[159.37803650 -217.97882080]
[154.62106323 -210.22169495]
[151.64064026 -195.52078247]
[148.66021729 -180.81985474]
[145.67977905 -166.11894226]
[142.69935608 -151.41801453]
[139.71891785 -136.71710205]
[144.77310181 -122.70623016]
[134.44804382 -110.71857452]
[131.46762085 -96.01765442]
[128.48718262 -81.31673431]
[134.94580078 -64.98391724]
[122.59690094 -51.30308914]
[119.78964996 -36.56811905]
[116.98239136 -21.83314896]
[122.20107269 -7.88271475]
[112.01777649 4.22558975]
[109.21052551 18.96055984]
[106.40327454 33.69552994]
[103.59602356 48.43050003]
[100.78877258 63.16547012]
[112.33982086 66.07832336]
[122.12793732 72.43249512]
[129.18954468 81.41616821]
[132.89070129 91.96996307]
[132.98200989 102.91069794]
[129.60989380 113.06364441]
[123.28444672 121.38864899]
[131.60882568 133.86682129]
[139.93319702 146.34498596]
[148.25758362 158.82315063]
[156.58195496 171.30133057]
[164.90634155 183.77949524]
[173.23071289 196.25765991]
[195.41970825 198.20442200]
[209.35231018 215.25256348]
[206.89979553 236.87406921]
[217.66123962 247.32351685]
[228.42268372 257.77297974]
[239.18414307 268.22244263]
[249.94558716 278.67190552]
[260.70703125 289.12136841]
[278.20748901 288.55288696]
[290.45123291 300.59231567]
[290.18759155 317.42337036]
[301.07125854 327.74551392]
[311.95489502 338.06762695]
[327.29232788 341.95007324]
[331.20260620 356.32223511]
[342.08624268 366.64437866]
[352.96990967 376.96649170]
[364.81423950 373.09271240]
[377.11187744 374.59994507]
[387.54800415 381.14291382]
[394.18438721 391.43426514]
[395.81918335 403.49752808]
[392.20425415 415.04644775]
[402.84201050 425.62179565]
[413.47976685 436.19714355]
[424.11752319 446.77249146]
[434.75527954 457.34786987]
[445.39303589 467.92321777]
[456.45715332 478.05163574]
[467.92889404 487.71597290]
[483.46807861 490.68991089]
[488.21661377 504.80731201]
[499.68835449 514.47161865]
[511.16009521 524.13598633]
[522.63183594 533.80029297]
[536.97998047 525.31707764]
[553.34240723 522.27600098]
[569.72967529 525.02886963]
[584.15551758 533.22406006]
[594.87756348 545.85150146]
[600.60772705 561.36682129]
[600.66699219 577.88067627]
[595.06585693 593.38830566]
[606.76184082 602.78002930]
[618.45776367 612.17175293]
[630.15374756 621.56347656]
[646.19384766 621.25720215]
[656.32287598 633.69842529]
[652.77056885 649.34326172]
[638.26208496 656.19036865]
[623.92700195 648.98718262]
[620.76202393 633.25946045]
[609.06604004 623.86773682]
[597.37011719 614.47601318]
[585.67413330 605.08428955]
[574.56359863 612.63476562]
[561.76300049 616.76379395]
[548.30108643 617.12957764]
[535.26269531 613.69323730]
[523.70104980 606.72259521]
[514.55291748 596.77148438]
[508.56250000 584.63543701]
[506.22113037 571.28845215]
[507.72677612 557.80474854]
[512.96746826 545.27203369]
[501.49575806 535.60772705]
[490.02401733 525.94335938]
[478.55227661 516.27905273]
[463.83361816 513.99633789]
[458.26455688 499.18771362]
[446.79281616 489.52337646]
[448.41247559 504.43569946]
[440.15051270 516.95526123]
[425.80270386 521.33026123]
[411.96087646 515.55065918]
[404.98434448 502.27178955]
[408.07836914 487.59436035]
[419.82144165 478.26159668]
[434.81765747 478.56097412]
[424.17990112 467.98562622]
[413.54214478 457.41024780]
[402.90438843 446.83489990]
[392.26663208 436.25955200]
[381.62887573 425.68420410]
[364.31475830 429.29476929]
[348.16796875 421.69869995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[5 193]
[6 192]
[7 191]
[11 188]
[12 187]
[13 186]
[14 185]
[15 184]
[16 183]
[18 31]
[19 30]
[20 29]
[21 28]
[37 180]
[38 179]
[39 178]
[40 177]
[41 176]
[42 175]
[43 174]
[48 115]
[49 114]
[50 113]
[51 112]
[53 111]
[54 110]
[56 109]
[57 108]
[58 107]
[59 106]
[60 102]
[61 101]
[62 100]
[63 99]
[64 98]
[65 96]
[66 95]
[67 94]
[68 93]
[73 89]
[74 88]
[75 87]
[76 86]
[77 85]
[116 167]
[117 166]
[118 165]
[119 164]
[120 163]
[122 161]
[123 160]
[124 159]
[127 157]
[128 156]
[129 155]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[137 146]
[138 145]
[139 144]
[203 264]
[204 263]
[205 262]
[206 261]
[207 260]
[208 259]
[209 251]
[210 250]
[212 248]
[213 247]
[214 246]
[215 245]
[223 235]
[224 234]
[225 233]
[226 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
