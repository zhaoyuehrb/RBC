%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCUUGGAAGCCAGAGUAUCAAGAGCAGAGAAUCUCACUAGGAUUGCAUGGCUUAAAGGGACAGGCUCCCCAUUCCUCCAACCCCUCUAAGCUGCCCCCUCCAGGUCGUGAUCUCGUCUCCCUGUCCUGUAGGACCUCCCUCUCCUGAGGCCACCACUGGGCCCCCUUCUGAGUGUCCCCUGAGCACUCUCUCAGC\
) } def
/len { sequence length } bind def

/coor [
[258.44229126 402.91046143]
[251.01039124 389.88098145]
[243.57852173 376.85153198]
[236.14663696 363.82205200]
[228.71475220 350.79257202]
[214.32502747 347.12225342]
[206.60243225 334.01437378]
[210.54978943 318.94598389]
[203.11790466 305.91650391]
[195.68601990 292.88705444]
[181.29629517 289.21670532]
[173.57369995 276.10885620]
[177.52105713 261.04046631]
[170.08917236 248.01098633]
[162.65730286 234.98150635]
[148.26756287 231.31117249]
[140.54498291 218.20330811]
[144.49232483 203.13493347]
[137.06044006 190.10545349]
[129.17362976 189.69236755]
[122.01026154 186.14945984]
[116.77344513 179.98886108]
[114.37526703 172.16870117]
[115.27852631 163.94453430]
[119.40961456 156.66777039]
[112.81052399 143.19735718]
[106.21144104 129.72694397]
[99.61235046 116.25652313]
[88.83638763 111.82364655]
[83.79250336 101.31977844]
[87.07054138 90.13825989]
[80.68385315 76.56585693]
[74.29716492 62.99344635]
[62.44321823 57.89464569]
[57.40531158 46.45146179]
[61.38674164 35.02296829]
[55.21402740 21.35191917]
[49.04131317 7.68087006]
[36.31054306 -1.71264195]
[38.12488937 -16.49633026]
[31.95217133 -30.16737938]
[25.56282425 -36.70812607]
[25.79174805 -44.10198212]
[19.83452988 -57.86830139]
[13.87731171 -71.63462067]
[7.92009306 -85.40093994]
[1.96287465 -99.16725922]
[-5.09263420 -103.48182678]
[-8.32372665 -110.16415405]
[-7.49218512 -116.69055939]
[-15.72752762 -129.22767639]
[-23.96286964 -141.76478577]
[-32.19821167 -154.30189514]
[-40.43355560 -166.83900452]
[-48.66889572 -179.37611389]
[-56.90423965 -191.91322327]
[-65.13957977 -204.45033264]
[-80.35766602 -207.77412415]
[-88.53088379 -220.60585022]
[-85.26837158 -235.09349060]
[-93.50371552 -247.63059998]
[-101.73905945 -260.16772461]
[-109.97439575 -272.70483398]
[-125.35529327 -273.56176758]
[-137.14454651 -283.19851685]
[-140.95370483 -297.75717163]
[-135.52470398 -311.60144043]
[-143.76004028 -324.13854980]
[-151.99539185 -336.67565918]
[-160.23072815 -349.21276855]
[-174.55276489 -344.46496582]
[-189.61567688 -343.58673096]
[-204.39242554 -346.63790894]
[-217.87554932 -353.41052246]
[-229.14570618 -363.44274902]
[-237.43449402 -376.05062866]
[-242.17677307 -390.37451172]
[-243.04920959 -405.43774414]
[-239.99230957 -420.21331787]
[-233.21449280 -433.69381714]
[-223.17790222 -444.96011353]
[-210.56683350 -453.24401855]
[-196.24113464 -457.98077393]
[-181.17755127 -458.84738159]
[-166.40315247 -455.78479004]
[-152.92527771 -449.00177002]
[-141.66287231 -438.96081543]
[-133.38381958 -426.34655762]
[-128.65260315 -412.01904297]
[-127.79180145 -396.95510864]
[-130.86010742 -382.18191528]
[-137.64833069 -368.70666504]
[-147.69361877 -357.44812012]
[-139.45828247 -344.91101074]
[-131.22293091 -332.37390137]
[-122.98759460 -319.83679199]
[-108.12583160 -319.32104492]
[-96.27735901 -310.04324341]
[-92.11527252 -295.39639282]
[-97.43728638 -280.94015503]
[-89.20194244 -268.40304565]
[-80.96660614 -255.86593628]
[-72.73126221 -243.32882690]
[-58.13946533 -240.56927490]
[-49.60906219 -227.97218323]
[-52.60247040 -212.68566895]
[-44.36712646 -200.14855957]
[-36.13178635 -187.61145020]
[-27.89644432 -175.07434082]
[-19.66110229 -162.53723145]
[-11.42575932 -150.00012207]
[-3.19041705 -137.46301270]
[5.04492521 -124.92590332]
[5.25745153 -139.92439270]
[11.36265850 -153.62573242]
[22.37268829 -163.81294250]
[36.50605392 -168.83767700]
[51.47589111 -167.88691711]
[64.85999298 -161.11448669]
[74.49273682 -149.61621094]
[78.81548309 -135.25257874]
[77.12878418 -120.34771729]
[69.70556641 -107.31330872]
[57.74694061 -98.25839996]
[43.18788910 -94.64813232]
[28.38415146 -97.06666565]
[15.72919369 -105.12448120]
[21.68641281 -91.35816193]
[27.64363098 -77.59184265]
[33.60084915 -63.82551956]
[39.55806732 -50.05920029]
[45.62322235 -36.34009552]
[51.79593658 -22.66904449]
[64.08518982 -14.25337791]
[62.71236038 1.50815475]
[68.88507843 15.17920399]
[75.05779266 28.85025215]
[89.83921814 38.30239105]
[87.86956787 56.60675812]
[94.25625610 70.17916107]
[100.64294434 83.75157166]
[114.65869141 92.96099854]
[113.08276367 109.65744019]
[119.68185425 123.12785339]
[126.28094482 136.59826660]
[132.88003540 150.06867981]
[152.35089111 161.15158081]
[150.08992004 182.67356873]
[157.52178955 195.70304871]
[172.50115967 199.97583008]
[179.85252380 213.29544067]
[175.68676758 227.54963684]
[183.11865234 240.57910156]
[190.55052185 253.60858154]
[205.52987671 257.88134766]
[212.88125610 271.20095825]
[208.71549988 285.45516968]
[216.14738464 298.48464966]
[223.57925415 311.51409912]
[238.55860901 315.78689575]
[245.90998840 329.10650635]
[241.74423218 343.36068726]
[249.17611694 356.39016724]
[256.60800171 369.41964722]
[264.03985596 382.44909668]
[271.47174072 395.47857666]
[287.15771484 392.71130371]
[302.81683350 395.47625732]
[316.56011963 403.42126465]
[326.73605347 415.57034302]
[332.12908936 430.44366455]
[332.10476685 446.23770142]
[326.68444824 461.04397583]
[316.54034424 473.07962036]
[324.17596436 485.99075317]
[331.81158447 498.90188599]
[339.44720459 511.81301880]
[347.08282471 524.72412109]
[354.71844482 537.63525391]
[370.17456055 540.01062012]
[380.44888306 551.79925537]
[380.69015503 567.43499756]
[370.78451538 579.53509521]
[355.40902710 582.38623047]
[341.82357788 574.64221191]
[336.44281006 559.95953369]
[341.80731201 545.27087402]
[334.17169189 532.35974121]
[326.53607178 519.44860840]
[318.90045166 506.53750610]
[311.26483154 493.62637329]
[303.62921143 480.71524048]
[289.79489136 483.74047852]
[275.68133545 482.34188843]
[262.67050171 476.64309692]
[252.04054260 467.18945312]
[244.84011841 454.89584351]
[241.78509521 440.95822144]
[243.18724060 426.73721313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 162]
[8 159]
[9 158]
[10 157]
[13 154]
[14 153]
[15 152]
[18 149]
[19 148]
[25 146]
[26 145]
[27 144]
[28 143]
[31 141]
[32 140]
[33 139]
[36 137]
[37 136]
[38 135]
[40 133]
[41 132]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[50 113]
[51 112]
[52 111]
[53 110]
[54 109]
[55 108]
[56 107]
[57 106]
[60 103]
[61 102]
[62 101]
[63 100]
[67 96]
[68 95]
[69 94]
[70 93]
[174 192]
[175 191]
[176 190]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
