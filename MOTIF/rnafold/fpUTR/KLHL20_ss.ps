%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGCCGGUGAAGGGAAAGGAAAUAGCUCUACGAGCGGCAUCCUGCCUGCGUUAGCGGCGGUGGAGGAGGAGGCAGAGAGGAGUGGAGGGCGGAGUAGACGGAGGAGGCUGCUGCAGAGAAGAAAGUGUCAGAGCCGGUUCGGCUUUAGAGUGUGGUGAAGGGUACUUUUCAUGGUGC\
) } def
/len { sequence length } bind def

/coor [
[77.12692261 111.15594482]
[74.68753815 97.37086487]
[79.90792084 84.38138580]
[71.30426788 72.09410095]
[62.70062637 59.80682373]
[54.09697723 47.51954269]
[45.49333191 35.23226166]
[36.88968658 22.94498062]
[28.28603935 10.65770054]
[19.68239212 -1.62958062]
[7.23174572 -0.19784886]
[-4.57412910 -4.18321466]
[-13.50541210 -12.76795769]
[-17.90298462 -24.27192497]
[-16.98643112 -36.48112488]
[-10.99180222 -47.07377625]
[-19.16138840 -59.65383530]
[-32.95941925 -55.30021667]
[-47.40230942 -54.67465210]
[-61.50139236 -57.81365585]
[-74.29316711 -64.49626160]
[-84.90515900 -74.25956726]
[-92.61539459 -86.43077850]
[-96.90155029 -100.17360687]
[-97.47632599 -114.54568481]
[-94.30667114 -128.56321716]
[-87.61565399 -141.26829529]
[-77.86673737 -151.79440308]
[-85.81552887 -164.51512146]
[-93.76432037 -177.23585510]
[-101.71310425 -189.95657349]
[-105.67663574 -191.88053894]
[-108.52051544 -194.69233704]
[-110.10243225 -197.92527771]
[-110.44828033 -201.11476135]
[-109.73659515 -203.85366821]
[-116.77867126 -217.09788513]
[-123.82074738 -230.34208679]
[-130.86282349 -243.58630371]
[-137.90489197 -256.83053589]
[-144.94696045 -270.07473755]
[-158.25738525 -278.62713623]
[-157.40084839 -293.49707031]
[-164.44291687 -306.74130249]
[-171.48500061 -319.98550415]
[-178.29627991 -326.11486816]
[-178.53210449 -333.52288818]
[-185.34196472 -346.88796997]
[-192.15182495 -360.25308228]
[-205.31095886 -369.03646851]
[-204.19502258 -383.88922119]
[-211.00488281 -397.25430298]
[-217.81474304 -410.61941528]
[-224.62460327 -423.98449707]
[-237.78373718 -432.76788330]
[-236.66781616 -447.62063599]
[-243.47766113 -460.98571777]
[-258.23910522 -465.95938110]
[-264.95489502 -479.61050415]
[-260.12228394 -493.65264893]
[-266.93215942 -507.01773071]
[-281.41534424 -502.92831421]
[-296.41806030 -501.74328613]
[-311.36367798 -503.50823975]
[-325.67770386 -508.15530396]
[-338.80993652 -515.50585938]
[-350.25561523 -525.27740479]
[-359.57476807 -537.09429932]
[-366.40927124 -550.50238037]
[-370.49633789 -564.98620605]
[-371.67892456 -579.98913574]
[-369.91156006 -594.93444824]
[-365.26220703 -609.24774170]
[-357.90951538 -622.37872314]
[-348.13613892 -633.82287598]
[-336.31771851 -643.14013672]
[-322.90853882 -649.97241211]
[-308.42404175 -654.05718994]
[-293.42092896 -655.23730469]
[-278.47589111 -653.46752930]
[-264.16339111 -648.81585693]
[-251.03352356 -641.46105957]
[-239.59101868 -631.68579102]
[-230.27566528 -619.86590576]
[-223.44552612 -606.45562744]
[-219.36312866 -591.97045898]
[-218.18539429 -576.96716309]
[-219.95759583 -562.02239990]
[-224.61160278 -547.71063232]
[-231.96855164 -534.58197021]
[-241.74563599 -523.14105225]
[-253.56704712 -513.82757568]
[-246.75720215 -500.46249390]
[-232.55633545 -496.11837769]
[-225.45977783 -482.66128540]
[-230.11256409 -467.79559326]
[-223.30270386 -454.43048096]
[-210.63066101 -446.60305786]
[-211.25950623 -430.79437256]
[-204.44964600 -417.42926025]
[-197.63978577 -404.06414795]
[-190.82992554 -390.69906616]
[-178.15788269 -382.87164307]
[-178.78672791 -367.06292725]
[-171.97686768 -353.69784546]
[-165.16700745 -340.33273315]
[-158.24078369 -327.02758789]
[-151.19869995 -313.78335571]
[-144.15663147 -300.53915405]
[-131.34991455 -292.93408203]
[-131.70275879 -277.11682129]
[-124.66067505 -263.87258911]
[-117.61860657 -250.62838745]
[-110.57653046 -237.38417053]
[-103.53445435 -224.13995361]
[-96.49238586 -210.89573669]
[-88.99238586 -197.90536499]
[-81.04359436 -185.18463135]
[-73.09480286 -172.46391296]
[-65.14601898 -159.74319458]
[-50.17787170 -164.07917786]
[-34.57992172 -164.03028870]
[-19.61142731 -159.59233093]
[-6.48312998 -151.11575317]
[3.74068499 -139.27803040]
[10.22846127 -125.02947998]
[12.44900894 -109.51702881]
[10.21498013 -93.99185944]
[3.69865274 -79.70848846]
[-6.58132887 -67.82341766]
[1.58825660 -55.24336243]
[19.22584152 -55.15383911]
[33.41657639 -44.41724014]
[38.38554001 -27.16704369]
[31.96967316 -10.23322678]
[40.57331848 2.05405354]
[49.17696762 14.34133434]
[57.78061295 26.62861443]
[66.38426208 38.91589737]
[74.98790741 51.20317459]
[83.59155273 63.49045563]
[92.19519806 75.77774048]
[110.63955688 76.88219452]
[123.47503662 90.17372131]
[123.93511963 108.64539337]
[135.91465759 117.67261505]
[147.89419556 126.69984436]
[159.87371826 135.72706604]
[171.85325623 144.75428772]
[186.65237427 140.08892822]
[201.35662842 145.04519653]
[210.31193542 157.71730042]
[210.07478333 173.23255920]
[200.73637390 185.62504578]
[185.88751221 190.12959290]
[171.23788452 185.01411438]
[162.42057800 172.24560547]
[162.82603455 156.73382568]
[150.84649658 147.70660400]
[138.86695862 138.67938232]
[126.88742828 129.65214539]
[114.90789795 120.62492371]
[114.59673309 120.84629822]
[114.28228760 121.06298065]
[118.66786194 135.40754700]
[123.05343628 149.75212097]
[127.43901825 164.09669495]
[131.82458496 178.44126892]
[145.89485168 185.63870239]
[150.67512512 200.70272827]
[143.32933044 214.69610596]
[128.21560669 219.31683350]
[114.30066681 211.82350159]
[109.83998871 196.66177368]
[117.48001862 182.82684326]
[113.09444427 168.48226929]
[108.70886993 154.13769531]
[104.32329559 139.79312134]
[99.93771362 125.44855499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 142]
[4 141]
[5 140]
[6 139]
[7 138]
[8 137]
[9 136]
[10 135]
[16 131]
[17 130]
[28 120]
[29 119]
[30 118]
[31 117]
[36 116]
[37 115]
[38 114]
[39 113]
[40 112]
[41 111]
[43 109]
[44 108]
[45 107]
[47 106]
[48 105]
[49 104]
[51 102]
[52 101]
[53 100]
[54 99]
[56 97]
[57 96]
[60 93]
[61 92]
[145 162]
[146 161]
[147 160]
[148 159]
[149 158]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
