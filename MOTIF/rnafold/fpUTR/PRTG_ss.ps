%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUCGCGAGCGGCCGUCCGAGCACCAGCCUCGCCGCCGCAGAGACGCUCGCCACGCCGGUGCCGGAGCCGGAGCGGGGAGCCAGGCUGCGUGCGACCAGCCGCAGAGCAGAGAGCGCCCGGGGCGGGGGCCGCAGACGGACAGGGGCUCUGGGCGGCCGGGGAGCAUGCCCGCGCGGCUACGCUGA\
) } def
/len { sequence length } bind def

/coor [
[61.84675980 706.81713867]
[46.50695801 706.05157471]
[33.61380386 697.70520020]
[26.63549042 684.02313232]
[27.44914818 668.68579102]
[35.83590698 655.81890869]
[49.53976822 648.88348389]
[50.28745651 633.90216064]
[51.03514481 618.92077637]
[43.51035309 611.97357178]
[41.00905228 601.81585693]
[44.59492111 591.75476074]
[53.30815125 585.20434570]
[54.55337906 570.25610352]
[55.79860687 555.30792236]
[57.04383850 540.35968018]
[58.28906631 525.41143799]
[59.53429413 510.46322632]
[52.88026047 497.13757324]
[61.73647690 484.02734375]
[62.98170853 469.07913208]
[56.32767105 455.75347900]
[65.18389130 442.64324951]
[66.42911530 427.69503784]
[67.67434692 412.74679565]
[55.36020279 404.36660767]
[48.85076141 390.85800171]
[49.98443604 375.80538940]
[58.55661774 363.25888062]
[72.34782410 356.64450073]
[73.59305573 341.69628906]
[74.83828735 326.74807739]
[76.08351135 311.79983521]
[77.32874298 296.85162354]
[78.44969177 281.89355469]
[79.44628906 266.92669678]
[80.44288635 251.95985413]
[81.43948364 236.99299622]
[82.43608093 222.02613831]
[79.73832703 215.13011169]
[83.57566071 206.81944275]
[84.82089233 191.87121582]
[86.06612396 176.92298889]
[87.31134796 161.97477722]
[88.55657959 147.02655029]
[64.18370056 132.55212402]
[52.09713745 106.91113281]
[56.44301224 78.89936066]
[44.12008667 70.34684753]
[31.79715919 61.79433441]
[19.47423172 53.24182510]
[3.72543955 51.72982788]
[-2.31882000 38.11673737]
[-14.64174747 29.56422615]
[-29.22903824 34.51570129]
[-43.76494217 29.98128891]
[-52.73744965 17.89997673]
[-52.87386703 3.02989316]
[-65.19679260 -5.52261877]
[-77.51972198 -14.07513046]
[-89.84265137 -22.62764359]
[-102.16557312 -31.18015480]
[-117.67172241 -28.12482643]
[-130.74993896 -36.99814224]
[-133.64115906 -52.53572464]
[-124.63006592 -65.51939392]
[-109.06278229 -68.24617767]
[-96.17510986 -59.09832001]
[-93.61306000 -43.50308228]
[-81.29013824 -34.95056915]
[-68.96720886 -26.39805794]
[-56.64427948 -17.84554672]
[-44.32135391 -9.29303455]
[-30.34307671 -14.36706257]
[-15.88634396 -10.18772125]
[-6.55350494 1.84355080]
[-6.08923531 17.24129868]
[6.23369217 25.79380989]
[21.10106468 26.69407463]
[28.02674294 40.91889572]
[40.34967041 49.47140884]
[52.67259598 58.02392197]
[64.99552155 66.57643127]
[70.40356445 61.70510101]
[76.48095703 57.69984818]
[83.09026337 54.65125275]
[90.08199310 52.62826538]
[97.29802704 51.67663574]
[98.79154205 36.75117493]
[100.28506470 21.82571411]
[101.77857971 6.90025139]
[103.27209473 -8.02521038]
[101.00983429 -16.89507103]
[104.91649628 -23.18561935]
[106.65789032 -38.08419418]
[97.87535095 -51.50978851]
[103.03273010 -66.70127106]
[118.17372131 -72.00502777]
[131.68345642 -63.35247803]
[133.19842529 -47.38111496]
[121.55646515 -36.34280014]
[119.81507111 -21.44422531]
[118.19755554 -6.53169250]
[116.70404053 8.39376926]
[115.21052551 23.31923103]
[113.71700287 38.24469376]
[112.22348785 53.17015457]
[116.93079376 54.65910721]
[121.46191406 56.61988449]
[130.11654663 44.36846161]
[128.82437134 28.37753296]
[140.61907959 17.50258446]
[156.45277405 20.08594894]
[164.17919922 34.14588928]
[157.87130737 48.89682388]
[142.36796570 53.02309418]
[133.71333313 65.27452087]
[136.70425415 68.45247650]
[139.39674377 71.88693237]
[141.76893616 75.54995728]
[155.73204041 70.06983948]
[169.69514465 64.58972931]
[176.38745117 48.43684006]
[192.37335205 42.23486328]
[207.59690857 49.36195374]
[221.46699524 43.65050888]
[235.33708191 37.93906403]
[249.20716858 32.22761917]
[261.55096436 20.60577965]
[276.13571167 29.24992371]
[271.86685181 45.65763855]
[254.91862488 46.09770966]
[241.04852295 51.80915451]
[227.17843628 57.52059937]
[213.30834961 63.23204422]
[210.06025696 75.71253967]
[200.06391907 84.16510773]
[186.82926941 85.32809448]
[175.17526245 78.55283356]
[161.21215820 84.03294373]
[147.24903870 89.51306152]
[148.39849854 99.81517792]
[147.32775879 110.12576294]
[144.08596802 119.97185516]
[138.82183838 128.90177917]
[131.77682495 136.50590515]
[123.27413177 142.43539429]
[113.70378113 146.41825867]
[103.50480652 148.27177429]
[102.25957489 163.22000122]
[101.01434326 178.16822815]
[99.76911926 193.11645508]
[98.52388763 208.06466675]
[97.40293884 223.02273560]
[96.40634155 237.98959351]
[95.40974426 252.95645142]
[94.41314697 267.92330933]
[93.41654968 282.89016724]
[95.97238159 291.67993164]
[92.27696991 298.09683228]
[91.03173828 313.04507446]
[89.78650665 327.99328613]
[88.54128265 342.94152832]
[87.29605103 357.88973999]
[99.80277252 366.69479370]
[106.18089294 380.48669434]
[104.80838013 395.51940918]
[96.15354919 407.76483154]
[82.62257385 413.99203491]
[81.37734222 428.94024658]
[80.13211060 443.88848877]
[86.69708252 458.28332520]
[77.92993164 470.32437134]
[76.68470001 485.27258301]
[83.24967194 499.66741943]
[74.48252106 511.70846558]
[73.23728943 526.65667725]
[71.99205780 541.60491943]
[70.74683380 556.55316162]
[69.50160217 571.50134277]
[68.25637054 586.44958496]
[77.67681122 604.25744629]
[66.01650238 619.66845703]
[65.26881409 634.64984131]
[64.52112579 649.63116455]
[77.46634674 657.89660645]
[84.53029633 671.53460693]
[83.81280518 686.87677002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 185]
[8 184]
[9 183]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[20 174]
[21 173]
[23 171]
[24 170]
[25 169]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[48 83]
[49 82]
[50 81]
[51 80]
[53 78]
[54 77]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[94 102]
[95 101]
[109 117]
[110 116]
[120 141]
[121 140]
[122 139]
[125 135]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
