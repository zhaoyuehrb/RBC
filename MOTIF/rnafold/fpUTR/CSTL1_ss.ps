%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGGAUCCUGCAAGCAGAAAUCUGUGGUGGGCGGGCGGCAGGUGAGCAAGGAGAACGUGUCUGUAAAGGAAGCACAGGGAACAGGUGGUGGCUUUGUAAGACAGUUGGAACCCAAGGAAGGCAGGCCAUCCCCCAGGAAAGCCUAUGUUGGUGAGGGUUAUGAUGGGAGAAUGAGUGAACUGCAGCCUGGCACCACCACACCCUGGAAGGUGCAGUUGGGAAGAAAGUUUCUGAGGCUGUAGAC\
) } def
/len { sequence length } bind def

/coor [
[239.45542908 512.27325439]
[232.14901733 499.17297363]
[224.84259033 486.07275391]
[217.53617859 472.97250366]
[202.56649780 473.92578125]
[196.98083496 487.84701538]
[191.39515686 501.76821899]
[185.80949402 515.68945312]
[188.83013916 533.86523438]
[174.59114075 544.14001465]
[169.18298340 558.13116455]
[163.77482605 572.12225342]
[166.83567810 588.23327637]
[154.23864746 598.73309326]
[138.94247437 592.82049561]
[136.68254089 576.57781982]
[149.78369141 566.71411133]
[155.19184875 552.72296143]
[160.60000610 538.73187256]
[155.99589539 527.56182861]
[160.36842346 515.87060547]
[171.88827515 510.10379028]
[177.47393799 496.18255615]
[183.05961609 482.26135254]
[188.64527893 468.34011841]
[189.59855652 453.37045288]
[185.82388306 438.85314941]
[182.04920959 424.33584595]
[178.27452087 409.81857300]
[174.49984741 395.30126953]
[170.72515869 380.78399658]
[166.95048523 366.26669312]
[163.08355713 351.77368164]
[159.12454224 337.30557251]
[155.07359314 322.86294556]
[150.93087769 308.44635010]
[146.78817749 294.02978516]
[142.64546204 279.61318970]
[131.69407654 269.51782227]
[135.31909180 254.11750793]
[131.17637634 239.70092773]
[127.03366852 225.28433228]
[122.89096069 210.86775208]
[109.98588562 207.49856567]
[100.34930420 198.12170410]
[96.56850433 185.10574341]
[99.73191071 171.81489563]
[109.11853027 161.73956299]
[105.15951538 147.27145386]
[93.08307648 147.59506226]
[81.17816925 144.84846497]
[70.22132111 139.14048767]
[60.94462585 130.77525330]
[53.98696899 120.23659515]
[49.85025406 108.16036224]
[48.86369705 95.29615784]
[51.15867996 82.46085358]
[36.71603775 78.40991211]
[21.33908653 82.13279724]
[11.17428493 71.24582672]
[-3.26835489 67.19488525]
[-17.71099472 63.14393997]
[-32.22828674 59.36925888]
[-46.81494904 55.87221527]
[-61.40161133 52.37517548]
[-75.98827362 48.87813187]
[-87.05340576 59.62830734]
[-102.17849731 62.66726685]
[-116.53717041 57.02528763]
[-125.54763794 44.50270462]
[-126.33468628 29.09543228]
[-118.64717102 15.71987057]
[-104.93814850 8.64411449]
[-89.58212280 10.12601185]
[-77.47914886 19.69269562]
[-72.49122620 34.29146957]
[-57.90456772 37.78851318]
[-43.31790543 41.28555679]
[-28.73124504 44.78259659]
[-25.56634903 43.27955627]
[-21.52091599 43.22082901]
[-17.27533150 45.00164795]
[-13.66004944 48.70130157]
[0.78259021 52.75224686]
[15.22523022 56.80319214]
[29.56914902 52.79055405]
[40.76698303 63.96727371]
[55.20962524 68.01821899]
[65.50838470 57.11246109]
[60.63789749 42.92520523]
[55.76740265 28.73794556]
[50.89691162 14.55068684]
[46.02642059 0.36342829]
[41.15592575 -13.82383060]
[36.28543472 -28.01108932]
[31.41494370 -42.19834900]
[25.68196106 -49.27848053]
[26.57397461 -56.59712982]
[21.88431931 -70.84518433]
[8.71904469 -71.62198639]
[-3.37234640 -76.80715179]
[-12.96379471 -85.76557922]
[-18.93209076 -97.41859436]
[-20.58838654 -110.37374115]
[-17.75763893 -123.09120178]
[-10.79682732 -134.06680298]
[-0.55010074 -142.00994873]
[-4.87583590 -156.37268066]
[-9.20157051 -170.73541260]
[-13.52730560 -185.09814453]
[-23.88449478 -198.52069092]
[-13.85365391 -212.18885803]
[2.05716109 -206.33374023]
[0.83542424 -189.42387390]
[5.16115952 -175.06114197]
[9.48689461 -160.69841003]
[13.81262970 -146.33567810]
[30.59026718 -144.18093872]
[44.77816772 -134.86886597]
[53.48655701 -120.23804474]
[54.91634369 -103.21616364]
[48.73061752 -87.23419189]
[36.13237762 -75.53484344]
[40.82203293 -61.28678513]
[45.60220337 -47.06884003]
[50.47269440 -32.88158035]
[55.34318542 -18.69432259]
[60.21367645 -4.50706387]
[65.08416748 9.68019485]
[69.95465851 23.86745262]
[74.82515717 38.05471039]
[79.69564819 52.24197006]
[103.77246094 50.41968918]
[125.01207733 59.55735779]
[134.81530762 48.20409393]
[144.61854553 36.85083008]
[154.42178345 25.49756813]
[149.49119568 11.01873684]
[152.45028687 -3.88564157]
[162.40615845 -15.23231506]
[176.60975647 -20.04002571]
[191.21437073 -17.11244583]
[201.01760864 -28.46570969]
[210.82084656 -39.81897354]
[220.62406921 -51.17223740]
[230.42730713 -62.52550125]
[225.30302429 -77.00435638]
[228.12048340 -92.10262299]
[238.12178040 -103.75893402]
[252.61663818 -108.83779907]
[267.70599365 -105.97303772]
[279.33090210 -95.93524933]
[284.36428833 -81.42455292]
[281.45227051 -66.34424591]
[271.37808228 -54.75086212]
[256.85168457 -49.76296234]
[241.78057861 -52.72226715]
[231.97734070 -41.36900330]
[222.17410278 -30.01573944]
[212.37086487 -18.66247559]
[202.56762695 -7.30921221]
[207.59254456 6.71276760]
[204.90629578 21.46539879]
[195.13183594 32.96870804]
[180.81788635 38.06848907]
[165.77503967 35.30080414]
[155.97181702 46.65406418]
[146.16857910 58.00732803]
[136.36534119 69.36059570]
[142.40751648 78.48687744]
[146.20297241 88.75291443]
[147.55062866 99.61480713]
[146.37910461 110.49710846]
[142.75047302 120.82328033]
[136.85693359 130.04624939]
[129.01075745 137.67739868]
[119.62762451 143.31243896]
[123.58663940 157.78054810]
[139.49829102 163.55096436]
[148.73605347 177.53445435]
[147.81912231 194.10205078]
[137.30754089 206.72503662]
[141.45025635 221.14163208]
[145.59297180 235.55821228]
[149.73567200 249.97479248]
[160.98338318 261.10131836]
[157.06204224 275.47048950]
[161.20475769 289.88705444]
[165.34747314 304.30364990]
[169.49017334 318.72024536]
[174.85568237 326.08276367]
[173.59265137 333.34655762]
[177.55166626 347.81466675]
[182.82310486 355.24484253]
[181.46777344 362.49200439]
[185.24244690 377.00930786]
[189.01713562 391.52658081]
[192.79180908 406.04388428]
[196.56649780 420.56118774]
[200.34117126 435.07846069]
[204.11585999 449.59576416]
[218.71424866 451.14389038]
[230.63641357 465.66607666]
[237.94284058 478.76632690]
[245.24925232 491.86657715]
[252.55567932 504.96679688]
[265.40200806 503.93014526]
[277.64425659 507.80703735]
[287.48034668 515.98980713]
[293.47637939 527.23980713]
[294.77566528 539.87469482]
[291.22079468 552.01995850]
[283.37203979 561.88714600]
[290.34289551 575.16900635]
[297.31372070 588.45086670]
[304.28457642 601.73266602]
[311.25543213 615.01452637]
[318.22628784 628.29638672]
[325.19711304 641.57818604]
[340.98892212 651.07043457]
[339.57113647 668.57214355]
[346.71032715 681.76428223]
[353.84954834 694.95635986]
[360.98876953 708.14849854]
[368.12796021 721.34057617]
[382.37448120 729.46276855]
[382.19314575 745.86090088]
[367.77050781 753.66601562]
[353.94335938 744.84887695]
[354.93585205 728.47979736]
[347.79666138 715.28771973]
[340.65744019 702.09558105]
[333.51821899 688.90350342]
[326.37902832 675.71136475]
[314.89157104 671.96899414]
[308.83078003 661.05700684]
[311.91528320 648.54907227]
[304.94442749 635.26721191]
[297.97357178 621.98535156]
[291.00274658 608.70355225]
[284.03189087 595.42169189]
[277.06103516 582.13983154]
[270.09017944 568.85803223]
[252.85359192 568.78076172]
[237.96098328 559.92633057]
[229.57395935 544.66363525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 25]
[6 24]
[7 23]
[8 22]
[10 19]
[11 18]
[12 17]
[26 201]
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[33 193]
[34 192]
[35 190]
[36 189]
[37 188]
[38 187]
[40 185]
[41 184]
[42 183]
[43 182]
[48 178]
[49 177]
[57 88]
[58 87]
[60 85]
[61 84]
[62 83]
[63 79]
[64 78]
[65 77]
[66 76]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
[94 127]
[95 126]
[96 125]
[98 124]
[99 123]
[107 117]
[108 116]
[109 115]
[110 114]
[134 169]
[135 168]
[136 167]
[137 166]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[213 243]
[214 242]
[215 241]
[216 240]
[217 239]
[218 238]
[219 237]
[221 234]
[222 233]
[223 232]
[224 231]
[225 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
