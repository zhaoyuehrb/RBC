%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGAGGCAGCGCGUGCAGUUAUAUACUUCUGCCCCCGGCUGAGACGCCGGUUCCGCGCUGGAAGUCUCCGGGGGAGUCGCUGUUGCUGAGGCUGUCGCCUGAGGUUUUUCGCGCUCCUCCCUUUCCUCCUCCUCUUUCUCCUCCUCCUUAUCCGAACCCCAGUCAGACCGAUCUGCUCUGCUCUCGGUGACCUUGCAACUUC\
) } def
/len { sequence length } bind def

/coor [
[135.36587524 178.54154968]
[135.81036377 164.71411133]
[138.67329407 151.17521667]
[143.86721802 138.34461975]
[131.23707581 130.25268555]
[118.60693359 122.16074371]
[105.97679138 114.06880188]
[90.98390198 113.60688019]
[77.87957001 120.90594482]
[64.77523041 128.20501709]
[51.67089462 135.50407410]
[38.56655884 142.80314636]
[25.46222305 150.10221863]
[12.35788822 157.40127563]
[11.72014713 180.94128418]
[-13.04604340 196.94145203]
[-23.32098389 207.86964417]
[-33.59592438 218.79785156]
[-43.87086487 229.72605896]
[-39.36394882 244.40881348]
[-42.81785965 259.37429810]
[-53.30351257 270.59689331]
[-68.00032043 275.05776978]
[-82.95491791 271.55697632]
[-94.14459229 261.03619385]
[-98.55937195 246.32546997]
[-95.01171112 231.38191223]
[-84.45590973 220.22528076]
[-69.73142242 215.85662842]
[-54.79906464 219.45111084]
[-44.52412796 208.52290344]
[-34.24918747 197.59471130]
[-23.97424507 186.66650391]
[-27.72424507 180.17131042]
[-35.22424698 167.18093872]
[-38.97424698 160.68574524]
[-53.57581711 164.11999512]
[-68.17738342 167.55426025]
[-82.77896118 170.98852539]
[-97.38053131 174.42277527]
[-105.48627472 187.99011230]
[-120.83165741 191.77095032]
[-134.31253052 183.52221680]
[-137.93092346 168.13772583]
[-129.54013062 154.74481201]
[-114.11823273 151.28927612]
[-100.81478882 159.82121277]
[-86.21321869 156.38694763]
[-71.61164856 152.95268250]
[-57.01007462 149.51843262]
[-42.40850449 146.08416748]
[-30.03704834 135.63584900]
[-15.73066616 132.53814697]
[-3.14944172 136.15881348]
[5.05882072 144.29695129]
[18.16315651 136.99787903]
[31.26749229 129.69880676]
[44.37182999 122.39974213]
[57.47616577 115.10067749]
[70.58049774 107.80161285]
[83.68483734 100.50254059]
[70.13658905 106.94033051]
[55.21393585 105.41904449]
[43.24349213 96.37976837]
[37.69593048 82.44332123]
[40.17969894 67.65039062]
[49.97465897 56.28998184]
[64.24089050 51.65590668]
[78.84208679 55.09174728]
[89.54483032 65.60132599]
[93.24605560 80.13509369]
[90.48981476 65.39049530]
[87.73356628 50.64589691]
[84.97732544 35.90130234]
[82.22108459 21.15670395]
[79.46484375 6.41210747]
[76.70859528 -8.33248901]
[72.05319214 -16.19820213]
[74.02527618 -23.32525444]
[71.49641418 -38.11054611]
[68.96755219 -52.89583969]
[52.37939835 -57.31822205]
[39.43300629 -68.50833130]
[32.69955444 -84.17987823]
[33.48833084 -101.16310883]
[41.59245300 -116.04588318]
[55.34016800 -125.85923004]
[52.35719681 -140.55963135]
[42.03006363 -152.54550171]
[47.08181763 -166.55723572]
[44.09884644 -181.25764465]
[41.11587143 -195.95805359]
[38.13290024 -210.65844727]
[26.87328148 -222.58125305]
[31.82752800 -238.21414185]
[47.89913177 -241.47535706]
[58.55500793 -229.01004028]
[52.83330154 -213.64143372]
[55.81627655 -198.94102478]
[58.79924774 -184.24061584]
[61.78222275 -169.54022217]
[71.89598846 -158.60581970]
[67.05760193 -143.54260254]
[70.04057312 -128.84220886]
[82.85591125 -126.68231964]
[94.20156097 -120.27874756]
[102.71540070 -110.37535095]
[107.36682892 -98.13761139]
[107.58150482 -85.01551056]
[103.31212616 -72.57173920]
[95.04669952 -62.29558182]
[83.75284576 -55.42469788]
[86.28170776 -40.63940811]
[88.81056213 -25.85411453]
[91.45319366 -11.08873177]
[94.20943451 3.65586472]
[96.96568298 18.40046120]
[99.72192383 33.14505768]
[102.47816467 47.88965607]
[105.23440552 62.63425064]
[107.99065399 77.37884521]
[112.64075470 63.11783218]
[122.05059052 51.43643188]
[136.00576782 45.93616104]
[150.85520935 48.05604172]
[162.71388245 57.24145889]
[168.47921753 71.08924103]
[166.64282227 85.97640228]
[157.68515015 98.00804138]
[143.94981384 104.03632355]
[129.03219604 102.48478699]
[114.06872559 101.43865967]
[126.69886780 109.53059387]
[139.32901001 117.62253571]
[151.95915222 125.71447754]
[163.29992676 114.03261566]
[176.79896545 104.93965149]
[191.87634277 98.82357788]
[207.88485718 95.94458771]
[224.13781738 96.42395782]
[239.93852234 100.23894501]
[254.61009216 107.22387695]
[267.52447510 117.07733917]
[278.12933350 129.37515259]
[285.97171021 143.58869934]
[290.71725464 159.10755920]
[292.16467285 175.26579285]
[290.25405884 191.37046814]
[285.06948853 206.73146057]
[298.05987549 214.23146057]
[311.05026245 221.73146057]
[320.05239868 223.31369019]
[324.18167114 229.44828796]
[337.05499268 237.14744568]
[349.92834473 244.84660339]
[362.80169678 252.54576111]
[375.04385376 246.20478821]
[388.71203613 246.73812866]
[400.23895264 253.89949036]
[406.66891479 265.72671509]
[406.41580200 279.07812500]
[419.16903687 286.97460938]
[431.92230225 294.87109375]
[450.33337402 295.00845337]
[458.03085327 310.77655029]
[470.90420532 318.47570801]
[483.77755737 326.17486572]
[496.65087891 333.87402344]
[513.04748535 333.58538818]
[521.26269531 347.77844238]
[512.84539795 361.85256958]
[496.45458984 361.32949829]
[488.95175171 346.74734497]
[476.07839966 339.04818726]
[463.20504761 331.34906006]
[450.33169556 323.64990234]
[438.52432251 326.29513550]
[427.73492432 319.98150635]
[424.02581787 307.62435913]
[411.27258301 299.72787476]
[398.51931763 291.83139038]
[383.53384399 298.52685547]
[367.34780884 294.93688965]
[356.38064575 282.28244019]
[355.10253906 265.41909790]
[342.22918701 257.71994019]
[329.35586548 250.02079773]
[316.48251343 242.32164001]
[303.55026245 234.72183228]
[290.55987549 227.22183228]
[277.56948853 219.72183228]
[268.62582397 230.20855713]
[257.97906494 238.96694946]
[245.95828247 245.72462463]
[232.93530273 250.27104187]
[219.31324768 252.46411133]
[205.51397705 252.23458862]
[191.96510315 249.58830261]
[179.08668518 244.60594177]
[167.27824402 237.44068909]
[156.90635681 228.31346130]
[148.29324341 217.50608826]
[141.70681763 205.35261536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 135]
[5 134]
[6 133]
[7 132]
[8 61]
[9 60]
[10 59]
[11 58]
[12 57]
[13 56]
[14 55]
[16 33]
[17 32]
[18 31]
[19 30]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
[77 115]
[79 114]
[80 113]
[81 112]
[87 104]
[88 103]
[90 101]
[91 100]
[92 99]
[93 98]
[149 191]
[150 190]
[151 189]
[153 188]
[154 187]
[155 186]
[156 185]
[161 181]
[162 180]
[163 179]
[165 176]
[166 175]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
