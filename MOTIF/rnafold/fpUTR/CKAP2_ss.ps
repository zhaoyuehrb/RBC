%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGGCCCCGGCAACUGCAGUCCAGGCUCCGCCUCCCUACGCCCAUUGGCUUAUUCAAUUCACGCAGGAACCAAUGGGCGGAGACGGCAGCCGCGCCGUCUGACGGCUUAGCCGCGGUGCAGACUGCGGCGGCGGUGGUCUGAGGAAGUUCUAUCUUGGCGCUAAAGCGGAGACGCAUCCCCCGACCCGAGGCUACG\
) } def
/len { sequence length } bind def

/coor [
[85.31433868 242.04374695]
[77.56279755 228.46260071]
[80.40541840 213.08555603]
[92.50000000 203.17318726]
[92.50000000 188.17318726]
[92.50000000 173.17318726]
[92.50000000 158.17318726]
[84.76270294 145.44590759]
[92.50000000 131.64573669]
[92.50000000 116.64573669]
[86.26877594 103.00125885]
[74.93253326 93.17835236]
[59.38426208 94.12125397]
[48.02762985 83.99794006]
[47.22452927 69.16922760]
[35.88828659 59.34631729]
[24.55204391 49.52340698]
[13.21579933 39.70049667]
[1.87955582 29.87758636]
[-9.45668793 20.05467415]
[-20.79293060 10.23176384]
[-32.12917328 0.40885282]
[-50.26153946 4.19043207]
[-66.64257812 -7.23050690]
[-69.80913544 -28.41216087]
[-84.20153046 -32.63814926]
[-98.59392548 -36.86413956]
[-112.98632050 -41.09012604]
[-127.41178131 -45.20180511]
[-141.86941528 -49.19890976]
[-156.32704163 -53.19601822]
[-171.69001770 -49.41586685]
[-181.89532471 -60.26488876]
[-196.35295105 -64.26199341]
[-210.81057739 -68.25910187]
[-225.26821899 -72.25621033]
[-229.45230103 -71.00798035]
[-233.41554260 -71.14849854]
[-236.74684143 -72.43640137]
[-239.15634155 -74.52122498]
[-240.50065613 -76.99263763]
[-254.67567444 -81.89865112]
[-268.85067749 -86.80467224]
[-283.02569580 -91.71069336]
[-297.20071411 -96.61671448]
[-311.37573242 -101.52273560]
[-325.55072021 -106.42874908]
[-339.72573853 -111.33477020]
[-353.90075684 -116.24079132]
[-358.15560913 -115.26044464]
[-362.10195923 -115.65204620]
[-365.34484863 -117.14864349]
[-367.61727905 -119.38208771]
[-368.80212402 -121.93378448]
[-382.63745117 -127.72895813]
[-396.47277832 -133.52413940]
[-408.22845459 -123.72299194]
[-423.19485474 -120.51899719]
[-437.93276978 -124.64839172]
[-449.05557251 -135.16227722]
[-454.00732422 -149.64465332]
[-451.65011597 -164.76754761]
[-442.52563477 -177.05584717]
[-428.73062134 -183.68580627]
[-413.43505859 -183.13386536]
[-400.15377808 -175.52690125]
[-391.93869019 -162.61291504]
[-390.67758179 -147.35945129]
[-376.84228516 -141.56427002]
[-363.00695801 -135.76908875]
[-348.99475098 -130.41580200]
[-334.81973267 -125.50978088]
[-320.64471436 -120.60376740]
[-306.46969604 -115.69774628]
[-292.29467773 -110.79172516]
[-278.11968994 -105.88570404]
[-263.94467163 -100.97968292]
[-249.76965332 -96.07366943]
[-235.59463501 -91.16764832]
[-221.27110291 -86.71384430]
[-206.81347656 -82.71673584]
[-192.35585022 -78.71962738]
[-177.89820862 -74.72251892]
[-163.56933594 -78.78857422]
[-152.32994080 -67.65364838]
[-137.87231445 -63.65654373]
[-123.41468048 -59.65943527]
[-116.12216187 -60.90847778]
[-108.76033020 -55.48252106]
[-94.36793518 -51.25653458]
[-79.97554016 -47.03054428]
[-65.58314514 -42.80455780]
[-52.59276199 -50.30455780]
[-49.05638123 -64.88172913]
[-45.51999664 -79.45890045]
[-41.98361206 -94.03607941]
[-38.44722748 -108.61325073]
[-34.91084290 -123.19042206]
[-48.90450287 -117.78880310]
[-61.93410492 -125.22045135]
[-64.40856934 -140.01495361]
[-54.50645065 -151.28207397]
[-39.51668167 -150.72808838]
[-30.47305870 -138.76000977]
[-25.79255867 -153.01107788]
[-21.11205673 -167.26214600]
[-16.43155479 -181.51321411]
[-17.23366737 -198.44816589]
[-1.18257761 -203.90699768]
[8.50630379 -189.99435425]
[-2.18048763 -176.83270264]
[-6.86098957 -162.58163452]
[-11.54149151 -148.33056641]
[-16.22199249 -134.07951355]
[-20.33366966 -119.65403748]
[-23.87005424 -105.07686615]
[-27.40643883 -90.49969482]
[-30.94282150 -75.92251587]
[-34.47920609 -61.34534454]
[-38.01559067 -46.76817322]
[-21.11247635 -31.39754868]
[-22.30626488 -10.92739105]
[-10.97002029 -1.10447979]
[0.36622322 8.71843147]
[11.70246696 18.54134178]
[23.03870964 28.36425400]
[34.37495422 38.18716431]
[45.71119690 48.01007462]
[57.04743958 57.83298492]
[71.83950806 56.51756668]
[83.47600555 66.31790924]
[84.75543976 81.84210205]
[96.09168243 91.66501617]
[100.21753693 86.38722992]
[108.16924286 83.93451691]
[117.91276550 86.49726105]
[126.35002899 94.89164734]
[139.99450684 101.12287140]
[153.63899231 107.35409546]
[167.28346252 113.58532715]
[180.76124573 106.12504578]
[195.87094116 108.00936890]
[206.84400940 118.30770111]
[209.61572266 132.91781616]
[223.26020813 139.14904785]
[236.90469360 145.38026428]
[252.67195129 144.07496643]
[261.03491211 156.40016174]
[274.67938232 162.63139343]
[283.01364136 158.18104553]
[292.32339478 158.07257080]
[300.51318359 162.20364380]
[305.79797363 169.53186035]
[307.09179688 178.33464050]
[320.42431641 185.20803833]
[333.75683594 192.08143616]
[347.08938599 198.95483398]
[362.90090942 198.40126038]
[370.66790771 211.11041260]
[384.00042725 217.98381042]
[398.97607422 212.93348694]
[413.09927368 220.02651978]
[417.99096680 235.05471802]
[410.74902344 249.10212708]
[395.66995239 253.83467102]
[381.69989014 246.44461060]
[377.12704468 231.31634521]
[363.79452515 224.44294739]
[348.93661499 225.48815918]
[340.21597290 212.28736877]
[326.88345337 205.41397095]
[313.55090332 198.54057312]
[300.21838379 191.66717529]
[279.77484131 194.45896912]
[268.44815063 176.27587891]
[254.80368042 170.04464722]
[240.01234436 171.79563904]
[230.67346191 159.02474976]
[217.02897644 152.79351807]
[203.38450623 146.56230164]
[190.52781677 154.03517151]
[175.55902100 152.48623657]
[164.24020386 142.30107117]
[161.05224609 127.22980499]
[147.40776062 120.99858093]
[133.76329041 114.76735687]
[120.11880493 108.53612518]
[107.50000000 116.64573669]
[107.50000000 131.64573669]
[115.23729706 145.44590759]
[107.50000000 158.17318726]
[107.50000000 173.17318726]
[107.50000000 188.17318726]
[107.50000000 203.17318726]
[119.59458160 213.08555603]
[122.43720245 228.46260071]
[114.68566132 242.04374695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 194]
[5 193]
[6 192]
[7 191]
[9 189]
[10 188]
[11 133]
[12 132]
[15 129]
[16 128]
[17 127]
[18 126]
[19 125]
[20 124]
[21 123]
[22 122]
[25 92]
[26 91]
[27 90]
[28 89]
[29 87]
[30 86]
[31 85]
[33 83]
[34 82]
[35 81]
[36 80]
[41 79]
[42 78]
[43 77]
[44 76]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[54 70]
[55 69]
[56 68]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[104 114]
[105 113]
[106 112]
[107 111]
[137 187]
[138 186]
[139 185]
[140 184]
[144 180]
[145 179]
[146 178]
[148 176]
[149 175]
[154 173]
[155 172]
[156 171]
[157 170]
[159 168]
[160 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
