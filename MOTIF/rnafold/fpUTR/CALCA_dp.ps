%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CALCA)
} def

/sequence { (\
CCGCCGCUGCCACCGCCUCUGAUCCAAGCCACCUCCCGCCAGGUGAGCCCCGAGAUCCUGGCUCAGAGAGGUGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.004242083 ubox
2 9 0.077603036 ubox
2 70 0.004281120 ubox
2 73 0.121730430 ubox
3 8 0.054070487 ubox
3 10 0.601791140 ubox
3 16 0.005738615 ubox
3 29 0.003611932 ubox
3 72 0.123642370 ubox
3 74 0.010771441 ubox
4 9 0.600293145 ubox
4 15 0.005447142 ubox
4 28 0.003610377 ubox
4 71 0.123810093 ubox
4 73 0.009234609 ubox
5 70 0.123575381 ubox
5 73 0.010870788 ubox
6 14 0.004549724 ubox
6 16 0.065384283 ubox
6 29 0.026838247 ubox
6 72 0.010832791 ubox
6 74 0.023526587 ubox
7 15 0.065377624 ubox
7 28 0.026891276 ubox
7 66 0.028813878 ubox
7 68 0.082921704 ubox
7 70 0.003381572 ubox
7 71 0.010718050 ubox
7 73 0.020336491 ubox
8 15 0.006059550 ubox
8 26 0.005526007 ubox
8 27 0.026205144 ubox
8 65 0.029020689 ubox
8 67 0.082386434 ubox
8 69 0.004734639 ubox
8 70 0.010173857 ubox
8 73 0.006058111 ubox
9 14 0.017739156 ubox
9 16 0.055591167 ubox
9 25 0.007547441 ubox
9 62 0.019098169 ubox
9 64 0.028669211 ubox
9 72 0.011234935 ubox
9 74 0.166245587 ubox
10 15 0.055616557 ubox
10 61 0.019273737 ubox
10 71 0.011477448 ubox
10 73 0.123847213 ubox
11 21 0.007392250 ubox
11 60 0.019271940 ubox
11 70 0.011433826 ubox
11 73 0.975047959 ubox
12 20 0.006931742 ubox
12 59 0.018581464 ubox
12 72 0.987884774 ubox
12 74 0.013772975 ubox
13 61 0.005047578 ubox
13 71 0.988681365 ubox
13 73 0.010503716 ubox
14 21 0.016665508 ubox
14 60 0.005055460 ubox
14 70 0.988491624 ubox
14 73 0.073470158 ubox
15 20 0.011435065 ubox
15 29 0.005349362 ubox
15 59 0.004592202 ubox
15 62 0.087775271 ubox
15 72 0.075392523 ubox
16 28 0.005117287 ubox
16 61 0.087881530 ubox
16 71 0.075504106 ubox
17 54 0.011880479 ubox
17 60 0.087751883 ubox
17 68 0.989694542 ubox
17 70 0.074436314 ubox
18 53 0.011894465 ubox
18 55 0.008942890 ubox
18 67 0.992559348 ubox
18 69 0.070719669 ubox
19 28 0.005376449 ubox
19 52 0.011804312 ubox
19 54 0.009111656 ubox
19 66 0.993010322 ubox
19 68 0.068510858 ubox
20 26 0.005028996 ubox
20 27 0.005900851 ubox
20 53 0.008563408 ubox
20 65 0.993018636 ubox
20 67 0.061379880 ubox
21 25 0.005952758 ubox
21 30 0.007185286 ubox
21 51 0.006497683 ubox
21 57 0.096658372 ubox
21 64 0.993345801 ubox
22 56 0.097658691 ubox
22 63 0.975269255 ubox
23 53 0.064545093 ubox
23 55 0.099797753 ubox
23 61 0.022071867 ubox
23 67 0.014443318 ubox
24 43 0.017409069 ubox
24 52 0.064986593 ubox
24 54 0.099559669 ubox
24 60 0.021614746 ubox
24 61 0.955903272 ubox
24 66 0.018428923 ubox
25 42 0.017551258 ubox
25 60 0.956825141 ubox
26 59 0.909168247 ubox
27 34 0.049471091 ubox
27 59 0.106300360 ubox
27 63 0.065727435 ubox
28 33 0.051549565 ubox
28 39 0.019063793 ubox
28 44 0.004066062 ubox
28 48 0.965655028 ubox
28 58 0.088287335 ubox
28 62 0.101701618 ubox
28 74 0.003950685 ubox
29 38 0.019120254 ubox
29 43 0.004646126 ubox
29 47 0.969078870 ubox
29 61 0.101703404 ubox
30 42 0.004645896 ubox
30 45 0.975906304 ubox
30 60 0.101597729 ubox
30 73 0.031965142 ubox
31 44 0.976188771 ubox
31 59 0.097176595 ubox
31 72 0.032261252 ubox
32 43 0.976460230 ubox
32 71 0.032286608 ubox
33 42 0.976400286 ubox
33 47 0.094451470 ubox
33 54 0.040763784 ubox
33 66 0.004233151 ubox
33 68 0.003754656 ubox
33 70 0.032280337 ubox
34 41 0.922077157 ubox
34 46 0.095130223 ubox
34 53 0.040834645 ubox
34 55 0.054980379 ubox
34 65 0.004064854 ubox
34 67 0.004201364 ubox
34 69 0.032249152 ubox
35 43 0.003925031 ubox
35 45 0.095177570 ubox
35 52 0.040528771 ubox
35 54 0.056305362 ubox
35 66 0.004466734 ubox
35 68 0.032175354 ubox
36 42 0.004184188 ubox
36 43 0.098342293 ubox
37 42 0.098379774 ubox
37 45 0.004687870 ubox
37 52 0.057173208 ubox
38 44 0.004826606 ubox
38 48 0.030812765 ubox
38 51 0.057296351 ubox
38 62 0.178091727 ubox
39 43 0.004819569 ubox
39 47 0.030848411 ubox
39 61 0.178200613 ubox
40 60 0.178216751 ubox
41 59 0.178185383 ubox
42 49 0.053701879 ubox
42 50 0.022497799 ubox
42 51 0.013342046 ubox
42 57 0.006660753 ubox
42 58 0.178096465 ubox
43 48 0.053416516 ubox
43 49 0.022422495 ubox
43 50 0.013361554 ubox
43 56 0.009263658 ubox
43 57 0.177520456 ubox
44 52 0.041482155 ubox
44 55 0.053606369 ubox
44 65 0.021767597 ubox
45 51 0.043158958 ubox
45 57 0.011305928 ubox
45 64 0.029067332 ubox
46 56 0.017306716 ubox
46 59 0.012512809 ubox
46 63 0.064100616 ubox
47 58 0.014523950 ubox
47 62 0.084808322 ubox
48 61 0.084709753 ubox
49 60 0.084360100 ubox
49 61 0.023740496 ubox
50 60 0.023531962 ubox
50 61 0.134834265 ubox
51 60 0.136677027 ubox
52 59 0.114001970 ubox
52 64 0.013856206 ubox
53 59 0.131469195 ubox
53 63 0.014374003 ubox
54 58 0.149585451 ubox
54 62 0.015072773 ubox
58 66 0.034811024 ubox
59 65 0.034885495 ubox
60 64 0.034351915 ubox
11 73 0.9500000 lbox
12 72 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
17 68 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
20 65 0.9500000 lbox
21 64 0.9500000 lbox
22 63 0.9500000 lbox
24 61 0.9500000 lbox
25 60 0.9500000 lbox
26 59 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
showpage
end
%%EOF
