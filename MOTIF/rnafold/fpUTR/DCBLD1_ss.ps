%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACGCCCCCGCAGGGCUGGGCUGAAAGCCGCCCCAAUGGGAUUCGGUGCGGGGCAGCGACUGCGCCCCGUCCCGGCGCCGCGCUCGUCCGCAGAGGAGGCGGCCCGGCCCGGGCAGCUGCGGCUCGGGAUCCGUCGAGGGGAGGCCGAGCUUGCCAAGCUGGCGCCCAGCGGGGUC\
) } def
/len { sequence length } bind def

/coor [
[83.87401581 316.40835571]
[69.95774841 322.90707397]
[54.65795517 321.56100464]
[42.09020233 312.73220825]
[35.63515091 298.79565430]
[37.02917480 283.50015259]
[45.89729309 270.96014404]
[59.85402298 264.54879761]
[61.16864395 249.60652161]
[62.48326492 234.66424561]
[63.79788589 219.72195435]
[65.11251068 204.77967834]
[66.42713165 189.83740234]
[59.83503723 176.48098755]
[68.75202942 163.41203308]
[70.06665039 148.46974182]
[71.38127136 133.52746582]
[72.69589233 118.58518219]
[67.29170990 104.59251404]
[56.27464294 94.41291809]
[45.25757217 84.23332214]
[34.24049759 74.05373383]
[23.22342873 63.87413788]
[12.20635700 53.69454193]
[1.18928576 43.51494598]
[-9.67296124 44.57239532]
[-19.12201118 39.56543732]
[-24.13580894 30.36975861]
[-23.26323700 20.15317535]
[-33.91627502 9.59321404]
[-44.56931305 -0.96674752]
[-55.22235107 -11.52670860]
[-65.87538910 -22.08666992]
[-76.52842712 -32.64662933]
[-87.27371979 -43.11270142]
[-98.11044312 -53.48407745]
[-113.68631744 -53.31104660]
[-124.52855682 -63.98347092]
[-124.59751892 -78.83374786]
[-135.43424988 -89.20512390]
[-146.36155701 -99.48100281]
[-157.37863159 -109.66059875]
[-168.39570618 -119.84019470]
[-179.41278076 -130.01979065]
[-202.78572083 -128.12731934]
[-217.67721558 -151.29388428]
[-230.30249023 -159.39341736]
[-242.92774963 -167.49296570]
[-258.72103882 -168.43226624]
[-265.25549316 -181.81697083]
[-277.88076782 -189.91651917]
[-290.50604248 -198.01606750]
[-303.13128662 -206.11560059]
[-315.75656128 -214.21514893]
[-328.38183594 -222.31469727]
[-341.00711060 -230.41423035]
[-349.94830322 -232.42359924]
[-353.78112793 -238.76834106]
[-366.26229858 -247.08821106]
[-382.65341187 -247.60227966]
[-390.16424561 -262.18032837]
[-381.06832886 -275.82571411]
[-364.72274780 -274.50122070]
[-357.94244385 -259.56939697]
[-345.46127319 -251.24952698]
[-332.90756226 -243.03950500]
[-320.28228760 -234.93995667]
[-307.65701294 -226.84042358]
[-295.03176880 -218.74087524]
[-282.40649414 -210.64132690]
[-269.78121948 -202.54179382]
[-257.15594482 -194.44224548]
[-242.26570129 -194.08227539]
[-234.82821655 -180.11824036]
[-222.20294189 -172.01869202]
[-209.57766724 -163.91914368]
[-197.63078308 -172.98953247]
[-202.04013062 -187.32681274]
[-206.44947815 -201.66409302]
[-216.88470459 -215.02607727]
[-206.93367004 -228.75245667]
[-190.98901367 -222.99014282]
[-192.11219788 -206.07344055]
[-187.70285034 -191.73616028]
[-183.29350281 -177.39888000]
[-170.23054504 -167.65602112]
[-165.52993774 -153.68894958]
[-169.23318481 -141.03686523]
[-158.21611023 -130.85726929]
[-147.19903564 -120.67767334]
[-136.18197632 -110.49807739]
[-129.11482239 -108.26160431]
[-125.06287384 -100.04184723]
[-114.22615051 -89.67047119]
[-99.38713074 -90.25294495]
[-88.24941254 -79.88927460]
[-87.73907471 -64.32080078]
[-76.90234375 -53.94942474]
[-69.87553406 -51.58926773]
[-65.96846771 -43.29966736]
[-55.31542969 -32.73970795]
[-44.66239166 -22.17974663]
[-34.00935364 -11.61978531]
[-23.35631371 -1.05982435]
[-12.70327663 9.50013638]
[6.29486418 13.00814152]
[11.36888027 32.49787521]
[22.38595200 42.67747116]
[33.40302277 52.85706329]
[44.42009354 63.03665924]
[55.43716431 73.21625519]
[66.45423889 83.39585114]
[77.47130585 93.57543945]
[91.19915771 79.99904633]
[109.07333374 81.86698914]
[118.21557617 95.76617432]
[132.96159363 98.51480103]
[147.70761108 101.26343536]
[162.45362854 104.01206970]
[177.19964600 106.76069641]
[191.99163818 109.25011444]
[206.82502747 111.47955322]
[221.65841675 113.70898438]
[236.51081848 115.80816650]
[251.38104248 117.77693939]
[266.25128174 119.74570465]
[281.12152100 121.71446991]
[295.99176025 123.68324280]
[310.86199951 125.65200806]
[323.32873535 116.31293488]
[338.38122559 118.52137756]
[347.20776367 130.46406555]
[362.07800293 132.43283081]
[376.94824219 134.40159607]
[388.36230469 123.71265411]
[403.97940063 122.91287994]
[416.42565918 132.37991333]
[419.82434082 147.64369202]
[412.57064819 161.49714661]
[398.08959961 167.39907837]
[383.21865845 162.56280518]
[374.97949219 149.27183533]
[360.10925293 147.30307007]
[345.23901367 145.33430481]
[333.60870361 154.56855774]
[318.50012207 152.78378296]
[308.89321899 140.52224731]
[294.02297974 138.55348206]
[279.15274048 136.58470154]
[264.28253174 134.61593628]
[249.41227722 132.64717102]
[234.54203796 130.67840576]
[227.47779846 132.92405701]
[219.42898560 128.54237366]
[204.59559631 126.31294250]
[189.76219177 124.08351135]
[185.43597412 126.16826630]
[179.75123596 125.53698730]
[174.45101929 121.50671387]
[159.70500183 118.75808716]
[144.95898438 116.00945282]
[130.21296692 113.26081848]
[115.46694946 110.51219177]
[109.07333374 118.13301086]
[98.99610138 121.82853699]
[87.63817596 119.89980316]
[86.32355499 134.84208679]
[85.00893402 149.78436279]
[83.69431305 164.72665405]
[90.19237518 179.15182495]
[81.36940765 191.15202332]
[80.05478668 206.09429932]
[78.74016571 221.03657532]
[77.42554474 235.97886658]
[76.11092377 250.92114258]
[74.79630280 265.86343384]
[87.41915894 274.61322021]
[93.96145630 288.50906372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[15 169]
[16 168]
[17 167]
[18 166]
[19 113]
[20 112]
[21 111]
[22 110]
[23 109]
[24 108]
[25 107]
[29 105]
[30 104]
[31 103]
[32 102]
[33 101]
[34 100]
[35 98]
[36 97]
[39 94]
[40 93]
[41 91]
[42 90]
[43 89]
[44 88]
[46 76]
[47 75]
[48 74]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[58 65]
[59 64]
[77 85]
[78 84]
[79 83]
[116 163]
[117 162]
[118 161]
[119 160]
[120 159]
[121 156]
[122 155]
[123 154]
[124 152]
[125 151]
[126 150]
[127 149]
[128 148]
[129 147]
[132 144]
[133 143]
[134 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
