%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAUCACGCUGGCUUUUGCCUGGGGUUCUCAGGAGGGGAGAGUUGGGAGAGGCUUUGCUGCUGAGGAAAUUUAUUUGGUAGAUUGAAGGUUUGAACGAGAGCUACAGAAACGAAAGAAAAAGUCUGUAUAAGCCAAUGGUGUUCGGGAAGAAAAUAACCCCAUUGCCUUGAGUUUGUAGGUGCCACUACUACUCUGGAAAA\
) } def
/len { sequence length } bind def

/coor [
[96.09189606 231.54295349]
[109.02144623 223.71235657]
[105.36273956 209.16540527]
[101.70403290 194.61845398]
[98.04532623 180.07150269]
[94.38661957 165.52455139]
[90.72791290 150.97758484]
[75.90543365 148.67671204]
[68.00894928 161.42997742]
[67.32247925 177.23628235]
[54.04405212 183.98405457]
[46.14756775 196.73731995]
[38.34952164 209.55099487]
[30.65036583 222.42434692]
[22.95121193 235.29768372]
[23.23983383 251.69430542]
[9.04678631 259.90948486]
[-5.02733946 251.49218750]
[-4.50429010 235.10137939]
[10.07786655 227.59854126]
[17.77701950 214.72518921]
[25.47617531 201.85185242]
[26.21185684 194.49366760]
[33.39431381 188.84083557]
[41.29079437 176.08758545]
[41.41245651 161.19346619]
[55.25569534 153.53349304]
[63.15217590 140.78022766]
[55.35412598 127.96655273]
[40.39857483 129.12040710]
[25.44301796 130.27426147]
[10.48746395 131.42811584]
[-4.46809101 132.58198547]
[-19.42364502 133.73583984]
[-32.58774567 142.51176453]
[-45.87248993 135.77642822]
[-60.82804489 136.93028259]
[-73.99214172 145.70622253]
[-87.27688599 138.97087097]
[-102.23243713 140.12472534]
[-117.18799591 141.27857971]
[-132.14355469 142.43243408]
[-142.40563965 154.15112305]
[-157.58912659 155.10824585]
[-168.69786072 145.25268555]
[-183.65341187 146.40655518]
[-196.86950684 156.11564636]
[-211.77510071 149.27786255]
[-213.03659058 132.92730713]
[-199.35626221 123.88403320]
[-184.80726624 131.45098877]
[-169.85171509 130.29713440]
[-160.38621521 118.85424042]
[-145.23559570 117.47101593]
[-133.29740906 127.47688293]
[-118.34185028 126.32302856]
[-103.38629913 125.16917419]
[-88.43074036 124.01531982]
[-76.33636475 115.32191467]
[-61.98189926 121.97472382]
[-47.02634430 120.82086945]
[-34.93196487 112.12746429]
[-20.57750130 118.78028107]
[-5.62194729 117.62642670]
[9.33360767 116.47256470]
[24.28916168 115.31871033]
[39.24471664 114.16485596]
[54.20027161 113.01100159]
[49.45707703 85.75798798]
[61.09066772 57.78613281]
[50.98523331 46.70100021]
[40.87979889 35.61586380]
[30.77436447 24.53073120]
[20.66893005 13.44559765]
[10.56349564 2.36046386]
[0.45806050 -8.72466946]
[-14.68099308 -16.35653687]
[-11.53828907 -33.01666260]
[5.34073877 -34.60875702]
[11.54319382 -18.83010483]
[21.64862823 -7.74497080]
[31.75406265 3.34016299]
[41.85949707 14.42529678]
[51.96493149 25.51043129]
[62.07036591 36.59556580]
[72.17580414 47.68069839]
[78.96495056 44.49362564]
[80.23390198 29.54739571]
[92.54325104 38.11948013]
[99.33240509 34.93240738]
[97.26006317 20.07625008]
[95.18771362 5.22009373]
[93.11537170 -9.63606262]
[91.04302216 -24.49221992]
[78.28147125 -33.81522369]
[75.93264008 -49.44399643]
[85.39005280 -62.10626602]
[101.04278564 -64.28972626]
[113.60435486 -54.69897461]
[115.62220001 -39.02403259]
[105.89917755 -26.56456375]
[107.97152710 -11.70840836]
[110.04386902 3.14774823]
[112.11621857 18.00390434]
[114.18856049 32.86006165]
[128.97384644 35.38891983]
[135.86590576 22.06602478]
[142.75796509 8.74312782]
[149.65002441 -4.57976818]
[156.54208374 -17.90266418]
[146.71452332 -29.49954605]
[142.07774353 -43.97603607]
[143.33882141 -59.12457275]
[150.30543518 -72.63510895]
[161.91523743 -82.44740295]
[176.39781189 -87.06513214]
[191.54467773 -85.78413391]
[205.04603577 -78.79975128]
[214.84304810 -67.17705536]
[219.44172668 -52.68841934]
[218.14080811 -37.54325485]
[211.13867188 -24.05108643]
[199.50309753 -14.26937771]
[185.00842285 -9.68976593]
[169.86497498 -11.01060772]
[162.97291565 2.31228852]
[156.08085632 15.63518429]
[149.18881226 28.95808029]
[142.29675293 42.28097534]
[149.79675293 55.27135849]
[164.78074646 55.96410751]
[179.76473999 56.65686035]
[194.74873352 57.34961319]
[209.73272705 58.04236603]
[224.71672058 58.73511505]
[239.70561218 59.31247330]
[254.69848633 59.77439880]
[269.69137573 60.23632431]
[278.37094116 57.37144089]
[284.91110229 60.82257080]
[299.89508057 61.51532364]
[314.87908936 62.20807648]
[329.86306763 62.90082932]
[339.58599854 50.95213699]
[354.30822754 47.06516647]
[368.33044434 52.52789688]
[376.35119629 65.05010223]
[391.33520508 65.74285889]
[406.31918335 66.43560791]
[414.53707886 53.46016312]
[428.14910889 46.34625626]
[443.49377441 47.00748825]
[456.44338989 55.26599121]
[463.51458740 68.90026855]
[462.80526733 84.24277496]
[454.50622559 97.16645050]
[440.84982300 104.19488525]
[425.50964355 103.43746948]
[412.61203003 95.09794617]
[405.62643433 81.41960144]
[390.64245605 80.72685242]
[375.65844727 80.03409576]
[366.51651001 91.76282501]
[352.05007935 95.90844727]
[337.74926758 90.67965698]
[329.17031860 77.88481903]
[314.18634033 77.19207001]
[299.20233154 76.49932098]
[284.21832275 75.80656433]
[269.22946167 75.22920990]
[254.23657227 74.76728821]
[239.24368286 74.30535889]
[232.45742798 77.24317169]
[224.02397156 73.71910858]
[209.03997803 73.02635956]
[194.05598450 72.33361053]
[179.07199097 71.64085388]
[164.08799744 70.94810486]
[149.10400391 70.25535583]
[147.10922241 123.19792938]
[105.27487183 147.31889343]
[108.93357849 161.86584473]
[112.59228516 176.41279602]
[116.25098419 190.95974731]
[119.90969086 205.50669861]
[123.56839752 220.05364990]
[138.66409302 220.83561707]
[152.85806274 226.03392029]
[164.88821411 235.18637085]
[173.68479919 247.47909546]
[178.46565247 261.81906128]
[178.80566406 276.93118286]
[174.67460632 291.47167969]
[166.43978882 304.14758301]
[154.83346558 313.83184814]
[140.88764954 319.66326904]
[125.84239960 321.12338257]
[111.03553009 318.08233643]
[97.78365326 310.81051636]
[87.26512909 299.95455933]
[80.41523743 286.47973633]
[77.84308624 271.58425903]
[79.77737427 256.59259033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 28]
[9 27]
[11 25]
[12 24]
[13 22]
[14 21]
[15 20]
[29 68]
[30 67]
[31 66]
[32 65]
[33 64]
[34 63]
[36 61]
[37 60]
[39 58]
[40 57]
[41 56]
[42 55]
[45 52]
[46 51]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[130 179]
[131 178]
[132 177]
[133 176]
[134 175]
[135 174]
[136 172]
[137 171]
[138 170]
[140 169]
[141 168]
[142 167]
[143 166]
[147 162]
[148 161]
[149 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
