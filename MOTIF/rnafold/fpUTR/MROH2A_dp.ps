%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MROH2A)
} def

/sequence { (\
CAUUGCUGUGGCUGCUUGGGCCACGGGAGAGGGAACCUUGUGAGCCGGGCAGAAUCCACCCUGUAGAGACUGCCUCUGGAGCUUGAGGAAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.014673524 ubox
1 10 0.088743338 ubox
1 42 0.004915353 ubox
1 63 0.028716828 ubox
1 72 0.049225764 ubox
1 85 0.062549385 ubox
2 7 0.016277919 ubox
2 9 0.088615238 ubox
2 41 0.004870217 ubox
2 62 0.028095499 ubox
2 64 0.052931279 ubox
2 71 0.049375970 ubox
2 84 0.061010537 ubox
3 8 0.086995304 ubox
3 28 0.026604901 ubox
3 29 0.180518427 ubox
3 30 0.037124577 ubox
3 31 0.010145392 ubox
3 32 0.005625622 ubox
3 34 0.005660062 ubox
3 40 0.004555964 ubox
3 63 0.054119333 ubox
3 66 0.467392689 ubox
3 67 0.053005434 ubox
3 68 0.020397327 ubox
3 69 0.039748164 ubox
3 86 0.010767846 ubox
3 87 0.005283476 ubox
3 89 0.012036443 ubox
3 90 0.116634566 ubox
3 91 0.009462324 ubox
3 92 0.013959556 ubox
3 93 0.014475681 ubox
4 27 0.025960024 ubox
4 28 0.265911383 ubox
4 29 0.035606405 ubox
4 30 0.008614788 ubox
4 33 0.005163696 ubox
4 51 0.004445683 ubox
4 58 0.006775743 ubox
4 63 0.022442996 ubox
4 65 0.688284665 ubox
4 66 0.034737110 ubox
4 67 0.020394530 ubox
4 68 0.036594300 ubox
4 85 0.010995660 ubox
4 86 0.006441851 ubox
4 87 0.003339248 ubox
4 88 0.011662921 ubox
4 89 0.132488388 ubox
4 90 0.011178904 ubox
4 91 0.011948543 ubox
4 92 0.019722307 ubox
5 12 0.008270062 ubox
5 50 0.004652058 ubox
5 57 0.007597954 ubox
5 62 0.028932676 ubox
5 64 0.715357820 ubox
5 73 0.003291496 ubox
5 82 0.088350697 ubox
5 84 0.005530254 ubox
6 11 0.009483322 ubox
6 26 0.300837883 ubox
6 27 0.009937091 ubox
6 31 0.005110310 ubox
6 49 0.004649268 ubox
6 63 0.716930782 ubox
6 66 0.067020708 ubox
6 68 0.032614444 ubox
6 72 0.004335732 ubox
6 81 0.087776664 ubox
6 87 0.140363569 ubox
6 88 0.027549280 ubox
6 91 0.050322765 ubox
6 93 0.050485453 ubox
7 25 0.301000292 ubox
7 26 0.007028323 ubox
7 30 0.004426828 ubox
7 48 0.004317012 ubox
7 58 0.018467152 ubox
7 63 0.009451587 ubox
7 65 0.066974985 ubox
7 67 0.032419051 ubox
7 80 0.081464436 ubox
7 85 0.005548504 ubox
7 86 0.136756061 ubox
7 87 0.025493310 ubox
7 90 0.048946240 ubox
7 92 0.050475230 ubox
8 24 0.301527151 ubox
8 55 0.013497118 ubox
8 57 0.020588693 ubox
8 59 0.940363326 ubox
8 62 0.005374871 ubox
8 64 0.020752210 ubox
9 23 0.301489183 ubox
9 47 0.003265126 ubox
9 54 0.015095328 ubox
9 58 0.943867770 ubox
9 63 0.006512086 ubox
9 65 0.003472303 ubox
9 78 0.003993640 ubox
10 22 0.301549735 ubox
10 46 0.004422039 ubox
10 56 0.019702839 ubox
10 57 0.944722867 ubox
10 60 0.012829669 ubox
10 61 0.013042706 ubox
10 62 0.006882456 ubox
10 83 0.011746623 ubox
11 21 0.301551625 ubox
11 45 0.004424113 ubox
11 55 0.019043747 ubox
11 56 0.943849298 ubox
11 59 0.012889281 ubox
11 60 0.013049169 ubox
11 61 0.006923890 ubox
11 82 0.012395901 ubox
12 19 0.008301418 ubox
12 20 0.301429508 ubox
12 44 0.004423878 ubox
12 52 0.951204836 ubox
12 81 0.010393714 ubox
13 18 0.010980003 ubox
13 19 0.298757457 ubox
13 43 0.004183240 ubox
13 51 0.952961798 ubox
13 80 0.009870515 ubox
14 41 0.003955251 ubox
14 50 0.953369484 ubox
15 40 0.004083305 ubox
15 48 0.004406266 ubox
15 49 0.953084445 ubox
15 79 0.008126488 ubox
16 47 0.005549782 ubox
16 48 0.936050916 ubox
16 49 0.022385555 ubox
16 78 0.007622210 ubox
17 47 0.899646808 ubox
17 48 0.169655827 ubox
18 37 0.004006204 ubox
18 46 0.866264402 ubox
18 76 0.006667209 ubox
19 36 0.004001242 ubox
19 45 0.828384719 ubox
19 46 0.398020208 ubox
20 45 0.471968268 ubox
21 44 0.535624557 ubox
22 40 0.007666029 ubox
22 42 0.952822184 ubox
23 39 0.007658906 ubox
23 41 0.952977216 ubox
24 40 0.952646698 ubox
24 42 0.016043770 ubox
25 37 0.089132521 ubox
25 38 0.446588061 ubox
25 39 0.816192964 ubox
25 41 0.016196368 ubox
25 46 0.004622583 ubox
26 36 0.090422327 ubox
26 37 0.637097533 ubox
26 38 0.675399915 ubox
26 39 0.009044755 ubox
26 45 0.004626992 ubox
27 36 0.638312913 ubox
27 37 0.671472873 ubox
27 38 0.006034244 ubox
27 39 0.043147941 ubox
28 38 0.054445827 ubox
28 39 0.008951987 ubox
29 37 0.056392005 ubox
29 38 0.009316581 ubox
29 39 0.149135461 ubox
30 38 0.184892242 ubox
30 39 0.014154214 ubox
30 62 0.008354005 ubox
31 37 0.190841035 ubox
31 38 0.020847137 ubox
31 39 0.003162914 ubox
31 46 0.004628831 ubox
31 61 0.008600174 ubox
32 36 0.189333859 ubox
32 37 0.021806531 ubox
32 38 0.005137191 ubox
32 45 0.004631681 ubox
32 57 0.004751702 ubox
32 60 0.008594354 ubox
33 37 0.005312144 ubox
33 56 0.004806570 ubox
33 59 0.008567723 ubox
34 55 0.004779175 ubox
35 41 0.003508732 ubox
36 40 0.003535707 ubox
36 88 0.294995798 ubox
37 52 0.003745408 ubox
37 87 0.296321214 ubox
37 88 0.031291108 ubox
37 91 0.016975050 ubox
38 52 0.005597788 ubox
38 54 0.005314566 ubox
38 86 0.295370771 ubox
38 87 0.031266655 ubox
38 88 0.005550905 ubox
38 89 0.003953357 ubox
38 90 0.016855778 ubox
39 51 0.006926220 ubox
39 53 0.005641846 ubox
39 85 0.282639462 ubox
39 86 0.031981983 ubox
39 87 0.008156185 ubox
39 88 0.004644806 ubox
39 89 0.016034089 ubox
40 50 0.007501890 ubox
40 82 0.057764844 ubox
40 84 0.188627459 ubox
41 49 0.007466933 ubox
41 51 0.005993754 ubox
41 81 0.057214683 ubox
41 85 0.053274608 ubox
42 50 0.005961268 ubox
42 84 0.176747037 ubox
43 77 0.010899320 ubox
43 83 0.191280879 ubox
43 84 0.003401838 ubox
44 64 0.004479158 ubox
44 76 0.011197150 ubox
44 82 0.191767158 ubox
45 63 0.004631870 ubox
45 79 0.241872390 ubox
45 81 0.174318591 ubox
46 78 0.256345825 ubox
47 57 0.003409777 ubox
47 61 0.010943247 ubox
47 75 0.234628000 ubox
47 76 0.116301277 ubox
47 77 0.122676629 ubox
48 56 0.003413349 ubox
48 60 0.010963166 ubox
48 74 0.294029262 ubox
48 75 0.014614451 ubox
48 76 0.062922306 ubox
49 59 0.010929142 ubox
49 64 0.005179520 ubox
49 73 0.300344658 ubox
49 74 0.020443277 ubox
49 75 0.008592529 ubox
50 63 0.005506657 ubox
50 72 0.301220091 ubox
51 62 0.005576857 ubox
51 71 0.301123202 ubox
52 61 0.005601420 ubox
52 70 0.300742184 ubox
55 67 0.298838983 ubox
55 69 0.017424063 ubox
55 80 0.008038609 ubox
55 86 0.013489267 ubox
55 88 0.028007859 ubox
55 89 0.084329600 ubox
55 92 0.019200193 ubox
56 66 0.298786709 ubox
56 68 0.018230202 ubox
56 79 0.009056691 ubox
56 85 0.012998679 ubox
56 87 0.043713098 ubox
56 88 0.090171284 ubox
56 91 0.020520748 ubox
57 63 0.055424533 ubox
57 72 0.004216132 ubox
57 78 0.009053700 ubox
57 85 0.070442632 ubox
57 87 0.088880941 ubox
58 62 0.045435547 ubox
58 64 0.265752537 ubox
58 71 0.004235116 ubox
58 77 0.008523519 ubox
58 84 0.074587268 ubox
59 63 0.268163750 ubox
59 79 0.004119211 ubox
59 88 0.035909097 ubox
60 78 0.005092662 ubox
60 79 0.059895488 ubox
60 87 0.041982094 ubox
60 88 0.094424967 ubox
61 68 0.166972215 ubox
61 78 0.059320950 ubox
61 79 0.026101440 ubox
61 81 0.516407315 ubox
61 87 0.093312484 ubox
61 88 0.021499697 ubox
61 91 0.011931748 ubox
61 93 0.012071711 ubox
62 67 0.165843622 ubox
62 78 0.021996934 ubox
62 80 0.523129615 ubox
62 85 0.004302195 ubox
62 86 0.084922192 ubox
62 87 0.021367145 ubox
62 90 0.011506468 ubox
62 92 0.012179956 ubox
63 70 0.031171638 ubox
63 73 0.028927381 ubox
63 77 0.005143638 ubox
63 82 0.029766191 ubox
63 84 0.009119626 ubox
64 69 0.030018888 ubox
64 72 0.035395184 ubox
64 78 0.526861889 ubox
64 81 0.027173199 ubox
64 85 0.019376164 ubox
65 71 0.037726044 ubox
65 77 0.534522078 ubox
65 83 0.016660708 ubox
65 84 0.019225990 ubox
66 70 0.037703938 ubox
66 74 0.003186933 ubox
66 76 0.535203055 ubox
66 82 0.016763368 ubox
66 83 0.012659124 ubox
66 84 0.073769243 ubox
67 75 0.535080675 ubox
67 77 0.010453068 ubox
67 83 0.079403727 ubox
68 74 0.534089494 ubox
68 76 0.010612223 ubox
68 82 0.080507355 ubox
69 75 0.010111259 ubox
70 79 0.008024441 ubox
70 81 0.080524275 ubox
70 91 0.690271923 ubox
70 93 0.091082840 ubox
71 78 0.007850057 ubox
71 80 0.080299960 ubox
71 90 0.616227744 ubox
71 92 0.088681772 ubox
72 77 0.004238544 ubox
72 82 0.003766794 ubox
73 79 0.069065827 ubox
73 81 0.003710946 ubox
73 88 0.781248283 ubox
74 78 0.068637341 ubox
74 87 0.784272717 ubox
74 88 0.003498062 ubox
74 93 0.017044361 ubox
75 86 0.784172467 ubox
75 88 0.006114660 ubox
75 89 0.003808888 ubox
75 92 0.017481942 ubox
76 85 0.784208418 ubox
76 87 0.008338963 ubox
76 88 0.004362912 ubox
76 91 0.017564136 ubox
77 85 0.004279626 ubox
77 86 0.008431711 ubox
77 87 0.004257585 ubox
77 90 0.017445433 ubox
78 84 0.034309583 ubox
79 83 0.028180693 ubox
82 88 0.044818386 ubox
82 91 0.355368296 ubox
82 93 0.144029171 ubox
83 87 0.040570565 ubox
83 89 0.013747527 ubox
83 90 0.356075210 ubox
83 91 0.025329095 ubox
83 92 0.147842457 ubox
83 93 0.009317269 ubox
84 88 0.013999078 ubox
84 89 0.349915088 ubox
84 90 0.030655155 ubox
84 91 0.145811264 ubox
84 92 0.015073701 ubox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
8 59 0.9500000 lbox
9 58 0.9500000 lbox
10 57 0.9500000 lbox
11 56 0.9500000 lbox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
70 91 0.9500000 lbox
71 90 0.9500000 lbox
73 88 0.9500000 lbox
74 87 0.9500000 lbox
75 86 0.9500000 lbox
76 85 0.9500000 lbox
showpage
end
%%EOF
