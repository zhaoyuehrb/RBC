%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGUAUUUCCAGGAGGCUGUGAGGGGGAGAAUGUUCUUUUGGCCACUGUGAAGCCUCAGGAAGGGGCUCGGAUUGCUCAAGGACCCAUGGGAGAGAGGAGGCUUUGACUGGGCUGCCUGCCUGUGAGGUCUCUGGACUAGAGGUCCAACGCAGUCCAGCUGACAAGG\
) } def
/len { sequence length } bind def

/coor [
[60.52790451 214.54942322]
[45.78983688 211.75848389]
[32.97057724 203.96960449]
[23.70307732 192.17497253]
[19.16786385 177.87699890]
[19.94264221 162.89701843]
[25.92872047 149.14323425]
[36.36164474 138.36900330]
[21.72896576 141.66819763]
[7.09628582 144.96739197]
[-7.53639364 148.26658630]
[-22.16907310 151.56578064]
[-29.72647858 162.04960632]
[-42.01079941 164.48011780]
[-52.30855942 158.08653259]
[-66.99970245 161.11476135]
[-81.69084930 164.14300537]
[-96.38199615 167.17123413]
[-111.07314301 170.19947815]
[-125.76428986 173.22770691]
[-130.67767334 187.71238708]
[-142.10606384 197.72682190]
[-156.91421509 200.65682983]
[-171.10577393 195.81373596]
[-180.90173340 184.59300232]
[-195.59288025 187.62124634]
[-210.25541687 190.78509521]
[-224.88810730 194.08428955]
[-233.35238647 207.16075134]
[-248.23899841 210.29815674]
[-260.65322876 202.14816284]
[-275.28591919 205.44737244]
[-289.91860962 208.74656677]
[-298.14935303 222.23841858]
[-313.52902222 225.87731934]
[-326.93310547 217.50436401]
[-330.40917969 202.08709717]
[-321.89498901 188.77229309]
[-306.44183350 185.45939636]
[-293.21780396 194.11387634]
[-278.58511353 190.81468201]
[-263.95242310 187.51548767]
[-256.23663330 174.82682800]
[-241.44401550 171.27253723]
[-228.18730164 179.45161438]
[-213.55462646 176.15242004]
[-207.69818115 171.59584045]
[-198.62112427 172.93009949]
[-183.92997742 169.90185547]
[-179.36976624 155.72193909]
[-168.25019836 145.66156006]
[-153.49043274 142.49682617]
[-139.03338623 147.17558289]
[-128.79252625 158.53656006]
[-114.10137939 155.50833130]
[-99.41023254 152.48008728]
[-84.71908569 149.45185852]
[-70.02793884 146.42361450]
[-55.33679581 143.39538574]
[-42.89561844 131.04232788]
[-25.46826935 136.93310547]
[-10.83558846 133.63391113]
[3.79709053 130.33471680]
[18.42976952 127.03551483]
[33.06245041 123.73632050]
[39.84185410 117.06684875]
[50.55582428 117.32854462]
[63.85742950 110.39548492]
[77.15903473 103.46242523]
[90.46063995 96.52936554]
[95.60916901 90.28298950]
[104.07272339 89.59366608]
[117.50016785 82.90759277]
[130.92762756 76.22151184]
[144.35507202 69.53543854]
[157.78251648 62.84936523]
[171.20996094 56.16328812]
[184.63742065 49.47721481]
[185.90754700 35.72986603]
[193.75082397 24.50020981]
[206.02493286 18.66828156]
[219.46881104 19.66483307]
[230.56895447 27.12190437]
[244.11766052 20.68509483]
[257.66638184 14.24828529]
[271.21508789 7.81147671]
[284.76379395 1.37466741]
[290.14468384 -13.24326038]
[303.97668457 -19.57809448]
[317.87948608 -14.35815525]
[331.42819214 -20.79496384]
[344.97689819 -27.23177338]
[345.09564209 -38.76141739]
[349.50607300 -49.35910416]
[357.53002930 -57.49549484]
[367.97088623 -62.01212311]
[379.29202271 -62.28626633]
[389.84292603 -58.31652451]
[398.09985352 -50.71739197]
[411.98443604 -56.39355850]
[425.86898804 -62.06972504]
[439.75354004 -67.74588776]
[453.63812256 -73.42205811]
[467.52267456 -79.09822083]
[481.40725708 -84.77439117]
[495.29180908 -90.45055389]
[509.17636108 -96.12671661]
[515.96820068 -102.29476166]
[523.37036133 -101.77687073]
[537.35742188 -107.19549561]
[544.26202393 -113.23698425]
[551.65338135 -112.58238983]
[565.73815918 -117.74162292]
[579.82299805 -122.90085602]
[593.90783691 -128.06008911]
[601.93530273 -141.95036316]
[617.82092285 -144.19210815]
[629.37872314 -133.06565857]
[627.74243164 -117.10626221]
[614.16735840 -108.55661774]
[599.06707764 -113.97526550]
[584.98223877 -108.81603241]
[570.89739990 -103.65679932]
[556.81262207 -98.49756622]
[542.77606201 -93.20841217]
[528.78894043 -87.78978729]
[514.85253906 -82.24215698]
[500.96798706 -76.56598663]
[487.08340454 -70.88982391]
[473.19885254 -65.21365356]
[459.31427002 -59.53749084]
[445.42971802 -53.86132431]
[431.54516602 -48.18516159]
[417.66058350 -42.50899506]
[403.77603149 -36.83282852]
[400.42532349 -18.48630524]
[386.61563110 -5.73060083]
[367.76406860 -3.81373310]
[351.41372681 -13.68306541]
[337.86502075 -7.24625683]
[324.31628418 -0.80944753]
[319.58026123 13.26555061]
[305.93164062 19.98639679]
[291.20059204 14.92337513]
[277.65188599 21.36018372]
[264.10317993 27.79699326]
[250.55447388 34.23380280]
[237.00576782 40.67061234]
[234.51884460 56.87873077]
[222.75326538 68.53758240]
[206.19465637 70.92408752]
[191.32348633 62.90466309]
[177.89604187 69.59073639]
[164.46859741 76.27681732]
[151.04113770 82.96289062]
[137.61369324 89.64896393]
[124.18624878 96.33503723]
[110.75879669 103.02111816]
[97.39369965 109.83097076]
[84.09209442 116.76403046]
[70.79048920 123.69709015]
[57.48888397 130.63014221]
[72.41501617 132.11691284]
[85.86837006 138.75071716]
[96.13520050 149.68653870]
[101.90770721 163.53132629]
[102.45055389 178.52149963]
[97.69460297 192.74755859]
[88.24567413 204.39735413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 65]
[9 64]
[10 63]
[11 62]
[12 61]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[25 49]
[26 48]
[27 46]
[28 45]
[31 42]
[32 41]
[33 40]
[67 162]
[68 161]
[69 160]
[70 159]
[72 158]
[73 157]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[83 148]
[84 147]
[85 146]
[86 145]
[87 144]
[90 141]
[91 140]
[92 139]
[99 135]
[100 134]
[101 133]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[109 126]
[110 125]
[112 124]
[113 123]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
