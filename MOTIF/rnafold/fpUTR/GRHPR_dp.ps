%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GRHPR)
} def

/sequence { (\
GCUUCUGUACUGCCAGGUCCGGGUCGGCGGCUGCACUGCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.061644314 ubox
1 13 0.007177762 ubox
1 24 0.004665765 ubox
1 28 0.073578422 ubox
1 31 0.076456196 ubox
1 34 0.075377729 ubox
1 39 0.611366198 ubox
2 7 0.063877796 ubox
2 12 0.007204969 ubox
2 23 0.005087188 ubox
2 27 0.073624854 ubox
2 30 0.077482499 ubox
2 33 0.075423859 ubox
2 38 0.611233689 ubox
2 41 0.022662353 ubox
3 22 0.003819248 ubox
3 26 0.070278289 ubox
3 29 0.076021716 ubox
3 40 0.021485503 ubox
3 41 0.006068755 ubox
4 17 0.011547565 ubox
4 23 0.067487314 ubox
4 40 0.005876747 ubox
4 41 0.035183618 ubox
5 16 0.016287945 ubox
5 22 0.078242779 ubox
5 23 0.006117304 ubox
5 27 0.077509863 ubox
5 30 0.075707890 ubox
5 40 0.055903830 ubox
5 41 0.718849383 ubox
6 15 0.016341603 ubox
6 21 0.078287787 ubox
6 22 0.005198656 ubox
6 26 0.077627634 ubox
6 29 0.075751926 ubox
6 35 0.584354271 ubox
6 40 0.740789683 ubox
7 14 0.016190146 ubox
7 20 0.077970122 ubox
7 25 0.077801111 ubox
7 28 0.075717100 ubox
7 31 0.005695395 ubox
7 34 0.626120921 ubox
7 36 0.007640288 ubox
7 39 0.754740278 ubox
8 27 0.073530719 ubox
8 30 0.004039894 ubox
8 33 0.625882575 ubox
8 35 0.007163786 ubox
8 38 0.754269962 ubox
9 18 0.077007627 ubox
9 24 0.019108148 ubox
9 32 0.619089744 ubox
9 37 0.731426937 ubox
10 16 0.004902902 ubox
10 17 0.078476081 ubox
10 22 0.074736449 ubox
10 23 0.019228781 ubox
10 27 0.017213719 ubox
10 30 0.626460443 ubox
10 41 0.120486575 ubox
11 15 0.004614657 ubox
11 16 0.076437140 ubox
11 21 0.074588566 ubox
11 22 0.014351560 ubox
11 26 0.019870727 ubox
11 29 0.626419054 ubox
11 33 0.003345226 ubox
11 35 0.745984694 ubox
11 40 0.122370774 ubox
12 18 0.008769543 ubox
12 20 0.073253335 ubox
12 24 0.041440035 ubox
12 25 0.020578255 ubox
12 28 0.626977391 ubox
12 31 0.063908006 ubox
12 34 0.753691055 ubox
12 39 0.123443215 ubox
13 17 0.011310694 ubox
13 22 0.061988811 ubox
13 23 0.047215312 ubox
13 27 0.626969002 ubox
13 30 0.064115736 ubox
13 33 0.679805899 ubox
13 38 0.096573198 ubox
13 41 0.003368857 ubox
14 21 0.062238973 ubox
14 22 0.047088227 ubox
14 26 0.625296236 ubox
14 29 0.063879539 ubox
14 33 0.324493177 ubox
14 38 0.077451112 ubox
14 40 0.003433734 ubox
15 32 0.451051605 ubox
15 37 0.109031935 ubox
16 25 0.489206460 ubox
16 31 0.428993427 ubox
16 32 0.548516236 ubox
16 36 0.108945591 ubox
16 37 0.024731645 ubox
17 24 0.380366608 ubox
17 28 0.120218219 ubox
17 31 0.606002597 ubox
17 34 0.107441029 ubox
17 36 0.027315304 ubox
18 23 0.123930115 ubox
18 27 0.076289682 ubox
18 30 0.132631550 ubox
18 33 0.103151730 ubox
18 35 0.027413304 ubox
19 26 0.075050897 ubox
19 27 0.199289094 ubox
19 29 0.082644396 ubox
19 30 0.726773467 ubox
19 41 0.010834898 ubox
20 26 0.201959042 ubox
20 29 0.731161024 ubox
20 33 0.028092207 ubox
20 40 0.011079701 ubox
21 25 0.189472591 ubox
21 28 0.732334996 ubox
21 32 0.027879637 ubox
21 39 0.010921064 ubox
22 31 0.027298730 ubox
22 32 0.019843304 ubox
22 37 0.009163532 ubox
23 31 0.020934569 ubox
23 36 0.010161160 ubox
24 30 0.021717091 ubox
24 35 0.009977125 ubox
24 41 0.007971450 ubox
25 29 0.021053171 ubox
25 33 0.009277342 ubox
25 40 0.012976420 ubox
26 32 0.009225721 ubox
26 39 0.009294235 ubox
27 31 0.009029601 ubox
27 34 0.007460574 ubox
27 39 0.026632941 ubox
28 33 0.007468048 ubox
28 38 0.028213035 ubox
29 37 0.028260425 ubox
29 39 0.003285299 ubox
30 36 0.028183551 ubox
30 39 0.050884925 ubox
31 38 0.051026376 ubox
31 41 0.069850457 ubox
32 40 0.085626348 ubox
33 39 0.092874271 ubox
34 38 0.092215234 ubox
5 41 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
11 35 0.9500000 lbox
12 34 0.9500000 lbox
13 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
showpage
end
%%EOF
