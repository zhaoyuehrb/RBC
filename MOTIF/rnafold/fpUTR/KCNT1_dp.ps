%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:50:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KCNT1)
} def

/sequence { (\
AGGGCAACGCGAGGGAAGAAGGUGGCGGCUCCCACUCGCUUCUCCCUCGGGUCGGGUCCGAGCUGCCAGGCCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 53 0.005587914 ubox
2 58 0.017163166 ubox
2 59 0.972900819 ubox
2 67 0.007283432 ubox
2 72 0.011272436 ubox
3 53 0.010534352 ubox
3 57 0.016136425 ubox
3 58 0.980780594 ubox
3 59 0.034745978 ubox
3 64 0.004306792 ubox
3 66 0.005791391 ubox
3 67 0.087748704 ubox
3 71 0.008888690 ubox
3 72 0.117375715 ubox
4 10 0.003972319 ubox
4 52 0.007055428 ubox
4 57 0.980585859 ubox
4 58 0.034777724 ubox
4 63 0.005256976 ubox
4 66 0.088091554 ubox
4 71 0.117561277 ubox
4 74 0.028584667 ubox
5 9 0.003845502 ubox
5 51 0.005444981 ubox
5 56 0.980860294 ubox
5 62 0.005262074 ubox
5 65 0.088179445 ubox
5 70 0.117527064 ubox
5 73 0.028882532 ubox
6 64 0.081280683 ubox
7 52 0.949954686 ubox
8 51 0.985569456 ubox
8 54 0.066257053 ubox
8 65 0.004784231 ubox
8 73 0.004056395 ubox
9 52 0.008921717 ubox
9 53 0.066097844 ubox
9 63 0.005771855 ubox
9 64 0.003303169 ubox
9 66 0.062299065 ubox
9 74 0.005436465 ubox
10 49 0.997415690 ubox
10 51 0.012139065 ubox
10 62 0.005596134 ubox
10 65 0.062027143 ubox
10 73 0.005269343 ubox
11 48 0.999841171 ubox
11 64 0.011073611 ubox
12 47 0.999725483 ubox
13 44 0.016277890 ubox
13 45 0.021214638 ubox
13 46 0.999605011 ubox
14 43 0.023835426 ubox
14 44 0.029172680 ubox
14 45 0.999237783 ubox
15 42 0.077574438 ubox
15 43 0.003452559 ubox
15 44 0.996831464 ubox
15 45 0.003889410 ubox
16 41 0.121687663 ubox
16 43 0.719375173 ubox
17 40 0.249375450 ubox
17 41 0.025272993 ubox
17 43 0.678568368 ubox
18 37 0.003241612 ubox
18 39 0.260792931 ubox
18 40 0.014154656 ubox
18 41 0.053629846 ubox
18 42 0.961370820 ubox
19 40 0.054689829 ubox
19 41 0.954290709 ubox
20 36 0.007194981 ubox
20 40 0.944033238 ubox
20 41 0.122336806 ubox
20 43 0.005476201 ubox
21 35 0.006043383 ubox
21 36 0.368550530 ubox
21 37 0.084284858 ubox
21 39 0.896009897 ubox
21 40 0.167451778 ubox
21 42 0.008879999 ubox
21 43 0.007510496 ubox
21 72 0.003492621 ubox
22 29 0.003238215 ubox
22 35 0.681676498 ubox
22 36 0.016363509 ubox
22 39 0.221533547 ubox
22 41 0.007434494 ubox
22 42 0.012221713 ubox
22 71 0.003498110 ubox
23 28 0.003204268 ubox
23 34 0.682570143 ubox
23 38 0.263375221 ubox
23 68 0.003728157 ubox
24 32 0.022610006 ubox
24 33 0.682749832 ubox
24 36 0.671430241 ubox
24 37 0.267484732 ubox
24 40 0.041005379 ubox
24 67 0.005263102 ubox
25 31 0.030549488 ubox
25 32 0.677471627 ubox
25 35 0.720909606 ubox
25 36 0.086114628 ubox
25 39 0.046782668 ubox
25 66 0.005306200 ubox
26 38 0.048120347 ubox
26 65 0.005306284 ubox
27 33 0.726063013 ubox
27 36 0.018978014 ubox
27 37 0.047861327 ubox
27 64 0.005302489 ubox
28 32 0.714520366 ubox
28 35 0.032771126 ubox
28 36 0.035463622 ubox
28 63 0.005306522 ubox
29 62 0.005306518 ubox
30 61 0.005304769 ubox
31 60 0.005274783 ubox
34 57 0.005164581 ubox
35 56 0.005264195 ubox
36 55 0.005261028 ubox
37 54 0.005263277 ubox
38 53 0.005213446 ubox
46 62 0.013546449 ubox
47 61 0.013964940 ubox
48 60 0.014189125 ubox
49 59 0.014901720 ubox
49 64 0.058370423 ubox
50 58 0.014890309 ubox
50 59 0.011243487 ubox
50 63 0.078567373 ubox
50 64 0.010275579 ubox
50 67 0.041879779 ubox
50 72 0.103721212 ubox
51 57 0.012185104 ubox
51 58 0.011260168 ubox
51 63 0.011631978 ubox
51 66 0.041927342 ubox
51 71 0.103817997 ubox
52 56 0.003451710 ubox
52 61 0.090147965 ubox
52 62 0.006205846 ubox
52 65 0.015393953 ubox
52 70 0.103778631 ubox
53 60 0.102726651 ubox
53 65 0.045968018 ubox
53 69 0.110506144 ubox
53 73 0.017634057 ubox
54 59 0.101547942 ubox
54 64 0.046895974 ubox
54 67 0.043609886 ubox
54 72 0.017606211 ubox
55 63 0.047065467 ubox
55 64 0.024701675 ubox
55 66 0.043366602 ubox
55 67 0.122134196 ubox
55 71 0.016416152 ubox
55 72 0.046453501 ubox
56 63 0.031603030 ubox
56 66 0.122552191 ubox
56 71 0.046883366 ubox
57 62 0.030489251 ubox
57 65 0.119113896 ubox
57 70 0.030123043 ubox
58 69 0.029633245 ubox
58 70 0.039015330 ubox
59 65 0.012787473 ubox
59 69 0.039341692 ubox
59 73 0.120373023 ubox
60 64 0.010161810 ubox
60 72 0.641406490 ubox
62 71 0.897420689 ubox
62 74 0.353603795 ubox
63 69 0.047500341 ubox
63 70 0.898256035 ubox
63 73 0.356384753 ubox
64 68 0.045450877 ubox
64 69 0.874887834 ubox
64 73 0.014324330 ubox
65 71 0.356998046 ubox
65 72 0.026844148 ubox
65 74 0.069615683 ubox
66 70 0.354795636 ubox
66 73 0.070303029 ubox
2 59 0.9500000 lbox
3 58 0.9500000 lbox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
7 52 0.9500000 lbox
8 51 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
15 44 0.9500000 lbox
16 43 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
24 36 0.9500000 lbox
25 35 0.9500000 lbox
27 33 0.9500000 lbox
28 32 0.9500000 lbox
62 71 0.9500000 lbox
63 70 0.9500000 lbox
64 69 0.9500000 lbox
showpage
end
%%EOF
