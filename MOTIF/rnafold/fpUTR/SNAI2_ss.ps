%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACGGGCUCAGUUCGUAAAGGAGCCGGGUGACUUCAGAGGCGCCGGCCCGUCCGUCUGCCGCACCUGAGCACGGCCCCUGCCCGAGCCUGGCCCGCCGCGAUGCUGUAGGGACCGCCGUGUCCUCCCGCCGGACCGUUAUCCGCGCCGGGCGCCCGCCAGACCCGCUGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[61.48146439 194.48751831]
[61.01579285 179.49475098]
[68.62015533 166.56518555]
[81.94962311 159.68585205]
[96.89385223 160.97808838]
[108.84540558 170.04454041]
[105.39581299 155.44657898]
[101.94622803 140.84861755]
[98.49663544 126.25067139]
[78.67292786 115.37899780]
[74.61792755 93.13648224]
[61.85638428 85.25339508]
[49.09484100 77.37030792]
[36.33330154 69.48722076]
[23.50191307 61.71833801]
[10.60169888 54.06428909]
[-2.29851460 46.41023636]
[-15.19872856 38.75618744]
[-29.39674759 44.73300934]
[-44.21843719 41.24433136]
[-54.02780151 29.83203888]
[-55.22188950 15.00934887]
[-68.12210083 7.35529804]
[-77.13120270 5.65820646]
[-81.18252563 -0.55225235]
[-93.94406891 -8.43533993]
[-106.70561218 -16.31842613]
[-119.46714783 -24.20151329]
[-132.22869873 -32.08460236]
[-144.99023438 -39.96768951]
[-157.75177002 -47.85077667]
[-170.62345886 -39.72175598]
[-185.68678284 -37.99451447]
[-199.94792175 -42.95842361]
[-210.59585571 -53.57833481]
[-215.55645752 -67.70992279]
[-213.89634705 -82.53252411]
[-226.65789795 -90.41561127]
[-239.41943359 -98.29869843]
[-248.39680481 -100.15632629]
[-252.33663940 -106.43811035]
[-264.95544434 -114.54772186]
[-273.89822388 -116.56528473]
[-277.72531128 -122.91638947]
[-290.19735718 -131.24993896]
[-302.66940308 -139.58349609]
[-315.14144897 -147.91705322]
[-327.68734741 -156.13896179]
[-340.30615234 -164.24856567]
[-358.62139893 -159.50392151]
[-374.33764648 -169.45414734]
[-377.76303101 -187.41314697]
[-390.66326904 -195.06719971]
[-406.47970581 -195.45481873]
[-413.47723389 -208.60336304]
[-426.37744141 -216.25741577]
[-442.21520996 -213.69903564]
[-453.99273682 -224.59257507]
[-452.67532349 -240.58145142]
[-439.27359009 -249.40034485]
[-424.06817627 -244.28417969]
[-418.72338867 -229.15762329]
[-405.82318115 -221.50357056]
[-390.92944336 -221.66342163]
[-383.00921631 -207.96740723]
[-370.10900879 -200.31335449]
[-359.89270020 -205.47627258]
[-348.33383179 -205.04721069]
[-338.32269287 -199.01722717]
[-332.41873169 -188.79235840]
[-332.19656372 -176.86737061]
[-319.57775879 -168.75776672]
[-312.22698975 -167.78350830]
[-306.80789185 -160.38909912]
[-294.33584595 -152.05554199]
[-281.86380005 -143.72198486]
[-269.39175415 -135.38842773]
[-256.84582520 -127.16652679]
[-244.22702026 -119.05691528]
[-231.53634644 -111.06024170]
[-218.77481079 -103.17715454]
[-206.01325989 -95.29406738]
[-193.50160217 -103.41342163]
[-178.64433289 -105.30307007]
[-164.38154602 -100.53507233]
[-153.55915833 -90.00434113]
[-148.36109924 -75.76119995]
[-149.86868286 -60.61231613]
[-137.10714722 -52.72922897]
[-124.34560394 -44.84614182]
[-111.58406067 -36.96305466]
[-98.82252502 -29.07996750]
[-86.06098175 -21.19688034]
[-73.29943848 -13.31379318]
[-60.46805191 -5.54491520]
[-47.56783676 2.10913515]
[-33.98600769 -3.94659853]
[-19.26855278 -0.80645704]
[-9.10333252 10.53028297]
[-7.54467773 25.85597420]
[5.35553598 33.51002502]
[18.25574875 41.16407394]
[31.15596390 48.81812668]
[38.53682709 49.52938843]
[44.21638870 56.72567749]
[56.97792816 64.60876465]
[69.73947144 72.49185181]
[82.50101471 80.37493896]
[93.54483032 71.88969421]
[108.57659149 69.80416107]
[123.84922028 75.85384369]
[137.14062500 68.90123749]
[150.43202209 61.94863129]
[163.72341919 54.99602890]
[177.01481628 48.04342651]
[181.49758911 32.88821411]
[195.42343140 25.41516685]
[210.53039551 30.05790901]
[217.85578918 44.06198120]
[213.05358887 59.11902237]
[198.97285461 66.29595184]
[183.96742249 61.33482361]
[170.67602539 68.28742981]
[157.38462830 75.24003601]
[144.09323120 82.19263458]
[130.80183411 89.14524078]
[132.40525818 104.05929565]
[146.87078857 108.02771759]
[161.33631897 111.99614716]
[175.83668518 115.83531189]
[190.37074280 119.54490662]
[204.93733215 123.12464142]
[219.53529358 126.57423401]
[234.13325500 130.02381897]
[248.73120117 133.47340393]
[262.04360962 124.95544434]
[277.46185303 128.42718506]
[285.83859253 141.82888794]
[282.20404053 157.20957947]
[268.71450806 165.44415283]
[253.37312317 161.64720154]
[245.28161621 148.07136536]
[230.68367004 144.62178040]
[216.08570862 141.17218018]
[201.48774719 137.72259521]
[194.23156738 139.24934387]
[186.66114807 134.07896423]
[172.12709045 130.36936951]
[164.84481812 131.76634216]
[157.36788940 126.46167755]
[142.90235901 122.49324799]
[128.43682861 118.52482605]
[120.68988800 121.88395691]
[113.09459686 122.80107880]
[116.54418182 137.39903259]
[119.99377441 151.99699402]
[123.44335938 166.59495544]
[128.05314636 180.86904907]
[133.79339600 194.72724915]
[139.53364563 208.58543396]
[145.27389526 222.44363403]
[151.01414490 236.30181885]
[165.22608948 243.74494934]
[168.12623596 259.52368164]
[157.48983765 271.53393555]
[141.47621155 270.56250000]
[132.36967468 257.35452271]
[137.15596008 242.04206848]
[131.41571045 228.18388367]
[125.67545319 214.32568359]
[119.93520355 200.46749878]
[114.19494629 186.60929871]
[109.80459595 200.95240784]
[98.43949890 210.74192810]
[83.60426331 212.95910645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 157]
[7 156]
[8 155]
[9 154]
[11 108]
[12 107]
[13 106]
[14 105]
[15 103]
[16 102]
[17 101]
[18 100]
[22 96]
[23 95]
[25 94]
[26 93]
[27 92]
[28 91]
[29 90]
[30 89]
[31 88]
[37 82]
[38 81]
[39 80]
[41 79]
[42 78]
[44 77]
[45 76]
[46 75]
[47 74]
[48 72]
[49 71]
[52 66]
[53 65]
[55 63]
[56 62]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[127 152]
[128 151]
[129 150]
[130 148]
[131 147]
[132 145]
[133 144]
[134 143]
[135 142]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
