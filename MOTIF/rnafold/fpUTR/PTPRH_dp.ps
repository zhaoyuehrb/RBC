%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PTPRH)
} def

/sequence { (\
UUCUUGAGUGUAAAGUCCAGCAGGUGGAAGGACUAGGCCUGGGACUCCUGGGUCCCCGGCAGUGUCUGGAGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.019882796 ubox
1 8 0.015949193 ubox
1 13 0.009539663 ubox
1 14 0.010678584 ubox
1 15 0.010228594 ubox
1 23 0.018225481 ubox
1 27 0.012425585 ubox
1 28 0.037240151 ubox
1 29 0.289185433 ubox
1 30 0.006742221 ubox
1 32 0.018424868 ubox
1 69 0.009838883 ubox
1 70 0.092999719 ubox
1 71 0.247248182 ubox
1 72 0.021386989 ubox
2 6 0.019364718 ubox
2 7 0.016979911 ubox
2 12 0.009852441 ubox
2 13 0.011019502 ubox
2 14 0.012196264 ubox
2 19 0.003238519 ubox
2 22 0.022116977 ubox
2 23 0.003529844 ubox
2 24 0.009148386 ubox
2 26 0.012840572 ubox
2 27 0.039393626 ubox
2 28 0.332986199 ubox
2 29 0.011080904 ubox
2 31 0.021854789 ubox
2 32 0.016627985 ubox
2 68 0.009685212 ubox
2 69 0.099956716 ubox
2 70 0.304931616 ubox
2 71 0.012431504 ubox
2 72 0.423751525 ubox
3 15 0.305730185 ubox
3 20 0.043900959 ubox
3 23 0.019115228 ubox
3 24 0.063882928 ubox
3 26 0.039449117 ubox
3 27 0.337351816 ubox
3 30 0.045645685 ubox
3 31 0.018603832 ubox
3 36 0.016844522 ubox
3 37 0.004156213 ubox
3 62 0.003671044 ubox
3 68 0.101577863 ubox
3 69 0.310203687 ubox
3 71 0.556365738 ubox
3 72 0.068652261 ubox
4 13 0.074602521 ubox
4 14 0.309238798 ubox
4 15 0.052853630 ubox
4 19 0.043727671 ubox
4 20 0.015756361 ubox
4 22 0.016293217 ubox
4 23 0.067200365 ubox
4 24 0.008207277 ubox
4 26 0.332474346 ubox
4 27 0.011112235 ubox
4 28 0.018141917 ubox
4 29 0.046065018 ubox
4 30 0.018770550 ubox
4 35 0.015995138 ubox
4 36 0.008677952 ubox
4 61 0.003461127 ubox
4 68 0.285709080 ubox
4 69 0.012849341 ubox
4 70 0.555933694 ubox
4 71 0.068645098 ubox
4 72 0.006362446 ubox
5 12 0.088019023 ubox
5 13 0.308449011 ubox
5 14 0.073551767 ubox
5 19 0.021802312 ubox
5 22 0.070047555 ubox
5 23 0.011966387 ubox
5 26 0.025902932 ubox
5 27 0.019650900 ubox
5 28 0.037856671 ubox
5 29 0.019275434 ubox
5 35 0.009634368 ubox
5 36 0.006599374 ubox
5 68 0.024496310 ubox
5 69 0.546628597 ubox
5 70 0.063494020 ubox
5 71 0.006841656 ubox
6 11 0.081948193 ubox
6 17 0.054112459 ubox
6 18 0.020498641 ubox
6 21 0.070363023 ubox
6 25 0.025733570 ubox
6 34 0.006712736 ubox
6 66 0.116721590 ubox
6 67 0.011716266 ubox
7 16 0.056346646 ubox
7 34 0.038093424 ubox
7 65 0.108392380 ubox
7 67 0.476171662 ubox
8 16 0.006979271 ubox
8 21 0.038968938 ubox
8 25 0.008451827 ubox
8 33 0.041407153 ubox
8 63 0.008705239 ubox
8 65 0.004993292 ubox
8 66 0.423026491 ubox
8 73 0.031626845 ubox
9 15 0.027583491 ubox
9 19 0.067696481 ubox
9 20 0.037013219 ubox
9 22 0.342743125 ubox
9 32 0.041288291 ubox
9 35 0.022426547 ubox
9 37 0.003438514 ubox
9 61 0.015597327 ubox
9 62 0.014037745 ubox
9 64 0.115802978 ubox
9 68 0.011070928 ubox
9 72 0.030847658 ubox
10 16 0.006508089 ubox
10 18 0.068522871 ubox
10 21 0.346261473 ubox
10 33 0.129013378 ubox
10 34 0.015964829 ubox
10 38 0.004366746 ubox
10 60 0.011497080 ubox
10 63 0.074959152 ubox
10 65 0.047706860 ubox
10 67 0.004670225 ubox
10 73 0.037704318 ubox
11 15 0.011429482 ubox
11 20 0.344725720 ubox
11 32 0.128565330 ubox
11 35 0.020406710 ubox
11 37 0.004493993 ubox
11 59 0.009795646 ubox
11 62 0.046975247 ubox
11 64 0.106622138 ubox
11 68 0.009462965 ubox
11 72 0.036783298 ubox
12 34 0.014578131 ubox
12 63 0.099410101 ubox
12 67 0.007314802 ubox
14 34 0.375197895 ubox
14 46 0.008171702 ubox
14 67 0.005802200 ubox
15 21 0.016305352 ubox
15 25 0.009451698 ubox
15 33 0.389630100 ubox
15 45 0.008674817 ubox
15 60 0.003187040 ubox
15 66 0.003718849 ubox
15 73 0.027786478 ubox
16 20 0.015284920 ubox
16 24 0.003982594 ubox
16 27 0.005045477 ubox
16 28 0.763016676 ubox
16 32 0.389217492 ubox
16 44 0.008692071 ubox
16 70 0.197253293 ubox
16 72 0.019884476 ubox
17 23 0.006864777 ubox
17 24 0.044307396 ubox
17 26 0.005608065 ubox
17 27 0.814455430 ubox
17 31 0.388978578 ubox
17 42 0.003605810 ubox
17 43 0.008700640 ubox
17 69 0.211271428 ubox
17 71 0.012261439 ubox
17 72 0.031234168 ubox
18 23 0.045381865 ubox
18 26 0.814830080 ubox
18 30 0.388498622 ubox
18 41 0.003711351 ubox
18 42 0.008621291 ubox
18 68 0.211376052 ubox
18 71 0.031590652 ubox
19 25 0.799693043 ubox
19 40 0.003791573 ubox
19 67 0.205175921 ubox
20 38 0.003370033 ubox
20 63 0.005358964 ubox
20 65 0.027299899 ubox
20 66 0.197081697 ubox
20 73 0.027033094 ubox
21 37 0.004337391 ubox
21 41 0.009272186 ubox
21 62 0.009316019 ubox
21 64 0.187238600 ubox
21 68 0.031279217 ubox
21 72 0.027322226 ubox
22 34 0.012686886 ubox
22 40 0.009642135 ubox
22 63 0.170428994 ubox
22 67 0.027579621 ubox
23 33 0.014580126 ubox
23 34 0.166879398 ubox
23 39 0.009731974 ubox
23 66 0.023302390 ubox
24 33 0.173147482 ubox
24 38 0.009731842 ubox
24 60 0.015125884 ubox
24 65 0.016596273 ubox
24 73 0.098703850 ubox
25 32 0.172167177 ubox
25 35 0.031121543 ubox
25 37 0.009430823 ubox
25 58 0.015277238 ubox
25 59 0.012633615 ubox
25 61 0.024375776 ubox
25 64 0.009884606 ubox
25 68 0.012186893 ubox
25 72 0.100738918 ubox
26 34 0.034365813 ubox
26 57 0.017495379 ubox
26 60 0.023999028 ubox
26 63 0.006618983 ubox
26 67 0.011424785 ubox
27 33 0.034575036 ubox
27 56 0.017243195 ubox
27 66 0.011795291 ubox
28 65 0.011611762 ubox
29 40 0.008332762 ubox
29 67 0.102956567 ubox
30 39 0.008590880 ubox
30 55 0.016864779 ubox
30 56 0.017851366 ubox
30 57 0.018573681 ubox
30 66 0.092622851 ubox
30 67 0.769987716 ubox
31 38 0.008570508 ubox
31 54 0.016831506 ubox
31 55 0.017973964 ubox
31 56 0.018530843 ubox
31 65 0.070126081 ubox
31 66 0.861508686 ubox
32 53 0.015764184 ubox
32 63 0.133897730 ubox
32 65 0.870670370 ubox
33 51 0.007365771 ubox
33 52 0.013043834 ubox
33 62 0.138523177 ubox
33 64 0.871326672 ubox
33 69 0.045851590 ubox
33 71 0.003215989 ubox
34 50 0.010245326 ubox
34 51 0.008402425 ubox
34 61 0.128574436 ubox
34 64 0.039188707 ubox
34 68 0.046749127 ubox
35 49 0.012520517 ubox
35 63 0.092442777 ubox
35 67 0.047465561 ubox
36 48 0.012806335 ubox
36 54 0.033922903 ubox
36 55 0.011988241 ubox
36 66 0.047576645 ubox
37 47 0.012690937 ubox
37 53 0.035908572 ubox
37 54 0.011942508 ubox
37 60 0.997842727 ubox
37 65 0.029284572 ubox
37 73 0.014881220 ubox
38 51 0.006093428 ubox
38 52 0.038372988 ubox
38 59 0.998442390 ubox
38 64 0.028792922 ubox
38 69 0.005067901 ubox
38 72 0.015116807 ubox
39 50 0.006267707 ubox
39 51 0.038516637 ubox
39 58 0.997680657 ubox
39 59 0.016357605 ubox
39 62 0.024842471 ubox
39 68 0.005102282 ubox
39 71 0.015110572 ubox
40 50 0.038368490 ubox
40 58 0.017986139 ubox
40 61 0.024611578 ubox
40 70 0.014786129 ubox
41 48 0.007267290 ubox
41 49 0.038266133 ubox
41 56 0.997283405 ubox
41 57 0.041435882 ubox
41 60 0.012184984 ubox
41 66 0.010434436 ubox
41 67 0.004387003 ubox
42 47 0.007272701 ubox
42 48 0.038421519 ubox
42 55 0.998406213 ubox
42 56 0.033935703 ubox
42 65 0.010686107 ubox
42 66 0.004581216 ubox
42 67 0.008658858 ubox
43 47 0.037801392 ubox
43 54 0.998690135 ubox
43 55 0.024142227 ubox
43 65 0.004138068 ubox
43 66 0.008805651 ubox
44 53 0.998816445 ubox
44 63 0.012329211 ubox
44 65 0.008680512 ubox
45 51 0.031842543 ubox
45 52 0.997948539 ubox
45 62 0.012501574 ubox
45 64 0.008513878 ubox
46 50 0.040113395 ubox
46 51 0.917352055 ubox
46 52 0.014111948 ubox
46 61 0.012379692 ubox
47 51 0.112152884 ubox
47 59 0.003969602 ubox
48 58 0.003951992 ubox
48 59 0.015366060 ubox
49 58 0.015443510 ubox
50 57 0.015812486 ubox
51 56 0.015759077 ubox
52 73 0.005919141 ubox
53 72 0.005755591 ubox
54 71 0.006099927 ubox
54 72 0.010287792 ubox
55 69 0.008760849 ubox
55 71 0.013537664 ubox
56 68 0.008772282 ubox
56 69 0.021762858 ubox
56 72 0.009748082 ubox
57 68 0.022167803 ubox
57 71 0.009929311 ubox
58 66 0.011456953 ubox
58 67 0.021275007 ubox
59 65 0.011625998 ubox
59 66 0.021018205 ubox
60 64 0.014788205 ubox
60 68 0.012449608 ubox
61 67 0.015882254 ubox
62 66 0.016174267 ubox
62 73 0.015341477 ubox
63 72 0.015419065 ubox
64 73 0.041090634 ubox
65 72 0.041380719 ubox
66 71 0.041121047 ubox
66 72 0.005784369 ubox
67 71 0.006308163 ubox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
30 67 0.9500000 lbox
31 66 0.9500000 lbox
32 65 0.9500000 lbox
33 64 0.9500000 lbox
37 60 0.9500000 lbox
38 59 0.9500000 lbox
39 58 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
