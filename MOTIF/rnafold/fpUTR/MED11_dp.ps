%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED11)
} def

/sequence { (\
GCAGGCGCACACCGAGAGCCACUUCCGGAACAAGCGUCGCGUUUCUGAGGAGAAACUCUUGGUGAGAAUUCCCAGAGUGAUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.613233917 ubox
1 40 0.691945938 ubox
1 42 0.068811573 ubox
1 78 0.057823519 ubox
2 7 0.612813492 ubox
2 39 0.690288567 ubox
2 41 0.075441731 ubox
2 47 0.003202550 ubox
2 77 0.059876558 ubox
2 79 0.038990050 ubox
3 46 0.003200971 ubox
3 70 0.018136903 ubox
3 78 0.037275164 ubox
4 20 0.031019977 ubox
4 38 0.703728989 ubox
4 43 0.005232389 ubox
4 69 0.021312252 ubox
4 70 0.015885330 ubox
4 71 0.037033505 ubox
4 72 0.148222221 ubox
4 73 0.132253522 ubox
5 19 0.031063621 ubox
5 35 0.044509663 ubox
5 37 0.706012709 ubox
5 42 0.007553098 ubox
5 69 0.016986363 ubox
5 70 0.034201690 ubox
5 71 0.148675333 ubox
5 72 0.131718230 ubox
5 78 0.016616686 ubox
6 18 0.031054291 ubox
6 34 0.044537015 ubox
6 36 0.706402283 ubox
6 41 0.007792802 ubox
6 77 0.017229367 ubox
6 79 0.064495041 ubox
7 35 0.706437573 ubox
7 40 0.007800260 ubox
7 78 0.064671626 ubox
8 34 0.705426540 ubox
8 39 0.007794834 ubox
8 64 0.007061882 ubox
8 77 0.064598591 ubox
8 79 0.023933851 ubox
9 37 0.006706400 ubox
9 63 0.005141538 ubox
9 78 0.023099752 ubox
10 36 0.006715364 ubox
10 64 0.701507509 ubox
10 77 0.018269626 ubox
11 63 0.704885610 ubox
12 28 0.706712788 ubox
12 62 0.705402775 ubox
13 27 0.707900046 ubox
13 61 0.705392783 ubox
14 24 0.016901563 ubox
14 25 0.054252896 ubox
14 26 0.705033235 ubox
14 60 0.704776668 ubox
15 23 0.045562604 ubox
15 24 0.074799845 ubox
15 59 0.705205573 ubox
16 22 0.049899388 ubox
16 23 0.063716161 ubox
16 24 0.343174355 ubox
16 25 0.599797695 ubox
16 58 0.705408986 ubox
17 23 0.363799986 ubox
17 24 0.584381173 ubox
17 57 0.705208637 ubox
18 22 0.362288729 ubox
18 23 0.427121669 ubox
18 56 0.702998786 ubox
19 28 0.009268688 ubox
19 50 0.004192198 ubox
20 27 0.009274668 ubox
20 49 0.004156333 ubox
22 49 0.005849078 ubox
22 50 0.070151930 ubox
22 52 0.698381637 ubox
23 48 0.005165989 ubox
23 49 0.070414783 ubox
23 50 0.004425981 ubox
23 51 0.700127570 ubox
23 52 0.042018225 ubox
24 47 0.003390043 ubox
24 48 0.070945155 ubox
24 49 0.006958111 ubox
24 50 0.699610318 ubox
24 51 0.050833954 ubox
25 47 0.068984727 ubox
25 49 0.699647548 ubox
25 50 0.054862910 ubox
26 41 0.004780007 ubox
26 47 0.698517474 ubox
26 49 0.053949384 ubox
27 40 0.004962272 ubox
27 45 0.103449431 ubox
27 46 0.696866560 ubox
28 44 0.104344928 ubox
28 45 0.697389095 ubox
29 43 0.148829564 ubox
29 44 0.677473188 ubox
30 37 0.018908394 ubox
30 42 0.182739013 ubox
30 43 0.580976516 ubox
31 36 0.021223785 ubox
31 41 0.210545697 ubox
32 43 0.046803634 ubox
32 44 0.117868811 ubox
33 42 0.061194530 ubox
33 43 0.283104544 ubox
34 40 0.525678931 ubox
34 42 0.438021417 ubox
34 43 0.006016910 ubox
35 39 0.522196508 ubox
35 41 0.440383960 ubox
36 40 0.412045008 ubox
36 81 0.043914913 ubox
37 80 0.046664338 ubox
38 79 0.050048705 ubox
39 78 0.053183395 ubox
40 77 0.052882050 ubox
40 79 0.037449598 ubox
41 56 0.241170540 ubox
41 78 0.030249122 ubox
41 81 0.160064066 ubox
42 51 0.005393594 ubox
42 52 0.015809448 ubox
42 53 0.060481371 ubox
42 54 0.015720234 ubox
42 55 0.259807770 ubox
42 76 0.004274484 ubox
42 77 0.031683783 ubox
42 80 0.163840837 ubox
43 50 0.005696731 ubox
43 51 0.019507289 ubox
43 52 0.065389044 ubox
43 53 0.013284593 ubox
43 54 0.369499073 ubox
43 55 0.003343960 ubox
43 76 0.028149812 ubox
43 77 0.419393233 ubox
43 79 0.139725744 ubox
43 80 0.012632948 ubox
44 49 0.004624719 ubox
44 50 0.019845606 ubox
44 51 0.067176742 ubox
44 52 0.005431810 ubox
44 53 0.390914581 ubox
44 54 0.006311597 ubox
44 75 0.003614124 ubox
44 76 0.565601435 ubox
44 79 0.008152892 ubox
44 80 0.005608288 ubox
45 49 0.019411397 ubox
45 50 0.067160350 ubox
45 52 0.393365460 ubox
45 75 0.578667077 ubox
45 77 0.052248324 ubox
45 79 0.005723968 ubox
46 51 0.389444360 ubox
46 74 0.578610011 ubox
46 76 0.052134182 ubox
47 58 0.011896265 ubox
47 73 0.578485505 ubox
48 57 0.011936636 ubox
48 60 0.006174489 ubox
49 56 0.011943644 ubox
49 59 0.006974475 ubox
49 71 0.047564764 ubox
49 72 0.576605475 ubox
49 73 0.053224658 ubox
50 58 0.007179434 ubox
50 70 0.047578424 ubox
50 71 0.576628966 ubox
50 72 0.053589762 ubox
51 57 0.007193953 ubox
51 69 0.050999644 ubox
51 70 0.570858707 ubox
52 56 0.007087934 ubox
52 69 0.492152061 ubox
52 70 0.053081040 ubox
52 71 0.052333671 ubox
53 69 0.092674443 ubox
53 70 0.052725460 ubox
54 69 0.052758156 ubox
54 70 0.009626979 ubox
55 63 0.035954579 ubox
55 69 0.020893040 ubox
55 78 0.301640830 ubox
56 62 0.036139257 ubox
56 66 0.573492876 ubox
56 77 0.325500643 ubox
57 61 0.032559333 ubox
57 65 0.575788260 ubox
57 67 0.066612872 ubox
57 76 0.374000051 ubox
57 80 0.033693998 ubox
58 64 0.575806117 ubox
58 66 0.068237946 ubox
58 75 0.377582992 ubox
58 77 0.060366452 ubox
58 79 0.035826456 ubox
59 65 0.067633790 ubox
59 68 0.004045227 ubox
59 74 0.294993638 ubox
59 75 0.117290948 ubox
59 76 0.052204561 ubox
59 77 0.006259273 ubox
60 64 0.060951097 ubox
60 65 0.004753012 ubox
60 67 0.004123704 ubox
60 74 0.271044505 ubox
60 75 0.032986045 ubox
61 70 0.006875615 ubox
61 71 0.004810469 ubox
61 72 0.185435262 ubox
61 73 0.360071171 ubox
62 69 0.008166897 ubox
62 70 0.004561790 ubox
62 71 0.185647927 ubox
62 72 0.359947226 ubox
63 68 0.015779207 ubox
63 74 0.007629182 ubox
64 70 0.050687837 ubox
64 71 0.352698810 ubox
64 73 0.011629459 ubox
64 81 0.003188897 ubox
65 69 0.046261531 ubox
65 70 0.330142088 ubox
68 78 0.381708148 ubox
68 81 0.066388398 ubox
69 75 0.008727242 ubox
69 76 0.028842682 ubox
69 77 0.389988094 ubox
69 80 0.068309503 ubox
70 74 0.009873853 ubox
70 75 0.028754836 ubox
70 76 0.396769773 ubox
70 79 0.066727356 ubox
70 80 0.069461289 ubox
71 75 0.394375005 ubox
71 79 0.074586603 ubox
73 79 0.103767054 ubox
74 78 0.084369630 ubox
1 8 0.9500000 lbox
2 7 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 62 0.9500000 lbox
13 61 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
showpage
end
%%EOF
