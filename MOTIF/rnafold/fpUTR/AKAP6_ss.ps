%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUUUCCCAUAAUGAGCUGCAUCAUCUGAACUGAUGUCACAGCAUCAUGCAGCAGGUCAAACAAGGCAUCUCCUAGUAUUGCAUCCUACAGAUGUGCUGUAAACAUCAAAAGAAGACGGUGGGAUCAGGAGAUGCUGUUUUGGAAAGAAGUGAGGUUUAGACUUCUCC\
) } def
/len { sequence length } bind def

/coor [
[108.79244232 241.13468933]
[113.28576660 230.57405090]
[121.44479370 222.42968750]
[116.57430267 208.24241638]
[111.70381165 194.05516052]
[106.83332062 179.86790466]
[101.96282959 165.68064880]
[97.09233856 151.49339294]
[92.22183990 137.30612183]
[96.80695343 151.58818054]
[92.57491302 165.97879028]
[80.98821259 175.50497437]
[66.05088043 176.87475586]
[52.92486191 169.61474609]
[46.14614105 156.23384094]
[48.05725479 141.35607910]
[57.99777603 130.12283325]
[72.53289032 126.41599274]
[57.92669296 129.83052063]
[43.32049561 133.24505615]
[28.71429825 136.65959167]
[14.10810184 140.07411194]
[-0.49809533 143.48864746]
[13.15887451 149.69244385]
[21.98295021 161.82240295]
[23.68081093 176.72599792]
[17.81119156 190.52989197]
[5.89956903 199.64654541]
[-8.95829868 201.70658875]
[-22.90094566 196.17462158]
[-32.30476761 184.48838806]
[-34.72576523 169.68504333]
[-29.53474426 155.61190796]
[-18.08175278 145.92692566]
[-33.06593323 146.61563110]
[-48.05011749 147.30433655]
[-63.03429794 147.99304199]
[-78.01847839 148.68174744]
[-93.00266266 149.37045288]
[-106.51399994 158.66430664]
[-121.19997406 151.36677551]
[-121.95291901 134.98490906]
[-107.99826050 126.37099457]
[-93.69136047 134.38627625]
[-78.70718384 133.69757080]
[-63.72299957 133.00886536]
[-48.73881912 132.32015991]
[-33.75463867 131.63145447]
[-18.77045631 130.94274902]
[-3.91262555 128.88244629]
[10.69357109 125.46791840]
[25.29976845 122.05339050]
[39.90596390 118.63885498]
[54.51216125 115.22432709]
[69.11835480 111.80979919]
[68.23458099 99.83484650]
[71.65579224 88.82137299]
[78.57817078 80.19820404]
[87.76957703 74.95130920]
[97.77651978 73.51500702]
[107.14934540 75.75071716]
[115.46857452 63.26911163]
[123.78779602 50.78750610]
[132.10702515 38.30590057]
[140.42625427 25.82429695]
[141.23870850 19.20091629]
[144.76434326 14.68269730]
[149.28741455 13.04472637]
[158.05953979 0.87715757]
[166.83166504 -11.29041195]
[175.60380554 -23.45798111]
[184.37593079 -35.62554932]
[193.14805603 -47.79311752]
[201.92019653 -59.96068954]
[210.69232178 -72.12825775]
[219.46444702 -84.29582977]
[217.09924316 -94.96161652]
[220.93594360 -104.95526886]
[229.47282410 -111.04232025]
[239.73141479 -111.39710999]
[248.94461060 -123.23421478]
[258.15780640 -135.07131958]
[260.52822876 -150.71394348]
[274.45129395 -156.00520325]
[283.66448975 -167.84231567]
[292.87768555 -179.67942810]
[302.09085083 -191.51652527]
[310.75085449 -203.76416016]
[318.83938599 -216.39649963]
[313.34909058 -230.78964233]
[317.34002686 -245.48405457]
[329.07943726 -254.89945984]
[343.93417358 -255.58854675]
[352.02270508 -268.22085571]
[360.11123657 -280.85321045]
[368.19976807 -293.48553467]
[376.28829956 -306.11785889]
[371.44787598 -320.98742676]
[377.34579468 -335.47012329]
[391.19720459 -342.72766113]
[406.46194458 -339.33325195]
[415.93243408 -326.88961792]
[415.13699341 -311.27227783]
[404.45123291 -299.85525513]
[388.92062378 -298.02932739]
[380.83209229 -285.39700317]
[372.74356079 -272.76467896]
[364.65502930 -260.13235474]
[356.56652832 -247.50001526]
[362.15664673 -233.72001648]
[358.51757812 -219.11791992]
[346.84155273 -209.34429932]
[331.47171021 -208.30796814]
[323.38317871 -195.67564392]
[338.37799072 -196.07051086]
[348.17935181 -184.71563721]
[345.59838867 -169.93936157]
[332.52810669 -162.57946777]
[318.55505371 -168.03414917]
[313.92797852 -182.30334473]
[304.71478271 -170.46623230]
[295.50158691 -158.62911987]
[286.28839111 -146.79202271]
[284.57696533 -131.99606323]
[269.99490356 -125.85813141]
[260.78170776 -114.02102661]
[251.56852722 -102.18392181]
[250.36264038 -82.90753937]
[231.63201904 -75.52369690]
[222.85989380 -63.35612869]
[214.08775330 -51.18855667]
[205.31562805 -39.02098846]
[196.54350281 -26.85342026]
[187.77136230 -14.68585110]
[178.99923706 -2.51828170]
[170.22711182 9.64928722]
[161.45497131 21.81685638]
[152.90785217 34.14352417]
[144.58863831 46.62512970]
[136.26940918 59.10673523]
[127.95018005 71.58834076]
[119.63095093 84.06994629]
[127.43319702 109.92096710]
[106.40910339 132.43563843]
[111.27959442 146.62289429]
[116.15008545 160.81015015]
[121.02057648 174.99740601]
[125.89106750 189.18467712]
[130.76156616 203.37193298]
[135.63204956 217.55918884]
[154.12075806 222.35028076]
[165.92930603 237.17120361]
[166.46075439 255.96427917]
[155.68130493 271.18499756]
[161.32594299 285.08239746]
[166.97059631 298.97979736]
[172.61523438 312.87722778]
[178.25987244 326.77462769]
[191.52639771 336.41473389]
[189.54223633 352.69338989]
[174.34852600 358.86453247]
[161.57524109 348.57983398]
[164.36245728 332.41928101]
[158.71781921 318.52185059]
[153.07318115 304.62445068]
[147.42854309 290.72705078]
[141.78390503 276.82962036]
[130.58004761 276.23574829]
[120.36810303 271.46578979]
[112.65199280 263.17968750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[18 55]
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 130]
[76 129]
[80 127]
[81 126]
[82 125]
[84 123]
[85 122]
[86 121]
[87 120]
[88 114]
[89 113]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
