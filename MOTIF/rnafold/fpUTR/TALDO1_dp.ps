%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TALDO1)
} def

/sequence { (\
CGCGCCCGUCCCGUCGCCGCCGCCGCCGCCGCAGACCCCUCGGUCUUGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.053156932 ubox
1 13 0.026083411 ubox
1 16 0.033933945 ubox
1 19 0.073805547 ubox
1 22 0.127998727 ubox
1 25 0.099770150 ubox
1 28 0.130951145 ubox
1 31 0.015738563 ubox
1 48 0.012734202 ubox
2 7 0.053017819 ubox
2 9 0.070254229 ubox
2 12 0.026240091 ubox
2 14 0.172481010 ubox
2 15 0.063048707 ubox
2 17 0.262442698 ubox
2 18 0.075569568 ubox
2 20 0.442243070 ubox
2 21 0.127455561 ubox
2 23 0.341435236 ubox
2 24 0.083729526 ubox
2 26 0.268950777 ubox
2 27 0.129433694 ubox
2 29 0.525618465 ubox
2 30 0.059064425 ubox
2 32 0.100159803 ubox
2 47 0.010427430 ubox
2 49 0.282937840 ubox
3 8 0.073506577 ubox
3 13 0.189534062 ubox
3 16 0.265306268 ubox
3 19 0.447559094 ubox
3 22 0.347987703 ubox
3 25 0.273975851 ubox
3 28 0.527718813 ubox
3 31 0.100316460 ubox
3 48 0.283240770 ubox
4 12 0.186307742 ubox
4 14 0.053655882 ubox
4 15 0.261308106 ubox
4 17 0.140818073 ubox
4 18 0.429990506 ubox
4 20 0.234318401 ubox
4 21 0.286542853 ubox
4 23 0.104809844 ubox
4 24 0.255437386 ubox
4 26 0.249095443 ubox
4 27 0.479220202 ubox
4 29 0.071455243 ubox
4 30 0.097980457 ubox
4 32 0.022131499 ubox
4 44 0.036409490 ubox
4 47 0.266354988 ubox
4 49 0.057983473 ubox
5 13 0.175326703 ubox
5 16 0.180646493 ubox
5 19 0.305065202 ubox
5 22 0.137632261 ubox
5 25 0.328029721 ubox
5 28 0.074660633 ubox
5 31 0.022107504 ubox
5 43 0.034046354 ubox
5 48 0.057986002 ubox
6 42 0.027776537 ubox
6 43 0.279937370 ubox
7 13 0.236631648 ubox
7 16 0.513909550 ubox
7 19 0.131342615 ubox
7 22 0.253211200 ubox
7 25 0.225474144 ubox
7 28 0.073301358 ubox
7 31 0.007377520 ubox
7 42 0.280822814 ubox
8 12 0.223398886 ubox
8 14 0.015749634 ubox
8 15 0.517113675 ubox
8 17 0.189018291 ubox
8 18 0.122967376 ubox
8 20 0.082660070 ubox
8 21 0.253857241 ubox
8 23 0.433488283 ubox
8 24 0.212633406 ubox
8 26 0.111222841 ubox
8 27 0.075272644 ubox
8 29 0.081169372 ubox
8 30 0.018370311 ubox
8 32 0.014418127 ubox
8 36 0.010989869 ubox
8 41 0.280654595 ubox
8 49 0.005816351 ubox
9 13 0.034325000 ubox
9 16 0.187781431 ubox
9 19 0.079833631 ubox
9 22 0.437840414 ubox
9 25 0.107976513 ubox
9 28 0.080641503 ubox
9 31 0.014105454 ubox
9 35 0.012271094 ubox
9 48 0.005509280 ubox
10 34 0.012261748 ubox
10 43 0.004982527 ubox
11 42 0.004959399 ubox
11 43 0.003638122 ubox
12 19 0.515311753 ubox
12 22 0.156481345 ubox
12 25 0.120515010 ubox
12 28 0.047034702 ubox
12 31 0.020633603 ubox
12 42 0.003672565 ubox
13 18 0.501618923 ubox
13 20 0.131129207 ubox
13 21 0.151331165 ubox
13 23 0.058145561 ubox
13 24 0.122473212 ubox
13 26 0.115344585 ubox
13 27 0.047493159 ubox
13 29 0.045206310 ubox
13 30 0.051567005 ubox
13 32 0.062522947 ubox
13 36 0.280923309 ubox
13 49 0.003944859 ubox
14 19 0.128597207 ubox
14 22 0.032267956 ubox
14 25 0.112134053 ubox
14 28 0.035026933 ubox
14 31 0.060486891 ubox
14 35 0.281800367 ubox
14 48 0.003488871 ubox
15 22 0.123509932 ubox
15 25 0.050252595 ubox
15 28 0.055966971 ubox
15 31 0.015693659 ubox
15 34 0.281655549 ubox
16 21 0.118398143 ubox
16 23 0.156733736 ubox
16 24 0.039306493 ubox
16 26 0.053770184 ubox
16 27 0.056422477 ubox
16 29 0.308770781 ubox
16 30 0.026905862 ubox
16 32 0.229896303 ubox
16 49 0.012192295 ubox
17 22 0.159804697 ubox
17 25 0.051835124 ubox
17 28 0.310032953 ubox
17 31 0.227943282 ubox
17 48 0.012133856 ubox
18 25 0.064583524 ubox
18 28 0.053295429 ubox
18 31 0.090187116 ubox
18 48 0.003514110 ubox
19 24 0.064327229 ubox
19 26 0.340097607 ubox
19 27 0.043348004 ubox
19 29 0.242926516 ubox
19 30 0.104235526 ubox
19 32 0.183810461 ubox
19 49 0.008570125 ubox
20 25 0.341262181 ubox
20 28 0.231718642 ubox
20 31 0.183987844 ubox
20 48 0.008483785 ubox
21 28 0.144875895 ubox
21 31 0.012727375 ubox
22 27 0.156717424 ubox
22 29 0.380006177 ubox
22 30 0.027952696 ubox
22 32 0.024874054 ubox
22 49 0.038850177 ubox
23 28 0.380356657 ubox
23 31 0.023703758 ubox
23 48 0.038210351 ubox
24 31 0.012642268 ubox
24 48 0.010547890 ubox
25 30 0.033343263 ubox
25 32 0.047193074 ubox
25 44 0.007855224 ubox
25 47 0.011585557 ubox
25 49 0.069058161 ubox
26 31 0.047140875 ubox
26 43 0.007938656 ubox
26 48 0.068894046 ubox
27 42 0.007934615 ubox
27 48 0.006920289 ubox
28 41 0.007771095 ubox
28 44 0.078481656 ubox
28 47 0.007940664 ubox
28 49 0.147257671 ubox
29 43 0.079371307 ubox
29 48 0.144120864 ubox
30 42 0.079379078 ubox
30 48 0.049488892 ubox
31 41 0.079261165 ubox
31 47 0.058048884 ubox
31 49 0.920984841 ubox
32 48 0.922199936 ubox
33 40 0.078584127 ubox
33 46 0.690713719 ubox
33 47 0.652715314 ubox
34 39 0.078539618 ubox
34 45 0.952443958 ubox
34 46 0.079562390 ubox
35 44 0.955769700 ubox
36 43 0.955684789 ubox
37 42 0.952817461 ubox
37 43 0.023116369 ubox
38 42 0.031141160 ubox
2 29 0.9500000 lbox
3 28 0.9500000 lbox
4 27 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
