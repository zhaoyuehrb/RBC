%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGCAAUGUGGGCAUUGAUCAAGCCAGCUGCCAGGGCAGCGGGCGCAGGGCUUGGGCACUGGAGCCCAGCCCCGGACCGCACCUCCAGCAGUGCUGGGUGCAGAAGGCAGUCACUGUGGCAGUGGAGAGACAGAGUGUGUACCCAGACACGUGUUGCUUCUGGGGUAAGGUUCUGAAGGCUGAGUAGCCAGCGGG\
) } def
/len { sequence length } bind def

/coor [
[84.19984436 224.71481323]
[90.24618530 208.87568665]
[90.24618530 193.87568665]
[90.24618530 178.87568665]
[90.24618530 163.87568665]
[75.49772644 161.14019775]
[70.11848450 175.14247131]
[64.73924255 189.14474487]
[59.36000443 203.14701843]
[62.45414352 219.25163269]
[49.87882996 229.77748108]
[34.57046890 223.89648438]
[32.27698898 207.65850830]
[45.35772705 197.76779175]
[50.73696899 183.76550293]
[56.11620712 169.76322937]
[61.49544907 155.76095581]
[55.92453384 150.73951721]
[45.88164902 161.88134766]
[35.83858109 173.02301025]
[24.69707870 162.97976685]
[34.73981476 151.83847046]
[44.78269577 140.69662476]
[39.21178055 135.67518616]
[25.84125519 142.47438049]
[12.47073174 149.27359009]
[3.67685962 162.42570496]
[-11.17498875 161.29794312]
[-24.54551315 168.09713745]
[-37.91603470 174.89633179]
[-51.28656006 181.69554138]
[-64.65708160 188.49473572]
[-73.14123535 202.52867126]
[-89.52936554 201.92765808]
[-96.96276855 187.30998230]
[-87.79460144 173.71304321]
[-71.45628357 175.12420654]
[-58.08575821 168.32501221]
[-44.71523285 161.52581787]
[-31.34471130 154.72662354]
[-17.97418785 147.92741394]
[-10.13666439 135.26161194]
[5.67153358 135.90306091]
[19.04205704 129.10386658]
[32.41258240 122.30466461]
[38.20412445 112.17336273]
[45.34087372 103.84597015]
[53.46291733 97.48414612]
[62.19297028 93.18804169]
[48.23403168 87.69732666]
[34.27508926 82.20661163]
[20.31614876 76.71588898]
[6.35720921 71.22517395]
[-2.78614569 70.99458313]
[-7.77940559 65.53399658]
[-21.64901352 59.82138062]
[-35.51862335 54.10876846]
[-49.38822937 48.39615250]
[-63.87919617 54.70388412]
[-78.55529785 48.83979797]
[-84.70947266 34.28295517]
[-78.69055176 19.66967010]
[-64.06945801 13.66974449]
[-49.52062225 19.84283066]
[-43.67561340 34.52654266]
[-29.80600739 40.23915863]
[-15.93639851 45.95177460]
[-2.06679034 51.66439056]
[11.84792614 57.26623535]
[25.80686760 62.75695038]
[39.76580811 68.24766541]
[53.72474670 73.73838806]
[67.68368530 79.22910309]
[92.99425507 62.22840118]
[122.71801758 69.02153015]
[133.77941895 58.89012527]
[144.84082031 48.75872040]
[155.90223694 38.62731552]
[166.96363831 28.49591446]
[167.81503296 12.94236469]
[179.17718506 2.82525492]
[193.99987793 3.73277855]
[205.06127930 -6.39862490]
[216.12268066 -16.53002739]
[227.18408203 -26.66143227]
[238.24549866 -36.79283524]
[248.89430237 -47.35706711]
[259.11358643 -58.33733749]
[269.33285522 -69.31760406]
[279.55212402 -80.29787445]
[289.77142334 -91.27814484]
[299.90283203 -102.33955383]
[309.94570923 -113.48138428]
[319.98858643 -124.62322235]
[329.94232178 -135.84477234]
[339.80624390 -147.14533997]
[349.67016602 -158.44590759]
[359.53411865 -169.74647522]
[369.39804077 -181.04704285]
[379.26196289 -192.34761047]
[389.12591553 -203.64817810]
[398.98983765 -214.94874573]
[408.85375977 -226.24931335]
[394.08554077 -223.62261963]
[380.19821167 -229.29196167]
[371.48757935 -241.50363159]
[370.64816284 -256.48013306]
[377.93963623 -269.58868408]
[391.10650635 -276.77438354]
[406.07574463 -275.81439209]
[418.21688843 -267.00570679]
[423.77420044 -253.07315063]
[421.02963257 -238.32847595]
[432.40847778 -248.10198975]
[443.78735352 -257.87551880]
[455.16619873 -267.64901733]
[460.59350586 -282.51019287]
[475.28967285 -284.93344116]
[486.66851807 -294.70697021]
[482.68240356 -309.44036865]
[485.49203491 -324.44265747]
[494.53958130 -336.73510742]
[508.02868652 -343.87704468]
[523.28100586 -344.45043945]
[537.26824951 -338.34143066]
[547.21319580 -326.76296997]
[551.14129639 -312.01397705]
[548.27258301 -297.02285767]
[539.17669678 -284.76614380]
[525.65960693 -277.67736816]
[510.40512085 -277.16406250]
[496.44204712 -283.32809448]
[485.06320190 -273.55459595]
[480.44976807 -259.39245605]
[464.93972778 -256.27017212]
[453.56085205 -246.49664307]
[442.18200684 -236.72312927]
[430.80313110 -226.94961548]
[420.15432739 -216.38539124]
[410.29040527 -205.08482361]
[400.42648315 -193.78425598]
[390.56253052 -182.48368835]
[380.69860840 -171.18312073]
[370.83468628 -159.88255310]
[360.97073364 -148.58198547]
[351.10681152 -137.28141785]
[341.24288940 -125.98085022]
[339.21041870 -118.86608887]
[331.13043213 -114.58033752]
[321.08752441 -103.43849945]
[311.04464722 -92.29666901]
[308.89901733 -85.21522522]
[300.75167847 -81.05886841]
[290.53240967 -70.07859802]
[280.31311035 -59.09832764]
[270.09384155 -48.11805725]
[259.87457275 -37.13778687]
[274.72045898 -34.99316025]
[282.44100952 -22.13263130]
[277.35382080 -8.02161980]
[263.20312500 -3.04591203]
[250.40390015 -10.86765862]
[248.37689209 -25.73143005]
[237.31549072 -15.60002708]
[226.25408936 -5.46862411]
[215.19268799 4.66277933]
[204.13128662 14.79418278]
[203.73689270 29.63938522]
[192.66337585 40.07164383]
[177.09503174 39.55731964]
[166.03363037 49.68872070]
[154.97222900 59.82012558]
[143.91082764 69.95153046]
[132.84942627 80.08293152]
[143.31721497 87.93075562]
[151.51850891 100.08158112]
[155.88957214 115.76312256]
[155.15144348 133.67843628]
[148.47573853 152.11199951]
[154.29875183 165.93562317]
[160.12178040 179.75923157]
[165.94479370 193.58285522]
[179.33428955 203.05140686]
[177.55978394 219.35427856]
[162.44674683 225.72044373]
[149.54217529 215.60096741]
[152.12118530 199.40588379]
[146.29815674 185.58226013]
[140.47514343 171.75863647]
[134.65211487 157.93502808]
[127.30062866 159.42019653]
[105.24618530 163.87568665]
[105.24618530 178.87568665]
[105.24618530 193.87568665]
[105.24618530 208.87568665]
[111.29252625 224.71481323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[4 193]
[5 192]
[6 17]
[7 16]
[8 15]
[9 14]
[24 45]
[25 44]
[26 43]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[49 73]
[50 72]
[51 71]
[52 70]
[53 69]
[55 68]
[56 67]
[57 66]
[58 65]
[75 174]
[76 173]
[77 172]
[78 171]
[79 170]
[82 167]
[83 166]
[84 165]
[85 164]
[86 163]
[87 157]
[88 156]
[89 155]
[90 154]
[91 153]
[92 151]
[93 150]
[94 149]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
[100 142]
[101 141]
[102 140]
[103 139]
[113 138]
[114 137]
[115 136]
[116 135]
[118 133]
[119 132]
[179 190]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
