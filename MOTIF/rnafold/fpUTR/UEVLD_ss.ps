%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUUCCGGGCGCAGCCGCGGCUGAGCCCGGGGCGUUGAAUGCGGGUGGAAUUUCCAGUCUGGGAAGGGGCGGGGCCUUGGACCGCCGGGAAGUUUGGUCCUCAGCGGCUUCCGUCCUGCAGCAAGUCCGGAAGAAGGUCCGGGGGCUGGAGUCCUGGGACCUAGCUCGGGACCGGCCUGGAG\
) } def
/len { sequence length } bind def

/coor [
[109.67955017 176.79531860]
[108.91571045 161.81478882]
[108.15186310 146.83424377]
[95.82740784 149.90539551]
[82.49320221 149.62304688]
[69.08541107 145.68493652]
[59.86164474 157.51379395]
[50.63787842 169.34266663]
[41.41411209 181.17153931]
[32.19034195 193.00041199]
[22.96657753 204.82926941]
[13.74281025 216.65814209]
[11.35840607 232.29864502]
[-2.56938648 237.57745361]
[-11.79315281 249.40632629]
[-21.01692009 261.23519897]
[-30.24068642 273.06405640]
[-31.97056007 289.37170410]
[-47.06611633 295.77923584]
[-59.99834061 285.69509888]
[-57.46366882 269.49301147]
[-42.06955338 263.84030151]
[-32.84578705 252.01142883]
[-23.62202072 240.18255615]
[-14.39825535 228.35368347]
[-12.67359638 213.55926514]
[1.91394210 207.43437195]
[11.13770866 195.60549927]
[20.36147499 183.77664185]
[29.58524132 171.94776917]
[38.80900955 160.11889648]
[48.03277588 148.29003906]
[57.25654221 136.46116638]
[49.06916046 123.89267731]
[34.52159882 127.54896545]
[19.97403526 131.20524597]
[5.42647314 134.86152649]
[-8.46110249 144.58631897]
[-21.65030861 133.93356323]
[-15.06500435 118.31082916]
[1.77018929 120.31396484]
[16.31775284 116.65768433]
[30.86531448 113.00140381]
[45.41287994 109.34511566]
[45.28551865 94.34565735]
[30.67796516 90.93692780]
[15.48056030 95.33573151]
[4.84456444 84.90860748]
[-9.76298714 81.49987793]
[-24.37053871 78.09114838]
[-38.97809219 74.68242645]
[-55.77684402 76.97115326]
[-62.62648392 61.46248245]
[-49.62007141 50.58730316]
[-35.56936264 60.07487106]
[-20.96181107 63.48360062]
[-6.35425949 66.89232635]
[8.25329208 70.30105591]
[22.40586853 65.65843964]
[34.08669281 76.32937622]
[48.69424438 79.73810577]
[53.81013107 73.14614868]
[59.70896912 67.61046600]
[66.19300842 63.21197510]
[73.05864716 59.99670029]
[80.10227966 57.97599030]
[87.12604523 57.12762451]
[93.94313049 57.39785004]
[94.45248413 42.40649796]
[94.96183014 27.41514969]
[95.47118378 12.42379951]
[95.98052979 -2.56754971]
[96.48988342 -17.55889893]
[96.99922943 -32.55024719]
[97.50858307 -47.54159927]
[97.89062500 -62.53673172]
[98.14533234 -77.53456879]
[98.40004730 -92.53240967]
[83.68871307 -106.18537140]
[83.72327423 -125.95154572]
[98.03477478 -139.14036560]
[97.52542877 -154.13171387]
[97.01607513 -169.12306213]
[96.50672913 -184.11441040]
[95.99738312 -199.10575867]
[95.48802948 -214.09710693]
[81.89619446 -221.24955750]
[73.71511078 -234.24822998]
[73.14546204 -249.59655762]
[80.34047699 -263.16589355]
[93.36473083 -271.30621338]
[108.71476746 -271.82772827]
[122.26149750 -264.59020996]
[130.36093140 -251.54051208]
[130.83435059 -236.18891907]
[123.55441284 -222.66494751]
[110.47937775 -214.60646057]
[110.98873138 -199.61511230]
[111.49807739 -184.62376404]
[112.00743103 -169.63241577]
[112.51677704 -154.64105225]
[113.02613068 -139.64970398]
[122.17075348 -134.90063477]
[128.55932617 -126.71300507]
[130.97985840 -116.53072357]
[128.92774963 -106.18537140]
[122.70926666 -97.56674957]
[113.39788055 -92.27769470]
[113.14317322 -77.27986145]
[112.88845825 -62.28202057]
[115.92546082 -55.52528381]
[112.49993134 -47.03224945]
[111.99057770 -32.04090118]
[111.48123169 -17.04954910]
[110.97187805 -2.05820012]
[110.46253204 12.93314934]
[109.95317841 27.92449951]
[109.44383240 42.91584778]
[108.93447876 57.90719986]
[127.75484467 65.65534973]
[141.33776855 81.51018524]
[146.35359192 102.31632996]
[141.24400330 123.63960266]
[155.06536865 129.46798706]
[169.55686951 123.75536346]
[183.49066162 129.86306763]
[188.84747314 143.71369934]
[202.66883850 149.54208374]
[216.49018860 155.37046814]
[230.31155396 161.19885254]
[246.03375244 159.43170166]
[254.75456238 171.50633240]
[268.57592773 177.33471680]
[281.82910156 169.48237610]
[296.98757935 170.92276001]
[308.25793457 180.89485168]
[311.45693970 195.41738892]
[325.27832031 201.24577332]
[339.09967041 207.07415771]
[352.92102051 212.90254211]
[366.74237061 218.73092651]
[380.56375122 224.55931091]
[396.28594971 222.79216003]
[405.00677490 234.86679077]
[418.82812500 240.69517517]
[432.64947510 246.52355957]
[446.47082520 252.35194397]
[460.29220581 258.18032837]
[476.48828125 255.60760498]
[486.60275269 268.51611328]
[480.23071289 283.62667847]
[463.92718506 285.39486694]
[454.46380615 272.00167847]
[440.64245605 266.17330933]
[426.82110596 260.34490967]
[412.99972534 254.51654053]
[399.17837524 248.68815613]
[384.44476318 250.87219238]
[374.73535156 238.38067627]
[360.91400146 232.55229187]
[347.09265137 226.72390747]
[333.27127075 220.89552307]
[319.44992065 215.06713867]
[305.62857056 209.23875427]
[292.99658203 217.08546448]
[277.98880005 215.97619629]
[266.37612915 206.12736511]
[262.74752808 191.15608215]
[248.92617798 185.32769775]
[234.19258118 187.51173401]
[224.48316956 175.02021790]
[210.66180420 169.19183350]
[196.84045410 163.36344910]
[183.01908875 157.53506470]
[169.36198425 163.36764526]
[155.26213074 157.65371704]
[149.23698425 143.28935242]
[135.41561890 137.46096802]
[123.13240814 146.07040405]
[123.89624786 161.05094910]
[124.66008759 176.03147888]
[134.02159119 189.49603271]
[126.79779053 204.21842957]
[110.41992188 205.05351257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[6 33]
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[14 25]
[15 24]
[16 23]
[17 22]
[34 44]
[35 43]
[36 42]
[37 41]
[45 61]
[46 60]
[48 58]
[49 57]
[50 56]
[51 55]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[76 110]
[77 109]
[78 108]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[123 178]
[124 177]
[127 174]
[128 173]
[129 172]
[130 171]
[132 169]
[133 168]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
