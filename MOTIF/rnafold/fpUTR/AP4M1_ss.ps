%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGAGUGACGGGGAGGCGGUGCGGGCGUCGGAAGGGAAUCUCCGGGCGGGGUAGUGCAGGCGCCGGGUUUCCCGCGGUCCGAGCUGGCGCGGGCGGAGGAGAAUCGCUCUUAAAGGGCCAGCGCACACGCGUUCUUUUGUUCCGGGGCCGCAGGGCGGGGCAGGCCCGACUUUCGCCGUCUUCUUGUCUACUCUCCAGAACGGCC\
) } def
/len { sequence length } bind def

/coor [
[120.89819336 532.85839844]
[119.31943512 517.81304932]
[122.46920013 503.01660156]
[130.03889465 489.91873169]
[141.28694153 479.80255127]
[155.11135864 473.65921021]
[153.53596497 458.74215698]
[151.96055603 443.82513428]
[150.38516235 428.90808105]
[148.69769287 414.00329590]
[146.89823914 399.11163330]
[145.09880066 384.21997070]
[143.29936218 369.32827759]
[141.49992371 354.43661499]
[139.70048523 339.54492188]
[137.90104675 324.65325928]
[136.10159302 309.76156616]
[134.30215454 294.86990356]
[132.50271606 279.97824097]
[130.70327759 265.08654785]
[128.90383911 250.19487000]
[127.10439301 235.30319214]
[125.30495453 220.41152954]
[123.50551605 205.51985168]
[121.14785767 190.70628357]
[118.23532867 175.99177551]
[115.32279968 161.27725220]
[112.41026306 146.56272888]
[109.49773407 131.84820557]
[85.26427460 121.61528778]
[80.98131561 101.60633850]
[66.20486450 99.02629089]
[51.42842102 96.44624329]
[36.65197372 93.86619568]
[21.87552834 91.28614807]
[2.23793173 99.86140442]
[-13.02045059 85.96489716]
[-27.89818192 84.05358887]
[-42.77591324 82.14227295]
[-57.65364456 80.23096466]
[-72.53137207 78.31964874]
[-80.74282837 85.45571136]
[-91.30864716 86.86466217]
[-100.70755768 82.32055664]
[-105.94038391 73.54164124]
[-120.75394440 71.18398285]
[-135.59870911 76.65605164]
[-146.95166016 67.01448822]
[-161.76521301 64.65683746]
[-176.57878113 62.29918671]
[-191.39233398 59.94153595]
[-200.05149841 72.51061249]
[-213.31089783 80.07043457]
[-228.53788757 81.11998749]
[-242.70913696 75.45088959]
[-253.01091003 64.18874359]
[-257.39782715 49.56964874]
[-254.99880981 34.49624634]
[-246.29022217 21.96136475]
[-233.00114441 14.45381832]
[-217.77014160 13.46423340]
[-203.62133789 19.18909264]
[-193.36398315 30.49172401]
[-189.03468323 45.12797928]
[-174.22113037 47.48563004]
[-159.40756226 49.84328079]
[-144.59400940 52.20093155]
[-130.80880737 46.56023407]
[-118.39628601 56.37042999]
[-103.58273315 58.72808075]
[-86.08145142 50.50874329]
[-70.62006378 63.44191742]
[-55.74233246 65.35323334]
[-40.86460114 67.26454163]
[-25.98686981 69.17585754]
[-11.10913849 71.08716583]
[-5.05788755 64.58613586]
[3.43597293 61.55329132]
[12.50895500 62.78836060]
[20.10812759 68.13957977]
[24.45557594 76.50970459]
[39.23202133 79.08975220]
[54.00846863 81.66979980]
[68.78491211 84.24984741]
[83.56136322 86.82989502]
[95.73625183 78.06792450]
[97.98249817 63.23706818]
[100.11722565 48.38974762]
[102.14029694 33.52680206]
[104.05160522 18.64906883]
[105.85105133 3.75739312]
[107.65048981 -11.13428307]
[109.44992828 -26.02595901]
[103.42401123 -40.65465927]
[112.63224030 -52.36183167]
[114.43167877 -67.25350952]
[116.23111725 -82.14518738]
[103.01016998 -97.27224731]
[105.14114380 -116.94223022]
[120.80416107 -128.52383423]
[121.93046570 -143.48147583]
[123.05677032 -158.43913269]
[124.18307495 -173.39678955]
[125.30937958 -188.35444641]
[115.98134613 -201.40693665]
[120.50867462 -216.79792786]
[135.41838074 -222.72079468]
[149.27301025 -214.63198853]
[151.44448853 -198.73657227]
[140.26702881 -187.22814941]
[139.14073181 -172.27049255]
[138.01441956 -157.31283569]
[136.88812256 -142.35517883]
[135.76181030 -127.39752197]
[144.30601501 -121.70344543]
[149.75759888 -112.90736389]
[151.07554626 -102.56172943]
[147.95544434 -92.52554321]
[140.89645386 -84.63027191]
[131.12278748 -80.34574127]
[129.32334900 -65.45406342]
[127.52391052 -50.56238937]
[133.67854309 -36.99884415]
[124.34160614 -24.22651863]
[122.54216766 -9.33484173]
[120.74272919 5.55683422]
[118.94328308 20.44850922]
[121.26207733 27.46722221]
[117.00324249 35.54987335]
[114.98017120 50.41281891]
[117.19319916 57.46559525]
[112.81336212 65.48332214]
[110.56710815 80.31417847]
[115.76983643 85.71617889]
[119.92356873 71.30276489]
[134.48278809 67.69320679]
[144.88844299 78.49702454]
[140.73497009 92.91051483]
[126.17528534 96.52019501]
[131.37800598 101.92219543]
[146.28279114 100.23472595]
[161.18756104 98.54725647]
[176.09234619 96.85978699]
[190.99713135 95.17231750]
[205.90190125 93.48485565]
[220.80668640 91.79738617]
[225.00627136 88.69207001]
[229.52519226 87.61676788]
[233.53633118 88.35296631]
[236.41932678 90.38545990]
[251.38502502 89.37160492]
[266.35073853 88.35774994]
[279.65710449 78.77274323]
[294.49804688 85.74972534]
[295.60647583 102.11136627]
[281.84213257 111.02622223]
[267.36459351 103.32344818]
[252.39888000 104.33730316]
[237.43318176 105.35115814]
[222.49415588 106.70216370]
[207.58937073 108.38963318]
[192.68458557 110.07710266]
[177.77981567 111.76457214]
[162.87503052 113.45204163]
[147.97026062 115.13950348]
[133.06547546 116.82697296]
[124.21225739 128.93566895]
[127.12478638 143.65019226]
[130.03732300 158.36471558]
[132.94984436 173.07923889]
[135.86238098 187.79376221]
[146.25588989 176.97825623]
[161.20547485 178.20712280]
[169.69331360 190.57469177]
[165.46389771 204.96607971]
[151.63429260 210.77487183]
[138.39718628 203.72041321]
[140.19662476 218.61207581]
[141.99606323 233.50375366]
[143.79551697 248.39543152]
[145.59495544 263.28710938]
[147.39439392 278.17877197]
[149.19383240 293.07046509]
[150.99327087 307.96212769]
[152.79272461 322.85382080]
[154.59216309 337.74548340]
[156.39160156 352.63717651]
[158.19104004 367.52883911]
[159.99047852 382.42053223]
[161.78991699 397.31219482]
[163.58937073 412.20385742]
[167.72622681 420.34960938]
[165.30220032 427.33270264]
[166.87759399 442.24972534]
[168.45300293 457.16677856]
[170.02839661 472.08380127]
[184.83113098 475.20382690]
[197.94421387 482.74719238]
[208.08296204 493.97488403]
[214.25408936 507.78689575]
[215.85301208 522.83013916]
[212.72308350 537.63073730]
[205.17092896 550.73876953]
[193.93644714 560.86999512]
[180.12028503 567.03186035]
[165.07598877 568.62072754]
[150.27746582 565.48089600]
[137.17449951 557.91992188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 196]
[7 195]
[8 194]
[9 193]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 171]
[26 170]
[27 169]
[28 168]
[29 167]
[31 85]
[32 84]
[33 83]
[34 82]
[35 81]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[45 70]
[46 69]
[48 67]
[49 66]
[50 65]
[51 64]
[86 133]
[87 132]
[88 130]
[89 129]
[90 127]
[91 126]
[92 125]
[93 124]
[95 122]
[96 121]
[97 120]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[140 166]
[141 165]
[142 164]
[143 163]
[144 162]
[145 161]
[146 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
