%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCACCGCGGGGCAGCGGCGCCGCAGCCUGGGCUGGCGGAACCUCGCGCUCCGACUCGCCCCCCGCCUGUAGCUCGGUCGGCGUUGCGGGCAGGCGCCGCUCCGCUGGGGAUUGCUAUGCUAUGCCUUGUAUGACUAAGACCUCUUACCAAGAAUACGUGUCAGACCAUAAAACCACUGCCAAGGAGUGCGGGGGUGGCA\
) } def
/len { sequence length } bind def

/coor [
[417.84747314 198.83836365]
[410.92736816 187.94813538]
[396.51129150 183.80360413]
[382.09524536 179.65908813]
[367.67916870 175.51455688]
[353.20037842 171.59472656]
[338.66241455 167.90054321]
[324.42160034 172.26507568]
[312.95202637 161.36740112]
[298.41406250 157.67321777]
[283.87606812 153.97903442]
[269.30978394 150.39801025]
[254.71611023 146.93035889]
[247.47647095 148.44369507]
[239.92330933 143.29364014]
[225.38531494 139.59945679]
[210.84733582 135.90527344]
[196.30934143 132.21109009]
[181.77136230 128.51690674]
[167.23338318 124.82273102]
[152.69538879 121.12854767]
[138.15740967 117.43436432]
[123.61942291 113.74017334]
[120.04459381 120.69540405]
[114.39029694 126.66152191]
[106.94965363 131.01399231]
[98.20258331 133.22045898]
[88.78572083 132.89604187]
[79.44604492 129.84863281]
[70.98185730 124.10945892]
[64.17559814 115.94550323]
[49.29154587 117.80698395]
[34.40750122 119.66846466]
[19.52345085 121.52994537]
[6.79014587 130.92001343]
[-6.79893208 124.82196808]
[-21.68297958 126.68344879]
[-36.55210495 128.66061401]
[-51.40540314 130.75334167]
[-66.25869751 132.84606934]
[-81.11199951 134.93881226]
[-87.46685791 148.99652100]
[-100.42549133 157.36773682]
[-115.85284424 157.38124084]
[-128.82611084 149.03271484]
[-135.20556641 134.98614502]
[-132.95555115 119.72374725]
[-122.79403687 108.11568451]
[-107.96351624 103.86605835]
[-93.19636536 108.33090210]
[-83.20472717 120.08551025]
[-68.35143280 117.99277496]
[-53.49813080 115.90004730]
[-38.64483261 113.80731964]
[-32.45552444 109.75823975]
[-23.54446220 111.79940033]
[-8.66041374 109.93791962]
[3.00828576 100.68099213]
[17.66197014 106.64589691]
[32.54601669 104.78441620]
[47.43006516 102.92293549]
[62.31411362 101.06145477]
[65.10322571 94.09934998]
[55.83359528 82.30638885]
[70.68144226 80.17514801]
[73.47055054 73.21304321]
[63.98850250 61.59018707]
[54.50645828 49.96733093]
[45.02441025 38.34447479]
[35.54236603 26.72161865]
[26.06031799 15.09876156]
[16.57827187 3.47590518]
[7.09622574 -8.14695168]
[-2.38582063 -19.76980782]
[-11.95796108 -31.31857872]
[-21.61961746 -42.79256821]
[-37.21523285 -47.86295700]
[-40.35681152 -63.95837402]
[-27.81257248 -74.52124023]
[-12.48694801 -68.68537140]
[-10.14562988 -52.45422363]
[-0.48397329 -40.98023605]
[6.23395443 -37.88637161]
[9.23703575 -29.25185394]
[18.71908188 -17.62899780]
[28.20112801 -6.00614119]
[37.68317413 5.61671543]
[47.16522217 17.23957253]
[56.64726639 28.86242867]
[66.12931824 40.48528671]
[75.61135864 52.10814285]
[85.09340668 63.73099899]
[118.11577606 72.09573364]
[127.31360626 99.20219421]
[141.85159302 102.89637756]
[156.38957214 106.59056091]
[170.92756653 110.28474426]
[185.46554565 113.97892761]
[200.00354004 117.67311096]
[214.54151917 121.36729431]
[229.07949829 125.06147766]
[243.61749268 128.75566101]
[258.18374634 132.33668518]
[272.77743530 135.80432129]
[281.85751343 134.74345398]
[287.57025146 139.44104004]
[302.10824585 143.13522339]
[316.64620972 146.82940674]
[331.92687988 142.72912598]
[342.35659790 153.36256409]
[356.89456177 157.05674744]
[363.36242676 155.63087463]
[368.76562500 157.42152405]
[371.82369995 161.09849548]
[386.23974609 165.24302673]
[400.65582275 169.38754272]
[415.07189941 173.53207397]
[432.83020020 168.67399597]
[444.51400757 181.76396179]
[458.99279785 185.68379211]
[473.47155762 189.60362244]
[487.95034790 193.52345276]
[502.42910767 197.44328308]
[516.90789795 201.36311340]
[526.01660156 200.58514404]
[531.58044434 205.45812988]
[545.99652100 209.60264587]
[560.41259766 213.74717712]
[574.82861328 217.89170837]
[589.24468994 222.03622437]
[603.66076660 226.18075562]
[618.07684326 230.32528687]
[632.49291992 234.46980286]
[646.20281982 227.07546997]
[660.76367188 231.48396301]
[667.72857666 244.59983826]
[682.14465332 248.74436951]
[674.52178955 235.82568359]
[677.52966309 221.13035583]
[689.61523438 212.24559021]
[704.53875732 213.75865173]
[714.59509277 224.88830566]
[714.59222412 239.88830566]
[704.52978516 251.01504517]
[719.48443604 249.84977722]
[734.43908691 248.68452454]
[749.39379883 247.51927185]
[764.71533203 240.26075745]
[775.93164062 252.97418213]
[766.82000732 267.27154541]
[750.55902100 262.47393799]
[735.60437012 263.63919067]
[720.64971924 264.80444336]
[705.69500732 265.96969604]
[703.67889404 273.19363403]
[718.66564941 272.56414795]
[723.89532471 286.62295532]
[712.14056396 295.94094849]
[699.64660645 287.64147949]
[697.63043213 294.86541748]
[709.82031250 303.60653687]
[725.54394531 305.36068726]
[731.37805176 319.06515503]
[743.56793213 327.80627441]
[755.75775146 336.54739380]
[769.12835693 329.18603516]
[784.36932373 328.36355591]
[798.45446777 334.24322510]
[808.58728027 345.65765381]
[812.75579834 360.34051514]
[810.13238525 375.37649536]
[801.23797607 387.78018188]
[787.83843994 395.08883667]
[772.59442139 395.85131836]
[758.53247070 389.91619873]
[748.44476318 378.46194458]
[744.33404541 363.76278687]
[747.01666260 348.73727417]
[734.82678223 339.99615479]
[722.63690186 331.25503540]
[707.78515625 330.12609863]
[701.07916260 315.79641724]
[688.88934326 307.05529785]
[678.00012207 263.16043091]
[663.58404541 259.01589966]
[650.71685791 266.43017578]
[636.03790283 262.43240356]
[628.34838867 248.88586426]
[613.93231201 244.74134827]
[599.51623535 240.59681702]
[585.10015869 236.45228577]
[570.68408203 232.30776978]
[556.26806641 228.16323853]
[541.85198975 224.01870728]
[527.43591309 219.87419128]
[512.98803711 215.84188843]
[498.50927734 211.92205811]
[484.03051758 208.00222778]
[469.55172729 204.08239746]
[455.07296753 200.16256714]
[440.59417725 196.24273682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 117]
[3 116]
[4 115]
[5 114]
[6 111]
[7 110]
[9 108]
[10 107]
[11 106]
[12 104]
[13 103]
[15 102]
[16 101]
[17 100]
[18 99]
[19 98]
[20 97]
[21 96]
[22 95]
[23 94]
[31 62]
[32 61]
[33 60]
[34 59]
[36 57]
[37 56]
[38 54]
[39 53]
[40 52]
[41 51]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[75 82]
[76 81]
[119 201]
[120 200]
[121 199]
[122 198]
[123 197]
[124 196]
[126 195]
[127 194]
[128 193]
[129 192]
[130 191]
[131 190]
[132 189]
[133 188]
[136 185]
[137 184]
[144 154]
[145 153]
[146 152]
[147 151]
[160 183]
[161 182]
[163 180]
[164 179]
[165 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
