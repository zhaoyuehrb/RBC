%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAB8B)
} def

/sequence { (\
GGCGGAUUGGCGGGCACGCCCCCUCGCCCGCGGCCCCCUCCCCGCCUCUCUCCACCGCCUCCUCUGGCUCCCCGGUCAGAGGGCCGGAGCGAGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.123289029 ubox
1 29 0.017098781 ubox
1 37 0.005399987 ubox
1 38 0.009761877 ubox
1 41 0.005057964 ubox
1 43 0.077129531 ubox
1 46 0.937150095 ubox
1 47 0.004124157 ubox
1 48 0.004182972 ubox
1 59 0.007045294 ubox
2 27 0.124244954 ubox
2 28 0.012457828 ubox
2 36 0.005427633 ubox
2 37 0.009768417 ubox
2 40 0.005077219 ubox
2 42 0.077177392 ubox
2 45 0.988782462 ubox
2 46 0.004024138 ubox
2 58 0.007073419 ubox
3 26 0.124792180 ubox
3 44 0.989011563 ubox
3 57 0.007073577 ubox
4 22 0.003461173 ubox
4 23 0.009789358 ubox
4 24 0.004025058 ubox
4 25 0.123944216 ubox
4 35 0.009311462 ubox
4 36 0.006496049 ubox
4 38 0.005206414 ubox
4 41 0.080660586 ubox
4 42 0.022825912 ubox
4 43 0.988462891 ubox
4 56 0.007039854 ubox
5 21 0.003829127 ubox
5 22 0.010883620 ubox
5 23 0.024079713 ubox
5 24 0.112435393 ubox
5 25 0.008442930 ubox
5 34 0.009328456 ubox
5 35 0.006488452 ubox
5 37 0.005196162 ubox
5 40 0.081518024 ubox
5 41 0.031810008 ubox
5 42 0.986729455 ubox
5 55 0.006971084 ubox
6 24 0.010874768 ubox
6 39 0.079109174 ubox
7 33 0.005307754 ubox
8 32 0.004530741 ubox
9 20 0.122554600 ubox
9 21 0.005644281 ubox
9 22 0.005874238 ubox
9 23 0.021695102 ubox
9 28 0.003242886 ubox
9 31 0.003567128 ubox
9 35 0.005279938 ubox
9 36 0.004851586 ubox
9 37 0.006995369 ubox
9 38 0.984870544 ubox
9 39 0.080650257 ubox
9 40 0.028856454 ubox
9 41 0.055554410 ubox
9 53 0.003296993 ubox
10 19 0.122805533 ubox
10 20 0.004003278 ubox
10 21 0.005826121 ubox
10 22 0.021710179 ubox
10 27 0.003288391 ubox
10 31 0.040987160 ubox
10 34 0.004887064 ubox
10 35 0.003306979 ubox
10 36 0.005069311 ubox
10 37 0.985300265 ubox
10 38 0.086849668 ubox
10 39 0.016947914 ubox
10 40 0.055500766 ubox
11 18 0.122870614 ubox
11 26 0.003303384 ubox
11 30 0.041825617 ubox
11 33 0.004494474 ubox
12 17 0.122532796 ubox
12 20 0.006659543 ubox
12 21 0.021569170 ubox
12 25 0.003218280 ubox
12 29 0.042092214 ubox
12 35 0.004906809 ubox
12 36 0.990848088 ubox
12 37 0.016683068 ubox
12 38 0.015175372 ubox
13 19 0.006659455 ubox
13 20 0.021575590 ubox
13 28 0.042094173 ubox
13 34 0.003623717 ubox
13 35 0.991005291 ubox
13 36 0.015926169 ubox
13 37 0.014840555 ubox
14 19 0.021442721 ubox
14 27 0.042092629 ubox
14 34 0.991028627 ubox
14 35 0.015018851 ubox
14 36 0.014495288 ubox
15 26 0.042002650 ubox
15 33 0.990310576 ubox
17 26 0.003219402 ubox
17 30 0.037140115 ubox
17 32 0.985787786 ubox
18 25 0.005668258 ubox
18 27 0.050518744 ubox
18 29 0.029399475 ubox
18 31 0.989333094 ubox
18 34 0.010044305 ubox
19 26 0.052094719 ubox
19 30 0.987885437 ubox
19 33 0.010054140 ubox
20 32 0.010038482 ubox
25 32 0.004175946 ubox
26 31 0.004199175 ubox
26 34 0.003611729 ubox
27 33 0.003626629 ubox
28 32 0.003697887 ubox
29 44 0.004333196 ubox
30 43 0.004489525 ubox
30 45 0.124525526 ubox
31 44 0.124773950 ubox
32 38 0.022774061 ubox
32 39 0.004461820 ubox
32 40 0.004579643 ubox
32 41 0.026194101 ubox
32 42 0.004891191 ubox
32 43 0.124712412 ubox
32 46 0.006777045 ubox
33 37 0.022438329 ubox
33 38 0.004865939 ubox
33 39 0.003730388 ubox
33 40 0.025997480 ubox
33 41 0.006282543 ubox
33 42 0.124440988 ubox
33 45 0.006832698 ubox
34 44 0.006823241 ubox
46 93 0.342949901 ubox
46 96 0.018982574 ubox
47 92 0.549769317 ubox
47 94 0.558883165 ubox
47 95 0.059231543 ubox
48 89 0.004180190 ubox
48 91 0.566379941 ubox
48 93 0.587548343 ubox
48 96 0.135919537 ubox
49 88 0.004190916 ubox
49 92 0.583371099 ubox
49 94 0.537313859 ubox
49 95 0.099082286 ubox
50 87 0.003427492 ubox
50 89 0.598783291 ubox
50 91 0.556575758 ubox
50 93 0.571959586 ubox
50 96 0.003188453 ubox
51 88 0.637799685 ubox
51 92 0.571984987 ubox
51 94 0.009950259 ubox
52 87 0.640088182 ubox
52 91 0.570438293 ubox
52 93 0.010510502 ubox
53 86 0.638882034 ubox
55 83 0.022212023 ubox
55 87 0.764216353 ubox
56 82 0.015743038 ubox
56 86 0.766232580 ubox
56 91 0.021474892 ubox
57 68 0.010568487 ubox
57 84 0.648478357 ubox
57 85 0.750757669 ubox
57 90 0.027814232 ubox
58 67 0.010590543 ubox
58 82 0.009740824 ubox
58 83 0.650972375 ubox
58 87 0.038397275 ubox
58 89 0.027577585 ubox
59 66 0.010606531 ubox
59 81 0.010230700 ubox
59 82 0.490181362 ubox
59 83 0.613405665 ubox
59 86 0.038473279 ubox
59 87 0.026141932 ubox
59 93 0.020865092 ubox
59 96 0.004042709 ubox
60 80 0.009754111 ubox
60 81 0.196323762 ubox
60 82 0.077385246 ubox
60 83 0.409710451 ubox
60 86 0.022073545 ubox
60 92 0.020942124 ubox
60 95 0.003935388 ubox
61 79 0.009019467 ubox
61 81 0.137956777 ubox
61 82 0.866045982 ubox
61 83 0.014607654 ubox
61 91 0.020950156 ubox
62 79 0.009509083 ubox
62 81 0.967874901 ubox
62 82 0.010933969 ubox
62 89 0.021015310 ubox
62 96 0.005417452 ubox
63 78 0.008440963 ubox
63 80 0.997823672 ubox
63 81 0.004811410 ubox
63 88 0.021044878 ubox
63 94 0.018676055 ubox
63 95 0.003911460 ubox
64 75 0.011640827 ubox
64 79 0.999408607 ubox
64 87 0.021048319 ubox
64 93 0.019952339 ubox
65 74 0.011706394 ubox
65 78 0.999199219 ubox
65 86 0.021032843 ubox
65 92 0.019894443 ubox
66 73 0.011763285 ubox
66 77 0.999380605 ubox
66 85 0.021058917 ubox
67 72 0.011633760 ubox
67 76 0.999062755 ubox
67 84 0.021056794 ubox
67 90 0.020070484 ubox
68 75 0.999109617 ubox
68 83 0.020444392 ubox
68 89 0.020077593 ubox
69 74 0.906531225 ubox
69 82 0.017167693 ubox
69 88 0.019674711 ubox
70 74 0.119322466 ubox
70 81 0.016942791 ubox
70 82 0.009720358 ubox
70 87 0.016753054 ubox
71 81 0.009694363 ubox
71 82 0.004246409 ubox
71 83 0.004058349 ubox
71 86 0.014927879 ubox
72 81 0.004407421 ubox
72 82 0.005928164 ubox
72 87 0.014825806 ubox
73 81 0.006044207 ubox
73 86 0.016635286 ubox
74 85 0.022571254 ubox
75 84 0.022623127 ubox
76 83 0.022600027 ubox
77 82 0.022411263 ubox
83 90 0.006937465 ubox
84 89 0.006930451 ubox
1 46 0.9500000 lbox
2 45 0.9500000 lbox
3 44 0.9500000 lbox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
47 92 0.9500000 lbox
48 91 0.9500000 lbox
50 89 0.9500000 lbox
51 88 0.9500000 lbox
52 87 0.9500000 lbox
53 86 0.9500000 lbox
57 84 0.9500000 lbox
58 83 0.9500000 lbox
59 82 0.9500000 lbox
62 81 0.9500000 lbox
63 80 0.9500000 lbox
64 79 0.9500000 lbox
65 78 0.9500000 lbox
66 77 0.9500000 lbox
67 76 0.9500000 lbox
68 75 0.9500000 lbox
69 74 0.9500000 lbox
showpage
end
%%EOF
