%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGCCCUGGGGACGCAGACGCCAAGGCCCCUCCGGCCAGGGCCGGGAGCCGGGCCGGCCUAGCCAGUUCUGAAAGCCCCAUGGCCCCAGCAGGCCUCUGAGCCCCACC\
) } def
/len { sequence length } bind def

/coor [
[216.51412964 357.54891968]
[228.08090210 347.72171021]
[223.12672424 333.56347656]
[218.17253113 319.40521240]
[213.21835327 305.24697876]
[206.90026855 291.64248657]
[199.27914429 278.72280884]
[191.65800476 265.80310059]
[178.52735901 258.77206421]
[178.18006897 242.95468140]
[170.55892944 230.03498840]
[162.93780518 217.11531067]
[155.31668091 204.19561768]
[147.69554138 191.27592468]
[131.37680054 190.27188110]
[118.71199799 179.67263794]
[114.77037811 163.46487427]
[121.28102875 147.92845154]
[113.30054474 135.22758484]
[105.32006073 122.52672577]
[97.33958435 109.82586670]
[90.62951660 105.13661957]
[89.31918335 96.65497589]
[81.69805145 83.73529053]
[70.85187531 81.58188629]
[63.19629288 73.91236877]
[61.14836121 63.49670029]
[65.15975189 53.90827179]
[58.27502441 40.58158875]
[51.39029694 27.25490379]
[36.11681747 26.43755913]
[23.38718987 18.13976288]
[16.56543159 4.67387962]
[17.39428902 -10.29839325]
[25.55117416 -22.76157188]
[18.66644669 -36.08825684]
[11.78171825 -49.41493988]
[4.89699078 -62.74162674]
[-1.98773730 -76.06831360]
[-8.87246513 -89.39499664]
[-20.98244858 -94.10034180]
[-26.41121483 -105.45890808]
[-22.71004105 -117.06974030]
[-29.21829796 -130.58427429]
[-35.72655487 -144.09880066]
[-50.33348465 -150.73335266]
[-54.11378479 -166.32466125]
[-44.16753006 -178.91241455]
[-28.12463951 -178.84036255]
[-18.29184341 -166.16378784]
[-22.21202087 -150.60707092]
[-15.70376492 -137.09252930]
[-9.19550896 -123.57799530]
[5.79789925 -114.57772064]
[4.45421934 -96.27972412]
[11.33894730 -82.95304108]
[18.22367477 -69.62635040]
[25.10840416 -56.29966736]
[31.99313164 -42.97298431]
[38.87786102 -29.64629936]
[53.76249313 -29.08665276]
[66.45293427 -21.09861183]
[73.48762512 -7.74273300]
[72.88871002 7.44074869]
[64.71697998 20.37017632]
[71.60170746 33.69686127]
[78.48643494 47.02354431]
[95.47931671 56.07017136]
[94.61774445 76.11415863]
[102.23886871 89.03385162]
[110.04044342 101.84538269]
[118.02092743 114.54624939]
[126.00140381 127.24710846]
[133.98188782 139.94796753]
[147.84648132 139.86329651]
[159.82902527 146.61975098]
[166.82040405 158.34034729]
[167.06831360 171.87677002]
[160.61523438 183.65480042]
[168.23635864 196.57447815]
[175.85749817 209.49417114]
[183.47862244 222.41386414]
[191.09976196 235.33355713]
[204.77551270 243.28868103]
[204.57769775 258.18197632]
[212.19882202 271.10165405]
[219.81996155 284.02136230]
[224.51341248 269.77456665]
[237.14115906 261.67886353]
[252.04656982 263.36074829]
[262.55276489 274.06683350]
[263.95349121 289.00128174]
[255.62127686 301.47421265]
[241.28855896 305.89837646]
[227.37660217 300.29278564]
[232.33078003 314.45101929]
[237.28497314 328.60928345]
[242.23915100 342.76751709]
[257.40960693 343.23898315]
[271.38375854 349.16238403]
[282.27178955 359.73666382]
[288.60113525 373.53173828]
[289.51583862 388.68191528]
[284.89215088 403.13827515]
[275.35543823 414.94567871]
[262.19543457 422.50732422]
[247.19189453 424.80053711]
[232.37397766 421.51516724]
[219.74565125 413.09555054]
[211.01481628 400.68035889]
[207.36222839 385.94866943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 98]
[3 97]
[4 96]
[5 95]
[6 87]
[7 86]
[8 85]
[10 83]
[11 82]
[12 81]
[13 80]
[14 79]
[18 74]
[19 73]
[20 72]
[21 71]
[23 70]
[24 69]
[28 67]
[29 66]
[30 65]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[43 53]
[44 52]
[45 51]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
