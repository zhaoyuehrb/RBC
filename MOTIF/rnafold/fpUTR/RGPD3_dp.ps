%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RGPD3)
} def

/sequence { (\
ACUGCUGCGGGGCUGAGCGCUGGUCUCACGCAUCUCGGGAGCCAGGUUGGUGGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 47 0.004505759 ubox
1 51 0.005777950 ubox
2 10 0.028969388 ubox
2 11 0.021866423 ubox
2 23 0.003299561 ubox
2 38 0.116482921 ubox
2 39 0.015176468 ubox
2 41 0.065045288 ubox
2 45 0.020154964 ubox
2 46 0.005063014 ubox
2 50 0.006113432 ubox
2 53 0.025074505 ubox
3 9 0.028975075 ubox
3 10 0.021629726 ubox
3 19 0.007311757 ubox
3 22 0.003205782 ubox
3 32 0.047457503 ubox
3 37 0.116679122 ubox
3 38 0.012654389 ubox
3 40 0.150376462 ubox
3 44 0.020175832 ubox
3 45 0.004570586 ubox
3 49 0.005741916 ubox
3 52 0.025125543 ubox
3 55 0.326229764 ubox
3 57 0.134109559 ubox
4 8 0.027689609 ubox
4 13 0.033047390 ubox
4 18 0.010158917 ubox
4 20 0.005012437 ubox
4 24 0.004161735 ubox
4 31 0.052770862 ubox
4 36 0.116469804 ubox
4 42 0.016124520 ubox
4 43 0.014499378 ubox
4 51 0.025264073 ubox
4 54 0.443753979 ubox
4 56 0.241283993 ubox
5 11 0.005591785 ubox
5 12 0.033211849 ubox
5 17 0.010165909 ubox
5 19 0.004953369 ubox
5 23 0.004511350 ubox
5 30 0.051689535 ubox
5 38 0.175373967 ubox
5 39 0.045765438 ubox
5 41 0.021504551 ubox
5 50 0.025321185 ubox
5 53 0.443974157 ubox
5 55 0.236461515 ubox
6 10 0.005100462 ubox
6 11 0.032639743 ubox
6 16 0.009963364 ubox
6 19 0.005583572 ubox
6 22 0.004072521 ubox
6 28 0.006268205 ubox
6 30 0.012801791 ubox
6 32 0.122231674 ubox
6 37 0.175399955 ubox
6 38 0.042792354 ubox
6 40 0.022031710 ubox
6 49 0.022448850 ubox
6 52 0.442225633 ubox
6 55 0.062215212 ubox
6 57 0.457791715 ubox
7 13 0.008050412 ubox
7 18 0.011857817 ubox
7 20 0.008982050 ubox
7 24 0.003348543 ubox
7 27 0.005959917 ubox
7 29 0.051453555 ubox
7 31 0.125180948 ubox
7 36 0.175204380 ubox
7 47 0.019167403 ubox
7 48 0.014246321 ubox
7 51 0.439250357 ubox
7 54 0.234962324 ubox
7 56 0.825398004 ubox
8 12 0.008030876 ubox
8 15 0.007112862 ubox
8 17 0.011871240 ubox
8 19 0.009519654 ubox
8 22 0.020339185 ubox
8 23 0.003559887 ubox
8 30 0.125122301 ubox
8 37 0.075119005 ubox
8 46 0.023625915 ubox
8 49 0.008021924 ubox
8 50 0.439984911 ubox
8 52 0.046151476 ubox
8 53 0.234454380 ubox
8 55 0.825973451 ubox
8 57 0.032590425 ubox
9 14 0.005986543 ubox
9 18 0.011002285 ubox
9 21 0.021883432 ubox
9 27 0.069529502 ubox
9 29 0.116653469 ubox
9 34 0.153816017 ubox
9 35 0.083431459 ubox
9 36 0.076427081 ubox
9 43 0.008597964 ubox
9 48 0.008676065 ubox
9 51 0.023611989 ubox
9 54 0.815910919 ubox
9 56 0.035134067 ubox
10 20 0.022867505 ubox
10 21 0.003568105 ubox
10 26 0.092410144 ubox
10 27 0.091945584 ubox
10 33 0.124996718 ubox
10 34 0.087863831 ubox
10 35 0.072810266 ubox
10 42 0.008600249 ubox
10 43 0.004831643 ubox
10 47 0.006897268 ubox
10 48 0.429711636 ubox
11 20 0.003758880 ubox
11 21 0.006770198 ubox
11 25 0.118731508 ubox
11 26 0.059282228 ubox
11 27 0.004837952 ubox
11 33 0.079344444 ubox
11 34 0.072035061 ubox
11 42 0.004841338 ubox
11 43 0.046557844 ubox
11 47 0.420261069 ubox
11 48 0.035991930 ubox
12 18 0.045568270 ubox
12 20 0.009237761 ubox
12 24 0.119043084 ubox
12 25 0.058836179 ubox
12 26 0.003352837 ubox
12 31 0.193111897 ubox
12 33 0.015804912 ubox
12 42 0.046686526 ubox
12 47 0.043849298 ubox
12 51 0.824032622 ubox
12 54 0.072104581 ubox
12 56 0.004520018 ubox
13 17 0.045277635 ubox
13 19 0.010133268 ubox
13 23 0.131370316 ubox
13 30 0.193605122 ubox
13 38 0.020633735 ubox
13 41 0.045803347 ubox
13 45 0.420792746 ubox
13 46 0.049540417 ubox
13 50 0.849201218 ubox
13 53 0.074510618 ubox
13 55 0.004474712 ubox
14 22 0.129634088 ubox
14 28 0.195357346 ubox
14 32 0.003619241 ubox
14 37 0.027296447 ubox
14 40 0.041903520 ubox
14 44 0.420343356 ubox
14 45 0.025491741 ubox
14 49 0.809370875 ubox
14 52 0.072179824 ubox
15 21 0.099147126 ubox
15 25 0.004991282 ubox
15 27 0.196685988 ubox
15 34 0.027697661 ubox
15 36 0.041524474 ubox
15 43 0.419825538 ubox
15 48 0.419428371 ubox
15 51 0.048810605 ubox
16 24 0.004733514 ubox
16 26 0.196622603 ubox
16 33 0.027925995 ubox
16 35 0.041589857 ubox
16 47 0.356421128 ubox
16 48 0.722987125 ubox
17 24 0.034895718 ubox
17 25 0.194650367 ubox
17 31 0.039176647 ubox
17 34 0.039241964 ubox
17 42 0.416148509 ubox
17 47 0.786206847 ubox
17 51 0.003614258 ubox
17 56 0.026896918 ubox
18 23 0.193631270 ubox
18 30 0.039898145 ubox
18 37 0.010033215 ubox
18 41 0.415761377 ubox
18 46 0.850800444 ubox
18 49 0.008323729 ubox
18 50 0.003595559 ubox
18 55 0.026935116 ubox
19 29 0.039909012 ubox
19 31 0.058096957 ubox
19 36 0.011355482 ubox
19 42 0.040449040 ubox
19 47 0.017601376 ubox
19 48 0.006796048 ubox
19 54 0.026890898 ubox
20 30 0.057802226 ubox
20 38 0.359086999 ubox
20 39 0.151263337 ubox
20 41 0.040502848 ubox
20 45 0.870998668 ubox
20 46 0.014558277 ubox
20 53 0.025650268 ubox
21 28 0.061262562 ubox
21 30 0.016174111 ubox
21 32 0.026237814 ubox
21 37 0.362644314 ubox
21 38 0.139321578 ubox
21 40 0.029383669 ubox
21 44 0.873047046 ubox
21 45 0.007277572 ubox
21 52 0.017408959 ubox
22 27 0.061832882 ubox
22 29 0.037949980 ubox
22 31 0.032825785 ubox
22 34 0.065263041 ubox
22 35 0.063532508 ubox
22 36 0.364175087 ubox
22 43 0.873714695 ubox
22 51 0.004423906 ubox
23 29 0.027361718 ubox
23 31 0.060154987 ubox
23 33 0.068625589 ubox
23 34 0.176859273 ubox
23 35 0.265367720 ubox
23 42 0.873596360 ubox
23 54 0.003819518 ubox
23 56 0.017221389 ubox
24 28 0.025227930 ubox
24 30 0.059946693 ubox
24 32 0.072847805 ubox
24 38 0.015086674 ubox
24 39 0.008663435 ubox
24 40 0.289414115 ubox
24 41 0.256578832 ubox
24 55 0.017145938 ubox
25 37 0.017723106 ubox
25 38 0.013173653 ubox
25 39 0.331513911 ubox
25 41 0.793799768 ubox
25 53 0.003830828 ubox
26 37 0.011627219 ubox
26 38 0.327921611 ubox
26 39 0.153785728 ubox
26 40 0.801800187 ubox
26 53 0.017437157 ubox
27 37 0.324820569 ubox
27 38 0.170758932 ubox
27 39 0.774538509 ubox
27 52 0.023043553 ubox
28 51 0.023749571 ubox
29 37 0.800342198 ubox
29 49 0.004597172 ubox
29 50 0.023784399 ubox
29 52 0.003347982 ubox
29 57 0.005596182 ubox
30 36 0.782641811 ubox
30 42 0.008705856 ubox
30 48 0.004558055 ubox
30 51 0.003421662 ubox
30 56 0.006109024 ubox
31 41 0.008739754 ubox
31 49 0.012205505 ubox
31 50 0.003294076 ubox
31 55 0.006103616 ubox
32 47 0.023200165 ubox
32 48 0.010676458 ubox
33 39 0.007021467 ubox
33 40 0.032142193 ubox
33 46 0.024204806 ubox
34 38 0.009995704 ubox
34 39 0.034102562 ubox
34 41 0.007203615 ubox
34 45 0.024475773 ubox
34 46 0.009191928 ubox
35 40 0.007211533 ubox
35 44 0.024317649 ubox
35 45 0.008966250 ubox
36 45 0.003300431 ubox
36 55 0.009090090 ubox
36 57 0.022581135 ubox
37 43 0.026269476 ubox
37 54 0.009573690 ubox
37 56 0.024524160 ubox
38 42 0.025918606 ubox
41 51 0.019440578 ubox
41 54 0.226988630 ubox
42 50 0.028363557 ubox
42 53 0.235169289 ubox
43 49 0.028474486 ubox
43 52 0.235256065 ubox
44 48 0.023087307 ubox
44 51 0.229164937 ubox
46 54 0.010594522 ubox
46 56 0.008973318 ubox
47 53 0.010493689 ubox
47 55 0.007153956 ubox
48 52 0.007735329 ubox
48 55 0.007418371 ubox
48 57 0.004093263 ubox
49 54 0.010966708 ubox
49 56 0.007934111 ubox
50 56 0.006740518 ubox
51 55 0.006320759 ubox
7 56 0.9500000 lbox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
20 45 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
showpage
end
%%EOF
