%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGCAGCUGCCCGGCGCCGGCUUCCGGGUGGUGCGAGCGAGAUGGGGCGGAGGGCCGGUCUUGCAGAGUAGCUGCGGUGAGUGGGCGUGUGCGCCGAGCGGUCUGGCCCAAGGGCUGGGGGCCGGCCGAGGGUCUUCGGGAGCAGGCCGCAGGGCGCGGAGAGAUCCUGGGAUCGCCGUCCGCCGCUGCUACCCGGC\
) } def
/len { sequence length } bind def

/coor [
[110.61669159 139.22727966]
[100.95110321 140.62744141]
[91.23058319 139.68112183]
[82.01654816 136.44296265]
[73.01024628 148.43823242]
[64.00394440 160.43350220]
[54.99763870 172.42877197]
[52.34402847 181.17883301]
[45.75445938 184.54023743]
[36.56085587 196.39256287]
[27.36724854 208.24488831]
[18.17364311 220.09721375]
[8.98003674 231.94953918]
[-0.21356863 243.80186462]
[-9.40717411 255.65419006]
[-18.60078049 267.50650024]
[-13.36111069 282.01684570]
[-16.82036591 297.05136108]
[-27.87470818 307.81265259]
[-42.99673843 310.86679077]
[-57.36106873 305.23919678]
[-66.38410187 292.72567749]
[-67.18660736 277.31921387]
[-59.51252365 263.93594360]
[-45.81061172 256.84640503]
[-30.45310593 258.31289673]
[-21.25950050 246.46058655]
[-12.06589413 234.60826111]
[-2.87228799 222.75593567]
[6.32131767 210.90361023]
[15.51492405 199.05128479]
[24.70852852 187.19895935]
[33.90213394 175.34663391]
[43.00236893 163.42247009]
[52.00867462 151.42720032]
[61.01497650 139.43193054]
[70.02127838 127.43665314]
[62.96187210 116.72335815]
[59.59418106 104.34318542]
[44.64041901 103.16629791]
[29.68665886 101.98941040]
[14.73289967 100.81252289]
[-0.22086073 99.63563538]
[-15.17462063 98.45875549]
[-30.12837982 97.28186798]
[-40.43050003 105.05233002]
[-52.86648560 103.75878906]
[-60.82099915 94.63804626]
[-75.75443268 93.22642517]
[-90.68785858 91.81479645]
[-103.91603088 100.89196777]
[-119.21780396 96.07167053]
[-124.85496521 81.05162048]
[-116.50317383 67.35391235]
[-100.56920624 65.48626709]
[-89.27623749 76.88137054]
[-74.34280396 78.29299164]
[-59.40937424 79.70462036]
[-43.87536621 71.54814911]
[-28.95149422 82.32810211]
[-13.99773407 83.50498962]
[0.95602572 84.68187714]
[15.90978527 85.85876465]
[30.86354637 87.03565216]
[45.81730652 88.21253967]
[60.77106476 89.38942719]
[71.56291199 70.96854401]
[90.20305634 60.56000137]
[111.54704285 61.03643417]
[129.70417786 72.26634979]
[142.36909485 64.22895050]
[155.03401184 56.19154739]
[167.69892883 48.15414429]
[180.36386108 40.11674118]
[187.86987305 26.18942070]
[202.76171875 25.90262604]
[215.42663574 17.86522484]
[228.09155273 9.82782269]
[240.75646973 1.79042113]
[253.42138672 -6.24698067]
[266.08630371 -14.28438282]
[265.92666626 -28.07223511]
[272.55017090 -40.04241943]
[284.13204956 -47.11812973]
[297.58935547 -47.54131699]
[309.40136719 -41.30832672]
[322.19097900 -49.14580536]
[334.98059082 -56.98328400]
[347.77017212 -64.82076263]
[347.30368042 -85.80886841]
[360.65332031 -103.08314514]
[382.71127319 -108.31439972]
[403.90972900 -98.15274048]
[414.84426880 -108.42094421]
[425.77877808 -118.68914795]
[436.71331787 -128.95735168]
[447.64785767 -139.22557068]
[448.30572510 -154.78849792]
[459.54116821 -165.04615784]
[474.37399292 -164.32307434]
[485.30850220 -174.59127808]
[496.24304199 -184.85948181]
[507.17758179 -195.12768555]
[518.11212158 -205.39590454]
[529.04663086 -215.66410828]
[539.98114014 -225.93231201]
[550.91571045 -236.20051575]
[555.82263184 -253.94456482]
[573.04565430 -257.29153442]
[583.81750488 -267.73022461]
[594.58941650 -278.16891479]
[605.27899170 -288.69189453]
[615.88562012 -299.29849243]
[626.49218750 -309.90509033]
[637.09881592 -320.51168823]
[641.38592529 -335.74099731]
[655.85650635 -339.26943970]
[666.46313477 -349.87603760]
[666.63183594 -365.45196533]
[677.53955078 -376.05746460]
[692.38775635 -375.80065918]
[702.99432373 -386.40725708]
[704.43225098 -402.38574219]
[717.90002441 -411.10339355]
[733.06646729 -405.87274170]
[738.29705811 -390.70632935]
[729.57946777 -377.23852539]
[713.60095215 -375.80065918]
[702.99432373 -365.19403076]
[703.25115967 -350.34582520]
[692.64562988 -339.43814087]
[677.06976318 -339.26943970]
[666.46313477 -328.66284180]
[662.93469238 -314.19219971]
[647.70538330 -309.90509033]
[637.09881592 -299.29849243]
[626.49218750 -288.69189453]
[615.88562012 -278.08529663]
[613.37658691 -271.12637329]
[605.02813721 -267.39703369]
[594.25622559 -256.95834351]
[583.48431396 -246.51963806]
[582.97906494 -234.42803955]
[574.08239746 -225.64300537]
[561.18389893 -225.26599121]
[550.24938965 -214.99778748]
[539.31481934 -204.72958374]
[528.38031006 -194.46136475]
[517.44580078 -184.19316101]
[506.51126099 -173.92495728]
[495.57672119 -163.65675354]
[484.64218140 -153.38854980]
[484.43249512 -138.53958130]
[473.48959351 -127.97039795]
[457.91604614 -128.29103088]
[446.98153687 -118.02282715]
[436.04699707 -107.75462341]
[425.11245728 -97.48641205]
[414.17794800 -87.21820831]
[416.40802002 -72.38491058]
[429.87844849 -65.78582001]
[443.34884644 -59.18673706]
[459.66430664 -60.84135437]
[469.03421021 -47.38262558]
[461.81958008 -32.65573883]
[445.44223022 -31.81045151]
[436.74975586 -45.71632385]
[423.27935791 -52.31541061]
[409.80892944 -58.91449738]
[403.96670532 -51.16313934]
[396.39785767 -45.40409851]
[387.73318481 -41.98466873]
[378.66058350 -41.06290054]
[369.87084961 -42.60292435]
[362.00500488 -46.38531494]
[355.60766602 -52.03116226]
[342.81805420 -44.19368362]
[330.02844238 -36.35620499]
[317.23886108 -28.51872635]
[316.47784424 -12.12470245]
[305.99255371 0.71598053]
[289.75949097 4.82058716]
[274.12371826 -1.61946380]
[261.45880127 6.41793823]
[248.79386902 14.45534039]
[236.12895203 22.49274254]
[223.46403503 30.53014374]
[210.79911804 38.56754684]
[204.19897461 51.91997910]
[188.40126038 52.78166199]
[175.73634338 60.81906128]
[163.07142639 68.85646820]
[150.40649414 76.89386749]
[137.74157715 84.93126678]
[140.24682617 94.37095642]
[140.42758179 104.13576508]
[138.27337646 113.66169739]
[133.90866089 122.39859009]
[127.58549500 129.84181213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 37]
[5 36]
[6 35]
[7 34]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[48 58]
[49 57]
[50 56]
[70 194]
[71 193]
[72 192]
[73 191]
[74 190]
[76 188]
[77 187]
[78 186]
[79 185]
[80 184]
[81 183]
[86 179]
[87 178]
[88 177]
[89 176]
[93 159]
[94 158]
[95 157]
[96 156]
[97 155]
[100 152]
[101 151]
[102 150]
[103 149]
[104 148]
[105 147]
[106 146]
[107 145]
[109 142]
[110 141]
[111 140]
[112 138]
[113 137]
[114 136]
[115 135]
[117 133]
[118 132]
[121 129]
[122 128]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
