%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCAGCCUCGCCGCCGCCGAGCGCCCGACGCGCCACGCCGCGCUGGGCAGCUGGAGAGCUGGCGGCGGAGCGGGCCGGGAGCGGCGGGGGCGGCGCCGAGGCCGCGGGCGGGGGGAGGAGGGCCGCAGCCCCGGAGAGGGGAAAAGGCGGGCCGGACGGCGCCAGCAGCCAGCCCCGAGGACGCGAGCGGCAGGUGUGCACAGAGGUUCUCCACUUUGUUUUCUGAACUCGCGGUCAGG\
) } def
/len { sequence length } bind def

/coor [
[76.15868378 98.51523590]
[78.19387817 88.66977692]
[63.24680710 89.92881012]
[48.29973984 91.18784332]
[33.35267258 92.44687653]
[18.40560341 93.70590973]
[2.36767220 105.94142914]
[-14.74274445 96.90836334]
[-29.65226555 98.55341339]
[-44.56178665 100.19846344]
[-59.47130585 101.84352112]
[-74.38082886 103.48857117]
[-89.25564575 105.42242432]
[-104.09016418 107.64436340]
[-118.92468262 109.86629486]
[-133.75920105 112.08823395]
[-148.59371948 114.31017303]
[-163.42825317 116.53210449]
[-175.93005371 126.22825623]
[-189.66304016 120.46159363]
[-204.49755859 122.68352509]
[-219.33207703 124.90546417]
[-233.48291016 136.70373535]
[-249.54824829 129.61918640]
[-264.35281372 132.03271484]
[-276.72821045 141.88967896]
[-290.53460693 136.30104065]
[-305.33917236 138.71456909]
[-320.14370728 141.12809753]
[-334.94827271 143.54164124]
[-338.17663574 146.37275696]
[-341.77404785 147.88984680]
[-345.28616333 148.13714600]
[-348.31881714 147.30062866]
[-350.57876587 145.67657471]
[-365.48828125 147.32162476]
[-380.39779663 148.96667480]
[-388.56384277 153.01065063]
[-395.51052856 150.53532410]
[-410.44006348 151.98748779]
[-425.36962891 153.43965149]
[-435.39572144 165.36083984]
[-450.55709839 166.62086487]
[-461.86035156 156.98902893]
[-476.78988647 158.44119263]
[-491.71942139 159.89335632]
[-506.64895630 161.34552002]
[-521.57849121 162.79768372]
[-530.34912109 172.23577881]
[-542.79931641 173.14860535]
[-552.22705078 165.59082031]
[-567.17413330 166.84985352]
[-582.12121582 168.10888672]
[-597.06823730 169.36791992]
[-612.01531982 170.62695312]
[-625.16278076 180.42878723]
[-640.11608887 173.69601440]
[-641.49261475 157.35473633]
[-627.87622070 148.21545410]
[-613.27435303 155.67988586]
[-598.32727051 154.42085266]
[-583.38018799 153.16181946]
[-568.43316650 151.90278625]
[-553.48608398 150.64375305]
[-539.62579346 139.86515808]
[-523.03070068 147.86813354]
[-508.10113525 146.41596985]
[-493.17160034 144.96380615]
[-478.24203491 143.51164246]
[-463.31250000 142.05947876]
[-454.07730103 130.42991638]
[-438.95733643 128.74453735]
[-426.82177734 138.51011658]
[-411.89224243 137.05795288]
[-396.96270752 135.60578918]
[-382.04284668 134.05714417]
[-367.13333130 132.41209412]
[-352.22381592 130.76704407]
[-337.36181641 128.73707581]
[-322.55725098 126.32354736]
[-307.75268555 123.91001892]
[-292.94815063 121.49648285]
[-281.63165283 111.81215668]
[-266.76632690 117.22816467]
[-251.96177673 114.81463623]
[-244.65493774 105.19112396]
[-232.35647583 103.04895020]
[-221.55401611 110.07094574]
[-206.71949768 107.84900665]
[-191.88497925 105.62706757]
[-180.44422913 96.08985138]
[-165.65017700 101.69758606]
[-150.81565857 99.47564697]
[-135.98114014 97.25371552]
[-121.14662170 95.03177643]
[-106.31210327 92.80983734]
[-91.47757721 90.58790588]
[-89.10545349 88.00647736]
[-85.37381744 86.43565369]
[-80.76658630 86.49811554]
[-76.02587891 88.57904816]
[-61.11635590 86.93399811]
[-46.20683670 85.28894806]
[-31.29731560 83.64389801]
[-16.38779449 81.99884796]
[-10.75901699 73.50203705]
[-1.18570697 69.40950012]
[9.27754593 71.28884888]
[17.14657021 78.75884247]
[32.09363937 77.49980927]
[47.04070663 76.24077606]
[61.98777390 74.98174286]
[76.93484497 73.72270966]
[90.06821442 66.47602081]
[99.10317993 54.50232697]
[108.13815308 42.52863312]
[117.17311859 30.55493927]
[115.18241119 15.10583401]
[124.51571655 3.09151149]
[139.25634766 1.28888237]
[148.29132080 -10.68481255]
[140.43898010 -32.93286896]
[159.60169983 -56.08005142]
[166.33369446 -69.48454285]
[165.61289978 -85.28932190]
[178.23919678 -93.19033051]
[184.97117615 -106.59482574]
[191.70317078 -119.99931335]
[198.43515015 -133.40380859]
[191.12817383 -152.14089966]
[199.85330200 -169.92060852]
[218.55723572 -175.43167114]
[224.76440430 -189.08711243]
[230.97155762 -202.74255371]
[237.17872620 -216.39799500]
[232.91474915 -231.86402893]
[242.46421814 -244.75540161]
[258.50155640 -245.18295288]
[268.72433472 -232.81871033]
[265.29049683 -217.14746094]
[250.83416748 -210.19084167]
[244.62701416 -196.53540039]
[238.41984558 -182.87994385]
[232.21269226 -169.22450256]
[238.25329590 -160.97050476]
[240.35003662 -150.87707520]
[238.06109619 -140.74281311]
[231.73228455 -132.40188599]
[222.44667053 -127.39216614]
[211.83964539 -126.67181396]
[205.10765076 -113.26732635]
[198.37567139 -99.86283112]
[191.64367676 -86.45834351]
[192.84599304 -71.61234283]
[179.73818970 -62.75255585]
[173.00619507 -49.34806442]
[178.22309875 -43.95975494]
[185.24807739 -57.21305084]
[200.02352905 -54.62738037]
[202.13026428 -39.77606201]
[188.65692139 -33.18313980]
[193.87382507 -27.79483223]
[207.48886108 -34.09013367]
[216.49102783 -47.79754257]
[232.84529114 -46.58514404]
[239.72779846 -31.70014572]
[230.05841064 -18.45495987]
[213.78416443 -20.47509766]
[200.16912842 -14.17979622]
[187.91621399 -0.80386293]
[172.69544983 2.98202658]
[160.26501465 -1.64984512]
[151.23004150 10.32384968]
[153.54135132 24.99332237]
[144.54917908 37.26506042]
[129.14680481 39.58990479]
[120.11184692 51.56360245]
[111.07688141 63.53729630]
[102.04190826 75.51099396]
[112.24766541 79.89212036]
[119.07770538 88.04402161]
[121.38603210 97.94219971]
[119.08582306 107.35810089]
[130.12860107 117.50981140]
[141.17135620 127.66152191]
[152.27952576 137.74163818]
[163.45260620 147.74974060]
[174.62570190 157.75784302]
[185.79878235 167.76594543]
[196.97187805 177.77404785]
[210.23295593 175.49089050]
[222.21574402 181.17297363]
[228.64862061 192.54713440]
[227.38160706 205.35743713]
[238.42437744 215.50914001]
[249.46714783 225.66085815]
[260.50991821 235.81256104]
[270.68463135 232.72985840]
[281.14260864 234.12651062]
[290.01510620 239.68559265]
[295.74468994 248.35247803]
[297.35830688 258.53430176]
[294.63223267 268.39260864]
[305.27307129 278.96487427]
[315.91390991 289.53713989]
[326.55471802 300.10940552]
[337.19555664 310.68167114]
[347.83639526 321.25393677]
[363.13241577 318.64416504]
[377.02618408 325.55377197]
[384.17529297 339.32583618]
[381.83068848 354.66476440]
[370.89398193 365.67239380]
[355.57052612 368.11608887]
[341.75253296 361.05618286]
[334.75326538 347.20736694]
[337.26412964 331.89477539]
[326.62329102 321.32250977]
[315.98245239 310.75024414]
[305.34164429 300.17797852]
[294.70080566 289.60571289]
[284.05996704 279.03344727]
[264.61651611 280.50335693]
[250.16032410 266.96582031]
[250.35820007 246.85533142]
[239.31542969 236.70362854]
[228.27267456 226.55191040]
[217.22990417 216.40020752]
[200.46232605 217.81838989]
[187.61085510 206.43879700]
[186.96377563 188.94714355]
[175.79067993 178.93904114]
[164.61759949 168.93093872]
[153.44450378 158.92283630]
[142.27142334 148.91473389]
[135.20733643 146.79757690]
[131.01965332 138.70429993]
[119.97688293 128.55258179]
[108.93411255 118.40087128]
[100.73986816 121.12861633]
[91.86308289 120.25473785]
[83.86483765 115.70225525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 113]
[3 112]
[4 111]
[5 110]
[6 109]
[8 105]
[9 104]
[10 103]
[11 102]
[12 101]
[13 97]
[14 96]
[15 95]
[16 94]
[17 93]
[18 92]
[20 90]
[21 89]
[22 88]
[24 85]
[25 84]
[27 82]
[28 81]
[29 80]
[30 79]
[35 78]
[36 77]
[37 76]
[39 75]
[40 74]
[41 73]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[114 179]
[115 178]
[116 177]
[117 176]
[120 173]
[121 172]
[123 156]
[124 155]
[126 153]
[127 152]
[128 151]
[129 150]
[132 144]
[133 143]
[134 142]
[135 141]
[162 169]
[163 168]
[183 239]
[184 238]
[185 237]
[186 235]
[187 234]
[188 233]
[189 232]
[190 231]
[194 228]
[195 227]
[196 226]
[197 225]
[203 222]
[204 221]
[205 220]
[206 219]
[207 218]
[208 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
