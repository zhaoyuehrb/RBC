%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUGCGUCCCGAGCCCGCCAGAAGCUGCUAGGCUGAGGCUGCUGUCCCGGCGGGAGCUGUGGCGCGGAGCGGCCCCUCUGCUGCGUCUGCCCUCGUUUUGUCUCACGACUCACACUCAGUGCUCCAUUCCCCAAGAGUUCGCGUUCCCCGCGCGGCGGUCGAGAGGCGGCUGCCCGCGGUCCCGCGCGGGCGCGGGGCG\
) } def
/len { sequence length } bind def

/coor [
[73.84016418 349.40924072]
[61.88094711 359.74136353]
[46.12489700 358.50750732]
[35.91978836 346.43972778]
[37.32013702 330.69760132]
[49.49513626 320.62066650]
[50.66617966 305.66644287]
[51.83722305 290.71221924]
[53.00826645 275.75799561]
[54.17930984 260.80377197]
[55.35035324 245.84956360]
[56.52139664 230.89535522]
[49.80132294 217.60287476]
[58.59238052 204.44886780]
[59.76342392 189.49464417]
[60.93446732 174.54043579]
[62.10551071 159.58621216]
[50.44094849 150.15551758]
[36.06365585 154.43260193]
[21.68636322 158.70968628]
[7.30907202 162.98678589]
[0.48912787 173.94067383]
[-11.57996082 177.20416260]
[-22.28125381 171.55335999]
[-36.72363663 175.60520935]
[-51.16601944 179.65707397]
[-65.60840607 183.70893860]
[-76.80553436 194.88635254]
[-91.14970398 190.87463379]
[-105.59208679 194.92648315]
[-110.48702240 199.39012146]
[-116.06420898 200.53373718]
[-120.54940033 198.87171936]
[-135.11137390 202.47019958]
[-149.67333984 206.06869507]
[-164.23530579 209.66717529]
[-175.77630615 220.48918152]
[-189.98808289 216.03109741]
[-204.55004883 219.62959290]
[-219.11201477 223.22807312]
[-230.55079651 234.97909546]
[-246.37820435 230.68658447]
[-250.31234741 214.76634216]
[-238.30612183 203.59571838]
[-222.71051025 208.66610718]
[-208.14854431 205.06761169]
[-193.58657837 201.46913147]
[-183.08714294 190.90451050]
[-167.83378601 195.10520935]
[-153.27182007 191.50672913]
[-138.70985413 187.90823364]
[-124.14789581 184.30975342]
[-109.64394379 180.48410034]
[-95.20156097 176.43225098]
[-85.03745270 165.54463196]
[-69.66026306 169.26654053]
[-55.21788025 165.21469116]
[-40.77549362 161.16282654]
[-26.33311272 157.11097717]
[-14.76982975 143.91488647]
[3.03198504 148.60948181]
[17.40927696 144.33239746]
[31.78656960 140.05531311]
[46.16386032 135.77822876]
[50.44094849 121.40093231]
[40.73939896 109.96065521]
[31.03785133 98.52037811]
[21.33630180 87.08010101]
[11.63475323 75.63982391]
[1.84409726 64.27571106]
[-8.03506851 52.98845673]
[-17.91423416 41.70120621]
[-27.79339981 30.41395187]
[-37.67256546 19.12669945]
[-53.45665359 18.32785606]
[-63.99068451 6.54610300]
[-63.02500916 -9.22865582]
[-51.13254166 -19.63753510]
[-35.36887360 -18.50513268]
[-25.08630943 -6.50328016]
[-26.38531303 9.24753380]
[-16.50614738 20.53478622]
[-6.62698126 31.82204056]
[3.25218463 43.10929108]
[13.13135052 54.39654541]
[19.90776825 57.36170197]
[23.07503128 65.93827820]
[32.77658081 77.37855530]
[42.47813034 88.81883240]
[52.17967606 100.25910950]
[61.88122559 111.69938660]
[56.01727676 92.30825806]
[60.47501373 70.32216644]
[76.13980103 51.33097458]
[76.60861969 36.33830261]
[77.07743835 21.34563065]
[77.54625702 6.35295963]
[65.20181274 -3.04887128]
[60.77346802 -17.92063522]
[65.96399689 -32.54383469]
[78.77754974 -41.29555130]
[94.28704834 -40.81057358]
[106.52877045 -31.27538300]
[110.79552460 -16.35645485]
[105.44666290 -1.79042244]
[92.53892517 6.82177782]
[92.07010651 21.81444931]
[91.60128784 36.80712128]
[91.13246918 51.79979324]
[98.35366058 53.82572174]
[112.79605103 57.87758255]
[120.01724243 59.90351105]
[127.41548920 46.85491562]
[134.81375122 33.80632019]
[131.94364929 18.02208519]
[142.60289001 6.03209114]
[158.61463928 7.03403664]
[167.69601440 20.25931358]
[162.88059998 35.56262207]
[147.86233521 41.20457458]
[140.46408081 54.25317001]
[133.06584167 67.30176544]
[144.27554321 77.26883698]
[156.36932373 68.39525604]
[168.46310425 59.52167130]
[166.70631409 44.26358032]
[172.82867432 30.17768669]
[185.18325806 21.05302238]
[200.44679260 19.34407616]
[214.51342773 25.51054764]
[223.59931946 37.89368439]
[225.26040649 53.16248703]
[219.04988098 67.20972443]
[206.63832092 76.25675964]
[191.36437988 77.86998749]
[177.33668518 71.61544800]
[165.24290466 80.48903656]
[153.14912415 89.36261749]
[148.83462524 113.32839966]
[135.03890991 131.38298035]
[115.97383118 140.41374207]
[96.51306915 139.72099304]
[110.04932404 146.18395996]
[123.58557892 152.64691162]
[137.12182617 159.10986328]
[151.87434387 150.84375000]
[168.48246765 152.97546387]
[180.42968750 164.46899414]
[183.14736938 180.65447998]
[196.78298950 186.90509033]
[210.41859436 193.15570068]
[224.05421448 199.40631104]
[237.68981934 205.65690613]
[246.80311584 206.38969421]
[251.48852539 212.11323547]
[265.02478027 218.57620239]
[278.56103516 225.03915405]
[292.09729004 231.50210571]
[305.63354492 237.96507263]
[319.16979980 244.42802429]
[332.70605469 250.89097595]
[346.24230957 257.35394287]
[361.78582764 253.38168335]
[374.49523926 263.17196655]
[374.62103271 279.21450806]
[362.06665039 289.20288086]
[346.46276855 285.47482300]
[339.77935791 270.89019775]
[326.24310303 264.42724609]
[312.70684814 257.96426392]
[299.17059326 251.50132751]
[285.63433838 245.03836060]
[272.09808350 238.57540894]
[258.56182861 232.11245728]
[245.02555847 225.64949036]
[231.43920898 219.29252625]
[217.80360413 213.04191589]
[204.16798401 206.79130554]
[190.53237915 200.54071045]
[176.89675903 194.29010010]
[165.91596985 201.89166260]
[152.50524902 203.08224487]
[140.16006470 197.44409180]
[132.15132141 186.35340881]
[130.65887451 172.64611816]
[117.12261963 166.18316650]
[103.58636475 159.72021484]
[90.05010986 153.25724792]
[77.05973053 160.75724792]
[75.88868713 175.71147156]
[74.71764374 190.66569519]
[73.54660034 205.61991882]
[80.18291473 219.98200989]
[71.47561646 232.06639099]
[70.30457306 247.02061462]
[69.13352966 261.97482300]
[67.96248627 276.92904663]
[66.79144287 291.88327026]
[65.62039948 306.83749390]
[64.44935608 321.79171753]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[14 192]
[15 191]
[16 190]
[17 189]
[18 64]
[19 63]
[20 62]
[21 61]
[24 59]
[25 58]
[26 57]
[27 56]
[29 54]
[30 53]
[33 52]
[34 51]
[35 50]
[36 49]
[38 47]
[39 46]
[40 45]
[65 91]
[66 90]
[67 89]
[68 88]
[69 87]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
[94 109]
[95 108]
[96 107]
[97 106]
[112 122]
[113 121]
[114 120]
[123 138]
[124 137]
[125 136]
[142 188]
[143 187]
[144 186]
[145 185]
[149 180]
[150 179]
[151 178]
[152 177]
[153 176]
[155 175]
[156 174]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
