%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUGUGAUAGUGAAGAAGUCUCACAAGAUCUGAUCAUUUAUAAUGGGUUUCCACUUUUGCAUCUGGAUCAUUUUUCUCUUGCCACCACCAUGUAAGAAGUGCCUUUCACCUCCCACCAUGAACCUGAGGCCUCCCAAGUCAUGUGGAAAUGAUCGUUCUGCAGCCUGUUUCGUGGUCUACAGACUCUAGCUCAAGCUACAGGAUCAAGGUUCUACCCACAGAAGGUUGGCAUCUGAGCUGUGU\
) } def
/len { sequence length } bind def

/coor [
[265.16735840 547.83166504]
[261.94955444 533.18133545]
[254.62419128 534.79040527]
[248.33779907 548.40954590]
[242.05140686 562.02874756]
[235.76501465 575.64788818]
[229.47862244 589.26702881]
[223.19223022 602.88616943]
[216.90583801 616.50531006]
[210.61944580 630.12445068]
[220.68681335 641.55114746]
[225.22998047 656.08654785]
[223.46180725 671.21252441]
[215.68865967 684.30822754]
[203.25726318 693.10485840]
[188.32145691 696.07830811]
[173.46893311 692.71337891]
[161.27299500 683.59313965]
[153.84666443 670.29766846]
[152.47659302 655.13049316]
[157.40016174 640.71942139]
[167.76431274 629.56127930]
[181.77340698 623.58929443]
[197.00030518 623.83807373]
[203.28669739 610.21893311]
[209.57308960 596.59979248]
[215.85948181 582.98065186]
[222.14587402 569.36151123]
[228.43226624 555.74230957]
[234.71865845 542.12316895]
[241.00505066 528.50402832]
[247.20187378 519.64489746]
[254.88597107 513.67810059]
[263.11840820 510.76651001]
[270.97271729 510.80911255]
[265.03475952 497.03448486]
[259.09680176 483.25982666]
[253.15884399 469.48519897]
[247.22090149 455.71057129]
[241.28294373 441.93591309]
[230.04618835 440.12731934]
[220.97726440 433.05416870]
[216.39184570 422.37631226]
[217.53088379 410.69116211]
[224.22726440 400.90222168]
[218.64158630 386.98098755]
[213.05592346 373.05978394]
[207.47024536 359.13854980]
[201.88458252 345.21734619]
[196.29890442 331.29614258]
[190.71324158 317.37490845]
[186.65191650 331.81463623]
[175.48922729 341.83435059]
[160.69631958 344.31829834]
[146.87319946 338.49411011]
[138.31828308 326.17285156]
[137.69178772 311.18594360]
[145.18855286 298.19369507]
[158.47737122 291.23617554]
[173.42597961 292.47686768]
[185.38618469 301.53030396]
[181.42715454 287.06219482]
[177.46813965 272.59408569]
[173.50912476 258.12597656]
[159.06724548 254.47940063]
[148.31817627 244.02407837]
[144.21856689 229.49620056]
[147.96578979 214.77018738]
[158.65051270 203.82562256]
[154.69149780 189.35751343]
[150.73248291 174.88940430]
[146.77346802 160.42129517]
[142.81445312 145.95318604]
[138.85543823 131.48507690]
[134.89642334 117.01696014]
[130.93740845 102.54885101]
[126.15927124 124.58992767]
[105.85066986 140.34022522]
[77.00516510 139.40347290]
[52.93866730 118.26741028]
[41.64797592 108.39217377]
[30.35728645 98.51693726]
[19.06659698 88.64170074]
[7.77590561 78.76646423]
[-3.51478481 68.89122772]
[-18.30833244 73.26780701]
[-33.11320877 68.92969513]
[-43.20522690 57.26116180]
[-45.36406326 41.98559570]
[-38.90084076 27.97737122]
[-25.87795258 19.70646667]
[-10.45094967 19.81209373]
[2.45746326 28.26055145]
[8.72826004 42.35596466]
[6.36045218 57.60053635]
[17.65114212 67.47577667]
[28.94183350 77.35101318]
[40.23252487 87.22624969]
[51.52321625 97.10148621]
[62.81390381 106.97672272]
[74.88205719 98.06719208]
[86.94914246 89.15846252]
[80.83647156 75.46045685]
[74.72380829 61.76245499]
[60.31590271 54.70612335]
[56.99040604 39.01151657]
[67.29835510 26.71819687]
[83.33237457 27.25654411]
[92.79253387 40.21358490]
[88.42181396 55.64978790]
[94.53447723 69.34779358]
[100.64714813 83.04579163]
[108.11304474 82.33143616]
[114.34161377 68.68574524]
[123.04485321 80.90271759]
[130.51075745 80.18835449]
[133.91496277 65.57975006]
[137.31916809 50.97114563]
[140.72337341 36.36254120]
[139.62365723 27.31898117]
[144.26489258 21.59035301]
[147.85462952 7.02622557]
[151.44436646 -7.53790188]
[150.45976257 -16.59471703]
[155.17349243 -22.26385117]
[158.94816589 -36.78114319]
[154.93260193 -52.08427429]
[165.62367249 -62.45492172]
[169.39836121 -76.97221375]
[168.52902222 -86.04081726]
[173.31446838 -91.64954376]
[177.27348328 -106.11765289]
[175.62203979 -122.99097443]
[191.37876892 -129.24888611]
[201.75402832 -115.84028625]
[191.74159241 -102.15863800]
[187.78257751 -87.69052887]
[183.91564941 -73.19753265]
[180.14096069 -58.68024063]
[184.42651367 -44.41548538]
[173.46545410 -33.00646210]
[169.69078064 -18.48917007]
[166.00849915 -3.94816685]
[162.41876221 10.61596012]
[158.82902527 25.18008804]
[155.33198547 39.76675034]
[151.92778015 54.37535477]
[148.52355957 68.98396301]
[145.11935425 83.59256744]
[145.40551758 98.58983612]
[149.36453247 113.05794525]
[153.32354736 127.52605438]
[157.28256226 141.99417114]
[161.24157715 156.46228027]
[165.20059204 170.93038940]
[169.15960693 185.39849854]
[173.11862183 199.86660767]
[187.88717651 203.84620667]
[198.61007690 214.61264038]
[202.47851562 229.20379639]
[198.55036926 243.67533875]
[187.97723389 254.16696167]
[191.93624878 268.63507080]
[195.89527893 283.10317993]
[199.85429382 297.57128906]
[204.63446045 311.78924561]
[210.22012329 325.71044922]
[215.80580139 339.63168335]
[221.39146423 353.55288696]
[226.97714233 367.47412109]
[232.56280518 381.39532471]
[238.14848328 395.31655884]
[255.85252380 402.11190796]
[262.82464600 419.40240479]
[255.05758667 435.99795532]
[260.99554443 449.77261353]
[266.93350220 463.54724121]
[272.87142944 477.32189941]
[278.80938721 491.09652710]
[284.74734497 504.87115479]
[293.65646362 516.93878174]
[305.07183838 526.66961670]
[316.48724365 536.40045166]
[327.90261841 546.13128662]
[339.31799316 555.86212158]
[347.85708618 559.03686523]
[350.81564331 565.79003906]
[362.10635376 575.66528320]
[373.39703369 585.54052734]
[386.63427734 592.59570312]
[401.12725830 596.46264648]
[415.62026978 600.32952881]
[430.11325073 604.19647217]
[445.79989624 599.41510010]
[457.59765625 610.80566406]
[453.37005615 626.65051270]
[437.46603394 630.64984131]
[426.24633789 618.68945312]
[411.75332642 614.82257080]
[397.26034546 610.95562744]
[382.76733398 607.08868408]
[378.42871094 613.20635986]
[390.66409302 621.88366699]
[402.89947510 630.56097412]
[415.13470459 639.23846436]
[406.45706177 651.47357178]
[394.22216797 642.79632568]
[381.98678589 634.11907959]
[369.75140381 625.44177246]
[365.41275024 631.55944824]
[373.85504150 643.95812988]
[382.29736328 656.35687256]
[390.73965454 668.75555420]
[404.90213013 675.80780029]
[405.66979980 690.68261719]
[414.11209106 703.08129883]
[422.55438232 715.47998047]
[436.71688843 722.53222656]
[437.48455811 737.40704346]
[445.92684937 749.80572510]
[461.49862671 752.50671387]
[470.53118896 765.47546387]
[467.66571045 781.01782227]
[454.60220337 789.91278076]
[439.09103394 786.88311768]
[430.33468628 773.72631836]
[433.52813721 758.24804688]
[425.08584595 745.84930420]
[411.52719116 739.68395996]
[410.15570068 723.92230225]
[401.71340942 711.52355957]
[393.27111816 699.12487793]
[379.71246338 692.95947266]
[378.34094238 677.19781494]
[369.89865112 664.79913330]
[361.45635986 652.40045166]
[353.01406860 640.00177002]
[363.52178955 596.83123779]
[352.23110962 586.95599365]
[340.94039917 577.08074951]
[329.58715820 567.27752686]
[318.17178345 557.54669189]
[306.75640869 547.81585693]
[295.34100342 538.08502197]
[283.92562866 528.35418701]
[276.60028076 529.96325684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 31]
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[50 167]
[51 166]
[61 165]
[62 164]
[63 163]
[64 162]
[69 157]
[70 156]
[71 155]
[72 154]
[73 153]
[74 152]
[75 151]
[76 150]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[102 112]
[103 111]
[104 110]
[116 149]
[117 148]
[118 147]
[119 146]
[121 145]
[122 144]
[123 143]
[125 142]
[126 141]
[128 139]
[129 138]
[131 137]
[132 136]
[181 245]
[182 244]
[183 243]
[184 242]
[185 241]
[187 240]
[188 239]
[189 238]
[190 201]
[191 200]
[192 199]
[193 198]
[210 237]
[211 236]
[212 235]
[213 234]
[215 232]
[216 231]
[217 230]
[219 228]
[220 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
