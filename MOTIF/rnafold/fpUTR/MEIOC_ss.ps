%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGAGCCCCAGGCAGGCCAGGUAACGGCCUCUGCCCCCGCCCCUCCCUCCCCGCUCGGACUUCCCUUACCCGCACACUGGCUCCAGGCAGCGCCCGGGCGGCGGAGGCGGCUGCGGAGACGGCGGGGUGCGGGCUGAGGGAGCCGGGCCUGGACGCCCCCCCCAUCACCCCCGUACCCCAGGAGCUGUGCCUAGUCCAGGAGAGGCUGGGGGGCGCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.83184814 295.22894287]
[107.75938416 282.62640381]
[107.33297729 267.63247681]
[106.90657806 252.63853455]
[95.93672180 242.62864685]
[95.29069519 227.42872620]
[105.86436462 215.99040222]
[105.43795776 200.99645996]
[105.01155853 186.00253296]
[104.58515167 171.00859070]
[104.15875244 156.01464844]
[89.95336914 151.19726562]
[80.49424744 162.83879089]
[71.03511810 174.48030090]
[61.57599258 186.12182617]
[52.28330612 197.89662170]
[43.15893555 209.80232239]
[34.03456497 221.70803833]
[24.91019249 233.61373901]
[28.48021889 248.83836365]
[21.38272095 262.77246094]
[6.96891928 268.83682251]
[-7.95542955 264.16799927]
[-16.34350395 250.97050476]
[-14.23471260 235.47575378]
[-2.62476087 224.99992371]
[13.00448608 224.48936462]
[22.12885666 212.58366394]
[31.25322723 200.67796326]
[40.37759781 188.77224731]
[40.65206146 184.01095581]
[43.91559982 179.36968994]
[49.93447495 176.66268921]
[59.39360046 165.02117920]
[68.85272980 153.37965393]
[78.31185150 141.73814392]
[63.96989822 113.41613007]
[72.25807190 88.96239471]
[60.16053009 80.09394836]
[48.06298447 71.22549438]
[35.96544266 62.35704803]
[20.54535675 64.56129456]
[8.40305996 55.39509201]
[6.39667225 40.68081665]
[-5.70087242 31.81236458]
[-21.40527725 29.89344406]
[-27.09533501 16.12854385]
[-39.19287872 7.26009226]
[-51.29042435 -1.60835814]
[-63.38796997 -10.47680855]
[-75.48551178 -19.34525871]
[-87.64578247 -28.12750053]
[-99.86817169 -36.82308960]
[-112.09056091 -45.51868057]
[-124.31294250 -54.21426773]
[-136.53532410 -62.90985870]
[-148.75772095 -71.60544586]
[-160.98010254 -80.30104065]
[-173.20248413 -88.99662781]
[-168.34417725 -74.80519104]
[-169.88697815 -59.88474655]
[-177.54629517 -46.98765945]
[-189.90922546 -38.49305725]
[-204.69514465 -35.96793747]
[-219.17652893 -39.87811279]
[-230.68199158 -49.50226974]
[-237.08912659 -63.06504059]
[-237.21598816 -78.06450653]
[-231.03918457 -91.73371124]
[-219.69816589 -101.55110168]
[-205.28498840 -105.70566559]
[-190.46131897 -103.43210602]
[-201.18038940 -113.92502594]
[-211.89947510 -124.41794586]
[-227.10939026 -121.97574615]
[-240.68226624 -128.87724304]
[-247.50796509 -142.28894043]
[-245.15562439 -156.97242737]
[-255.87469482 -167.46534729]
[-266.59378052 -177.95826721]
[-282.60430908 -181.50721741]
[-287.27734375 -197.22647095]
[-275.80569458 -208.94538879]
[-259.99038696 -204.60855103]
[-256.10086060 -188.67733765]
[-245.38177490 -178.18441772]
[-234.66270447 -167.69149780]
[-220.03271484 -170.35638428]
[-206.47853088 -163.81819153]
[-199.28919983 -150.39556885]
[-201.40655518 -135.13702393]
[-190.68746948 -124.64410400]
[-179.96839905 -114.15118408]
[-169.78021240 -111.74661255]
[-164.50689697 -101.21901703]
[-152.28451538 -92.52342224]
[-140.06213379 -83.82783508]
[-127.83974457 -75.13224792]
[-115.61735535 -66.43665314]
[-103.39496613 -57.74106598]
[-91.17258453 -49.04547501]
[-78.95019531 -40.34988785]
[-71.68315887 -39.03457260]
[-66.61706543 -31.44280434]
[-54.51951981 -22.57435417]
[-42.42197418 -13.70590305]
[-30.32442856 -4.83745241]
[-18.22688484 4.03099823]
[-3.38777757 5.31558800]
[3.16757798 19.71482086]
[15.26512241 28.58327103]
[29.90121651 26.06923866]
[42.29618073 34.89077377]
[44.83389282 50.25950241]
[56.93143845 59.12795258]
[69.02898407 67.99639893]
[81.12652588 76.86485291]
[105.73970032 64.88237762]
[134.94567871 77.96987915]
[145.15478516 113.17168427]
[159.39404297 108.45538330]
[173.63331604 103.73908997]
[187.87257385 99.02278900]
[202.11183167 94.30649567]
[216.21127319 89.18732452]
[230.15948486 83.66942596]
[244.10769653 78.15151978]
[258.05590820 72.63362122]
[272.00411987 67.11571503]
[285.95236206 61.59781265]
[299.90057373 56.07991028]
[313.84878540 50.56200409]
[327.79699707 45.04410172]
[341.74520874 39.52619934]
[352.85388184 24.83593750]
[370.10198975 28.08857918]
[383.97036743 22.37296104]
[397.83874512 16.65734291]
[411.66613770 10.84329987]
[425.45187378 4.93112230]
[439.23757935 -0.98105490]
[441.41458130 -12.65961361]
[448.87957764 -21.74636269]
[459.69094849 -26.05985641]
[471.12301636 -24.63705063]
[480.35321045 -17.94570541]
[494.30142212 -23.46360779]
[508.24963379 -28.98151016]
[522.19787598 -34.49941254]
[528.24780273 -49.09986877]
[542.88165283 -55.06868744]
[557.41729736 -48.86467743]
[563.23107910 -34.16856766]
[556.87377930 -19.69930077]
[542.11700439 -14.04123211]
[527.71575928 -20.55119705]
[513.76751709 -15.03329372]
[499.81930542 -9.51539135]
[485.87109375 -3.99748826]
[479.61389160 13.21172142]
[462.46762085 20.50030327]
[445.14974976 12.80466843]
[431.36404419 18.71684456]
[417.57830811 24.62902260]
[412.67352295 30.15015793]
[403.55435181 30.52571487]
[389.68597412 36.24133301]
[375.81762695 41.95695114]
[370.88375854 52.99651718]
[359.38262939 57.87400055]
[347.26312256 53.47441483]
[333.31491089 58.99232101]
[319.36669922 64.51022339]
[305.41845703 70.02812195]
[291.47024536 75.54602814]
[277.52203369 81.06393433]
[263.57382202 86.58183289]
[249.62561035 92.09973907]
[235.67738342 97.61763763]
[221.72917175 103.13554382]
[220.49206543 105.64326477]
[218.19073486 107.81394196]
[214.94790649 109.24112701]
[211.03060913 109.56999969]
[206.82812500 108.54575348]
[192.58886719 113.26205444]
[178.34960938 117.97834778]
[164.11035156 122.69464874]
[149.87107849 127.41094208]
[145.35768127 141.71580505]
[154.31188965 153.75001526]
[163.26609802 165.78422546]
[172.22030640 177.81842041]
[184.84059143 180.45791626]
[192.05139160 190.65940857]
[190.43466187 202.64277649]
[199.21690369 214.80305481]
[213.39212036 224.10356140]
[208.37916565 240.29945374]
[191.42849731 239.96586609]
[187.05664062 223.58529663]
[178.27439880 211.42501831]
[161.89746094 205.11051941]
[160.18609619 186.77262878]
[151.23188782 174.73843384]
[142.27767944 162.70422363]
[133.32347107 150.67001343]
[119.15268707 155.58824158]
[119.57909393 170.58218384]
[120.00549316 185.57612610]
[120.43190002 200.57006836]
[120.85829926 215.56399536]
[132.06492615 226.38293457]
[132.28376770 241.59498596]
[121.90051270 252.21212769]
[122.32691956 267.20605469]
[122.75331879 282.20001221]
[133.38101196 294.21795654]
[130.46943665 309.99459839]
[116.25209808 317.42742920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 217]
[3 216]
[4 215]
[7 212]
[8 211]
[9 210]
[10 209]
[11 208]
[12 36]
[13 35]
[14 34]
[15 33]
[16 30]
[17 29]
[18 28]
[19 27]
[38 117]
[39 116]
[40 115]
[41 114]
[44 111]
[45 110]
[47 108]
[48 107]
[49 106]
[50 105]
[51 104]
[52 102]
[53 101]
[54 100]
[55 99]
[56 98]
[57 97]
[58 96]
[59 95]
[72 93]
[73 92]
[74 91]
[78 87]
[79 86]
[80 85]
[120 189]
[121 188]
[122 187]
[123 186]
[124 185]
[125 180]
[126 179]
[127 178]
[128 177]
[129 176]
[130 175]
[131 174]
[132 173]
[133 172]
[134 171]
[136 168]
[137 167]
[138 166]
[139 164]
[140 163]
[141 162]
[146 159]
[147 158]
[148 157]
[149 156]
[190 207]
[191 206]
[192 205]
[193 204]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
