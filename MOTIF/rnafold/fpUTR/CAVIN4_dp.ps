%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CAVIN4)
} def

/sequence { (\
GACUUUUUGCUCCAAGUGCCAGAAUUGAUUGUGGUUAGGACAUCUUACGCUGAGAAAUAAAUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.018528532 ubox
1 8 0.028345969 ubox
1 12 0.013276551 ubox
1 26 0.006057094 ubox
1 36 0.005492104 ubox
1 44 0.050602026 ubox
1 46 0.011902027 ubox
2 6 0.018184404 ubox
2 7 0.028475270 ubox
2 11 0.013407681 ubox
2 17 0.090543165 ubox
2 25 0.006317904 ubox
2 35 0.005796221 ubox
2 43 0.050664695 ubox
2 45 0.012153549 ubox
3 16 0.093017889 ubox
3 34 0.005838346 ubox
3 38 0.006473392 ubox
3 39 0.008484285 ubox
3 54 0.105207752 ubox
4 15 0.092616827 ubox
4 23 0.003899898 ubox
4 24 0.020775431 ubox
4 33 0.005617396 ubox
4 37 0.006134649 ubox
4 38 0.008393287 ubox
4 40 0.008352333 ubox
4 53 0.105134718 ubox
4 54 0.030735565 ubox
4 55 0.228134612 ubox
4 56 0.165724921 ubox
4 57 0.069333953 ubox
4 60 0.072295370 ubox
4 61 0.066840564 ubox
4 64 0.027224563 ubox
4 65 0.017468465 ubox
5 14 0.089872382 ubox
5 15 0.004247711 ubox
5 16 0.003554584 ubox
5 22 0.004004222 ubox
5 23 0.024705899 ubox
5 24 0.019223651 ubox
5 37 0.007044357 ubox
5 39 0.008997047 ubox
5 40 0.015054078 ubox
5 52 0.101594521 ubox
5 53 0.036309455 ubox
5 54 0.241440783 ubox
5 55 0.183329118 ubox
5 56 0.078687849 ubox
5 57 0.037890415 ubox
5 59 0.072072515 ubox
5 60 0.075830793 ubox
5 61 0.053808652 ubox
5 63 0.026860756 ubox
5 64 0.023930840 ubox
5 65 0.017232046 ubox
6 14 0.004881178 ubox
6 15 0.004939681 ubox
6 16 0.015587366 ubox
6 21 0.003602317 ubox
6 22 0.025072431 ubox
6 23 0.022923880 ubox
6 38 0.009062716 ubox
6 39 0.015978782 ubox
6 40 0.005621809 ubox
6 52 0.036832163 ubox
6 53 0.245759881 ubox
6 54 0.184758902 ubox
6 55 0.078696110 ubox
6 56 0.042386929 ubox
6 57 0.083302835 ubox
6 59 0.073251374 ubox
6 60 0.061026016 ubox
6 61 0.060869918 ubox
6 63 0.021880907 ubox
6 64 0.022705856 ubox
6 65 0.023323918 ubox
7 14 0.005186142 ubox
7 15 0.021768639 ubox
7 16 0.004671729 ubox
7 21 0.024205581 ubox
7 22 0.023327522 ubox
7 34 0.004455861 ubox
7 37 0.008711645 ubox
7 38 0.016280528 ubox
7 39 0.005838511 ubox
7 40 0.003589283 ubox
7 52 0.222824309 ubox
7 53 0.184142298 ubox
7 54 0.075573715 ubox
7 55 0.038550755 ubox
7 56 0.095322030 ubox
7 57 0.092476550 ubox
7 59 0.059141362 ubox
7 60 0.069294218 ubox
7 61 0.021714796 ubox
7 63 0.020846640 ubox
7 64 0.031267804 ubox
7 65 0.008015030 ubox
8 14 0.024402692 ubox
8 15 0.006345733 ubox
8 18 0.009215979 ubox
8 21 0.023271661 ubox
8 33 0.004954564 ubox
8 37 0.016167622 ubox
8 38 0.005778070 ubox
8 42 0.698133340 ubox
8 47 0.004864768 ubox
8 49 0.010466315 ubox
8 52 0.170099883 ubox
8 53 0.058355483 ubox
8 54 0.029975046 ubox
8 55 0.095885036 ubox
8 56 0.073884484 ubox
8 59 0.068874624 ubox
8 60 0.021707122 ubox
8 63 0.030894053 ubox
8 64 0.009568851 ubox
9 13 0.024701699 ubox
9 17 0.032986719 ubox
9 19 0.036502631 ubox
9 20 0.016879499 ubox
9 32 0.006307754 ubox
9 35 0.011863653 ubox
9 36 0.015274125 ubox
9 41 0.774461050 ubox
9 46 0.004779483 ubox
9 48 0.012649255 ubox
9 50 0.333207348 ubox
9 51 0.026046335 ubox
9 58 0.063353364 ubox
9 62 0.026488661 ubox
10 16 0.034092308 ubox
10 18 0.039984145 ubox
10 31 0.006355819 ubox
10 34 0.012958447 ubox
10 38 0.006078350 ubox
10 39 0.023671560 ubox
10 49 0.333887131 ubox
10 54 0.204522397 ubox
11 15 0.030772181 ubox
11 33 0.012384199 ubox
11 34 0.003163029 ubox
11 37 0.005704860 ubox
11 38 0.021188021 ubox
11 39 0.024044538 ubox
11 40 0.937801249 ubox
11 53 0.205179789 ubox
11 55 0.098220269 ubox
12 33 0.004442153 ubox
12 34 0.011664966 ubox
12 38 0.027514614 ubox
12 39 0.956829221 ubox
12 52 0.200086285 ubox
12 54 0.101984495 ubox
13 27 0.006490481 ubox
13 31 0.013271152 ubox
13 33 0.011733916 ubox
13 38 0.955612595 ubox
13 52 0.065473257 ubox
14 26 0.006278472 ubox
14 30 0.013072096 ubox
14 32 0.011229973 ubox
14 36 0.124388465 ubox
14 46 0.061226505 ubox
14 51 0.056304686 ubox
15 25 0.005873919 ubox
15 26 0.008289013 ubox
15 29 0.012103717 ubox
15 30 0.008123411 ubox
15 35 0.057517778 ubox
15 36 0.246345165 ubox
15 45 0.066830155 ubox
15 51 0.200460017 ubox
16 25 0.009836955 ubox
16 29 0.008698875 ubox
16 35 0.077682790 ubox
16 41 0.032895010 ubox
16 43 0.058630804 ubox
16 44 0.066376238 ubox
16 48 0.068715727 ubox
16 50 0.218844955 ubox
17 24 0.010018839 ubox
17 28 0.008850201 ubox
17 33 0.033342168 ubox
17 34 0.009312118 ubox
17 37 0.096957732 ubox
17 40 0.032897367 ubox
17 42 0.085931775 ubox
17 47 0.066280635 ubox
17 49 0.217951347 ubox
18 32 0.034664794 ubox
18 35 0.958352683 ubox
18 36 0.070583837 ubox
18 41 0.086110510 ubox
18 46 0.032011287 ubox
18 48 0.196628382 ubox
18 50 0.005738395 ubox
19 31 0.031538332 ubox
19 34 0.984210076 ubox
19 39 0.086229182 ubox
19 49 0.005722889 ubox
20 27 0.020844543 ubox
20 31 0.020535758 ubox
20 33 0.984360407 ubox
20 38 0.086160560 ubox
20 52 0.031098455 ubox
21 26 0.018866301 ubox
21 30 0.025516219 ubox
21 32 0.981488795 ubox
21 36 0.008505661 ubox
21 45 0.132236050 ubox
21 46 0.005849178 ubox
21 51 0.031220285 ubox
22 29 0.020317469 ubox
22 30 0.056392810 ubox
22 35 0.007436648 ubox
22 36 0.008578819 ubox
22 44 0.134090453 ubox
22 45 0.005519205 ubox
22 46 0.015978614 ubox
22 50 0.031195172 ubox
23 29 0.060086589 ubox
23 30 0.947772302 ubox
23 35 0.008509981 ubox
23 36 0.080793601 ubox
23 43 0.127712240 ubox
23 45 0.016011603 ubox
23 46 0.004271104 ubox
24 29 0.756298913 ubox
24 32 0.015919633 ubox
24 35 0.082160428 ubox
24 43 0.017952353 ubox
24 45 0.004099357 ubox
24 58 0.012547991 ubox
24 62 0.005619579 ubox
25 31 0.019927962 ubox
25 34 0.082228296 ubox
25 38 0.054360311 ubox
25 39 0.010121781 ubox
25 40 0.014881046 ubox
25 42 0.021110411 ubox
25 55 0.005017444 ubox
25 56 0.005243692 ubox
25 57 0.013802805 ubox
25 60 0.004721571 ubox
25 61 0.006156377 ubox
25 64 0.008431869 ubox
26 33 0.074182103 ubox
26 37 0.062966051 ubox
26 38 0.006832558 ubox
26 39 0.014334601 ubox
26 42 0.061926088 ubox
26 47 0.009502491 ubox
26 54 0.005383434 ubox
26 55 0.005915240 ubox
26 56 0.014190015 ubox
26 59 0.005368575 ubox
26 60 0.005700801 ubox
26 63 0.009663385 ubox
27 32 0.041877357 ubox
27 36 0.064150225 ubox
27 41 0.065695128 ubox
27 44 0.034017924 ubox
27 46 0.010132534 ubox
27 58 0.005080716 ubox
27 62 0.009586242 ubox
28 35 0.063712916 ubox
28 43 0.033824841 ubox
28 45 0.009950979 ubox
28 58 0.007233021 ubox
28 62 0.003235237 ubox
29 34 0.060200197 ubox
29 38 0.061276214 ubox
29 39 0.011617099 ubox
29 40 0.046148756 ubox
29 42 0.024381353 ubox
29 53 0.013075516 ubox
29 55 0.011063192 ubox
29 56 0.004106791 ubox
29 57 0.007687368 ubox
29 60 0.012823665 ubox
30 37 0.062074884 ubox
30 38 0.012226127 ubox
30 39 0.046323696 ubox
30 42 0.082746003 ubox
30 52 0.012482518 ubox
30 53 0.003375551 ubox
30 54 0.011824958 ubox
30 55 0.004282316 ubox
30 56 0.007462687 ubox
30 59 0.013824548 ubox
31 36 0.059873106 ubox
31 41 0.087013325 ubox
31 43 0.018047769 ubox
31 48 0.003938966 ubox
31 50 0.021949423 ubox
31 51 0.006222043 ubox
31 58 0.014007881 ubox
32 40 0.086710332 ubox
32 42 0.029385730 ubox
32 47 0.003892031 ubox
32 49 0.021878264 ubox
32 52 0.011737935 ubox
32 57 0.013841582 ubox
33 41 0.029637755 ubox
33 44 0.003567972 ubox
33 46 0.003483164 ubox
33 48 0.020991700 ubox
33 51 0.020690558 ubox
34 41 0.006525079 ubox
34 43 0.003687060 ubox
34 48 0.012745123 ubox
34 50 0.021245969 ubox
35 40 0.006520243 ubox
35 42 0.004039143 ubox
35 47 0.015115773 ubox
35 49 0.021011430 ubox
35 53 0.018258985 ubox
35 60 0.006616691 ubox
35 64 0.009936365 ubox
36 47 0.151555768 ubox
36 52 0.024071650 ubox
36 59 0.012942019 ubox
36 63 0.019933123 ubox
37 45 0.039281391 ubox
37 46 0.162829729 ubox
37 51 0.025309782 ubox
37 58 0.013275083 ubox
37 62 0.020428233 ubox
38 44 0.042324043 ubox
38 45 0.166150795 ubox
38 46 0.005854239 ubox
38 50 0.025421454 ubox
38 51 0.003739440 ubox
39 43 0.027465462 ubox
39 44 0.166006329 ubox
39 45 0.005553905 ubox
39 46 0.009737068 ubox
39 50 0.004037190 ubox
40 45 0.009235796 ubox
41 52 0.028005042 ubox
42 51 0.027594792 ubox
42 58 0.028086149 ubox
42 62 0.007807859 ubox
43 53 0.096060790 ubox
43 55 0.806971669 ubox
43 57 0.015274972 ubox
43 61 0.004855839 ubox
44 52 0.102906884 ubox
44 54 0.862939862 ubox
45 53 0.862477649 ubox
45 54 0.013004465 ubox
45 55 0.013668381 ubox
45 56 0.014138123 ubox
45 57 0.005986959 ubox
45 60 0.013665056 ubox
45 61 0.004386833 ubox
45 64 0.010105175 ubox
46 52 0.854162464 ubox
46 53 0.018008480 ubox
46 54 0.014140451 ubox
46 55 0.015450179 ubox
46 56 0.006517411 ubox
46 59 0.015034963 ubox
46 60 0.004733077 ubox
46 63 0.011098930 ubox
47 51 0.711153941 ubox
47 58 0.014333492 ubox
47 62 0.010486500 ubox
51 59 0.008790726 ubox
51 63 0.004886261 ubox
52 58 0.008339582 ubox
52 62 0.004547006 ubox
8 42 0.9500000 lbox
9 41 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
13 38 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
47 51 0.9500000 lbox
showpage
end
%%EOF
