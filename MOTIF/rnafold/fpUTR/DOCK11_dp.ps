%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DOCK11)
} def

/sequence { (\
GCAGUGAGUCCACCCGCCCGCCGAGGUCCGCCCGCCCGCCGAGACCCGCCCGCCGCCGCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.007072170 ubox
1 56 0.003268359 ubox
1 59 0.012589474 ubox
1 62 0.996537173 ubox
2 16 0.007086996 ubox
2 55 0.003275459 ubox
2 58 0.012599259 ubox
2 61 0.999780482 ubox
3 60 0.999562555 ubox
4 13 0.016613525 ubox
4 17 0.005902437 ubox
4 21 0.006005804 ubox
4 56 0.012202448 ubox
4 59 0.999717136 ubox
5 12 0.017709291 ubox
5 16 0.006030054 ubox
5 20 0.006126026 ubox
5 55 0.012447659 ubox
5 58 0.999209747 ubox
6 11 0.022162127 ubox
6 15 0.014943941 ubox
6 19 0.010815289 ubox
6 54 0.013811343 ubox
6 57 0.997690186 ubox
7 60 0.003259023 ubox
8 17 0.067177026 ubox
8 21 0.011669267 ubox
8 31 0.009460974 ubox
8 45 0.009149470 ubox
8 53 0.042104482 ubox
8 56 0.937588433 ubox
8 59 0.003629321 ubox
9 16 0.064963756 ubox
9 20 0.011341949 ubox
9 24 0.005380955 ubox
9 30 0.009386021 ubox
9 44 0.009181951 ubox
9 52 0.035665540 ubox
9 55 0.905987998 ubox
9 58 0.003672065 ubox
10 23 0.005927443 ubox
10 43 0.009172962 ubox
12 27 0.018389078 ubox
13 26 0.019630828 ubox
14 25 0.019680776 ubox
15 23 0.035218837 ubox
15 38 0.004122339 ubox
15 41 0.004281274 ubox
15 48 0.030161078 ubox
15 52 0.515393003 ubox
15 55 0.210357221 ubox
15 58 0.007585576 ubox
16 22 0.034922943 ubox
16 27 0.006948579 ubox
16 31 0.004848080 ubox
16 37 0.004148541 ubox
16 39 0.006637006 ubox
16 40 0.003931424 ubox
16 47 0.030163450 ubox
16 49 0.077321080 ubox
16 51 0.517452095 ubox
16 53 0.749490565 ubox
16 54 0.206557884 ubox
16 56 0.255130662 ubox
16 57 0.007991740 ubox
16 59 0.004887408 ubox
17 26 0.007324371 ubox
17 30 0.004853721 ubox
17 38 0.006861970 ubox
17 48 0.072139766 ubox
17 52 0.760829504 ubox
17 55 0.255169616 ubox
17 58 0.004901200 ubox
18 25 0.007306587 ubox
18 26 0.006900345 ubox
19 25 0.007123662 ubox
19 41 0.026735654 ubox
19 48 0.107333346 ubox
19 52 0.219131291 ubox
19 55 0.036892191 ubox
20 27 0.003755472 ubox
20 35 0.007809160 ubox
20 39 0.006071059 ubox
20 40 0.026810169 ubox
20 47 0.107199643 ubox
20 49 0.874081947 ubox
20 51 0.222157136 ubox
20 53 0.236093452 ubox
20 54 0.035369837 ubox
20 56 0.026059808 ubox
21 26 0.003820319 ubox
21 34 0.006179859 ubox
21 38 0.005156910 ubox
21 48 0.679583443 ubox
21 52 0.237259590 ubox
21 55 0.026077662 ubox
22 34 0.006198861 ubox
22 38 0.027571062 ubox
22 41 0.004016662 ubox
22 48 0.713201836 ubox
22 52 0.026497144 ubox
23 33 0.007912961 ubox
23 37 0.027929801 ubox
23 40 0.004026553 ubox
23 47 0.904717630 ubox
23 51 0.028211819 ubox
25 32 0.008803930 ubox
25 36 0.028415805 ubox
25 40 0.004010010 ubox
25 46 0.998777894 ubox
25 47 0.020118001 ubox
25 50 0.006248076 ubox
26 31 0.008753271 ubox
26 35 0.028422903 ubox
26 39 0.004006363 ubox
26 45 0.999080354 ubox
26 46 0.014675400 ubox
26 49 0.006063023 ubox
27 34 0.027423559 ubox
27 38 0.003645499 ubox
27 42 0.025279693 ubox
27 44 0.998786637 ubox
27 48 0.004901423 ubox
28 41 0.032334541 ubox
28 43 0.998451494 ubox
29 38 0.050269672 ubox
29 41 0.894891125 ubox
30 37 0.049315467 ubox
30 39 0.744494257 ubox
30 40 0.658693759 ubox
30 53 0.003713000 ubox
30 56 0.013098241 ubox
31 38 0.956687149 ubox
31 52 0.003736251 ubox
31 55 0.013113330 ubox
33 41 0.033396221 ubox
33 52 0.005176882 ubox
33 55 0.003636860 ubox
34 40 0.033136652 ubox
34 49 0.003649428 ubox
34 51 0.005331133 ubox
34 53 0.018516085 ubox
34 56 0.004931048 ubox
35 48 0.003630498 ubox
35 52 0.018676026 ubox
35 55 0.004927018 ubox
37 48 0.004770119 ubox
38 47 0.004818050 ubox
38 49 0.019163958 ubox
38 53 0.004832429 ubox
39 48 0.018076423 ubox
39 52 0.004678226 ubox
40 48 0.009876374 ubox
40 52 0.003969307 ubox
41 47 0.011909641 ubox
41 51 0.004221077 ubox
47 55 0.009532235 ubox
48 54 0.010672884 ubox
48 56 0.045317686 ubox
49 55 0.045842606 ubox
52 57 0.003190074 ubox
52 59 0.009268592 ubox
53 58 0.009281334 ubox
55 62 0.005834889 ubox
56 61 0.005821688 ubox
1 62 0.9500000 lbox
2 61 0.9500000 lbox
3 60 0.9500000 lbox
4 59 0.9500000 lbox
5 58 0.9500000 lbox
6 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
showpage
end
%%EOF
