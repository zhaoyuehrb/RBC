%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LYPD2)
} def

/sequence { (\
CCAGUCUGUCGCCACCUCACUUGGUGUCUGCUGUCCCCGCCAGGCAAGCCUGGGGUGAGAGCACAGAGGAGUGGGCCGGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.005108390 ubox
1 74 0.057405925 ubox
1 79 0.038529752 ubox
1 80 0.022526405 ubox
2 8 0.011865491 ubox
2 68 0.005113552 ubox
2 73 0.057647798 ubox
2 78 0.038647361 ubox
2 79 0.022452970 ubox
3 7 0.012258124 ubox
3 72 0.057470839 ubox
4 76 0.043240953 ubox
4 82 0.687732094 ubox
5 67 0.008748079 ubox
5 70 0.057163330 ubox
5 75 0.043104394 ubox
5 79 0.004055090 ubox
5 80 0.080853387 ubox
5 81 0.688530475 ubox
6 66 0.010129445 ubox
6 69 0.057130854 ubox
6 74 0.042133595 ubox
6 78 0.005728261 ubox
6 79 0.119418804 ubox
6 80 0.685446881 ubox
7 65 0.011262245 ubox
7 67 0.003442858 ubox
7 68 0.051719145 ubox
7 73 0.040255621 ubox
7 78 0.137873136 ubox
7 79 0.663759836 ubox
8 64 0.012303398 ubox
8 72 0.026236813 ubox
8 76 0.045029943 ubox
8 77 0.149614922 ubox
8 82 0.708093341 ubox
9 63 0.009630058 ubox
9 67 0.042605490 ubox
9 69 0.005518431 ubox
9 70 0.035458891 ubox
9 71 0.004487857 ubox
9 74 0.010991398 ubox
9 75 0.043997411 ubox
9 79 0.094664052 ubox
9 80 0.005447031 ubox
9 81 0.711234984 ubox
10 26 0.015998426 ubox
10 66 0.045259071 ubox
10 68 0.006176574 ubox
10 69 0.035544582 ubox
10 73 0.016771763 ubox
10 74 0.022156430 ubox
10 78 0.188302251 ubox
10 79 0.009941367 ubox
10 80 0.711187130 ubox
11 25 0.017459560 ubox
11 27 0.014500636 ubox
11 72 0.019428322 ubox
11 76 0.534931832 ubox
11 77 0.151613804 ubox
12 24 0.017573467 ubox
12 26 0.010812207 ubox
12 69 0.006738543 ubox
12 71 0.019594991 ubox
12 74 0.428620105 ubox
12 75 0.541020390 ubox
12 79 0.709985536 ubox
12 80 0.024707808 ubox
13 23 0.017572405 ubox
13 26 0.069659673 ubox
13 68 0.006250869 ubox
13 73 0.438105131 ubox
13 74 0.533022141 ubox
13 78 0.710042117 ubox
13 79 0.025177906 ubox
14 22 0.016438846 ubox
14 25 0.072501943 ubox
14 72 0.445521590 ubox
15 24 0.072771102 ubox
15 69 0.051107792 ubox
15 71 0.318155130 ubox
15 74 0.007977980 ubox
15 75 0.304188234 ubox
16 23 0.072770296 ubox
16 68 0.056892605 ubox
16 69 0.031228634 ubox
16 71 0.595134501 ubox
16 73 0.008274688 ubox
16 74 0.303304062 ubox
16 75 0.649948474 ubox
17 67 0.057435359 ubox
17 68 0.025706666 ubox
17 69 0.023854894 ubox
17 70 0.671926496 ubox
17 73 0.047150068 ubox
17 74 0.651919793 ubox
18 26 0.011646128 ubox
18 66 0.057243050 ubox
18 68 0.025461053 ubox
18 69 0.671818731 ubox
18 73 0.729603668 ubox
19 25 0.014258082 ubox
19 27 0.027856280 ubox
19 72 0.731069145 ubox
20 24 0.014423300 ubox
20 26 0.029927075 ubox
20 66 0.044935123 ubox
20 68 0.655471908 ubox
20 69 0.017900121 ubox
20 71 0.731219717 ubox
21 65 0.034949946 ubox
21 66 0.131135727 ubox
21 67 0.651005589 ubox
21 68 0.022434638 ubox
21 69 0.049555752 ubox
21 70 0.727978301 ubox
22 65 0.159672763 ubox
22 66 0.598027208 ubox
22 67 0.031339636 ubox
22 68 0.106523249 ubox
22 69 0.705977841 ubox
22 70 0.017817279 ubox
23 29 0.006121232 ubox
23 64 0.170868457 ubox
24 28 0.008413131 ubox
24 64 0.393002485 ubox
25 63 0.317714776 ubox
25 65 0.713887393 ubox
26 62 0.187475481 ubox
26 64 0.734370698 ubox
27 60 0.025836445 ubox
27 61 0.098504715 ubox
27 63 0.521246695 ubox
27 67 0.113935084 ubox
27 69 0.008671273 ubox
27 70 0.005453289 ubox
28 59 0.030324252 ubox
28 61 0.081831285 ubox
28 66 0.123436153 ubox
28 68 0.014358564 ubox
28 69 0.006043006 ubox
29 58 0.026069114 ubox
29 60 0.080076854 ubox
29 63 0.747855418 ubox
29 65 0.089629722 ubox
29 67 0.010129160 ubox
29 68 0.004301723 ubox
30 56 0.006194535 ubox
30 62 0.980294353 ubox
30 64 0.042442025 ubox
31 55 0.006101706 ubox
31 59 0.086381028 ubox
31 61 0.991262560 ubox
32 54 0.005818352 ubox
32 57 0.008710459 ubox
32 58 0.081647423 ubox
32 60 0.991077403 ubox
32 63 0.007236863 ubox
33 56 0.010791232 ubox
33 62 0.007268028 ubox
34 55 0.003906002 ubox
34 58 0.993656123 ubox
34 60 0.008069261 ubox
34 61 0.005041839 ubox
35 54 0.004170449 ubox
35 55 0.069387665 ubox
35 57 0.993370372 ubox
35 59 0.008664087 ubox
36 53 0.003822158 ubox
36 54 0.069435113 ubox
36 55 0.236372250 ubox
37 52 0.003429717 ubox
37 53 0.063935000 ubox
37 54 0.230901885 ubox
37 55 0.967248337 ubox
38 52 0.057904704 ubox
38 53 0.163960096 ubox
38 54 0.968587277 ubox
39 49 0.013429076 ubox
39 51 0.028252915 ubox
40 48 0.013576765 ubox
40 53 0.983379951 ubox
41 52 0.997929098 ubox
42 51 0.999157073 ubox
43 50 0.999788918 ubox
44 49 0.993602945 ubox
63 72 0.004896828 ubox
64 71 0.005907588 ubox
64 73 0.014013353 ubox
65 72 0.013699478 ubox
68 77 0.006906977 ubox
69 76 0.006899723 ubox
73 83 0.003377461 ubox
74 82 0.003470645 ubox
75 82 0.004843755 ubox
8 82 0.9500000 lbox
9 81 0.9500000 lbox
10 80 0.9500000 lbox
12 79 0.9500000 lbox
13 78 0.9500000 lbox
16 75 0.9500000 lbox
17 74 0.9500000 lbox
18 73 0.9500000 lbox
19 72 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
22 69 0.9500000 lbox
29 63 0.9500000 lbox
30 62 0.9500000 lbox
31 61 0.9500000 lbox
32 60 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
44 49 0.9500000 lbox
showpage
end
%%EOF
