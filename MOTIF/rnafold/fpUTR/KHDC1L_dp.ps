%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KHDC1L)
} def

/sequence { (\
GUUUGUUAGACUUUCCCCUAUUCUGAAUCAGGUGGGAGCACAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.512615001 ubox
1 28 0.006096312 ubox
1 39 0.088096296 ubox
1 41 0.078084437 ubox
1 44 0.234039639 ubox
2 9 0.040416504 ubox
2 10 0.512104471 ubox
2 27 0.006754931 ubox
2 32 0.004283599 ubox
2 38 0.085930735 ubox
2 40 0.061915449 ubox
2 43 0.224774839 ubox
3 8 0.048611178 ubox
3 9 0.503244720 ubox
3 10 0.060444347 ubox
3 26 0.006838216 ubox
3 31 0.019091120 ubox
3 37 0.067305808 ubox
3 38 0.010924999 ubox
3 42 0.204716673 ubox
3 43 0.247986771 ubox
4 8 0.383918604 ubox
4 9 0.069496278 ubox
4 25 0.006652416 ubox
4 30 0.022216355 ubox
4 36 0.029077323 ubox
4 37 0.009578679 ubox
4 40 0.273854755 ubox
4 42 0.317941462 ubox
5 11 0.094099348 ubox
5 24 0.004610963 ubox
5 28 0.005259555 ubox
5 29 0.022549062 ubox
5 39 0.296690984 ubox
5 41 0.335086621 ubox
5 44 0.208416291 ubox
6 10 0.085019557 ubox
6 26 0.030336670 ubox
6 27 0.006773121 ubox
6 37 0.006466279 ubox
6 38 0.287602073 ubox
6 40 0.324631956 ubox
6 43 0.209588710 ubox
7 20 0.018304650 ubox
7 25 0.033284636 ubox
7 26 0.004826959 ubox
7 34 0.003485835 ubox
7 36 0.003286595 ubox
7 37 0.214910774 ubox
7 42 0.189590169 ubox
8 14 0.011903307 ubox
8 19 0.019400277 ubox
8 24 0.033959795 ubox
8 33 0.003325563 ubox
9 13 0.010383244 ubox
9 15 0.087334191 ubox
9 18 0.019496521 ubox
9 23 0.034021687 ubox
9 29 0.003732095 ubox
10 14 0.076205381 ubox
10 22 0.032099223 ubox
10 28 0.003638852 ubox
10 33 0.010750534 ubox
11 31 0.003772783 ubox
11 32 0.010878759 ubox
11 35 0.009520729 ubox
11 36 0.019715284 ubox
11 38 0.369586010 ubox
11 43 0.140728740 ubox
12 30 0.003622390 ubox
12 31 0.010656039 ubox
12 34 0.009050216 ubox
12 35 0.017038833 ubox
12 36 0.004915384 ubox
12 37 0.347562756 ubox
12 38 0.393305300 ubox
12 42 0.138455148 ubox
12 43 0.016307126 ubox
13 27 0.008855264 ubox
13 30 0.007990880 ubox
13 34 0.015424219 ubox
13 36 0.308848927 ubox
13 37 0.519707872 ubox
13 38 0.413458690 ubox
13 42 0.015931181 ubox
13 43 0.007814408 ubox
14 26 0.010374028 ubox
14 35 0.280545930 ubox
14 36 0.548142246 ubox
14 37 0.533741662 ubox
14 42 0.007696663 ubox
15 25 0.010390812 ubox
15 32 0.013325480 ubox
15 34 0.279792972 ubox
15 35 0.568098788 ubox
15 36 0.541963429 ubox
16 31 0.013237389 ubox
16 32 0.093406694 ubox
16 34 0.568445075 ubox
16 35 0.537693386 ubox
16 36 0.292895499 ubox
17 31 0.092355368 ubox
17 32 0.628071581 ubox
17 34 0.528868442 ubox
17 35 0.299920634 ubox
17 36 0.462147531 ubox
18 31 0.630539875 ubox
18 32 0.317404585 ubox
18 34 0.305571972 ubox
18 35 0.464218745 ubox
18 36 0.006692266 ubox
19 25 0.008079271 ubox
19 30 0.617141915 ubox
19 31 0.278516560 ubox
19 34 0.465202994 ubox
19 35 0.006171690 ubox
20 24 0.012227913 ubox
20 28 0.459578256 ubox
20 33 0.514622813 ubox
21 27 0.460244256 ubox
21 31 0.032709975 ubox
21 32 0.377905064 ubox
22 26 0.384027674 ubox
22 30 0.033494907 ubox
22 31 0.129979449 ubox
22 32 0.545552070 ubox
22 37 0.003724293 ubox
23 31 0.693269192 ubox
23 32 0.048025004 ubox
23 36 0.003808388 ubox
23 43 0.006194701 ubox
24 30 0.697550163 ubox
24 31 0.047875182 ubox
24 35 0.003753948 ubox
24 42 0.006291731 ubox
25 29 0.686934000 ubox
25 41 0.006237309 ubox
27 33 0.004017465 ubox
28 32 0.003763440 ubox
28 37 0.006391409 ubox
29 36 0.006446768 ubox
32 39 0.004039029 ubox
32 41 0.045565511 ubox
33 38 0.003982167 ubox
33 40 0.045710481 ubox
33 42 0.006549934 ubox
34 39 0.045730878 ubox
34 41 0.007320067 ubox
38 44 0.146866465 ubox
39 43 0.148019617 ubox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
showpage
end
%%EOF
