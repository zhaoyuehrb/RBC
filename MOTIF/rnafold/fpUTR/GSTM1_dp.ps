%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GSTM1)
} def

/sequence { (\
UGUCCCCUCUCCGGAGCUCUUAUACUCUGAGCCCUGCUCGGUUUAGGCCUGUCUGCGGAAUCCGCACCAACCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.005112189 ubox
1 22 0.022300073 ubox
1 24 0.014210191 ubox
1 45 0.004595430 ubox
1 66 0.014985004 ubox
1 69 0.010161408 ubox
1 73 0.010580274 ubox
1 76 0.035537697 ubox
2 12 0.039715367 ubox
2 17 0.061171574 ubox
2 21 0.024509941 ubox
2 23 0.016268719 ubox
2 25 0.010018003 ubox
2 32 0.006539461 ubox
2 37 0.003555888 ubox
2 44 0.004811101 ubox
2 48 0.019303856 ubox
2 65 0.017582385 ubox
2 67 0.009280509 ubox
2 68 0.011085766 ubox
2 71 0.008545015 ubox
2 72 0.011556761 ubox
2 75 0.041492200 ubox
2 77 0.041016027 ubox
3 14 0.008805233 ubox
3 15 0.178615565 ubox
3 16 0.055797352 ubox
3 22 0.015849448 ubox
3 24 0.009692349 ubox
3 31 0.004373802 ubox
3 36 0.003401897 ubox
3 47 0.017773062 ubox
3 59 0.004475028 ubox
3 64 0.017249741 ubox
3 66 0.008849005 ubox
3 70 0.008185400 ubox
3 74 0.038984664 ubox
3 76 0.032841902 ubox
4 13 0.013155625 ubox
4 14 0.190867678 ubox
4 41 0.006534643 ubox
4 46 0.017694323 ubox
4 47 0.010838590 ubox
4 58 0.004795188 ubox
5 13 0.190240100 ubox
5 14 0.122385941 ubox
5 40 0.006561060 ubox
5 41 0.014546271 ubox
5 46 0.011361909 ubox
5 47 0.011149651 ubox
5 57 0.004771698 ubox
6 13 0.123343779 ubox
6 14 0.109979615 ubox
6 40 0.014558866 ubox
6 41 0.026197743 ubox
6 46 0.011809028 ubox
6 47 0.020810152 ubox
7 13 0.110566116 ubox
7 14 0.017279564 ubox
7 16 0.132758200 ubox
7 31 0.037072150 ubox
7 40 0.026331289 ubox
7 41 0.008898648 ubox
7 46 0.022191338 ubox
7 74 0.005237180 ubox
8 13 0.015801450 ubox
8 14 0.004800854 ubox
8 15 0.157933005 ubox
8 30 0.037403724 ubox
8 40 0.008624059 ubox
8 41 0.003794357 ubox
8 45 0.020895579 ubox
8 59 0.013864160 ubox
8 73 0.004960124 ubox
9 13 0.006747202 ubox
9 14 0.160298354 ubox
9 29 0.034276906 ubox
9 31 0.116201601 ubox
9 40 0.004849118 ubox
9 41 0.013188650 ubox
9 46 0.004427632 ubox
9 58 0.014402229 ubox
9 74 0.003782163 ubox
10 30 0.117920483 ubox
10 40 0.012986069 ubox
10 41 0.003978592 ubox
10 45 0.004364233 ubox
10 57 0.013776464 ubox
10 59 0.068326714 ubox
10 73 0.003595003 ubox
11 29 0.084302480 ubox
11 40 0.004577111 ubox
11 41 0.026279128 ubox
11 57 0.003631149 ubox
11 58 0.071634446 ubox
12 29 0.134003155 ubox
12 36 0.042746661 ubox
12 40 0.026271091 ubox
12 51 0.059797615 ubox
12 55 0.014748429 ubox
12 57 0.071648674 ubox
12 64 0.003698822 ubox
13 20 0.003307890 ubox
13 27 0.004234326 ubox
13 28 0.162149815 ubox
13 33 0.010694333 ubox
13 34 0.924191877 ubox
13 35 0.088980063 ubox
13 39 0.020743838 ubox
13 49 0.005726009 ubox
13 50 0.060995207 ubox
13 53 0.004664029 ubox
13 54 0.016184838 ubox
13 56 0.071595968 ubox
13 63 0.004124481 ubox
13 68 0.005092064 ubox
13 72 0.005600249 ubox
13 78 0.031056553 ubox
14 19 0.003540824 ubox
14 27 0.163317721 ubox
14 32 0.007402288 ubox
14 33 0.925281728 ubox
14 34 0.104926788 ubox
14 37 0.007919152 ubox
14 38 0.012449630 ubox
14 39 0.010476747 ubox
14 48 0.005653121 ubox
14 49 0.061201755 ubox
14 52 0.004396565 ubox
14 53 0.017168094 ubox
14 62 0.004125007 ubox
14 67 0.005057255 ubox
14 71 0.005557705 ubox
14 77 0.031176373 ubox
15 26 0.163452781 ubox
15 35 0.008740361 ubox
15 38 0.013916560 ubox
15 50 0.011711544 ubox
15 52 0.016780160 ubox
15 54 0.071148358 ubox
15 61 0.004064034 ubox
16 25 0.163321907 ubox
16 32 0.966678373 ubox
16 34 0.007218949 ubox
16 37 0.014358414 ubox
16 48 0.071617178 ubox
16 49 0.011888206 ubox
16 52 0.015621417 ubox
16 53 0.070678316 ubox
16 75 0.046682905 ubox
17 31 0.967642459 ubox
17 36 0.014270115 ubox
17 46 0.006081043 ubox
17 47 0.071597562 ubox
17 51 0.067385978 ubox
17 74 0.046842842 ubox
18 30 0.967481459 ubox
18 45 0.005385377 ubox
18 46 0.050183928 ubox
18 47 0.015303150 ubox
18 73 0.043744527 ubox
19 29 0.967275359 ubox
19 31 0.016938912 ubox
19 46 0.056624108 ubox
19 47 0.071887146 ubox
20 30 0.017811036 ubox
20 45 0.052658015 ubox
20 46 0.075076911 ubox
20 47 0.004028992 ubox
20 70 0.004097120 ubox
21 29 0.018938204 ubox
21 45 0.080341369 ubox
21 46 0.005707924 ubox
21 51 0.005713153 ubox
21 69 0.003932363 ubox
22 28 0.032714431 ubox
22 42 0.006057808 ubox
22 44 0.080934145 ubox
22 50 0.006344141 ubox
22 52 0.013879326 ubox
23 45 0.075801883 ubox
23 51 0.014441616 ubox
24 28 0.009752810 ubox
24 42 0.040160624 ubox
24 44 0.079025939 ubox
24 50 0.013738365 ubox
24 52 0.009800514 ubox
25 41 0.038845801 ubox
25 46 0.023018815 ubox
25 47 0.023658743 ubox
25 51 0.010452665 ubox
26 40 0.028939262 ubox
26 41 0.004242265 ubox
26 45 0.022738092 ubox
26 46 0.005481796 ubox
26 47 0.056407622 ubox
27 40 0.017029990 ubox
27 41 0.133437802 ubox
27 46 0.127626788 ubox
28 40 0.134725558 ubox
28 45 0.128154099 ubox
29 39 0.141572877 ubox
29 44 0.128288109 ubox
30 38 0.141709313 ubox
30 43 0.128539851 ubox
30 50 0.003360172 ubox
31 37 0.141737504 ubox
31 42 0.128740631 ubox
31 48 0.003785494 ubox
31 49 0.003436322 ubox
32 36 0.140707343 ubox
32 41 0.128690532 ubox
32 47 0.003623893 ubox
33 40 0.128338387 ubox
33 41 0.007310429 ubox
33 46 0.003378690 ubox
33 47 0.005712586 ubox
34 40 0.009394698 ubox
34 46 0.006019384 ubox
35 45 0.006126573 ubox
35 76 0.864495127 ubox
36 44 0.005673611 ubox
36 48 0.008992299 ubox
36 52 0.007885665 ubox
36 75 0.978944148 ubox
37 47 0.008999075 ubox
37 51 0.008494587 ubox
37 74 0.979283076 ubox
38 46 0.006010801 ubox
38 73 0.973119419 ubox
39 46 0.008054044 ubox
39 51 0.007384019 ubox
39 64 0.004300958 ubox
40 49 0.044847850 ubox
40 50 0.004288508 ubox
40 63 0.004435703 ubox
40 68 0.008627309 ubox
40 72 0.978617406 ubox
40 78 0.029582937 ubox
41 48 0.044935362 ubox
41 49 0.004171297 ubox
41 62 0.004424751 ubox
41 67 0.008644690 ubox
41 71 0.978887765 ubox
41 75 0.006705300 ubox
41 77 0.029853293 ubox
42 47 0.042805028 ubox
42 66 0.007373031 ubox
42 70 0.966296751 ubox
42 74 0.006703336 ubox
42 76 0.029333632 ubox
43 69 0.815614380 ubox
43 70 0.134333665 ubox
43 73 0.005362492 ubox
43 74 0.010917665 ubox
44 51 0.013787511 ubox
44 55 0.006648536 ubox
44 59 0.003225433 ubox
44 69 0.188190134 ubox
44 73 0.011283635 ubox
45 50 0.014340740 ubox
45 54 0.061030556 ubox
46 53 0.073995663 ubox
46 54 0.012303395 ubox
46 63 0.030361682 ubox
46 68 0.944539124 ubox
46 72 0.044737377 ubox
46 78 0.024549693 ubox
47 52 0.050369896 ubox
47 53 0.016518356 ubox
47 56 0.007180232 ubox
47 62 0.030340809 ubox
47 65 0.126115301 ubox
47 67 0.946591293 ubox
47 71 0.044806883 ubox
47 75 0.126123705 ubox
47 77 0.025235791 ubox
48 55 0.007252062 ubox
48 58 0.009641676 ubox
48 64 0.126055286 ubox
48 74 0.119507479 ubox
49 57 0.009676528 ubox
49 58 0.032593091 ubox
49 74 0.079603294 ubox
50 57 0.032555648 ubox
50 64 0.008932836 ubox
50 66 0.028241417 ubox
50 69 0.120195491 ubox
50 73 0.090449432 ubox
50 76 0.010545454 ubox
51 56 0.032143734 ubox
51 61 0.033745342 ubox
51 63 0.010840225 ubox
51 65 0.018208052 ubox
51 67 0.046469058 ubox
51 68 0.135938845 ubox
51 71 0.120149589 ubox
51 72 0.081352534 ubox
51 75 0.011949909 ubox
51 77 0.004687323 ubox
52 58 0.004166169 ubox
52 59 0.122587588 ubox
52 60 0.024781677 ubox
52 64 0.012319416 ubox
52 66 0.040357104 ubox
52 70 0.125458369 ubox
52 74 0.010003824 ubox
52 76 0.004692745 ubox
53 57 0.004244929 ubox
53 58 0.125561882 ubox
53 74 0.008055480 ubox
54 66 0.974340979 ubox
54 69 0.008055456 ubox
54 73 0.006817432 ubox
55 65 0.988347440 ubox
55 68 0.003830755 ubox
55 72 0.005226944 ubox
55 75 0.003498712 ubox
56 64 0.988492619 ubox
56 74 0.003497190 ubox
57 63 0.988355159 ubox
57 68 0.007291291 ubox
58 62 0.972399881 ubox
58 67 0.007292151 ubox
64 75 0.063576927 ubox
65 74 0.063631873 ubox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
18 30 0.9500000 lbox
19 29 0.9500000 lbox
35 76 0.9500000 lbox
36 75 0.9500000 lbox
37 74 0.9500000 lbox
38 73 0.9500000 lbox
40 72 0.9500000 lbox
41 71 0.9500000 lbox
42 70 0.9500000 lbox
43 69 0.9500000 lbox
46 68 0.9500000 lbox
47 67 0.9500000 lbox
54 66 0.9500000 lbox
55 65 0.9500000 lbox
56 64 0.9500000 lbox
57 63 0.9500000 lbox
58 62 0.9500000 lbox
showpage
end
%%EOF
