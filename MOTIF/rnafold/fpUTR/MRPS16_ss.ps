%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUGGGAAGUAUAGGGCGGCAAGCGGAGGAGGCGUGGCGAGCGGAUCAUCCGCUUCCGGAGUCGAGGUUUUCGGGCUUGUACCGCUUGGCGGUGCGGCCUGGUGUCGGCUUGCAGGUUCUUUCUGUGUUUGUUCUCUGCCCUGCCAAGGCCGUAGAGCUGGUGCGUGCGGGUAGCGGGGCUCUCCGAGGAGCCGCACGCCGGCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[350.31027222 447.25482178]
[338.47882080 456.47525024]
[323.63613892 458.64215088]
[309.66247559 453.18905640]
[300.21078491 441.54150391]
[297.75195312 426.74438477]
[302.92877197 412.66601562]
[314.38787842 402.98675537]
[329.13369751 400.23693848]
[343.31283569 405.13647461]
[334.74969482 392.82092285]
[326.18655396 380.50537109]
[309.92672729 373.90261841]
[308.53588867 355.54071045]
[299.79119873 343.35339355]
[286.08502197 337.52334595]
[284.32626343 321.80020142]
[275.58157349 309.61288452]
[266.83688354 297.42559814]
[257.82345581 285.43566895]
[248.54577637 273.64904785]
[239.26809692 261.86239624]
[229.99041748 250.07577515]
[213.36799622 244.44786072]
[210.89183044 226.20059204]
[201.44052124 214.55273438]
[191.98919678 202.90487671]
[182.53788757 191.25701904]
[173.08656311 179.60916138]
[163.63523865 167.96130371]
[154.18392944 156.31344604]
[144.73260498 144.66558838]
[135.10972595 133.15905762]
[125.31739807 121.79638672]
[115.52506256 110.43371582]
[100.98751831 122.60713959]
[79.33770752 116.67575836]
[64.47091675 118.67037964]
[49.60412216 120.66499329]
[41.51555252 124.90746307]
[34.50244141 122.57733154]
[19.60772514 124.35142517]
[4.71300840 126.12552643]
[-10.18170834 127.89962006]
[-25.07642365 129.67372131]
[-39.97114182 131.44781494]
[-54.86585617 133.22190857]
[-69.87870026 141.09916687]
[-81.60406494 128.85366821]
[-73.08303070 114.19664001]
[-56.63995361 118.32720184]
[-41.74523926 116.55310059]
[-26.85052109 114.77900696]
[-11.95580578 113.00490570]
[2.93891096 111.23080444]
[17.83362770 109.45671082]
[32.72834396 107.68260956]
[47.60950470 105.79820251]
[62.47629929 103.80358887]
[77.34309387 101.80896759]
[83.69355774 88.21957397]
[75.68620300 75.53563690]
[67.67885590 62.85169601]
[59.67150116 50.16775513]
[51.66415024 37.48381805]
[43.65679932 24.79987717]
[35.64944839 12.11593628]
[24.98668098 12.43309307]
[15.22851467 8.32735729]
[8.10938644 0.60119343]
[4.86435699 -9.30613232]
[6.01517200 -19.58639145]
[11.28761482 -28.39237213]
[3.85187387 -41.41964340]
[-3.58386755 -54.44691086]
[-11.01960850 -67.47418213]
[-18.45535088 -80.50144958]
[-25.89109230 -93.52871704]
[-33.32683182 -106.55599213]
[-40.29818726 -112.45714569]
[-40.77460098 -119.83185577]
[-48.01648331 -132.96788025]
[-55.25836563 -146.10389709]
[-62.50025177 -159.23992920]
[-69.74213409 -172.37594604]
[-76.98401642 -185.51197815]
[-84.22589874 -198.64799500]
[-97.16790009 -209.59974670]
[-90.22684479 -225.06771851]
[-73.44189453 -222.67988586]
[-71.08987427 -205.88987732]
[-63.84799194 -192.75386047]
[-56.60610962 -179.61782837]
[-49.36422729 -166.48181152]
[-42.12234116 -153.34577942]
[-34.88045883 -140.20976257]
[-27.63857651 -127.07373810]
[-20.29956245 -113.99172974]
[-12.86382198 -100.96446228]
[-5.42808056 -87.93719482]
[2.00766063 -74.90991974]
[9.44340229 -61.88265228]
[16.87914276 -48.85538483]
[24.31488419 -35.82811356]
[43.43370819 -32.08513641]
[53.79464722 -15.22745800]
[48.33338928 4.10858583]
[56.34074020 16.79252625]
[64.34809113 29.47646523]
[72.35544586 42.16040421]
[80.36279297 54.84434509]
[88.37014008 67.52828979]
[96.37749481 80.21222687]
[111.35115051 79.32361603]
[117.80213165 65.78164673]
[124.25310516 52.23968124]
[130.70408630 38.69771576]
[137.15505981 25.15574646]
[133.16905212 9.61575699]
[142.94808960 -3.10233998]
[158.99053955 -3.24230862]
[168.98999023 9.30322361]
[165.27574158 24.91039658]
[150.69703674 31.60672569]
[144.24604797 45.14869308]
[137.79507446 58.69065857]
[131.34410095 72.23262787]
[124.89311981 85.77459717]
[126.88773346 100.64138794]
[136.68006897 112.00405884]
[146.47239685 123.36672211]
[152.57698059 125.90231323]
[155.97508240 130.45631409]
[156.38046265 135.21426392]
[165.83178711 146.86212158]
[175.28311157 158.50997925]
[184.73442078 170.15783691]
[194.18574524 181.80569458]
[203.63705444 193.45355225]
[213.08837891 205.10140991]
[222.53968811 216.74926758]
[235.26373291 218.85842896]
[242.89599609 228.75389099]
[241.77705383 240.79809570]
[251.05473328 252.58471680]
[260.33239746 264.37136841]
[269.61007690 276.15798950]
[274.45611572 278.09371948]
[277.74649048 281.36709595]
[279.23217773 285.16180420]
[279.02416992 288.68090820]
[287.76885986 300.86819458]
[296.51354980 313.05551147]
[310.84524536 319.75729370]
[311.97851562 334.60870361]
[320.72320557 346.79602051]
[333.29995728 349.65524292]
[340.33261108 359.98547363]
[338.50210571 371.94223022]
[347.06524658 384.25778198]
[355.62838745 396.57333374]
[365.07971191 408.22119141]
[375.36734009 419.13742065]
[385.65496826 430.05368042]
[395.94259644 440.96994019]
[406.23025513 451.88619995]
[414.39266968 455.98477173]
[416.58795166 463.04125977]
[426.71270752 474.10876465]
[436.83746338 485.17626953]
[451.86117554 490.13592529]
[454.74301147 504.74908447]
[464.86776733 515.81658936]
[474.99252319 526.88409424]
[492.67422485 532.02728271]
[495.78619385 549.29846191]
[506.07382202 560.21472168]
[512.28509521 562.47650146]
[515.88220215 566.87500000]
[516.49865723 571.61022949]
[526.45825195 582.82653809]
[536.41790771 594.04284668]
[546.37750244 605.25915527]
[556.33715820 616.47546387]
[566.29681396 627.69177246]
[582.02020264 632.35089111]
[585.58331299 648.35827637]
[573.32080078 659.24688721]
[557.84722900 653.81549072]
[555.08050537 637.65142822]
[545.12084961 626.43511963]
[535.16119385 615.21881104]
[525.20159912 604.00244141]
[515.24194336 592.78613281]
[505.28231812 581.56982422]
[495.15756226 570.50231934]
[484.86993408 559.58605957]
[472.79254150 558.91448975]
[464.13238525 549.90484619]
[463.92501831 537.00885010]
[453.80026245 525.94134521]
[443.67553711 514.87384033]
[429.37600708 510.70578003]
[425.76995850 495.30099487]
[415.64520264 484.23348999]
[405.52047729 473.16601562]
[395.31399536 462.17382812]
[385.02636719 451.25756836]
[374.73870850 440.34130859]
[364.45108032 429.42507935]
[354.16345215 418.50881958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 161]
[11 160]
[12 159]
[14 156]
[15 155]
[17 153]
[18 152]
[19 151]
[20 147]
[21 146]
[22 145]
[23 144]
[25 141]
[26 140]
[27 139]
[28 138]
[29 137]
[30 136]
[31 135]
[32 134]
[33 131]
[34 130]
[35 129]
[37 60]
[38 59]
[39 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[61 113]
[62 112]
[63 111]
[64 110]
[65 109]
[66 108]
[67 107]
[73 104]
[74 103]
[75 102]
[76 101]
[77 100]
[78 99]
[79 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
[162 211]
[163 210]
[164 209]
[165 208]
[166 207]
[168 206]
[169 205]
[170 204]
[172 202]
[173 201]
[174 200]
[176 197]
[177 196]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
