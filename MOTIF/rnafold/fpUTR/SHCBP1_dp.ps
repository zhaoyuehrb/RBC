%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SHCBP1)
} def

/sequence { (\
GUCAUCACGUCGUUGCCUGGGCUGCCGUCCGCGGAAAUUUGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.183636670 ubox
1 10 0.004677072 ubox
1 16 0.009700428 ubox
1 22 0.013625459 ubox
1 32 0.004717242 ubox
1 38 0.005312520 ubox
2 7 0.168027130 ubox
2 9 0.009140950 ubox
2 15 0.008169379 ubox
2 20 0.003813559 ubox
2 21 0.013675681 ubox
2 31 0.004545294 ubox
2 35 0.008264983 ubox
2 37 0.005677359 ubox
2 42 0.340576084 ubox
3 15 0.034108990 ubox
3 19 0.004908355 ubox
3 20 0.013267591 ubox
3 24 0.003544606 ubox
3 34 0.008656782 ubox
3 41 0.363987370 ubox
4 10 0.015036673 ubox
4 13 0.015908358 ubox
4 14 0.033548770 ubox
4 18 0.004820756 ubox
4 23 0.003526202 ubox
4 38 0.009491109 ubox
4 40 0.358288990 ubox
5 9 0.015055224 ubox
5 12 0.016618804 ubox
5 20 0.009761615 ubox
5 34 0.006583391 ubox
5 35 0.062865152 ubox
5 37 0.011678853 ubox
5 42 0.576230062 ubox
6 15 0.039047208 ubox
6 19 0.014738470 ubox
6 24 0.022486879 ubox
6 33 0.008520659 ubox
6 34 0.065086407 ubox
6 41 0.615833632 ubox
7 13 0.026877212 ubox
7 14 0.035031109 ubox
7 18 0.014687353 ubox
7 23 0.022625432 ubox
7 28 0.007326664 ubox
7 40 0.602087188 ubox
8 12 0.029895078 ubox
8 15 0.060972378 ubox
8 19 0.003630372 ubox
8 24 0.008907787 ubox
8 27 0.007759361 ubox
8 31 0.010412996 ubox
8 33 0.074137970 ubox
8 41 0.255989289 ubox
9 14 0.053869376 ubox
9 16 0.019186490 ubox
9 18 0.003415677 ubox
9 22 0.044876542 ubox
9 26 0.007454642 ubox
9 30 0.010259122 ubox
9 32 0.074299361 ubox
9 38 0.432492619 ubox
9 40 0.252078594 ubox
10 15 0.018288060 ubox
10 20 0.003711308 ubox
10 21 0.045055228 ubox
10 31 0.064456940 ubox
10 34 0.310988155 ubox
10 35 0.141723153 ubox
10 37 0.429722316 ubox
10 42 0.384047463 ubox
11 19 0.004646980 ubox
11 20 0.045225411 ubox
11 24 0.004324599 ubox
11 27 0.015457760 ubox
11 31 0.025982296 ubox
11 33 0.323560218 ubox
11 34 0.139790176 ubox
11 41 0.409908929 ubox
12 18 0.004241972 ubox
12 22 0.007094984 ubox
12 25 0.013247931 ubox
12 26 0.012932005 ubox
12 30 0.024486507 ubox
12 32 0.323547772 ubox
12 38 0.528986315 ubox
12 40 0.329586724 ubox
13 21 0.007112023 ubox
13 24 0.015270268 ubox
13 31 0.295251611 ubox
13 34 0.478304571 ubox
13 35 0.045337732 ubox
13 36 0.214857751 ubox
13 37 0.572148959 ubox
13 42 0.008015509 ubox
14 20 0.006925756 ubox
14 24 0.003229200 ubox
14 27 0.003986482 ubox
14 31 0.068536220 ubox
14 33 0.509510400 ubox
14 34 0.032097977 ubox
14 35 0.227241584 ubox
14 36 0.415867506 ubox
14 41 0.008377457 ubox
15 22 0.019931172 ubox
15 25 0.008053159 ubox
15 28 0.036206679 ubox
15 30 0.091302249 ubox
15 32 0.523095745 ubox
15 40 0.008307466 ubox
16 21 0.019908046 ubox
16 24 0.008311061 ubox
16 27 0.036075524 ubox
16 31 0.516842849 ubox
16 34 0.776817911 ubox
17 33 0.778149173 ubox
17 34 0.024988029 ubox
18 27 0.159098482 ubox
18 31 0.776756371 ubox
18 33 0.022577195 ubox
19 26 0.173116416 ubox
19 29 0.005797968 ubox
19 30 0.980508811 ubox
19 32 0.017443366 ubox
20 25 0.173003965 ubox
20 26 0.023307874 ubox
20 28 0.004925394 ubox
20 29 0.981994718 ubox
20 30 0.041675358 ubox
21 25 0.023018589 ubox
21 28 0.980691315 ubox
21 29 0.041448125 ubox
21 32 0.004336009 ubox
22 27 0.980316120 ubox
22 31 0.004343614 ubox
22 34 0.020046284 ubox
23 33 0.022038237 ubox
24 32 0.023082489 ubox
25 31 0.023057998 ubox
25 34 0.046531006 ubox
26 33 0.046725487 ubox
27 32 0.045521940 ubox
28 35 0.003906507 ubox
29 34 0.004279009 ubox
32 41 0.012948083 ubox
33 40 0.012218518 ubox
34 39 0.009899910 ubox
34 40 0.003991301 ubox
35 39 0.004930298 ubox
5 42 0.9500000 lbox
6 41 0.9500000 lbox
7 40 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
16 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
showpage
end
%%EOF
