%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUCGCGGGAAGCUCCGUUGUGGGCGCCCCGGCUGGUGGCUGAGCUCAGGCCUUCAGGCAGAGGGGAGGCGAGGGCGGGGCGGUCACGUGAGAGCACUGCCGCGGUGGGUUGUGGGGGUGCUGCGGCGCCGUUUGCUUUGCCAAACCGACAAAAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[90.16458130 184.26426697]
[82.47993469 169.77709961]
[91.41201019 156.02391052]
[91.70287323 141.02673340]
[91.99374390 126.02955627]
[92.28461456 111.03237152]
[85.42297363 97.69378662]
[73.05284882 89.20968628]
[60.68272400 80.72558594]
[48.31259918 72.24147797]
[32.47792816 78.12067413]
[16.41341209 73.46700287]
[6.37432861 60.29806900]
[6.14711046 43.90641785]
[-6.38520670 35.66378403]
[-18.91752434 27.42115021]
[-31.44984055 19.17851448]
[-45.90915298 24.49212265]
[-60.55358505 20.32151031]
[-69.82450104 8.46764374]
[-70.33159637 -6.39441681]
[-82.86391449 -14.63705158]
[-95.39623260 -22.87968636]
[-107.92854309 -31.12232018]
[-120.46086121 -39.36495590]
[-136.24246216 -40.48385239]
[-142.62422180 -53.94202423]
[-155.15653992 -62.18465805]
[-167.68885803 -70.42729187]
[-180.22117615 -78.66992950]
[-192.75349426 -86.91255951]
[-205.28581238 -95.15519714]
[-217.81813049 -103.39783478]
[-233.59971619 -104.51673126]
[-239.98147583 -117.97489929]
[-252.51379395 -126.21753693]
[-265.31292725 -124.38037109]
[-275.59191895 -131.54374695]
[-278.13027954 -143.40249634]
[-290.50042725 -151.88659668]
[-306.25735474 -153.31130981]
[-312.37692261 -166.89070129]
[-324.74707031 -175.37480164]
[-339.30670166 -170.34257507]
[-353.86749268 -174.79638672]
[-362.90679932 -186.82780457]
[-363.12561035 -201.69689941]
[-375.49572754 -210.18099976]
[-387.86584473 -218.66510010]
[-400.69821167 -217.07647705]
[-410.83636475 -224.43783569]
[-413.14428711 -236.34356689]
[-425.34756470 -245.06594849]
[-437.55084229 -253.78833008]
[-453.91647339 -254.83653259]
[-460.94802856 -269.65170288]
[-451.41204834 -282.99328613]
[-435.11834717 -281.13656616]
[-428.82846069 -265.99160767]
[-416.62518311 -257.26922607]
[-404.42190552 -248.54684448]
[-386.90914917 -247.81562805]
[-379.38174438 -231.03523254]
[-367.01162720 -222.55113220]
[-354.64151001 -214.06701660]
[-340.69155884 -219.21842957]
[-326.21188354 -215.11924744]
[-316.81253052 -203.13986206]
[-316.26296997 -187.74493408]
[-303.89282227 -179.26083374]
[-289.02069092 -178.44294739]
[-282.01629639 -164.25672913]
[-269.64617920 -155.77261353]
[-252.12254333 -155.38113403]
[-244.27116394 -138.74984741]
[-231.73884583 -130.50721741]
[-216.85365295 -129.97789001]
[-209.57548523 -115.93015289]
[-197.04316711 -107.68751526]
[-184.51084900 -99.44487762]
[-171.97853088 -91.20224762]
[-159.44621277 -82.95960999]
[-146.91390991 -74.71697998]
[-134.38159180 -66.47434235]
[-119.49639130 -65.94501495]
[-112.21823120 -51.89727402]
[-99.68591309 -43.65463638]
[-87.15359497 -35.41200256]
[-74.62127686 -27.16936874]
[-62.08896255 -18.92673492]
[-48.24152756 -24.34767342]
[-33.68509293 -20.53004646]
[-24.05520821 -8.73518944]
[-23.20720673 6.64619827]
[-10.67488861 14.88883305]
[1.85742807 23.13146782]
[14.38974571 31.37410164]
[26.41712379 25.51659775]
[39.87535477 26.38640213]
[51.22978210 33.86257935]
[57.44516373 46.07505417]
[56.79670334 59.87135315]
[69.16682434 68.35546112]
[81.53694916 76.83956146]
[93.90707397 85.32366180]
[134.45281982 78.34955597]
[149.04849243 81.80879211]
[163.64416504 85.26802826]
[181.12925720 79.56584167]
[193.43946838 92.04341888]
[208.09947205 95.21897888]
[222.75949097 98.39453888]
[241.61042786 91.34452057]
[255.41682434 104.84133148]
[270.18893433 107.44605255]
[284.96105957 110.05077362]
[299.73318481 112.65549469]
[314.50527954 115.26022339]
[329.30197144 117.72158813]
[344.12182617 120.03936768]
[358.94165039 122.35715485]
[373.76150513 124.67493439]
[388.58135986 126.99271393]
[403.67663574 120.58455658]
[416.60928345 130.66812134]
[414.07531738 146.87031555]
[398.68145752 152.52369690]
[386.26358032 141.81256104]
[371.44372559 139.49478149]
[356.62387085 137.17700195]
[341.80404663 134.85922241]
[326.98419189 132.54144287]
[319.85464478 134.62510681]
[311.90057373 130.03233337]
[297.12844849 127.42761230]
[282.35632324 124.82289124]
[267.58422852 122.21817017]
[252.81210327 119.61344910]
[244.95158386 126.23587799]
[234.52203369 127.43730927]
[224.96900940 122.57615662]
[219.58392334 113.05455017]
[204.92391968 109.87899017]
[190.26391602 106.70343018]
[179.89624023 112.99504852]
[167.63191223 110.43420410]
[160.18492126 99.86370087]
[145.58924866 96.40446472]
[130.99357605 92.94522858]
[125.06562805 97.53973389]
[139.64195251 101.07962036]
[145.96270752 114.68285370]
[139.26835632 128.10617065]
[124.59974670 131.24179077]
[113.00238800 121.72857666]
[113.20973969 106.72873688]
[107.28179932 111.32324219]
[106.99092865 126.32042694]
[106.70005798 141.31759644]
[106.40918732 156.31478882]
[114.80126190 170.40396118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 160]
[4 159]
[5 158]
[6 157]
[7 105]
[8 104]
[9 103]
[10 102]
[14 97]
[15 96]
[16 95]
[17 94]
[21 90]
[22 89]
[23 88]
[24 87]
[25 86]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[32 79]
[33 78]
[35 76]
[36 75]
[39 73]
[40 72]
[42 70]
[43 69]
[47 65]
[48 64]
[49 63]
[52 61]
[53 60]
[54 59]
[106 149]
[107 148]
[108 147]
[110 144]
[111 143]
[112 142]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
