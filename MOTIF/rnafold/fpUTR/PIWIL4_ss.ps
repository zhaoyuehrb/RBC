%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUCGCGCCAACCCCUACGCCCCAGCGCGCCUUCUCCACCCACGCACGGGCCUCGGACGCAUUUCCAGCCCCGGCGUUGGUUGUGGAUGCUGGACAUCCACCGCCUCCAGGCAGUUUCGCCGUCACACCGUCGCCAUCUGUAGCCAAAGCAAAACAUAUCCUAACUGAGACUUUGCAGCUCUUGUGGCCACUCUGGGCUCACCGGGAAC\
) } def
/len { sequence length } bind def

/coor [
[26.03465080 221.45321655]
[19.38371277 234.89811707]
[12.73277378 248.34300232]
[6.08183575 261.78787231]
[-0.56910300 275.23278809]
[1.63040257 295.27136230]
[-14.91207027 305.28387451]
[-21.16167068 318.91995239]
[-27.41127205 332.55603027]
[-18.45380211 345.03237915]
[-16.95055008 360.31753540]
[-23.30588341 374.29986572]
[-35.81024933 383.21817017]
[-51.10003662 384.67349243]
[-65.06237030 378.27438354]
[-73.94144440 365.74212646]
[-75.34884644 350.44784546]
[-68.90598297 336.50564575]
[-56.34595490 327.66589355]
[-41.04734421 326.30642700]
[-34.79774475 312.67034912]
[-28.54814339 299.03427124]
[-32.95304489 289.81524658]
[-31.52683640 279.47625732]
[-24.50123787 271.46371460]
[-14.01399136 268.58184814]
[-7.36305237 255.13694763]
[-0.71211404 241.69206238]
[5.93882465 228.24717712]
[12.58976269 214.80227661]
[5.55798912 207.86289978]
[0.52278304 199.34329224]
[-2.17448473 189.80393982]
[-2.34659386 179.87507629]
[0.02655599 170.21495056]
[4.79603672 161.46618652]
[11.65320873 154.21308899]
[20.14967918 148.94258118]
[29.72661781 146.01156616]
[39.75151062 145.62268066]
[49.55993652 147.81042480]
[57.37845612 135.00921631]
[65.19697571 122.20801544]
[59.55955887 108.30767059]
[45.03302383 104.56871033]
[30.50649071 100.82975006]
[15.97995758 97.09078979]
[6.88992834 97.98233032]
[1.26667809 93.18730164]
[-13.20285606 89.23349762]
[-27.67238998 85.27968597]
[-42.14192200 81.32588196]
[-57.49351501 85.15200806]
[-67.73123932 74.33358765]
[-82.20077515 70.37978363]
[-91.30301666 71.13652039]
[-96.85459137 66.25869751]
[-111.26395416 62.09090805]
[-125.67330933 57.92311859]
[-139.39093018 65.77183533]
[-154.61848450 61.54133224]
[-162.32173157 47.74149323]
[-157.93046570 32.55952072]
[-144.04995728 25.00260353]
[-128.91525269 29.55413246]
[-121.50552368 43.51376343]
[-107.09616089 47.68154907]
[-92.68680573 51.84933853]
[-78.24696350 55.91024780]
[-63.77743149 59.86405563]
[-49.46080017 55.75512314]
[-38.18811417 66.85634613]
[-23.71858215 70.81015778]
[-9.24904823 74.76396179]
[5.22048569 78.71777344]
[19.71891785 82.56426239]
[34.24544907 86.30322266]
[48.77198410 90.04217529]
[63.29851913 93.78113556]
[66.28488922 74.47158051]
[79.72342682 57.20615768]
[74.50039673 43.14486313]
[69.27737427 29.08356667]
[57.21903610 18.84115601]
[60.04047394 4.21621990]
[54.81745148 -9.84507561]
[49.59442520 -23.90637016]
[44.37140274 -37.96766663]
[39.14837646 -52.02896118]
[33.92535400 -66.09025574]
[28.70232773 -80.15155029]
[14.77581406 -88.11595917]
[12.46208572 -103.99128723]
[23.53603745 -115.59934998]
[39.50268173 -114.03543091]
[48.11377335 -100.49923706]
[42.76362228 -85.37457275]
[47.98664856 -71.31327820]
[53.20967102 -57.25198364]
[58.43269730 -43.19068909]
[63.65571976 -29.12939453]
[68.87874603 -15.06809998]
[74.10176849 -1.00680482]
[85.78652191 8.22984982]
[83.33866882 23.86054230]
[88.56169128 37.92183685]
[93.78472137 51.98313141]
[101.28451538 51.92756271]
[101.17362213 36.92797089]
[116.17321014 36.81732941]
[116.28410339 51.81642151]
[123.78389740 51.76085281]
[128.79798889 37.62370682]
[133.81207275 23.48655701]
[126.78977966 9.32806301]
[131.91494751 -5.62212992]
[146.14688110 -12.49433613]
[161.04205322 -7.21139765]
[167.76341248 7.09241152]
[162.32328796 21.93089485]
[147.94921875 28.50064468]
[142.93513489 42.63779068]
[137.92103577 56.77494049]
[146.02215576 69.39920044]
[160.96290588 70.73114014]
[175.90365601 72.06307983]
[184.72850037 69.70816803]
[191.05537415 73.52706146]
[205.97473145 75.08024597]
[218.17610168 65.39704895]
[233.28434753 67.18473053]
[242.44059753 78.87654114]
[257.35998535 80.42973328]
[271.88711548 74.16297150]
[283.74481201 83.17654419]
[298.66418457 84.72972870]
[313.58355713 86.28292084]
[328.50292969 87.83610535]
[343.42230225 89.38929749]
[351.84658813 78.48011017]
[364.46102905 73.19976044]
[377.92968750 74.82875824]
[388.74752808 82.83544922]
[394.15264893 95.04262543]
[409.04736328 96.81672668]
[423.94210815 98.59082031]
[430.50811768 91.82556152]
[439.31997681 88.88317108]
[448.36166382 90.30348206]
[455.62524414 95.64306641]
[459.55664062 103.60255432]
[474.35778809 106.03684998]
[489.15893555 108.47114563]
[503.96011353 110.90544128]
[518.76123047 113.33972931]
[526.41632080 103.45811462]
[537.48193359 97.80138397]
[549.83050537 97.38826752]
[561.11682129 102.23582458]
[569.22344971 111.36785889]
[572.65808105 123.01078033]
[587.38061523 125.88261414]
[600.34710693 116.84683228]
[615.89013672 119.70848083]
[624.78833008 132.76979065]
[621.76251221 148.28172302]
[608.60784912 157.04132080]
[593.12878418 153.85166931]
[584.50878906 140.60513306]
[569.78625488 137.73330688]
[557.43554688 150.35682678]
[539.82446289 153.06263733]
[523.97650146 144.58062744]
[516.32696533 128.14088440]
[501.52581787 125.70659637]
[486.72463989 123.27230072]
[471.92349243 120.83800507]
[457.12234497 118.40370941]
[438.51757812 127.33925629]
[422.16799927 113.48554230]
[407.27328491 111.71144104]
[392.37857056 109.93734741]
[381.61779785 122.33472443]
[365.42565918 125.91080475]
[350.14114380 119.06272125]
[341.86911011 104.30866241]
[326.94973755 102.75547791]
[312.03036499 101.20228577]
[297.11099243 99.64910126]
[282.19161987 98.09590912]
[268.73159790 104.47376251]
[255.80677795 95.34910583]
[240.88742065 93.79591370]
[229.51922607 103.35102081]
[214.36674500 101.98839569]
[204.42155457 89.99961853]
[189.50218201 88.44642639]
[174.57171631 87.00382233]
[159.63096619 85.67189026]
[144.69021606 84.33995056]
[145.49617004 103.93722534]
[138.38807678 121.45719910]
[125.17829895 133.97738647]
[108.63713074 139.67193604]
[91.92630768 138.06616211]
[77.99817657 130.02653503]
[70.17965698 142.82772827]
[62.36114120 155.62893677]
[73.19317627 173.05325317]
[73.67678833 193.48785400]
[63.75568771 211.27148438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[7 22]
[8 21]
[9 20]
[41 208]
[42 207]
[43 206]
[44 79]
[45 78]
[46 77]
[47 76]
[49 75]
[50 74]
[51 73]
[52 72]
[54 70]
[55 69]
[57 68]
[58 67]
[59 66]
[81 107]
[82 106]
[83 105]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[112 123]
[113 122]
[114 121]
[124 200]
[125 199]
[126 198]
[128 197]
[129 196]
[132 193]
[133 192]
[135 190]
[136 189]
[137 188]
[138 187]
[139 186]
[144 182]
[145 181]
[146 180]
[151 178]
[152 177]
[153 176]
[154 175]
[155 174]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
