%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ENOSF1)
} def

/sequence { (\
CCCGCCCUCCCGCCGCGCGCUCGGGAUCCCGACCAGUCCUGACCGCACGGGGGCCGCGGCCACGGGGCGCAGGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 65 0.009400877 ubox
1 66 0.013690973 ubox
1 73 0.065893900 ubox
1 74 0.195266890 ubox
1 75 0.051436228 ubox
2 59 0.022980553 ubox
2 64 0.009313357 ubox
2 65 0.015160811 ubox
2 72 0.065876669 ubox
2 73 0.195917746 ubox
2 74 0.051909947 ubox
2 75 0.013100479 ubox
3 58 0.024303024 ubox
3 64 0.015160297 ubox
3 69 0.080197234 ubox
3 72 0.190922671 ubox
3 73 0.049171594 ubox
3 74 0.012471726 ubox
4 54 0.036531096 ubox
4 55 0.004056504 ubox
4 57 0.025106414 ubox
4 60 0.015734054 ubox
4 63 0.009105030 ubox
4 68 0.126259457 ubox
4 70 0.163477764 ubox
4 76 0.971191284 ubox
5 53 0.036596422 ubox
5 56 0.025068678 ubox
5 59 0.016630403 ubox
5 67 0.126322235 ubox
5 69 0.163811156 ubox
5 73 0.010132897 ubox
5 74 0.082314408 ubox
5 75 0.972169042 ubox
6 52 0.036767494 ubox
6 53 0.003803095 ubox
6 58 0.016635309 ubox
6 59 0.007161044 ubox
6 66 0.126282579 ubox
6 67 0.081121271 ubox
6 72 0.010110206 ubox
6 73 0.092064730 ubox
6 74 0.971199170 ubox
6 75 0.021564024 ubox
7 51 0.036340013 ubox
7 52 0.006251808 ubox
7 53 0.008829759 ubox
7 58 0.007202405 ubox
7 65 0.125880944 ubox
7 66 0.080384228 ubox
7 67 0.100410290 ubox
7 72 0.100626104 ubox
7 73 0.967442060 ubox
7 74 0.026494509 ubox
7 75 0.006551504 ubox
8 50 0.010810094 ubox
8 52 0.024951875 ubox
8 53 0.009114554 ubox
8 64 0.118875560 ubox
8 65 0.066650810 ubox
8 66 0.076493057 ubox
8 67 0.058003972 ubox
8 71 0.101400503 ubox
8 72 0.896711400 ubox
8 73 0.029072703 ubox
8 74 0.006815659 ubox
9 49 0.006496731 ubox
9 50 0.005963215 ubox
9 51 0.052796879 ubox
9 52 0.120754605 ubox
9 53 0.589068250 ubox
9 58 0.004336144 ubox
9 59 0.005689215 ubox
9 64 0.066758927 ubox
9 65 0.086018825 ubox
9 66 0.105341419 ubox
9 67 0.023604895 ubox
9 72 0.164679248 ubox
9 73 0.014473387 ubox
9 74 0.004082045 ubox
10 49 0.005302019 ubox
10 50 0.052949801 ubox
10 51 0.118337398 ubox
10 52 0.798904378 ubox
10 53 0.434432241 ubox
10 58 0.004845326 ubox
10 59 0.005323472 ubox
10 64 0.085776840 ubox
10 65 0.106117303 ubox
10 66 0.023293534 ubox
10 72 0.018189960 ubox
10 73 0.004491666 ubox
11 49 0.052794544 ubox
11 50 0.084939011 ubox
11 51 0.799726098 ubox
11 52 0.546881294 ubox
11 56 0.003726960 ubox
11 58 0.005340873 ubox
11 64 0.106451642 ubox
11 65 0.022954334 ubox
11 69 0.061000164 ubox
11 72 0.004681719 ubox
12 48 0.051612662 ubox
12 55 0.003616367 ubox
12 57 0.005328953 ubox
12 60 0.153254045 ubox
12 63 0.100547635 ubox
12 68 0.053648249 ubox
12 70 0.014191109 ubox
13 50 0.980567866 ubox
13 51 0.009763126 ubox
13 52 0.010772885 ubox
13 56 0.004490183 ubox
13 59 0.153992207 ubox
13 67 0.053218244 ubox
13 69 0.010870266 ubox
14 49 0.984804393 ubox
14 50 0.007537913 ubox
14 51 0.011139522 ubox
14 58 0.153991324 ubox
14 66 0.053133411 ubox
15 46 0.041780982 ubox
15 48 0.984919957 ubox
15 54 0.003210280 ubox
15 57 0.153986994 ubox
16 45 0.041798185 ubox
16 49 0.011650246 ubox
16 53 0.003211757 ubox
16 56 0.153881885 ubox
16 64 0.048664970 ubox
17 44 0.041614721 ubox
17 46 0.986628028 ubox
17 48 0.010987629 ubox
17 54 0.026844235 ubox
17 55 0.148870708 ubox
17 63 0.036442137 ubox
18 45 0.986861736 ubox
18 53 0.037946420 ubox
19 37 0.003256766 ubox
19 44 0.984919322 ubox
19 46 0.012674907 ubox
19 54 0.145545187 ubox
19 60 0.032994818 ubox
20 36 0.003542998 ubox
20 45 0.012646949 ubox
20 51 0.033016927 ubox
20 52 0.012935870 ubox
20 53 0.145291129 ubox
20 59 0.032966239 ubox
21 32 0.034209172 ubox
21 42 0.977075274 ubox
21 50 0.025233273 ubox
21 51 0.006498028 ubox
21 52 0.094634060 ubox
21 58 0.027210922 ubox
21 59 0.004670054 ubox
22 31 0.043970465 ubox
22 41 0.996621953 ubox
22 49 0.023845644 ubox
22 51 0.050239254 ubox
22 52 0.005234713 ubox
22 56 0.017036541 ubox
22 58 0.018807399 ubox
23 30 0.044499621 ubox
23 34 0.015476626 ubox
23 40 0.997167569 ubox
23 48 0.021977566 ubox
23 55 0.017037322 ubox
23 57 0.018989158 ubox
24 29 0.044346289 ubox
24 33 0.015495251 ubox
24 34 0.003257841 ubox
24 39 0.998197212 ubox
24 44 0.010696916 ubox
24 54 0.016938136 ubox
24 55 0.028628454 ubox
25 33 0.003264187 ubox
25 38 0.998200168 ubox
25 43 0.010702504 ubox
25 54 0.028647720 ubox
26 37 0.996851435 ubox
27 36 0.988481192 ubox
27 42 0.010786807 ubox
27 52 0.024668951 ubox
27 53 0.005655513 ubox
28 41 0.010817707 ubox
28 51 0.033539952 ubox
28 52 0.005687141 ubox
29 50 0.033620179 ubox
29 51 0.005591527 ubox
30 45 0.003521950 ubox
30 49 0.033633114 ubox
30 50 0.005472291 ubox
31 38 0.010765086 ubox
31 44 0.003677607 ubox
31 48 0.033304409 ubox
32 37 0.009615497 ubox
33 52 0.003212716 ubox
34 41 0.007680115 ubox
35 40 0.006944445 ubox
36 43 0.026854669 ubox
36 46 0.006846788 ubox
36 54 0.005632502 ubox
37 42 0.024932885 ubox
37 45 0.006710064 ubox
37 51 0.003875881 ubox
37 52 0.027758649 ubox
37 53 0.005475916 ubox
38 50 0.010025071 ubox
38 51 0.043665509 ubox
38 52 0.006628449 ubox
39 49 0.010042190 ubox
39 50 0.044285683 ubox
39 51 0.006420043 ubox
40 47 0.012422745 ubox
40 49 0.044281997 ubox
40 50 0.005487048 ubox
41 46 0.013206999 ubox
41 48 0.043962279 ubox
43 50 0.069488556 ubox
43 51 0.091415058 ubox
43 52 0.078444706 ubox
43 53 0.003332202 ubox
43 59 0.003882667 ubox
44 49 0.069579365 ubox
44 50 0.091805726 ubox
44 51 0.078725649 ubox
44 52 0.004513198 ubox
44 58 0.003982773 ubox
45 57 0.003978139 ubox
46 56 0.003784177 ubox
48 56 0.006716663 ubox
48 64 0.018587187 ubox
49 55 0.024784217 ubox
49 63 0.023031871 ubox
50 54 0.024409868 ubox
50 61 0.003991533 ubox
51 60 0.004001556 ubox
51 61 0.009860450 ubox
52 60 0.008297619 ubox
52 61 0.117019995 ubox
52 77 0.003750675 ubox
53 60 0.118335485 ubox
53 68 0.641125902 ubox
53 70 0.007878702 ubox
53 76 0.005991415 ubox
54 59 0.118513108 ubox
54 65 0.024989503 ubox
54 66 0.026199689 ubox
54 67 0.665536143 ubox
54 69 0.006908670 ubox
54 73 0.070758590 ubox
54 74 0.004499624 ubox
54 75 0.006349378 ubox
55 64 0.026956275 ubox
55 65 0.026598229 ubox
55 66 0.665678683 ubox
55 69 0.012969128 ubox
55 72 0.103203113 ubox
55 73 0.004801893 ubox
55 74 0.006336996 ubox
56 63 0.026869516 ubox
56 68 0.013585801 ubox
56 70 0.713231212 ubox
57 64 0.666533037 ubox
57 67 0.013530088 ubox
57 69 0.713827651 ubox
58 63 0.664957162 ubox
58 68 0.686851282 ubox
59 68 0.199997884 ubox
60 66 0.658690207 ubox
60 67 0.278656325 ubox
61 65 0.653997347 ubox
61 66 0.278244597 ubox
66 77 0.025451505 ubox
67 76 0.028558907 ubox
68 75 0.028589875 ubox
69 76 0.011981465 ubox
70 75 0.012149677 ubox
4 76 0.9500000 lbox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 72 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
19 44 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
53 68 0.9500000 lbox
54 67 0.9500000 lbox
55 66 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
