%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EEF2)
} def

/sequence { (\
CUCUUCCGCCGUCGUCGCCGCCAUCCUCGGCGCGACUCGCUUCUUUCGGUUCUACCUGGGAGAAUCCACCGCCAUCCGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 62 0.015316609 ubox
2 61 0.015345166 ubox
2 63 0.356673327 ubox
3 60 0.015255774 ubox
3 62 0.374605727 ubox
4 59 0.013058435 ubox
4 61 0.374309878 ubox
4 62 0.013029596 ubox
4 64 0.008719281 ubox
5 58 0.009440432 ubox
5 60 0.373851209 ubox
5 61 0.021218189 ubox
5 63 0.009307853 ubox
6 49 0.005025151 ubox
6 59 0.374162972 ubox
6 60 0.025969802 ubox
6 62 0.009100222 ubox
7 14 0.003573120 ubox
7 32 0.003239613 ubox
7 39 0.179786137 ubox
7 48 0.005063426 ubox
7 58 0.373701689 ubox
7 59 0.025928457 ubox
7 71 0.035366667 ubox
7 78 0.038479048 ubox
8 13 0.014033163 ubox
8 31 0.003985128 ubox
8 38 0.187346147 ubox
8 40 0.813830533 ubox
8 47 0.005274490 ubox
8 50 0.112871638 ubox
8 57 0.168979129 ubox
8 70 0.032658220 ubox
8 72 0.174328395 ubox
8 77 0.034790354 ubox
8 79 0.145300436 ubox
9 30 0.003986806 ubox
9 39 0.772877192 ubox
9 49 0.122465292 ubox
9 59 0.008468798 ubox
9 71 0.173342756 ubox
9 78 0.143613849 ubox
10 29 0.003986644 ubox
10 39 0.345067091 ubox
10 48 0.122435938 ubox
10 58 0.008557863 ubox
10 71 0.030576168 ubox
10 78 0.030762583 ubox
11 28 0.003951991 ubox
11 36 0.797103288 ubox
11 38 0.432489208 ubox
11 40 0.158081326 ubox
11 47 0.118123761 ubox
11 55 0.013484822 ubox
11 57 0.004750295 ubox
11 69 0.115350059 ubox
11 70 0.034186039 ubox
11 72 0.016404878 ubox
11 75 0.009795391 ubox
11 77 0.035452659 ubox
11 79 0.016035490 ubox
11 82 0.025026321 ubox
12 35 0.799783411 ubox
12 39 0.154449080 ubox
12 54 0.012565575 ubox
12 68 0.108079437 ubox
12 71 0.015103553 ubox
12 74 0.009696359 ubox
12 78 0.014670725 ubox
12 81 0.023468781 ubox
13 34 0.800067826 ubox
13 39 0.031153929 ubox
13 71 0.007415694 ubox
13 78 0.006540222 ubox
14 33 0.799709142 ubox
14 36 0.598075994 ubox
14 38 0.020440175 ubox
14 40 0.003324963 ubox
15 32 0.168647802 ubox
15 35 0.599563746 ubox
16 32 0.781166187 ubox
16 34 0.599790092 ubox
17 31 0.799194811 ubox
17 33 0.599688969 ubox
18 30 0.799231094 ubox
18 32 0.424053466 ubox
19 29 0.799185414 ubox
19 32 0.425092963 ubox
20 28 0.778496046 ubox
20 31 0.600839031 ubox
21 30 0.600984742 ubox
22 29 0.600454722 ubox
29 80 0.003607888 ubox
30 79 0.003611876 ubox
31 78 0.003611730 ubox
32 40 0.003549158 ubox
32 77 0.003465645 ubox
33 39 0.003597748 ubox
34 38 0.003370983 ubox
34 76 0.003408756 ubox
35 75 0.003340885 ubox
37 49 0.025106089 ubox
38 48 0.032411888 ubox
38 71 0.031950931 ubox
38 78 0.010206753 ubox
39 47 0.034882311 ubox
39 50 0.046491985 ubox
39 70 0.034778916 ubox
39 72 0.132548912 ubox
39 77 0.010338895 ubox
39 79 0.066201624 ubox
40 49 0.049111270 ubox
40 62 0.030864878 ubox
40 71 0.132920999 ubox
40 78 0.066355879 ubox
41 48 0.046402662 ubox
41 49 0.003389559 ubox
41 61 0.031263527 ubox
41 62 0.019715979 ubox
41 63 0.020741405 ubox
41 64 0.796109973 ubox
42 48 0.004025970 ubox
42 49 0.017069399 ubox
42 60 0.031158087 ubox
42 61 0.023603898 ubox
42 63 0.911574899 ubox
43 48 0.023574365 ubox
43 49 0.012519759 ubox
43 59 0.031220279 ubox
43 60 0.024190747 ubox
43 62 0.923104808 ubox
44 48 0.011427688 ubox
44 58 0.030559757 ubox
44 59 0.023774534 ubox
44 60 0.004177729 ubox
44 61 0.922887246 ubox
44 63 0.003305759 ubox
45 58 0.022755565 ubox
45 59 0.008860595 ubox
45 60 0.921745227 ubox
45 61 0.005904017 ubox
45 62 0.003488799 ubox
46 58 0.012399693 ubox
46 59 0.920140494 ubox
46 60 0.007635196 ubox
46 61 0.003606200 ubox
47 58 0.922358855 ubox
47 59 0.008686836 ubox
47 60 0.003644525 ubox
47 71 0.025204710 ubox
47 78 0.042609218 ubox
48 56 0.555335969 ubox
48 57 0.815232195 ubox
48 66 0.023206258 ubox
48 67 0.012988057 ubox
48 70 0.026390948 ubox
48 73 0.009481679 ubox
48 77 0.044857518 ubox
48 80 0.025321948 ubox
48 83 0.007239992 ubox
49 55 0.560209778 ubox
49 56 0.807697186 ubox
49 65 0.023510612 ubox
49 66 0.012918237 ubox
49 69 0.026363143 ubox
49 72 0.009491382 ubox
49 76 0.044826344 ubox
49 79 0.025345408 ubox
49 82 0.007292747 ubox
50 54 0.508873550 ubox
50 61 0.003181635 ubox
50 62 0.004393088 ubox
50 64 0.027020956 ubox
50 68 0.022958945 ubox
50 71 0.009240647 ubox
50 74 0.003892812 ubox
50 78 0.024849717 ubox
50 81 0.006954866 ubox
51 60 0.004374823 ubox
51 61 0.009110214 ubox
51 63 0.029209192 ubox
52 58 0.005648137 ubox
52 59 0.004549954 ubox
52 60 0.009169554 ubox
52 62 0.029234579 ubox
53 58 0.004316197 ubox
53 59 0.009004162 ubox
53 61 0.028675807 ubox
56 62 0.003738548 ubox
57 61 0.003383830 ubox
57 68 0.044911687 ubox
57 71 0.019453670 ubox
57 74 0.010177232 ubox
57 81 0.012528246 ubox
58 67 0.048524118 ubox
58 70 0.022499015 ubox
58 73 0.010815208 ubox
58 80 0.014178579 ubox
59 66 0.048385692 ubox
59 67 0.026329329 ubox
59 69 0.022200481 ubox
59 70 0.010002552 ubox
59 72 0.010689577 ubox
59 77 0.011394091 ubox
59 79 0.014064360 ubox
60 65 0.028311173 ubox
60 66 0.026769536 ubox
60 69 0.010095979 ubox
60 76 0.011545658 ubox
61 65 0.023425615 ubox
61 75 0.011399848 ubox
62 76 0.013597742 ubox
63 75 0.012720432 ubox
64 75 0.016966392 ubox
65 74 0.019874623 ubox
70 78 0.152172035 ubox
71 77 0.155281091 ubox
71 79 0.641584631 ubox
72 78 0.642089217 ubox
8 40 0.9500000 lbox
9 39 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
18 30 0.9500000 lbox
19 29 0.9500000 lbox
20 28 0.9500000 lbox
41 64 0.9500000 lbox
42 63 0.9500000 lbox
43 62 0.9500000 lbox
44 61 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
showpage
end
%%EOF
