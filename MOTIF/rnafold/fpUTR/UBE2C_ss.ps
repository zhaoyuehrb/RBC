%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGAGCUCAGACCGCUCUUUGAGACUCUCCCGAAGGAGAAUGGGAGGGUAGGGGCGCUGCCAGACUCCUUCCCUGGUGGGCCUAGAUGAAGACGCUCAAGGACCCUCGUGACUUGGCCGAGACAGGGGAAGGGAGAAGUUGAGUCGGGCAAGGAAGAGAUGCUAAAGCCUGGGGAAUUAAGAACAUGCCAGAAUCAUCCCGAGGGAGUCUGGAAUUAGGGAGGGUGAGGACUCGCUAGGAUCGUCCUGUGGAU\
CUGGCUACAGCAGGAGCUG\
) } def
/len { sequence length } bind def

/coor [
[44.96039963 693.72119141]
[41.63327789 687.40136719]
[40.67245102 680.25567627]
[42.24123001 673.14898682]
[46.19390869 666.95751953]
[52.08799362 662.46099854]
[50.71902466 647.52362061]
[49.35005569 632.58618164]
[45.62437439 626.23632812]
[48.05176544 617.47052002]
[46.85352707 602.51843262]
[45.65528870 587.56634521]
[44.45705032 572.61431885]
[43.17342377 557.66931152]
[41.80445480 542.73193359]
[40.43548584 527.79449463]
[39.06651688 512.85711670]
[32.14152527 509.97711182]
[26.38149071 523.82708740]
[20.62145424 537.67706299]
[14.86118984 551.52697754]
[1.01139951 545.76647949]
[6.77147341 531.91705322]
[12.53150845 518.06707764]
[18.29154396 504.21707153]
[11.36655235 501.33706665]
[-0.19114614 510.89840698]
[-11.74884510 520.45977783]
[-23.30654335 530.02111816]
[-34.86424255 539.58251953]
[-46.42193985 549.14385986]
[-57.97964096 558.70520020]
[-69.53733826 568.26660156]
[-81.09503937 577.82794189]
[-79.98635101 593.30535889]
[-88.21536255 606.46069336]
[-102.61785126 612.23547363]
[-117.65576172 608.40911865]
[-127.54672241 596.45300293]
[-128.48744202 580.96447754]
[-120.11620331 567.89916992]
[-105.65191650 562.28100586]
[-90.65639496 566.27026367]
[-79.09870148 556.70886230]
[-67.54100037 547.14752197]
[-55.98329926 537.58618164]
[-44.42560196 528.02478027]
[-32.86790466 518.46343994]
[-21.31020546 508.90206909]
[-9.75250626 499.34072876]
[1.80519271 489.77935791]
[24.82064056 483.55239868]
[41.33654785 492.02270508]
[45.89023972 477.73062134]
[50.44393539 463.43853760]
[54.99762726 449.14642334]
[59.55131912 434.85433960]
[64.10501099 420.56225586]
[52.11120987 407.24078369]
[49.53335571 389.36953735]
[57.38658142 372.96514893]
[73.14926910 363.63247681]
[73.32062531 348.63348389]
[73.49197388 333.63446045]
[73.66333008 318.63543701]
[73.83468628 303.63641357]
[74.00604248 288.63739014]
[74.17739868 273.63836670]
[74.34875488 258.63934326]
[74.52011108 243.64031982]
[74.69146729 228.64129639]
[74.86282349 213.64227295]
[75.03417969 198.64324951]
[64.84119415 190.79684448]
[60.95940399 178.32957458]
[65.01531219 165.71353149]
[75.74524689 157.60968018]
[76.08793640 142.61358643]
[76.43062592 127.61750793]
[76.77331543 112.62142181]
[69.69763947 99.39512634]
[57.03272247 91.35772705]
[44.32210159 83.39279175]
[31.56619072 75.50059509]
[18.81027985 67.60839844]
[3.00374413 66.92723846]
[-3.74849796 53.65108109]
[-16.50440788 45.75888443]
[-29.30518913 37.93967438]
[-42.15042496 30.19371414]
[-58.54797363 30.42265129]
[-66.71145630 16.19979477]
[-58.24297333 2.15640020]
[-41.85418320 2.73910832]
[-34.40446091 17.34847832]
[-21.55922699 25.09444046]
[-14.23639297 25.85450172]
[-8.61221027 33.00297165]
[4.14369917 40.89516830]
[19.03784752 41.01182556]
[26.70247841 54.85248947]
[39.45838547 62.74468613]
[52.21429825 70.63688660]
[59.52796936 71.48055267]
[65.07012177 78.69280243]
[77.73503876 86.73020935]
[90.53582001 78.91100311]
[89.16685486 63.97359848]
[87.79788208 49.03619766]
[75.47949219 42.89962006]
[67.85420227 31.57306290]
[66.81982422 18.06657600]
[72.53943634 5.90665483]
[83.42655945 -1.78451049]
[82.22831726 -16.73657417]
[81.03008270 -31.68863869]
[79.83184052 -46.64070129]
[71.01687622 -59.77869797]
[77.71276093 -73.08337402]
[76.51451874 -88.03543854]
[75.31628418 -102.98750305]
[74.11804199 -117.93956757]
[62.36896133 -128.16682434]
[61.36677551 -143.34741211]
[71.18930817 -154.48533630]
[69.99107361 -169.43740845]
[68.79283142 -184.38946533]
[54.41620255 -189.41265869]
[43.33006668 -199.85380554]
[37.45516586 -213.90391541]
[37.80935287 -229.12870789]
[44.33127213 -242.89041138]
[55.89096069 -252.80471802]
[70.48562622 -257.15393066]
[85.58666229 -255.18449402]
[98.57772064 -247.23765564]
[107.20801544 -234.69023132]
[109.98230743 -219.71614075]
[106.41992188 -204.90974426]
[97.13807678 -192.83633423]
[83.74489594 -185.58770752]
[84.94313812 -170.63565063]
[86.14137268 -155.68357849]
[97.61231995 -146.25209045]
[99.04049683 -131.10563660]
[89.07010651 -119.13780212]
[90.26834106 -104.18573761]
[91.46658325 -89.23367310]
[92.66482544 -74.28160858]
[101.39408112 -62.21308899]
[94.78390503 -47.83894348]
[95.98214722 -32.88687897]
[97.18038177 -17.93481445]
[98.37862396 -2.98274970]
[112.66548920 5.13701105]
[119.35179138 20.33031845]
[115.61399841 36.67429733]
[102.73528290 47.66722870]
[104.10425568 62.60462952]
[105.47322083 77.54203033]
[112.66941833 79.65502167]
[127.06181335 83.88101196]
[134.25801086 85.99401093]
[143.48542786 74.16798401]
[145.22033691 57.86086655]
[160.31787109 51.45801544]
[173.24697876 61.54613495]
[170.70730591 77.74743652]
[155.31144714 83.39540863]
[146.08403015 95.22142792]
[156.09974670 106.38768768]
[168.85565186 98.49549103]
[181.61157227 90.60329437]
[194.36747742 82.71109772]
[191.55474854 67.79624176]
[194.32368469 52.87318802]
[202.29977417 39.96015930]
[214.40435791 30.80354309]
[229.00036621 26.64169121]
[244.11381531 28.03745842]
[257.70071411 34.80208206]
[267.92358398 46.02070236]
[273.39987183 60.17609024]
[273.38888550 75.35384369]
[267.89218140 89.50130463]
[257.65310669 100.70513916]
[244.05642700 107.45011902]
[228.94097900 108.82405090]
[214.35101318 104.64110565]
[202.25967407 95.46701050]
[189.50376892 103.35920715]
[176.74784851 111.25140381]
[163.99194336 119.14360046]
[139.38499451 136.84780884]
[114.36285400 138.48210144]
[97.06458282 128.06251526]
[91.76940155 112.96411133]
[91.42671204 127.96019745]
[91.08402252 142.95628357]
[90.74133301 157.95236206]
[103.05994415 170.39836121]
[102.55667114 187.56411743]
[90.03320312 198.81460571]
[89.86184692 213.81362915]
[89.69049072 228.81265259]
[89.51913452 243.81167603]
[89.34777832 258.81069946]
[89.17642212 273.80972290]
[89.00506592 288.80874634]
[88.83370972 303.80776978]
[88.66235352 318.80679321]
[88.49099731 333.80581665]
[88.31964111 348.80484009]
[88.14828491 363.80383301]
[102.28903198 372.12973022]
[110.24082947 386.30477905]
[109.97988129 402.39910889]
[123.08299255 409.70037842]
[136.18609619 417.00164795]
[149.28921509 424.30291748]
[165.11036682 424.26132202]
[172.46202087 437.21517944]
[185.56512451 444.51644897]
[198.66822815 451.81771851]
[212.68884277 445.16925049]
[227.93338013 448.06469727]
[238.54000854 459.39074707]
[240.43026733 474.79223633]
[232.87731934 488.34704590]
[218.78541565 494.84301758]
[203.57318115 491.78234863]
[193.09004211 480.34194946]
[191.36695862 464.92083740]
[178.26385498 457.61956787]
[165.16075134 450.31829834]
[150.27680969 450.88211060]
[141.98794556 437.40603638]
[128.88484192 430.10476685]
[115.78172302 422.80349731]
[102.67861938 415.50222778]
[97.55819702 419.86920166]
[91.60994720 423.01687622]
[85.11914825 424.79418945]
[78.39710236 425.11593628]
[73.84341431 439.40805054]
[69.28971863 453.70013428]
[64.73602295 467.99221802]
[60.18233109 482.28430176]
[55.62863922 496.57641602]
[54.00391769 511.48815918]
[55.37288666 526.42553711]
[56.74185562 541.36297607]
[58.11082458 556.30035400]
[61.99743271 564.52386475]
[59.40911484 571.41607666]
[60.60735321 586.36810303]
[61.80559158 601.32019043]
[63.00382996 616.27227783]
[64.28745270 631.21722412]
[65.65642548 646.15460205]
[67.02539062 661.09204102]
[81.85662842 678.93548584]
[71.53724670 698.87408447]
[73.75674438 713.70892334]
[75.97623444 728.54382324]
[78.19573212 743.37872314]
[88.82431793 755.86730957]
[83.06902313 771.22338867]
[66.85038757 773.64990234]
[56.85276413 760.65069580]
[63.36084366 745.59820557]
[61.14134979 730.76330566]
[58.92185593 715.92846680]
[56.70236206 701.09356689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 261]
[7 260]
[8 259]
[10 258]
[11 257]
[12 256]
[13 255]
[14 253]
[15 252]
[16 251]
[17 250]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[53 249]
[54 248]
[55 247]
[56 246]
[57 245]
[58 244]
[62 214]
[63 213]
[64 212]
[65 211]
[66 210]
[67 209]
[68 208]
[69 207]
[70 206]
[71 205]
[72 204]
[73 203]
[77 200]
[78 199]
[79 198]
[80 197]
[81 106]
[82 105]
[83 103]
[84 102]
[85 101]
[87 99]
[88 98]
[89 96]
[90 95]
[107 160]
[108 159]
[109 158]
[114 154]
[115 153]
[116 152]
[117 151]
[119 149]
[120 148]
[121 147]
[122 146]
[125 143]
[126 142]
[127 141]
[163 170]
[164 169]
[171 193]
[172 192]
[173 191]
[174 190]
[217 240]
[218 239]
[219 238]
[220 237]
[222 235]
[223 234]
[224 233]
[263 274]
[264 273]
[265 272]
[266 271]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
