%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCUGAGAGCACAGAAGGUGAGCCCUAUUCACACCUCGGCCAGGCUGCGGUGGCCAGGACUGGUUUGGGAAGGCAGGGCCCCGGUGUGCAGCCACAGCCAGCAGCCUCCUACCUACACAAGGGUGUUCGGGAGCAUCUCAGGGCCGAAGACUUUGCUGCCUGCCCUGCCAGGACUUUGUCCUCACCCCUGGCACC\
) } def
/len { sequence length } bind def

/coor [
[121.46482849 131.29017639]
[116.89166260 140.85437012]
[110.23066711 154.29426575]
[103.56966400 167.73417664]
[96.90866852 181.17408752]
[90.24766541 194.61398315]
[105.08753204 192.42803955]
[116.15972137 202.54765320]
[115.31401062 217.52378845]
[103.17292023 226.33253479]
[88.67350006 222.48977661]
[82.48877716 208.82333374]
[74.78361511 221.69308472]
[67.07845306 234.56283569]
[69.57398987 250.41061401]
[58.63381195 262.14483643]
[42.65029144 260.76403809]
[33.88461685 247.32742310]
[39.06106186 232.14242554]
[54.20870209 226.85768127]
[61.91386414 213.98793030]
[69.61902618 201.11817932]
[76.80776215 187.95298767]
[83.46875763 174.51307678]
[90.12976074 161.07318115]
[96.79075623 147.63327026]
[103.45175934 134.19335938]
[98.95717621 128.18930054]
[86.94905853 137.17846680]
[74.94079590 146.16744995]
[65.95200348 134.15905762]
[77.95989227 125.17034912]
[89.96800995 116.18118286]
[85.47342682 110.17712402]
[70.70130920 112.78185272]
[55.92919540 115.38657379]
[41.15707779 117.99129486]
[28.91012955 128.00741577]
[15.03264523 122.59774017]
[0.26052916 125.20246124]
[-14.51158714 127.80718231]
[-29.28370285 130.41191101]
[-43.83226776 139.11682129]
[-56.22443771 127.54658508]
[-48.53686142 112.43574524]
[-31.88842583 115.63978577]
[-17.11631012 113.03506470]
[-2.34419346 110.43034363]
[12.42792320 107.82562256]
[23.61827087 97.99579620]
[38.55235672 103.21917725]
[53.32447052 100.61445618]
[68.09658813 98.00973511]
[82.86870575 95.40500641]
[96.25534821 88.63759613]
[107.11135864 78.28641510]
[117.96736908 67.93522644]
[128.82337952 57.58404160]
[139.67938232 47.23285675]
[150.53540039 36.88167191]
[150.23159790 20.07986641]
[161.61395264 8.00420856]
[177.98477173 7.33250809]
[190.00596619 18.15418434]
[198.31475830 5.66563606]
[206.62356567 -6.82291174]
[204.85243225 -19.60594940]
[212.03865051 -29.83887863]
[223.87965393 -32.34470367]
[232.38555908 -44.69985199]
[240.89144897 -57.05500031]
[242.34394836 -72.80939484]
[255.93409729 -78.90503693]
[264.44000244 -91.26018524]
[272.94589233 -103.61533356]
[281.45178223 -115.97048187]
[289.95770264 -128.32563782]
[298.46359253 -140.68078613]
[305.96359253 -153.67115784]
[312.41052246 -167.21505737]
[318.85745239 -180.75895691]
[325.30435181 -194.30285645]
[331.75128174 -207.84675598]
[330.69631958 -223.63275146]
[343.15264893 -231.79908752]
[349.59957886 -245.34298706]
[348.54458618 -261.12896729]
[361.00091553 -269.29531860]
[367.44784546 -282.83920288]
[373.89477539 -296.38311768]
[380.34170532 -309.92700195]
[375.28967285 -324.66183472]
[382.02072144 -338.30541992]
[396.09924316 -343.03094482]
[402.54617310 -356.57485962]
[408.77740479 -370.21932983]
[414.79135132 -383.96096802]
[420.80529785 -397.70257568]
[419.25003052 -413.44717407]
[431.44097900 -422.00460815]
[437.45492554 -435.74621582]
[425.76312256 -445.29632568]
[417.08239746 -457.64733887]
[412.05694580 -471.88275146]
[411.05966187 -486.94622803]
[414.16455078 -501.71994019]
[421.14123535 -515.10754395]
[431.47198486 -526.11566162]
[444.39019775 -533.92736816]
[458.93722534 -537.96295166]
[474.03363037 -537.92303467]
[488.55911255 -533.81054688]
[501.43582153 -525.93060303]
[511.70819092 -514.86804199]
[518.61395264 -501.44366455]
[521.64068604 -486.65374756]
[520.56372070 -471.59576416]
[515.46301270 -457.38714600]
[506.71710205 -445.08221436]
[494.97494507 -435.59408569]
[481.10787964 -429.62689209]
[466.14498901 -427.62338257]
[451.19656372 -429.73226929]
[445.18258667 -415.99063110]
[447.16806030 -401.22897339]
[434.54693604 -391.68862915]
[428.53298950 -377.94699097]
[422.51901245 -364.20538330]
[423.39807129 -359.50122070]
[421.32382202 -354.19580078]
[416.09005737 -350.12792969]
[409.64315796 -336.58401489]
[414.85269165 -322.67733765]
[408.50753784 -308.85006714]
[393.88558960 -303.48010254]
[387.43869019 -289.93618774]
[380.99176025 -276.39230347]
[374.54483032 -262.84838867]
[376.06091309 -248.03114319]
[363.14346313 -238.89605713]
[356.69653320 -225.35215759]
[358.21264648 -210.53491211]
[345.29519653 -201.39982605]
[338.84826660 -187.85592651]
[332.40133667 -174.31202698]
[325.95440674 -160.76814270]
[319.50747681 -147.22424316]
[332.75305176 -154.26379395]
[347.74713135 -153.84275818]
[360.57678223 -146.07101440]
[367.89385986 -132.97674561]
[367.78887939 -117.97710419]
[360.28918457 -104.98654175]
[347.35198975 -97.39517212]
[332.35345459 -97.18409729]
[319.20776367 -104.40840149]
[311.34548950 -117.18276978]
[310.81872559 -132.17488098]
[302.31283569 -119.81973267]
[293.80694580 -107.46458435]
[285.30105591 -95.10943604]
[276.79513550 -82.75428772]
[268.28924561 -70.39913940]
[267.44515991 -55.52846909]
[253.24659729 -48.54910278]
[244.74070740 -36.19395447]
[236.23480225 -23.83880615]
[235.79388428 -6.29990149]
[219.11212158 1.48588908]
[210.80331421 13.97443676]
[202.49450684 26.46298409]
[202.85147095 41.45873642]
[211.74510193 53.53779221]
[220.63871765 65.61684418]
[229.53233337 77.69589996]
[238.42594910 89.77495575]
[252.68603516 98.94480896]
[247.82212830 115.18607330]
[230.86911011 115.00827789]
[226.34689331 98.66857147]
[217.45327759 86.58951569]
[208.55966187 74.51045990]
[199.66604614 62.43140793]
[190.77243042 50.35235596]
[183.30096436 49.69868851]
[181.99337769 64.64158630]
[167.05050659 63.33375549]
[168.35804749 48.39134979]
[160.88658142 47.73768234]
[150.03057861 58.08886719]
[139.17456055 68.44005585]
[128.31855774 78.79123688]
[117.46253967 89.14242554]
[106.60652924 99.49360657]
[112.77636719 101.70552826]
[118.04479980 106.42197418]
[121.65397644 113.30955505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[12 22]
[13 21]
[14 20]
[34 54]
[35 53]
[36 52]
[37 51]
[39 49]
[40 48]
[41 47]
[42 46]
[55 194]
[56 193]
[57 192]
[58 191]
[59 190]
[60 189]
[64 171]
[65 170]
[66 169]
[69 167]
[70 166]
[71 165]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[78 158]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[85 141]
[86 140]
[88 138]
[89 137]
[90 136]
[91 135]
[94 132]
[95 131]
[96 128]
[97 127]
[98 126]
[100 124]
[101 123]
[172 184]
[173 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
