%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGGCGGGGCCAAGCCCAAGCCUGGCGCGCAGAGUGCACCUUCCUGAGCUCGAGCGGUCCAGCGCCAAGUUCGGGGUUUGGGGUUGGAGCGGCUGGUCACGUGGCUGGCCCGCGGCGGUGCGCGGGGCGUUGGGUCAGCGGGUCUGGGACUGGUGGCACCGGCGGCGGCGUAGGACGGAGGCGUCGCUAGGCAGCUUCGAACCAGUGCA\
) } def
/len { sequence length } bind def

/coor [
[64.88372803 289.16012573]
[70.52441406 274.80093384]
[83.04618073 265.78933716]
[82.15756989 250.81568909]
[70.88423157 241.14888000]
[69.76974487 225.97612000]
[79.98563385 214.21714783]
[79.09702301 199.24348450]
[78.20841217 184.26983643]
[77.31980896 169.29617310]
[76.43119812 154.32252502]
[75.54258728 139.34886169]
[64.25278473 129.47261047]
[49.29394150 130.58300781]
[34.33509445 131.69340515]
[21.14555168 140.43104553]
[7.88043547 133.65713501]
[-7.07840872 134.76753235]
[-22.03725243 135.87792969]
[-36.99609756 136.98832703]
[-51.95494080 138.09872437]
[-66.91378784 139.20912170]
[-81.87262726 140.31950378]
[-96.83147430 141.42990112]
[-91.85202789 160.16687012]
[-103.53942871 182.11645508]
[-116.22336578 190.12380981]
[-123.76239014 204.03329468]
[-138.65487671 204.28477478]
[-151.33880615 212.29212952]
[-164.02275085 220.29948425]
[-176.70669556 228.30682373]
[-186.87251282 241.87489319]
[-202.72451782 235.86235046]
[-201.33522034 218.96542358]
[-184.71403503 215.62289429]
[-172.03010559 207.61553955]
[-159.34616089 199.60818481]
[-146.66221619 191.60083008]
[-140.03044128 178.26409912]
[-124.23072052 177.43986511]
[-111.54678345 169.43251038]
[-112.76392365 162.03193665]
[-126.79936218 156.73980713]
[-115.19821930 147.23078918]
[-116.41536713 139.83020020]
[-130.99571228 136.30691528]
[-145.57604980 132.78363037]
[-160.15640259 129.26033020]
[-174.73674011 125.73704529]
[-189.31709290 122.21375275]
[-203.89743042 118.69046021]
[-214.50709534 126.98728943]
[-227.76454163 127.64927673]
[-238.81895447 120.65853882]
[-243.75447083 108.75650024]
[-258.28100586 105.01753998]
[-272.80755615 101.27857971]
[-286.28656006 109.53034973]
[-301.63278198 105.75294495]
[-309.74157715 92.18743896]
[-305.80215454 76.88200378]
[-292.15167236 68.91708374]
[-276.88873291 73.01811981]
[-269.06857300 86.75204468]
[-254.54205322 90.49100494]
[-240.01551819 94.22996521]
[-225.91288757 85.06665039]
[-209.21777344 89.01633453]
[-200.37414551 104.11011505]
[-185.79379272 107.63340759]
[-171.21345520 111.15670013]
[-156.63310242 114.67999268]
[-142.05276489 118.20327759]
[-127.47241974 121.72657013]
[-112.89207458 125.24986267]
[-97.94187164 126.47106171]
[-82.98302460 125.36066437]
[-68.02418518 124.25026703]
[-53.06533813 123.13987732]
[-38.10649109 122.02947998]
[-23.14764786 120.91908264]
[-8.18880463 119.80868530]
[6.77004004 118.69828796]
[18.88962746 110.04006958]
[33.22470093 116.73455811]
[48.18354416 115.62416840]
[63.14238739 114.51377106]
[61.49841309 99.34901428]
[65.68222809 85.12744904]
[74.73746490 73.93747711]
[87.01953125 67.28990936]
[84.58523560 52.48875427]
[82.15093994 37.68759918]
[79.71665192 22.88644409]
[77.28235626 8.08528805]
[74.84806061 -6.71586752]
[61.86278534 -15.72464848]
[59.13323212 -31.29144287]
[68.27880096 -44.18074799]
[83.87358093 -46.74556732]
[96.66547394 -37.46423721]
[99.06526947 -21.84321022]
[89.64921570 -9.15016079]
[92.08351135 5.65099478]
[94.51780701 20.45215034]
[96.95210266 35.25330734]
[99.38639069 50.05446243]
[101.82068634 64.85562134]
[104.16220856 65.05549622]
[106.48517609 65.41120148]
[112.32794952 51.59592056]
[118.17072296 37.78063965]
[124.01349640 23.96535873]
[129.85627747 10.15007782]
[135.69905090 -3.66520333]
[129.52784729 -18.21483612]
[135.52966309 -32.83515549]
[150.14373779 -38.85218430]
[164.69978333 -32.69612503]
[170.56196594 -18.01925850]
[164.25234985 -3.52911091]
[149.51432800 2.17757082]
[143.67155457 15.99285221]
[137.82878113 29.80813217]
[131.98600769 43.62341309]
[126.14323425 57.43869400]
[120.30046082 71.25397491]
[125.78875732 76.05459595]
[130.16992188 81.88320923]
[144.37982178 77.07915497]
[158.58970642 72.27510834]
[172.79960632 67.47106171]
[187.00950623 62.66701508]
[201.21940613 57.86296844]
[215.39331055 52.95376587]
[229.53045654 47.93967819]
[243.66760254 42.92559052]
[257.80474854 37.91150284]
[268.22473145 26.00626373]
[282.80624390 29.04411125]
[296.94338989 24.03002357]
[311.08053589 19.01593781]
[315.35098267 4.09806156]
[327.59503174 -5.43411303]
[343.10464478 -5.91527033]
[355.91604614 2.83960438]
[361.10296631 17.46408272]
[356.67095947 32.33475494]
[344.32421875 41.73354340]
[328.81030273 42.04642487]
[316.09463501 33.15308380]
[301.95748901 38.16717148]
[287.82034302 43.18125916]
[278.41152954 54.72785950]
[262.81884766 52.04865265]
[248.68168640 57.06274033]
[234.54454041 62.07682419]
[220.40739441 67.09091187]
[215.15452576 72.28905487]
[206.02345276 72.07286072]
[191.81355286 76.87690735]
[177.60365295 81.68095398]
[163.39376831 86.48500824]
[149.18386841 91.28905487]
[134.97396851 96.09310150]
[135.17201233 101.17127991]
[134.63656616 106.22503662]
[133.37878418 111.14897156]
[131.42489624 115.84040070]
[143.07275391 125.29171753]
[158.66409302 127.97883606]
[163.67195129 142.00633240]
[175.31980896 151.45765686]
[186.96766663 160.90896606]
[198.68522644 170.27372742]
[210.47186279 179.55140686]
[222.25849915 188.82908630]
[234.04512024 198.10676575]
[250.34471130 199.91107178]
[256.68322754 215.03573608]
[246.54016113 227.92178345]
[230.34982300 225.31315613]
[224.76744080 209.89338684]
[212.98081970 200.61570740]
[201.19418335 191.33804321]
[189.40754700 182.06036377]
[182.20793152 180.39344788]
[177.51634216 172.55682373]
[165.86848450 163.10551453]
[154.22062683 153.65419006]
[139.46241760 151.64309692]
[133.62144470 136.93957520]
[121.97357941 127.48825836]
[108.02709961 136.53036499]
[90.51624298 138.46025085]
[91.40485382 153.43391418]
[92.29346466 168.40756226]
[93.18206787 183.38122559]
[94.07067871 198.35487366]
[94.95928955 213.32853699]
[106.49423981 223.79670715]
[107.18211365 238.99478149]
[97.13122559 249.92709351]
[98.01983643 264.90075684]
[111.51954651 272.36810303]
[118.81893921 285.95935059]
[117.58881378 301.33758545]
[108.22169495 313.59567261]
[93.70659637 318.82211304]
[78.67523193 315.34912109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 88]
[14 87]
[15 86]
[17 84]
[18 83]
[19 82]
[20 81]
[21 80]
[22 79]
[23 78]
[24 77]
[26 42]
[27 41]
[29 39]
[30 38]
[31 37]
[32 36]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[56 67]
[57 66]
[58 65]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 123]
[130 166]
[131 165]
[132 164]
[133 163]
[134 162]
[135 161]
[136 159]
[137 158]
[138 157]
[139 156]
[141 154]
[142 153]
[143 152]
[170 194]
[171 193]
[173 191]
[174 190]
[175 189]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
