%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (S100B)
} def

/sequence { (\
GGGCAGAGGGAAUAAGAGGCUGCCUCUGCCCACCAGUCCUGCCGCCCAGGACCCGCAGCAGAGACGACGCCUGCAGCAAGGAGACCAGGAAGGGGUGAGACAAGGAAGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.007604562 ubox
1 31 0.990355986 ubox
1 34 0.003948139 ubox
2 29 0.005401190 ubox
2 30 0.999908056 ubox
2 31 0.003469690 ubox
3 29 0.999976992 ubox
4 28 0.999989271 ubox
5 27 0.999753773 ubox
6 26 0.999980867 ubox
7 25 0.999770436 ubox
8 24 0.999585036 ubox
8 25 0.012083513 ubox
9 20 0.007104957 ubox
9 21 0.017354722 ubox
9 23 0.998434630 ubox
9 24 0.027882713 ubox
10 20 0.070584661 ubox
10 23 0.037381448 ubox
13 22 0.094789916 ubox
14 21 0.090958454 ubox
15 21 0.049361784 ubox
16 20 0.056846182 ubox
31 97 0.132854112 ubox
32 96 0.268887082 ubox
33 81 0.052462735 ubox
33 89 0.025063894 ubox
33 93 0.045379154 ubox
33 94 0.179947489 ubox
33 95 0.278544005 ubox
33 105 0.622273770 ubox
33 111 0.419538705 ubox
34 41 0.003825993 ubox
34 80 0.052643324 ubox
34 88 0.025151623 ubox
34 92 0.045470777 ubox
34 93 0.181265957 ubox
34 94 0.277148285 ubox
34 97 0.137121350 ubox
34 104 0.624197707 ubox
34 110 0.421824629 ubox
35 40 0.003513064 ubox
35 96 0.136086542 ubox
36 42 0.003624723 ubox
36 52 0.407446146 ubox
36 65 0.113048190 ubox
36 68 0.006429735 ubox
36 96 0.003675007 ubox
36 101 0.687136684 ubox
37 41 0.003402878 ubox
37 51 0.410127493 ubox
37 64 0.113235970 ubox
37 67 0.006412648 ubox
37 82 0.010622306 ubox
37 90 0.190345266 ubox
37 94 0.130664788 ubox
37 95 0.021190907 ubox
37 98 0.034855876 ubox
37 100 0.688623096 ubox
37 105 0.014354088 ubox
37 106 0.510126301 ubox
37 109 0.006905972 ubox
37 111 0.007035747 ubox
38 50 0.411312037 ubox
38 63 0.113273020 ubox
38 66 0.006387883 ubox
38 81 0.011269820 ubox
38 89 0.191942903 ubox
38 93 0.132742218 ubox
38 94 0.024181757 ubox
38 95 0.014035074 ubox
38 97 0.036101581 ubox
38 99 0.685325804 ubox
38 104 0.015910901 ubox
38 105 0.532589094 ubox
38 108 0.005603624 ubox
38 110 0.011327446 ubox
38 111 0.016220893 ubox
39 49 0.411345674 ubox
39 61 0.114058161 ubox
39 80 0.011287117 ubox
39 88 0.191944097 ubox
39 92 0.132731294 ubox
39 93 0.024166327 ubox
39 94 0.014952792 ubox
39 95 0.058487167 ubox
39 99 0.069044238 ubox
39 104 0.532631089 ubox
39 105 0.005726701 ubox
39 108 0.017949134 ubox
39 110 0.016580444 ubox
40 48 0.411136509 ubox
40 60 0.114075956 ubox
40 78 0.007767520 ubox
40 79 0.008425527 ubox
40 87 0.191681586 ubox
40 91 0.119296187 ubox
40 92 0.023922202 ubox
40 93 0.009269603 ubox
40 94 0.052864109 ubox
40 97 0.541264666 ubox
40 98 0.086365461 ubox
40 102 0.262962659 ubox
40 103 0.459969571 ubox
40 104 0.005398271 ubox
40 107 0.016181883 ubox
40 109 0.015988706 ubox
41 47 0.409069602 ubox
41 59 0.114121343 ubox
41 77 0.011075636 ubox
41 86 0.189290675 ubox
41 96 0.676129951 ubox
41 101 0.372030121 ubox
42 50 0.177998598 ubox
42 58 0.114071641 ubox
42 76 0.011102411 ubox
42 81 0.050491598 ubox
42 89 0.119394626 ubox
42 93 0.123436776 ubox
42 94 0.083949661 ubox
42 95 0.677922709 ubox
42 105 0.023096447 ubox
43 49 0.178561977 ubox
43 55 0.005848589 ubox
43 80 0.050299202 ubox
43 88 0.119624585 ubox
43 92 0.124863930 ubox
43 93 0.090669918 ubox
43 94 0.676149279 ubox
43 97 0.523744066 ubox
43 104 0.023079691 ubox
44 54 0.006188579 ubox
44 56 0.113823051 ubox
44 74 0.010199833 ubox
44 77 0.047711947 ubox
44 96 0.527266801 ubox
45 55 0.113759581 ubox
45 73 0.009170665 ubox
45 76 0.047853830 ubox
45 81 0.040963981 ubox
45 89 0.070049749 ubox
45 93 0.322302579 ubox
45 94 0.043368662 ubox
45 95 0.526855101 ubox
45 105 0.005281609 ubox
46 80 0.040868871 ubox
46 81 0.030127455 ubox
46 88 0.069920813 ubox
46 89 0.634527285 ubox
46 92 0.270866762 ubox
46 93 0.056235393 ubox
46 94 0.525400807 ubox
46 95 0.003900652 ubox
46 104 0.005270691 ubox
47 73 0.054136364 ubox
47 80 0.030166391 ubox
47 88 0.658502166 ubox
47 92 0.063017077 ubox
47 93 0.522109639 ubox
47 94 0.004972511 ubox
47 97 0.004680834 ubox
48 72 0.055013426 ubox
48 96 0.003919386 ubox
49 71 0.055153490 ubox
49 86 0.772491300 ubox
50 70 0.055114309 ubox
50 85 0.773710838 ubox
51 96 0.038735774 ubox
52 81 0.710131387 ubox
52 89 0.283069684 ubox
52 93 0.003901190 ubox
52 94 0.019021715 ubox
52 95 0.041103547 ubox
52 105 0.003364966 ubox
53 80 0.710037584 ubox
53 81 0.509787460 ubox
53 88 0.280844157 ubox
53 89 0.214910306 ubox
53 92 0.005256415 ubox
53 93 0.029184774 ubox
53 94 0.043316343 ubox
53 95 0.025012114 ubox
53 104 0.004898537 ubox
53 105 0.071725833 ubox
53 110 0.003999002 ubox
53 111 0.026459990 ubox
54 66 0.053838288 ubox
54 69 0.009005858 ubox
54 80 0.509527187 ubox
54 88 0.215856411 ubox
54 92 0.029445977 ubox
54 93 0.043013296 ubox
54 94 0.025102793 ubox
54 97 0.013122778 ubox
54 104 0.071806071 ubox
54 110 0.026863026 ubox
55 65 0.053440207 ubox
55 68 0.008984426 ubox
55 74 0.073428810 ubox
55 77 0.980120228 ubox
55 96 0.011865994 ubox
56 73 0.073503914 ubox
56 76 0.980708424 ubox
56 95 0.011862857 ubox
57 72 0.073292864 ubox
58 70 0.048476236 ubox
58 71 0.055216308 ubox
58 74 0.987419567 ubox
58 77 0.007887850 ubox
59 69 0.068248635 ubox
59 73 0.988838310 ubox
59 76 0.007823589 ubox
60 72 0.988159082 ubox
61 71 0.985925755 ubox
62 72 0.018646430 ubox
63 71 0.026232610 ubox
64 96 0.003819208 ubox
65 95 0.003872209 ubox
65 97 0.004154173 ubox
66 96 0.003299524 ubox
67 96 0.052463891 ubox
68 95 0.053957652 ubox
68 97 0.063226033 ubox
69 77 0.009973449 ubox
69 96 0.064073085 ubox
70 76 0.009969595 ubox
70 81 0.076715580 ubox
70 89 0.018443218 ubox
70 93 0.053732393 ubox
70 94 0.006534037 ubox
70 95 0.064111923 ubox
70 105 0.009366786 ubox
70 111 0.008902726 ubox
71 80 0.076999076 ubox
71 88 0.018525265 ubox
71 92 0.053736865 ubox
71 93 0.006855236 ubox
71 94 0.064060038 ubox
71 104 0.009396672 ubox
71 110 0.009075544 ubox
72 78 0.006102673 ubox
72 79 0.076317916 ubox
72 87 0.018557729 ubox
72 91 0.053370099 ubox
72 92 0.007080394 ubox
72 93 0.063220299 ubox
72 103 0.008886646 ubox
72 109 0.008997382 ubox
73 77 0.008425332 ubox
73 86 0.018450273 ubox
73 101 0.004033639 ubox
77 97 0.007443398 ubox
78 96 0.007213576 ubox
80 86 0.349979652 ubox
81 85 0.344731328 ubox
84 96 0.235620211 ubox
85 93 0.284089720 ubox
85 94 0.143680854 ubox
85 95 0.241442689 ubox
85 105 0.017320395 ubox
85 111 0.010279012 ubox
86 92 0.288877957 ubox
86 93 0.146082856 ubox
86 94 0.240674453 ubox
86 97 0.033442763 ubox
86 104 0.017377587 ubox
86 110 0.010384794 ubox
87 96 0.033357493 ubox
95 101 0.065708970 ubox
96 100 0.059309631 ubox
96 102 0.035922396 ubox
97 101 0.044430106 ubox
1 31 0.9500000 lbox
2 30 0.9500000 lbox
3 29 0.9500000 lbox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
33 105 0.9500000 lbox
34 104 0.9500000 lbox
36 101 0.9500000 lbox
37 100 0.9500000 lbox
38 99 0.9500000 lbox
40 97 0.9500000 lbox
41 96 0.9500000 lbox
42 95 0.9500000 lbox
43 94 0.9500000 lbox
46 89 0.9500000 lbox
47 88 0.9500000 lbox
49 86 0.9500000 lbox
50 85 0.9500000 lbox
52 81 0.9500000 lbox
53 80 0.9500000 lbox
55 77 0.9500000 lbox
56 76 0.9500000 lbox
58 74 0.9500000 lbox
59 73 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
showpage
end
%%EOF
