%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNNC2)
} def

/sequence { (\
UCAUCUUUGGGUGGUGGAGUGCAAAGGAGGCGACCUGCAACAGAGGAGUCCCGGUCACCAGCAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.167350112 ubox
1 11 0.018955692 ubox
1 14 0.144067879 ubox
1 17 0.100460502 ubox
1 18 0.015197886 ubox
1 28 0.020419438 ubox
1 30 0.007910501 ubox
1 47 0.003965162 ubox
2 9 0.352763836 ubox
2 10 0.027320964 ubox
2 13 0.247189866 ubox
2 16 0.128143954 ubox
2 17 0.012554996 ubox
2 21 0.005076591 ubox
2 27 0.021211258 ubox
2 29 0.014563940 ubox
2 46 0.004137890 ubox
3 8 0.341597275 ubox
3 12 0.254817881 ubox
3 15 0.128643939 ubox
3 20 0.005041256 ubox
4 10 0.011934105 ubox
4 11 0.257093033 ubox
4 14 0.128106236 ubox
4 18 0.005885377 ubox
4 27 0.062595845 ubox
4 28 0.030394708 ubox
4 46 0.010190156 ubox
4 47 0.010025125 ubox
5 9 0.027031230 ubox
5 10 0.259469057 ubox
5 11 0.019350826 ubox
5 13 0.128020102 ubox
5 14 0.013703511 ubox
5 17 0.006336889 ubox
5 19 0.006709088 ubox
5 26 0.097921027 ubox
5 27 0.031122170 ubox
5 45 0.016391546 ubox
5 46 0.010613912 ubox
5 61 0.007540517 ubox
6 10 0.017805987 ubox
6 13 0.013607303 ubox
6 16 0.006205481 ubox
6 18 0.006870689 ubox
6 25 0.098649628 ubox
6 26 0.029516499 ubox
6 44 0.016578993 ubox
6 45 0.010481786 ubox
6 60 0.006842548 ubox
6 61 0.003524652 ubox
6 64 0.026860755 ubox
7 17 0.006856369 ubox
7 24 0.098925482 ubox
7 25 0.028059402 ubox
7 26 0.003751124 ubox
7 43 0.016596085 ubox
7 44 0.010379576 ubox
7 54 0.003914379 ubox
7 61 0.014328473 ubox
7 63 0.025183832 ubox
7 64 0.321215821 ubox
8 16 0.006650786 ubox
8 23 0.099254565 ubox
8 24 0.026506179 ubox
8 25 0.004656889 ubox
8 42 0.016603528 ubox
8 43 0.010195191 ubox
8 53 0.005438744 ubox
8 57 0.003332909 ubox
8 60 0.017222314 ubox
8 63 0.376875657 ubox
9 15 0.006040539 ubox
9 22 0.099447202 ubox
9 41 0.016555669 ubox
9 52 0.007476610 ubox
9 56 0.003721531 ubox
9 59 0.015252265 ubox
9 62 0.385242032 ubox
9 66 0.546832791 ubox
10 35 0.003861680 ubox
10 51 0.007481240 ubox
10 55 0.003709798 ubox
10 58 0.012220688 ubox
10 59 0.057019455 ubox
10 65 0.553649226 ubox
10 66 0.581862278 ubox
11 20 0.084794177 ubox
11 22 0.026033883 ubox
11 34 0.003869351 ubox
11 38 0.004519710 ubox
11 41 0.009960688 ubox
11 50 0.007462753 ubox
11 58 0.057854167 ubox
11 62 0.166369196 ubox
11 65 0.591639633 ubox
12 19 0.055145141 ubox
12 21 0.026214321 ubox
12 23 0.007956695 ubox
12 33 0.003858994 ubox
12 37 0.004429635 ubox
12 39 0.005595934 ubox
12 40 0.009324937 ubox
12 48 0.003174064 ubox
12 53 0.003737429 ubox
12 57 0.058527158 ubox
12 60 0.452351502 ubox
12 61 0.097970395 ubox
12 63 0.620413930 ubox
12 64 0.437972138 ubox
13 20 0.022905478 ubox
13 22 0.008276950 ubox
13 35 0.003742640 ubox
13 38 0.005026054 ubox
13 52 0.003785436 ubox
13 56 0.058478176 ubox
13 59 0.485534925 ubox
13 62 0.787936701 ubox
13 66 0.050072971 ubox
14 22 0.017815135 ubox
14 31 0.003883020 ubox
14 34 0.003763082 ubox
14 38 0.020182309 ubox
14 51 0.003726038 ubox
14 55 0.044431369 ubox
14 58 0.486651394 ubox
14 62 0.238554032 ubox
14 65 0.070472525 ubox
15 21 0.017603054 ubox
15 23 0.031527424 ubox
15 30 0.003844682 ubox
15 33 0.003707318 ubox
15 37 0.020359929 ubox
15 39 0.003627050 ubox
15 42 0.003717641 ubox
15 53 0.023696852 ubox
15 54 0.011321547 ubox
15 57 0.485901826 ubox
15 60 0.799436305 ubox
15 61 0.228315902 ubox
15 63 0.084081558 ubox
15 64 0.060998391 ubox
16 20 0.008228975 ubox
16 22 0.035309392 ubox
16 35 0.004699136 ubox
16 36 0.020364237 ubox
16 38 0.004199531 ubox
16 41 0.003984876 ubox
16 51 0.024994937 ubox
16 52 0.026537231 ubox
16 56 0.477225249 ubox
16 59 0.801905109 ubox
16 62 0.097868531 ubox
16 66 0.052536897 ubox
17 34 0.004753264 ubox
17 35 0.020445844 ubox
17 50 0.025204190 ubox
17 51 0.026321806 ubox
17 55 0.420285250 ubox
17 56 0.095922967 ubox
17 58 0.735659875 ubox
17 65 0.053240806 ubox
18 36 0.004409284 ubox
18 49 0.024564624 ubox
18 55 0.132568430 ubox
19 31 0.008390824 ubox
19 34 0.018535705 ubox
19 35 0.004213775 ubox
19 41 0.040391872 ubox
19 49 0.003592840 ubox
19 55 0.016058976 ubox
19 58 0.430123541 ubox
19 62 0.020212749 ubox
19 65 0.045571147 ubox
20 30 0.008345373 ubox
20 32 0.020254623 ubox
20 33 0.015100774 ubox
20 39 0.049666496 ubox
20 40 0.029795347 ubox
20 42 0.004119355 ubox
20 53 0.123441023 ubox
20 54 0.014945088 ubox
20 57 0.669600407 ubox
20 60 0.012702726 ubox
20 61 0.019493967 ubox
20 63 0.089207783 ubox
20 64 0.032661565 ubox
21 31 0.041009173 ubox
21 38 0.059721957 ubox
21 41 0.004407896 ubox
21 52 0.065862898 ubox
21 55 0.441411786 ubox
21 56 0.697504062 ubox
21 59 0.013483432 ubox
21 62 0.100769034 ubox
22 30 0.041020241 ubox
22 37 0.059660427 ubox
22 54 0.537391810 ubox
22 61 0.100695407 ubox
23 36 0.041053581 ubox
25 36 0.042389020 ubox
26 35 0.060212038 ubox
26 51 0.078293300 ubox
26 52 0.977418814 ubox
26 56 0.024115757 ubox
26 59 0.059024945 ubox
26 66 0.015756782 ubox
27 34 0.060084717 ubox
27 50 0.077674467 ubox
27 51 0.978659492 ubox
27 55 0.022807373 ubox
27 56 0.039636614 ubox
27 58 0.058837835 ubox
27 65 0.016063403 ubox
28 36 0.007902478 ubox
28 49 0.070070825 ubox
28 55 0.038112962 ubox
29 35 0.010160349 ubox
29 50 0.978706326 ubox
29 51 0.021927819 ubox
29 52 0.091256121 ubox
29 56 0.054409162 ubox
29 59 0.125751124 ubox
30 34 0.010001314 ubox
30 38 0.010460624 ubox
30 49 0.979593471 ubox
30 50 0.022496861 ubox
30 51 0.091421292 ubox
30 55 0.054662100 ubox
30 58 0.126089688 ubox
30 62 0.015392374 ubox
31 37 0.010465832 ubox
31 48 0.980323994 ubox
31 53 0.006544370 ubox
31 54 0.054348369 ubox
31 61 0.015392357 ubox
32 36 0.006459067 ubox
32 50 0.107400394 ubox
32 52 0.006634049 ubox
32 56 0.131717275 ubox
33 49 0.107171808 ubox
33 55 0.131819625 ubox
34 46 0.973800293 ubox
34 48 0.103592291 ubox
34 54 0.130909170 ubox
35 43 0.125172236 ubox
35 45 0.975150346 ubox
35 46 0.102114425 ubox
35 48 0.005736380 ubox
35 53 0.129729740 ubox
35 54 0.016656095 ubox
36 42 0.130037853 ubox
36 44 0.970836669 ubox
36 45 0.101678466 ubox
36 47 0.007720796 ubox
36 53 0.022907355 ubox
37 41 0.132708565 ubox
37 49 0.044316394 ubox
37 52 0.095703694 ubox
38 48 0.044593897 ubox
40 49 0.110535612 ubox
40 55 0.009804758 ubox
41 48 0.111678446 ubox
41 54 0.010831551 ubox
43 50 0.020658120 ubox
43 56 0.012612758 ubox
44 49 0.020181866 ubox
44 55 0.012116735 ubox
45 51 0.016322501 ubox
45 52 0.063642479 ubox
46 50 0.016149258 ubox
46 51 0.063513646 ubox
46 56 0.005960682 ubox
47 55 0.005932940 ubox
48 62 0.004480944 ubox
49 61 0.004447800 ubox
53 59 0.043324909 ubox
53 66 0.043497341 ubox
54 58 0.042672332 ubox
54 62 0.008195341 ubox
54 65 0.043817468 ubox
55 61 0.008028489 ubox
55 64 0.043303536 ubox
7 64 0.9500000 lbox
8 63 0.9500000 lbox
9 62 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
29 50 0.9500000 lbox
30 49 0.9500000 lbox
31 48 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
showpage
end
%%EOF
