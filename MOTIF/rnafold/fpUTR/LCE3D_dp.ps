%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LCE3D)
} def

/sequence { (\
CUCAGGAACAGCCUUCUCCUGCCUCCUCUGCACCUGGACAACUCAACUCCUGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 37 0.037604845 ubox
1 57 0.160781321 ubox
2 36 0.006703491 ubox
2 37 0.115194508 ubox
2 38 0.012719062 ubox
2 56 0.164315925 ubox
3 21 0.357449577 ubox
3 30 0.029236798 ubox
3 36 0.145826215 ubox
3 37 0.010121285 ubox
3 52 0.882974998 ubox
4 14 0.033895778 ubox
4 15 0.005777392 ubox
4 17 0.013543894 ubox
4 20 0.362201604 ubox
4 24 0.033089003 ubox
4 27 0.191986887 ubox
4 29 0.027335953 ubox
4 35 0.146847535 ubox
4 51 0.892944761 ubox
5 13 0.036454410 ubox
5 14 0.006749981 ubox
5 16 0.014755423 ubox
5 17 0.014758188 ubox
5 18 0.004126504 ubox
5 19 0.362983315 ubox
5 23 0.035661378 ubox
5 24 0.003664423 ubox
5 25 0.004767534 ubox
5 26 0.206043460 ubox
5 28 0.024742211 ubox
5 29 0.007031769 ubox
5 34 0.147108275 ubox
5 50 0.894190061 ubox
5 54 0.014762838 ubox
6 12 0.036399759 ubox
6 13 0.006964277 ubox
6 15 0.014749180 ubox
6 16 0.018472651 ubox
6 18 0.362856011 ubox
6 22 0.035499310 ubox
6 23 0.004076601 ubox
6 24 0.004541115 ubox
6 25 0.206239482 ubox
6 26 0.007229408 ubox
6 27 0.020808926 ubox
6 28 0.007914137 ubox
6 33 0.146984822 ubox
6 49 0.894111068 ubox
6 53 0.014705973 ubox
7 14 0.015301389 ubox
7 15 0.021610072 ubox
7 17 0.348998127 ubox
7 24 0.203237420 ubox
7 27 0.008160888 ubox
7 48 0.873332410 ubox
8 14 0.030282443 ubox
9 21 0.199973584 ubox
9 30 0.142546317 ubox
9 36 0.012514005 ubox
9 52 0.013872463 ubox
10 17 0.033812547 ubox
10 20 0.200622577 ubox
10 24 0.011235090 ubox
10 27 0.003942497 ubox
10 29 0.142342052 ubox
10 35 0.012543874 ubox
10 43 0.231151870 ubox
10 48 0.020923613 ubox
10 51 0.014001998 ubox
11 16 0.048192819 ubox
11 19 0.199527427 ubox
11 22 0.163918239 ubox
11 23 0.010633973 ubox
11 26 0.004495664 ubox
11 28 0.136913726 ubox
11 31 0.011772181 ubox
11 34 0.012424477 ubox
11 42 0.237289648 ubox
11 47 0.033593762 ubox
11 50 0.013927307 ubox
12 21 0.165099652 ubox
12 30 0.011769642 ubox
12 37 0.027899024 ubox
13 36 0.027910206 ubox
13 37 0.006854891 ubox
14 36 0.006772622 ubox
14 38 0.103835736 ubox
14 41 0.466080455 ubox
14 46 0.006883505 ubox
15 37 0.108646740 ubox
15 38 0.151914364 ubox
15 40 0.469217258 ubox
15 45 0.007006415 ubox
16 36 0.109718210 ubox
16 37 0.155199951 ubox
17 36 0.144336214 ubox
17 37 0.024777277 ubox
17 38 0.842303838 ubox
18 36 0.047304572 ubox
18 37 0.858151345 ubox
19 36 0.857654410 ubox
19 37 0.007651899 ubox
20 30 0.003410843 ubox
20 32 0.835467625 ubox
20 36 0.006341407 ubox
20 40 0.024858729 ubox
20 45 0.006507261 ubox
21 31 0.848585858 ubox
21 35 0.009001278 ubox
21 39 0.026964096 ubox
21 44 0.007074362 ubox
22 30 0.847273921 ubox
22 37 0.050359501 ubox
22 52 0.003366958 ubox
23 36 0.050561132 ubox
23 37 0.004957060 ubox
23 57 0.019700749 ubox
24 36 0.004533310 ubox
24 38 0.180956238 ubox
24 56 0.019509152 ubox
25 36 0.003302191 ubox
25 37 0.195484343 ubox
26 36 0.195503761 ubox
26 37 0.011762094 ubox
26 57 0.198823097 ubox
27 36 0.010725635 ubox
27 37 0.010742637 ubox
27 38 0.044127346 ubox
27 56 0.201894020 ubox
28 36 0.014895631 ubox
28 37 0.048402969 ubox
28 57 0.065953821 ubox
29 36 0.046922215 ubox
29 40 0.012853100 ubox
29 45 0.003292740 ubox
29 55 0.078330351 ubox
29 56 0.062733601 ubox
30 35 0.025160625 ubox
30 39 0.013875873 ubox
30 44 0.003523597 ubox
30 53 0.327974807 ubox
30 54 0.062908588 ubox
31 52 0.333535758 ubox
32 51 0.328248126 ubox
34 57 0.051682721 ubox
35 45 0.055104697 ubox
35 52 0.006110548 ubox
35 55 0.173154678 ubox
35 56 0.037615809 ubox
36 43 0.013948923 ubox
36 44 0.057814529 ubox
36 48 0.027992225 ubox
36 49 0.025694035 ubox
36 50 0.333861512 ubox
36 51 0.007470479 ubox
36 54 0.190287072 ubox
37 42 0.023080579 ubox
37 43 0.048908068 ubox
37 44 0.060925696 ubox
37 47 0.030087216 ubox
37 48 0.021140935 ubox
37 49 0.334146237 ubox
37 50 0.009303718 ubox
37 53 0.190344513 ubox
38 43 0.055258524 ubox
38 48 0.315561072 ubox
39 52 0.181671591 ubox
40 51 0.171608550 ubox
42 57 0.011203552 ubox
43 56 0.011040405 ubox
44 52 0.029526557 ubox
45 51 0.028418053 ubox
47 57 0.015493017 ubox
48 56 0.015261968 ubox
50 57 0.051297789 ubox
51 56 0.052157601 ubox
3 52 0.9500000 lbox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
showpage
end
%%EOF
