%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GOLGA7B)
} def

/sequence { (\
CCGGGGUCAGCACCGCGGAGACCCCCCUCGCCCGGCCCCGCGACAGCCUCCGAGCGCCCCCGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.032726060 ubox
1 63 0.987498460 ubox
2 17 0.033776628 ubox
2 30 0.004054840 ubox
2 40 0.044967752 ubox
2 42 0.003579888 ubox
2 62 0.991931672 ubox
3 16 0.033795111 ubox
3 25 0.107131418 ubox
3 26 0.010170813 ubox
3 27 0.004103423 ubox
3 39 0.056396707 ubox
3 41 0.003383873 ubox
3 60 0.060211634 ubox
3 61 0.990090113 ubox
4 24 0.107797452 ubox
4 25 0.009059726 ubox
4 26 0.003974795 ubox
4 38 0.056424025 ubox
4 59 0.084229395 ubox
4 60 0.988305796 ubox
4 61 0.005938628 ubox
5 14 0.034238742 ubox
5 23 0.108206876 ubox
5 24 0.007732776 ubox
5 25 0.003843686 ubox
5 37 0.056426323 ubox
5 58 0.102760544 ubox
5 59 0.986478435 ubox
5 60 0.008187960 ubox
6 13 0.034524707 ubox
6 16 0.003975029 ubox
6 22 0.108613115 ubox
6 23 0.006087701 ubox
6 24 0.003712734 ubox
6 36 0.056407828 ubox
6 44 0.018799454 ubox
6 57 0.118333522 ubox
6 58 0.983154509 ubox
6 59 0.009927963 ubox
7 12 0.031737067 ubox
7 15 0.004225106 ubox
7 18 0.009295296 ubox
7 19 0.030774618 ubox
7 21 0.108757481 ubox
7 35 0.053788076 ubox
7 43 0.021874892 ubox
7 53 0.022580105 ubox
7 56 0.125659707 ubox
8 17 0.027051391 ubox
8 18 0.033408175 ubox
8 20 0.108371018 ubox
8 34 0.052922413 ubox
8 42 0.022298060 ubox
8 52 0.022876961 ubox
9 28 0.003417870 ubox
9 49 0.011432450 ubox
10 16 0.147032703 ubox
10 27 0.003623464 ubox
10 31 0.031843830 ubox
10 36 0.031145868 ubox
10 41 0.025854256 ubox
10 47 0.024783857 ubox
10 48 0.009465723 ubox
10 55 0.652625748 ubox
10 57 0.718579728 ubox
11 15 0.146141063 ubox
11 30 0.031597598 ubox
11 35 0.030826541 ubox
11 40 0.025829712 ubox
11 46 0.025979765 ubox
11 54 0.649224780 ubox
11 56 0.717666140 ubox
13 35 0.160614712 ubox
14 30 0.030608876 ubox
14 34 0.161683719 ubox
14 42 0.100369754 ubox
14 52 0.039286380 ubox
14 56 0.075898407 ubox
15 29 0.038107690 ubox
15 31 0.157017065 ubox
15 33 0.159657603 ubox
15 36 0.009046464 ubox
15 41 0.101634436 ubox
15 47 0.005916221 ubox
15 51 0.022550809 ubox
15 55 0.099733528 ubox
15 57 0.032221922 ubox
16 30 0.157540381 ubox
16 34 0.012524742 ubox
16 35 0.007184166 ubox
16 40 0.101644849 ubox
16 46 0.005950864 ubox
16 52 0.936535275 ubox
16 54 0.091213983 ubox
16 56 0.032013945 ubox
17 23 0.019860064 ubox
17 24 0.058817270 ubox
17 25 0.053055235 ubox
17 26 0.066715247 ubox
17 27 0.061908805 ubox
17 28 0.011649818 ubox
17 29 0.122428487 ubox
17 32 0.154592707 ubox
17 33 0.014910362 ubox
17 38 0.004831113 ubox
17 39 0.101503864 ubox
17 48 0.009278833 ubox
17 49 0.003853933 ubox
17 50 0.009152468 ubox
17 51 0.945668492 ubox
17 55 0.018600349 ubox
18 22 0.019614031 ubox
18 23 0.058843986 ubox
18 24 0.053143261 ubox
18 25 0.066978628 ubox
18 26 0.061832746 ubox
18 27 0.036307849 ubox
18 28 0.060038251 ubox
18 29 0.161207390 ubox
18 31 0.153676809 ubox
18 32 0.014622051 ubox
18 37 0.006678326 ubox
18 38 0.100589451 ubox
18 47 0.009172734 ubox
18 48 0.003546537 ubox
18 49 0.003426521 ubox
18 50 0.945855607 ubox
19 28 0.190894260 ubox
19 49 0.945509929 ubox
20 27 0.196947228 ubox
20 29 0.152696013 ubox
20 48 0.941849885 ubox
20 50 0.008332683 ubox
20 66 0.017714007 ubox
21 28 0.143853344 ubox
21 49 0.008533748 ubox
21 65 0.017725347 ubox
22 35 0.080257697 ubox
22 63 0.019018392 ubox
23 34 0.080269939 ubox
23 35 0.057257662 ubox
23 62 0.019024845 ubox
23 63 0.017587766 ubox
24 34 0.057331401 ubox
24 35 0.093365881 ubox
24 62 0.017590906 ubox
24 63 0.008748469 ubox
25 34 0.094110946 ubox
25 35 0.055623154 ubox
25 62 0.008769271 ubox
25 63 0.006866789 ubox
26 34 0.055871873 ubox
26 35 0.110988815 ubox
26 62 0.007435944 ubox
26 63 0.027817772 ubox
27 34 0.112021200 ubox
27 35 0.012784333 ubox
27 46 0.082159708 ubox
27 54 0.024458099 ubox
27 62 0.027838860 ubox
27 63 0.009782698 ubox
28 34 0.011570152 ubox
28 35 0.015799847 ubox
28 43 0.904180729 ubox
28 45 0.050166427 ubox
28 53 0.027086342 ubox
28 62 0.009679982 ubox
29 34 0.021557926 ubox
29 40 0.021736409 ubox
29 42 0.926190443 ubox
29 52 0.027342394 ubox
29 56 0.117828749 ubox
29 62 0.003600376 ubox
30 36 0.056704411 ubox
30 39 0.022896309 ubox
30 41 0.926511356 ubox
30 47 0.080194456 ubox
30 51 0.027123375 ubox
30 55 0.170833074 ubox
30 57 0.011980978 ubox
30 61 0.003578347 ubox
31 35 0.056422201 ubox
31 40 0.924502330 ubox
31 46 0.080186134 ubox
31 54 0.170967154 ubox
31 56 0.011998022 ubox
31 63 0.007860935 ubox
32 62 0.007030619 ubox
32 63 0.091294951 ubox
33 40 0.056624612 ubox
33 42 0.070154313 ubox
33 52 0.224271221 ubox
33 62 0.091587630 ubox
34 39 0.134118225 ubox
34 41 0.069662357 ubox
34 48 0.059096031 ubox
34 51 0.225368312 ubox
34 58 0.007453472 ubox
34 60 0.005344869 ubox
34 61 0.091594788 ubox
35 41 0.044168714 ubox
35 47 0.059817240 ubox
35 48 0.003523323 ubox
35 50 0.225017724 ubox
35 55 0.008906866 ubox
35 57 0.008183091 ubox
35 59 0.005924941 ubox
35 60 0.091418669 ubox
36 40 0.044833137 ubox
36 46 0.059815568 ubox
36 54 0.009257861 ubox
36 56 0.008227626 ubox
39 52 0.067222422 ubox
39 56 0.099740489 ubox
40 47 0.312096574 ubox
40 51 0.067114611 ubox
40 55 0.102637770 ubox
40 57 0.031368374 ubox
41 46 0.312609963 ubox
41 52 0.039804512 ubox
41 54 0.102416406 ubox
41 56 0.031424490 ubox
41 62 0.003935739 ubox
42 50 0.071001357 ubox
42 51 0.042746743 ubox
42 55 0.030047987 ubox
42 61 0.003958791 ubox
42 66 0.005192503 ubox
43 49 0.067808761 ubox
43 65 0.005225106 ubox
46 55 0.085951436 ubox
46 57 0.050242348 ubox
47 54 0.085674520 ubox
47 56 0.050352189 ubox
48 54 0.040797892 ubox
49 53 0.037583644 ubox
49 64 0.060617529 ubox
50 63 0.064771822 ubox
51 62 0.064790511 ubox
52 61 0.064662849 ubox
57 63 0.016861750 ubox
58 62 0.016794536 ubox
1 63 0.9500000 lbox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
10 57 0.9500000 lbox
11 56 0.9500000 lbox
16 52 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
showpage
end
%%EOF
