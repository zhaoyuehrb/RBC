%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUCUGUCUCUGCUUGUUCUGCAGCCCGCUGAACUACAUUUCCCAGGAGGCGUCGGGGCUGCGCCGUACAACUUCCGGCUGUAAAGAUGGCGGCUUCCUAGUGAGUCGGCGGCUGAUUUAGAAGGAGGUUCAGGCUACGGUGAGCCGAAGGGGAGGAUUCUGGCUUCCCCUGUCCGUGUUCCAUCUAGCCACACAGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[86.45365906 262.64910889]
[92.50000000 246.80996704]
[92.50000000 231.80996704]
[92.50000000 216.80996704]
[92.50000000 201.80996704]
[92.50000000 186.80996704]
[92.50000000 171.80996704]
[92.50000000 156.80996704]
[92.50000000 141.80996704]
[80.08671570 137.52046204]
[69.57710266 129.64407349]
[61.97584915 118.93377686]
[58.00962448 106.41345215]
[58.05759048 93.28001404]
[62.11516190 80.78899384]
[50.14490128 71.74947357]
[38.17464447 62.70995331]
[22.49910355 60.56798935]
[17.00528717 46.72359467]
[5.03502846 37.68407440]
[-6.93522978 28.64455605]
[-18.90548897 19.60503769]
[-30.87574577 10.56551743]
[-43.05160522 1.80489707]
[-55.42656708 -6.67214918]
[-67.80152893 -15.14919567]
[-80.17649078 -23.62624168]
[-92.55145264 -32.10328674]
[-101.40522003 -34.37332153]
[-105.05033875 -40.80737686]
[-117.29328918 -49.47398376]
[-129.53623962 -58.14059067]
[-141.77920532 -66.80719757]
[-154.02215576 -75.47380829]
[-162.83990479 -77.87991333]
[-166.38551331 -84.36933899]
[-178.49356079 -93.22344971]
[-187.27322388 -95.76506042]
[-190.71847534 -102.30831909]
[-202.68873596 -111.34783936]
[-214.65898132 -120.38735962]
[-226.62924194 -129.42687988]
[-230.96739197 -129.80680847]
[-234.59228516 -131.39091492]
[-237.21243286 -133.80613708]
[-238.68782043 -136.62295532]
[-239.03521729 -139.40991211]
[-250.42628479 -149.16918945]
[-261.81735229 -158.92846680]
[-273.20843506 -168.68774414]
[-284.59951782 -178.44702148]
[-295.99057007 -188.20628357]
[-307.38165283 -197.96556091]
[-318.84753418 -207.63684082]
[-330.38754272 -217.21954346]
[-341.92755127 -226.80224609]
[-353.46755981 -236.38494873]
[-367.84872437 -231.17634583]
[-382.80734253 -233.84777832]
[-394.34368896 -243.58322144]
[-399.42413330 -257.69155884]
[-396.77844238 -272.34985352]
[-408.31845093 -281.93255615]
[-419.85848999 -291.51525879]
[-431.47192383 -301.00881958]
[-443.15814209 -310.41268921]
[-454.84436035 -319.81652832]
[-466.53054810 -329.22039795]
[-481.13217163 -324.24075317]
[-496.10250854 -327.96801758]
[-506.66458130 -339.21282959]
[-509.44812012 -354.38699341]
[-503.56484985 -368.64852905]
[-490.89215088 -377.44656372]
[-475.47378540 -377.97375488]
[-462.22973633 -370.06182861]
[-455.38610840 -356.23544312]
[-457.12670898 -340.90658569]
[-445.44049072 -331.50274658]
[-433.75427246 -322.09887695]
[-422.06808472 -312.69503784]
[-414.88211060 -310.94982910]
[-410.27578735 -303.05526733]
[-398.73577881 -293.47256470]
[-387.19573975 -283.88986206]
[-373.27316284 -289.18395996]
[-358.47152710 -286.78240967]
[-346.78207397 -277.23138428]
[-341.40747070 -263.01834106]
[-343.88485718 -247.92495728]
[-332.34484863 -238.34225464]
[-320.80484009 -228.75955200]
[-309.26483154 -219.17684937]
[-302.10659790 -217.32119751]
[-297.62237549 -209.35664368]
[-286.23129272 -199.59736633]
[-274.84024048 -189.83808899]
[-263.44915771 -180.07881165]
[-252.05809021 -170.31953430]
[-240.66700745 -160.56027222]
[-229.27593994 -150.80099487]
[-217.58972168 -141.39714050]
[-205.61947632 -132.35762024]
[-193.64921570 -123.31809235]
[-181.67895508 -114.27857971]
[-169.63945007 -105.33149719]
[-157.53140259 -96.47737885]
[-145.35554504 -87.71675873]
[-133.11259460 -79.05015564]
[-120.86963654 -70.38354492]
[-108.62668610 -61.71693802]
[-96.38372803 -53.05033112]
[-84.07440948 -44.47824860]
[-71.69944763 -36.00120544]
[-59.32448196 -27.52415657]
[-46.94952011 -19.04711151]
[-34.57455826 -10.57006550]
[-31.05509758 -10.85788536]
[-27.22150803 -9.45181942]
[-23.87304115 -6.22291279]
[-21.83622742 -1.40474117]
[-9.86596870 7.63477850]
[2.10428977 16.67429733]
[14.07454777 25.71381760]
[26.04480743 34.75333786]
[40.86415482 36.24873352]
[47.21416473 50.73969269]
[59.18442154 59.77921295]
[71.15467834 68.81873322]
[85.99590302 59.89751434]
[103.16439056 57.64069748]
[119.80700684 62.42332458]
[133.15800476 73.45059967]
[140.99867249 88.88996887]
[142.02600098 106.17564392]
[156.24841309 110.94252014]
[170.47082520 115.70938873]
[184.69323730 120.47625732]
[198.91564941 125.24313354]
[208.05264282 125.00355530]
[213.31938171 130.19445801]
[227.46669006 135.17979431]
[241.61401367 140.16511536]
[255.76132202 145.15043640]
[269.94662476 150.02667236]
[284.16903687 154.79354858]
[298.39141846 159.56040955]
[312.65011597 164.21763611]
[326.94424438 168.76492310]
[346.41632080 163.56352234]
[358.81875610 178.39396667]
[373.24612427 182.49890137]
[387.67352295 186.60385132]
[402.10089111 190.70880127]
[416.52828979 194.81373596]
[430.95565796 198.91868591]
[445.38305664 203.02363586]
[459.81045532 207.12857056]
[472.65426636 198.20834351]
[488.22219849 199.68237305]
[499.16360474 210.85466003]
[500.31222534 226.44999695]
[491.12576294 239.10475159]
[475.94174194 242.84371948]
[461.92962646 235.90148926]
[455.70550537 221.55595398]
[441.27810669 217.45101929]
[426.85073853 213.34606934]
[412.42333984 209.24111938]
[397.99597168 205.13618469]
[383.56857300 201.03123474]
[369.14117432 196.92628479]
[354.71380615 192.82135010]
[346.26416016 198.57946777]
[335.82061768 198.73643494]
[326.83129883 192.99879456]
[322.39697266 183.05905151]
[308.10284424 178.51176453]
[300.77166748 179.48028564]
[293.62457275 173.78282166]
[279.40216064 169.01596069]
[265.17974854 164.24908447]
[257.83453369 165.10458374]
[250.77600098 159.29774475]
[236.62869263 154.31242371]
[222.48136902 149.32710266]
[208.33406067 144.34178162]
[194.14877319 139.46554565]
[179.92636108 134.69866943]
[165.70394897 129.93179321]
[151.48155212 125.16492462]
[137.25914001 120.39805603]
[129.64407349 130.42289734]
[119.42516327 137.77548218]
[107.50000000 141.80996704]
[107.50000000 156.80996704]
[107.50000000 171.80996704]
[107.50000000 186.80996704]
[107.50000000 201.80996704]
[107.50000000 216.80996704]
[107.50000000 231.80996704]
[107.50000000 246.80996704]
[113.54634094 262.64910889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[15 129]
[16 128]
[17 127]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 117]
[25 116]
[26 115]
[27 114]
[28 113]
[30 112]
[31 111]
[32 110]
[33 109]
[34 108]
[36 107]
[37 106]
[39 105]
[40 104]
[41 103]
[42 102]
[47 101]
[48 100]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[54 93]
[55 92]
[56 91]
[57 90]
[62 85]
[63 84]
[64 83]
[65 81]
[66 80]
[67 79]
[68 78]
[135 192]
[136 191]
[137 190]
[138 189]
[139 188]
[141 187]
[142 186]
[143 185]
[144 184]
[145 182]
[146 181]
[147 180]
[148 178]
[149 177]
[151 173]
[152 172]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
