%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCCGCACUGCCGGUAUCCGCCGCCAUCCGGACUCCCGGGUCCUCUGUGCAGGUUGGAGGAUGGUUGGUUGUGGCGAGCGAGGCUGAAGGAGCCGGGACGCGGGGCUCUGGGCCUCGGGAACUGAGCCGGUACUCACCUCCGCCCCUUCUCCCCGUCGCUGUCCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[279.49655151 51.49234772]
[260.64434814 42.25260544]
[246.81219482 48.05535126]
[232.98005676 53.85809708]
[219.14791870 59.66084290]
[205.31578064 65.46359253]
[196.57258606 77.52202606]
[180.85368347 75.72572327]
[167.02154541 81.52846527]
[162.05265808 87.03468323]
[152.88690186 87.30861664]
[138.95225525 92.86068726]
[125.01760864 98.41276550]
[111.08295441 103.96483612]
[98.74411774 112.49437714]
[88.62691498 123.56877136]
[78.50971222 134.64317322]
[68.39250946 145.71755981]
[65.39753723 161.84089661]
[49.84870911 167.05300903]
[37.74133301 155.99211121]
[41.53043747 140.03671265]
[57.31811523 135.60035706]
[67.43531799 124.52596283]
[77.55252075 113.45156860]
[87.66972351 102.37717438]
[83.80307007 95.95074463]
[76.06976318 83.09788513]
[72.20310974 76.67146301]
[57.67976379 80.42279053]
[43.15641785 84.17411804]
[28.63307571 87.92544556]
[14.10973072 91.67678070]
[-0.41361332 95.42810822]
[-11.72826481 107.29869080]
[-27.59989929 103.17276764]
[-31.70114136 87.29473877]
[-19.81298256 75.99855804]
[-4.16494322 80.90476227]
[10.35840130 77.15343475]
[24.88174438 73.40210724]
[39.40509033 69.65077209]
[53.92843246 65.89944458]
[68.45177460 62.14811707]
[73.16346741 47.90732956]
[84.54332733 38.13498306]
[99.33260345 35.62951660]
[113.29619598 41.10839081]
[122.43545532 53.00267029]
[124.13324738 67.90628052]
[117.90338135 81.55138397]
[105.53088379 90.03018188]
[119.46553040 84.47811127]
[133.40019226 78.92604065]
[147.33483887 73.37397003]
[161.21879578 67.69632721]
[175.05093384 61.89358139]
[184.78349304 49.42009354]
[199.51303101 51.63144684]
[213.34516907 45.82870102]
[227.17730713 40.02595520]
[241.00946045 34.22320938]
[254.84159851 28.42046356]
[255.76640320 18.68443871]
[260.16525269 10.01474667]
[267.38937378 3.59603620]
[276.40740967 0.28785130]
[285.95248413 0.50967586]
[294.70007324 4.18821955]
[301.45196533 10.77348900]
[315.66674805 5.98396587]
[329.88156128 1.19444287]
[344.09634399 -3.59508014]
[358.31115723 -8.38460255]
[372.52593994 -13.17412567]
[386.74075317 -17.96364975]
[400.95553589 -22.75317192]
[408.02722168 -36.63225174]
[422.51129150 -41.28701401]
[435.69927979 -34.45970535]
[449.91409302 -39.24922562]
[464.12887573 -44.03874969]
[478.34368896 -48.82827377]
[492.55847168 -53.61779785]
[506.72946167 -58.53544617]
[520.85546875 -63.58082581]
[508.74002075 -72.42481995]
[507.91555786 -87.40214539]
[518.98706055 -97.52252197]
[533.83032227 -95.35967255]
[541.55340576 -82.50068665]
[536.48883057 -68.38099670]
[551.01214600 -72.13233185]
[565.53546143 -75.88365936]
[580.05883789 -79.63498688]
[588.11358643 -92.96761322]
[602.89575195 -96.56510162]
[615.55676270 -88.80397034]
[630.08007812 -92.55530548]
[644.60339355 -96.30663300]
[649.62213135 -100.69607544]
[655.25781250 -101.71257019]
[659.71887207 -99.92111206]
[674.36822510 -103.14566803]
[689.01751709 -106.37022400]
[703.66680908 -109.59477997]
[718.31616211 -112.81933594]
[732.96545410 -116.04389191]
[738.30834961 -125.56814575]
[747.82446289 -130.46150208]
[758.24200439 -129.31433105]
[766.12689209 -122.74881744]
[780.88305664 -125.44239807]
[795.63928223 -128.13597107]
[810.39544678 -130.82955933]
[819.39123535 -143.54621887]
[834.39447021 -146.06767273]
[846.46240234 -137.41319275]
[861.21856689 -140.10676575]
[875.97473145 -142.80035400]
[890.73089600 -145.49392700]
[897.32745361 -159.53904724]
[910.93591309 -166.99493408]
[926.32348633 -164.99464417]
[937.57342529 -154.30732727]
[940.35986328 -139.04248047]
[933.61132812 -125.06975555]
[919.92285156 -117.76193237]
[904.55786133 -119.92903137]
[893.42449951 -130.73774719]
[878.66833496 -128.04417419]
[863.91217041 -125.35059357]
[849.15600586 -122.65702057]
[840.92401123 -110.29699707]
[825.99749756 -107.35511780]
[813.08898926 -116.07337952]
[798.33282471 -113.37980652]
[783.57666016 -110.68622589]
[768.82049561 -107.99264526]
[755.07855225 -94.41802979]
[736.19000244 -101.39458466]
[721.54071045 -98.17002869]
[706.89135742 -94.94547272]
[692.24206543 -91.72091675]
[677.59277344 -88.49636078]
[662.94348145 -85.27180481]
[648.35473633 -81.78328705]
[633.83142090 -78.03195953]
[619.30804443 -74.28063202]
[611.98944092 -61.35882950]
[597.31408691 -57.34755707]
[583.81018066 -65.11164093]
[569.28680420 -61.36031342]
[554.76348877 -57.60898590]
[540.24011230 -53.85765457]
[525.90087891 -49.45481491]
[511.77484131 -44.40943909]
[506.51513672 -39.18030930]
[497.34799194 -39.40299988]
[483.13320923 -34.61347580]
[468.91839600 -29.82395363]
[454.70361328 -25.03442955]
[440.48880005 -20.24490738]
[434.12164307 -6.82869291]
[419.77404785 -1.76894033]
[405.74505615 -8.53837395]
[391.53027344 -3.74885130]
[377.31546021 1.04067159]
[363.10067749 5.83019447]
[348.88586426 10.61971760]
[334.67108154 15.40924072]
[320.45626831 20.19876289]
[306.24148560 24.98828697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 63]
[3 62]
[4 61]
[5 60]
[6 59]
[8 57]
[9 56]
[11 55]
[12 54]
[13 53]
[14 52]
[15 26]
[16 25]
[17 24]
[18 23]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[70 173]
[71 172]
[72 171]
[73 170]
[74 169]
[75 168]
[76 167]
[77 166]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
[85 157]
[86 156]
[92 155]
[93 154]
[94 153]
[95 152]
[98 149]
[99 148]
[100 147]
[103 146]
[104 145]
[105 144]
[106 143]
[107 142]
[108 141]
[112 139]
[113 138]
[114 137]
[115 136]
[118 133]
[119 132]
[120 131]
[121 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
