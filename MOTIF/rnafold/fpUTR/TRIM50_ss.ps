%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCAUGAUGGGGCACGCGCGGUAGCGCGAGGCGGGGCAUGUAACCAUAGCGUGCGGGUCAUGAUGAGGCACGGACGUGGGGGGUUAGGUGGGGCACGUAAUUGGAGCUCGCGGGGCAGGAUGGGGCAUCUAACUGGAGCGACAGAGAGCACGAUGGGGCACUUACAGGGGCCGGAGGCUGGCCCGGGCAGUGAGUGUGG\
) } def
/len { sequence length } bind def

/coor [
[90.11709595 141.31617737]
[82.81970215 128.21090698]
[90.52091217 115.33823395]
[83.02182007 115.22159576]
[73.00799561 126.38955688]
[62.99417114 137.55751038]
[52.98035049 148.72547913]
[42.96652985 159.89343262]
[48.00148010 172.94802856]
[46.92413330 186.83200073]
[40.00169754 198.83894348]
[28.63519478 206.65298462]
[15.07624054 208.79542542]
[1.98113084 204.90429688]
[-8.20516205 215.91517639]
[-11.85453892 233.96067810]
[-28.80109596 238.50744629]
[-38.81491852 249.67539978]
[-48.82873917 260.84335327]
[-58.84256363 272.01132202]
[-68.85638428 283.17929077]
[-71.70135498 299.32977295]
[-87.20106506 304.68618774]
[-99.41073608 293.73831177]
[-95.77010345 277.74838257]
[-80.02434540 273.16546631]
[-70.01052094 261.99749756]
[-59.99670029 250.82954407]
[-49.98287964 239.66157532]
[-39.96905899 228.49362183]
[-40.31272888 216.39739990]
[-32.05513000 207.01062012]
[-19.21603966 205.72888184]
[-9.02974701 194.71800232]
[-14.19149971 179.40914917]
[-10.91174030 163.49406433]
[0.00748861 151.33360291]
[15.65777493 146.30844116]
[31.79856682 149.87962341]
[41.81238937 138.71165466]
[51.82621002 127.54369354]
[61.84003448 116.37573242]
[71.85385132 105.20777130]
[69.66398621 102.43968964]
[67.76409912 99.27592468]
[66.21228790 95.74871826]
[52.71224976 89.21045685]
[39.06917191 96.36396027]
[24.00597191 94.13833618]
[13.26865005 83.59443665]
[10.82811832 68.92535400]
[-2.67192173 62.38708878]
[-16.17196083 55.84882355]
[-29.67200089 49.31055832]
[-45.46475983 50.25886917]
[-53.54677200 37.74765778]
[-67.04681396 31.20939255]
[-82.83956909 32.15770340]
[-90.92158508 19.64649200]
[-104.42162323 13.10822582]
[-117.92166138 6.56995964]
[-132.11465454 13.13446808]
[-147.19309998 8.99021912]
[-156.03738403 -3.90599990]
[-154.47154236 -19.46498871]
[-143.23489380 -30.34026718]
[-127.63304138 -31.39686394]
[-115.03271484 -22.13588333]
[-111.38339233 -6.93007994]
[-97.88335419 -0.39181367]
[-84.38331604 6.14645243]
[-69.55616760 4.73048115]
[-60.50854492 17.70935249]
[-47.00850677 24.24761772]
[-32.18135834 22.83164787]
[-23.13373566 35.81051636]
[-9.63369560 42.34878540]
[3.86634445 48.88705063]
[17.36638451 55.42531586]
[30.38881111 48.24517822]
[45.31874084 50.13229752]
[56.40427780 60.57089233]
[59.25051498 75.71041107]
[72.75055695 82.24868011]
[84.51947021 72.94853973]
[81.27920532 58.30269623]
[78.03893280 43.65685272]
[74.79866791 29.01101303]
[64.26296997 17.20806503]
[69.06826782 3.10989666]
[65.82800293 -11.53594494]
[62.58773422 -26.18178558]
[53.26261520 -40.34083176]
[64.28687286 -53.22113037]
[79.71562195 -46.19333267]
[77.23357391 -29.42205238]
[80.47383881 -14.77621174]
[83.71411133 -0.13037062]
[94.01804352 10.62500858]
[89.44451141 25.77074623]
[92.68477631 40.41658783]
[95.92504120 55.06242752]
[99.16531372 69.70826721]
[113.67413330 73.51538849]
[123.68795013 62.34742737]
[123.00896454 46.78540039]
[133.32350159 35.60214996]
[148.16369629 35.05074310]
[158.17752075 23.88278008]
[168.19134521 12.71481895]
[178.20516968 1.54685736]
[181.60769653 -6.93819809]
[188.46261597 -9.71536922]
[198.64889526 -20.72624588]
[208.83518982 -31.73712540]
[206.06846619 -43.30809402]
[209.20205688 -54.66079712]
[217.34501648 -63.00257492]
[228.38928223 -66.33963776]
[239.55451965 -63.95284271]
[250.07832336 -74.64160156]
[260.60211182 -85.33036041]
[271.12591553 -96.01911926]
[281.64971924 -106.70787811]
[288.45373535 -122.23662567]
[305.25912476 -119.99730682]
[307.75952148 -103.22875977]
[292.33847046 -96.18407440]
[281.81466675 -85.49531555]
[271.29089355 -74.80655670]
[260.76708984 -64.11779785]
[250.24327087 -53.42903900]
[251.49177551 -35.17073822]
[238.78547668 -21.55969238]
[219.84606934 -21.55083084]
[209.65977478 -10.53995323]
[199.47348022 0.47092435]
[189.37312317 11.56067944]
[179.35929871 22.72864151]
[169.34547424 33.89660263]
[159.33166504 45.06456375]
[160.39593506 59.87681961]
[150.39958191 71.34537506]
[134.85591125 72.36125183]
[124.84209442 83.52921295]
[138.98425293 78.52928925]
[153.12641907 73.52935791]
[165.15757751 64.57106781]
[179.87402344 61.66821289]
[194.40576172 65.38690186]
[205.91885376 75.00192261]
[212.16804504 88.63817596]
[211.93464661 103.63636017]
[205.26417542 117.07156372]
[193.45745850 126.32368469]
[178.81704712 129.58839417]
[164.19807434 126.22902679]
[152.45182800 116.90114594]
[138.47200012 111.46382141]
[124.49217987 106.02648926]
[134.15383911 117.50048065]
[143.81549072 128.97447205]
[153.47714233 140.44845581]
[163.13879395 151.92243958]
[172.80046082 163.39643860]
[182.46211243 174.87042236]
[192.12376404 186.34440613]
[212.19848633 186.98930359]
[225.13629150 201.95138550]
[222.94511414 221.30276489]
[233.13140869 232.31364441]
[243.31770325 243.32452393]
[253.50399780 254.33540344]
[263.69027710 265.34628296]
[273.87658691 276.35714722]
[284.06286621 287.36804199]
[299.25738525 294.88888550]
[296.23669434 311.57156372]
[279.36978149 313.28717041]
[273.05200195 297.55432129]
[262.86569214 286.54345703]
[252.67941284 275.53256226]
[242.49311829 264.52169800]
[232.30682373 253.51081848]
[222.12052917 242.49993896]
[211.93423462 231.48905945]
[201.93629456 233.86975098]
[191.77365112 231.86621094]
[183.29614258 225.77473450]
[178.07524109 216.64183044]
[177.11286926 206.08494568]
[180.64978027 196.00605774]
[170.98812866 184.53207397]
[161.32647705 173.05809021]
[151.66481018 161.58410645]
[142.00315857 150.11010742]
[132.34150696 138.63612366]
[122.67984772 127.16213226]
[113.01818848 115.68814850]
[105.51909637 115.57151031]
[112.81624603 128.67691040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 43]
[5 42]
[6 41]
[7 40]
[8 39]
[14 34]
[15 33]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[46 84]
[47 83]
[51 79]
[52 78]
[53 77]
[54 76]
[56 74]
[57 73]
[59 71]
[60 70]
[61 69]
[85 103]
[86 102]
[87 101]
[88 100]
[90 98]
[91 97]
[92 96]
[104 145]
[105 144]
[108 141]
[109 140]
[110 139]
[111 138]
[113 137]
[114 136]
[115 135]
[120 132]
[121 131]
[122 130]
[123 129]
[124 128]
[160 199]
[161 198]
[162 197]
[163 196]
[164 195]
[165 194]
[166 193]
[167 192]
[170 186]
[171 185]
[172 184]
[173 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
