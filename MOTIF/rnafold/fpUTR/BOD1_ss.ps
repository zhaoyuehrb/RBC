%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCGAGCAGGCCGUUUCUGCCGCGUCCACCACAACCUCUGCUGUAUCAGAGGGGGCCUUCGCCGCCGCCGCCCCCACCACCGCCCCUGCCGCCAUCGCCACCUCCGCCGCUGCCGCCUUGGGGCCCUCCUCCUUCACCGCCCCCUUCACCACCUCUACACGUUCUAGGCCUUCUGUCCUGGAGAAGAAGCUAUAGUCGUUCUCCCUUGUGGGCCCGGGGCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[79.01977539 233.32374573]
[64.98929596 250.63619995]
[44.89808655 260.18011475]
[22.69651604 260.11828613]
[17.24389648 274.09213257]
[17.04128075 283.21191406]
[11.61868000 288.22012329]
[5.97403955 302.11755371]
[0.32939884 316.01495361]
[-5.31524181 329.91235352]
[-10.95988274 343.80978394]
[-6.06821918 359.08886719]
[-15.08355427 372.35928345]
[-31.09009552 373.44104004]
[-41.80899429 361.50433350]
[-39.01762772 345.70599365]
[-24.85729408 338.16513062]
[-19.21265221 324.26773071]
[-13.56801224 310.37030029]
[-7.92337179 296.47290039]
[-2.27873111 282.57550049]
[3.27003074 268.63952637]
[8.72265053 254.66564941]
[1.82535350 249.92561340]
[-4.19106913 244.10066223]
[-9.15776825 237.35188293]
[-12.93495846 229.86631775]
[-15.41584778 221.85177612]
[-16.52966118 213.53108215]
[-16.24365616 205.13586426]
[-14.56407833 196.90013123]
[-11.53604603 189.05369568]
[-7.24232960 181.81585693]
[-1.80109537 175.38914490]
[4.63734770 169.95376587]
[11.89470005 165.66250610]
[19.76960754 162.63642883]
[28.04324722 160.96144104]
[36.48541260 160.68592834]
[44.86091614 161.81929016]
[52.93613815 164.33161926]
[60.61441422 151.44581604]
[68.29269409 138.55999756]
[75.97096252 125.67419434]
[83.64923859 112.78838348]
[80.58927917 105.94100189]
[71.78913879 118.08833313]
[56.86919022 116.54074860]
[50.74956131 102.84584808]
[59.54996490 90.69871521]
[74.46935272 92.24623871]
[71.40939331 85.39886475]
[56.68761826 82.52320099]
[41.96584702 79.64754486]
[27.24407387 76.77188110]
[12.52230167 73.89622498]
[-2.19947100 71.02056122]
[-9.23461056 77.26617432]
[-18.21948051 79.54780579]
[-27.11436462 77.47766876]
[-33.95920944 71.64147949]
[-37.30546951 63.44014740]
[-51.89582825 59.95856857]
[-67.45027161 65.15388489]
[-79.54570007 54.07991791]
[-75.73937225 38.12862015]
[-59.94691086 33.70931625]
[-48.41424942 45.36820984]
[-33.82389069 48.84978867]
[-14.61755180 41.27728653]
[0.67618859 56.29878998]
[15.39796066 59.17444992]
[30.11973381 62.05010986]
[44.84150696 64.92577362]
[59.56327820 67.80142975]
[74.28504944 70.67708588]
[79.36466217 65.15915680]
[64.72769928 61.87903214]
[60.24979782 47.56301498]
[70.40882111 36.52696609]
[85.04584503 39.80682373]
[89.52388763 54.12330246]
[94.60350037 48.60537338]
[90.52194214 34.17135239]
[86.44039154 19.73733139]
[82.35884094 5.30331135]
[78.27729034 -9.13070869]
[63.21059418 -22.53500557]
[68.79753113 -41.05372238]
[64.31980896 -55.36980057]
[52.81573105 -66.23105621]
[56.40097046 -80.68772125]
[51.92324829 -95.00379944]
[37.02090836 -98.44871521]
[25.91705704 -108.82182312]
[21.52541733 -123.26412201]
[24.92961311 -137.86779785]
[35.11787796 -148.73356628]
[30.64015579 -163.04963684]
[16.13803482 -168.89964294]
[8.83474922 -182.72700500]
[12.17868423 -198.00286865]
[24.59093666 -207.51445007]
[40.21082306 -206.77064514]
[51.66310501 -196.12268066]
[53.54037094 -180.59819031]
[44.95623016 -167.52735901]
[49.43395233 -153.21128845]
[63.99784088 -150.08738708]
[75.11663055 -140.02615356]
[79.73701477 -125.65540314]
[76.52279663 -110.80395508]
[66.23932648 -99.48152161]
[70.71704865 -85.16544342]
[81.90084076 -75.32817078]
[78.63587952 -59.84752274]
[83.11360168 -45.53144455]
[92.54312134 -41.63342285]
[98.39891052 -33.01102066]
[98.55213165 -22.36984253]
[92.71131134 -13.21226025]
[96.79286194 1.22175956]
[100.87441254 15.65577984]
[104.95596313 30.08979988]
[109.03752136 44.52381897]
[112.37565613 29.89997482]
[123.49458313 19.83173561]
[137.35818481 14.10453892]
[152.34114075 13.38981247]
[166.68695068 17.77134514]
[178.71377563 26.73546982]
[187.01164246 39.23128128]
[190.60777283 53.79383087]
[189.08056641 68.71588135]
[182.60905457 82.24805450]
[171.95195007 92.80389404]
[158.35859680 99.14590454]
[143.42265320 100.53057861]
[128.89120483 96.79381561]
[114.31475067 100.33312988]
[128.80363464 104.21541595]
[143.29252625 108.09770203]
[157.78140259 111.97998810]
[172.27029419 115.86227417]
[181.62945557 105.47553253]
[194.48837280 100.15749359]
[208.31793213 100.89247131]
[220.42454529 107.48027039]
[228.47477722 118.58630371]
[230.94505310 132.01158142]
[245.37907410 136.09313965]
[259.81307983 140.17468262]
[274.24710083 144.25624084]
[284.50595093 130.84863281]
[299.09832764 122.43265533]
[315.76806641 120.27687836]
[331.95031738 124.68447876]
[345.16613770 134.95094299]
[353.40237427 149.47653198]
[355.41815186 166.01547241]
[369.95916748 169.69775391]
[384.50015259 173.38003540]
[395.95178223 167.46238708]
[407.98150635 170.82025146]
[414.29351807 181.13049316]
[428.78240967 185.01278687]
[443.27130127 188.89506531]
[457.78659058 192.67744446]
[472.32757568 196.35972595]
[486.86859131 200.04200745]
[501.45895386 203.52359009]
[516.09588623 206.80380249]
[530.73284912 210.08403015]
[545.36981201 213.36424255]
[560.00671387 216.64445496]
[572.32403564 207.01025391]
[587.95056152 207.59910583]
[599.50787354 218.13296509]
[601.53900146 233.63807678]
[593.08489990 246.79339600]
[578.13732910 251.38739014]
[563.75415039 245.25090027]
[556.72650146 231.28140259]
[542.08959961 228.00119019]
[527.45263672 224.72096252]
[512.81567383 221.44075012]
[498.17874146 218.16053772]
[493.74606323 219.90849304]
[488.16888428 218.89895630]
[483.18630981 214.58300781]
[468.64529419 210.90072632]
[454.10430908 207.21844482]
[446.85739136 208.62174988]
[439.38900757 203.38395691]
[424.90011597 199.50167847]
[410.41122437 195.61938477]
[393.72293091 201.06437683]
[380.81787109 187.92105103]
[366.27688599 184.23876953]
[351.73587036 180.55647278]
[344.51409912 191.66072083]
[334.20651245 200.01629639]
[321.80575562 204.80047607]
[308.51171875 205.53535461]
[295.61517334 202.13555908]
[284.37280273 194.91781616]
[275.88446045 184.57164001]
[270.98571777 172.09336853]
[270.16555786 158.69026184]
[255.73153687 154.60870361]
[241.29751587 150.52716064]
[226.86349487 146.44560242]
[215.55458069 157.99552917]
[199.87286377 162.28762817]
[184.07690430 158.05807495]
[172.50595093 146.37066650]
[168.38801575 130.35116577]
[153.89912415 126.46887970]
[139.41023254 122.58659363]
[124.92134857 118.70430756]
[110.43246460 114.82202148]
[96.53504944 120.46665955]
[88.85677338 133.35247803]
[81.17849731 146.23828125]
[73.50022125 159.12408447]
[65.82194519 172.00990295]
[79.51970673 189.74307251]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[41 226]
[42 225]
[43 224]
[44 223]
[45 222]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[62 69]
[63 68]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[89 117]
[90 116]
[92 114]
[93 113]
[98 108]
[99 107]
[140 221]
[141 220]
[142 219]
[143 218]
[144 217]
[150 212]
[151 211]
[152 210]
[153 209]
[160 200]
[161 199]
[162 198]
[165 196]
[166 195]
[167 194]
[168 192]
[169 191]
[170 190]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
