%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KCTD2)
} def

/sequence { (\
UCUCCCUGCCGAGAAAUGGGCCGGCCCGGCUGCGCGCGGGCAGCAGCGGUGGCGGCGGCGGUCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.028218491 ubox
1 14 0.925436157 ubox
1 61 0.010806328 ubox
2 11 0.030156286 ubox
2 13 0.989246606 ubox
2 60 0.014665690 ubox
2 61 0.006717735 ubox
2 67 0.010344839 ubox
3 12 0.989468250 ubox
3 14 0.024176535 ubox
3 60 0.006143351 ubox
3 61 0.009355337 ubox
3 66 0.010420648 ubox
4 11 0.987675779 ubox
4 13 0.025307422 ubox
4 58 0.015701754 ubox
4 60 0.012093157 ubox
4 61 0.053767075 ubox
5 24 0.004889748 ubox
5 57 0.015716962 ubox
5 58 0.005074067 ubox
5 60 0.054210806 ubox
5 61 0.017046220 ubox
6 13 0.059212615 ubox
6 23 0.005144163 ubox
6 55 0.015693473 ubox
6 57 0.005016380 ubox
6 58 0.055657585 ubox
6 60 0.016889374 ubox
6 61 0.061404801 ubox
6 67 0.004260456 ubox
7 12 0.058869336 ubox
7 54 0.015689534 ubox
7 57 0.055659938 ubox
7 60 0.061872247 ubox
7 66 0.004315274 ubox
8 21 0.007839656 ubox
8 53 0.015711719 ubox
8 56 0.055945107 ubox
8 59 0.064524679 ubox
8 62 0.006162215 ubox
9 20 0.007890791 ubox
9 52 0.015711594 ubox
9 55 0.055944893 ubox
9 58 0.064528468 ubox
9 61 0.006490487 ubox
10 19 0.008016408 ubox
10 51 0.015705524 ubox
10 54 0.055927109 ubox
10 57 0.064509522 ubox
10 60 0.006493150 ubox
11 50 0.012849782 ubox
11 53 0.049645916 ubox
11 56 0.058055732 ubox
11 59 0.006450438 ubox
16 50 0.011936592 ubox
17 28 0.014790372 ubox
17 45 0.006659810 ubox
17 48 0.026247936 ubox
17 49 0.011422854 ubox
17 65 0.897089004 ubox
18 27 0.021209384 ubox
18 44 0.006589231 ubox
18 47 0.026945989 ubox
18 59 0.003308291 ubox
18 64 0.995783440 ubox
19 26 0.021222415 ubox
19 63 0.995957908 ubox
19 64 0.011408935 ubox
20 25 0.021092027 ubox
20 41 0.006923181 ubox
20 44 0.041573711 ubox
20 47 0.005655050 ubox
20 50 0.019614888 ubox
20 53 0.061632735 ubox
20 56 0.030280729 ubox
20 59 0.024114087 ubox
20 62 0.995400790 ubox
20 63 0.011414423 ubox
21 40 0.006926863 ubox
21 43 0.041583277 ubox
21 46 0.005652400 ubox
21 49 0.019763201 ubox
21 52 0.062631339 ubox
21 55 0.032716059 ubox
21 58 0.024341010 ubox
21 61 0.995789874 ubox
22 39 0.006923717 ubox
22 48 0.019754349 ubox
22 51 0.062520121 ubox
22 54 0.032677403 ubox
22 57 0.024455304 ubox
22 60 0.994410061 ubox
23 47 0.018464168 ubox
23 50 0.046499299 ubox
23 53 0.025770742 ubox
23 56 0.023604358 ubox
23 59 0.791904581 ubox
23 64 0.005485708 ubox
24 37 0.006951465 ubox
24 41 0.184531576 ubox
24 47 0.007991280 ubox
24 50 0.042016333 ubox
24 53 0.161437988 ubox
24 56 0.285177086 ubox
24 59 0.593938722 ubox
24 63 0.005490088 ubox
25 36 0.006948002 ubox
25 40 0.184802661 ubox
25 46 0.010531576 ubox
25 49 0.054555045 ubox
25 52 0.162483358 ubox
25 55 0.281567805 ubox
25 58 0.823870798 ubox
26 39 0.184811671 ubox
26 48 0.053303089 ubox
26 49 0.067900713 ubox
26 51 0.157757756 ubox
26 52 0.057974281 ubox
26 54 0.267960046 ubox
26 55 0.172262178 ubox
26 57 0.801951526 ubox
26 58 0.367359060 ubox
26 61 0.006205189 ubox
27 34 0.006954037 ubox
27 38 0.184793408 ubox
27 48 0.087718050 ubox
27 51 0.080324927 ubox
27 54 0.194372097 ubox
27 57 0.399954768 ubox
27 60 0.006245070 ubox
28 33 0.006967000 ubox
28 37 0.182290627 ubox
28 47 0.066250946 ubox
28 50 0.066152269 ubox
28 53 0.162396682 ubox
28 56 0.316328015 ubox
28 59 0.004740662 ubox
29 35 0.160596168 ubox
29 37 0.026844152 ubox
29 44 0.098151572 ubox
29 47 0.236616715 ubox
29 50 0.101585711 ubox
29 53 0.391814576 ubox
29 56 0.792455611 ubox
29 59 0.009368488 ubox
30 34 0.159547533 ubox
30 36 0.037823827 ubox
30 43 0.098309416 ubox
30 46 0.244026287 ubox
30 49 0.104602087 ubox
30 52 0.410121626 ubox
30 55 0.846350019 ubox
30 58 0.010835306 ubox
30 61 0.003311112 ubox
31 42 0.098312566 ubox
31 45 0.244011853 ubox
31 48 0.104524425 ubox
31 51 0.408314046 ubox
31 54 0.845835686 ubox
31 57 0.010850174 ubox
31 60 0.003309002 ubox
32 41 0.098337056 ubox
32 44 0.244085115 ubox
32 47 0.104676031 ubox
32 50 0.399914249 ubox
32 53 0.846318750 ubox
32 56 0.011673485 ubox
32 59 0.003321565 ubox
33 40 0.098316516 ubox
33 43 0.243974851 ubox
33 46 0.104650756 ubox
33 48 0.144039542 ubox
33 49 0.385123556 ubox
33 51 0.143657142 ubox
33 52 0.833054893 ubox
33 54 0.006360052 ubox
33 55 0.011450326 ubox
33 58 0.003275646 ubox
34 41 0.242764670 ubox
34 44 0.054387903 ubox
34 47 0.189758635 ubox
34 50 0.197578192 ubox
34 53 0.007461505 ubox
35 40 0.243472826 ubox
35 43 0.054553720 ubox
35 46 0.189891436 ubox
35 48 0.467264906 ubox
35 49 0.163544348 ubox
35 51 0.764315127 ubox
35 52 0.006892960 ubox
35 54 0.011233800 ubox
35 57 0.003212009 ubox
36 44 0.209156376 ubox
36 47 0.485962052 ubox
36 50 0.767232764 ubox
36 53 0.011302405 ubox
36 56 0.003231568 ubox
37 43 0.209724257 ubox
37 46 0.486047457 ubox
37 48 0.163888533 ubox
37 49 0.763637259 ubox
37 51 0.006885393 ubox
37 52 0.011261611 ubox
37 55 0.003226912 ubox
38 47 0.177956359 ubox
38 50 0.006746008 ubox
40 47 0.754094590 ubox
40 53 0.003177710 ubox
41 46 0.753478210 ubox
41 58 0.004932951 ubox
43 50 0.005125070 ubox
43 53 0.005753361 ubox
43 56 0.174556156 ubox
43 59 0.022503057 ubox
44 49 0.005402979 ubox
44 51 0.007702772 ubox
44 52 0.005553432 ubox
44 55 0.174114859 ubox
44 58 0.023570094 ubox
45 50 0.007658556 ubox
46 53 0.191780785 ubox
46 56 0.039468562 ubox
46 59 0.021417690 ubox
47 52 0.192419852 ubox
47 54 0.027806487 ubox
47 55 0.037300331 ubox
47 57 0.004978842 ubox
47 58 0.022503437 ubox
48 53 0.039097968 ubox
48 56 0.009408698 ubox
49 56 0.046334652 ubox
50 55 0.045887111 ubox
50 57 0.006585563 ubox
51 56 0.015085340 ubox
52 59 0.018880086 ubox
53 58 0.019710362 ubox
54 59 0.007501888 ubox
54 63 0.003784460 ubox
55 62 0.003973230 ubox
56 61 0.004523373 ubox
57 64 0.005042656 ubox
58 63 0.004966828 ubox
1 14 0.9500000 lbox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
17 65 0.9500000 lbox
18 64 0.9500000 lbox
19 63 0.9500000 lbox
20 62 0.9500000 lbox
21 61 0.9500000 lbox
22 60 0.9500000 lbox
23 59 0.9500000 lbox
25 58 0.9500000 lbox
26 57 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
31 54 0.9500000 lbox
32 53 0.9500000 lbox
33 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
