%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCCCCUUCGCUGUGGCCAGAAGCCAAGUUCUGCUGGGUGCACAAUCCUGCGGAUCACCUGAUCAGAGAGAACUGAACCUACAAAAGAGAGCUCAACCUCCUUUUCCAUACCUACCAGGGACCUAGUUCAGCUACGUCCUAAACAGUACCAGGCAGGUGGUGACUUGAGAACUCUGUGCCUGGUUUCUGAGGACUGUUUCACC\
) } def
/len { sequence length } bind def

/coor [
[31.29155350 174.86560059]
[29.22925377 160.00804138]
[27.16695213 145.15049744]
[25.10465240 130.29293823]
[17.82898140 128.47233582]
[14.18776226 143.02366638]
[10.54631901 157.57495117]
[-4.00490952 153.93328857]
[-0.36357862 139.38244629]
[3.27763987 124.83110809]
[-3.99803066 123.01050568]
[-12.81480980 135.14575195]
[-21.63158798 147.28100586]
[-24.14582825 156.06767273]
[-30.67762756 159.53327942]
[-39.67933655 171.53199768]
[-48.68104172 183.53071594]
[-57.68275070 195.52943420]
[-56.84874725 211.55079651]
[-68.94985199 222.08374023]
[-84.70312500 219.04829407]
[-92.02400208 204.77299500]
[-85.29654694 190.20863342]
[-69.68146515 186.52774048]
[-60.67975998 174.52900696]
[-51.67805481 162.53028870]
[-42.67634583 150.53157043]
[-33.76684189 138.46423340]
[-24.95006371 126.32897949]
[-16.13328552 114.19372559]
[-24.57403946 101.79397583]
[-39.09705353 105.54658508]
[-53.62006760 109.29919434]
[-68.14308167 113.05180359]
[-82.66609192 116.80441284]
[-94.09176636 127.74812317]
[-108.34999084 123.44088745]
[-122.87300110 127.19349670]
[-137.39601135 130.94610596]
[-151.91903687 134.69871521]
[-161.27041626 147.73448181]
[-177.29936218 148.40701294]
[-187.70983887 136.20039368]
[-184.51582336 120.47850800]
[-170.16748047 113.30183411]
[-155.67164612 120.17570496]
[-141.14862061 116.42309570]
[-126.62561035 112.67048645]
[-112.10260010 108.91787720]
[-101.71571350 98.24258423]
[-86.41870117 102.28140259]
[-71.89569092 98.52879333]
[-57.37267685 94.77618408]
[-42.84966278 91.02357483]
[-28.32664871 87.27096558]
[-27.06832886 79.87727356]
[-41.85570526 77.36063385]
[-56.64308167 74.84399414]
[-71.43041992 72.32711029]
[-68.91328430 57.53981781]
[-54.12644196 60.05661774]
[-39.33906555 62.57325745]
[-24.55168915 65.08989716]
[-23.29336929 57.69621277]
[-35.75742340 49.35071564]
[-48.22148132 41.00521851]
[-60.68553925 32.65972519]
[-76.13848877 35.97361755]
[-89.36309052 27.31997871]
[-92.51342010 11.83285618]
[-83.72044373 -1.29951406]
[-68.20088196 -4.28592968]
[-55.16220856 4.64539719]
[-52.34004211 20.19566727]
[-39.87598801 28.54116440]
[-27.41193008 36.88665771]
[-14.94787312 45.23215485]
[-8.78052139 40.96439362]
[-17.31603813 28.62969017]
[-25.85136604 16.29485512]
[-13.51639748 7.75971794]
[-4.98133421 20.09417343]
[3.55418372 32.42887878]
[9.72153568 28.16111946]
[6.30373335 13.55568790]
[2.88593078 -1.04974377]
[-0.53187197 -15.65517521]
[-3.94967461 -30.26060677]
[-8.95437241 -37.90781784]
[-7.30612516 -45.11601639]
[-10.49970913 -59.77210617]
[-13.69329357 -74.42819977]
[-27.12543869 -82.75604248]
[-30.65333366 -98.16154480]
[-22.18394089 -111.50489807]
[-6.74200106 -114.86972046]
[6.51105738 -106.25971985]
[9.71243000 -90.78307343]
[0.96279806 -77.62178040]
[4.15638208 -62.96569061]
[7.34996653 -48.30960083]
[10.65575695 -33.67840958]
[14.07355976 -19.07297707]
[17.49136162 -4.46754646]
[20.90916443 10.13788509]
[24.32696724 24.74331665]
[31.47743988 27.00621986]
[35.48025131 12.55016708]
[39.48306656 -1.90588665]
[43.48587799 -16.36194038]
[41.48131180 -31.22739410]
[52.96213913 -40.88092041]
[67.26292419 -36.35460281]
[71.09854126 -21.85329247]
[60.90684509 -10.84874153]
[55.86402512 3.27818227]
[50.82120514 17.40510559]
[45.77838516 31.53203011]
[52.92885971 33.79493332]
[64.12715912 23.81504822]
[75.32545471 13.83516312]
[86.52375031 3.85527778]
[97.72205353 -6.12460756]
[102.87679291 -21.08252335]
[117.52619934 -23.77399826]
[128.72450256 -33.75388336]
[139.92279053 -43.73376846]
[151.12109375 -53.71365356]
[158.92306519 -68.76574707]
[175.54672241 -65.43551636]
[176.94851685 -48.53962326]
[161.10098267 -42.51535797]
[149.90267944 -32.53546906]
[138.70439148 -22.55558586]
[127.50608826 -12.57569981]
[123.15232849 1.66838777]
[107.70193481 5.07369041]
[96.50363922 15.05357647]
[85.30534363 25.03346062]
[74.10704041 35.01334763]
[62.90874481 44.99323273]
[100.98170471 37.65581512]
[134.13497925 52.66406250]
[151.30955505 82.02185059]
[148.52409363 113.53385162]
[162.21165466 119.66987610]
[175.89921570 125.80590820]
[194.16639709 123.50153351]
[203.88578796 138.11076355]
[217.66577148 144.03631592]
[231.44573975 149.96188354]
[245.22572327 155.88743591]
[259.00570679 161.81298828]
[272.78567505 167.73855591]
[286.56564331 173.66410828]
[300.34564209 179.58966064]
[313.65377808 171.83084106]
[328.80169678 173.37791443]
[340.00158691 183.42910767]
[343.09826660 197.97381592]
[356.87823486 203.89938354]
[370.65823364 209.82493591]
[383.38961792 201.11201477]
[398.81115723 200.68821716]
[412.00189209 208.68873596]
[418.75268555 222.56066895]
[416.90939331 237.87751770]
[407.06018066 249.75172424]
[392.34793091 254.39428711]
[377.46728516 250.32377625]
[367.16653442 238.83908081]
[364.73266602 223.60491943]
[350.95269775 217.67935181]
[337.17269897 211.75379944]
[324.48577881 219.51136780]
[309.48617554 218.29646301]
[297.94317627 208.36610413]
[294.42007446 193.36964417]
[280.64010620 187.44409180]
[266.86010742 181.51852417]
[253.08013916 175.59297180]
[239.30015564 169.66740417]
[225.52018738 163.74185181]
[211.74020386 157.81629944]
[197.96023560 151.89073181]
[186.60800171 156.07708740]
[175.07745361 151.24937439]
[169.76318359 139.49346924]
[156.07562256 133.35743713]
[142.38807678 127.22140503]
[96.17047882 158.23420715]
[39.96220398 128.23063660]
[42.02450562 143.08819580]
[44.08680725 157.94573975]
[46.14910889 172.80329895]
[60.40979767 178.50666809]
[69.89562225 190.58618164]
[72.05493927 205.79252625]
[66.30690765 220.03526306]
[54.19771576 229.48318481]
[38.98467636 231.59481812]
[24.76002312 225.80216980]
[15.35011292 213.66342163]
[13.28616524 198.44384766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[4 192]
[11 30]
[12 29]
[13 28]
[15 27]
[16 26]
[17 25]
[18 24]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[37 49]
[38 48]
[39 47]
[40 46]
[64 77]
[65 76]
[66 75]
[67 74]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[90 101]
[91 100]
[92 99]
[119 141]
[120 140]
[121 139]
[122 138]
[123 137]
[125 135]
[126 134]
[127 133]
[128 132]
[145 190]
[146 189]
[147 188]
[149 185]
[150 184]
[151 183]
[152 182]
[153 181]
[154 180]
[155 179]
[156 178]
[160 174]
[161 173]
[162 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
