%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGAGCCACUUCCGCCCCGGAAAGCGAGGCCGCCACCAUCUUUUGGGUCCGGGAGAAGGAUUGAGUCAUCGGGCUCCAAUGCGUGGGGAUGUUUACCGCCGUUUAUCCGGGAUAGAGACUCCAUCGUGCUGACAGCAUCCUUUUAUUCACCGCCUCCGAAUUUGCAAAGAGGAGGAAGGAGGGACUUCUUGGCUUCUCCCAGCAUAGCCCCAGUU\
) } def
/len { sequence length } bind def

/coor [
[147.68127441 339.04699707]
[160.74488831 331.39059448]
[157.75262451 316.69207764]
[147.63192749 305.76409912]
[152.46078491 290.69781494]
[149.46850586 275.99929810]
[146.47624207 261.30078125]
[143.37861633 246.62411499]
[140.17579651 231.97004700]
[136.97297668 217.31596375]
[133.77017212 202.66189575]
[116.64257050 193.36924744]
[111.80558014 174.17774963]
[122.81748962 157.36592102]
[118.98719025 142.86320496]
[115.15689087 128.36048889]
[93.54233551 129.67936707]
[77.26514435 117.33689880]
[73.23035431 98.56481934]
[59.07464600 93.60338593]
[44.91893387 88.64194489]
[30.76322365 83.68050385]
[16.60751343 78.71906281]
[2.45180440 73.75762939]
[-11.73912716 68.89785004]
[-25.96455193 64.13997650]
[-40.18997574 59.38211060]
[-54.41539764 54.62424088]
[-68.64082336 49.86637115]
[-83.02769470 45.62161636]
[-97.55751038 41.89543533]
[-112.08732605 38.16925812]
[-126.61714172 34.44307709]
[-140.10763550 42.23053360]
[-154.78985596 38.24467468]
[-162.13085938 25.33556366]
[-176.66067505 21.60938454]
[-185.74459839 22.50893974]
[-191.37144470 17.72413826]
[-205.84631348 13.78991699]
[-220.32118225 9.85569477]
[-234.79605103 5.92147255]
[-246.88441467 15.47018623]
[-262.09960938 16.06303024]
[-274.59854126 7.68207312]
[-279.70462036 -6.28452635]
[-294.17950439 -10.21874809]
[-308.65435791 -14.15297031]
[-323.12924194 -18.08719254]
[-337.63195801 -21.91749191]
[-352.16177368 -25.64367104]
[-366.69158936 -29.36985207]
[-381.22140503 -33.09603119]
[-395.75122070 -36.82221222]
[-410.28103638 -40.54838943]
[-424.83721924 -44.17025757]
[-439.41897583 -47.68762970]
[-449.46334839 -36.13908005]
[-463.72830200 -30.59200478]
[-478.93582153 -32.32108688]
[-491.59136963 -40.92899704]
[-498.78674316 -54.43769455]
[-498.86856079 -69.74298859]
[-491.81796265 -83.32781982]
[-479.25515747 -92.07051086]
[-464.06698608 -93.96204376]
[-449.74356079 -88.56776428]
[-439.57632446 -77.12723541]
[-435.90161133 -62.26940155]
[-421.31982422 -58.75203323]
[-414.08474731 -60.23838425]
[-406.55487061 -55.07820892]
[-392.02505493 -51.35202789]
[-377.49520874 -47.62584686]
[-362.96539307 -43.89966965]
[-348.43557739 -40.17348862]
[-333.90576172 -36.44730759]
[-326.65011597 -37.82972336]
[-319.19500732 -32.56206512]
[-304.72015381 -28.62784195]
[-290.24526978 -24.69361877]
[-275.77038574 -20.75939751]
[-264.29693604 -30.21973610]
[-249.27522278 -31.12066460]
[-236.45349121 -22.90747833]
[-230.86183167 -8.55339813]
[-216.38696289 -4.61917639]
[-201.91209412 -0.68495452]
[-187.43722534 3.24926758]
[-172.93450928 7.07956696]
[-158.40467834 10.80574703]
[-145.75715637 3.02270770]
[-130.96878052 6.59460115]
[-122.89096832 19.91325951]
[-108.36114502 23.63944054]
[-93.83132935 27.36561966]
[-79.30151367 31.09180069]
[-84.60987854 17.06249809]
[-77.07807922 4.09052658]
[-62.26250458 1.74560034]
[-51.09292984 11.75762558]
[-51.80940628 26.74050331]
[-63.88295364 35.64094543]
[-49.65752792 40.39881516]
[-35.43210602 45.15668488]
[-21.20668221 49.91455460]
[-6.98125792 54.67242432]
[0.35481465 53.81353378]
[7.41324329 59.60191727]
[21.56895256 64.56335449]
[35.72466278 69.52479553]
[49.88037491 74.48623657]
[64.03607941 79.44766998]
[78.19179535 84.40911102]
[83.45280457 78.06470490]
[90.54915619 73.48896027]
[98.88816833 71.20767212]
[107.72879791 71.54872894]
[116.24743652 74.60119629]
[123.61457825 80.19614410]
[129.07536316 87.91194153]
[132.02600098 97.10457611]
[146.25143433 92.34671021]
[160.47685242 87.58883667]
[174.70227051 82.83097076]
[174.89683533 68.11827850]
[183.00506592 54.23106384]
[198.06593323 45.41497040]
[216.88723755 45.06080246]
[226.90820312 33.89924240]
[236.92915344 22.73768425]
[246.95011902 11.57612514]
[256.97106934 0.41456604]
[263.05352783 -15.41073608]
[279.94415283 -13.94687271]
[283.21328735 2.68890429]
[268.13262939 10.43552399]
[258.11166382 21.59708405]
[248.09071350 32.75864410]
[238.06976318 43.92020035]
[228.04879761 55.08176041]
[230.83172607 62.04633713]
[244.76087952 56.48048019]
[258.69003296 50.91462326]
[272.61917114 45.34877014]
[286.54833984 39.78291321]
[300.47747803 34.21706009]
[314.40673828 28.65141869]
[319.97213745 42.58074188]
[306.04333496 48.14620972]
[292.11419678 53.71206665]
[278.18502808 59.27791977]
[264.25588989 64.84377289]
[250.32673645 70.40962982]
[236.39758301 75.97548676]
[239.18051147 82.94006348]
[254.13385010 84.12231445]
[269.08718872 85.30455780]
[284.04052734 86.48680878]
[298.99386597 87.66905975]
[306.22814941 74.26813507]
[318.29162598 64.97338104]
[333.09420776 61.39516830]
[348.07125854 64.15344238]
[360.62789917 72.77031708]
[368.58862305 85.75286865]
[370.57421875 100.85179138]
[366.24063110 115.45110321]
[356.33868408 127.02138519]
[342.58395386 133.55801392]
[327.35955811 133.92848206]
[313.30316162 128.06860352]
[302.85018921 116.99364471]
[297.81161499 102.62239838]
[282.85827637 101.44014740]
[267.90493774 100.25789642]
[252.95159912 99.07564545]
[237.99826050 97.89340210]
[217.34283447 113.53524780]
[194.04939270 111.88293457]
[179.46014404 97.05639648]
[165.23472595 101.81426239]
[151.00929260 106.57213593]
[136.78387451 111.33000183]
[129.65960693 124.53018188]
[133.48989868 139.03289795]
[137.32020569 153.53561401]
[147.57780457 156.43121338]
[155.64854431 163.26873779]
[160.12145996 172.76506042]
[160.25114441 183.18054199]
[156.08119202 192.63757324]
[148.42424011 199.45907593]
[151.62705994 214.11315918]
[154.82987976 228.76722717]
[158.03268433 243.42131042]
[162.91955566 251.13137817]
[161.17474365 258.30853271]
[164.16702271 273.00701904]
[167.15930176 287.70553589]
[177.49401855 299.68487549]
[172.45112610 313.69979858]
[175.44340515 328.39831543]
[190.46058655 330.33813477]
[204.03314209 337.05114746]
[214.68881226 347.80917358]
[221.27175903 361.44531250]
[223.06790161 376.48034668]
[219.88241577 391.28344727]
[212.06082153 404.24884033]
[200.45158386 413.97015381]
[186.31396484 419.39291382]
[171.18148804 419.92886353]
[156.69564819 415.51989746]
[144.42773438 406.64425659]
[135.70849609 394.26467896]
[131.48371887 379.72406006]
[132.21166992 364.59960938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[5 200]
[6 199]
[7 198]
[8 196]
[9 195]
[10 194]
[11 193]
[14 187]
[15 186]
[16 185]
[19 114]
[20 113]
[21 112]
[22 111]
[23 110]
[24 109]
[25 107]
[26 106]
[27 105]
[28 104]
[29 103]
[30 97]
[31 96]
[32 95]
[33 94]
[36 91]
[37 90]
[39 89]
[40 88]
[41 87]
[42 86]
[46 82]
[47 81]
[48 80]
[49 79]
[50 77]
[51 76]
[52 75]
[53 74]
[54 73]
[55 72]
[56 70]
[57 69]
[122 184]
[123 183]
[124 182]
[125 181]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
