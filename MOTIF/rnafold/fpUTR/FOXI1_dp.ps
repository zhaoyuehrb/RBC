%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:44 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FOXI1)
} def

/sequence { (\
GGGUGCAGGUGCCAGGCAGGUGGCUCCGGCCAGCCCAGCCCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.014964701 ubox
1 35 0.026473011 ubox
1 36 0.373038646 ubox
1 40 0.007496492 ubox
1 41 0.099578268 ubox
1 42 0.913295620 ubox
2 12 0.014656863 ubox
2 13 0.047553036 ubox
2 34 0.026666557 ubox
2 35 0.373312451 ubox
2 36 0.005093017 ubox
2 39 0.007488175 ubox
2 40 0.100327196 ubox
2 41 0.913924508 ubox
2 42 0.046054266 ubox
3 12 0.047720559 ubox
3 34 0.373281675 ubox
3 35 0.005032522 ubox
3 39 0.100655675 ubox
3 40 0.913716145 ubox
3 41 0.046064690 ubox
3 45 0.016637329 ubox
4 11 0.046814271 ubox
4 14 0.003402041 ubox
4 18 0.003552964 ubox
4 32 0.073974559 ubox
4 33 0.352619648 ubox
4 37 0.012946578 ubox
4 38 0.099974603 ubox
4 43 0.008632322 ubox
4 44 0.016618326 ubox
5 10 0.023155021 ubox
5 12 0.015560946 ubox
5 17 0.004678367 ubox
5 30 0.360191972 ubox
5 31 0.067964640 ubox
5 34 0.022259756 ubox
5 36 0.014269472 ubox
5 39 0.914048545 ubox
5 42 0.009499497 ubox
5 45 0.085053229 ubox
6 11 0.015895492 ubox
6 16 0.004676849 ubox
6 29 0.364533778 ubox
6 33 0.022265053 ubox
6 38 0.912847086 ubox
6 44 0.085917882 ubox
8 26 0.012863937 ubox
8 27 0.375995685 ubox
8 31 0.024150312 ubox
8 35 0.193028157 ubox
8 36 0.894094435 ubox
8 40 0.010079122 ubox
8 41 0.041035606 ubox
8 42 0.088629483 ubox
9 17 0.015962983 ubox
9 25 0.012214049 ubox
9 26 0.376803690 ubox
9 30 0.024092547 ubox
9 34 0.194956789 ubox
9 35 0.894649948 ubox
9 39 0.010953569 ubox
9 40 0.041376752 ubox
9 41 0.088576323 ubox
9 45 0.003716964 ubox
10 16 0.015901015 ubox
10 18 0.045493575 ubox
10 22 0.003529887 ubox
10 29 0.023822482 ubox
10 32 0.040424363 ubox
10 33 0.186048042 ubox
10 37 0.032536011 ubox
10 38 0.010780725 ubox
10 43 0.004248619 ubox
10 44 0.003660679 ubox
11 17 0.051738627 ubox
11 21 0.046659818 ubox
11 24 0.378370142 ubox
11 30 0.189272155 ubox
11 31 0.033905239 ubox
11 34 0.891337227 ubox
11 36 0.032930752 ubox
11 39 0.099217326 ubox
11 42 0.004618166 ubox
11 45 0.006483118 ubox
12 16 0.051375828 ubox
12 20 0.055186779 ubox
12 23 0.378832702 ubox
12 29 0.192802881 ubox
12 33 0.890274414 ubox
12 38 0.099266852 ubox
12 44 0.006548224 ubox
13 19 0.057677004 ubox
13 22 0.378830558 ubox
13 28 0.192224350 ubox
14 21 0.369028428 ubox
14 25 0.008920200 ubox
15 24 0.009206088 ubox
15 25 0.072093549 ubox
15 26 0.067803706 ubox
15 27 0.164515608 ubox
15 31 0.879077098 ubox
15 35 0.109119803 ubox
15 36 0.006346406 ubox
15 40 0.054602740 ubox
15 41 0.003860873 ubox
16 24 0.099796778 ubox
16 25 0.012432700 ubox
16 26 0.164488840 ubox
16 30 0.880362495 ubox
16 34 0.111253739 ubox
16 35 0.005853445 ubox
16 39 0.055097497 ubox
17 23 0.100154609 ubox
17 29 0.877059081 ubox
17 33 0.111215869 ubox
17 38 0.055088690 ubox
18 25 0.168967604 ubox
19 24 0.169520392 ubox
19 25 0.016948654 ubox
19 26 0.064238694 ubox
19 27 0.872616895 ubox
19 31 0.016968826 ubox
19 35 0.063584712 ubox
19 36 0.034394866 ubox
20 24 0.019550898 ubox
20 25 0.047080175 ubox
20 26 0.874851657 ubox
20 30 0.016967058 ubox
20 34 0.065389767 ubox
20 35 0.033624552 ubox
21 28 0.014667152 ubox
21 29 0.016298282 ubox
21 32 0.196731363 ubox
21 33 0.038532175 ubox
22 27 0.015704080 ubox
22 31 0.208904991 ubox
22 35 0.003169071 ubox
23 30 0.208977004 ubox
23 34 0.003461014 ubox
24 29 0.208949389 ubox
24 33 0.003479068 ubox
25 32 0.003294679 ubox
28 35 0.027738688 ubox
28 36 0.025479263 ubox
29 34 0.027680040 ubox
29 35 0.025312563 ubox
29 39 0.003250125 ubox
30 38 0.003249959 ubox
33 39 0.005972996 ubox
34 38 0.005947428 ubox
38 45 0.152185639 ubox
39 44 0.152997868 ubox
1 42 0.9500000 lbox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
showpage
end
%%EOF
