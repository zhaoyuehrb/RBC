%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACUAGACGGCCAGCCUGUUAAGGUGGCCCCAGAUAUUCCAGCCUCAGCCCAGAGUCCUCCUGUGCCCCUACUGCAGCAAGGGUGUCUCCAAGAAGGGGGACCUGGAGUCAGCCCGUCACACCUGGUUUCCUCUCUGCUAGGGUCCCUCCUCCCACAGAGCACUGGAGGGCAGCUGAGGAGGAGCUACCUUAAAAAAGGAGGUGUGUGCCAGGGAGCUGGGUAGGAGCCUGGCUAUAUAUCUGCCCAGCAGCGG\
UACUCUCGGGACAGAG\
) } def
/len { sequence length } bind def

/coor [
[160.82328796 70.43295288]
[146.34945679 74.37099457]
[131.87562561 78.30902863]
[117.40178680 82.24707031]
[102.92795563 86.18511200]
[113.36479950 83.83131409]
[125.65548706 89.20855713]
[134.56665039 102.90100098]
[135.07350159 122.26486206]
[124.18642426 141.92243958]
[117.50035095 155.34988403]
[110.81427002 168.77734375]
[104.12819672 182.20478821]
[97.44212341 195.63223267]
[96.42626953 204.67247009]
[90.60049438 209.17549133]
[83.75978088 222.52482605]
[76.91907501 235.87414551]
[78.27946472 252.21678162]
[64.65410614 261.34265137]
[50.05959702 253.86386108]
[49.50951385 237.47393799]
[63.56974030 229.03343201]
[70.41045380 215.68411255]
[77.25116730 202.33477783]
[84.01467133 188.94616699]
[90.70074463 175.51870728]
[97.38682556 162.09126282]
[104.07289886 148.66381836]
[110.75897217 135.23635864]
[105.36459351 130.02574158]
[94.94333649 140.81449890]
[84.52207184 151.60325623]
[74.10081482 162.39201355]
[63.67955399 173.18077087]
[53.25811386 183.96936035]
[42.46969986 173.54774475]
[52.89079285 162.75950623]
[63.31205368 151.97074890]
[73.73331451 141.18199158]
[84.15457153 130.39323425]
[94.57583618 119.60447693]
[89.18145752 114.39384460]
[75.99369049 121.54107666]
[67.88019562 135.79251099]
[51.48194885 135.62113953]
[43.66804886 121.20326996]
[52.47677612 107.37075806]
[68.84645844 108.35330963]
[82.03422546 101.20607758]
[80.21955872 86.31625366]
[65.70121002 82.54564667]
[51.18285751 78.77503967]
[36.66450500 75.00443268]
[27.60927010 75.87639618]
[22.00074196 71.10552216]
[7.52690840 67.16748810]
[-6.94692516 63.22944641]
[-21.42075920 59.29140854]
[-35.89459229 55.35337067]
[-50.36842346 51.41532898]
[-64.84225464 47.47729111]
[-79.31609344 43.53925323]
[-97.90657806 56.22917938]
[-119.50006866 50.95136261]
[-129.87660217 31.60939598]
[-144.58839417 28.68304253]
[-159.31681824 25.84169579]
[-174.06141663 23.08545303]
[-188.80601501 20.32921028]
[-203.55061340 17.57296753]
[-214.05895996 28.86800957]
[-229.01136780 32.66661453]
[-243.63653564 27.75666237]
[-253.26766968 15.70489883]
[-254.83148193 0.35699844]
[-247.82896423 -13.38957882]
[-234.49461365 -21.14835167]
[-219.08335876 -20.44352150]
[-206.51287842 -11.49999905]
[-200.79437256 2.82837081]
[-186.04977417 5.58461332]
[-171.30517578 8.34085655]
[-156.56057739 11.09709930]
[-149.43440247 9.24389458]
[-141.66203308 13.97126293]
[-126.95025635 16.89761734]
[-122.41049194 10.44680405]
[-116.16500854 5.57360506]
[-108.74121094 2.71434069]
[-100.77329254 2.13421345]
[-92.94802856 3.90282750]
[-85.94561005 7.88649273]
[-80.38050079 13.75812817]
[-76.74755859 21.02404213]
[-75.37805176 29.06541824]
[-60.90422058 33.00345612]
[-46.43038559 36.94149780]
[-31.95655251 40.87953568]
[-17.48271942 44.81757355]
[-3.00888610 48.75561523]
[11.46494675 52.69365311]
[25.93877983 56.63169098]
[40.43511581 60.48608017]
[54.95346451 64.25668335]
[69.47181702 68.02729034]
[83.99016571 71.79789734]
[98.98991394 71.71127319]
[113.46375275 67.77323914]
[127.93758392 63.83519745]
[142.41142273 59.89715958]
[156.88525391 55.95912170]
[165.37986755 37.78791428]
[184.01300049 31.15977287]
[201.56738281 39.63932419]
[215.14569092 33.26517868]
[228.72398376 26.89103317]
[242.30229187 20.51688766]
[243.00398254 7.23940849]
[249.36106873 -4.34153748]
[260.04739380 -11.96349716]
[272.89965820 -14.17415428]
[285.35510254 -10.60759163]
[295.58789062 -21.57527161]
[305.82067871 -32.54294968]
[316.05346680 -43.51063156]
[326.28625488 -54.47830963]
[336.51904297 -65.44599152]
[334.79681396 -85.49732208]
[348.21237183 -100.08451843]
[367.72369385 -100.04435730]
[377.57037354 -111.35994720]
[387.41708374 -122.67553711]
[397.26376343 -133.99113464]
[400.51950073 -142.48571777]
[407.29013062 -145.37969971]
[417.26687622 -156.58081055]
[415.47381592 -175.46913147]
[427.87219238 -189.40495300]
[446.20007324 -189.80780029]
[455.91540527 -201.23635864]
[465.63076782 -212.66491699]
[475.34609985 -224.09349060]
[485.06146240 -235.52204895]
[494.77679443 -246.95060730]
[493.68701172 -262.48928833]
[503.70254517 -273.94107056]
[518.52301025 -274.88424683]
[528.23834229 -286.31280518]
[537.95373535 -297.74139404]
[547.66906738 -309.16995239]
[557.38439941 -320.59851074]
[567.09973145 -332.02706909]
[576.81512451 -343.45562744]
[576.54882812 -356.32717896]
[584.84564209 -365.64184570]
[596.86517334 -366.78347778]
[606.71191406 -378.09906006]
[616.55859375 -389.41464233]
[619.67932129 -407.57949829]
[636.51177979 -412.59732056]
[646.22711182 -424.02590942]
[642.43914795 -439.07351685]
[648.25061035 -453.46124268]
[661.42687988 -461.65667725]
[676.90142822 -460.50854492]
[688.72393799 -450.45828247]
[692.34844971 -435.37045288]
[686.38128662 -421.04663086]
[673.11688232 -412.99459839]
[657.65570068 -414.31054688]
[647.94030762 -402.88198853]
[648.60955811 -390.82687378]
[640.64074707 -381.23007202]
[627.87420654 -379.56796265]
[618.02746582 -368.25238037]
[608.18078613 -356.93676758]
[605.73730469 -339.54312134]
[588.24365234 -333.74029541]
[578.52832031 -322.31170654]
[568.81298828 -310.88314819]
[559.09759521 -299.45458984]
[549.38226318 -288.02603149]
[539.66693115 -276.59747314]
[529.95159912 -265.16891479]
[531.40673828 -250.38993835]
[521.71679688 -238.66134644]
[506.20538330 -237.23526001]
[496.49002075 -225.80670166]
[486.77468872 -214.37814331]
[477.05932617 -202.94956970]
[467.34399414 -191.52101135]
[457.62863159 -180.09245300]
[460.98580933 -169.23309326]
[458.67620850 -157.98161316]
[451.15759277 -149.14062500]
[440.19952393 -144.96873474]
[428.46798706 -146.60408020]
[418.49124146 -135.40296936]
[408.57937622 -124.14443207]
[398.73266602 -112.82884216]
[388.88598633 -101.51325226]
[379.03927612 -90.19766235]
[382.46578979 -80.58784485]
[381.60626221 -70.34085846]
[376.54821777 -61.29549026]
[368.13836670 -55.10248566]
[357.84176636 -52.92339706]
[347.48672485 -55.21319962]
[337.25393677 -44.24551773]
[327.02114868 -33.27783966]
[316.78836060 -22.31015968]
[306.55557251 -11.34247971]
[296.32278442 -0.37480062]
[299.94744873 8.31056118]
[300.59912109 17.69933128]
[298.20916748 26.80217552]
[309.85906982 36.25095367]
[321.50900269 45.69973373]
[333.15890503 55.14851379]
[344.80883789 64.59729004]
[356.45874023 74.04607391]
[368.10867310 83.49485016]
[379.75857544 92.94362640]
[391.40850830 102.39241028]
[403.05841064 111.84118652]
[414.97628784 120.94968414]
[427.15213013 129.71029663]
[439.32800293 138.47091675]
[455.71630859 142.81367493]
[456.08001709 159.76371765]
[439.89306641 164.80545044]
[430.56738281 150.64678955]
[418.39151001 141.88616943]
[406.21566772 133.12553406]
[406.22827148 148.12553406]
[394.58325195 157.58035278]
[379.90563965 154.48713684]
[373.06661987 141.13694763]
[379.13159180 127.41775513]
[393.60964966 123.49110413]
[381.95971680 114.04232788]
[370.30981445 104.59354401]
[358.65988159 95.14476776]
[347.00997925 85.69598389]
[335.36004639 76.24720764]
[323.71014404 66.79843140]
[312.06021118 57.34965134]
[300.41030884 47.90087128]
[288.76037598 38.45209122]
[268.04409790 44.22363281]
[248.67643738 34.09518814]
[235.09812927 40.46933365]
[221.51983643 46.84347916]
[207.94152832 53.21762466]
[207.23239136 63.40774155]
[202.52156067 72.47136688]
[194.58929443 78.90725708]
[197.17506409 93.68270874]
[199.76081848 108.45815277]
[202.34658813 123.23359680]
[215.42344666 132.10890198]
[218.31230164 147.64692688]
[209.29922485 160.62922668]
[193.73153687 163.35363770]
[180.84524536 154.20381165]
[178.28558350 138.60818481]
[187.57113647 125.81935883]
[184.98538208 111.04391479]
[182.39961243 96.26847076]
[179.81385803 81.49301910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 112]
[2 111]
[3 110]
[4 109]
[5 108]
[10 30]
[11 29]
[12 28]
[13 27]
[14 26]
[16 25]
[17 24]
[18 23]
[43 50]
[44 49]
[51 107]
[52 106]
[53 105]
[54 104]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[63 96]
[66 87]
[67 86]
[68 84]
[69 83]
[70 82]
[71 81]
[115 255]
[116 254]
[117 253]
[118 252]
[123 214]
[124 213]
[125 212]
[126 211]
[127 210]
[128 209]
[131 203]
[132 202]
[133 201]
[134 200]
[136 199]
[137 198]
[140 193]
[141 192]
[142 191]
[143 190]
[144 189]
[145 188]
[148 185]
[149 184]
[150 183]
[151 182]
[152 181]
[153 180]
[154 179]
[157 177]
[158 176]
[159 175]
[161 172]
[162 171]
[217 250]
[218 249]
[219 248]
[220 247]
[221 246]
[222 245]
[223 244]
[224 243]
[225 242]
[226 241]
[227 235]
[228 234]
[229 233]
[258 271]
[259 270]
[260 269]
[261 268]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
