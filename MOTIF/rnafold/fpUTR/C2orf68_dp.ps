%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C2orf68)
} def

/sequence { (\
GCGGAGCUCUGUGGGCGGGUGGCUGUUGUUGGGGCCGUCGAGGCGGCGGCGACUCUGCGUCCCCGGCUCCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.023016683 ubox
1 26 0.005131252 ubox
1 38 0.005192667 ubox
2 11 0.023861891 ubox
2 25 0.005614528 ubox
2 28 0.003452406 ubox
2 37 0.005681958 ubox
2 72 0.123638494 ubox
3 10 0.023816149 ubox
3 24 0.005597051 ubox
3 27 0.003411535 ubox
3 36 0.005656123 ubox
3 70 0.997949226 ubox
3 71 0.030384743 ubox
4 9 0.023729612 ubox
4 23 0.005579567 ubox
4 35 0.004557866 ubox
4 69 0.999392325 ubox
4 70 0.021733395 ubox
5 24 0.004181704 ubox
5 68 0.999483840 ubox
6 16 0.004519738 ubox
6 20 0.005292357 ubox
6 23 0.004317589 ubox
6 35 0.004342163 ubox
6 67 0.999320276 ubox
7 15 0.004979497 ubox
7 19 0.005315898 ubox
7 22 0.004317162 ubox
7 33 0.003528822 ubox
7 34 0.005337194 ubox
7 66 0.985480944 ubox
8 14 0.006121242 ubox
8 15 0.004823468 ubox
8 18 0.004480429 ubox
8 19 0.003781108 ubox
8 21 0.003589818 ubox
8 32 0.003524222 ubox
8 33 0.005618755 ubox
8 65 0.815757055 ubox
8 66 0.041779778 ubox
9 13 0.007112346 ubox
9 14 0.007848984 ubox
9 15 0.004181386 ubox
9 17 0.004473991 ubox
9 18 0.007458405 ubox
9 31 0.003682218 ubox
9 32 0.006395504 ubox
9 33 0.003282887 ubox
9 65 0.368649171 ubox
9 66 0.159951312 ubox
10 14 0.003897753 ubox
10 17 0.007491032 ubox
10 31 0.006251573 ubox
10 32 0.003271071 ubox
10 59 0.004543364 ubox
10 65 0.342713082 ubox
11 16 0.007804949 ubox
11 30 0.003857677 ubox
11 58 0.004866623 ubox
11 60 0.005389518 ubox
11 64 0.733376006 ubox
12 57 0.004838350 ubox
12 59 0.004760497 ubox
12 65 0.080192072 ubox
13 56 0.004611219 ubox
13 58 0.003594119 ubox
13 61 0.154642563 ubox
13 62 0.812229185 ubox
13 63 0.404899498 ubox
13 64 0.167020779 ubox
13 68 0.011137485 ubox
13 69 0.015606542 ubox
13 70 0.011807780 ubox
14 24 0.011282666 ubox
14 27 0.024146201 ubox
14 55 0.004129491 ubox
14 60 0.140751940 ubox
14 61 0.813630784 ubox
14 62 0.403556441 ubox
14 63 0.166666908 ubox
14 64 0.022197403 ubox
14 67 0.012418480 ubox
14 68 0.015666749 ubox
14 69 0.011771153 ubox
15 23 0.011929677 ubox
15 26 0.028576796 ubox
15 58 0.496950206 ubox
15 60 0.772168284 ubox
15 61 0.360584070 ubox
15 62 0.147117069 ubox
15 63 0.022093306 ubox
15 67 0.019238891 ubox
16 22 0.011955320 ubox
16 25 0.029450440 ubox
16 57 0.530067558 ubox
16 59 0.828875831 ubox
16 65 0.037530609 ubox
16 66 0.016451109 ubox
17 24 0.029563317 ubox
17 54 0.004964335 ubox
17 55 0.531682736 ubox
17 56 0.478588083 ubox
17 58 0.677152356 ubox
17 61 0.100433243 ubox
17 62 0.022026182 ubox
17 63 0.004262568 ubox
17 64 0.042764200 ubox
18 23 0.029675593 ubox
18 39 0.008154269 ubox
18 53 0.008143803 ubox
18 54 0.835226487 ubox
18 55 0.504542164 ubox
18 56 0.047941275 ubox
18 60 0.090516984 ubox
18 61 0.022621950 ubox
18 62 0.004681425 ubox
18 63 0.042772290 ubox
18 64 0.013135141 ubox
19 38 0.007820415 ubox
19 50 0.004226317 ubox
19 53 0.980194540 ubox
19 54 0.063964130 ubox
19 55 0.044697429 ubox
19 58 0.144252625 ubox
19 60 0.020565714 ubox
19 61 0.004910880 ubox
19 62 0.042746364 ubox
19 63 0.013136717 ubox
20 31 0.004848461 ubox
20 37 0.008024040 ubox
20 49 0.004336837 ubox
20 51 0.004471882 ubox
20 52 0.980033535 ubox
20 57 0.147920197 ubox
20 59 0.013250829 ubox
21 30 0.012750839 ubox
21 36 0.009130619 ubox
21 50 0.004930205 ubox
21 54 0.017864074 ubox
21 55 0.029505951 ubox
21 56 0.156529564 ubox
21 58 0.013826177 ubox
21 61 0.042215221 ubox
21 62 0.011581871 ubox
22 29 0.014865697 ubox
22 35 0.009157849 ubox
22 47 0.004472755 ubox
22 50 0.983506077 ubox
22 53 0.017661572 ubox
22 54 0.024894649 ubox
22 55 0.157938506 ubox
22 58 0.024042896 ubox
22 60 0.042123195 ubox
22 61 0.011592051 ubox
23 28 0.015056762 ubox
23 32 0.005496833 ubox
23 33 0.004100484 ubox
23 34 0.009169821 ubox
23 46 0.004482241 ubox
23 49 0.983632822 ubox
23 57 0.024583541 ubox
23 59 0.042004765 ubox
24 31 0.005459435 ubox
24 32 0.004121676 ubox
24 33 0.009184329 ubox
24 45 0.004507188 ubox
24 48 0.982869950 ubox
24 51 0.016636857 ubox
24 57 0.007349074 ubox
24 59 0.010590571 ubox
25 30 0.004659809 ubox
25 44 0.004591814 ubox
25 47 0.982905699 ubox
25 50 0.017227573 ubox
25 53 0.168292272 ubox
25 56 0.006122279 ubox
25 58 0.033654286 ubox
26 33 0.003742459 ubox
26 43 0.004581625 ubox
26 46 0.982124511 ubox
26 49 0.017221111 ubox
26 52 0.168493405 ubox
26 57 0.033116245 ubox
27 32 0.006259753 ubox
27 33 0.004923440 ubox
27 42 0.003535701 ubox
27 45 0.978335031 ubox
27 48 0.017666550 ubox
27 51 0.168391832 ubox
27 59 0.007186699 ubox
28 44 0.968167899 ubox
28 47 0.019124900 ubox
28 50 0.168003932 ubox
28 53 0.029906738 ubox
28 58 0.023084386 ubox
28 67 0.007723096 ubox
29 41 0.096897593 ubox
29 42 0.311541434 ubox
29 43 0.907347935 ubox
29 46 0.019125341 ubox
29 49 0.167623092 ubox
29 52 0.029907681 ubox
29 57 0.022438318 ubox
29 66 0.007788729 ubox
30 37 0.026533410 ubox
30 40 0.195214857 ubox
30 41 0.437577479 ubox
30 42 0.800367556 ubox
30 45 0.020520150 ubox
30 48 0.165778838 ubox
30 51 0.029731138 ubox
30 65 0.014619976 ubox
31 36 0.032749931 ubox
31 39 0.251392510 ubox
31 44 0.006608043 ubox
31 47 0.156039108 ubox
31 50 0.024016007 ubox
31 54 0.016240116 ubox
31 55 0.025827888 ubox
31 56 0.006449291 ubox
31 63 0.003187476 ubox
31 64 0.030442668 ubox
31 70 0.007367488 ubox
32 38 0.240484875 ubox
32 39 0.629801190 ubox
32 53 0.017152722 ubox
32 54 0.025668237 ubox
32 55 0.006663099 ubox
32 62 0.003211861 ubox
32 63 0.030477455 ubox
32 69 0.007380426 ubox
33 38 0.569966093 ubox
33 39 0.654050479 ubox
33 53 0.025468165 ubox
33 54 0.006302967 ubox
33 61 0.003202728 ubox
33 62 0.030471992 ubox
33 68 0.007376595 ubox
34 38 0.424469792 ubox
34 44 0.226872971 ubox
34 47 0.070585041 ubox
34 50 0.046990981 ubox
34 53 0.004501289 ubox
34 61 0.029294396 ubox
34 67 0.007425694 ubox
35 43 0.231790382 ubox
35 46 0.073066478 ubox
35 49 0.047594810 ubox
35 66 0.007426932 ubox
36 42 0.232311744 ubox
36 45 0.073165714 ubox
36 48 0.047637957 ubox
36 51 0.004098471 ubox
36 59 0.029300273 ubox
36 65 0.007426086 ubox
37 44 0.073058024 ubox
37 47 0.047653907 ubox
37 50 0.004496827 ubox
37 58 0.029485927 ubox
37 64 0.007392534 ubox
38 43 0.069560915 ubox
38 46 0.047638797 ubox
38 49 0.004496455 ubox
38 57 0.029131179 ubox
39 45 0.047632323 ubox
39 48 0.004498933 ubox
40 44 0.044565158 ubox
40 47 0.004446904 ubox
40 55 0.030506716 ubox
40 61 0.007410189 ubox
40 69 0.006666880 ubox
41 54 0.030543480 ubox
41 60 0.007405710 ubox
41 68 0.006693725 ubox
42 53 0.030137195 ubox
42 67 0.006699069 ubox
43 50 0.011167581 ubox
43 58 0.007459438 ubox
44 49 0.011216120 ubox
44 51 0.027307107 ubox
44 57 0.007462380 ubox
44 65 0.006738441 ubox
45 50 0.028148353 ubox
45 56 0.007436630 ubox
45 64 0.006834126 ubox
46 55 0.007414720 ubox
46 63 0.006823297 ubox
48 54 0.003934480 ubox
48 61 0.006687417 ubox
49 53 0.003911943 ubox
49 60 0.006730509 ubox
50 59 0.007231715 ubox
51 58 0.007183915 ubox
51 61 0.010094720 ubox
52 60 0.010129540 ubox
53 59 0.010124885 ubox
59 64 0.004130383 ubox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
8 65 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
20 52 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
showpage
end
%%EOF
