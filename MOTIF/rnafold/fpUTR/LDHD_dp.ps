%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LDHD)
} def

/sequence { (\
UGACUGGUCACCCUGCCACCCAGUGCUCACACCCUCUGGCCAGUGCCUGGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.054282535 ubox
1 18 0.019348615 ubox
1 22 0.383283792 ubox
1 25 0.034321041 ubox
1 29 0.128523562 ubox
1 31 0.046610988 ubox
1 38 0.003490027 ubox
1 45 0.008757419 ubox
1 49 0.007200205 ubox
2 9 0.063694503 ubox
2 14 0.003427935 ubox
2 17 0.022558188 ubox
2 21 0.425302481 ubox
2 24 0.026767577 ubox
2 28 0.150769685 ubox
2 30 0.054586229 ubox
2 36 0.060874332 ubox
2 37 0.006016364 ubox
2 44 0.007382848 ubox
2 48 0.009649988 ubox
3 8 0.056471824 ubox
3 24 0.545045955 ubox
3 27 0.115073063 ubox
3 35 0.058452496 ubox
3 44 0.153637249 ubox
4 23 0.571475893 ubox
4 43 0.157886300 ubox
4 50 0.446558698 ubox
5 15 0.004668064 ubox
5 18 0.522111808 ubox
5 22 0.570824824 ubox
5 25 0.003910828 ubox
5 29 0.050604402 ubox
5 31 0.014011082 ubox
5 42 0.157905664 ubox
5 49 0.441070328 ubox
6 12 0.038548630 ubox
6 13 0.101460406 ubox
6 14 0.017145929 ubox
6 17 0.550057849 ubox
6 20 0.114878229 ubox
6 21 0.559263695 ubox
6 27 0.024450674 ubox
6 28 0.056627652 ubox
6 30 0.015092126 ubox
6 33 0.075614495 ubox
6 34 0.028483997 ubox
6 35 0.005209441 ubox
6 36 0.004179424 ubox
6 37 0.005837371 ubox
6 41 0.157940293 ubox
6 47 0.361496159 ubox
6 48 0.391563718 ubox
6 52 0.128864029 ubox
7 11 0.038144463 ubox
7 12 0.100898082 ubox
7 13 0.018025515 ubox
7 16 0.550487386 ubox
7 19 0.158629978 ubox
7 20 0.546105743 ubox
7 26 0.034176377 ubox
7 27 0.050052510 ubox
7 30 0.009358788 ubox
7 32 0.075900567 ubox
7 33 0.028190465 ubox
7 34 0.005892332 ubox
7 35 0.003489762 ubox
7 36 0.006063530 ubox
7 40 0.156713305 ubox
7 46 0.362506142 ubox
7 47 0.392450568 ubox
7 51 0.145394518 ubox
8 15 0.488835166 ubox
8 18 0.182506354 ubox
8 25 0.012009227 ubox
8 29 0.009293535 ubox
8 31 0.073937999 ubox
8 39 0.154668283 ubox
8 45 0.087250503 ubox
8 50 0.145388580 ubox
9 15 0.270806640 ubox
9 25 0.069250107 ubox
9 38 0.154213690 ubox
9 45 0.527009166 ubox
9 49 0.144784010 ubox
10 14 0.222559255 ubox
10 24 0.068568849 ubox
10 37 0.146060706 ubox
10 44 0.530542070 ubox
10 48 0.140146009 ubox
11 23 0.061840128 ubox
11 43 0.520171094 ubox
11 50 0.010536591 ubox
12 49 0.010577010 ubox
12 50 0.006468554 ubox
13 23 0.069495538 ubox
13 43 0.181572040 ubox
13 49 0.006537068 ubox
14 22 0.083356962 ubox
14 25 0.019589191 ubox
14 29 0.042731004 ubox
14 31 0.042468445 ubox
14 42 0.208874593 ubox
14 45 0.006774400 ubox
15 21 0.085012697 ubox
15 24 0.029482063 ubox
15 26 0.107537368 ubox
15 28 0.044029948 ubox
15 30 0.043198118 ubox
15 40 0.533231378 ubox
15 41 0.150970579 ubox
15 44 0.009724435 ubox
15 46 0.012571844 ubox
15 51 0.152604796 ubox
16 23 0.029899233 ubox
16 25 0.090211339 ubox
16 39 0.555202675 ubox
16 43 0.009810891 ubox
16 45 0.009434378 ubox
16 50 0.152853711 ubox
17 25 0.090999452 ubox
17 38 0.555279778 ubox
17 45 0.010775788 ubox
17 49 0.152824767 ubox
18 24 0.108446965 ubox
18 37 0.535663782 ubox
18 44 0.013935546 ubox
18 48 0.150903743 ubox
19 23 0.107633002 ubox
19 39 0.008443425 ubox
19 43 0.014193531 ubox
19 50 0.025179656 ubox
20 38 0.011329914 ubox
20 39 0.060378598 ubox
20 49 0.022334433 ubox
20 50 0.186036698 ubox
21 38 0.118553772 ubox
21 45 0.150061892 ubox
21 49 0.188040580 ubox
22 35 0.041580188 ubox
22 37 0.120073411 ubox
22 44 0.149898436 ubox
22 48 0.188318048 ubox
22 52 0.003603643 ubox
23 30 0.069856649 ubox
23 32 0.712112964 ubox
23 34 0.035536345 ubox
23 36 0.114176933 ubox
23 46 0.055497193 ubox
23 47 0.181704397 ubox
23 51 0.004355767 ubox
24 29 0.065549648 ubox
24 31 0.715693027 ubox
24 42 0.149201267 ubox
24 45 0.073943261 ubox
24 50 0.004281073 ubox
25 30 0.713551171 ubox
25 37 0.004227635 ubox
25 40 0.060131798 ubox
25 41 0.137813173 ubox
25 44 0.075494857 ubox
25 46 0.173298812 ubox
25 51 0.036753685 ubox
26 39 0.083071992 ubox
26 43 0.075709969 ubox
26 45 0.171107453 ubox
26 50 0.036737796 ubox
27 38 0.050871256 ubox
27 39 0.115958473 ubox
27 42 0.073160886 ubox
27 49 0.031295921 ubox
28 38 0.147437650 ubox
28 45 0.042186876 ubox
28 49 0.017666531 ubox
29 37 0.138408384 ubox
29 44 0.065825663 ubox
29 48 0.017360549 ubox
30 38 0.091253499 ubox
30 43 0.068416303 ubox
30 45 0.017189189 ubox
30 49 0.003295280 ubox
31 37 0.085077078 ubox
31 44 0.019437406 ubox
31 48 0.003405610 ubox
32 39 0.166919246 ubox
32 43 0.019315197 ubox
32 50 0.011161546 ubox
33 38 0.168112776 ubox
33 39 0.063699200 ubox
33 49 0.011017360 ubox
33 50 0.032796227 ubox
34 38 0.065241258 ubox
34 43 0.003398271 ubox
34 49 0.033066873 ubox
34 50 0.015321577 ubox
35 42 0.003445798 ubox
35 49 0.013615258 ubox
35 50 0.024037842 ubox
36 49 0.032245329 ubox
36 50 0.010504625 ubox
37 49 0.010018970 ubox
38 47 0.061902177 ubox
38 52 0.675395591 ubox
39 46 0.062039379 ubox
39 51 0.774187476 ubox
40 45 0.061772866 ubox
40 50 0.776675565 ubox
41 49 0.776750693 ubox
42 48 0.774830921 ubox
42 52 0.007466265 ubox
43 47 0.757848837 ubox
43 51 0.008459088 ubox
44 50 0.008464362 ubox
45 51 0.073880592 ubox
46 50 0.073470082 ubox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
showpage
end
%%EOF
