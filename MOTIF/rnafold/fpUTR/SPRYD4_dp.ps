%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:49:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPRYD4)
} def

/sequence { (\
ACGUGCUAGGGGAGCGGGCGGGCAGAUGGCUGUGUCUGUAAGCGGGAGGCGUGCCCGGUUCAUCCAAGGCGCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 71 0.058346309 ubox
3 70 0.059369050 ubox
3 72 0.996385838 ubox
4 69 0.056670639 ubox
4 71 0.996877474 ubox
4 73 0.006738097 ubox
5 70 0.998043829 ubox
5 72 0.007379113 ubox
6 68 0.152406844 ubox
6 69 0.987855631 ubox
6 71 0.007206162 ubox
7 67 0.204473430 ubox
7 68 0.958014190 ubox
9 64 0.222157648 ubox
9 65 0.750702053 ubox
10 61 0.005256629 ubox
10 63 0.199571559 ubox
10 64 0.750754216 ubox
10 65 0.610895071 ubox
11 60 0.005226293 ubox
11 61 0.435236611 ubox
11 63 0.597211860 ubox
11 64 0.599804626 ubox
11 65 0.047938334 ubox
12 59 0.006755218 ubox
12 60 0.561169216 ubox
12 61 0.761395352 ubox
12 63 0.289783596 ubox
12 64 0.049033002 ubox
13 59 0.628042374 ubox
13 60 0.757429557 ubox
13 63 0.046794925 ubox
14 39 0.005998305 ubox
14 59 0.734859469 ubox
15 38 0.006139967 ubox
15 57 0.851306177 ubox
15 58 0.521412362 ubox
16 37 0.006221386 ubox
16 56 0.996938878 ubox
16 60 0.034060769 ubox
16 61 0.027841172 ubox
17 36 0.006235631 ubox
17 55 0.997985091 ubox
17 56 0.022558432 ubox
17 59 0.038955569 ubox
17 60 0.027387913 ubox
18 35 0.006229484 ubox
18 39 0.005224838 ubox
18 54 0.998110596 ubox
18 55 0.015991077 ubox
18 59 0.026432694 ubox
19 34 0.006223540 ubox
19 38 0.006566059 ubox
19 53 0.998188822 ubox
19 57 0.055423631 ubox
19 58 0.018776106 ubox
20 33 0.004161055 ubox
20 36 0.003397020 ubox
20 37 0.014753977 ubox
20 52 0.988430660 ubox
20 56 0.058540948 ubox
21 31 0.019918274 ubox
21 36 0.015807259 ubox
21 55 0.058572710 ubox
22 30 0.022033375 ubox
22 33 0.014758797 ubox
22 35 0.015709438 ubox
22 39 0.131577564 ubox
22 50 0.988605009 ubox
22 54 0.058576707 ubox
23 29 0.022044882 ubox
23 32 0.016414097 ubox
23 34 0.015722004 ubox
23 38 0.135414448 ubox
23 49 0.988075748 ubox
23 53 0.058536008 ubox
24 31 0.018647481 ubox
24 33 0.015633521 ubox
24 37 0.139726330 ubox
24 52 0.053479461 ubox
25 30 0.018860185 ubox
25 36 0.139881407 ubox
26 33 0.003185453 ubox
26 35 0.139802901 ubox
26 39 0.006792161 ubox
26 52 0.018877870 ubox
27 32 0.003299374 ubox
27 34 0.137842566 ubox
27 38 0.006742662 ubox
27 44 0.092215360 ubox
27 51 0.029813820 ubox
28 33 0.108913602 ubox
28 36 0.008428582 ubox
28 37 0.006093652 ubox
28 43 0.070269210 ubox
28 50 0.032357495 ubox
29 35 0.008974795 ubox
29 36 0.006064586 ubox
29 39 0.015551135 ubox
29 43 0.891261693 ubox
29 50 0.015767858 ubox
29 52 0.007117573 ubox
30 34 0.009437586 ubox
30 38 0.015711190 ubox
30 42 0.893666478 ubox
30 45 0.418854657 ubox
30 46 0.023788724 ubox
30 48 0.033913957 ubox
30 49 0.016543991 ubox
30 51 0.008713877 ubox
31 38 0.008160547 ubox
31 40 0.078835895 ubox
31 41 0.885542135 ubox
31 44 0.418986427 ubox
31 45 0.019869103 ubox
31 47 0.033319639 ubox
31 48 0.016074683 ubox
31 51 0.024548060 ubox
32 37 0.021524925 ubox
32 39 0.099586480 ubox
32 43 0.419475833 ubox
32 50 0.032662535 ubox
33 38 0.083429469 ubox
33 40 0.135931288 ubox
33 42 0.418376545 ubox
33 44 0.026429920 ubox
33 49 0.032712452 ubox
33 51 0.007595302 ubox
34 39 0.133137753 ubox
34 43 0.030373570 ubox
34 50 0.015564727 ubox
35 42 0.028179292 ubox
35 45 0.003638919 ubox
35 46 0.039085212 ubox
35 47 0.033281301 ubox
35 49 0.015572368 ubox
36 42 0.013803574 ubox
36 44 0.003889171 ubox
36 45 0.041837662 ubox
36 46 0.032858016 ubox
36 48 0.015699787 ubox
37 41 0.013479116 ubox
37 44 0.042337602 ubox
37 45 0.032004092 ubox
37 47 0.015616573 ubox
38 43 0.042408615 ubox
40 52 0.011323244 ubox
40 60 0.004792966 ubox
41 59 0.005575301 ubox
42 50 0.111839380 ubox
42 52 0.067015285 ubox
43 49 0.112068326 ubox
43 51 0.074709468 ubox
43 57 0.007936979 ubox
44 50 0.074852179 ubox
44 56 0.008327339 ubox
45 55 0.008333391 ubox
46 54 0.008319400 ubox
3 72 0.9500000 lbox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
6 69 0.9500000 lbox
7 68 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
11 63 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
20 52 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
showpage
end
%%EOF
