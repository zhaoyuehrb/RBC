%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:48:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACUCUGGGAAGGAAAGAAAGGCUUAGGACCCAACCAGCAUUCCCCCUGGCACUGCGGGGGCCUGGCCAGCUCAUGGCGUUCCCUGAGCCUGUUCCCCAACUGUGAAAGGGGGUGAUGAUCUUCACCUCCCGGCAUCCUGAGCGGCCAAGCAGGUUGGGGGCGCCUGCCCCCCACUAGGCCAAGUGGAGGGGGUCCCUCCGUCCA\
) } def
/len { sequence length } bind def

/coor [
[146.64974976 192.76283264]
[151.95829773 178.73359680]
[163.36068726 168.98754883]
[178.04531860 165.92784119]
[192.39021301 170.30831909]
[180.72352600 160.88026428]
[169.05682373 151.45219421]
[161.87687683 149.69261169]
[157.28654480 141.79257202]
[145.76358032 132.18937683]
[134.24061584 122.58618927]
[122.71765137 112.98299408]
[96.74944305 122.79094696]
[80.67295837 104.64484406]
[65.84372711 102.38787842]
[57.46763992 109.33152008]
[46.87086868 110.49382782]
[37.57979202 105.73097992]
[32.55334473 96.83118439]
[17.79904747 94.12735748]
[3.04474831 91.42353058]
[-11.72954845 88.83120728]
[-26.52300072 86.35052490]
[-41.31645203 83.86985016]
[-56.10990524 81.38916779]
[-70.90335846 78.90848541]
[-85.69680786 76.42781067]
[-100.49026489 73.94712830]
[-115.28371429 71.46645355]
[-130.07716370 68.98577118]
[-136.19000244 80.96627808]
[-145.99432373 90.45912170]
[-158.52238464 96.35002899]
[-172.47879028 97.88913727]
[-186.37413025 94.78405762]
[-198.68405151 87.24491882]
[-208.01626587 75.97502899]
[-213.26771545 62.10677719]
[-228.26600647 61.88022995]
[-243.26429749 61.65367889]
[-248.07730103 68.48060608]
[-255.11718750 72.79930878]
[-263.19796753 73.96932220]
[-270.99221802 71.87345123]
[-277.24899292 66.92493439]
[-280.99468994 59.98844528]
[-295.95196533 58.85673904]
[-310.90921021 57.72502899]
[-325.86645508 56.59331894]
[-340.82369995 55.46160889]
[-355.78094482 54.32989883]
[-367.60269165 64.81901550]
[-383.37365723 63.79330826]
[-393.73721313 51.86130905]
[-392.54483032 36.10206604]
[-380.50390625 25.86525726]
[-364.75817871 27.22419739]
[-354.64923096 39.37265396]
[-339.69198608 40.50436401]
[-324.73474121 41.63607025]
[-309.77749634 42.76778030]
[-294.82025146 43.89949036]
[-279.86300659 45.03120041]
[-261.37564087 33.77865219]
[-243.03775024 46.65539169]
[-228.03945923 46.88193893]
[-213.04116821 47.10848999]
[-208.04118347 32.96634674]
[-219.84893799 23.71556473]
[-231.65669250 14.46478081]
[-243.46444702 5.21399784]
[-259.49975586 5.71260452]
[-269.77719116 -6.60622549]
[-266.41281128 -22.29254150]
[-251.98745728 -29.31314278]
[-237.56703186 -22.28242493]
[-234.21365356 -6.59375429]
[-222.40589905 2.65702868]
[-210.59815979 11.90781212]
[-198.79040527 21.15859413]
[-180.47483826 12.10060120]
[-160.47782898 12.07670689]
[-142.92352295 20.70703697]
[-131.26287842 35.86621857]
[-127.59648895 54.19231796]
[-112.80303192 56.67299652]
[-98.00958252 59.15367889]
[-83.21613312 61.63435745]
[-68.42267609 64.11503601]
[-53.62922668 66.59571838]
[-38.83577347 69.07639313]
[-24.04232025 71.55707550]
[-9.24886894 74.03775787]
[-2.13060570 72.04319763]
[5.74857378 76.66923523]
[20.50287247 79.37306213]
[35.25717163 82.07688904]
[52.94533157 74.26895905]
[68.10069275 87.55864716]
[82.92992401 89.81561279]
[87.78013611 82.37176514]
[95.89138794 77.34801483]
[106.01994324 76.15444946]
[116.33063507 79.55592346]
[123.50128174 66.38087463]
[130.67193604 53.20583344]
[125.15081024 42.67396164]
[125.39775848 30.90513039]
[131.23573303 20.82165146]
[141.11372375 14.87149429]
[152.51712036 14.43429852]
[160.08242798 1.48184109]
[167.64773560 -11.47061634]
[175.21304321 -24.42307281]
[182.77835083 -37.37553024]
[190.34365845 -50.32798767]
[197.90896606 -63.28044510]
[205.47427368 -76.23290253]
[201.21881104 -91.45349884]
[209.04502869 -105.18396759]
[224.30978394 -109.27826691]
[237.95674133 -101.30731201]
[241.88941956 -86.00013733]
[233.77462769 -72.43821716]
[218.42672729 -68.66759491]
[210.86141968 -55.71513748]
[203.29611206 -42.76268005]
[195.73080444 -29.81022453]
[188.16549683 -16.85776711]
[180.60018921 -3.90530992]
[173.03488159 9.04714680]
[165.46958923 21.99960518]
[171.17680359 39.39159775]
[162.20722961 55.71318817]
[143.84698486 60.37648773]
[136.67633057 73.55152893]
[129.50567627 86.72657013]
[132.32084656 101.46002960]
[143.84381104 111.06322479]
[155.36677551 120.66641998]
[166.88973999 130.26960754]
[178.48489380 139.78550720]
[190.15158081 149.21357727]
[201.81826782 158.64163208]
[215.95816040 144.19801331]
[243.25260925 145.47633362]
[257.76086426 149.28562927]
[272.26910400 153.09492493]
[286.77734375 156.90420532]
[293.08428955 151.42749023]
[300.95312500 148.91903687]
[309.07913208 149.71688843]
[316.14529419 153.61714172]
[321.03601074 159.91920471]
[323.01287842 167.55053711]
[337.26464844 172.22886658]
[351.51641846 176.90719604]
[367.04141235 173.85995483]
[376.72064209 185.18078613]
[390.97244263 189.85911560]
[405.22421265 194.53744507]
[419.47598267 199.21577454]
[433.72778320 203.89410400]
[447.97955322 208.57243347]
[463.91091919 204.68356323]
[475.04736328 216.72148132]
[469.93267822 232.30262756]
[453.82839966 235.39843750]
[443.30123901 222.82420349]
[429.04943848 218.14588928]
[414.79766846 213.46755981]
[400.54589844 208.78923035]
[386.29409790 204.11090088]
[372.04232788 199.43257141]
[357.53674316 202.81443787]
[346.83810425 191.15896606]
[332.58633423 186.48063660]
[318.33453369 181.80230713]
[297.69146729 188.30357361]
[282.96804810 171.41246033]
[268.45980835 167.60316467]
[253.95156860 163.79388428]
[239.44331360 159.98458862]
[234.51243591 165.63581848]
[245.81472778 175.49777222]
[235.95257568 186.79989624]
[224.65066528 176.93827820]
[219.71977234 182.58950806]
[225.46003723 196.44769287]
[231.20028687 210.30589294]
[236.94053650 224.16407776]
[242.68078613 238.02227783]
[248.42103577 251.88046265]
[260.06851196 264.20007324]
[251.45468140 278.80276489]
[235.03813171 274.56799316]
[234.56285095 257.62072754]
[228.82258606 243.76252747]
[223.08233643 229.90432739]
[217.34208679 216.04614258]
[211.60183716 202.18794250]
[205.86158752 188.32975769]
[206.00231934 203.32908630]
[198.91072083 216.54685974]
[186.33546448 224.72383118]
[171.37731934 225.84370422]
[157.72468567 219.63038635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 144]
[6 143]
[7 142]
[9 141]
[10 140]
[11 139]
[12 138]
[14 100]
[15 99]
[19 97]
[20 96]
[21 95]
[22 93]
[23 92]
[24 91]
[25 90]
[26 89]
[27 88]
[28 87]
[29 86]
[30 85]
[38 67]
[39 66]
[40 65]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[68 80]
[69 79]
[70 78]
[71 77]
[104 137]
[105 136]
[106 135]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
[117 126]
[118 125]
[146 183]
[147 182]
[148 181]
[149 180]
[155 178]
[156 177]
[157 176]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
[164 169]
[188 202]
[189 201]
[190 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
