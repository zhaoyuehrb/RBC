%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGGGGCGCCCCGGCCUAAGCGGGACUAGGAGGGCGCGCCACCCGCUUCCGCUGCCCGCCGGGGAAUCCCCCGGGCUGGCGCGCAGGGAAGUUCCCGAACGCGCGGGCAUAAAAGGGCAGCCGGCGCCCGCGCGCCACAGCUCUGCAGCUCGUGGCAGCGGCGCAGCGCUCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[83.73570251 138.55282593]
[78.19084167 135.71006775]
[73.12961578 132.07539368]
[61.59207916 141.66107178]
[50.05454254 151.24674988]
[38.51700592 160.83242798]
[27.06403160 170.51898193]
[15.69649982 180.30566406]
[4.32896852 190.09236145]
[-7.03856277 199.87904358]
[-18.40609360 209.66572571]
[-29.68730736 219.55178833]
[-40.88133240 229.53646851]
[-52.07535553 239.52114868]
[-53.59460449 252.34867859]
[-63.14816666 260.43438721]
[-75.24884033 259.85015869]
[-86.61637115 269.63684082]
[-97.98390198 279.42352295]
[-109.35143280 289.21020508]
[-107.93874359 304.66284180]
[-115.90758514 317.97738647]
[-130.19378662 324.03411865]
[-145.30400085 320.50411987]
[-155.42805481 308.74475098]
[-156.67303467 293.27767944]
[-148.56022644 280.05038452]
[-134.20915222 274.14895630]
[-119.13812256 277.84268188]
[-107.77059174 268.05599976]
[-96.40306091 258.26928711]
[-85.03553009 248.48262024]
[-80.16059113 231.63720703]
[-62.06003571 228.32711792]
[-50.86600876 218.34245300]
[-39.67198563 208.35777283]
[-36.76479340 201.53906250]
[-28.19278145 198.29820251]
[-16.82524872 188.51152039]
[-5.45771790 178.72482300]
[5.90981340 168.93814087]
[17.27734375 159.15145874]
[20.30375671 152.38482666]
[28.93132591 149.29489136]
[40.46886063 139.70921326]
[52.00639725 130.12353516]
[63.54393387 120.53784943]
[59.02915955 108.49931335]
[58.38272095 95.65829468]
[61.66566086 83.22720337]
[68.56800842 72.37975311]
[78.43806458 64.14012146]
[90.34393311 59.28626251]
[89.55451202 44.30704880]
[88.76509094 29.32783508]
[87.97566986 14.34862232]
[87.18624878 -0.63059008]
[86.39682770 -15.60980320]
[85.60740662 -30.58901596]
[63.32863617 -46.05820084]
[63.84444427 -76.13018036]
[53.76191711 -87.23616028]
[43.67939377 -98.34213257]
[33.59687042 -109.44811249]
[23.51434517 -120.55408478]
[13.43181992 -131.66006470]
[-2.34191060 -136.14575195]
[-6.08110714 -152.11293030]
[6.06079483 -163.13591003]
[21.59324837 -157.87521362]
[24.53779602 -141.74258423]
[34.62031937 -130.63661194]
[44.70284653 -119.53063202]
[54.78536987 -108.42465973]
[64.86789703 -97.31867981]
[74.95041656 -86.21270752]
[89.28770447 -90.62205505]
[91.38688660 -105.47444153]
[93.48606873 -120.32682800]
[87.75617981 -135.07398987]
[97.19846344 -146.59321594]
[99.29764557 -161.44561768]
[101.39682770 -176.29800415]
[103.49600983 -191.15039062]
[105.59519196 -206.00277710]
[94.82621002 -219.77093506]
[97.28378296 -236.73594666]
[110.96775055 -246.49029541]
[112.80595398 -261.37722778]
[114.64414978 -276.26416016]
[116.48235321 -291.15112305]
[112.42262268 -307.61181641]
[127.11619568 -316.06967163]
[139.31109619 -304.29171753]
[131.36929321 -289.31292725]
[129.53109741 -274.42596436]
[127.69289398 -259.53903198]
[125.85469055 -244.65208435]
[135.13348389 -235.68724060]
[137.58232117 -222.82133484]
[132.08464050 -210.71994019]
[120.44757843 -203.90359497]
[118.34839630 -189.05120850]
[116.24921417 -174.19882202]
[114.15003204 -159.34643555]
[112.05084991 -144.49403381]
[117.93088531 -130.80921936]
[108.33845520 -118.22764587]
[106.23927307 -103.37525940]
[104.14009094 -88.52287292]
[113.45728302 -81.73851013]
[119.71091461 -72.43230438]
[122.32068634 -61.85044098]
[121.17745972 -51.32662582]
[116.63200378 -42.11440659]
[109.42746735 -35.23786926]
[100.58661652 -31.37843704]
[101.37603760 -16.39922333]
[102.16545868 -1.42001104]
[102.95487976 13.55920124]
[103.74430084 28.53841400]
[104.53372192 43.51762772]
[105.32314301 58.49684143]
[126.50703430 67.62369537]
[139.63583374 86.58921814]
[140.71989441 109.63008118]
[154.46205139 115.64282227]
[168.20420837 121.65556335]
[181.94636536 127.66830444]
[195.68853760 133.68104553]
[204.83450317 134.25892639]
[209.61764526 139.92178345]
[223.25216675 146.17477417]
[235.61302185 142.42471313]
[246.85023499 147.93600464]
[251.16552734 159.25614929]
[264.68820190 165.74746704]
[278.21090698 172.23876953]
[291.73358154 178.73007202]
[305.25625610 185.22138977]
[318.83538818 191.59378052]
[332.46990967 197.84677124]
[346.10443115 204.09976196]
[359.73895264 210.35273743]
[376.00683594 208.28207397]
[385.71731567 221.49716187]
[378.88107300 236.40345764]
[362.53063965 237.66665649]
[353.48596191 223.98725891]
[339.85144043 217.73426819]
[326.21691895 211.48129272]
[312.58239746 205.22830200]
[305.17013550 205.29817200]
[298.76495361 198.74406433]
[285.24227905 192.25276184]
[271.71957397 185.76144409]
[258.19689941 179.27014160]
[244.67422485 172.77883911]
[227.28729248 175.06515503]
[216.99917603 159.80929565]
[203.36465454 153.55630493]
[189.67579651 147.42320251]
[175.93363953 141.41046143]
[162.19146729 135.39772034]
[148.44931030 129.38497925]
[134.70715332 123.37224579]
[126.73966217 132.18444824]
[116.61669159 138.40226746]
[120.00947571 153.01351929]
[133.55374146 161.15776062]
[137.29101562 176.51380920]
[129.00402832 189.97120667]
[113.60932159 193.54591370]
[100.24029541 185.11712646]
[96.82854462 169.68548584]
[105.39821625 156.40631104]
[102.00542450 141.79505920]
[95.77650452 141.62944031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 47]
[4 46]
[5 45]
[6 44]
[7 42]
[8 41]
[9 40]
[10 39]
[11 38]
[12 36]
[13 35]
[14 34]
[17 32]
[18 31]
[19 30]
[20 29]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[77 110]
[78 109]
[79 108]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[88 98]
[89 97]
[90 96]
[91 95]
[126 166]
[127 165]
[128 164]
[129 163]
[130 162]
[132 161]
[133 160]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[141 152]
[142 151]
[143 150]
[144 149]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
