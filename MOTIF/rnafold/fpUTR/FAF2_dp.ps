%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAF2)
} def

/sequence { (\
AGUUCCGGCGGGUGACGGUGCGGACGGGUCAGGAGCGUAGAGGCGGCGGCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.020734328 ubox
2 13 0.003971651 ubox
2 16 0.052041882 ubox
2 21 0.141642065 ubox
2 25 0.695765466 ubox
2 36 0.508623649 ubox
2 44 0.067137951 ubox
2 47 0.074168477 ubox
2 50 0.198580120 ubox
3 8 0.019762727 ubox
3 12 0.009828652 ubox
3 15 0.055777545 ubox
3 20 0.139106372 ubox
3 23 0.006119950 ubox
3 24 0.687561206 ubox
3 27 0.008444901 ubox
3 34 0.006943244 ubox
3 35 0.509385592 ubox
3 40 0.013886682 ubox
3 41 0.026813683 ubox
3 42 0.139263061 ubox
3 43 0.059251629 ubox
3 46 0.073314066 ubox
3 49 0.191639320 ubox
3 52 0.123735443 ubox
3 53 0.019518725 ubox
4 11 0.013089956 ubox
4 12 0.043580378 ubox
4 14 0.052912308 ubox
4 15 0.007953371 ubox
4 22 0.008524203 ubox
4 23 0.678139184 ubox
4 24 0.194342426 ubox
4 26 0.003281754 ubox
4 28 0.025240386 ubox
4 33 0.007311499 ubox
4 34 0.511112961 ubox
4 39 0.015499302 ubox
4 40 0.027727403 ubox
4 41 0.173304116 ubox
4 42 0.045510995 ubox
4 43 0.007979565 ubox
4 45 0.067439301 ubox
4 48 0.177968856 ubox
4 49 0.005580830 ubox
4 51 0.141024988 ubox
4 52 0.022300895 ubox
5 10 0.014212696 ubox
5 11 0.060348912 ubox
5 12 0.136338120 ubox
5 14 0.007781371 ubox
5 18 0.147751673 ubox
5 22 0.677876548 ubox
5 23 0.234707398 ubox
5 27 0.089080486 ubox
5 32 0.008042701 ubox
5 33 0.511568411 ubox
5 40 0.176485827 ubox
5 42 0.017734432 ubox
5 43 0.075834029 ubox
5 45 0.003259375 ubox
5 46 0.194517300 ubox
5 48 0.004720577 ubox
5 49 0.264555785 ubox
6 10 0.059991514 ubox
6 11 0.137408309 ubox
6 14 0.009846751 ubox
6 17 0.148056879 ubox
6 20 0.673782568 ubox
6 22 0.234751367 ubox
6 26 0.089285479 ubox
6 32 0.511286575 ubox
6 37 0.041994030 ubox
6 42 0.076485654 ubox
6 45 0.194816455 ubox
6 48 0.267312301 ubox
7 13 0.010031020 ubox
7 16 0.148042272 ubox
7 19 0.671818731 ubox
7 21 0.213124497 ubox
7 25 0.089081631 ubox
7 30 0.441359509 ubox
7 36 0.032657277 ubox
7 44 0.192935730 ubox
7 47 0.266833306 ubox
8 19 0.160678709 ubox
8 21 0.105994925 ubox
8 29 0.449179374 ubox
8 36 0.196091747 ubox
8 38 0.232401518 ubox
8 44 0.018411714 ubox
8 47 0.016879386 ubox
8 50 0.016226052 ubox
9 17 0.686514820 ubox
9 18 0.162401287 ubox
9 20 0.139346069 ubox
9 22 0.070936537 ubox
9 26 0.080404020 ubox
9 28 0.448029977 ubox
9 35 0.198400115 ubox
9 37 0.233984463 ubox
9 43 0.023487039 ubox
9 45 0.261120511 ubox
9 46 0.022494723 ubox
9 49 0.016156603 ubox
10 16 0.687804566 ubox
10 19 0.136670717 ubox
10 21 0.071687227 ubox
10 25 0.091083458 ubox
10 30 0.027295512 ubox
10 36 0.233875792 ubox
10 44 0.243202819 ubox
10 47 0.003202599 ubox
11 29 0.027167904 ubox
11 30 0.008533960 ubox
12 19 0.059966791 ubox
12 21 0.084739679 ubox
12 25 0.379958138 ubox
12 29 0.008366309 ubox
12 36 0.009609687 ubox
12 44 0.015239826 ubox
12 47 0.003975714 ubox
12 50 0.021155601 ubox
13 18 0.037665520 ubox
13 20 0.083228600 ubox
13 22 0.117854987 ubox
13 24 0.373047494 ubox
13 26 0.052220231 ubox
13 28 0.004627372 ubox
13 31 0.420254988 ubox
13 35 0.007979532 ubox
13 37 0.004425551 ubox
13 39 0.033191321 ubox
13 43 0.016653177 ubox
13 45 0.003895234 ubox
13 46 0.003602748 ubox
13 49 0.020387035 ubox
13 51 0.113744713 ubox
14 19 0.046543474 ubox
14 21 0.124845383 ubox
14 25 0.059889515 ubox
14 30 0.425678871 ubox
14 36 0.004861939 ubox
14 38 0.024006719 ubox
14 44 0.004820169 ubox
14 50 0.122561234 ubox
15 29 0.425576730 ubox
15 38 0.168651430 ubox
16 22 0.335867464 ubox
16 26 0.049815658 ubox
16 28 0.424600890 ubox
16 37 0.171568071 ubox
16 48 0.155062977 ubox
17 21 0.315049796 ubox
17 25 0.056800036 ubox
17 36 0.168416032 ubox
17 47 0.163282174 ubox
18 25 0.394629816 ubox
18 36 0.042733749 ubox
18 38 0.015699078 ubox
18 44 0.004705928 ubox
18 47 0.008544368 ubox
19 24 0.391271933 ubox
19 26 0.077772406 ubox
19 31 0.028635818 ubox
19 35 0.050833027 ubox
19 37 0.024855530 ubox
19 39 0.043650755 ubox
19 43 0.004919843 ubox
19 45 0.163108150 ubox
19 46 0.006124431 ubox
19 51 0.029603468 ubox
20 25 0.080250801 ubox
20 29 0.058353055 ubox
20 30 0.033351964 ubox
20 36 0.030093278 ubox
20 38 0.044447899 ubox
20 44 0.164317240 ubox
20 47 0.004166443 ubox
20 50 0.032906697 ubox
21 28 0.068095584 ubox
21 35 0.030583569 ubox
21 37 0.044505112 ubox
21 43 0.164291239 ubox
21 46 0.004101418 ubox
21 48 0.006054409 ubox
21 49 0.032544763 ubox
22 30 0.030270068 ubox
22 36 0.044401194 ubox
22 47 0.008188727 ubox
23 29 0.025968350 ubox
23 30 0.150479303 ubox
24 29 0.133475821 ubox
24 38 0.165362081 ubox
25 37 0.167193971 ubox
25 45 0.031184720 ubox
25 48 0.035932812 ubox
26 36 0.166991652 ubox
26 44 0.031007514 ubox
26 47 0.038430246 ubox
28 36 0.044267464 ubox
28 44 0.050105416 ubox
28 47 0.167410750 ubox
28 50 0.686599358 ubox
29 35 0.043520218 ubox
29 41 0.032434420 ubox
29 43 0.050158051 ubox
29 46 0.167417548 ubox
29 49 0.686869289 ubox
30 40 0.033329906 ubox
30 42 0.050236566 ubox
30 45 0.166569180 ubox
30 48 0.681902685 ubox
35 44 0.691292597 ubox
35 47 0.145224545 ubox
35 50 0.069853713 ubox
36 43 0.692007245 ubox
36 45 0.205654533 ubox
36 46 0.116635788 ubox
36 48 0.066549168 ubox
36 49 0.057176759 ubox
37 44 0.235407684 ubox
37 47 0.089724285 ubox
37 50 0.029789475 ubox
38 43 0.229521291 ubox
38 46 0.088915864 ubox
38 49 0.029387524 ubox
43 50 0.535460810 ubox
44 49 0.535954402 ubox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
6 20 0.9500000 lbox
7 19 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
showpage
end
%%EOF
