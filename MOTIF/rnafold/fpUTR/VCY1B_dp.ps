%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VCY1B)
} def

/sequence { (\
GGGGUAUACACAGGGAGGCCAGGCAGCCUGGAGUUAGUCGACCGUUGCGAGACGUUGAGCUGCGGCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.088261313 ubox
1 28 0.005706850 ubox
1 29 0.007296159 ubox
1 39 0.066224052 ubox
1 43 0.105429121 ubox
1 46 0.004421533 ubox
1 56 0.017926265 ubox
1 61 0.003720291 ubox
2 19 0.088146101 ubox
2 20 0.076043580 ubox
2 27 0.005890652 ubox
2 28 0.008411663 ubox
2 29 0.025973952 ubox
2 35 0.004204357 ubox
2 38 0.061997220 ubox
2 39 0.387858455 ubox
2 42 0.105027836 ubox
2 43 0.078668309 ubox
2 45 0.005326530 ubox
2 55 0.021416779 ubox
2 60 0.003912276 ubox
2 61 0.004099051 ubox
3 19 0.075755165 ubox
3 20 0.185019275 ubox
3 27 0.008412284 ubox
3 28 0.029712468 ubox
3 34 0.004033290 ubox
3 35 0.004328903 ubox
3 38 0.386269221 ubox
3 39 0.084504601 ubox
3 42 0.077504904 ubox
3 43 0.308756170 ubox
3 60 0.004241259 ubox
3 61 0.013168311 ubox
4 11 0.209885641 ubox
4 19 0.185441168 ubox
4 24 0.023365368 ubox
4 27 0.030067802 ubox
4 34 0.003233044 ubox
4 38 0.079054118 ubox
4 42 0.309410776 ubox
4 48 0.018540780 ubox
4 53 0.025726791 ubox
4 60 0.013845188 ubox
4 63 0.020561709 ubox
4 66 0.042681647 ubox
5 10 0.196690723 ubox
5 18 0.183095896 ubox
5 23 0.023233479 ubox
5 26 0.029519571 ubox
5 36 0.387015527 ubox
5 37 0.039446419 ubox
5 41 0.307149416 ubox
5 47 0.018498470 ubox
5 52 0.025542720 ubox
5 59 0.013552593 ubox
5 62 0.019960155 ubox
5 65 0.041392401 ubox
6 34 0.036762530 ubox
6 35 0.374948220 ubox
6 38 0.056902723 ubox
6 46 0.017797603 ubox
6 61 0.014974381 ubox
7 33 0.041829875 ubox
7 36 0.051863921 ubox
7 37 0.057019471 ubox
8 34 0.316146273 ubox
8 35 0.043322587 ubox
8 38 0.205012111 ubox
8 45 0.009966225 ubox
9 30 0.012674506 ubox
9 33 0.328249442 ubox
9 37 0.207853547 ubox
9 44 0.010382805 ubox
9 47 0.025843127 ubox
9 62 0.005910750 ubox
10 29 0.008906190 ubox
10 34 0.108940932 ubox
10 38 0.170951012 ubox
10 45 0.018594303 ubox
10 46 0.024424243 ubox
10 61 0.004097878 ubox
11 30 0.418625983 ubox
11 33 0.113906577 ubox
11 37 0.176634366 ubox
11 44 0.020397887 ubox
11 47 0.005941495 ubox
11 57 0.003485279 ubox
11 62 0.036416760 ubox
12 29 0.415214878 ubox
12 35 0.066194523 ubox
12 46 0.005690042 ubox
12 56 0.003365835 ubox
12 61 0.036448477 ubox
13 20 0.244795973 ubox
13 28 0.404757914 ubox
13 29 0.167409348 ubox
13 34 0.069653208 ubox
13 35 0.083491454 ubox
13 39 0.068396643 ubox
13 43 0.128801064 ubox
13 45 0.003232210 ubox
13 60 0.036252089 ubox
13 61 0.003212485 ubox
14 19 0.244817414 ubox
14 20 0.045824445 ubox
14 27 0.393720133 ubox
14 28 0.194468161 ubox
14 34 0.089298631 ubox
14 35 0.039874982 ubox
14 38 0.064674939 ubox
14 39 0.037244902 ubox
14 42 0.128966664 ubox
14 43 0.017714802 ubox
14 60 0.003802629 ubox
15 19 0.045230142 ubox
15 27 0.215225557 ubox
15 34 0.023432583 ubox
15 35 0.281034228 ubox
15 38 0.033826956 ubox
15 39 0.049535841 ubox
15 42 0.017645562 ubox
16 29 0.192136432 ubox
16 34 0.289401577 ubox
16 35 0.037712612 ubox
16 38 0.049253542 ubox
17 28 0.197626275 ubox
17 34 0.041540266 ubox
17 35 0.026520114 ubox
17 39 0.127196058 ubox
17 43 0.007490036 ubox
17 56 0.003514628 ubox
18 24 0.425526674 ubox
18 27 0.198195795 ubox
18 34 0.024333228 ubox
18 38 0.125388377 ubox
18 42 0.007466161 ubox
18 55 0.003541656 ubox
18 63 0.004109066 ubox
18 66 0.675864419 ubox
19 23 0.422826929 ubox
19 26 0.197995836 ubox
19 31 0.419604443 ubox
19 33 0.015235460 ubox
19 37 0.079541215 ubox
19 54 0.003448005 ubox
19 65 0.676653305 ubox
20 30 0.427276122 ubox
20 64 0.673097851 ubox
21 29 0.427595316 ubox
21 35 0.007083010 ubox
22 28 0.427723610 ubox
22 34 0.005828024 ubox
22 35 0.019053285 ubox
22 39 0.011512751 ubox
22 61 0.013230729 ubox
23 27 0.420817055 ubox
23 34 0.021892037 ubox
23 38 0.011591224 ubox
23 48 0.007899597 ubox
23 60 0.013303157 ubox
23 63 0.689004877 ubox
23 66 0.011382279 ubox
24 30 0.003895730 ubox
24 33 0.022422400 ubox
24 37 0.011602306 ubox
24 47 0.007907550 ubox
24 59 0.013283004 ubox
24 62 0.691967343 ubox
24 65 0.010777661 ubox
25 29 0.003180445 ubox
25 35 0.012839440 ubox
25 46 0.007902267 ubox
25 61 0.691807130 ubox
26 34 0.013597595 ubox
26 45 0.007894734 ubox
26 60 0.691942729 ubox
26 63 0.008454825 ubox
26 66 0.303961378 ubox
27 33 0.013747618 ubox
27 44 0.007863039 ubox
27 59 0.656381775 ubox
27 62 0.008464693 ubox
27 65 0.300285302 ubox
28 37 0.234119316 ubox
28 59 0.217563340 ubox
28 64 0.296076126 ubox
28 65 0.061651120 ubox
28 68 0.035716852 ubox
29 36 0.234072387 ubox
29 40 0.011575144 ubox
29 44 0.004531671 ubox
29 57 0.288955991 ubox
29 58 0.305317082 ubox
29 62 0.004732775 ubox
29 64 0.083099704 ubox
29 67 0.049056582 ubox
30 35 0.214237372 ubox
30 39 0.017067310 ubox
30 43 0.009481845 ubox
30 56 0.347018128 ubox
30 61 0.003250585 ubox
30 63 0.311907767 ubox
30 66 0.070347886 ubox
31 38 0.014214416 ubox
31 39 0.049905929 ubox
31 42 0.009420083 ubox
31 55 0.351713350 ubox
31 56 0.298058335 ubox
32 38 0.049829914 ubox
32 55 0.289185614 ubox
32 56 0.019110008 ubox
32 61 0.315645315 ubox
33 42 0.034775406 ubox
33 53 0.471424926 ubox
33 55 0.017349390 ubox
33 60 0.316801378 ubox
33 63 0.152048914 ubox
33 66 0.100392257 ubox
34 41 0.035111137 ubox
34 50 0.003198927 ubox
34 51 0.015782647 ubox
34 52 0.469103902 ubox
34 54 0.025487996 ubox
34 58 0.013598276 ubox
34 59 0.315179330 ubox
34 62 0.129412891 ubox
34 65 0.098614058 ubox
34 68 0.003255951 ubox
35 40 0.033029927 ubox
35 49 0.003785087 ubox
35 50 0.016595636 ubox
35 51 0.442825130 ubox
35 57 0.013800387 ubox
35 58 0.105170167 ubox
35 62 0.138977326 ubox
35 64 0.054944950 ubox
35 67 0.005013001 ubox
36 46 0.004096793 ubox
36 56 0.013982717 ubox
36 61 0.180710235 ubox
37 45 0.003610329 ubox
37 48 0.188878170 ubox
37 53 0.058930897 ubox
37 55 0.011406736 ubox
37 60 0.183870655 ubox
37 63 0.007809105 ubox
37 66 0.046840136 ubox
38 47 0.150168769 ubox
38 50 0.435991582 ubox
38 52 0.059426198 ubox
38 58 0.611648646 ubox
38 59 0.097359454 ubox
38 62 0.005756872 ubox
38 65 0.045201739 ubox
39 47 0.138764512 ubox
39 49 0.448781223 ubox
39 51 0.059455511 ubox
39 54 0.010735403 ubox
39 57 0.640562101 ubox
39 64 0.045016867 ubox
40 46 0.134257707 ubox
40 48 0.445568697 ubox
40 53 0.010468374 ubox
40 56 0.640478094 ubox
40 63 0.044589918 ubox
41 45 0.115248000 ubox
41 55 0.639096274 ubox
42 54 0.453218039 ubox
42 65 0.431971014 ubox
43 49 0.032980135 ubox
43 54 0.458947947 ubox
43 57 0.005321494 ubox
43 62 0.010581714 ubox
43 64 0.434019069 ubox
44 48 0.031203120 ubox
44 53 0.644061247 ubox
44 56 0.004903604 ubox
44 60 0.035224854 ubox
44 61 0.005258563 ubox
44 63 0.434392486 ubox
44 66 0.369164582 ubox
45 51 0.012643829 ubox
45 52 0.642489024 ubox
45 58 0.012073987 ubox
45 59 0.035444183 ubox
45 62 0.421435180 ubox
45 65 0.369281237 ubox
45 68 0.031692837 ubox
46 50 0.012943170 ubox
46 51 0.625974087 ubox
46 54 0.004124905 ubox
46 57 0.010759862 ubox
46 58 0.034593231 ubox
46 62 0.006897676 ubox
46 64 0.368559789 ubox
46 67 0.049622218 ubox
47 53 0.006552064 ubox
47 55 0.031152799 ubox
47 56 0.007903676 ubox
47 60 0.429608459 ubox
47 63 0.369907108 ubox
47 66 0.052080415 ubox
48 54 0.033023517 ubox
48 57 0.073969576 ubox
48 59 0.429232183 ubox
48 62 0.369556032 ubox
48 64 0.013006747 ubox
48 65 0.050728163 ubox
49 53 0.031627968 ubox
49 56 0.100094242 ubox
49 61 0.217081450 ubox
49 63 0.017450786 ubox
50 55 0.101695084 ubox
50 56 0.055252804 ubox
50 61 0.285869920 ubox
51 55 0.041478280 ubox
51 60 0.329469684 ubox
53 62 0.006967775 ubox
53 64 0.050540829 ubox
54 60 0.049628261 ubox
54 61 0.005842930 ubox
54 63 0.050887094 ubox
54 66 0.023296465 ubox
55 59 0.046640328 ubox
55 62 0.050368904 ubox
55 65 0.023319954 ubox
56 64 0.023282820 ubox
56 67 0.004215768 ubox
57 63 0.023244996 ubox
57 66 0.003863101 ubox
59 66 0.201628029 ubox
60 65 0.201809576 ubox
60 68 0.016596905 ubox
61 67 0.017211153 ubox
62 66 0.017303460 ubox
18 66 0.9500000 lbox
19 65 0.9500000 lbox
20 64 0.9500000 lbox
23 63 0.9500000 lbox
24 62 0.9500000 lbox
25 61 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
