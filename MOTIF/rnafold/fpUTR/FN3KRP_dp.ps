%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FN3KRP)
} def

/sequence { (\
CUCUCGAGUCUCCGCCAGAUCCGGGGCGGGUCCGCGGCCGCGGCGGGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.025531670 ubox
1 46 0.010041289 ubox
1 47 0.039047420 ubox
2 7 0.024072168 ubox
2 26 0.005894213 ubox
2 45 0.009768787 ubox
2 46 0.038533597 ubox
2 47 0.020136931 ubox
2 48 0.920728358 ubox
3 25 0.008882234 ubox
3 30 0.009640984 ubox
3 45 0.038269940 ubox
3 46 0.025004198 ubox
3 47 0.967029582 ubox
4 24 0.008908706 ubox
4 29 0.009735803 ubox
4 37 0.003310259 ubox
4 43 0.031090387 ubox
4 45 0.014708418 ubox
4 46 0.966641747 ubox
4 47 0.004917149 ubox
4 48 0.019781316 ubox
5 23 0.009037624 ubox
5 28 0.009845616 ubox
5 36 0.004821129 ubox
5 40 0.003712475 ubox
5 42 0.031923296 ubox
5 45 0.967341291 ubox
5 46 0.008856336 ubox
5 47 0.020684502 ubox
6 22 0.009026571 ubox
6 27 0.009558892 ubox
6 32 0.004041228 ubox
6 35 0.004889766 ubox
6 39 0.003785190 ubox
6 41 0.031221420 ubox
6 44 0.959790483 ubox
7 11 0.004423000 ubox
7 31 0.009411626 ubox
8 20 0.016483969 ubox
8 27 0.007721052 ubox
8 31 0.019069553 ubox
8 38 0.007315185 ubox
8 41 0.896228563 ubox
8 44 0.034470093 ubox
8 50 0.125316042 ubox
9 19 0.017135539 ubox
9 26 0.006278845 ubox
9 29 0.003623526 ubox
9 30 0.005131155 ubox
9 37 0.005484312 ubox
9 40 0.889914480 ubox
9 43 0.038262434 ubox
9 47 0.003627326 ubox
9 48 0.131038827 ubox
9 49 0.121732381 ubox
10 18 0.017243596 ubox
10 25 0.006381525 ubox
10 26 0.011099116 ubox
10 28 0.003898585 ubox
10 30 0.068795177 ubox
10 36 0.005248171 ubox
10 37 0.003439222 ubox
10 42 0.039476796 ubox
10 43 0.025426081 ubox
10 45 0.003275549 ubox
10 46 0.003970885 ubox
10 47 0.142585728 ubox
11 17 0.016534905 ubox
11 25 0.011450247 ubox
11 29 0.008640857 ubox
11 30 0.243913545 ubox
11 37 0.003575301 ubox
11 42 0.024741543 ubox
11 43 0.007965472 ubox
11 45 0.003632249 ubox
11 46 0.018891217 ubox
11 47 0.152140298 ubox
11 48 0.019376730 ubox
12 24 0.013144573 ubox
12 26 0.004518595 ubox
12 28 0.006205987 ubox
12 29 0.322514120 ubox
12 30 0.006489928 ubox
12 37 0.916918214 ubox
12 42 0.008719472 ubox
12 43 0.023711256 ubox
12 45 0.012864763 ubox
12 46 0.224939344 ubox
12 47 0.016548880 ubox
13 23 0.013156971 ubox
13 25 0.004549634 ubox
13 28 0.322948507 ubox
13 29 0.004641734 ubox
13 36 0.917558099 ubox
13 40 0.019561937 ubox
13 42 0.023727226 ubox
13 45 0.225651372 ubox
13 46 0.011791101 ubox
14 22 0.012919555 ubox
14 27 0.323050474 ubox
14 35 0.917555826 ubox
14 38 0.034455981 ubox
14 39 0.013906647 ubox
14 41 0.022284043 ubox
14 44 0.226294334 ubox
15 24 0.005324808 ubox
15 25 0.009982944 ubox
15 26 0.322893790 ubox
15 34 0.916439194 ubox
15 37 0.037368644 ubox
15 40 0.021944748 ubox
15 43 0.226108145 ubox
16 23 0.006142370 ubox
16 24 0.014005280 ubox
16 25 0.322654894 ubox
16 36 0.037554025 ubox
16 42 0.224536610 ubox
18 32 0.918963993 ubox
19 31 0.920650153 ubox
20 30 0.920080993 ubox
20 37 0.012105506 ubox
21 29 0.920690034 ubox
21 30 0.023789004 ubox
21 36 0.013033501 ubox
21 37 0.207491265 ubox
21 42 0.003312353 ubox
21 43 0.018359476 ubox
22 28 0.920628562 ubox
22 29 0.023917257 ubox
22 34 0.013562859 ubox
22 36 0.207838007 ubox
22 40 0.045101875 ubox
22 42 0.020980445 ubox
23 27 0.861249059 ubox
23 33 0.014000011 ubox
23 35 0.207566137 ubox
23 39 0.045224732 ubox
23 41 0.029334717 ubox
24 32 0.014054597 ubox
24 33 0.082982143 ubox
24 38 0.044999406 ubox
24 39 0.018954723 ubox
25 31 0.013387517 ubox
25 32 0.082959172 ubox
25 33 0.190334394 ubox
25 38 0.019426607 ubox
25 39 0.026741029 ubox
26 31 0.056261539 ubox
26 32 0.188968964 ubox
26 35 0.045192906 ubox
26 38 0.026732746 ubox
26 41 0.023453022 ubox
27 34 0.045308694 ubox
27 36 0.023653573 ubox
27 37 0.023667496 ubox
27 40 0.023472846 ubox
28 33 0.044707752 ubox
28 35 0.026643682 ubox
28 39 0.022966844 ubox
29 38 0.022444169 ubox
29 39 0.007391011 ubox
30 38 0.009248364 ubox
30 44 0.057780499 ubox
30 50 0.005968582 ubox
31 37 0.010431743 ubox
31 43 0.010207353 ubox
31 47 0.074700355 ubox
31 48 0.015095006 ubox
31 49 0.004999902 ubox
32 36 0.010208281 ubox
32 42 0.007980345 ubox
32 43 0.304332343 ubox
32 46 0.096448685 ubox
32 47 0.014298806 ubox
33 40 0.009050621 ubox
33 42 0.308654574 ubox
33 45 0.096879742 ubox
33 46 0.012029264 ubox
34 39 0.008907417 ubox
34 41 0.315540530 ubox
34 44 0.097170087 ubox
35 40 0.315103025 ubox
35 42 0.033082904 ubox
35 43 0.091561777 ubox
35 45 0.008356457 ubox
36 41 0.046763932 ubox
36 44 0.007035775 ubox
37 44 0.007227319 ubox
38 43 0.009322153 ubox
38 46 0.007203395 ubox
38 47 0.006078039 ubox
39 45 0.007241435 ubox
39 46 0.006091648 ubox
40 44 0.006784581 ubox
2 48 0.9500000 lbox
3 47 0.9500000 lbox
4 46 0.9500000 lbox
5 45 0.9500000 lbox
6 44 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
23 27 0.9500000 lbox
showpage
end
%%EOF
