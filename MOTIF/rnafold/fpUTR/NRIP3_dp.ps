%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NRIP3)
} def

/sequence { (\
GCGACGUCACGCUCGGCUAUAAAAGGCGCGGCUCGGGGCCCUUGCGGCGCUGGAGGAGCUCGAGGCUGAGGCUGCCGGGGGGCUGUGGGCUACCGGGCCGCCGGCGCCUCAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.047674777 ubox
1 12 0.592829970 ubox
1 17 0.004070385 ubox
1 29 0.004969911 ubox
1 32 0.004425664 ubox
1 59 0.004275540 ubox
1 113 0.005890308 ubox
2 6 0.051849619 ubox
2 11 0.696320628 ubox
2 15 0.023182315 ubox
2 28 0.004938941 ubox
2 30 0.011494415 ubox
2 31 0.005043790 ubox
2 35 0.053955061 ubox
2 58 0.004278074 ubox
2 62 0.037984127 ubox
2 112 0.005483998 ubox
2 114 0.015175141 ubox
3 10 0.688745303 ubox
3 14 0.024484284 ubox
3 27 0.004160228 ubox
3 29 0.011660945 ubox
3 34 0.054618699 ubox
3 61 0.038501750 ubox
3 113 0.003997466 ubox
4 13 0.024368222 ubox
4 33 0.054414870 ubox
4 60 0.038232494 ubox
5 11 0.158627588 ubox
5 15 0.005220811 ubox
5 28 0.012741261 ubox
5 30 0.004069596 ubox
5 35 0.003873969 ubox
5 62 0.007319435 ubox
5 114 0.017218280 ubox
6 10 0.151265873 ubox
6 12 0.018643049 ubox
6 14 0.005300134 ubox
6 17 0.004710273 ubox
6 27 0.012771062 ubox
6 29 0.004097314 ubox
6 32 0.057028932 ubox
6 34 0.003827186 ubox
6 59 0.007651065 ubox
6 61 0.007379059 ubox
6 113 0.004515767 ubox
7 11 0.018525379 ubox
7 16 0.004718782 ubox
7 26 0.012766014 ubox
7 31 0.057506991 ubox
7 57 0.028558626 ubox
7 58 0.006402159 ubox
7 63 0.019962109 ubox
8 15 0.004826415 ubox
8 25 0.012696213 ubox
8 30 0.057802768 ubox
8 56 0.028595676 ubox
8 62 0.021300719 ubox
8 64 0.006977166 ubox
10 28 0.058052590 ubox
10 30 0.022667066 ubox
10 62 0.007516066 ubox
10 114 0.016975991 ubox
11 17 0.003735800 ubox
11 27 0.058111962 ubox
11 29 0.022967088 ubox
11 32 0.030822870 ubox
11 59 0.042986617 ubox
11 61 0.007089541 ubox
11 66 0.005619590 ubox
11 113 0.003898329 ubox
12 16 0.003714672 ubox
12 26 0.057939728 ubox
12 28 0.022587830 ubox
12 31 0.032109126 ubox
12 58 0.043064340 ubox
12 64 0.796728719 ubox
12 65 0.004437268 ubox
13 24 0.003230644 ubox
13 25 0.045353778 ubox
13 26 0.005868480 ubox
13 30 0.026230260 ubox
13 31 0.096827385 ubox
13 57 0.043074317 ubox
13 63 0.968076749 ubox
13 64 0.013162152 ubox
14 25 0.033268564 ubox
14 28 0.024277794 ubox
14 30 0.128679350 ubox
14 56 0.043030417 ubox
14 62 0.984174496 ubox
14 64 0.010656950 ubox
15 27 0.027498191 ubox
15 29 0.128871761 ubox
15 51 0.003343221 ubox
15 60 0.174969500 ubox
15 61 0.970631556 ubox
16 27 0.146144543 ubox
16 29 0.004105262 ubox
16 50 0.003399022 ubox
16 59 0.979263081 ubox
16 60 0.113334035 ubox
17 25 0.028828932 ubox
17 26 0.146231847 ubox
17 28 0.004311843 ubox
17 49 0.003391501 ubox
17 53 0.040518332 ubox
17 55 0.008055547 ubox
17 56 0.004203028 ubox
17 58 0.985227549 ubox
18 24 0.028817912 ubox
18 25 0.141724809 ubox
18 52 0.040337468 ubox
18 54 0.008477046 ubox
18 55 0.004991173 ubox
18 57 0.975324135 ubox
19 51 0.021024725 ubox
20 52 0.005449708 ubox
21 51 0.003400780 ubox
23 43 0.003938191 ubox
24 42 0.004031235 ubox
24 51 0.111888192 ubox
25 41 0.004048334 ubox
25 50 0.080183800 ubox
25 51 0.973090201 ubox
25 60 0.004722422 ubox
25 61 0.004293684 ubox
26 32 0.003634331 ubox
26 40 0.004038752 ubox
26 48 0.010694802 ubox
26 50 0.983622521 ubox
26 59 0.005477904 ubox
26 60 0.004168098 ubox
27 31 0.003633093 ubox
27 46 0.007944048 ubox
27 47 0.007672079 ubox
27 49 0.986824168 ubox
27 58 0.005484283 ubox
28 39 0.004034131 ubox
28 45 0.011010019 ubox
28 48 0.986845277 ubox
28 59 0.055282917 ubox
28 61 0.003816232 ubox
29 38 0.004034444 ubox
29 44 0.011036985 ubox
29 46 0.008188343 ubox
29 47 0.986438707 ubox
29 58 0.055348672 ubox
29 62 0.014908174 ubox
30 40 0.052355985 ubox
30 41 0.004983080 ubox
30 45 0.008185906 ubox
30 60 0.012362377 ubox
30 61 0.014959179 ubox
31 39 0.052562905 ubox
31 40 0.003757220 ubox
31 45 0.985003135 ubox
31 59 0.021111423 ubox
32 38 0.052656489 ubox
32 44 0.985077078 ubox
32 55 0.057811720 ubox
32 58 0.021177481 ubox
32 64 0.132822415 ubox
33 37 0.047452084 ubox
33 53 0.025061706 ubox
33 54 0.057420107 ubox
33 57 0.020726352 ubox
33 63 0.134734530 ubox
34 44 0.018714790 ubox
34 46 0.004164531 ubox
34 52 0.036712155 ubox
34 53 0.054020070 ubox
34 56 0.019654868 ubox
34 62 0.134902629 ubox
35 41 0.928244007 ubox
35 42 0.250627431 ubox
35 43 0.058378891 ubox
35 45 0.004167396 ubox
35 51 0.044053032 ubox
35 61 0.129529041 ubox
36 40 0.913749707 ubox
36 41 0.252981807 ubox
36 42 0.074127935 ubox
36 43 0.011467744 ubox
36 50 0.045397093 ubox
36 51 0.048895341 ubox
36 60 0.123679563 ubox
36 61 0.066117926 ubox
37 41 0.073545122 ubox
37 42 0.009526009 ubox
37 43 0.006355562 ubox
37 50 0.048887574 ubox
37 51 0.014040171 ubox
37 59 0.117866887 ubox
37 60 0.076221749 ubox
38 42 0.004261346 ubox
38 48 0.066719327 ubox
38 50 0.014551276 ubox
38 59 0.085311531 ubox
39 47 0.066616147 ubox
39 49 0.014869030 ubox
39 56 0.025858283 ubox
39 58 0.093194798 ubox
40 46 0.066402544 ubox
40 47 0.017666984 ubox
40 55 0.025840927 ubox
40 56 0.138818583 ubox
41 46 0.020018046 ubox
41 53 0.025562912 ubox
41 55 0.138823178 ubox
41 56 0.034939778 ubox
41 64 0.003179603 ubox
42 52 0.024255580 ubox
42 53 0.006075434 ubox
42 54 0.136900665 ubox
42 55 0.035000097 ubox
42 63 0.003185450 ubox
43 52 0.010558462 ubox
43 53 0.128250492 ubox
43 54 0.039657354 ubox
44 48 0.003368326 ubox
44 50 0.092311336 ubox
44 51 0.005199567 ubox
45 49 0.091887865 ubox
45 52 0.076956770 ubox
46 51 0.059746228 ubox
47 59 0.003189682 ubox
48 58 0.003185485 ubox
49 59 0.005268813 ubox
50 58 0.005567332 ubox
50 64 0.007791084 ubox
51 57 0.005561959 ubox
51 63 0.008278761 ubox
53 61 0.010989438 ubox
54 60 0.010997084 ubox
55 59 0.010761002 ubox
65 113 0.999037130 ubox
66 112 0.999945460 ubox
67 111 0.999744740 ubox
68 110 0.999978989 ubox
69 109 0.999845374 ubox
70 108 0.999984324 ubox
71 107 0.999983936 ubox
72 106 0.977414179 ubox
73 106 0.209185227 ubox
74 105 0.999546127 ubox
75 104 0.999989480 ubox
76 103 0.999736602 ubox
77 102 0.968246637 ubox
78 101 0.935583890 ubox
78 102 0.249595643 ubox
79 99 0.012404300 ubox
79 101 0.352346817 ubox
79 102 0.008993671 ubox
80 98 0.010840796 ubox
80 99 0.857927039 ubox
80 101 0.010088525 ubox
81 98 0.821134029 ubox
81 99 0.513236873 ubox
82 90 0.003635177 ubox
82 98 0.570465433 ubox
83 89 0.003638057 ubox
83 96 0.771726121 ubox
83 97 0.622167870 ubox
84 88 0.003280725 ubox
84 95 0.698785317 ubox
84 96 0.576369404 ubox
85 93 0.115125641 ubox
85 94 0.502758464 ubox
86 92 0.159023641 ubox
86 95 0.551907301 ubox
87 91 0.133016605 ubox
87 94 0.852233762 ubox
88 93 0.865892319 ubox
88 94 0.060813302 ubox
89 93 0.062487437 ubox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
14 62 0.9500000 lbox
15 61 0.9500000 lbox
16 59 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
65 113 0.9500000 lbox
66 112 0.9500000 lbox
67 111 0.9500000 lbox
68 110 0.9500000 lbox
69 109 0.9500000 lbox
70 108 0.9500000 lbox
71 107 0.9500000 lbox
72 106 0.9500000 lbox
74 105 0.9500000 lbox
75 104 0.9500000 lbox
76 103 0.9500000 lbox
77 102 0.9500000 lbox
78 101 0.9500000 lbox
80 99 0.9500000 lbox
81 98 0.9500000 lbox
83 96 0.9500000 lbox
84 95 0.9500000 lbox
85 94 0.9500000 lbox
showpage
end
%%EOF
