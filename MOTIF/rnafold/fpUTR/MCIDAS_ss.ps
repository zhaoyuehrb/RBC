%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCAUCUCUCAGCACCUCCUCGGCAGCCCCUCGGCUCCUUCUCGGUCACGCGCCUGCCCCAACCUCUGGCUGGCUUCGGAGCCUGCAGGCACUGAAGGGAGUGCAGGGUGUGGAUCGCUGCCCCAGCCCGGGCCGCCGCCUCCGAGCAGUCGGCACCCGGAGGCAGGAGGCACA\
) } def
/len { sequence length } bind def

/coor [
[209.37026978 742.09655762]
[202.25700378 755.40307617]
[191.94142151 766.41448975]
[179.12684631 774.38000488]
[164.68702698 778.75646973]
[149.60646057 779.24560547]
[134.91339111 775.81396484]
[121.60961151 768.69555664]
[110.60218811 758.37567139]
[102.64163208 745.55804443]
[98.27070618 731.11651611]
[97.78742218 716.03576660]
[101.22473145 701.34405518]
[108.34828186 688.04302979]
[118.67237091 677.03961182]
[131.49308777 669.08398438]
[145.93627930 664.71862793]
[161.01721191 664.24114990]
[164.42872620 649.63427734]
[167.84024048 635.02734375]
[171.25175476 620.42047119]
[174.66326904 605.81353760]
[178.07478333 591.20666504]
[183.48559570 575.99462891]
[194.60632324 569.35021973]
[191.19480896 554.74328613]
[187.78329468 540.13641357]
[177.35414124 529.50238037]
[181.75004578 514.30413818]
[178.33853149 499.69723511]
[174.92701721 485.09033203]
[171.51550293 470.48345947]
[162.35565186 465.87213135]
[157.15103149 456.78158569]
[157.83958435 446.10876465]
[164.43473816 437.41162109]
[161.54084778 422.69342041]
[158.64695740 407.97521973]
[155.75306702 393.25701904]
[140.18423462 390.37631226]
[126.87722015 381.72579956]
[117.88179016 368.60278320]
[114.59703064 352.99612427]
[117.55381775 337.28482056]
[126.32929993 323.87545776]
[139.60704041 314.83352661]
[136.45384216 300.16867065]
[133.30064392 285.50384521]
[130.14746094 270.83901978]
[126.99426270 256.17419434]
[123.71177673 241.53775024]
[120.30026245 226.93084717]
[116.88874817 212.32394409]
[113.47723389 197.71704102]
[108.88021088 191.90103149]
[110.13681793 182.82228088]
[106.98361969 168.15744019]
[103.83042908 153.49261475]
[100.67723083 138.82777405]
[97.52404022 124.16294098]
[74.98557281 113.45547485]
[71.18165588 84.93608093]
[61.45000458 73.52139282]
[51.71835327 62.10671234]
[36.87720108 56.62485504]
[34.50796509 41.91989136]
[24.77631378 30.50520897]
[9.89911556 22.37469101]
[13.59347343 5.82814789]
[30.51606941 4.79758978]
[36.19099426 20.77355766]
[45.92264557 32.18824005]
[60.06772614 36.85364151]
[63.13303757 52.37506104]
[72.86468506 63.78974533]
[82.59633636 75.20442200]
[96.62519073 69.89487457]
[96.36046600 54.89720917]
[96.09573364 39.89954758]
[95.83100891 24.90188217]
[95.56628418 9.90421963]
[95.30155182 -5.09344482]
[87.32190704 -18.75491524]
[94.83338165 -31.61675644]
[94.56865692 -46.61442184]
[94.30393219 -61.61208344]
[85.39584351 -75.38082123]
[93.10573578 -89.85457611]
[109.50232697 -90.14399719]
[117.71821594 -75.95134735]
[109.30159760 -61.87681198]
[109.56632233 -46.87914658]
[109.83104706 -31.88148499]
[117.79176331 -19.29274559]
[110.29921722 -5.35817194]
[110.56394196 9.63949203]
[110.82867432 24.63715553]
[111.09339905 39.63481903]
[111.35812378 54.63248444]
[111.62285614 69.63014984]
[121.01500702 77.01136017]
[126.74380493 86.91077423]
[128.31266785 97.72750092]
[125.86479187 107.85861206]
[120.11300659 115.93573761]
[112.18887329 121.00975037]
[115.34207153 135.67459106]
[118.49526215 150.33941650]
[121.64845276 165.00425720]
[124.80165100 179.66908264]
[128.08413696 194.30552673]
[131.49565125 208.91242981]
[134.90716553 223.51933289]
[138.31867981 238.12622070]
[143.33207703 245.79882812]
[141.65908813 253.02098083]
[144.81228638 267.68582153]
[147.96548462 282.35064697]
[151.11868286 297.01550293]
[154.27186584 311.68032837]
[168.36599731 313.83670044]
[180.84895325 320.66445923]
[190.22808838 331.32394409]
[195.38989258 344.51867676]
[195.73208618 358.65310669]
[191.23393250 372.02548218]
[182.45616150 383.03286743]
[170.47126770 390.36312866]
[173.36515808 405.08132935]
[176.25904846 419.79953003]
[179.15293884 434.51773071]
[193.09094238 449.05386353]
[186.12240601 467.07192993]
[189.53392029 481.67883301]
[192.94543457 496.28573608]
[196.35694885 510.89263916]
[207.03010559 522.57141113]
[202.39019775 536.72491455]
[205.80171204 551.33178711]
[209.21322632 565.93865967]
[216.90347290 578.81738281]
[228.14462280 588.74896240]
[239.38577271 598.68054199]
[250.62693787 608.61212158]
[261.86810303 618.54370117]
[273.10925293 628.47528076]
[284.35040283 638.40686035]
[304.25268555 641.48352051]
[309.66561890 660.02838135]
[321.25027466 669.55706787]
[337.29287720 669.43951416]
[347.27478027 681.99902344]
[343.53869629 697.60101318]
[328.95062256 704.27691650]
[314.70129395 696.90563965]
[311.72158813 681.14172363]
[300.13693237 671.61303711]
[290.05993652 673.51599121]
[280.40280151 669.45812988]
[274.46496582 660.56286621]
[274.41882324 649.64801025]
[263.17764282 639.71643066]
[251.93650818 629.78485107]
[240.69534302 619.85327148]
[229.45419312 609.92169189]
[218.21304321 599.99011230]
[206.97187805 590.05853271]
[192.68168640 594.61816406]
[189.27017212 609.22509766]
[185.85865784 623.83197021]
[182.44714355 638.43890381]
[179.03562927 653.04577637]
[175.62411499 667.65264893]
[188.93339539 674.76080322]
[199.94877625 685.07214355]
[207.91923523 697.88366699]
[212.30131531 712.32177734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[23 168]
[25 140]
[26 139]
[27 138]
[29 136]
[30 135]
[31 134]
[32 133]
[36 131]
[37 130]
[38 129]
[39 128]
[46 120]
[47 119]
[48 118]
[49 117]
[50 116]
[51 114]
[52 113]
[53 112]
[54 111]
[56 110]
[57 109]
[58 108]
[59 107]
[60 106]
[62 76]
[63 75]
[64 74]
[66 72]
[67 71]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[84 93]
[85 92]
[86 91]
[141 167]
[142 166]
[143 165]
[144 164]
[145 163]
[146 162]
[147 161]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
