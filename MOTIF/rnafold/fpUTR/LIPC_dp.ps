%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LIPC)
} def

/sequence { (\
GGUCUCUUUGGCUUCAGAAAUUACCAAGAAAGCCUGGACCCCGGGUGAAACGGAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.068484186 ubox
1 15 0.007754870 ubox
1 22 0.007305975 ubox
1 25 0.042302663 ubox
1 34 0.019663378 ubox
1 40 0.975287987 ubox
1 41 0.008305089 ubox
1 42 0.021860329 ubox
2 12 0.079330387 ubox
2 21 0.008854967 ubox
2 24 0.042332024 ubox
2 33 0.019707052 ubox
2 39 0.978474294 ubox
2 40 0.010128682 ubox
2 41 0.021878757 ubox
2 51 0.009910362 ubox
3 11 0.079314234 ubox
3 18 0.003913539 ubox
3 20 0.008983975 ubox
3 23 0.041153685 ubox
3 29 0.005483203 ubox
3 32 0.018554905 ubox
3 37 0.004336482 ubox
3 38 0.976611388 ubox
3 48 0.007816681 ubox
3 50 0.009541999 ubox
3 54 0.006697479 ubox
3 56 0.126159033 ubox
4 10 0.079285487 ubox
4 11 0.003675385 ubox
4 17 0.004271758 ubox
4 28 0.005862947 ubox
4 32 0.006081249 ubox
4 36 0.007983245 ubox
4 37 0.973761823 ubox
4 47 0.008428066 ubox
4 53 0.007141257 ubox
4 55 0.134854163 ubox
5 10 0.003311660 ubox
5 16 0.003980875 ubox
5 18 0.015217636 ubox
5 27 0.005085578 ubox
5 29 0.036688096 ubox
5 31 0.005748309 ubox
5 36 0.729973365 ubox
5 37 0.050997462 ubox
5 38 0.069247065 ubox
5 48 0.008831121 ubox
5 52 0.005932108 ubox
5 54 0.134745707 ubox
5 56 0.101977998 ubox
6 17 0.015773750 ubox
6 28 0.040688580 ubox
6 32 0.034379276 ubox
6 36 0.528959723 ubox
6 37 0.086869689 ubox
6 45 0.007325195 ubox
6 47 0.009040441 ubox
6 52 0.005729514 ubox
6 53 0.134313003 ubox
6 55 0.107109774 ubox
7 16 0.015232793 ubox
7 18 0.046044151 ubox
7 19 0.009004330 ubox
7 20 0.008653589 ubox
7 27 0.033254816 ubox
7 28 0.062527501 ubox
7 29 0.007279735 ubox
7 30 0.004101759 ubox
7 31 0.033206445 ubox
7 32 0.004878499 ubox
7 36 0.103696871 ubox
7 37 0.018430606 ubox
7 38 0.005724051 ubox
7 44 0.007319676 ubox
7 45 0.003877378 ubox
7 50 0.004906701 ubox
7 52 0.112217484 ubox
7 54 0.107059861 ubox
8 17 0.050924768 ubox
8 18 0.009357562 ubox
8 19 0.010390197 ubox
8 26 0.023520247 ubox
8 27 0.120337254 ubox
8 28 0.008114562 ubox
8 29 0.004755228 ubox
8 30 0.026891851 ubox
8 31 0.004936263 ubox
8 32 0.006802009 ubox
8 36 0.105638791 ubox
8 37 0.007995030 ubox
8 43 0.007106063 ubox
8 44 0.006591240 ubox
8 48 0.005357381 ubox
8 49 0.008949817 ubox
8 50 0.011795814 ubox
8 52 0.003382475 ubox
8 53 0.106760447 ubox
9 16 0.052733896 ubox
9 17 0.008734123 ubox
9 18 0.010636402 ubox
9 26 0.133318379 ubox
9 27 0.006373933 ubox
9 28 0.003371069 ubox
9 29 0.018306997 ubox
9 30 0.004413064 ubox
9 31 0.008902378 ubox
9 36 0.027218441 ubox
9 43 0.006798134 ubox
9 47 0.004912002 ubox
9 48 0.008915240 ubox
9 49 0.011197977 ubox
9 52 0.106868763 ubox
10 15 0.053061653 ubox
10 25 0.137683672 ubox
10 34 0.976891333 ubox
10 35 0.017743906 ubox
10 40 0.006979683 ubox
10 41 0.008638525 ubox
10 42 0.006826590 ubox
10 51 0.108755379 ubox
11 24 0.137270122 ubox
11 33 0.978577389 ubox
11 34 0.012849813 ubox
11 39 0.007007481 ubox
11 40 0.008754938 ubox
11 41 0.006697482 ubox
11 46 0.006765530 ubox
12 28 0.017439466 ubox
12 32 0.978591033 ubox
12 45 0.006551849 ubox
12 55 0.004094267 ubox
13 19 0.007503751 ubox
13 20 0.032994543 ubox
13 27 0.017758472 ubox
13 28 0.004337352 ubox
13 29 0.009438888 ubox
13 30 0.485372455 ubox
13 31 0.843511972 ubox
13 38 0.013326427 ubox
13 44 0.005665906 ubox
13 48 0.039215990 ubox
13 49 0.086108574 ubox
13 54 0.004262039 ubox
14 18 0.007514019 ubox
14 19 0.029900916 ubox
14 26 0.017435487 ubox
14 27 0.009343273 ubox
14 28 0.014264457 ubox
14 29 0.690581417 ubox
14 30 0.662306675 ubox
14 31 0.009656956 ubox
14 37 0.014107854 ubox
14 43 0.004025067 ubox
14 47 0.037863454 ubox
14 48 0.093010419 ubox
14 53 0.004226725 ubox
14 54 0.003914500 ubox
14 56 0.004918601 ubox
15 28 0.845700482 ubox
15 36 0.014522687 ubox
15 47 0.093673059 ubox
15 52 0.004218119 ubox
15 53 0.003968631 ubox
15 55 0.005094860 ubox
16 22 0.032634886 ubox
16 35 0.014556523 ubox
16 46 0.056321569 ubox
17 21 0.023057898 ubox
17 34 0.014519913 ubox
21 27 0.048528443 ubox
21 28 0.017777770 ubox
21 29 0.057341204 ubox
21 30 0.024703934 ubox
21 31 0.008361180 ubox
21 32 0.004301342 ubox
21 54 0.003517693 ubox
21 55 0.012769011 ubox
21 56 0.029791360 ubox
21 57 0.011557682 ubox
22 26 0.041077228 ubox
22 27 0.024764978 ubox
22 28 0.056683475 ubox
22 29 0.031785786 ubox
22 30 0.010426006 ubox
22 31 0.007014073 ubox
22 54 0.018744857 ubox
22 55 0.030660406 ubox
22 56 0.014936759 ubox
24 37 0.019304921 ubox
24 53 0.080107099 ubox
25 36 0.019398550 ubox
25 52 0.080514579 ubox
26 35 0.017576603 ubox
27 35 0.009102221 ubox
28 34 0.012005788 ubox
32 46 0.184160484 ubox
33 45 0.197244294 ubox
34 44 0.197437570 ubox
35 43 0.197398396 ubox
36 42 0.197583198 ubox
37 41 0.194396656 ubox
38 46 0.014717090 ubox
39 45 0.015226347 ubox
40 44 0.015121854 ubox
40 53 0.006575948 ubox
41 52 0.006324369 ubox
41 53 0.975977547 ubox
42 52 0.978301583 ubox
43 51 0.977272630 ubox
45 51 0.017910230 ubox
46 50 0.018873535 ubox
46 52 0.003820125 ubox
47 51 0.012558093 ubox
1 40 0.9500000 lbox
2 39 0.9500000 lbox
3 38 0.9500000 lbox
4 37 0.9500000 lbox
5 36 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
showpage
end
%%EOF
