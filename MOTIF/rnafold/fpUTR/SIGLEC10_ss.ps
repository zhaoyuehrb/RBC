%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCAGGAGACCCAGAGGACAACUGGGCAAGGUGGGCCGGAGAGUGUGGGGGAAGGCAAAGGAGUUCUGUGAGCUCAGCGUCUGAAGCUCAUUUCAUGCAUCAGGCCCCAGGGCUCAGCUUCCGCCUUCGGCUUCCCCUUCUGCCAAGAGCCCUGAGCCACUCACAGCACGACCAGAGAACAGGCCUGUCUCAGGCAGGCCCUGCGCCUCCUAUGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-2.63591266 342.66058350]
[-10.64832020 355.34130859]
[-18.66072655 368.02206421]
[-26.67313385 380.70281982]
[-34.59601974 393.43966675]
[-42.42899323 406.23205566]
[-36.27034760 415.88317871]
[-34.16333771 427.08416748]
[-36.37419891 438.21282959]
[-42.54664993 447.67196655]
[-51.75864410 454.11853027]
[-62.65994644 456.65423584]
[-73.66998291 454.95071411]
[-82.03645325 467.40069580]
[-90.40292358 479.85067749]
[-98.76939392 492.30065918]
[-107.13586426 504.75067139]
[-102.62613678 519.72387695]
[-108.84353638 534.07232666]
[-122.85239410 541.02111816]
[-138.03814697 537.28924561]
[-147.23056030 524.63879395]
[-146.08924866 509.04293823]
[-135.15310669 497.86550903]
[-119.58584595 496.38418579]
[-111.21938324 483.93420410]
[-102.85291290 471.48422241]
[-94.48644257 459.03424072]
[-86.11997223 446.58422852]
[-93.54443359 429.42337036]
[-89.08001709 411.11129761]
[-74.35754395 399.10287476]
[-55.22135544 398.39907837]
[-47.38838196 385.60671997]
[-46.57687759 378.26736450]
[-39.35388184 372.69039917]
[-31.34147263 360.00964355]
[-23.32906532 347.32891846]
[-15.31665897 334.64816284]
[-15.05415440 323.89102173]
[-5.43862295 316.57165527]
[0.90597028 302.97952271]
[7.25056362 289.38739014]
[13.59515667 275.79525757]
[13.57609844 268.41122437]
[20.12606239 262.05728149]
[26.66150284 248.55589294]
[33.19694519 235.05447388]
[39.73238754 221.55307007]
[46.26782990 208.05166626]
[52.80326843 194.55026245]
[59.33871078 181.04884338]
[65.87415314 167.54743958]
[66.02217102 57.63132858]
[58.37018585 44.72988892]
[50.71820068 31.82845116]
[43.06621552 18.92701149]
[35.41423035 6.02557278]
[27.76224518 -6.87586594]
[17.09626961 -8.95094109]
[9.48636532 -16.39654732]
[7.27252388 -26.58584785]
[10.94898319 -36.10836029]
[3.66349435 -49.22024918]
[-3.62199450 -62.33214188]
[-10.90748310 -75.44403076]
[-18.19297218 -88.55592346]
[-21.97624397 -90.64628601]
[-24.63494301 -93.53830719]
[-26.05527115 -96.78173065]
[-26.28074646 -99.93547058]
[-25.49569893 -102.61789703]
[-32.03113937 -116.11930847]
[-38.56658173 -129.62071228]
[-45.10202408 -143.12211609]
[-51.63746643 -156.62353516]
[-58.17290878 -170.12493896]
[-64.70835114 -183.62634277]
[-81.39985657 -186.38870239]
[-93.03798676 -198.43830872]
[-95.17604065 -214.88595581]
[-87.16746521 -229.22023010]
[-93.89245605 -242.62823486]
[-100.61744690 -256.03622437]
[-107.34243774 -269.44424438]
[-114.06743622 -282.85223389]
[-120.79242706 -296.26025391]
[-133.89561462 -305.12686157]
[-132.68554688 -319.97222900]
[-139.41053772 -333.38024902]
[-154.76139832 -334.91479492]
[-166.83149719 -344.52291870]
[-171.76931763 -359.13870239]
[-167.99923706 -374.09832764]
[-156.72424316 -384.62820435]
[-141.54216003 -387.36828613]
[-127.29754639 -381.44421387]
[-118.53578949 -368.74639893]
[-118.05274200 -353.32659912]
[-126.00254059 -340.10522461]
[-119.27754974 -326.69723511]
[-106.65538025 -318.78964233]
[-107.38442230 -302.98522949]
[-100.65943146 -289.57723999]
[-93.93444061 -276.16921997]
[-87.20944977 -262.76123047]
[-80.48445129 -249.35322571]
[-73.75946045 -235.94523621]
[-60.44664383 -235.00617981]
[-49.24517822 -227.55364990]
[-43.13829422 -215.44403076]
[-43.81555939 -201.79028320]
[-51.20693970 -190.16178894]
[-44.67150116 -176.66038513]
[-38.13605881 -163.15896606]
[-31.60061646 -149.65756226]
[-25.06517410 -136.15615845]
[-18.52973366 -122.65474701]
[-11.99429131 -109.15334320]
[-5.08108234 -95.84140778]
[2.20440650 -82.72952271]
[9.48989487 -69.61763000]
[16.77538490 -56.50574112]
[24.06087303 -43.39384842]
[41.32842636 -34.68101883]
[40.66368484 -14.52785110]
[48.31567001 -1.62641251]
[55.96765518 11.27502632]
[63.61964035 24.17646408]
[71.27162170 37.07790375]
[78.92360687 49.97934341]
[93.80319977 51.87611389]
[104.44709015 41.30693054]
[115.09098816 30.73775291]
[111.09056091 15.90898991]
[115.05598450 1.07082880]
[125.92057037 -9.78533936]
[140.76179504 -13.73926067]
[155.58744812 -9.72734928]
[166.40951538 1.17120993]
[170.31689453 16.02475929]
[166.25852966 30.83777046]
[155.32611084 41.62561417]
[140.46038818 45.48641968]
[125.66016388 41.38164520]
[115.01627350 51.95082474]
[104.37238312 62.52000427]
[107.82898712 69.17597198]
[121.14102173 62.26296616]
[128.05381775 75.57511139]
[114.74219513 82.48789978]
[118.19879913 89.14386749]
[132.96682739 86.51602936]
[142.01914978 73.83955383]
[157.03346252 71.38492584]
[169.06275940 80.09306335]
[183.83078003 77.46521759]
[198.59880066 74.83737946]
[213.36682129 72.20953369]
[227.90174866 63.48185349]
[240.31201172 75.03268433]
[232.64810181 90.15554047]
[215.99465942 86.97755432]
[201.22663879 89.60540009]
[186.45861816 92.23324585]
[171.69059753 94.86108398]
[163.40365601 107.18432617]
[148.46421814 110.05970764]
[135.59466553 101.28404999]
[120.82664490 103.91188812]
[120.08822632 111.37545013]
[135.01531982 112.85252380]
[133.53799438 127.77960205]
[118.61139679 126.30257416]
[117.87298584 133.76612854]
[131.83976746 139.23687744]
[144.83766174 130.76136780]
[160.33322144 131.57810974]
[172.36810303 141.37307739]
[176.31463623 156.37989807]
[170.65530396 170.82812500]
[157.56622314 179.16215515]
[142.08042908 178.17735291]
[130.15252686 168.25241089]
[126.36901855 153.20365906]
[112.40223694 147.73291016]
[104.38983154 160.41366577]
[115.32725525 170.67878723]
[126.26467133 180.94390869]
[137.20210266 191.20903015]
[148.13951111 201.47416687]
[159.07693481 211.73928833]
[174.76399231 218.16990662]
[172.92729187 235.02407837]
[156.22334290 237.92485046]
[148.81181335 222.67671204]
[137.87438965 212.41157532]
[126.93697357 202.14645386]
[115.99954987 191.88133240]
[105.06212616 181.61621094]
[94.12470245 171.35107422]
[79.37555695 174.08288574]
[72.84011841 187.58428955]
[66.30467987 201.08569336]
[59.76923752 214.58711243]
[53.23379517 228.08851624]
[46.69835281 241.58992004]
[40.16291046 255.09132385]
[33.62746811 268.59274292]
[27.18729210 282.13983154]
[20.84269905 295.73196411]
[14.49810505 309.32412720]
[8.15351200 322.91625977]
[21.73659897 316.55230713]
[36.70620728 317.50671387]
[49.37113190 325.54409790]
[56.60846710 338.68261719]
[56.63362885 353.68258667]
[49.44041061 366.84533691]
[36.80252075 374.92517090]
[21.83619881 375.92977905]
[8.23183823 369.61145020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[5 34]
[6 33]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[41 213]
[42 212]
[43 211]
[44 210]
[46 209]
[47 208]
[48 207]
[49 206]
[50 205]
[51 204]
[52 203]
[53 202]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
[82 108]
[83 107]
[84 106]
[85 105]
[86 104]
[87 103]
[89 101]
[90 100]
[132 147]
[133 146]
[134 145]
[152 170]
[153 169]
[156 166]
[157 165]
[158 164]
[159 163]
[175 186]
[176 185]
[187 201]
[188 200]
[189 199]
[190 198]
[191 197]
[192 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
