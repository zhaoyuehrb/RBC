%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCCCGCCCCCUUUCCACGCGGCUUUUCAUUGGCGGGUCCGCCGCGGUCGAGGAUCCUGGAGGUUUGUCCCCGCCGCCCCGACGCUUCCGCCCGGUCCGUCGGCACGUCGGCCCUGCCUCCCGGACCACCCUGCGGGGCGCACCAGCGAUCUGGGGUGCGGGGCUCGGCCUCCCUGCGCUCCUGGCUGACCGUGUGACCUUGGGUCUUAACC\
) } def
/len { sequence length } bind def

/coor [
[83.47375488 160.78340149]
[85.65776825 145.94325256]
[87.84178925 131.10310364]
[80.42171478 130.01109314]
[71.42855835 142.01622009]
[62.43540573 154.02134705]
[53.44225311 166.02648926]
[44.44910431 178.03161621]
[35.45595169 190.03675842]
[26.46279716 202.04188538]
[35.77081299 216.95552063]
[38.62996292 234.26568604]
[34.62825775 251.31167603]
[24.40614891 265.48397827]
[9.55422020 274.62365723]
[-7.63426876 277.35131836]
[-24.51746750 273.27514648]
[-32.97589111 285.66284180]
[-33.67256165 302.04718018]
[-48.33338547 309.39514160]
[-61.87656784 300.14773560]
[-60.37003708 283.81793213]
[-45.36359024 277.20443726]
[-36.90516663 264.81671143]
[-44.65874100 254.91128540]
[-49.32397461 243.20991516]
[-50.51576996 230.65138245]
[-48.12813950 218.24621582]
[-42.34350967 206.99545288]
[-33.61885071 197.80987549]
[-22.64958572 191.43623352]
[-10.31415462 188.39656067]
[2.39631867 188.94544983]
[14.45766544 193.04873657]
[23.45081711 181.04359436]
[32.44396973 169.03846741]
[41.43712234 157.03334045]
[50.43027496 145.02819824]
[59.42342758 133.02307129]
[68.41658020 121.01793671]
[64.91585541 104.92859650]
[68.62996674 90.01892090]
[77.86647797 79.14547729]
[89.97460938 73.96178436]
[102.03122711 74.68883514]
[107.59383392 60.75838470]
[113.15643311 46.82793427]
[118.71903992 32.89748383]
[124.28163910 18.96703148]
[129.84423828 5.03658152]
[135.40684509 -8.89386940]
[140.96945190 -22.82431984]
[146.22540283 -36.87333679]
[151.17221069 -51.03416824]
[156.11900330 -65.19499969]
[161.06579590 -79.35583496]
[149.28608704 -92.40044403]
[145.75552368 -109.52746582]
[151.35871887 -125.99853516]
[164.46601868 -137.30332947]
[181.40614319 -140.39463806]
[185.93704224 -154.69396973]
[190.46795654 -168.99330139]
[194.99885559 -183.29263306]
[199.52976990 -197.59196472]
[204.06066895 -211.89131165]
[208.59156799 -226.19064331]
[199.55220032 -238.66444397]
[199.59062195 -253.89112854]
[208.48252869 -266.03189087]
[222.64878845 -270.55459595]
[227.17970276 -284.85391235]
[231.71060181 -299.15325928]
[236.24151611 -313.45257568]
[240.77241516 -327.75192261]
[245.30332947 -342.05123901]
[244.91207886 -351.17419434]
[250.00630188 -356.52554321]
[254.74566650 -370.75714111]
[259.48501587 -384.98873901]
[264.22436523 -399.22036743]
[268.96374512 -413.45196533]
[273.59899902 -427.71780396]
[278.12988281 -442.01712036]
[282.55621338 -456.34918213]
[286.87768555 -470.71319580]
[291.19918823 -485.07720947]
[295.52066040 -499.44122314]
[285.92230225 -515.77752686]
[291.22491455 -533.63470459]
[307.61172485 -541.79980469]
[311.51162720 -556.28393555]
[315.41156006 -570.76812744]
[319.31149292 -585.25225830]
[323.21142578 -599.73638916]
[326.25857544 -614.42364502]
[328.44259644 -629.26379395]
[330.62661743 -644.10394287]
[332.81063843 -658.94409180]
[334.99465942 -673.78424072]
[337.17868042 -688.62438965]
[326.48629761 -702.47149658]
[329.06747437 -719.43322754]
[342.84167480 -729.08496094]
[344.80862427 -743.95544434]
[346.77557373 -758.82592773]
[348.74252319 -773.69641113]
[336.90377808 -783.58819580]
[332.31411743 -798.31701660]
[336.43807983 -813.18298340]
[347.95971680 -823.44238281]
[363.20251465 -825.82147217]
[377.30258179 -819.56115723]
[385.76062012 -806.65899658]
[385.87768555 -791.23205566]
[377.61642456 -778.20306396]
[363.61300659 -771.72943115]
[361.64605713 -756.85894775]
[359.67910767 -741.98846436]
[357.71215820 -727.11804199]
[366.90286255 -718.08941650]
[369.25128174 -705.22393799]
[363.67987061 -693.17730713]
[352.01882935 -686.44036865]
[349.83480835 -671.60021973]
[347.65078735 -656.76007080]
[345.46676636 -641.91992188]
[343.28274536 -627.07977295]
[341.09872437 -612.23962402]
[352.49612427 -621.99151611]
[367.43942261 -623.29455566]
[380.35275269 -615.66265869]
[386.41766357 -601.94342041]
[383.37112427 -587.25604248]
[372.34994507 -577.08093262]
[357.46649170 -575.21472168]
[344.27429199 -582.35382080]
[337.69555664 -595.83648682]
[333.79562378 -581.35235596]
[329.89572144 -566.86816406]
[325.99578857 -552.38403320]
[322.09585571 -537.89990234]
[329.79403687 -529.48419189]
[332.50314331 -518.28173828]
[329.43811035 -507.04714966]
[321.24844360 -498.60052490]
[309.88467407 -495.11972046]
[305.56320190 -480.75570679]
[301.24169922 -466.39172363]
[296.92022705 -452.02770996]
[298.00299072 -444.71908569]
[292.42922974 -437.48623657]
[287.89831543 -423.18688965]
[288.87420654 -415.86325073]
[283.19534302 -408.71258545]
[278.45599365 -394.48098755]
[273.71661377 -380.24938965]
[268.97726440 -366.01779175]
[264.23791504 -351.78619385]
[259.60266113 -337.52035522]
[255.07174683 -323.22100830]
[250.54084778 -308.92169189]
[246.00993347 -294.62234497]
[241.47903442 -280.32302856]
[236.94812012 -266.02368164]
[245.92469788 -254.16790771]
[246.20211792 -239.12174988]
[237.46444702 -226.65151978]
[222.89089966 -221.65972900]
[218.36000061 -207.36039734]
[213.82910156 -193.06106567]
[209.29818726 -178.76173401]
[204.76728821 -164.46240234]
[200.23637390 -150.16307068]
[195.70547485 -135.86373901]
[205.17967224 -127.51063538]
[210.81263733 -116.15340424]
[211.73623657 -103.46283722]
[207.77810669 -91.32086182]
[199.49241638 -81.54145050]
[188.08259583 -75.59962463]
[175.22663879 -74.40904236]
[170.27983093 -60.24820709]
[165.33303833 -46.08737183]
[160.38624573 -31.92654037]
[161.57801819 -28.61112976]
[161.22499084 -24.55418015]
[158.99630737 -20.48719215]
[154.89990234 -17.26171684]
[149.33729553 -3.33126664]
[143.77468872 10.59918404]
[138.21209717 24.52963448]
[132.64949036 38.46008682]
[127.08688354 52.39053726]
[121.52428436 66.32098389]
[115.96167755 80.25143433]
[131.66456604 99.81585693]
[124.18905640 129.22593689]
[129.34223938 143.31298828]
[134.49540710 157.40002441]
[139.64859009 171.48706055]
[150.76838684 184.28497314]
[141.54888916 198.51301575]
[125.32467651 193.59254456]
[125.56155396 176.64024353]
[120.40837097 162.55320740]
[115.25519562 148.46617126]
[110.10201263 134.37911987]
[102.68193817 133.28710938]
[100.49791718 148.12725830]
[98.31390381 162.96742249]
[96.12988281 177.80757141]
[93.94564056 192.64768982]
[79.10555267 190.46321106]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 40]
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[17 24]
[18 23]
[45 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[53 185]
[54 184]
[55 183]
[56 182]
[61 175]
[62 174]
[63 173]
[64 172]
[65 171]
[66 170]
[67 169]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[78 159]
[79 158]
[80 157]
[81 156]
[82 155]
[83 153]
[84 152]
[85 150]
[86 149]
[87 148]
[88 147]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[104 120]
[105 119]
[106 118]
[107 117]
[198 208]
[199 207]
[200 206]
[201 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
