%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NCMAP)
} def

/sequence { (\
GGGAUCCCAGGGUGGCAGCGCCGGGCGGCGGCGGGGACCCUGGCUGGGAGCGCGGCGGUGCCGGCGGGAGGCCGAGCGGGGCUCGACAGAGCAGGAUCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003191823 ubox
1 8 0.018581250 ubox
1 73 0.716046889 ubox
1 84 0.011980982 ubox
1 98 0.015809448 ubox
2 6 0.003190039 ubox
2 7 0.018530699 ubox
2 8 0.005182917 ubox
2 72 0.732665731 ubox
2 73 0.213459192 ubox
2 83 0.012004330 ubox
2 97 0.009946151 ubox
2 98 0.034747757 ubox
3 7 0.005114348 ubox
3 72 0.219324745 ubox
3 82 0.012045977 ubox
3 97 0.018679284 ubox
3 98 0.621367964 ubox
4 13 0.009396635 ubox
4 97 0.622516586 ubox
5 12 0.009590749 ubox
5 68 0.003651047 ubox
5 69 0.774414178 ubox
5 71 0.023754051 ubox
5 81 0.013475709 ubox
5 96 0.622723199 ubox
6 11 0.009867848 ubox
6 12 0.003611884 ubox
6 67 0.005123194 ubox
6 68 0.779630432 ubox
6 70 0.024809705 ubox
6 71 0.004114999 ubox
6 79 0.003843686 ubox
6 80 0.053283956 ubox
6 81 0.003163555 ubox
6 94 0.003614190 ubox
6 95 0.621154974 ubox
7 11 0.005123934 ubox
7 15 0.006771164 ubox
7 43 0.004884233 ubox
7 64 0.003753522 ubox
7 66 0.005339128 ubox
7 67 0.779759779 ubox
7 68 0.042873579 ubox
7 70 0.004333329 ubox
7 71 0.007915768 ubox
7 78 0.003913109 ubox
7 79 0.055573765 ubox
7 80 0.016767503 ubox
7 94 0.616902467 ubox
7 95 0.042356072 ubox
8 14 0.063190608 ubox
8 42 0.103432262 ubox
8 63 0.008521951 ubox
8 66 0.778822217 ubox
8 67 0.059443814 ubox
8 70 0.016485219 ubox
8 78 0.057607686 ubox
8 79 0.023160997 ubox
8 80 0.017710136 ubox
8 94 0.059193122 ubox
9 13 0.052662942 ubox
9 41 0.103699426 ubox
10 40 0.103768211 ubox
10 73 0.003485313 ubox
10 84 0.003970975 ubox
11 39 0.103773655 ubox
11 62 0.006081334 ubox
11 72 0.003373972 ubox
11 73 0.010374177 ubox
11 83 0.003953318 ubox
11 98 0.006469865 ubox
12 38 0.103770922 ubox
12 61 0.004706411 ubox
12 65 0.293215914 ubox
12 72 0.010339230 ubox
12 77 0.038633399 ubox
12 82 0.003954254 ubox
12 87 0.047622490 ubox
12 92 0.017633363 ubox
12 97 0.006378554 ubox
13 37 0.103118964 ubox
13 63 0.781545698 ubox
13 64 0.207186137 ubox
13 71 0.009563668 ubox
13 74 0.014630288 ubox
13 76 0.036546705 ubox
13 78 0.004821249 ubox
13 81 0.003815150 ubox
13 86 0.046093493 ubox
13 88 0.012716410 ubox
13 91 0.016567914 ubox
13 93 0.008288664 ubox
13 96 0.006248247 ubox
14 62 0.978988229 ubox
14 73 0.016149559 ubox
14 77 0.005762731 ubox
14 87 0.008093463 ubox
15 61 0.993785293 ubox
15 72 0.016175165 ubox
16 58 0.003383511 ubox
16 60 0.994261129 ubox
16 71 0.016170438 ubox
17 59 0.992893809 ubox
18 32 0.023815516 ubox
18 59 0.004367950 ubox
19 30 0.020367632 ubox
19 31 0.016869222 ubox
19 33 0.100195033 ubox
19 57 0.994045380 ubox
19 58 0.005100048 ubox
19 66 0.016464549 ubox
20 29 0.026426805 ubox
20 32 0.100340094 ubox
20 56 0.994441139 ubox
20 65 0.016489199 ubox
21 28 0.026461863 ubox
21 31 0.100342210 ubox
21 55 0.994455344 ubox
21 64 0.016489541 ubox
22 27 0.026423705 ubox
22 30 0.100340632 ubox
22 54 0.994438022 ubox
22 63 0.016486537 ubox
23 29 0.100141753 ubox
23 53 0.994215357 ubox
23 62 0.016125813 ubox
24 61 0.015697951 ubox
24 62 0.003528793 ubox
25 51 0.994319787 ubox
25 59 0.014457878 ubox
25 61 0.004926973 ubox
26 46 0.004165318 ubox
26 50 0.993957773 ubox
26 58 0.015301013 ubox
26 60 0.006002072 ubox
27 45 0.013901797 ubox
27 59 0.005935534 ubox
28 44 0.014027854 ubox
28 56 0.015516392 ubox
29 42 0.003751737 ubox
29 43 0.013553872 ubox
29 46 0.990295288 ubox
29 55 0.015517985 ubox
29 57 0.005871254 ubox
30 41 0.005085763 ubox
30 45 0.993333530 ubox
30 56 0.005868356 ubox
31 40 0.005386368 ubox
31 44 0.994242305 ubox
31 53 0.015536843 ubox
32 42 0.219548361 ubox
32 43 0.969741652 ubox
32 52 0.015544697 ubox
32 54 0.005824779 ubox
33 39 0.021676518 ubox
33 40 0.082688658 ubox
33 41 0.309383589 ubox
33 51 0.015525482 ubox
33 53 0.005817720 ubox
34 38 0.021387012 ubox
34 39 0.082870268 ubox
34 40 0.329810581 ubox
34 41 0.929349245 ubox
35 39 0.324846155 ubox
35 40 0.927963646 ubox
35 41 0.022671314 ubox
36 40 0.026941534 ubox
38 48 0.016543334 ubox
39 47 0.016568436 ubox
40 46 0.016565317 ubox
42 73 0.003448518 ubox
43 51 0.006987449 ubox
43 56 0.094414630 ubox
43 59 0.004628374 ubox
43 65 0.004981815 ubox
43 72 0.005044392 ubox
43 77 0.040180280 ubox
44 50 0.007041990 ubox
44 55 0.094523694 ubox
44 58 0.005039269 ubox
44 64 0.005039829 ubox
44 71 0.005166583 ubox
44 76 0.040225949 ubox
45 49 0.006347664 ubox
45 54 0.094442694 ubox
45 57 0.005038308 ubox
45 63 0.005032820 ubox
45 70 0.005127867 ubox
45 74 0.003317519 ubox
45 75 0.039935175 ubox
46 53 0.094309474 ubox
46 56 0.005020331 ubox
46 62 0.005023230 ubox
46 73 0.006727804 ubox
47 61 0.004262985 ubox
47 72 0.006732155 ubox
47 73 0.039118647 ubox
48 72 0.039101600 ubox
48 84 0.003753492 ubox
49 83 0.003757830 ubox
50 61 0.009257280 ubox
50 65 0.007928996 ubox
50 77 0.003706602 ubox
50 82 0.003757082 ubox
51 60 0.009649222 ubox
51 64 0.007942607 ubox
51 66 0.038647562 ubox
51 76 0.003710276 ubox
51 81 0.003724151 ubox
52 59 0.010377535 ubox
52 65 0.038636806 ubox
52 77 0.004141835 ubox
53 58 0.010481855 ubox
53 63 0.028595207 ubox
53 64 0.027382406 ubox
53 66 0.006381574 ubox
53 74 0.003883770 ubox
53 76 0.004137106 ubox
54 62 0.039525271 ubox
54 65 0.006386943 ubox
54 73 0.003929616 ubox
55 61 0.039597478 ubox
55 72 0.003930047 ubox
56 60 0.039309531 ubox
56 63 0.006432968 ubox
56 71 0.003929062 ubox
56 74 0.004981593 ubox
57 62 0.006353245 ubox
57 73 0.005213837 ubox
58 72 0.005210038 ubox
58 77 0.010313338 ubox
59 71 0.005190335 ubox
59 76 0.010297527 ubox
59 78 0.071571262 ubox
59 81 0.003216329 ubox
60 77 0.094882846 ubox
61 68 0.006466729 ubox
61 76 0.095080085 ubox
61 79 0.029416629 ubox
61 80 0.010977908 ubox
62 67 0.006693587 ubox
62 74 0.190733945 ubox
62 78 0.040450358 ubox
62 79 0.014998397 ubox
63 73 0.524205257 ubox
63 77 0.089911109 ubox
64 72 0.528375309 ubox
64 77 0.107311396 ubox
64 92 0.073424690 ubox
65 71 0.528585878 ubox
65 74 0.273473737 ubox
65 76 0.101659069 ubox
65 78 0.010332789 ubox
65 85 0.009904213 ubox
65 91 0.073493403 ubox
66 73 0.291418923 ubox
66 77 0.010342435 ubox
66 84 0.009256583 ubox
67 72 0.291273195 ubox
67 73 0.063053833 ubox
67 83 0.006188997 ubox
67 84 0.004667617 ubox
68 72 0.062174506 ubox
68 82 0.004604808 ubox
68 84 0.105562261 ubox
69 83 0.105525461 ubox
70 82 0.104656821 ubox
70 83 0.027391987 ubox
70 84 0.010504669 ubox
70 98 0.004520746 ubox
71 77 0.020084310 ubox
71 82 0.037324693 ubox
71 92 0.013405105 ubox
71 97 0.003938402 ubox
72 76 0.019959147 ubox
72 79 0.045550913 ubox
72 80 0.135095772 ubox
72 81 0.040620216 ubox
72 91 0.013416685 ubox
72 95 0.004052250 ubox
73 78 0.046536137 ubox
73 79 0.136216221 ubox
73 80 0.046472999 ubox
73 85 0.063906519 ubox
73 94 0.004008033 ubox
73 99 0.211827326 ubox
74 84 0.152143169 ubox
74 98 0.620441670 ubox
75 83 0.152394299 ubox
75 97 0.618330031 ubox
76 82 0.152519235 ubox
76 92 0.008332364 ubox
77 81 0.151426611 ubox
77 85 0.005402301 ubox
77 91 0.008133357 ubox
77 99 0.277770761 ubox
78 84 0.005471906 ubox
78 98 0.280520646 ubox
79 83 0.003545644 ubox
79 97 0.206866910 ubox
79 98 0.053941613 ubox
80 97 0.054352186 ubox
80 98 0.016691779 ubox
81 92 0.979882601 ubox
82 91 0.981058103 ubox
82 94 0.003318969 ubox
82 101 0.037589030 ubox
83 90 0.980926589 ubox
83 100 0.041097695 ubox
84 89 0.980649346 ubox
84 94 0.003186401 ubox
84 95 0.003352109 ubox
84 99 0.043300684 ubox
85 98 0.044427046 ubox
86 97 0.041547948 ubox
89 98 0.056864158 ubox
90 97 0.056176241 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
13 63 0.9500000 lbox
14 62 0.9500000 lbox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
17 59 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
74 98 0.9500000 lbox
75 97 0.9500000 lbox
81 92 0.9500000 lbox
82 91 0.9500000 lbox
83 90 0.9500000 lbox
84 89 0.9500000 lbox
showpage
end
%%EOF
