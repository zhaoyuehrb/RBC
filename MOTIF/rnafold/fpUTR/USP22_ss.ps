%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCGCAGCUCGGGGGCGGUGCCUGCCUUGCAGCCUCCCCUCGGCGAUCGCGCAGCCCCAUCUUUGUCCGGCCUCCGCGCUUUGUUCUCGGCGCCCGGGCCUUGGCCAGCCUGGCCAGCCGCCGAGCAGCCCCCACGCCGCGCUGGCGUCGUCCUCGCCUCCCUCGCCGCCGCCCCCCGCGCGCGGCCGGGCCUUGCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[151.36685181 418.17840576]
[152.90171814 411.59686279]
[156.42382812 405.76876831]
[161.61499023 401.28225708]
[158.87203979 386.53518677]
[156.12908936 371.78808594]
[153.38613892 357.04101562]
[150.64318848 342.29394531]
[146.32737732 336.28991699]
[147.97300720 327.29998779]
[145.45637512 312.51260376]
[135.69342041 301.26388550]
[141.00570679 286.36117554]
[138.48905945 271.57379150]
[135.97242737 256.78643799]
[133.45578003 241.99905396]
[130.93914795 227.21166992]
[128.42250061 212.42430115]
[125.79263306 197.65663147]
[123.04968262 182.90956116]
[120.30673218 168.16249084]
[117.56378174 153.41540527]
[114.82083130 138.66833496]
[93.25570679 138.44093323]
[76.02021790 127.70948029]
[64.09082794 136.80285645]
[52.16143036 145.89624023]
[40.23203659 154.98962402]
[31.30073357 169.40031433]
[14.98078251 164.80732727]
[14.87646294 147.85369873]
[31.13865662 143.06022644]
[43.06805038 133.96685791]
[54.99744415 124.87346649]
[66.92683411 115.78009033]
[64.61763763 109.53591919]
[63.47627258 102.97701263]
[63.54040909 96.31983948]
[64.80792999 89.78414154]
[67.23700714 83.58562469]
[70.74745941 77.92887878]
[75.22342682 73.00061798]
[67.55814362 60.10707092]
[59.89286423 47.21352768]
[52.22758484 34.31998444]
[44.56230545 21.42643929]
[36.89702606 8.53289509]
[29.23174477 -4.36064911]
[19.44886971 -3.22406268]
[9.85455608 -5.21918631]
[1.42077076 -10.11227894]
[-5.00808096 -17.37764359]
[-8.79967022 -26.25395203]
[-9.59585762 -35.82397461]
[-23.86170578 -40.45922852]
[-38.12755203 -45.09448242]
[-52.39340210 -49.72974014]
[-64.86734772 -40.50042725]
[-80.38410187 -40.39942932]
[-92.97713470 -49.46557617]
[-97.80418396 -64.21275330]
[-93.00914001 -78.97036743]
[-80.43580627 -88.06381989]
[-64.91887665 -87.99648285]
[-52.42493057 -78.79425812]
[-47.75814438 -63.99558640]
[-33.49229813 -59.36033249]
[-19.22644997 -54.72507858]
[-4.96060276 -50.08982086]
[-5.03633833 -53.94512558]
[-4.57830477 -57.96115112]
[-3.55677247 -62.06825256]
[-10.21257019 -75.51073456]
[-16.86836815 -88.95321655]
[-23.52416611 -102.39569855]
[-30.17996216 -115.83818817]
[-44.88327408 -120.98117828]
[-51.44170761 -134.70858765]
[-46.44803619 -148.69424438]
[-53.10383224 -162.13673401]
[-59.75963211 -175.57920837]
[-66.41542816 -189.02169800]
[-73.07122803 -202.46418762]
[-88.39036560 -204.93472290]
[-99.30776978 -215.96150208]
[-101.62546539 -231.30451965]
[-94.45225525 -245.06404114]
[-80.54638672 -251.94927979]
[-65.25495148 -249.31269836]
[-54.45780945 -238.16813660]
[-52.30669403 -222.80088806]
[-59.62874222 -209.11997986]
[-52.97294617 -195.67749023]
[-46.31714630 -182.23501587]
[-39.66135025 -168.79252625]
[-33.00555420 -155.35005188]
[-18.85556221 -150.84300232]
[-11.91414452 -137.30523682]
[-16.73748016 -122.49398041]
[-10.08168221 -109.05149841]
[-3.42588425 -95.60901642]
[3.22991323 -82.16653442]
[9.88571072 -68.72404480]
[24.83246040 -69.98685455]
[29.13858604 -84.35547638]
[33.44471359 -98.72409058]
[37.75083923 -113.09271240]
[42.05696487 -127.46133423]
[46.36309433 -141.82995605]
[50.66921997 -156.19857788]
[49.42440033 -173.10676575]
[65.32720947 -178.98358154]
[75.37670135 -165.32913208]
[65.03784180 -151.89245605]
[60.73171234 -137.52383423]
[56.42558670 -123.15521240]
[52.11946106 -108.78659058]
[47.81333542 -94.41796875]
[43.50720978 -80.04934692]
[39.20108032 -65.68072510]
[53.99734116 -38.12010574]
[42.12528992 -12.02592945]
[49.79056931 0.86761469]
[57.45584869 13.76115894]
[65.12113190 26.65470314]
[72.78640747 39.54824829]
[80.45169067 52.44179153]
[88.11697388 65.33533478]
[101.76833344 63.39783478]
[115.16934967 66.64229584]
[126.42275238 74.60938263]
[139.13670349 66.64976501]
[142.43408203 51.19328690]
[155.74032593 42.66572189]
[171.16108704 46.12633133]
[179.54748535 59.52199173]
[175.92404175 74.90529633]
[162.44046021 83.14961243]
[147.09632874 79.36371613]
[134.38237000 87.32333374]
[138.96076965 97.70874023]
[140.26585388 109.67251587]
[155.24429321 110.47668457]
[170.22271729 111.28085327]
[184.43157959 97.08187866]
[204.19731140 97.89004517]
[216.80444336 112.73656464]
[231.80401611 112.85149384]
[246.80357361 112.96643066]
[261.80313110 113.08136749]
[271.80789185 101.06309509]
[287.20626831 98.33837891]
[300.72760010 106.19375610]
[305.98757935 120.92015076]
[300.50256348 135.56422424]
[286.86242676 143.21147156]
[271.50759888 140.25111389]
[261.68820190 128.08093262]
[246.68862915 127.96598816]
[231.68907166 127.85105896]
[216.68951416 127.73612213]
[211.58155823 136.64945984]
[203.16746521 142.68336487]
[192.92810059 144.69337463]
[182.70022583 142.25054932]
[174.34696960 135.73091125]
[169.41854858 126.25928497]
[154.44012451 125.45511627]
[139.46168518 124.65094757]
[129.56790161 135.92538452]
[132.31085205 150.67245483]
[135.05380249 165.41954041]
[137.79675293 180.16661072]
[140.53970337 194.91368103]
[145.18766785 202.78282166]
[143.20988464 209.90765381]
[145.72651672 224.69503784]
[148.24316406 239.48240662]
[150.75979614 254.26979065]
[153.27644348 269.05715942]
[155.79307556 283.84454346]
[165.73603821 296.15097046]
[160.24374390 309.99597168]
[162.76039124 324.78332520]
[165.39025879 339.55099487]
[168.13320923 354.29806519]
[170.87615967 369.04513550]
[173.61911011 383.79223633]
[176.36206055 398.53930664]
[193.48797607 415.13766479]
[185.23472595 436.73925781]
[189.32015991 451.17218018]
[193.40559387 465.60510254]
[197.49102783 480.03802490]
[207.62277222 493.63156128]
[197.36521912 507.13040161]
[181.55433655 501.01058960]
[183.05810547 484.12344360]
[178.97267151 469.69052124]
[174.88723755 455.25759888]
[170.80180359 440.82467651]
[164.46884155 439.35900879]
[158.85572815 435.97958374]
[154.52955627 430.99060059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[10 184]
[11 183]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 174]
[20 173]
[21 172]
[22 171]
[23 170]
[25 35]
[26 34]
[27 33]
[28 32]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[47 123]
[48 122]
[54 69]
[55 68]
[56 67]
[57 66]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[104 120]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[131 140]
[132 139]
[142 169]
[143 168]
[144 167]
[147 161]
[148 160]
[149 159]
[150 158]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
