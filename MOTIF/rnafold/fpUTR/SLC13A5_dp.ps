%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC13A5)
} def

/sequence { (\
AAUCCCCGGGGACUGUGGCCCCUUCUUAAGCCCGCGGCGCCUCUAGCUGCCCCUCACUCGUCUCGCCCGCCAGUCUCCCUCCCGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
7 84 0.138209250 ubox
7 86 0.021819421 ubox
7 88 0.011284802 ubox
8 22 0.003830306 ubox
8 53 0.004803914 ubox
8 77 0.004778642 ubox
8 78 0.818719716 ubox
8 79 0.552190722 ubox
8 80 0.028699378 ubox
8 81 0.012055590 ubox
8 82 0.013025362 ubox
8 83 0.140129202 ubox
8 85 0.014307982 ubox
8 87 0.005396654 ubox
9 21 0.003835534 ubox
9 52 0.004809026 ubox
9 64 0.004018813 ubox
9 76 0.004044202 ubox
9 77 0.821875255 ubox
9 78 0.550896545 ubox
9 79 0.031836713 ubox
9 80 0.007726956 ubox
9 81 0.012732353 ubox
9 82 0.139307994 ubox
9 83 0.011617028 ubox
10 20 0.003835429 ubox
10 51 0.004806512 ubox
10 63 0.004156827 ubox
10 75 0.003517987 ubox
10 76 0.823530950 ubox
10 77 0.548829374 ubox
10 78 0.031804906 ubox
10 79 0.009019704 ubox
10 80 0.007422109 ubox
10 81 0.134903430 ubox
10 82 0.011576707 ubox
10 83 0.003947239 ubox
11 19 0.003829031 ubox
11 50 0.004597898 ubox
11 62 0.004533818 ubox
11 75 0.997494748 ubox
11 76 0.052343356 ubox
11 77 0.029458233 ubox
11 78 0.007754677 ubox
11 79 0.012527996 ubox
11 80 0.028267750 ubox
11 81 0.010563871 ubox
11 82 0.003212188 ubox
12 61 0.004548776 ubox
12 74 0.999484794 ubox
12 76 0.022592441 ubox
12 80 0.008163701 ubox
13 46 0.003836043 ubox
13 60 0.004550780 ubox
13 73 0.999877445 ubox
14 45 0.003837700 ubox
14 69 0.017151781 ubox
14 72 0.998185478 ubox
15 33 0.011615316 ubox
15 35 0.007437325 ubox
15 44 0.003741487 ubox
15 57 0.003366493 ubox
15 68 0.035061892 ubox
15 70 0.441465441 ubox
15 71 0.895192730 ubox
16 34 0.007867303 ubox
16 56 0.003409235 ubox
16 69 0.620337428 ubox
16 72 0.015260182 ubox
17 32 0.088145448 ubox
17 33 0.020115718 ubox
17 41 0.004594019 ubox
17 51 0.006358855 ubox
17 67 0.852962428 ubox
17 68 0.512517233 ubox
17 71 0.020508961 ubox
18 31 0.089394592 ubox
18 32 0.018717780 ubox
18 35 0.004536000 ubox
18 40 0.004602487 ubox
18 50 0.006475255 ubox
18 66 0.924189749 ubox
18 67 0.369774088 ubox
18 70 0.021750754 ubox
19 30 0.089632174 ubox
19 34 0.004695781 ubox
19 39 0.004601964 ubox
19 49 0.006523340 ubox
19 65 0.988190236 ubox
19 69 0.021691712 ubox
21 37 0.003415653 ubox
22 30 0.110463377 ubox
22 36 0.003424566 ubox
22 46 0.006671287 ubox
23 29 0.110723489 ubox
23 30 0.015842277 ubox
23 45 0.006598291 ubox
24 28 0.092472557 ubox
24 29 0.016995625 ubox
29 54 0.310867192 ubox
29 58 0.055440319 ubox
29 63 0.008305274 ubox
30 38 0.015612784 ubox
30 53 0.322779137 ubox
30 57 0.057263229 ubox
30 61 0.008223960 ubox
30 62 0.008558242 ubox
30 66 0.019399721 ubox
31 37 0.015633312 ubox
31 60 0.010092974 ubox
31 65 0.019352187 ubox
32 36 0.015521621 ubox
33 60 0.006033767 ubox
33 65 0.005010383 ubox
33 69 0.016345228 ubox
34 50 0.995218738 ubox
34 59 0.003791634 ubox
34 61 0.005025355 ubox
34 64 0.005662282 ubox
34 66 0.007267835 ubox
34 68 0.017115860 ubox
34 70 0.058254921 ubox
35 49 0.996892302 ubox
35 60 0.005143940 ubox
35 65 0.007272240 ubox
35 69 0.058371745 ubox
36 48 0.996164476 ubox
36 51 0.044416508 ubox
36 52 0.004981846 ubox
36 53 0.003997303 ubox
36 62 0.006115050 ubox
36 64 0.005739848 ubox
36 67 0.031263105 ubox
36 68 0.052597551 ubox
36 71 0.003613247 ubox
37 47 0.996896697 ubox
37 50 0.044599342 ubox
37 51 0.004732160 ubox
37 52 0.004012958 ubox
37 61 0.006517146 ubox
37 63 0.004111072 ubox
37 66 0.040211330 ubox
37 67 0.046119886 ubox
37 70 0.003628841 ubox
38 46 0.996753250 ubox
38 49 0.044622139 ubox
38 60 0.006964384 ubox
38 65 0.047487210 ubox
38 69 0.003628113 ubox
39 47 0.042682305 ubox
39 48 0.017569604 ubox
39 50 0.010314686 ubox
39 59 0.006790445 ubox
39 61 0.004661307 ubox
39 64 0.046814965 ubox
39 66 0.038364878 ubox
39 68 0.003494914 ubox
40 46 0.043624464 ubox
40 49 0.010392963 ubox
40 60 0.005522997 ubox
40 65 0.038308200 ubox
45 54 0.007459105 ubox
45 58 0.043924190 ubox
45 63 0.014377775 ubox
46 53 0.007684115 ubox
46 57 0.045459751 ubox
46 61 0.016490426 ubox
46 62 0.014665073 ubox
47 60 0.018951981 ubox
48 56 0.042828638 ubox
48 60 0.008745935 ubox
49 55 0.042948042 ubox
49 59 0.009524163 ubox
49 61 0.007788572 ubox
49 66 0.003346116 ubox
50 60 0.008156672 ubox
50 65 0.003365561 ubox
59 65 0.034574778 ubox
59 69 0.020683439 ubox
60 64 0.041589795 ubox
60 66 0.040297108 ubox
60 68 0.021806103 ubox
60 70 0.017836464 ubox
61 65 0.037769925 ubox
61 69 0.017470606 ubox
64 88 0.006972769 ubox
65 87 0.008430573 ubox
66 86 0.008398215 ubox
68 84 0.008225880 ubox
69 83 0.008201138 ubox
72 80 0.008140204 ubox
73 79 0.008221800 ubox
8 78 0.9500000 lbox
9 77 0.9500000 lbox
10 76 0.9500000 lbox
11 75 0.9500000 lbox
12 74 0.9500000 lbox
13 73 0.9500000 lbox
14 72 0.9500000 lbox
15 71 0.9500000 lbox
17 67 0.9500000 lbox
18 66 0.9500000 lbox
19 65 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
38 46 0.9500000 lbox
showpage
end
%%EOF
