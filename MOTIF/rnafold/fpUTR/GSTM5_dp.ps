%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GSTM5)
} def

/sequence { (\
CUCCUGGGCCUCUCAAAGUCUGAGCCCCGCUCCGCUGAUGCCUGUCUGCAGAAUCCGCACCAACCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.006858942 ubox
1 24 0.013633262 ubox
1 51 0.014829507 ubox
1 67 0.026108833 ubox
2 17 0.006748556 ubox
2 23 0.014067737 ubox
2 38 0.019866973 ubox
2 50 0.014129896 ubox
2 52 0.019974086 ubox
2 66 0.024952567 ubox
3 22 0.014058144 ubox
3 37 0.021188250 ubox
3 51 0.020319493 ubox
4 18 0.004425784 ubox
4 24 0.005739398 ubox
4 51 0.031690141 ubox
4 67 0.155738715 ubox
5 15 0.027548167 ubox
5 17 0.003727554 ubox
5 22 0.007425676 ubox
5 23 0.005694184 ubox
5 29 0.557063187 ubox
5 34 0.028606979 ubox
5 44 0.073452356 ubox
5 48 0.007883025 ubox
5 50 0.031466877 ubox
5 57 0.003952952 ubox
5 59 0.004966807 ubox
5 62 0.042123121 ubox
5 66 0.157150084 ubox
5 69 0.008482311 ubox
6 14 0.029784839 ubox
6 21 0.052998412 ubox
6 26 0.005854898 ubox
6 27 0.492764891 ubox
6 28 0.827307027 ubox
6 32 0.101835251 ubox
6 33 0.099241930 ubox
6 43 0.126333411 ubox
6 46 0.003219276 ubox
6 47 0.013923263 ubox
6 49 0.026153939 ubox
6 56 0.008966421 ubox
6 58 0.004303844 ubox
6 61 0.045246709 ubox
6 65 0.154987221 ubox
6 68 0.005579654 ubox
6 71 0.015766142 ubox
7 12 0.004615154 ubox
7 13 0.029491179 ubox
7 14 0.004037532 ubox
7 20 0.058921499 ubox
7 21 0.007167809 ubox
7 25 0.005664279 ubox
7 26 0.497645108 ubox
7 27 0.826195430 ubox
7 28 0.024000097 ubox
7 31 0.104338270 ubox
7 32 0.098957203 ubox
7 33 0.003415843 ubox
7 42 0.135884814 ubox
7 46 0.018756822 ubox
7 47 0.003992063 ubox
7 55 0.008836040 ubox
7 56 0.008268164 ubox
7 60 0.044724216 ubox
7 61 0.007299745 ubox
7 64 0.148750527 ubox
7 65 0.005843564 ubox
7 70 0.015868284 ubox
8 12 0.029469896 ubox
8 13 0.004191043 ubox
8 19 0.074862652 ubox
8 20 0.022788871 ubox
8 25 0.500938369 ubox
8 26 0.823770012 ubox
8 27 0.024929609 ubox
8 30 0.155061607 ubox
8 31 0.013461881 ubox
8 32 0.003297878 ubox
8 35 0.003290223 ubox
8 41 0.139585814 ubox
8 45 0.020087426 ubox
8 46 0.004713517 ubox
8 54 0.006594997 ubox
8 55 0.008335051 ubox
8 58 0.040205862 ubox
8 60 0.009126833 ubox
8 64 0.006773724 ubox
8 68 0.014843389 ubox
9 18 0.075933422 ubox
9 24 0.374746555 ubox
9 29 0.155333711 ubox
9 34 0.003292414 ubox
9 40 0.139500219 ubox
9 44 0.020401541 ubox
9 57 0.040151221 ubox
9 67 0.014703387 ubox
10 18 0.040469129 ubox
10 24 0.763581449 ubox
10 67 0.004723977 ubox
11 17 0.040124606 ubox
11 23 0.830000427 ubox
11 38 0.112385439 ubox
11 52 0.013506004 ubox
11 66 0.004752859 ubox
12 18 0.029044260 ubox
12 22 0.829988147 ubox
12 24 0.480681799 ubox
12 37 0.113610172 ubox
12 51 0.013751700 ubox
13 17 0.027572404 ubox
13 23 0.513676981 ubox
13 38 0.076644219 ubox
13 50 0.012903318 ubox
13 52 0.010820795 ubox
14 22 0.514872869 ubox
14 37 0.077263683 ubox
14 40 0.015443630 ubox
14 48 0.007834374 ubox
14 51 0.011002665 ubox
15 21 0.491015993 ubox
15 36 0.054628875 ubox
15 39 0.015550013 ubox
15 47 0.007246585 ubox
17 31 0.003459889 ubox
17 36 0.135066609 ubox
18 30 0.003631269 ubox
18 35 0.147154806 ubox
18 39 0.007393219 ubox
18 54 0.003236609 ubox
18 60 0.004138612 ubox
18 68 0.003530007 ubox
18 70 0.004929603 ubox
19 29 0.003482585 ubox
19 34 0.144828349 ubox
19 38 0.007793550 ubox
19 52 0.039467959 ubox
19 59 0.003884733 ubox
19 69 0.004879139 ubox
20 37 0.007836498 ubox
20 51 0.039831325 ubox
20 67 0.005420055 ubox
21 34 0.005232424 ubox
21 50 0.039129644 ubox
21 66 0.005368655 ubox
22 32 0.200686564 ubox
22 33 0.012815185 ubox
22 49 0.031977939 ubox
22 65 0.004554628 ubox
23 31 0.201849112 ubox
23 36 0.011061512 ubox
23 47 0.027732673 ubox
24 30 0.202064174 ubox
24 35 0.011708456 ubox
24 45 0.007109386 ubox
24 46 0.027688821 ubox
24 58 0.003636298 ubox
24 68 0.004908100 ubox
25 29 0.200610962 ubox
25 34 0.011737643 ubox
25 44 0.015006396 ubox
25 57 0.003703093 ubox
25 67 0.004929195 ubox
28 34 0.015381797 ubox
28 37 0.023727486 ubox
28 44 0.004900868 ubox
28 57 0.043425218 ubox
29 33 0.030243233 ubox
29 35 0.090765326 ubox
29 36 0.013050826 ubox
29 39 0.003424854 ubox
29 41 0.065659982 ubox
29 43 0.003304429 ubox
29 45 0.019962193 ubox
29 49 0.031900091 ubox
29 56 0.060779025 ubox
29 58 0.123839400 ubox
29 68 0.393002617 ubox
30 34 0.090373643 ubox
30 40 0.065844431 ubox
30 44 0.021124339 ubox
30 48 0.031931611 ubox
30 51 0.047143626 ubox
30 57 0.123971151 ubox
30 67 0.393663510 ubox
31 38 0.058528120 ubox
31 50 0.043905859 ubox
31 52 0.309080910 ubox
31 66 0.379297291 ubox
32 37 0.059969571 ubox
32 51 0.322563508 ubox
33 40 0.005381707 ubox
33 44 0.009985523 ubox
33 48 0.006937632 ubox
33 57 0.032739063 ubox
34 39 0.003856617 ubox
34 41 0.122885515 ubox
34 43 0.004215440 ubox
34 45 0.024166017 ubox
34 47 0.005137735 ubox
34 49 0.355801730 ubox
34 56 0.035950525 ubox
34 58 0.584808941 ubox
34 68 0.590083800 ubox
35 40 0.123078354 ubox
35 44 0.025127945 ubox
35 48 0.355320784 ubox
35 51 0.023581891 ubox
35 57 0.585084345 ubox
35 67 0.590707336 ubox
36 50 0.023116047 ubox
36 57 0.008261160 ubox
36 59 0.010382067 ubox
36 62 0.290886063 ubox
36 66 0.586236496 ubox
36 69 0.025419713 ubox
37 46 0.354246448 ubox
37 49 0.022184200 ubox
37 55 0.591723044 ubox
37 56 0.021064206 ubox
37 58 0.010669314 ubox
37 61 0.306968125 ubox
37 65 0.577515177 ubox
37 68 0.028421913 ubox
38 45 0.354165507 ubox
38 54 0.593895167 ubox
39 44 0.337317626 ubox
39 48 0.009439641 ubox
39 50 0.135671062 ubox
39 53 0.581216844 ubox
39 57 0.010386447 ubox
39 59 0.522131843 ubox
39 62 0.139038347 ubox
39 66 0.035622784 ubox
39 69 0.156674458 ubox
40 47 0.007044333 ubox
40 49 0.153451845 ubox
40 56 0.011288873 ubox
40 58 0.535710292 ubox
40 61 0.141224431 ubox
40 65 0.043468894 ubox
40 68 0.180102801 ubox
41 48 0.153083576 ubox
41 57 0.535497543 ubox
41 67 0.169808641 ubox
42 51 0.727062709 ubox
42 67 0.080541058 ubox
43 50 0.728310114 ubox
43 57 0.014187914 ubox
43 59 0.153296487 ubox
43 62 0.217446223 ubox
43 66 0.100710121 ubox
43 69 0.016541792 ubox
44 49 0.724124304 ubox
44 54 0.103225838 ubox
44 56 0.025168073 ubox
44 58 0.158383196 ubox
44 60 0.119911102 ubox
44 61 0.224029265 ubox
44 64 0.222510750 ubox
44 65 0.091054543 ubox
44 68 0.022551189 ubox
44 70 0.020684407 ubox
45 52 0.289419109 ubox
45 53 0.087624183 ubox
45 57 0.152272648 ubox
45 59 0.088287459 ubox
45 63 0.224676761 ubox
45 67 0.011597930 ubox
45 69 0.020406377 ubox
46 51 0.295955741 ubox
46 67 0.029221417 ubox
47 57 0.030484086 ubox
47 59 0.382394192 ubox
47 62 0.019775742 ubox
47 66 0.028859352 ubox
47 69 0.037160271 ubox
48 56 0.042346385 ubox
48 58 0.405114347 ubox
48 61 0.018064997 ubox
48 65 0.028143705 ubox
48 68 0.042113733 ubox
49 57 0.405057073 ubox
49 67 0.042086527 ubox
57 68 0.325417051 ubox
58 67 0.325733496 ubox
5 29 0.9500000 lbox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
44 49 0.9500000 lbox
showpage
end
%%EOF
