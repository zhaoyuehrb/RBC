%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TGIF2LX)
} def

/sequence { (\
CGCUGUUUGUCUUUCUCGGAAACAACAGUAACGAUAAGCCUCUUGGAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.151473715 ubox
1 45 0.018486096 ubox
2 10 0.012689015 ubox
2 29 0.954755951 ubox
2 32 0.125191110 ubox
2 39 0.071411015 ubox
2 44 0.014318175 ubox
3 9 0.013240866 ubox
3 19 0.004379067 ubox
3 28 0.992454223 ubox
3 38 0.072309374 ubox
3 46 0.017900885 ubox
4 18 0.004393686 ubox
4 24 0.029719658 ubox
4 27 0.992581477 ubox
4 30 0.007437054 ubox
4 33 0.014610583 ubox
4 36 0.007407214 ubox
4 37 0.071281939 ubox
4 45 0.017818500 ubox
5 17 0.004388280 ubox
5 23 0.033311256 ubox
5 26 0.992656147 ubox
5 29 0.006602749 ubox
5 32 0.019821055 ubox
5 35 0.010159380 ubox
5 39 0.075715228 ubox
5 44 0.008154021 ubox
6 20 0.014012038 ubox
6 21 0.004625365 ubox
6 22 0.034223671 ubox
6 25 0.844878713 ubox
6 28 0.003398761 ubox
6 31 0.019528700 ubox
6 34 0.010087543 ubox
6 38 0.076935662 ubox
7 19 0.023709751 ubox
7 20 0.009417268 ubox
7 21 0.037056853 ubox
7 22 0.048873058 ubox
7 24 0.615281966 ubox
7 25 0.510823756 ubox
7 28 0.017649490 ubox
7 30 0.014700949 ubox
7 33 0.008509176 ubox
7 34 0.068515633 ubox
7 37 0.077920061 ubox
8 18 0.035648293 ubox
8 19 0.010481150 ubox
8 20 0.037186763 ubox
8 21 0.069329661 ubox
8 24 0.725998444 ubox
8 27 0.024979107 ubox
8 33 0.068664961 ubox
8 36 0.078903347 ubox
9 17 0.036232998 ubox
9 23 0.890947518 ubox
9 26 0.025677161 ubox
9 32 0.068701887 ubox
9 35 0.079011180 ubox
9 39 0.008388626 ubox
10 19 0.129674508 ubox
10 20 0.443201751 ubox
10 22 0.814792370 ubox
10 25 0.024979788 ubox
10 31 0.064615536 ubox
10 34 0.078787690 ubox
11 18 0.161057761 ubox
11 19 0.492232048 ubox
11 28 0.029075291 ubox
11 33 0.078573880 ubox
11 38 0.021885698 ubox
12 18 0.472067379 ubox
12 19 0.056331242 ubox
12 20 0.489253579 ubox
12 21 0.359490646 ubox
12 22 0.228742992 ubox
12 27 0.026862123 ubox
12 28 0.005707412 ubox
12 31 0.040075525 ubox
12 37 0.021988718 ubox
12 38 0.011416228 ubox
13 18 0.056040865 ubox
13 19 0.489486352 ubox
13 20 0.363831769 ubox
13 21 0.461402610 ubox
13 22 0.016918586 ubox
13 25 0.007086777 ubox
13 27 0.005302847 ubox
13 28 0.013534366 ubox
13 30 0.035353664 ubox
13 31 0.041261729 ubox
13 36 0.021446036 ubox
13 37 0.014800073 ubox
13 48 0.007810999 ubox
14 18 0.361311237 ubox
14 19 0.336162193 ubox
14 20 0.503871798 ubox
14 21 0.027582245 ubox
14 24 0.006681107 ubox
14 27 0.012311994 ubox
14 30 0.041376904 ubox
14 36 0.014642988 ubox
14 47 0.008984066 ubox
15 19 0.501872669 ubox
15 28 0.065667457 ubox
15 46 0.009102045 ubox
16 27 0.062641758 ubox
16 34 0.032246004 ubox
16 45 0.008779335 ubox
17 33 0.033418789 ubox
18 32 0.034005008 ubox
18 43 0.008862689 ubox
19 42 0.009037844 ubox
20 41 0.008679036 ubox
22 29 0.032808146 ubox
23 28 0.033849262 ubox
26 45 0.003243546 ubox
28 35 0.003678566 ubox
28 39 0.005631696 ubox
28 49 0.005241629 ubox
29 34 0.005437948 ubox
29 36 0.012614890 ubox
29 38 0.007204758 ubox
29 45 0.016240737 ubox
29 48 0.013090847 ubox
30 35 0.020096657 ubox
30 44 0.033242647 ubox
31 43 0.035029223 ubox
32 45 0.176737094 ubox
33 42 0.136453337 ubox
33 44 0.175620838 ubox
34 41 0.129088187 ubox
34 43 0.172764471 ubox
34 49 0.064990301 ubox
35 45 0.128631827 ubox
35 48 0.067417226 ubox
36 44 0.145342048 ubox
37 43 0.148278785 ubox
37 44 0.016456470 ubox
38 42 0.145629416 ubox
38 43 0.013232363 ubox
39 46 0.880750662 ubox
40 45 0.883334925 ubox
40 46 0.064011080 ubox
41 45 0.057895111 ubox
41 47 0.049461656 ubox
42 46 0.051505208 ubox
2 29 0.9500000 lbox
3 28 0.9500000 lbox
4 27 0.9500000 lbox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
