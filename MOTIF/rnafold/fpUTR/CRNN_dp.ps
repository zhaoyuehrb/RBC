%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRNN)
} def

/sequence { (\
ACUGACCUGGUACUCCUCACACCACUUAACAGCCACUUGUUUCAUCCCACCUGGGCAUUAGGUUGACUUCAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.019165519 ubox
2 10 0.020293317 ubox
2 32 0.028789971 ubox
2 61 0.010531364 ubox
2 74 0.048208687 ubox
3 9 0.019805162 ubox
3 19 0.042372229 ubox
3 21 0.021479090 ubox
3 24 0.012341238 ubox
3 28 0.049622797 ubox
3 31 0.029016429 ubox
3 44 0.005493303 ubox
3 60 0.010550393 ubox
3 65 0.641976559 ubox
3 71 0.070085663 ubox
3 73 0.047309890 ubox
4 8 0.009258955 ubox
4 15 0.006370102 ubox
4 18 0.047827347 ubox
4 20 0.024173893 ubox
4 23 0.014031658 ubox
4 27 0.052800054 ubox
4 30 0.028972892 ubox
4 41 0.007176997 ubox
4 43 0.006109919 ubox
4 56 0.003369415 ubox
4 59 0.010392605 ubox
4 64 0.947423202 ubox
4 69 0.004997332 ubox
4 70 0.075057405 ubox
5 11 0.004320484 ubox
5 14 0.006289771 ubox
5 17 0.047334308 ubox
5 26 0.051301213 ubox
5 40 0.007866631 ubox
5 42 0.005594702 ubox
5 58 0.009235813 ubox
5 63 0.978122747 ubox
5 68 0.004976489 ubox
5 69 0.064626688 ubox
6 10 0.004471804 ubox
6 39 0.008072699 ubox
6 55 0.004704671 ubox
6 62 0.983364737 ubox
7 32 0.004771681 ubox
7 54 0.004702840 ubox
7 61 0.983392952 ubox
7 74 0.005655217 ubox
8 19 0.018783128 ubox
8 21 0.010001643 ubox
8 24 0.145678478 ubox
8 31 0.004889152 ubox
8 35 0.013812495 ubox
8 53 0.004359745 ubox
8 60 0.981167184 ubox
8 71 0.004681318 ubox
8 73 0.005374282 ubox
9 15 0.007784691 ubox
9 16 0.094858422 ubox
9 17 0.006558091 ubox
9 18 0.022118066 ubox
9 20 0.011949460 ubox
9 23 0.180220043 ubox
9 26 0.010103568 ubox
9 30 0.005003007 ubox
9 34 0.019128306 ubox
9 51 0.004840182 ubox
9 56 0.003813050 ubox
9 59 0.974396677 ubox
9 68 0.017865178 ubox
9 70 0.004967494 ubox
10 14 0.005173790 ubox
10 15 0.095096941 ubox
10 16 0.009782165 ubox
10 17 0.017591524 ubox
10 20 0.019964897 ubox
10 22 0.180473949 ubox
10 25 0.012986131 ubox
10 30 0.003630522 ubox
10 33 0.019186678 ubox
10 50 0.004859724 ubox
10 56 0.019759272 ubox
10 58 0.970039002 ubox
10 67 0.018313451 ubox
10 69 0.004473565 ubox
11 19 0.019720518 ubox
11 21 0.174083966 ubox
11 24 0.012555996 ubox
11 29 0.003525426 ubox
11 32 0.018765603 ubox
11 49 0.004702471 ubox
11 55 0.017123666 ubox
11 57 0.955666016 ubox
11 66 0.017936474 ubox
12 40 0.005534230 ubox
13 32 0.004249237 ubox
13 39 0.005894322 ubox
13 54 0.028745025 ubox
13 55 0.775039440 ubox
14 31 0.004161553 ubox
14 53 0.025549628 ubox
14 54 0.459578531 ubox
14 55 0.428557957 ubox
15 53 0.451006244 ubox
15 54 0.777072840 ubox
15 55 0.323092469 ubox
15 62 0.015476397 ubox
16 32 0.003991824 ubox
16 53 0.778594118 ubox
16 54 0.322964079 ubox
16 55 0.082232753 ubox
16 61 0.015480905 ubox
17 31 0.003917948 ubox
17 53 0.279244345 ubox
17 54 0.084072192 ubox
17 60 0.014481665 ubox
17 66 0.024017599 ubox
18 39 0.006248814 ubox
18 53 0.163783085 ubox
18 54 0.003240034 ubox
18 65 0.025983148 ubox
19 38 0.005923458 ubox
19 40 0.015299816 ubox
19 52 0.159829428 ubox
19 64 0.025705615 ubox
20 39 0.016259996 ubox
20 53 0.008312161 ubox
20 65 0.015081845 ubox
21 38 0.014922741 ubox
21 40 0.003796781 ubox
21 52 0.009051051 ubox
21 63 0.017349545 ubox
21 64 0.014164895 ubox
22 39 0.003921708 ubox
22 54 0.014241656 ubox
22 55 0.004186353 ubox
22 62 0.017873931 ubox
23 39 0.005445648 ubox
23 53 0.014460613 ubox
23 54 0.004143282 ubox
23 61 0.017826957 ubox
23 65 0.026831772 ubox
24 38 0.005060835 ubox
24 40 0.012866757 ubox
24 52 0.013876256 ubox
24 63 0.045340662 ubox
24 64 0.019027786 ubox
25 32 0.019381984 ubox
25 39 0.013692499 ubox
25 62 0.054143518 ubox
25 74 0.020139854 ubox
26 31 0.017977385 ubox
26 61 0.054157151 ubox
26 66 0.006465923 ubox
26 72 0.006642831 ubox
26 73 0.020298263 ubox
27 39 0.008696369 ubox
27 60 0.054810764 ubox
27 65 0.005838002 ubox
27 71 0.007178949 ubox
27 72 0.018738564 ubox
28 38 0.009151188 ubox
28 41 0.938609230 ubox
28 42 0.033172588 ubox
28 59 0.054596154 ubox
28 64 0.005715805 ubox
28 69 0.014300982 ubox
29 37 0.008378935 ubox
29 40 0.975916015 ubox
29 41 0.025799206 ubox
29 58 0.050990739 ubox
29 63 0.005327116 ubox
29 68 0.013833183 ubox
30 39 0.979834941 ubox
30 53 0.006356351 ubox
30 62 0.005245569 ubox
30 65 0.162525533 ubox
31 37 0.110368090 ubox
31 38 0.943241025 ubox
31 41 0.031512578 ubox
31 52 0.007206897 ubox
31 64 0.163133300 ubox
31 68 0.014447892 ubox
32 36 0.152209510 ubox
32 37 0.689620260 ubox
32 40 0.037284577 ubox
32 41 0.003208819 ubox
32 51 0.007192444 ubox
32 56 0.065978266 ubox
32 63 0.163450918 ubox
32 67 0.015172677 ubox
33 39 0.037627540 ubox
33 54 0.041168255 ubox
33 55 0.064666863 ubox
33 62 0.163603493 ubox
34 53 0.043395559 ubox
34 54 0.063193011 ubox
34 61 0.163307804 ubox
34 65 0.021378378 ubox
35 52 0.044813266 ubox
35 63 0.021711691 ubox
35 64 0.015242833 ubox
36 61 0.004088456 ubox
36 62 0.027254912 ubox
36 74 0.010310987 ubox
37 53 0.003215591 ubox
37 60 0.007172149 ubox
37 61 0.027275071 ubox
37 72 0.013846190 ubox
37 73 0.009865786 ubox
38 44 0.013073615 ubox
38 49 0.059170190 ubox
38 57 0.155323812 ubox
38 60 0.031196575 ubox
38 71 0.015665245 ubox
38 72 0.009127828 ubox
39 43 0.014246709 ubox
39 45 0.004050162 ubox
39 48 0.060369991 ubox
39 50 0.041416383 ubox
39 56 0.157104777 ubox
39 58 0.014706789 ubox
39 59 0.030680528 ubox
39 67 0.004167723 ubox
39 70 0.016233057 ubox
40 44 0.004173977 ubox
40 49 0.040954679 ubox
40 55 0.103069970 ubox
40 57 0.014586025 ubox
40 66 0.003841518 ubox
41 53 0.003731176 ubox
41 54 0.073024892 ubox
41 55 0.050746915 ubox
41 60 0.012218229 ubox
41 61 0.003480342 ubox
41 65 0.003379925 ubox
42 53 0.044447200 ubox
42 54 0.071736960 ubox
42 60 0.014801599 ubox
42 66 0.022129779 ubox
43 53 0.089912326 ubox
43 54 0.005325724 ubox
43 65 0.023545841 ubox
44 52 0.085445412 ubox
44 58 0.063174033 ubox
44 64 0.023324070 ubox
45 54 0.007711277 ubox
45 55 0.020084836 ubox
45 57 0.068026095 ubox
45 66 0.012601168 ubox
46 53 0.009845438 ubox
46 54 0.037439960 ubox
46 55 0.220700998 ubox
46 62 0.003283154 ubox
46 65 0.013433598 ubox
47 53 0.037438881 ubox
47 54 0.226015244 ubox
47 55 0.014207002 ubox
47 61 0.003233933 ubox
48 53 0.225810818 ubox
48 54 0.014428916 ubox
48 65 0.017921834 ubox
49 63 0.034095883 ubox
49 64 0.012691593 ubox
50 62 0.037311658 ubox
51 61 0.037322575 ubox
52 60 0.037263883 ubox
53 59 0.036338810 ubox
54 58 0.023587496 ubox
56 65 0.006155283 ubox
57 64 0.006039160 ubox
60 68 0.005693249 ubox
61 67 0.006168561 ubox
61 68 0.003624892 ubox
61 70 0.003887639 ubox
62 67 0.003768835 ubox
62 69 0.003638531 ubox
63 72 0.042704961 ubox
63 73 0.006266126 ubox
63 74 0.004106139 ubox
64 71 0.082862845 ubox
64 72 0.011495351 ubox
64 73 0.014537250 ubox
65 70 0.121205332 ubox
67 74 0.109436614 ubox
68 73 0.102891312 ubox
68 74 0.012638177 ubox
69 73 0.015911747 ubox
4 64 0.9500000 lbox
5 63 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
8 60 0.9500000 lbox
9 59 0.9500000 lbox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
15 53 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
showpage
end
%%EOF
