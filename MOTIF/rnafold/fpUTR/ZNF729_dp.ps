%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF729)
} def

/sequence { (\
GGUCUCGCCUUCACUGCUGUGUGUCCUCAGCCUCUGUGGCCCUGUAACCUGCGGCAUUGGAAGAUCCACAGCUAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.859964585 ubox
1 10 0.037414137 ubox
1 11 0.004502263 ubox
1 12 0.116911910 ubox
1 15 0.079280545 ubox
1 32 0.009344214 ubox
1 41 0.006009934 ubox
1 42 0.021635855 ubox
1 49 0.093062688 ubox
1 66 0.250105269 ubox
1 67 0.220562797 ubox
1 73 0.018636005 ubox
2 8 0.861190543 ubox
2 9 0.042718698 ubox
2 10 0.005530830 ubox
2 11 0.114878238 ubox
2 14 0.084012659 ubox
2 31 0.009358675 ubox
2 40 0.005987804 ubox
2 41 0.021657842 ubox
2 42 0.003231278 ubox
2 48 0.093243632 ubox
2 65 0.255150578 ubox
2 66 0.219381528 ubox
2 69 0.017555340 ubox
2 72 0.019662503 ubox
2 76 0.006711868 ubox
3 7 0.805650117 ubox
3 13 0.080018070 ubox
3 30 0.007920254 ubox
3 39 0.005477110 ubox
3 47 0.092428056 ubox
3 64 0.322169110 ubox
3 68 0.017071327 ubox
3 71 0.017702767 ubox
3 75 0.006579942 ubox
4 30 0.004727404 ubox
4 38 0.004899387 ubox
4 63 0.323544940 ubox
4 71 0.007918097 ubox
5 29 0.004599669 ubox
5 61 0.018684133 ubox
5 62 0.320057814 ubox
5 64 0.086407937 ubox
5 70 0.007651760 ubox
6 36 0.003687073 ubox
6 38 0.004425643 ubox
6 44 0.085374865 ubox
6 60 0.025702237 ubox
6 63 0.086987114 ubox
7 15 0.003842108 ubox
7 35 0.003220606 ubox
7 37 0.005009738 ubox
7 40 0.094762495 ubox
7 43 0.027230206 ubox
7 45 0.003764360 ubox
7 72 0.017087453 ubox
8 23 0.003226947 ubox
8 36 0.005036920 ubox
8 39 0.095421264 ubox
8 44 0.003780019 ubox
8 60 0.065205646 ubox
8 71 0.017053889 ubox
9 38 0.095283928 ubox
9 39 0.008546840 ubox
9 59 0.064604120 ubox
9 60 0.028332336 ubox
9 63 0.058479084 ubox
10 38 0.008449665 ubox
10 59 0.024672985 ubox
10 60 0.004462253 ubox
10 61 0.327069595 ubox
10 62 0.058875669 ubox
10 75 0.027002617 ubox
11 39 0.025131180 ubox
11 60 0.331853729 ubox
11 61 0.059811010 ubox
11 74 0.025602221 ubox
12 21 0.010363848 ubox
12 23 0.008221996 ubox
12 36 0.052031992 ubox
12 38 0.027836628 ubox
12 59 0.335151718 ubox
12 60 0.054621904 ubox
13 20 0.010454679 ubox
13 22 0.008275334 ubox
13 35 0.049966290 ubox
13 37 0.028500355 ubox
13 58 0.333104206 ubox
14 19 0.010460001 ubox
14 21 0.008279076 ubox
14 36 0.028410231 ubox
14 54 0.008920494 ubox
15 53 0.008986110 ubox
15 56 0.343773505 ubox
15 74 0.133381913 ubox
16 31 0.101129139 ubox
16 52 0.009220483 ubox
16 55 0.348240779 ubox
16 72 0.929755521 ubox
16 73 0.027635133 ubox
17 30 0.101312233 ubox
17 51 0.009209190 ubox
17 54 0.348249754 ubox
17 71 0.931717204 ubox
18 29 0.101279557 ubox
18 53 0.347979074 ubox
18 70 0.931507477 ubox
19 28 0.101254592 ubox
19 48 0.005161112 ubox
19 52 0.348172116 ubox
19 69 0.931706712 ubox
20 29 0.005158105 ubox
20 47 0.005129317 ubox
20 51 0.345335544 ubox
20 68 0.931423682 ubox
20 70 0.005064616 ubox
21 28 0.008220876 ubox
21 48 0.095743759 ubox
21 50 0.276369155 ubox
21 52 0.003584650 ubox
21 57 0.007496703 ubox
21 65 0.012255242 ubox
21 67 0.930209422 ubox
21 69 0.007099946 ubox
22 29 0.017733953 ubox
22 46 0.007868165 ubox
22 47 0.095964382 ubox
22 51 0.003710542 ubox
22 56 0.010264306 ubox
22 64 0.033021588 ubox
22 68 0.008203325 ubox
23 28 0.019789539 ubox
23 40 0.013815492 ubox
23 45 0.008557460 ubox
23 48 0.310257231 ubox
23 50 0.005009082 ubox
23 55 0.010440779 ubox
23 65 0.883491255 ubox
23 67 0.009411242 ubox
24 39 0.007779958 ubox
24 44 0.006196844 ubox
24 47 0.297625434 ubox
24 54 0.005683148 ubox
24 61 0.174051736 ubox
24 64 0.903636650 ubox
25 38 0.007725573 ubox
25 39 0.044760396 ubox
25 53 0.005484556 ubox
25 54 0.008970542 ubox
25 60 0.177689557 ubox
25 63 0.883975824 ubox
26 38 0.047635620 ubox
26 39 0.004127854 ubox
26 53 0.009110132 ubox
26 59 0.178928243 ubox
26 60 0.065992433 ubox
26 63 0.181753657 ubox
27 38 0.004014183 ubox
27 59 0.043500533 ubox
27 60 0.205564639 ubox
27 61 0.565887556 ubox
27 62 0.240101723 ubox
27 64 0.119966843 ubox
28 36 0.049344994 ubox
28 38 0.006229747 ubox
28 44 0.236303383 ubox
28 51 0.009550752 ubox
28 59 0.242895077 ubox
28 60 0.549384544 ubox
28 63 0.127590640 ubox
29 35 0.049554136 ubox
29 37 0.006096918 ubox
29 43 0.222844371 ubox
29 50 0.009504227 ubox
29 58 0.246722501 ubox
30 34 0.048532192 ubox
30 37 0.007044002 ubox
30 40 0.517558662 ubox
30 42 0.104823399 ubox
30 49 0.004933485 ubox
30 55 0.238885262 ubox
30 57 0.158262542 ubox
31 36 0.007667374 ubox
31 39 0.528953807 ubox
31 54 0.239541155 ubox
31 60 0.672358383 ubox
32 38 0.528997048 ubox
32 39 0.013268694 ubox
32 53 0.238183369 ubox
32 54 0.011593807 ubox
32 59 0.680193395 ubox
32 60 0.012190300 ubox
32 63 0.004374015 ubox
33 38 0.012080346 ubox
33 39 0.009644723 ubox
33 53 0.010575884 ubox
33 54 0.015927151 ubox
33 59 0.013357381 ubox
33 60 0.007637973 ubox
33 61 0.040992576 ubox
33 62 0.004356891 ubox
34 38 0.010389375 ubox
34 53 0.018697842 ubox
34 54 0.399218243 ubox
34 59 0.024690192 ubox
34 60 0.042019961 ubox
34 71 0.018564374 ubox
35 51 0.082146819 ubox
35 53 0.401084132 ubox
35 56 0.686309933 ubox
35 59 0.041315733 ubox
35 70 0.018957196 ubox
36 48 0.070001873 ubox
36 50 0.067194891 ubox
36 52 0.429552889 ubox
36 55 0.692694611 ubox
36 57 0.057426043 ubox
36 58 0.033174576 ubox
36 69 0.019018602 ubox
37 46 0.016095215 ubox
37 47 0.069284988 ubox
37 51 0.419330269 ubox
37 53 0.005789058 ubox
37 54 0.691113771 ubox
37 56 0.059055764 ubox
37 68 0.019009498 ubox
38 45 0.017891469 ubox
38 49 0.385960597 ubox
38 50 0.248136474 ubox
38 52 0.008270460 ubox
38 55 0.048270291 ubox
38 67 0.019000336 ubox
39 45 0.056692420 ubox
39 48 0.387226638 ubox
39 49 0.244710988 ubox
39 52 0.691861192 ubox
39 55 0.076619496 ubox
39 66 0.018948383 ubox
40 44 0.062356204 ubox
40 51 0.690282652 ubox
40 54 0.083405152 ubox
40 60 0.020451626 ubox
41 53 0.082151189 ubox
41 54 0.106033680 ubox
41 59 0.042997202 ubox
41 60 0.063013918 ubox
42 53 0.106023223 ubox
42 54 0.366400077 ubox
42 59 0.064446980 ubox
42 60 0.011158767 ubox
42 63 0.008299110 ubox
43 51 0.020860122 ubox
43 53 0.371402732 ubox
43 56 0.086825425 ubox
43 59 0.011207283 ubox
43 62 0.008078616 ubox
44 50 0.046851719 ubox
44 52 0.393640930 ubox
44 55 0.095358457 ubox
44 57 0.020732823 ubox
44 58 0.010678102 ubox
44 76 0.004226491 ubox
45 51 0.391353462 ubox
45 54 0.094581301 ubox
45 56 0.021487225 ubox
45 59 0.007594806 ubox
45 75 0.004161139 ubox
46 50 0.326087415 ubox
46 58 0.008360936 ubox
47 57 0.007304772 ubox
48 54 0.047121087 ubox
48 60 0.021014706 ubox
49 53 0.047019953 ubox
49 59 0.022068463 ubox
49 60 0.006543424 ubox
49 71 0.011783730 ubox
50 56 0.007570174 ubox
50 59 0.006727360 ubox
50 70 0.013114704 ubox
50 74 0.006187290 ubox
51 55 0.008181186 ubox
51 58 0.004597514 ubox
51 69 0.013323698 ubox
51 72 0.008463832 ubox
51 73 0.003277434 ubox
52 59 0.013168243 ubox
52 71 0.008477892 ubox
53 58 0.010275049 ubox
53 67 0.013532779 ubox
53 73 0.093209916 ubox
54 66 0.013549768 ubox
54 72 0.098221540 ubox
55 71 0.098231220 ubox
56 65 0.014366171 ubox
57 64 0.014574893 ubox
58 63 0.014259157 ubox
58 68 0.102274221 ubox
59 66 0.003219805 ubox
59 67 0.105432818 ubox
60 66 0.105531250 ubox
61 65 0.091815069 ubox
62 73 0.016127009 ubox
63 72 0.016717540 ubox
1 9 0.9500000 lbox
2 8 0.9500000 lbox
3 7 0.9500000 lbox
16 72 0.9500000 lbox
17 71 0.9500000 lbox
18 70 0.9500000 lbox
19 69 0.9500000 lbox
20 68 0.9500000 lbox
21 67 0.9500000 lbox
23 65 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
31 60 0.9500000 lbox
32 59 0.9500000 lbox
35 56 0.9500000 lbox
36 55 0.9500000 lbox
37 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
showpage
end
%%EOF
