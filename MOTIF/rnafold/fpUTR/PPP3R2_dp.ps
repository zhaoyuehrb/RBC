%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPP3R2)
} def

/sequence { (\
GGGCACGAGCCCCGCCCGAGCUCACCGCCCCUGCUCCCCUCUCCGACCCUUUGAGCCGUGGCCGUUGCCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.003960464 ubox
1 12 0.555917746 ubox
1 13 0.088931490 ubox
1 17 0.146048329 ubox
1 23 0.063601064 ubox
1 30 0.172146328 ubox
1 31 0.020318393 ubox
1 39 0.003904412 ubox
1 49 0.004553762 ubox
1 63 0.028137930 ubox
1 69 0.132214835 ubox
2 10 0.003565944 ubox
2 11 0.559908939 ubox
2 12 0.074168279 ubox
2 16 0.146229987 ubox
2 22 0.063862416 ubox
2 26 0.003387351 ubox
2 29 0.173056293 ubox
2 30 0.017171690 ubox
2 38 0.003914121 ubox
2 48 0.004559607 ubox
2 57 0.006669071 ubox
2 62 0.028041313 ubox
2 63 0.004250501 ubox
2 68 0.124197894 ubox
2 69 0.777984700 ubox
3 10 0.562080121 ubox
3 11 0.055438620 ubox
3 15 0.146224765 ubox
3 21 0.064020617 ubox
3 25 0.003397056 ubox
3 28 0.173404080 ubox
3 29 0.013238137 ubox
3 37 0.003900964 ubox
3 47 0.004550023 ubox
3 56 0.006682332 ubox
3 62 0.004257532 ubox
3 68 0.780267899 ubox
4 9 0.563418116 ubox
4 14 0.145631021 ubox
4 20 0.063944143 ubox
4 27 0.173452019 ubox
4 55 0.006664550 ubox
4 60 0.028186779 ubox
4 67 0.781490403 ubox
5 59 0.028336177 ubox
5 65 0.550015885 ubox
5 66 0.559839287 ubox
6 14 0.012227709 ubox
6 18 0.064100221 ubox
6 53 0.005138335 ubox
6 58 0.028350454 ubox
6 64 0.771315042 ubox
6 67 0.005077742 ubox
7 13 0.030059165 ubox
7 17 0.064278960 ubox
7 23 0.186518594 ubox
7 36 0.004379410 ubox
7 43 0.004106722 ubox
7 52 0.004795199 ubox
7 57 0.027777382 ubox
7 63 0.770565171 ubox
7 66 0.010478799 ubox
8 22 0.187263409 ubox
8 35 0.004464234 ubox
8 42 0.004242700 ubox
8 51 0.004462577 ubox
8 65 0.015416116 ubox
8 66 0.059307988 ubox
9 15 0.065068325 ubox
9 21 0.187344944 ubox
9 34 0.004473770 ubox
9 41 0.004213058 ubox
9 49 0.003239846 ubox
9 50 0.003440202 ubox
9 56 0.023070777 ubox
9 62 0.725182279 ubox
9 65 0.146878989 ubox
9 68 0.004934272 ubox
10 14 0.064654617 ubox
10 20 0.187025364 ubox
10 33 0.004467144 ubox
10 55 0.022465716 ubox
10 61 0.722852484 ubox
10 64 0.147740926 ubox
10 67 0.004946814 ubox
11 60 0.719324007 ubox
11 61 0.044073637 ubox
12 60 0.058091895 ubox
12 61 0.047269620 ubox
13 45 0.008876003 ubox
13 53 0.003521463 ubox
13 58 0.638408105 ubox
13 60 0.064499726 ubox
13 64 0.204422548 ubox
13 67 0.019336984 ubox
14 21 0.041217634 ubox
14 28 0.009346493 ubox
14 34 0.018539098 ubox
14 44 0.008907800 ubox
14 56 0.188424454 ubox
14 57 0.603179814 ubox
14 59 0.141560575 ubox
14 62 0.596694921 ubox
14 63 0.148278540 ubox
14 66 0.003587326 ubox
14 68 0.030014749 ubox
15 20 0.041275479 ubox
15 27 0.009399538 ubox
15 33 0.018687938 ubox
15 55 0.243285076 ubox
15 58 0.136525201 ubox
15 61 0.615746566 ubox
15 67 0.030016680 ubox
16 60 0.615904065 ubox
16 61 0.015024962 ubox
17 27 0.016862794 ubox
17 33 0.003750897 ubox
17 45 0.009030272 ubox
17 53 0.145615768 ubox
17 58 0.679780143 ubox
17 60 0.015297866 ubox
17 64 0.030183725 ubox
17 67 0.003629529 ubox
18 26 0.017845568 ubox
18 32 0.004638393 ubox
18 36 0.571087741 ubox
18 41 0.015667571 ubox
18 43 0.027803099 ubox
18 44 0.006248899 ubox
18 51 0.013516558 ubox
18 52 0.065963712 ubox
18 57 0.687696754 ubox
18 59 0.013561236 ubox
18 63 0.030520839 ubox
18 66 0.003927986 ubox
19 32 0.005447256 ubox
19 35 0.572899477 ubox
19 40 0.015734330 ubox
19 42 0.028551270 ubox
19 50 0.017827916 ubox
19 51 0.059405053 ubox
19 65 0.003385966 ubox
19 66 0.008870365 ubox
20 28 0.064150548 ubox
20 31 0.005054788 ubox
20 34 0.573545463 ubox
20 39 0.015617158 ubox
20 41 0.028556683 ubox
20 49 0.020870133 ubox
20 50 0.044976393 ubox
20 56 0.770519068 ubox
20 62 0.031019155 ubox
20 65 0.009414647 ubox
20 68 0.152363085 ubox
21 27 0.064302721 ubox
21 33 0.573331212 ubox
21 55 0.770642094 ubox
21 61 0.030745706 ubox
21 64 0.009481636 ubox
21 67 0.152645363 ubox
21 71 0.006071849 ubox
22 46 0.034090969 ubox
22 54 0.770494894 ubox
22 60 0.007984353 ubox
22 61 0.003806667 ubox
22 70 0.005908743 ubox
23 33 0.008920766 ubox
23 45 0.034395443 ubox
23 53 0.770291374 ubox
23 60 0.029877016 ubox
23 67 0.022639336 ubox
24 32 0.016390115 ubox
24 52 0.699455775 ubox
24 59 0.030279075 ubox
24 65 0.166443716 ubox
24 66 0.019850000 ubox
25 58 0.027455900 ubox
25 61 0.022012158 ubox
25 64 0.170715239 ubox
26 33 0.057958242 ubox
26 45 0.086197668 ubox
26 53 0.004349519 ubox
26 58 0.016329740 ubox
26 60 0.022386020 ubox
26 64 0.028807187 ubox
27 32 0.040686831 ubox
27 34 0.436991294 ubox
27 44 0.083353495 ubox
27 52 0.008095191 ubox
27 56 0.019041767 ubox
27 57 0.020756111 ubox
27 59 0.022878164 ubox
27 62 0.182852008 ubox
27 63 0.023127212 ubox
27 68 0.003202367 ubox
28 33 0.435666893 ubox
28 55 0.018693497 ubox
28 58 0.022886010 ubox
28 61 0.183854091 ubox
28 67 0.003203848 ubox
29 60 0.183484674 ubox
29 61 0.014429949 ubox
30 60 0.015658483 ubox
30 61 0.004652969 ubox
31 55 0.003966873 ubox
31 60 0.005134051 ubox
31 71 0.004999895 ubox
32 45 0.123055291 ubox
32 54 0.004213649 ubox
32 58 0.029198715 ubox
32 60 0.003218762 ubox
32 70 0.004508936 ubox
33 44 0.136056344 ubox
33 56 0.259354144 ubox
33 57 0.025554469 ubox
33 59 0.010173415 ubox
33 62 0.007983919 ubox
34 55 0.261126646 ubox
34 58 0.010940355 ubox
34 61 0.008060327 ubox
34 67 0.003384632 ubox
35 46 0.318279022 ubox
35 54 0.260958064 ubox
35 60 0.007639451 ubox
36 45 0.341672526 ubox
36 53 0.259914857 ubox
37 61 0.004524080 ubox
38 60 0.004691671 ubox
39 55 0.434526643 ubox
40 46 0.162581921 ubox
40 54 0.448068872 ubox
41 45 0.172381921 ubox
41 53 0.449082677 ubox
41 55 0.245820590 ubox
42 54 0.256303853 ubox
43 53 0.240856141 ubox
44 53 0.201178588 ubox
44 58 0.021588746 ubox
44 67 0.006960146 ubox
45 51 0.170301862 ubox
45 52 0.218533426 ubox
45 57 0.022386843 ubox
45 66 0.007136805 ubox
46 50 0.150104926 ubox
46 51 0.195999577 ubox
46 59 0.009324145 ubox
46 65 0.007157761 ubox
47 58 0.009728297 ubox
47 64 0.007088795 ubox
48 61 0.006833854 ubox
49 55 0.025255740 ubox
49 60 0.006890530 ubox
50 54 0.023337186 ubox
52 58 0.004189813 ubox
52 70 0.003620643 ubox
53 57 0.006189410 ubox
53 69 0.003794087 ubox
55 62 0.003194894 ubox
55 68 0.003962027 ubox
56 61 0.003203444 ubox
56 67 0.003923592 ubox
57 64 0.004070494 ubox
58 63 0.004055981 ubox
59 70 0.215435695 ubox
60 69 0.239354717 ubox
61 68 0.239418536 ubox
62 67 0.238350178 ubox
65 71 0.007513969 ubox
66 70 0.008868789 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
14 62 0.9500000 lbox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
showpage
end
%%EOF
