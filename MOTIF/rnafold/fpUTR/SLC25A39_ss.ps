%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCUCGUGGCGCGGUGUAGGGGCGGGGCCCCCUUGGCUGCUUUCGGCGUCGGCCUAGGUGCGCUGCGAGCGCGCGCGGACCGCGCACAGGCGGCGGAGCCGGUAUGGGCCCGCCUGACCCUGGGCGCCGCGCCGCACGAGCACCAGCCUAGAGCCAGGACUGAAGCUUCAAG\
) } def
/len { sequence length } bind def

/coor [
[96.45154572 173.92224121]
[95.64868164 158.94374084]
[94.84581757 143.96525574]
[94.04295349 128.98675537]
[93.24008942 114.00825500]
[89.27166748 99.54271698]
[82.31906128 86.25131989]
[75.36645508 72.95992279]
[68.41385651 59.66852188]
[61.46125031 46.37712097]
[54.27251434 33.21193695]
[46.84994125 20.17716217]
[39.42736435 7.14238644]
[32.00479126 -5.89238930]
[24.58221436 -18.92716408]
[17.15963936 -31.96194077]
[9.73706436 -44.99671555]
[2.31448960 -58.03149414]
[-5.10808563 -71.06626892]
[-12.53066063 -84.10104370]
[-20.18471146 -97.00125885]
[-28.06779861 -109.76280212]
[-35.95088577 -122.52433777]
[-43.83397293 -135.28588867]
[-52.16752625 -147.75791931]
[-60.94092560 -159.92457581]
[-69.71432495 -172.09123230]
[-78.48772430 -184.25788879]
[-87.26112366 -196.42454529]
[-101.60855865 -203.09249878]
[-102.77684784 -217.94122314]
[-111.55024719 -230.10787964]
[-120.64622498 -242.03529358]
[-130.05825806 -253.71490479]
[-139.67727661 -265.22467041]
[-149.50018311 -276.56091309]
[-159.32308960 -287.89715576]
[-174.20774841 -293.25979614]
[-176.69487000 -307.94528198]
[-186.51777649 -319.28152466]
[-196.34069824 -330.61776733]
[-206.16360474 -341.95401001]
[-215.98651123 -353.29025269]
[-225.80943298 -364.62649536]
[-235.63233948 -375.96273804]
[-249.10784912 -375.37356567]
[-260.29336548 -382.55712891]
[-265.21664429 -394.69549561]
[-262.28390503 -407.26184082]
[-271.90292358 -418.77160645]
[-281.52191162 -430.28137207]
[-289.45324707 -434.87896729]
[-291.20767212 -442.08349609]
[-300.61972046 -453.76312256]
[-310.03173828 -465.44274902]
[-324.71551514 -471.33322144]
[-326.67691040 -486.09811401]
[-336.08892822 -497.77774048]
[-351.55758667 -499.61044312]
[-360.93634033 -511.58932495]
[-359.09378052 -526.32501221]
[-368.50582886 -538.00463867]
[-377.91784668 -549.68426514]
[-387.32989502 -561.36389160]
[-396.74194336 -573.04351807]
[-406.15396118 -584.72314453]
[-415.56600952 -596.40277100]
[-430.21249390 -604.94189453]
[-426.06164551 -621.37982178]
[-409.11700439 -621.94171143]
[-403.88638306 -605.81481934]
[-394.47433472 -594.13519287]
[-385.06231689 -582.45556641]
[-375.65026855 -570.77593994]
[-366.23825073 -559.09631348]
[-356.82620239 -547.41668701]
[-347.41415405 -535.73706055]
[-332.62356567 -534.40521240]
[-322.91204834 -522.69445801]
[-324.40930176 -507.18975830]
[-314.99728394 -495.51013184]
[-300.98672485 -490.45507812]
[-298.35211182 -474.85476685]
[-288.94009399 -463.17514038]
[-279.52804565 -451.49554443]
[-270.01214600 -439.90036011]
[-260.39315796 -428.39059448]
[-250.77413940 -416.88082886]
[-233.98864746 -416.10925293]
[-222.72116089 -403.19247437]
[-224.29609680 -385.78564453]
[-214.47319031 -374.44940186]
[-204.65026855 -363.11315918]
[-194.82736206 -351.77691650]
[-185.00445557 -340.44067383]
[-175.18153381 -329.10443115]
[-165.35862732 -317.76818848]
[-151.17657471 -313.21640015]
[-147.98684692 -297.72006226]
[-138.16394043 -286.38381958]
[-128.34101868 -275.04757690]
[-123.69523621 -273.81970215]
[-119.78377533 -269.64089966]
[-118.37863922 -263.12695312]
[-108.96660614 -251.44732666]
[-105.48607635 -250.71618652]
[-102.19340515 -248.24353027]
[-99.91207886 -244.13937378]
[-99.38359833 -238.88127136]
[-90.61019897 -226.71461487]
[-76.89029694 -220.91690063]
[-75.09447479 -205.19793701]
[-66.32107544 -193.03128052]
[-57.54767227 -180.86463928]
[-48.77427292 -168.69798279]
[-40.00087357 -156.53132629]
[-37.22465515 -155.96203613]
[-34.51079559 -154.24079895]
[-32.30589676 -151.38725281]
[-31.04059029 -147.58457947]
[-31.07243156 -143.16897583]
[-23.18934441 -130.40742493]
[-15.30625725 -117.64588928]
[-7.42316961 -104.88434601]
[-3.03361201 -102.92913055]
[0.15903857 -98.17845917]
[0.50411522 -91.52362061]
[7.92669010 -78.48884583]
[15.34926510 -65.45407104]
[22.77184105 -52.41929245]
[30.19441605 -39.38451767]
[37.61698914 -26.34974098]
[45.03956604 -13.31496429]
[52.46213913 -0.28018862]
[59.88471603 12.75458717]
[67.30728912 25.78936195]
[71.62426758 27.90000153]
[74.64531708 32.76160431]
[74.75264740 39.42451859]
[81.70525360 52.71591949]
[88.65785980 66.00731659]
[95.61045837 79.29871368]
[102.56306458 92.59011841]
[110.11945343 85.25297546]
[121.34375000 81.98588562]
[134.47573853 84.07966614]
[147.37257385 92.14979553]
[157.19549561 103.48603821]
[167.01840210 114.82228088]
[176.94209290 126.07040405]
[186.96577454 137.22952271]
[196.98947144 148.38862610]
[212.78253174 148.98416138]
[223.46739197 160.62928772]
[222.70492554 176.41517639]
[210.94747925 186.97633362]
[195.17053223 186.04699707]
[184.73428345 174.17854309]
[185.83035278 158.41230774]
[175.80667114 147.25320435]
[165.78298950 136.09410095]
[158.95187378 133.20982361]
[155.68215942 124.64519501]
[145.85923767 113.30895233]
[136.03633118 101.97270966]
[129.08189392 104.78087616]
[115.17302704 110.39721680]
[108.21858978 113.20539093]
[109.02145386 128.18388367]
[109.82431793 143.16238403]
[110.62718201 158.14088440]
[111.43004608 173.11938477]
[120.82659149 186.55950928]
[113.64117432 201.30065918]
[97.26553345 202.17842102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 172]
[2 171]
[3 170]
[4 169]
[5 168]
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 136]
[12 135]
[13 134]
[14 133]
[15 132]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[21 124]
[22 123]
[23 122]
[24 121]
[25 116]
[26 115]
[27 114]
[28 113]
[29 112]
[31 110]
[32 109]
[33 105]
[34 104]
[35 101]
[36 100]
[37 99]
[39 97]
[40 96]
[41 95]
[42 94]
[43 93]
[44 92]
[45 91]
[49 88]
[50 87]
[51 86]
[53 85]
[54 84]
[55 83]
[57 81]
[58 80]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[67 71]
[147 165]
[148 164]
[149 163]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
