%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IGFALS)
} def

/sequence { (\
GGAAAUCCAGAGGGCAGGGGUGGCCGGCACAGCAGACGUACCCUCCCUCGCUGCCUGCCUGCAGCCUGCCCUGCAUGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.037260007 ubox
1 8 0.890094499 ubox
1 52 0.009827969 ubox
1 55 0.012583853 ubox
2 6 0.024633733 ubox
2 7 0.887934117 ubox
2 51 0.010210512 ubox
2 54 0.013892059 ubox
5 76 0.040088131 ubox
6 75 0.039665913 ubox
6 81 0.016722643 ubox
7 13 0.010011801 ubox
7 80 0.025228502 ubox
7 81 0.041865271 ubox
8 12 0.009982057 ubox
8 53 0.106209638 ubox
8 57 0.004297421 ubox
8 73 0.037295472 ubox
8 77 0.078962766 ubox
8 80 0.042596225 ubox
9 52 0.106427808 ubox
9 56 0.004481128 ubox
9 72 0.028188671 ubox
9 76 0.078379176 ubox
10 49 0.791081141 ubox
10 51 0.073967090 ubox
10 55 0.004469057 ubox
10 71 0.014811395 ubox
11 48 0.794418363 ubox
11 72 0.585552649 ubox
12 47 0.795041499 ubox
12 48 0.007491108 ubox
12 49 0.034593733 ubox
12 56 0.014200209 ubox
12 70 0.005965898 ubox
12 71 0.602551502 ubox
13 46 0.795040787 ubox
13 47 0.012803698 ubox
13 48 0.033531398 ubox
13 52 0.020267540 ubox
13 55 0.016096507 ubox
13 69 0.004256121 ubox
13 70 0.603288503 ubox
14 45 0.793522008 ubox
14 46 0.013165374 ubox
14 47 0.033497458 ubox
14 51 0.021346411 ubox
14 54 0.016695239 ubox
14 69 0.603386430 ubox
14 74 0.041606341 ubox
15 50 0.021357301 ubox
15 53 0.016816293 ubox
15 68 0.603356103 ubox
15 73 0.041655889 ubox
16 44 0.537188160 ubox
16 48 0.015594136 ubox
16 52 0.016800423 ubox
16 67 0.596773381 ubox
16 72 0.041596784 ubox
17 42 0.014841830 ubox
17 43 0.526656770 ubox
17 44 0.541843318 ubox
17 45 0.005966637 ubox
17 47 0.015715492 ubox
17 48 0.014558130 ubox
17 51 0.016664380 ubox
17 66 0.585952377 ubox
17 67 0.053906695 ubox
17 71 0.041450526 ubox
18 41 0.015113432 ubox
18 42 0.513758518 ubox
18 43 0.596447739 ubox
18 46 0.015703205 ubox
18 47 0.016340755 ubox
18 49 0.011324698 ubox
18 65 0.577070202 ubox
18 66 0.108767097 ubox
18 67 0.064013470 ubox
18 70 0.041222366 ubox
18 71 0.004710280 ubox
19 24 0.003167015 ubox
19 25 0.005532130 ubox
19 41 0.500209943 ubox
19 42 0.607640537 ubox
19 45 0.015674318 ubox
19 46 0.016360178 ubox
19 48 0.011337715 ubox
19 49 0.011758088 ubox
19 65 0.142870707 ubox
19 66 0.094728013 ubox
19 69 0.039924227 ubox
19 70 0.005897392 ubox
20 24 0.005767467 ubox
20 28 0.019249093 ubox
20 30 0.198292101 ubox
20 33 0.011683121 ubox
20 37 0.100236136 ubox
20 39 0.065568038 ubox
20 41 0.618562567 ubox
20 43 0.005102165 ubox
20 44 0.014309895 ubox
20 45 0.016346285 ubox
20 47 0.011873805 ubox
20 48 0.010677888 ubox
20 62 0.136024942 ubox
20 65 0.102733614 ubox
20 69 0.006881827 ubox
21 27 0.019168966 ubox
21 29 0.198597913 ubox
21 31 0.015686583 ubox
21 32 0.008871532 ubox
21 34 0.008244548 ubox
21 36 0.099396445 ubox
21 38 0.248254029 ubox
21 40 0.625854861 ubox
21 61 0.131561431 ubox
21 63 0.191688932 ubox
21 64 0.108420421 ubox
21 68 0.007478807 ubox
22 28 0.198734555 ubox
22 30 0.018776226 ubox
22 33 0.009800787 ubox
22 37 0.276796109 ubox
22 39 0.586931225 ubox
22 42 0.014102407 ubox
22 43 0.017776810 ubox
22 46 0.015863368 ubox
22 47 0.003799099 ubox
22 59 0.144951133 ubox
22 60 0.032466634 ubox
22 62 0.142808167 ubox
22 66 0.038851885 ubox
23 33 0.158103069 ubox
23 39 0.175042119 ubox
23 41 0.014121553 ubox
23 42 0.017680219 ubox
23 45 0.015857650 ubox
23 46 0.003782082 ubox
23 58 0.145594206 ubox
23 59 0.023105195 ubox
23 62 0.566474226 ubox
23 65 0.038875044 ubox
24 32 0.158029661 ubox
24 38 0.212159652 ubox
24 57 0.145696876 ubox
24 61 0.581047558 ubox
24 64 0.038778658 ubox
25 38 0.298206343 ubox
25 57 0.018543776 ubox
25 61 0.024744611 ubox
26 37 0.313297779 ubox
26 42 0.016317224 ubox
26 43 0.003795538 ubox
26 55 0.145513477 ubox
26 56 0.019647516 ubox
26 59 0.585532163 ubox
26 60 0.007827896 ubox
27 33 0.675330922 ubox
27 39 0.015051848 ubox
27 41 0.016416478 ubox
27 42 0.003751687 ubox
27 54 0.145485864 ubox
27 55 0.019660375 ubox
27 58 0.586110484 ubox
27 59 0.006335842 ubox
27 62 0.024096941 ubox
28 32 0.670687313 ubox
28 38 0.016258241 ubox
28 53 0.137176836 ubox
28 57 0.585881269 ubox
28 61 0.024099255 ubox
29 39 0.020060892 ubox
29 52 0.094747738 ubox
29 56 0.566023414 ubox
29 60 0.022379022 ubox
30 38 0.021193690 ubox
30 53 0.148145646 ubox
30 57 0.027858425 ubox
31 48 0.014445771 ubox
31 52 0.175017574 ubox
31 56 0.039578738 ubox
32 39 0.151388997 ubox
32 47 0.014558878 ubox
32 51 0.200980753 ubox
32 54 0.567938711 ubox
32 55 0.035208529 ubox
32 58 0.003672733 ubox
33 38 0.154718981 ubox
33 50 0.200893274 ubox
33 53 0.569749554 ubox
33 57 0.003683857 ubox
34 44 0.028171918 ubox
34 48 0.154882058 ubox
34 52 0.569655759 ubox
34 56 0.003682146 ubox
35 43 0.028465054 ubox
35 45 0.025601319 ubox
35 47 0.155281906 ubox
35 49 0.092937074 ubox
35 51 0.569664522 ubox
35 55 0.003666082 ubox
36 44 0.025380488 ubox
36 48 0.087858388 ubox
37 50 0.566074985 ubox
38 49 0.562874219 ubox
38 51 0.004006699 ubox
39 50 0.004367237 ubox
50 58 0.005704320 ubox
50 65 0.053436251 ubox
51 57 0.005982624 ubox
51 64 0.055415702 ubox
51 80 0.023576529 ubox
51 81 0.004363681 ubox
52 63 0.055428101 ubox
52 79 0.023647678 ubox
53 62 0.055445052 ubox
53 78 0.023651744 ubox
54 61 0.055292104 ubox
54 77 0.023624995 ubox
54 81 0.778483413 ubox
55 80 0.793540185 ubox
56 75 0.022643796 ubox
56 79 0.793516862 ubox
57 74 0.022790900 ubox
57 78 0.793744689 ubox
58 73 0.022747545 ubox
58 77 0.793041094 ubox
58 81 0.021977169 ubox
59 80 0.023071726 ubox
60 75 0.787981747 ubox
60 79 0.023075735 ubox
61 69 0.022692828 ubox
61 74 0.793758244 ubox
61 78 0.023081166 ubox
62 68 0.022727085 ubox
62 73 0.793771760 ubox
62 77 0.023080047 ubox
63 67 0.018420754 ubox
63 72 0.793328227 ubox
63 76 0.022899582 ubox
64 71 0.785564449 ubox
64 74 0.019260741 ubox
65 73 0.019255655 ubox
65 81 0.014737491 ubox
66 80 0.046887558 ubox
67 75 0.012268775 ubox
67 79 0.047027432 ubox
68 74 0.012465581 ubox
68 78 0.047063778 ubox
69 73 0.012377984 ubox
69 77 0.046983903 ubox
70 81 0.029226473 ubox
71 80 0.038568742 ubox
72 79 0.048268029 ubox
72 80 0.003466216 ubox
73 78 0.070862493 ubox
1 8 0.9500000 lbox
2 7 0.9500000 lbox
11 72 0.9500000 lbox
12 71 0.9500000 lbox
13 70 0.9500000 lbox
14 69 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
18 65 0.9500000 lbox
23 62 0.9500000 lbox
24 61 0.9500000 lbox
26 59 0.9500000 lbox
27 58 0.9500000 lbox
28 57 0.9500000 lbox
29 56 0.9500000 lbox
32 54 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
showpage
end
%%EOF
