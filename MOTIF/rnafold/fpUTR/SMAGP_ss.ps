%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCUGCGCCAACCCCGCGCGCCACCCGCGGCUUCCUCCGCUCGGGGUCCUCGUUCGGCCUCUGCUGGCCUCCGCGACUCCGCGGUGCCCGCCCCCGUUGAGUUCAAAAGGACGCGCGGAGCGGCGCCGGCCCUUCACCAGCAGCCCGUCCGACUGGAAAGAUCUGCCUCUUCUCCAAGAAACUCAACCACUAGUGACA\
) } def
/len { sequence length } bind def

/coor [
[366.96188354 299.89834595]
[354.01055908 292.33111572]
[341.05923462 284.76385498]
[328.10791016 277.19662476]
[318.48883057 280.67044067]
[308.33328247 278.22103882]
[301.05538940 270.42324829]
[299.23779297 259.68994141]
[286.52807617 251.72358704]
[273.81835938 243.75721741]
[261.10864258 235.79084778]
[248.39892578 227.82449341]
[236.52542114 233.93750000]
[223.07400513 233.37895203]
[211.56448364 226.18794250]
[205.06144714 214.15296936]
[205.35845947 200.36836243]
[192.77416992 192.20529175]
[180.18988037 184.04223633]
[167.60559082 175.87916565]
[155.02130127 167.71611023]
[142.43699646 159.55303955]
[129.85270691 151.38998413]
[117.20532227 143.32502747]
[104.49559784 135.35865784]
[89.55044556 134.07714844]
[75.67003632 139.76347351]
[61.78963089 145.44979858]
[47.90922165 151.13612366]
[34.16523361 157.14468384]
[20.56514549 163.47219849]
[6.96505690 169.79972839]
[-6.63503218 176.12725830]
[-11.81712246 191.05781555]
[-26.07515144 197.87574768]
[-40.95008469 192.53608704]
[-47.61688614 178.20677185]
[-42.12026215 163.38912964]
[-27.72126389 156.87419128]
[-12.96255779 162.52716064]
[0.63753128 156.19964600]
[14.23762035 149.87211609]
[27.83770943 143.54458618]
[29.38366127 140.36802673]
[32.54884338 137.78491211]
[37.03638458 136.54983521]
[42.22289658 137.25570679]
[56.10330200 131.56938171]
[69.98371124 125.88306427]
[83.86412048 120.19673157]
[76.79015350 104.67619324]
[81.12122345 89.70903778]
[71.28228760 78.38669586]
[61.44336319 67.06434631]
[51.60443115 55.74200439]
[38.81141663 54.06159973]
[30.84973907 44.42253876]
[31.56943321 32.34286499]
[21.90777779 20.86887932]
[12.24612141 9.39489079]
[1.71223497 11.16431332]
[-8.52670574 8.41874027]
[-16.63745499 1.71923852]
[-21.19676971 -7.67154360]
[-21.44093704 -18.02693558]
[-17.39291573 -27.47362709]
[-26.50890732 -39.38575363]
[-41.04023361 -45.64283371]
[-42.63050079 -60.45230103]
[-51.74649429 -72.36442566]
[-60.86248398 -84.27655029]
[-73.52628326 -86.74904633]
[-80.87329865 -96.86443329]
[-79.40400696 -108.87599182]
[-88.33364105 -120.92845154]
[-97.26327515 -132.98089600]
[-106.19290924 -145.03335571]
[-115.12254333 -157.08581543]
[-130.37275696 -163.11596680]
[-132.50762939 -179.37556458]
[-119.33095551 -189.13812256]
[-104.39778900 -182.36076355]
[-103.07009125 -166.01544189]
[-94.14045715 -153.96299744]
[-85.21082306 -141.91053772]
[-76.28118896 -129.85807800]
[-67.35155487 -117.80562592]
[-50.90238953 -111.69958496]
[-48.95035934 -93.39253998]
[-39.83436584 -81.48041534]
[-30.71837807 -69.56829071]
[-16.83908463 -64.16324615]
[-14.59678173 -48.50174332]
[-5.48079109 -36.58961868]
[13.96113586 -35.45435715]
[26.50222206 -20.15822029]
[23.72010994 -0.26676565]
[33.38176727 11.20722198]
[43.04342270 22.68120956]
[59.84037781 27.75280190]
[62.92677689 45.90307617]
[72.76570892 57.22542191]
[82.60463715 68.54776764]
[92.44356537 79.87010956]
[100.34397125 77.95754242]
[108.59458160 79.11007690]
[116.02055359 83.31299591]
[121.51039886 90.10724640]
[124.18148041 98.63592529]
[123.51924896 107.75125885]
[119.46860504 116.16891479]
[112.46196747 122.64893341]
[125.17169189 130.61529541]
[134.11213684 132.52363586]
[138.01577759 138.80569458]
[150.60006714 146.96875000]
[163.18435669 155.13180542]
[175.76864624 163.29487610]
[188.35293579 171.45793152]
[200.93722534 179.62100220]
[213.52153015 187.78405762]
[229.22151184 181.49998474]
[245.41345215 185.76710510]
[255.76965332 198.71311951]
[256.36529541 215.11476135]
[269.07501221 223.08113098]
[281.78472900 231.04750061]
[294.49444580 239.01387024]
[307.20416260 246.98023987]
[327.35702515 246.79438782]
[335.67514038 264.24530029]
[348.62646484 271.81253052]
[361.57778931 279.37979126]
[374.52911377 286.94702148]
[391.36166382 282.19692993]
[406.13278198 290.91555786]
[409.95462036 307.28997803]
[423.02206421 314.65490723]
[436.08950806 322.01980591]
[449.15695190 329.38473511]
[453.49221802 316.71911621]
[466.29092407 306.56704712]
[485.66864014 303.54714966]
[500.52194214 305.63989258]
[515.37524414 307.73263550]
[530.22851562 309.82534790]
[540.27490234 296.69720459]
[555.48309326 290.46057129]
[571.66821289 292.72933960]
[584.42810059 302.79077148]
[590.34033203 317.82574463]
[605.22436523 319.68722534]
[620.10839844 321.54870605]
[634.99969482 314.67990112]
[648.23602295 324.36148071]
[646.20086670 340.63385010]
[630.98791504 346.75741577]
[618.24688721 336.43276978]
[603.36285400 334.57128906]
[588.47882080 332.70980835]
[580.96826172 344.12094116]
[569.21661377 351.21557617]
[555.48889160 352.55966187]
[542.45989990 347.83398438]
[532.69299316 337.90759277]
[528.13580322 324.67864990]
[513.28247070 322.58590698]
[498.42919922 320.49319458]
[483.57589722 318.40045166]
[480.25436401 325.12484741]
[470.28979492 345.29803467]
[480.97857666 355.82183838]
[491.66732788 366.34564209]
[502.35607910 376.86944580]
[518.35632324 380.46459961]
[522.98394775 396.19723511]
[511.47854614 407.88302612]
[495.67581177 403.50057983]
[491.83227539 387.55819702]
[481.14352417 377.03439331]
[470.45477295 366.51058960]
[459.76599121 355.98678589]
[465.83306885 369.70504761]
[466.00387573 384.70410156]
[460.25076294 398.55694580]
[449.50463867 409.02215576]
[435.50430298 414.40640259]
[420.51504517 413.83850098]
[406.96224976 407.41027832]
[397.03884888 396.16189575]
[392.35046387 381.91342163]
[393.65576172 366.97030640]
[400.74349976 353.75048828]
[412.46682739 344.39294434]
[426.92886353 340.41183472]
[441.79202271 342.45217896]
[428.72457886 335.08724976]
[415.65713501 327.72235107]
[402.58969116 320.35742188]
[390.78121948 325.52441406]
[377.96191406 322.90536499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 134]
[2 133]
[3 132]
[4 131]
[8 129]
[9 128]
[10 127]
[11 126]
[12 125]
[17 121]
[18 120]
[19 119]
[20 118]
[21 117]
[22 116]
[23 115]
[24 113]
[25 112]
[26 50]
[27 49]
[28 48]
[29 47]
[30 43]
[31 42]
[32 41]
[33 40]
[52 104]
[53 103]
[54 102]
[55 101]
[58 99]
[59 98]
[60 97]
[66 94]
[67 93]
[69 91]
[70 90]
[71 89]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[137 199]
[138 198]
[139 197]
[140 196]
[143 169]
[144 168]
[145 167]
[146 166]
[151 160]
[152 159]
[153 158]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
