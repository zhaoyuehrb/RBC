%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGCUCAGGCCCUGGAGCGGACGGUUCCUACUGCGGCUGGGCACCGGCUCCGCUCCCGCGUCUGCCCGCGCUCCAGCUGCGCCUGGCCCGGCCCCGGCCCGGCUCGGCGUGGCCCCGGCCUCCAAGCGAAGGCGCCGCUGCCGCUGGGCCGCUCCCAGGGCCAUGAGGAAGCGGCGGCAGCCACUGCGGCCCGCGUCAAGGUGACCGGCCGGGACUGCGGCGGCGGGGAGAGCGGCGGACUUCUCCAGACAGG\
UUAUGUUACCUGCAGAGGCUGCCCUGAAGCUCCCUGUGGCCUGGAGACU\
) } def
/len { sequence length } bind def

/coor [
[87.35421753 103.54092407]
[72.90954590 99.49720764]
[58.46488190 95.45349121]
[44.02021790 91.40976715]
[29.57555389 87.36605072]
[15.13088799 83.32233429]
[0.60599095 79.57702637]
[-13.99297428 76.13170624]
[-28.59193993 72.68639374]
[-43.20845795 69.31630707]
[-57.84213257 66.02154541]
[-72.47581482 62.72678375]
[-87.10948944 59.43202209]
[-101.74317169 56.13726044]
[-116.37684631 52.84249878]
[-131.01052856 49.54773712]
[-145.64421082 46.25297165]
[-160.29466248 43.03361893]
[-174.96150208 39.88976288]
[-189.62834167 36.74590302]
[-215.21841431 64.04859924]
[-229.17074585 69.55609894]
[-239.16616821 81.81995392]
[-253.84538269 79.29608917]
[-267.79769897 84.80358887]
[-281.75003052 90.31108856]
[-287.57040405 101.78458405]
[-299.26510620 106.09914398]
[-310.40328979 101.46150970]
[-324.41162109 106.82500458]
[-328.53823853 121.66674805]
[-340.47335815 131.12222290]
[-355.50982666 131.72959900]
[-367.87268066 123.46536255]
[-381.88101196 128.82885742]
[-395.88931274 134.19235229]
[-409.89764404 139.55584717]
[-423.90594482 144.91934204]
[-437.91427612 150.28285217]
[-451.92257690 155.64634705]
[-465.93090820 161.00984192]
[-479.93920898 166.37333679]
[-493.91970825 171.80891418]
[-507.87203979 177.31640625]
[-511.84558105 192.19985962]
[-523.68267822 201.77777100]
[-538.71209717 202.53999329]
[-551.15942383 194.40353394]
[-565.11175537 199.91102600]
[-579.06408691 205.41853333]
[-585.75518799 221.60754395]
[-601.77801514 227.80281067]
[-617.00720215 220.61479187]
[-630.90203857 226.26571655]
[-644.79693604 231.91662598]
[-654.43103027 245.18751526]
[-670.71057129 243.21070862]
[-676.88861084 228.01977539]
[-666.60961914 215.24186707]
[-650.44781494 218.02177429]
[-636.55297852 212.37084961]
[-622.65814209 206.71994019]
[-619.37506104 194.29008484]
[-609.39324951 185.88320923]
[-596.19903564 184.72767639]
[-584.57153320 191.46620178]
[-570.61926270 185.95870972]
[-556.66693115 180.45120239]
[-553.13323975 166.00643921]
[-541.63543701 156.29740906]
[-526.44775391 155.20764160]
[-513.37951660 163.36407471]
[-499.42721558 157.85658264]
[-494.38479614 152.50494385]
[-485.30270386 152.36502075]
[-471.29440308 147.00152588]
[-457.28607178 141.63803101]
[-443.27777100 136.27453613]
[-429.26943970 130.91102600]
[-415.26113892 125.54753876]
[-401.25280762 120.18403625]
[-387.24450684 114.82054138]
[-373.23617554 109.45704651]
[-369.55389404 95.04944611]
[-357.95675659 85.45935822]
[-342.75863647 84.52607727]
[-329.77511597 92.81669617]
[-315.76681519 87.45319366]
[-305.42999268 73.24534607]
[-287.25753784 76.35876465]
[-273.30520630 70.85126495]
[-259.35287476 65.34376526]
[-250.35542297 53.47384262]
[-234.67823792 55.60377121]
[-220.72592163 50.09627151]
[-218.40829468 42.96334457]
[-213.77304077 28.69749832]
[-211.45541382 21.56457520]
[-219.50584412 8.90794182]
[-227.55628967 -3.74869204]
[-235.60673523 -16.40532494]
[-243.65718079 -29.06195831]
[-251.70762634 -41.71859360]
[-259.75805664 -54.37522507]
[-267.80850220 -67.03186035]
[-273.41510010 -70.38116455]
[-276.11914062 -75.30815125]
[-275.89129639 -80.03316498]
[-283.67932129 -92.85294342]
[-291.46734619 -105.67272949]
[-299.32128906 -118.45222473]
[-307.24093628 -131.19111633]
[-315.16058350 -143.92999268]
[-323.08023071 -156.66886902]
[-330.99987793 -169.40776062]
[-338.98504639 -182.10568237]
[-347.03549194 -194.76231384]
[-364.19879150 -198.26606750]
[-373.31671143 -212.82542419]
[-369.14328003 -229.14041138]
[-377.32366943 -241.71345520]
[-392.83535767 -244.74046326]
[-401.59393311 -257.89578247]
[-398.40310669 -273.37463379]
[-385.15588379 -281.99362183]
[-369.71166992 -278.63931274]
[-361.23321533 -265.30172729]
[-364.75061035 -249.89382935]
[-356.57025146 -237.32078552]
[-343.74356079 -236.45144653]
[-333.59823608 -228.24256897]
[-329.96459961 -215.50607300]
[-334.37884521 -202.81275940]
[-326.32839966 -190.15612793]
[-320.11859131 -186.21861267]
[-318.26101685 -177.32740784]
[-310.34133911 -164.58853149]
[-302.42169189 -151.84963989]
[-294.50204468 -139.11076355]
[-286.58239746 -126.37187958]
[-280.41345215 -122.37060547]
[-278.64755249 -113.46074677]
[-270.85955811 -100.64096832]
[-263.07153320 -87.82118225]
[-255.15187073 -75.08229828]
[-247.10142517 -62.42566681]
[-239.05099487 -49.76903534]
[-231.00054932 -37.11240005]
[-222.95010376 -24.45576859]
[-214.89965820 -11.79913521]
[-206.84921265 0.85749847]
[-198.79876709 13.51413155]
[-186.48448181 22.07906342]
[-171.81764221 25.22292328]
[-157.15080261 28.36678123]
[-149.98817444 26.70464134]
[-142.34944153 31.61929512]
[-127.71576691 34.91405869]
[-113.08208466 38.20882034]
[-98.44841003 41.50358200]
[-83.81472778 44.79834366]
[-69.18105316 48.09310532]
[-54.54737091 51.38786697]
[-39.91369247 54.68263245]
[-32.73432922 53.09435272]
[-25.14662361 58.08742905]
[-10.54765892 61.53274155]
[4.05130720 64.97805786]
[6.47558928 63.66739655]
[9.55243015 63.21368408]
[12.96661758 63.86551666]
[16.32034874 65.75595093]
[19.17460632 68.87767029]
[33.61927032 72.92138672]
[48.06393433 76.96510315]
[62.50860214 81.00881958]
[76.95326233 85.05254364]
[91.39793396 89.09626007]
[106.19468689 86.63536072]
[118.55293274 78.13396454]
[130.91117859 69.63256073]
[143.26942444 61.13116455]
[155.58372498 52.56623459]
[167.85374451 43.93799591]
[169.50390625 40.04327011]
[172.03547668 37.14285278]
[175.03700256 35.39001846]
[178.08906555 34.79194641]
[180.81161499 35.21935654]
[193.42662048 27.10383797]
[206.04162598 18.98831940]
[218.65663147 10.87279987]
[224.14550781 3.63564897]
[231.44363403 2.73943543]
[244.14155579 -5.24571753]
[249.70468140 -12.42594814]
[257.01165771 -13.24694252]
[269.79116821 -21.10088158]
[282.57064819 -28.95482063]
[295.35015869 -36.80876160]
[305.67874146 -50.25334549]
[321.45712280 -44.05024719]
[319.86434937 -27.17128372]
[303.20410156 -24.02925873]
[290.42459106 -16.17531967]
[277.64511108 -8.32138157]
[264.86560059 -0.46744215]
[252.12670898 7.45220900]
[239.42878723 15.43736172]
[226.77215576 23.48780441]
[214.15715027 31.60332489]
[201.54214478 39.71884537]
[188.92713928 47.83436203]
[176.48197937 56.20801926]
[164.21195984 64.83625793]
[160.56640625 71.22185516]
[151.77082825 73.48941040]
[139.41258240 81.99080658]
[127.05432892 90.49221039]
[114.69608307 98.99360657]
[114.61883545 113.99340820]
[126.88885498 122.62164307]
[139.15887451 131.24987793]
[154.89805603 132.85884094]
[160.85836792 146.50889587]
[173.12840271 155.13713074]
[185.39842224 163.76536560]
[197.66844177 172.39360046]
[209.93847656 181.02185059]
[222.20849609 189.65008545]
[234.47851562 198.27832031]
[246.74855042 206.90655518]
[259.19369507 215.28021240]
[271.80871582 223.39573669]
[280.67013550 225.39047241]
[284.51126099 231.66038513]
[297.04199219 239.90541077]
[309.57275391 248.15042114]
[322.10348511 256.39544678]
[334.63421631 264.64047241]
[343.47463989 266.72637939]
[347.25097656 273.03552246]
[359.69613647 281.40917969]
[372.14129639 289.78283691]
[384.58645630 298.15649414]
[397.03158569 306.53015137]
[404.68307495 303.48123169]
[412.82388306 303.67190552]
[420.15390015 306.99847412]
[425.53109741 312.86221313]
[428.14953613 320.27587891]
[427.65945435 328.02938843]
[439.74914551 336.90853882]
[451.83880615 345.78768921]
[463.92849731 354.66687012]
[476.01818848 363.54602051]
[491.60052490 360.90664673]
[504.43664551 370.12670898]
[506.91110229 385.73608398]
[497.55587769 398.47402954]
[481.92120361 400.78332520]
[469.28289795 391.29391479]
[467.13903809 375.63571167]
[455.04934692 366.75653076]
[442.95965576 357.87738037]
[430.86996460 348.99822998]
[418.78027344 340.11904907]
[397.12487793 339.74749756]
[388.65792847 318.97531128]
[376.21279907 310.60165405]
[363.76763916 302.22799683]
[351.32247925 293.85433960]
[338.87731934 285.48068237]
[326.38919067 277.17123413]
[313.85845947 268.92620850]
[301.32772827 260.68118286]
[288.79696655 252.43614197]
[276.26623535 244.19111633]
[263.69317627 236.01074219]
[251.07818604 227.89521790]
[248.35562134 228.32263184]
[245.30355835 227.72456360]
[242.30203247 225.97172546]
[239.77046204 223.07130432]
[238.12030029 219.17658997]
[225.85028076 210.54835510]
[213.58026123 201.92010498]
[201.31022644 193.29187012]
[189.04020691 184.66363525]
[176.77018738 176.03540039]
[164.50015259 167.40715027]
[152.23013306 158.77891541]
[137.36859131 157.78710938]
[130.53063965 143.51991272]
[118.26062012 134.89166260]
[105.99059296 126.26342773]
[104.42587280 141.18159485]
[95.62808990 153.33062744]
[81.94274139 159.47157288]
[67.01836395 157.96725464]
[54.83381271 149.21873474]
[48.63750839 135.55836487]
[50.08139420 120.62801361]
[58.78052521 108.40814972]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[4 175]
[5 174]
[6 173]
[7 168]
[8 167]
[9 166]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[16 158]
[17 157]
[18 155]
[19 154]
[20 153]
[21 95]
[22 94]
[24 92]
[25 91]
[26 90]
[29 88]
[30 87]
[34 83]
[35 82]
[36 81]
[37 80]
[38 79]
[39 78]
[40 77]
[41 76]
[42 75]
[43 73]
[44 72]
[48 68]
[49 67]
[50 66]
[53 62]
[54 61]
[55 60]
[98 152]
[99 151]
[100 150]
[101 149]
[102 148]
[103 147]
[104 146]
[105 145]
[108 144]
[109 143]
[110 142]
[111 140]
[112 139]
[113 138]
[114 137]
[115 136]
[116 134]
[117 133]
[120 129]
[121 128]
[179 220]
[180 219]
[181 218]
[182 217]
[183 215]
[184 214]
[189 213]
[190 212]
[191 211]
[192 210]
[194 209]
[195 208]
[197 207]
[198 206]
[199 205]
[200 204]
[221 296]
[222 295]
[223 294]
[225 292]
[226 291]
[227 290]
[228 289]
[229 288]
[230 287]
[231 286]
[232 285]
[233 280]
[234 279]
[236 278]
[237 277]
[238 276]
[239 275]
[240 274]
[242 273]
[243 272]
[244 271]
[245 270]
[246 269]
[252 267]
[253 266]
[254 265]
[255 264]
[256 263]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
