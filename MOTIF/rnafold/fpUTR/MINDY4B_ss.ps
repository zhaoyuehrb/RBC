%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGCUUGCUGGCAUCCUGUGGGCUGCAGGAGCAGCUCAGAAGGCCACCAUCUGUCUUGUCACUGAGGACAUUUACGUUGCGUCGACUCCGGACUACUCUGUGGACAAUUUCACUGAGCGACUCCAGCUGUUUGAAUUUUUAGAGAAAGAAGCCGCUGAGAAAUUCAUCUACGAUCACUUACUAUGUUUCAGAGGGGAAGGAAGCCAUGGUGUCAUCCUGUUUCUGUACAGCCUGAUCUUCUCUAGAACAUUU\
GAAAGGCUUCAA\
) } def
/len { sequence length } bind def

/coor [
[92.96562195 128.92326355]
[82.69761658 128.07276917]
[69.73664093 135.62345886]
[56.77566528 143.17416382]
[43.81468964 150.72486877]
[30.85371208 158.27557373]
[17.89273643 165.82627869]
[26.82645416 184.94920349]
[14.61962795 211.13023376]
[4.78464222 222.45600891]
[1.57840049 237.94892883]
[-12.60849380 242.48559570]
[-22.44347954 253.81135559]
[-32.27846527 265.13711548]
[-42.11345291 276.46289062]
[-36.77400589 288.17968750]
[-36.25228882 300.99850464]
[-40.59027481 313.02270508]
[-49.11351776 322.48657227]
[-60.53574371 328.01437378]
[-73.15290833 328.82061768]
[-85.09738159 324.82116699]
[-95.19516754 335.91326904]
[-105.29296112 347.00537109]
[-115.39074707 358.09747314]
[-125.48853302 369.18957520]
[-135.58631897 380.28167725]
[-145.68411255 391.37377930]
[-155.78190613 402.46588135]
[-158.74862671 418.59442139]
[-174.28829956 423.83377075]
[-186.41503906 412.79409790]
[-182.65388489 396.83206177]
[-166.87399292 392.36807251]
[-156.77621460 381.27597046]
[-146.67842102 370.18386841]
[-136.58062744 359.09176636]
[-126.48284912 347.99969482]
[-116.38505554 336.90759277]
[-106.28726959 325.81549072]
[-96.18948364 314.72338867]
[-102.00964355 298.48953247]
[-98.76882172 281.46020508]
[-87.27475739 268.36468506]
[-70.63995361 262.88659668]
[-53.43922043 266.62789917]
[-43.60423660 255.30213928]
[-33.76924896 243.97637939]
[-23.93426323 232.65060425]
[-21.43148613 217.96777344]
[-6.54112720 212.62101746]
[3.29385900 201.29525757]
[-0.05612095 194.58499146]
[-6.75608110 181.16445923]
[-10.10606098 174.45419312]
[-25.06897545 175.50834656]
[-40.03188705 176.56248474]
[-54.99480057 177.61662292]
[-69.95771790 178.67077637]
[-84.92063141 179.72491455]
[-93.95853424 192.48619080]
[-109.09778595 196.40243530]
[-123.19010925 189.62448120]
[-129.58152771 175.35270691]
[-125.25421143 160.32577515]
[-112.25138855 151.63897705]
[-96.71259308 153.39392090]
[-85.97476959 164.76200867]
[-71.01185608 163.70785522]
[-56.04894638 162.65371704]
[-41.08603287 161.59957886]
[-26.12311745 160.54542542]
[-11.16020393 159.49128723]
[-24.62749863 152.88583374]
[-32.05631256 139.85461426]
[-30.87945366 124.90085602]
[-21.50360870 113.19216156]
[-7.16881371 108.77473450]
[7.17122173 113.17511749]
[16.56097603 124.87265778]
[17.75561142 139.82501221]
[10.34203434 152.86529541]
[23.30301094 145.31459045]
[36.26398468 137.76388550]
[49.22496414 130.21319580]
[62.18593979 122.66249084]
[75.14691162 115.11178589]
[76.93193054 107.82730103]
[61.97280502 108.93386841]
[56.29794312 95.04877472]
[67.74994659 85.36106873]
[80.50196075 93.25833130]
[82.28697968 85.97384644]
[74.28524017 73.28636932]
[66.28350067 60.59888840]
[49.37595367 59.71109390]
[36.46559525 49.01678848]
[32.52548218 32.89324188]
[38.91913223 17.75661469]
[30.76922035 5.16380262]
[22.61930656 -7.42900944]
[8.62566853 -14.81065273]
[8.20621586 -29.69935036]
[0.05630226 -42.29216385]
[-8.09361076 -54.88497543]
[-16.24352455 -67.47778320]
[-24.39343643 -80.07060242]
[-39.23198318 -87.05269623]
[-40.33476639 -103.41471863]
[-26.56734085 -112.32482910]
[-12.09245205 -104.61706543]
[-11.80062485 -88.22051239]
[-3.65071201 -75.62770081]
[4.49920130 -63.03488922]
[12.64911461 -50.44207764]
[20.79902840 -37.84926224]
[34.20972824 -31.36834335]
[35.21212006 -15.57892227]
[43.36203003 -2.98611045]
[51.51194382 9.60670185]
[64.83325195 9.08294964]
[76.77364349 15.25170040]
[84.17299652 26.60045433]
[85.01398468 40.23052597]
[78.97098541 52.59714890]
[86.97272491 65.28462982]
[94.97446442 77.97210693]
[108.54836273 84.35561371]
[123.42383575 82.42678070]
[138.29930115 80.49794769]
[153.17477417 78.56911469]
[165.86544800 69.12149811]
[179.48197937 75.15798187]
[194.35745239 73.22914124]
[209.23292542 71.30030823]
[224.10839844 69.37147522]
[238.98387146 67.44264221]
[253.85932922 65.51380920]
[268.73480225 63.58497620]
[283.59872437 61.56898499]
[298.45056152 59.46591187]
[313.30239868 57.36283875]
[328.15423584 55.25976562]
[343.00607300 53.15669250]
[357.85791016 51.05361938]
[372.70974731 48.95055008]
[387.56158447 46.84747696]
[402.41342163 44.74440384]
[417.26525879 42.64133072]
[425.29046631 38.35310745]
[432.30340576 40.60170746]
[447.17886353 38.67287445]
[453.15438843 24.59308815]
[465.29495239 15.45504093]
[480.27978516 13.63286114]
[494.07250977 19.51651382]
[503.00808716 31.43375397]
[517.88354492 29.50492096]
[532.75903320 27.57608604]
[547.63452148 25.64725304]
[562.47375488 23.45716667]
[577.27221680 21.00650597]
[592.07067871 18.55584526]
[606.86914062 16.10518456]
[621.66760254 13.65452480]
[636.46606445 11.20386410]
[638.64495850 3.33702111]
[642.99957275 -3.52769828]
[649.13690186 -8.80733204]
[656.51361084 -12.06029701]
[664.48413086 -13.02327633]
[672.35705566 -11.63244152]
[679.45520020 -8.02729225]
[685.17382812 -2.53692818]
[689.03204346 4.34990072]
[703.96612549 2.94527817]
[718.90020752 1.54065597]
[731.91522217 -7.45491505]
[745.31109619 -0.94341344]
[760.24517822 -2.34803581]
[765.80108643 -5.82799816]
[771.43859863 -5.98259163]
[775.54516602 -3.60632682]
[790.50805664 -4.66046953]
[805.47100830 -5.71461248]
[820.43389893 -6.76875544]
[835.39685059 -7.82289791]
[850.35974121 -8.87704086]
[865.31622314 -10.01886559]
[880.26574707 -11.24833298]
[895.21527100 -12.47779942]
[910.16479492 -13.70726681]
[916.65557861 -27.62724304]
[929.24591064 -36.42377090]
[944.54907227 -37.73062897]
[958.44866943 -31.19627762]
[967.20568848 -18.57842827]
[968.46453857 -3.27121377]
[961.88665771 10.60779858]
[949.24145508 19.32522392]
[933.93035889 20.53612137]
[920.07202148 13.91476345]
[911.39428711 1.24226213]
[896.44476318 2.47172928]
[881.49523926 3.70119619]
[866.54571533 4.93066311]
[860.15924072 8.59818935]
[851.41387939 6.08587265]
[836.45098877 7.14001560]
[821.48803711 8.19415855]
[806.52514648 9.24830151]
[791.56225586 10.30244446]
[776.59930420 11.35658646]
[761.64978027 12.58605385]
[746.71569824 13.99067593]
[734.76885986 22.88578033]
[720.30480957 16.47474480]
[705.37072754 17.87936783]
[690.43664551 19.28399086]
[678.13879395 37.46393585]
[656.12103271 40.51433563]
[638.91668701 26.00231934]
[624.11822510 28.45298004]
[609.31976318 30.90364075]
[594.52136230 33.35430145]
[579.72290039 35.80496216]
[564.92443848 38.25562286]
[562.59655762 40.86047363]
[558.90551758 42.48325348]
[554.31927490 42.50171280]
[549.56335449 40.52272034]
[534.68786621 42.45155716]
[519.81237793 44.38039017]
[504.93695068 46.30922318]
[499.33624268 60.11131668]
[487.50024414 69.31813049]
[472.54620361 71.37799072]
[458.47656250 65.63849640]
[449.10769653 53.54834366]
[434.23223877 55.47717667]
[419.36831665 57.49316788]
[404.51647949 59.59624100]
[389.66464233 61.69931412]
[374.81280518 63.80238724]
[359.96096802 65.90545654]
[345.10913086 68.00852966]
[330.25729370 70.11160278]
[315.40545654 72.21467590]
[300.55361938 74.31774902]
[285.70178223 76.42082214]
[279.54113770 80.45616150]
[270.66363525 78.46044159]
[255.78816223 80.38928223]
[240.91270447 82.31811523]
[226.03723145 84.24694824]
[211.16175842 86.17578125]
[196.28628540 88.10461426]
[181.41081238 90.03344727]
[169.78413391 99.34310150]
[155.10360718 93.44458771]
[140.22813416 95.37342072]
[125.35266876 97.30225372]
[110.47719574 99.23108673]
[113.32074738 103.26706696]
[114.39153290 108.90860748]
[113.01402283 115.36518097]
[108.85359192 121.60211945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 87]
[3 86]
[4 85]
[5 84]
[6 83]
[7 82]
[9 52]
[10 51]
[12 49]
[13 48]
[14 47]
[15 46]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[93 127]
[94 126]
[95 125]
[99 120]
[100 119]
[101 118]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
[128 263]
[129 262]
[130 261]
[131 260]
[133 258]
[134 257]
[135 256]
[136 255]
[137 254]
[138 253]
[139 252]
[140 250]
[141 249]
[142 248]
[143 247]
[144 246]
[145 245]
[146 244]
[147 243]
[148 242]
[149 241]
[151 240]
[152 239]
[157 234]
[158 233]
[159 232]
[160 231]
[161 227]
[162 226]
[163 225]
[164 224]
[165 223]
[166 222]
[175 219]
[176 218]
[177 217]
[179 215]
[180 214]
[183 213]
[184 212]
[185 211]
[186 210]
[187 209]
[188 208]
[189 206]
[190 205]
[191 204]
[192 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
