%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC116)
} def

/sequence { (\
CUGGCCUGUGCGGAGCAAGGCGGUGUUUCUGAGAGGAAUGCGCAGCUGAAGAGAGAGGUGGGCAGCAGGCCCGGUCACCUGCCAGGUGACCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.004182065 ubox
1 45 0.009327430 ubox
1 51 0.004987874 ubox
1 57 0.004806380 ubox
1 68 0.010630854 ubox
1 74 0.004658586 ubox
2 22 0.005787509 ubox
2 44 0.009518085 ubox
2 48 0.007146239 ubox
2 50 0.004754696 ubox
2 56 0.004704213 ubox
2 67 0.010675127 ubox
2 73 0.009946834 ubox
2 92 0.008169755 ubox
3 21 0.004678479 ubox
3 43 0.009493645 ubox
3 47 0.011426576 ubox
3 66 0.010650769 ubox
3 71 0.988241142 ubox
3 72 0.113346184 ubox
4 21 0.055521186 ubox
4 46 0.011780277 ubox
4 59 0.027473171 ubox
4 70 0.994695243 ubox
4 71 0.080233516 ubox
5 20 0.055771185 ubox
5 45 0.008377265 ubox
5 58 0.028360366 ubox
5 69 0.997938803 ubox
6 19 0.055774529 ubox
6 45 0.009024659 ubox
6 57 0.028359084 ubox
6 68 0.997923871 ubox
7 17 0.017285058 ubox
7 18 0.052457795 ubox
7 44 0.012310597 ubox
7 56 0.028050564 ubox
7 67 0.996693031 ubox
8 16 0.024607520 ubox
8 43 0.012446842 ubox
8 63 0.003724877 ubox
8 66 0.995179568 ubox
9 15 0.024467585 ubox
9 17 0.068919354 ubox
9 22 0.157281333 ubox
9 23 0.006631728 ubox
9 25 0.010138117 ubox
9 31 0.013280985 ubox
9 42 0.012439063 ubox
9 62 0.004086493 ubox
9 64 0.378064725 ubox
9 65 0.866046464 ubox
9 67 0.040014972 ubox
10 16 0.107268336 ubox
10 21 0.465186690 ubox
10 24 0.054364969 ubox
10 26 0.144754991 ubox
10 30 0.051629684 ubox
10 41 0.012474699 ubox
10 59 0.015477360 ubox
10 63 0.466999202 ubox
10 66 0.058765919 ubox
11 15 0.106565460 ubox
11 20 0.465705554 ubox
11 22 0.153656082 ubox
11 23 0.051229584 ubox
11 25 0.153156746 ubox
11 31 0.473240956 ubox
11 40 0.012464695 ubox
11 48 0.003259432 ubox
11 58 0.015583827 ubox
11 60 0.004992070 ubox
11 62 0.467328475 ubox
11 65 0.062278912 ubox
12 21 0.159764503 ubox
12 24 0.141790619 ubox
12 27 0.005989416 ubox
12 28 0.005279360 ubox
12 29 0.520061996 ubox
12 30 0.455115976 ubox
12 39 0.009699612 ubox
12 47 0.003964805 ubox
12 59 0.007662033 ubox
13 26 0.007748012 ubox
13 27 0.007582418 ubox
13 28 0.526125369 ubox
13 29 0.454961917 ubox
13 46 0.003744574 ubox
14 26 0.007764239 ubox
14 27 0.588235215 ubox
14 28 0.372989730 ubox
14 30 0.006245055 ubox
14 47 0.193428721 ubox
15 21 0.185535481 ubox
15 24 0.057962044 ubox
15 26 0.647117788 ubox
15 27 0.261200178 ubox
15 29 0.006384565 ubox
15 41 0.005884334 ubox
15 43 0.003593273 ubox
15 46 0.195208493 ubox
15 59 0.385071106 ubox
15 63 0.010576273 ubox
16 20 0.184413177 ubox
16 23 0.061058338 ubox
16 25 0.697766933 ubox
16 31 0.006517091 ubox
16 40 0.005936506 ubox
16 42 0.003792487 ubox
16 45 0.194942945 ubox
16 48 0.026209323 ubox
16 58 0.387204607 ubox
16 60 0.011246515 ubox
16 62 0.010633808 ubox
17 24 0.637716950 ubox
17 27 0.009775370 ubox
17 28 0.007398229 ubox
17 30 0.006122124 ubox
17 39 0.005494662 ubox
17 47 0.019841918 ubox
17 59 0.009998083 ubox
18 26 0.012879761 ubox
18 27 0.012324418 ubox
18 28 0.012814223 ubox
18 30 0.008944014 ubox
18 47 0.015786438 ubox
19 26 0.015251884 ubox
19 27 0.025060803 ubox
19 29 0.009418702 ubox
19 46 0.015244386 ubox
19 47 0.393732376 ubox
20 26 0.035624569 ubox
20 28 0.007878377 ubox
20 41 0.020094262 ubox
20 43 0.219873413 ubox
20 46 0.397242924 ubox
20 59 0.003225768 ubox
20 63 0.003563383 ubox
21 25 0.035936860 ubox
21 31 0.048541427 ubox
21 40 0.020141808 ubox
21 42 0.220649248 ubox
21 45 0.395930651 ubox
21 48 0.007136825 ubox
21 58 0.003245427 ubox
21 62 0.003568925 ubox
22 28 0.003680506 ubox
22 29 0.035803151 ubox
22 30 0.057837974 ubox
22 39 0.016246355 ubox
22 41 0.175909134 ubox
22 47 0.007260086 ubox
22 71 0.008126881 ubox
22 72 0.009310530 ubox
23 27 0.004933505 ubox
23 28 0.032194731 ubox
23 29 0.058862291 ubox
23 39 0.019177081 ubox
23 41 0.192563393 ubox
23 43 0.393456534 ubox
23 46 0.007072663 ubox
23 70 0.008155112 ubox
23 71 0.009277945 ubox
24 31 0.003414827 ubox
24 38 0.021077449 ubox
24 40 0.234236724 ubox
24 42 0.394235406 ubox
24 44 0.005829012 ubox
24 45 0.005419806 ubox
24 67 0.003409154 ubox
24 69 0.007651894 ubox
25 39 0.359272548 ubox
25 41 0.394177193 ubox
25 43 0.006823986 ubox
25 66 0.004731900 ubox
25 70 0.008745367 ubox
26 32 0.004820888 ubox
26 33 0.004575480 ubox
26 34 0.009745955 ubox
26 35 0.013214456 ubox
26 36 0.043068098 ubox
26 37 0.017231791 ubox
26 38 0.393264815 ubox
26 40 0.380752803 ubox
26 42 0.006771400 ubox
26 56 0.003189282 ubox
26 65 0.004610739 ubox
26 69 0.008426926 ubox
27 31 0.004750934 ubox
27 32 0.004705925 ubox
27 33 0.010441638 ubox
27 34 0.015830694 ubox
27 35 0.055729591 ubox
27 36 0.017503708 ubox
27 37 0.412061806 ubox
27 38 0.492940690 ubox
27 55 0.003275150 ubox
27 68 0.006230657 ubox
28 32 0.008219308 ubox
28 33 0.014901371 ubox
28 34 0.060006245 ubox
28 35 0.014461036 ubox
28 36 0.413228707 ubox
28 37 0.566886330 ubox
28 54 0.003316229 ubox
28 67 0.004982151 ubox
29 33 0.060211418 ubox
29 35 0.414608847 ubox
29 36 0.574467222 ubox
29 53 0.003328863 ubox
29 65 0.003564401 ubox
29 68 0.004851233 ubox
30 34 0.373895529 ubox
30 35 0.560617582 ubox
30 42 0.003495400 ubox
30 52 0.003309521 ubox
30 64 0.003232284 ubox
30 67 0.004917143 ubox
31 39 0.004227560 ubox
31 41 0.004873199 ubox
31 66 0.004868595 ubox
34 47 0.003701562 ubox
35 46 0.003732043 ubox
35 71 0.003648414 ubox
36 70 0.003664548 ubox
39 64 0.755480018 ubox
40 59 0.004933773 ubox
40 63 0.875735859 ubox
41 58 0.005049714 ubox
41 60 0.082247687 ubox
41 62 0.875954754 ubox
42 59 0.099805918 ubox
42 63 0.027793053 ubox
42 66 0.003662845 ubox
43 58 0.100865480 ubox
43 60 0.882796228 ubox
43 62 0.027376226 ubox
43 65 0.004013726 ubox
44 59 0.882243859 ubox
45 59 0.034832779 ubox
45 63 0.023121093 ubox
45 66 0.007312029 ubox
46 53 0.049224267 ubox
46 55 0.117479271 ubox
46 57 0.884194027 ubox
46 58 0.042345855 ubox
46 61 0.005228244 ubox
46 62 0.023129362 ubox
46 65 0.007884683 ubox
47 52 0.049695700 ubox
47 54 0.117800393 ubox
47 56 0.883229588 ubox
47 57 0.041381014 ubox
47 60 0.005271874 ubox
47 61 0.022871706 ubox
47 64 0.007945025 ubox
48 59 0.004435171 ubox
48 63 0.007990668 ubox
60 72 0.061176729 ubox
61 71 0.061501944 ubox
62 70 0.061505684 ubox
63 69 0.061461158 ubox
73 91 0.998886561 ubox
74 90 0.999969184 ubox
75 89 0.999867043 ubox
76 88 0.999981552 ubox
77 87 0.999789454 ubox
78 86 0.999957441 ubox
79 85 0.999656261 ubox
79 86 0.007752721 ubox
80 84 0.900575168 ubox
80 85 0.010654347 ubox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
39 64 0.9500000 lbox
40 63 0.9500000 lbox
41 62 0.9500000 lbox
43 60 0.9500000 lbox
44 59 0.9500000 lbox
46 57 0.9500000 lbox
47 56 0.9500000 lbox
73 91 0.9500000 lbox
74 90 0.9500000 lbox
75 89 0.9500000 lbox
76 88 0.9500000 lbox
77 87 0.9500000 lbox
78 86 0.9500000 lbox
79 85 0.9500000 lbox
80 84 0.9500000 lbox
showpage
end
%%EOF
