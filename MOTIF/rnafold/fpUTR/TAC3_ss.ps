%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUAUCAGGGAGCUGGGACUGAGUGACUGCAGCCUUCCUAGAUCCCCUCCACUCGGUUUCUCUCUUUGCAGGAGCACCGGCAGCACCAGUGUGUGAGGGGAGCAGGCAGCGGUCCUAGCCAGUUCCUUGAUCCUGCCAGACCACCCAGCCCCCGGCACAGAGCUGCUCCACAGGCACC\
) } def
/len { sequence length } bind def

/coor [
[327.05303955 395.90557861]
[321.78265381 388.77911377]
[319.11410522 380.28109741]
[319.36685181 371.33398438]
[322.54165649 362.91870117]
[312.31167603 351.94839478]
[302.08169556 340.97808838]
[291.85171509 330.00781250]
[281.62173462 319.03750610]
[271.39175415 308.06719971]
[261.16180420 297.09689331]
[250.93182373 286.12658691]
[240.70184326 275.15628052]
[230.47186279 264.18597412]
[220.24189758 253.21565247]
[210.01191711 242.24534607]
[199.78193665 231.27505493]
[189.75825500 233.70115662]
[179.55523682 231.71772766]
[171.03889465 225.61888123]
[165.79521179 216.45758057]
[164.83503723 205.86424255]
[168.39985657 195.75679016]
[158.75804138 184.26612854]
[152.03105164 181.15451050]
[149.05033875 172.48974609]
[139.61053467 160.83256531]
[130.17073059 149.17536926]
[120.73092651 137.51818848]
[111.29112244 125.86099243]
[101.85131836 114.20380402]
[88.86820221 109.01435089]
[86.49149323 95.23600006]
[77.05168915 83.57881165]
[67.61188507 71.92162323]
[58.17207718 60.26443481]
[49.39685440 62.23713684]
[40.50163269 61.24223709]
[32.45771408 57.41696930]
[26.13410378 51.20605469]
[22.20363808 43.31016922]
[21.07145691 34.60697174]
[22.83341217 26.05357552]
[27.26864624 18.58127975]
[18.88075447 6.14571571]
[10.49285984 -6.28984785]
[2.10496640 -18.72541237]
[-6.28292704 -31.16097450]
[-14.67082024 -43.59653854]
[-23.05871391 -56.03210068]
[-31.55480766 -68.39399719]
[-40.15845490 -80.68127441]
[-48.76210022 -92.96855927]
[-58.40391541 -104.45922089]
[-69.01051331 -115.06582642]
[-79.61711884 -125.67242432]
[-90.22371674 -136.27902222]
[-100.83032227 -146.88563538]
[-113.72290802 -147.67092896]
[-122.34006500 -156.74710083]
[-122.44760895 -168.86073303]
[-132.86749268 -179.65083313]
[-143.28736877 -190.44091797]
[-153.70724487 -201.23101807]
[-169.29306030 -199.95977783]
[-182.01966858 -209.04644775]
[-185.87792969 -224.20059204]
[-179.04611206 -238.26686096]
[-164.74996948 -244.60362244]
[-149.73971558 -240.21882629]
[-141.10273743 -227.18286133]
[-142.91714478 -211.65089417]
[-132.49726868 -200.86079407]
[-122.07739258 -190.07070923]
[-111.65751648 -179.28060913]
[-94.56088257 -175.37501526]
[-90.22371674 -157.49223328]
[-79.61711884 -146.88563538]
[-69.01051331 -136.27902222]
[-58.40391541 -125.67242432]
[-47.79731369 -115.06582642]
[-49.83032608 -129.92741394]
[-44.26736069 -143.85772705]
[-32.55642319 -153.23075867]
[-17.74580002 -155.60678101]
[-3.69061875 -150.36734009]
[5.95063972 -138.87620544]
[8.66841030 -124.12446594]
[3.75527215 -109.95191956]
[-7.50991249 -100.04759979]
[-22.19487953 -96.98953247]
[-36.47481918 -101.57220459]
[-27.87117386 -89.28491974]
[-19.26752663 -76.99764252]
[-12.83733559 -73.31156158]
[-10.62315083 -64.41999817]
[-2.23525715 -51.98443222]
[6.15263653 -39.54887009]
[14.54053020 -27.11330605]
[22.92842293 -14.67774200]
[31.31631660 -2.24217796]
[39.70421219 10.19338608]
[60.82941437 12.22867584]
[73.77936554 29.39788437]
[69.82926941 50.82462692]
[79.26907349 62.48181915]
[88.70887756 74.13900757]
[98.14868164 85.79619598]
[111.13179779 90.98564911]
[113.50850677 104.76399994]
[122.94831085 116.42118835]
[132.38812256 128.07836914]
[141.82792664 139.73556519]
[151.26773071 151.39276123]
[160.70753479 163.04994202]
[170.24870300 174.62431335]
[179.89051819 186.11497498]
[199.94552612 186.77116394]
[212.88761902 201.70512390]
[210.75224304 221.04507446]
[220.98222351 232.01538086]
[231.21218872 242.98568726]
[241.44216919 253.95599365]
[251.67214966 264.92630005]
[261.90213013 275.89660645]
[272.13211060 286.86691284]
[282.36206055 297.83721924]
[292.59204102 308.80752563]
[302.82202148 319.77783203]
[313.05200195 330.74813843]
[323.28198242 341.71844482]
[333.51196289 352.68875122]
[355.27990723 351.75909424]
[370.47976685 366.97253418]
[369.55517578 388.17538452]
[380.70236206 398.21234131]
[391.84951782 408.24932861]
[402.99670410 418.28628540]
[415.50256348 411.26403809]
[429.54556274 408.45562744]
[443.74761963 410.12307739]
[456.71920776 416.08987427]
[467.19537354 425.75952148]
[474.15899658 438.17520142]
[476.93960571 452.11428833]
[475.27780151 466.20892334]
[469.34960938 479.08010864]
[480.31991577 489.31008911]
[491.29022217 499.54006958]
[502.26052856 509.77005005]
[516.46362305 504.18127441]
[531.68444824 505.31701660]
[544.90081787 512.95178223]
[553.48870850 525.56970215]
[555.74285889 540.66540527]
[551.21588135 555.24176025]
[540.80645752 566.40447998]
[526.58142090 571.93725586]
[511.36520386 570.74157715]
[498.17898560 563.05480957]
[489.64086914 550.40319824]
[487.44613647 535.29870605]
[492.03054810 520.74035645]
[481.06024170 510.51037598]
[470.08993530 500.28039551]
[459.11962891 490.05041504]
[445.19506836 497.37100220]
[429.57965088 499.48953247]
[414.15554810 496.13211060]
[400.78820801 487.68603516]
[391.10073853 475.15515137]
[386.27679443 460.04058838]
[386.91607666 444.16091919]
[392.95974731 429.43344116]
[381.81256104 419.39648438]
[370.66537476 409.35952759]
[359.51821899 399.32257080]
[351.50137329 402.67468262]
[342.78601074 403.22909546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 132]
[6 131]
[7 130]
[8 129]
[9 128]
[10 127]
[11 126]
[12 125]
[13 124]
[14 123]
[15 122]
[16 121]
[17 120]
[23 117]
[24 116]
[26 115]
[27 114]
[28 113]
[29 112]
[30 111]
[31 110]
[33 108]
[34 107]
[35 106]
[36 105]
[44 102]
[45 101]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[51 94]
[52 93]
[53 92]
[54 81]
[55 80]
[56 79]
[57 78]
[58 77]
[61 75]
[62 74]
[63 73]
[64 72]
[135 177]
[136 176]
[137 175]
[138 174]
[147 166]
[148 165]
[149 164]
[150 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
