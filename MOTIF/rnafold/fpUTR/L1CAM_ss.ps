%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAGCCGCUGCUGCCGCAGCAUCGGCAUCGCAGACGCGCUCGGGCGGCGGGUCCGAGGCCGGCGUGCGCGGAGGCUGGGCGGGCAGCCCGAGCGGUGGCCGCAGCGCAGUGCCCCCACUCCCAACUCCCGCCCCAAGCCGCCCACCAGCCCCCUUCCCCUCCGGCCGGAGCCUGAACCGAGCCCGGCUGGCUGUGCUGCGCGGUGCCGCCGGGAAAG\
) } def
/len { sequence length } bind def

/coor [
[92.35263062 171.66645813]
[95.45905304 156.99113464]
[94.84490967 142.00370789]
[94.23075867 127.01628113]
[86.74638367 127.50009918]
[80.09999084 140.94723511]
[73.45360565 154.39437866]
[66.80721283 167.84150696]
[67.62876129 183.64137268]
[55.05310059 191.62272644]
[48.40671158 205.06985474]
[41.76032257 218.51699829]
[35.11393356 231.96412659]
[28.46754265 245.41127014]
[26.86973763 262.28976440]
[10.20855045 265.42681885]
[2.58180523 250.28518677]
[15.02040577 238.76487732]
[21.66679382 225.31774902]
[28.31318474 211.87060547]
[34.95957184 198.42347717]
[41.60596466 184.97633362]
[40.30902100 170.13830566]
[53.36007690 161.19511414]
[60.00646591 147.74798584]
[66.65285492 134.30084229]
[73.29924774 120.85370636]
[73.98016357 95.06562042]
[90.30254364 83.55903625]
[88.37132263 68.68387604]
[86.44010162 53.80871582]
[73.88392639 48.13063049]
[65.83562469 37.07839966]
[64.31008148 23.60056114]
[69.59937286 11.22806835]
[80.22421265 3.14925718]
[78.50656891 -11.75207520]
[69.23991394 -24.57547569]
[75.46892548 -38.10502625]
[73.75128174 -53.00635910]
[72.03363800 -67.90769196]
[70.31598663 -82.80902100]
[61.04933167 -95.63242340]
[67.27834320 -109.16197205]
[65.56069946 -124.06330109]
[63.84305191 -138.96463013]
[62.01857376 -153.85327148]
[60.08734894 -168.72842407]
[50.63769531 -181.41757202]
[56.67198944 -195.03509521]
[54.74076843 -209.91024780]
[52.80954361 -224.78541565]
[43.82880783 -230.90850830]
[39.78074265 -240.75917053]
[41.77732849 -250.99679565]
[48.92323303 -258.29067993]
[47.41951752 -273.21511841]
[45.91580582 -288.13955688]
[44.41209030 -303.06399536]
[34.93772125 -311.81036377]
[33.98957443 -324.26788330]
[41.53207397 -333.72024536]
[40.24260330 -348.66470337]
[38.95312881 -363.60919189]
[37.44941711 -378.53363037]
[35.73177338 -393.43493652]
[34.01412964 -408.33627319]
[24.74747086 -421.15966797]
[30.97648048 -434.68923950]
[29.25883484 -449.59057617]
[27.54119110 -464.49188232]
[25.82354736 -479.39321899]
[12.71999645 -484.27886963]
[3.04505467 -494.28494263]
[-1.35494089 -507.42001343]
[0.32429099 -521.10363770]
[7.69861507 -532.67340088]
[19.28144455 -539.90313721]
[17.77773094 -554.82757568]
[16.27401924 -569.75201416]
[14.77030563 -584.67645264]
[13.26659203 -599.60089111]
[11.76287937 -614.52532959]
[10.25916672 -629.44976807]
[6.28731585 -637.66870117]
[8.84250355 -644.59881592]
[7.55303144 -659.54333496]
[-7.05423498 -668.07672119]
[-13.62954998 -683.48321533]
[-9.76282120 -699.61090088]
[2.82875013 -710.14746094]
[1.32503712 -725.07189941]
[-0.17867583 -739.99633789]
[-9.26043320 -752.95135498]
[-2.83798671 -766.39013672]
[-4.34169960 -781.31457520]
[-8.31355000 -789.53356934]
[-5.75836277 -796.46368408]
[-7.04783487 -811.40814209]
[-15.94282150 -824.49206543]
[-9.32826138 -837.83740234]
[-10.61773300 -852.78186035]
[-11.90720463 -867.72631836]
[-24.16165161 -877.70654297]
[-25.68666267 -893.43707275]
[-15.57747459 -905.58532715]
[0.16830923 -906.94390869]
[12.20899582 -896.70684814]
[13.40105820 -880.94757080]
[3.03726745 -869.01580811]
[4.32673931 -854.07135010]
[5.61621141 -839.12683105]
[14.41896725 -827.11181641]
[7.89663792 -812.69763184]
[9.18610954 -797.75311279]
[10.58273792 -782.81829834]
[12.08645153 -767.89385986]
[21.06065369 -756.00634766]
[14.74576187 -741.50006104]
[16.24947548 -726.57562256]
[17.75318718 -711.65118408]
[29.85799980 -706.02728271]
[37.66710281 -695.06951904]
[39.05453873 -681.57678223]
[33.55172348 -669.06091309]
[22.49750328 -660.83276367]
[23.78697586 -645.88830566]
[25.18360519 -630.95349121]
[26.68731689 -616.02905273]
[28.19103050 -601.10461426]
[29.69474411 -586.18017578]
[31.19845581 -571.25573730]
[32.70216751 -556.33129883]
[34.20588303 -541.40686035]
[49.09936142 -535.13110352]
[58.85047150 -522.12487793]
[60.72093582 -505.88272095]
[54.10591888 -490.82852173]
[40.72488022 -481.11087036]
[42.44252396 -466.20953369]
[44.16016769 -451.30819702]
[45.87781143 -436.40686035]
[55.02161407 -424.64932251]
[48.91545868 -410.05392456]
[50.63310623 -395.15258789]
[52.35074997 -380.25125122]
[55.46451187 -376.63711548]
[56.34479523 -371.03021240]
[53.89760208 -364.89865112]
[55.18707657 -349.95416260]
[56.47654724 -335.00970459]
[67.28505707 -321.18106079]
[59.33652878 -304.56771851]
[60.84024429 -289.64328003]
[62.34395599 -274.71884155]
[63.84766769 -259.79440308]
[76.26067352 -244.96412659]
[67.68470764 -226.71662903]
[69.61592865 -211.84147644]
[71.54714966 -196.96630859]
[80.85866547 -185.34112549]
[74.96250916 -170.65965271]
[76.89373016 -155.78448486]
[80.86972046 -149.55976868]
[78.74438477 -140.68228149]
[80.46202850 -125.78094482]
[82.17967224 -110.87961578]
[91.32347107 -99.12205505]
[85.21732330 -84.52666473]
[86.93496704 -69.62533569]
[88.65261078 -54.72400284]
[90.37025452 -39.82266998]
[99.51405334 -28.06511116]
[93.40790558 -13.46971893]
[95.12554932 1.43161273]
[109.67651367 9.03661633]
[116.89766693 23.96672440]
[113.76359558 40.42189026]
[101.31526184 51.87749100]
[103.24648285 66.75265503]
[105.17770386 81.62781525]
[124.58380127 90.15030670]
[129.16340637 117.24247742]
[137.48577881 129.72198486]
[145.80815125 142.20149231]
[154.13050842 154.68099976]
[162.45288086 167.16052246]
[170.77525330 179.64002991]
[178.13558960 185.03930664]
[179.12599182 192.35877991]
[187.26849365 204.95639038]
[195.41098022 217.55400085]
[210.60409546 220.99012756]
[218.68229675 233.88188171]
[215.31285095 248.34501648]
[223.45533752 260.94262695]
[231.59783936 273.54025269]
[245.27380371 283.56042480]
[239.43109131 299.47579956]
[222.52027893 298.26724243]
[219.00022888 281.68273926]
[210.85772705 269.08511353]
[202.71524048 256.48751831]
[188.14422607 253.62023926]
[179.70712280 240.96046448]
[182.81336975 225.69650269]
[174.67088318 213.09889221]
[166.52838135 200.50128174]
[158.29574585 187.96240234]
[149.97337341 175.48287964]
[141.65100098 163.00337219]
[133.32862854 150.52386475]
[125.00626373 138.04435730]
[116.68389893 125.56484222]
[109.19951630 126.04865265]
[110.52008820 140.99041748]
[111.84066010 155.93217468]
[116.81082153 170.08482361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 27]
[6 26]
[7 25]
[8 24]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[29 181]
[30 180]
[31 179]
[36 175]
[37 174]
[39 172]
[40 171]
[41 170]
[42 169]
[44 167]
[45 166]
[46 165]
[47 163]
[48 162]
[50 160]
[51 159]
[52 158]
[56 156]
[57 155]
[58 154]
[59 153]
[62 151]
[63 150]
[64 149]
[65 146]
[66 145]
[67 144]
[69 142]
[70 141]
[71 140]
[72 139]
[78 134]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[86 127]
[87 126]
[91 121]
[92 120]
[93 119]
[95 117]
[96 116]
[98 115]
[99 114]
[101 112]
[102 111]
[103 110]
[183 214]
[184 213]
[185 212]
[186 211]
[187 210]
[188 209]
[190 208]
[191 207]
[192 206]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
