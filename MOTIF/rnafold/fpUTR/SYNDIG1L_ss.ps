%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGGCUGCGGGCGGGAGCUGUCCGCGGUGCUGAAGCGGCGGCUGCUCAGGGACGCGGGGACGAGAGCAGGGGAGCCCUCCUGGGAGUUCCACCGCGACCGCGAGGCGGGGGCGCCGUCGCUCACCGGCCCAUGCCGAGCCCCCGAGCCCCGCGGAGGAGGCGGGACCGUCCGCGGCGGGACAGGCUCUGAGGACUGCUCAGCUGGCCCAGGCCCCCCUCCCCAGCAGCUGCCCCAGAACC\
) } def
/len { sequence length } bind def

/coor [
[20.50284958 326.87509155]
[19.98872185 311.88360596]
[11.76366329 324.42745972]
[14.76960659 339.71148682]
[6.24953651 352.31558228]
[-8.33998966 355.08709717]
[-16.56504822 367.63095093]
[-24.79010582 380.17483521]
[-33.01516342 392.71868896]
[-33.76643753 399.24707031]
[-37.17725372 403.75375366]
[-41.60934830 405.47164917]
[-50.14828110 417.80398560]
[-58.68721390 430.13632202]
[-67.22615051 442.46865845]
[-75.76508331 454.80099487]
[-84.30401611 467.13336182]
[-92.84294891 479.46569824]
[-101.38188171 491.79803467]
[-109.92081451 504.13037109]
[-118.45974731 516.46270752]
[-126.99868011 528.79504395]
[-131.04426575 545.25921631]
[-147.98495483 545.92950439]
[-153.31867981 529.83642578]
[-139.33102417 520.25610352]
[-130.79208374 507.92376709]
[-122.25315857 495.59143066]
[-113.71421814 483.25909424]
[-105.17528534 470.92675781]
[-96.63635254 458.59442139]
[-88.09741974 446.26208496]
[-79.55848694 433.92974854]
[-71.01955414 421.59738159]
[-62.48062134 409.26504517]
[-53.94168472 396.93270874]
[-45.55902481 384.49362183]
[-37.33396530 371.94976807]
[-29.10890770 359.40591431]
[-20.88385010 346.86206055]
[-24.15823936 332.37707520]
[-15.99555302 319.53866577]
[-0.78019673 316.20239258]
[7.44486094 303.65853882]
[14.86276340 290.62109375]
[21.44400024 277.14196777]
[28.02523613 263.66281128]
[34.60647202 250.18367004]
[41.18770981 236.70452881]
[47.76894760 223.22537231]
[54.35018158 209.74623108]
[60.93141937 196.26708984]
[67.51265717 182.78794861]
[74.09389496 169.30880737]
[73.42490387 164.60273743]
[75.68791962 159.42367554]
[81.01500702 155.57575989]
[87.93424225 142.26696777]
[94.85347748 128.95816040]
[77.87199402 115.12426758]
[76.26850891 95.29328156]
[63.18453598 87.95777130]
[50.10056305 80.62226105]
[37.01659393 73.28675079]
[23.93262291 65.95124054]
[10.80263710 58.69841385]
[-2.37284112 51.52856064]
[-15.54831886 44.35871124]
[-26.68604851 53.03783417]
[-40.24815369 56.80945587]
[-54.18162155 55.13685608]
[-66.39022827 48.30486679]
[-75.04990387 37.37202454]
[-78.88124084 24.00667953]
[-77.33843231 10.23244190]
[-90.42240906 2.89693165]
[-103.50637817 -4.43857813]
[-116.59034729 -11.77408791]
[-129.67431641 -19.10959816]
[-142.75828552 -26.44510841]
[-159.14038086 -25.69727898]
[-167.74993896 -39.65462112]
[-159.73019409 -53.95901871]
[-143.33117676 -53.89533234]
[-135.42277527 -39.52907944]
[-122.33880615 -32.19356918]
[-109.25483704 -24.85805893]
[-96.17086792 -17.52254868]
[-83.08689880 -10.18703938]
[-70.00292206 -2.85152936]
[-57.08127213 -12.27202320]
[-41.28645325 -15.11887074]
[-25.77673340 -10.77117348]
[-13.67595387 -0.05181182]
[-7.44435263 14.92774773]
[-8.37846756 31.18323135]
[4.79701090 38.35308456]
[17.97248840 45.52293396]
[25.33158302 45.95843506]
[31.26813316 52.86726761]
[44.35210419 60.20277786]
[57.43607330 67.53828430]
[70.52004242 74.87379456]
[83.60401917 82.20930481]
[90.35510254 77.81187439]
[98.17581940 75.87512970]
[101.73727417 61.30406189]
[105.29873657 46.73299408]
[108.86019135 32.16192627]
[112.42165375 17.59085846]
[108.18218994 2.34823728]
[118.72007751 -8.17802048]
[122.28153992 -22.74908829]
[125.84299469 -37.32015610]
[129.22033691 -51.93499756]
[132.41300964 -66.59128571]
[135.60569763 -81.24757385]
[138.79838562 -95.90386200]
[141.99105835 -110.56015015]
[145.18374634 -125.21643829]
[146.78930664 -140.13026428]
[146.78930664 -155.13026428]
[138.12561035 -169.05406189]
[146.08973694 -183.38949585]
[162.48887634 -183.38949585]
[170.45301819 -169.05406189]
[161.78930664 -155.13026428]
[161.78930664 -140.13026428]
[169.17260742 -138.81237793]
[171.80863953 -153.57893372]
[186.57514954 -150.94265747]
[183.93922424 -136.17658997]
[191.32252502 -134.85870361]
[196.51205444 -148.93238831]
[201.70159912 -163.00607300]
[206.89112854 -177.07977295]
[203.57965088 -193.14109802]
[216.01158142 -203.83590698]
[231.39801025 -198.16232300]
[233.91070557 -181.95681763]
[220.96481323 -171.89022827]
[215.77528381 -157.81654358]
[210.58575439 -143.74285889]
[205.39620972 -129.66915894]
[180.44493103 -115.25070953]
[159.84002686 -122.02375793]
[156.64735413 -107.36746979]
[153.45466614 -92.71118164]
[150.26199341 -78.05489349]
[147.06930542 -63.39860153]
[143.87661743 -48.74231339]
[145.64384460 -44.32965851]
[144.67520142 -38.76139450]
[140.41406250 -33.75869751]
[136.85260010 -19.18762970]
[133.29115295 -4.61656189]
[137.78535461 9.58383942]
[126.99272156 21.15231705]
[123.43125916 35.72338486]
[119.86980438 50.29445267]
[116.30834198 64.86551666]
[112.74688721 79.43658447]
[122.77996063 87.60640717]
[127.66735840 100.53537750]
[125.27265167 115.04510498]
[139.86589050 118.51457214]
[154.45913696 121.98403931]
[169.05238342 125.45350647]
[184.26795959 121.11796570]
[194.86048889 131.58924866]
[209.45372009 135.05871582]
[224.04696655 138.52818298]
[233.09420776 137.46890259]
[238.80187988 142.13456726]
[253.35018921 145.78788757]
[268.31408691 146.82794189]
[283.22790527 145.22236633]
[298.14172363 143.61680603]
[313.05557251 142.01124573]
[322.77407837 129.54824829]
[338.46881104 127.69055939]
[350.82833862 137.54029846]
[352.51998901 153.25379944]
[342.54013062 165.50849915]
[326.80963135 167.03393555]
[314.66113281 156.92506409]
[299.74731445 158.53062439]
[284.83346558 160.13619995]
[269.91964722 161.74176025]
[268.78848267 169.15596008]
[265.39492798 191.39857483]
[279.15145874 197.37837219]
[292.90798950 203.35815430]
[306.66452026 209.33795166]
[320.49539185 215.14370728]
[334.39840698 220.77449036]
[348.30145264 226.40528870]
[362.20446777 232.03608704]
[376.10751343 237.66688538]
[391.38174438 232.75999451]
[404.66110229 241.76211548]
[405.75878906 257.76757812]
[393.83279419 268.49835205]
[378.03167725 265.72271729]
[370.47671509 251.56991577]
[356.57366943 245.93911743]
[342.67065430 240.30831909]
[328.76763916 234.67752075]
[314.86459351 229.04672241]
[310.21624756 230.04040527]
[304.89273071 228.14193726]
[300.68472290 223.09448242]
[286.92819214 217.11468506]
[273.17166138 211.13490295]
[259.41513062 205.15510559]
[246.28675842 189.43443298]
[243.67187500 172.74050903]
[249.69688416 160.33619690]
[235.14857483 156.68289185]
[220.57749939 153.12142944]
[205.98425293 149.65196228]
[191.39102173 146.18249512]
[177.21925354 150.76618958]
[165.58291626 140.04675293]
[150.98966980 136.57728577]
[136.39642334 133.10781860]
[121.80318451 129.63835144]
[108.16227722 135.87739563]
[101.24304199 149.18620300]
[94.32380676 162.49499512]
[87.57303619 175.89004517]
[80.99179840 189.36918640]
[74.41056061 202.84832764]
[67.82933044 216.32746887]
[61.24808884 229.80661011]
[54.66685486 243.28575134]
[48.08561707 256.76489258]
[41.50437927 270.24404907]
[34.92314529 283.72320557]
[28.34190750 297.20233154]
[41.49167252 289.98544312]
[56.48973846 290.22637939]
[69.40088654 297.86196899]
[76.83746338 310.88876343]
[76.84825134 325.88876343]
[69.43041992 338.92623901]
[56.53026581 346.58041382]
[41.53256607 346.84292603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 44]
[3 43]
[6 40]
[7 39]
[8 38]
[9 37]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[45 240]
[46 239]
[47 238]
[48 237]
[49 236]
[50 235]
[51 234]
[52 233]
[53 232]
[54 231]
[57 230]
[58 229]
[59 228]
[61 104]
[62 103]
[63 102]
[64 101]
[65 100]
[66 98]
[67 97]
[68 96]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[106 162]
[107 161]
[108 160]
[109 159]
[110 158]
[112 156]
[113 155]
[114 154]
[115 151]
[116 150]
[117 149]
[118 148]
[119 147]
[120 146]
[121 128]
[122 127]
[133 144]
[134 143]
[135 142]
[136 141]
[165 227]
[166 226]
[167 225]
[168 224]
[170 222]
[171 221]
[172 220]
[174 219]
[175 218]
[176 189]
[177 188]
[178 187]
[179 186]
[191 215]
[192 214]
[193 213]
[194 212]
[195 209]
[196 208]
[197 207]
[198 206]
[199 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
