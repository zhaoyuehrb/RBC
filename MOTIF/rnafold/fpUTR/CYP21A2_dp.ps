%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:47:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYP21A2)
} def

/sequence { (\
CUGAAGGUGGGGUCAAGGGAGGCCCCAAAACAGUCUACACAGCAGGAGGGAUGGCUGGGGCUCUUGAGCUAUAAGUGGCACCUCAGGGCCCUGACGGGCGUCUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.019117730 ubox
1 33 0.916462966 ubox
1 42 0.151220460 ubox
1 45 0.047753823 ubox
1 46 0.004631035 ubox
1 86 0.006227833 ubox
2 6 0.017471176 ubox
2 32 0.930767554 ubox
2 37 0.020799886 ubox
2 39 0.090476915 ubox
2 41 0.153879948 ubox
2 44 0.052481817 ubox
2 45 0.004304249 ubox
2 85 0.006272901 ubox
3 31 0.930388371 ubox
3 35 0.176672804 ubox
3 36 0.007047184 ubox
3 38 0.102106011 ubox
3 40 0.153319164 ubox
3 43 0.053005326 ubox
3 84 0.006292205 ubox
4 34 0.176645280 ubox
4 83 0.004442287 ubox
5 36 0.175863003 ubox
5 83 0.004587546 ubox
6 35 0.178403465 ubox
6 36 0.045006204 ubox
6 82 0.006397892 ubox
6 107 0.032559297 ubox
7 31 0.145791928 ubox
7 34 0.173916344 ubox
7 35 0.046875385 ubox
7 38 0.033598409 ubox
7 40 0.012531422 ubox
7 43 0.007426603 ubox
7 81 0.006398333 ubox
7 106 0.032790678 ubox
8 27 0.979899359 ubox
8 30 0.106701940 ubox
8 32 0.011896100 ubox
8 33 0.017535981 ubox
8 37 0.026487556 ubox
8 39 0.009831556 ubox
8 42 0.005951002 ubox
8 80 0.006352565 ubox
8 105 0.028396948 ubox
9 26 0.999781585 ubox
9 31 0.005961786 ubox
9 36 0.014343950 ubox
9 38 0.005005447 ubox
9 79 0.006259167 ubox
10 25 0.999870650 ubox
10 35 0.013917402 ubox
10 70 0.006160507 ubox
11 24 0.999873869 ubox
11 34 0.012521797 ubox
11 69 0.006224463 ubox
12 23 0.999871693 ubox
12 31 0.009875173 ubox
13 20 0.014763594 ubox
13 22 0.999357583 ubox
13 30 0.009672007 ubox
13 67 0.006518460 ubox
14 18 0.004783105 ubox
14 19 0.022166753 ubox
14 21 0.995068909 ubox
14 66 0.006576619 ubox
15 65 0.006535055 ubox
16 64 0.006416545 ubox
17 26 0.013477219 ubox
17 63 0.006367942 ubox
18 25 0.013496542 ubox
18 62 0.003590381 ubox
19 24 0.013451398 ubox
21 62 0.005285479 ubox
22 61 0.006346409 ubox
23 60 0.006651038 ubox
24 59 0.006651431 ubox
25 58 0.006651383 ubox
26 57 0.006626443 ubox
27 56 0.006339110 ubox
31 53 0.005248037 ubox
32 52 0.004796920 ubox
33 40 0.070494677 ubox
33 43 0.082854775 ubox
33 52 0.003769763 ubox
34 39 0.065504082 ubox
34 42 0.063622124 ubox
34 46 0.036967044 ubox
34 47 0.132831271 ubox
34 51 0.004693857 ubox
35 42 0.123566853 ubox
35 45 0.052160911 ubox
35 46 0.141941767 ubox
35 48 0.003669350 ubox
35 49 0.003476521 ubox
35 50 0.004752272 ubox
36 41 0.117446589 ubox
36 44 0.052823499 ubox
36 45 0.140957334 ubox
36 47 0.004013698 ubox
36 48 0.003396314 ubox
36 49 0.004642513 ubox
40 57 0.006617275 ubox
41 56 0.006757311 ubox
42 55 0.006785454 ubox
42 106 0.096968739 ubox
43 54 0.006476320 ubox
43 105 0.097147556 ubox
45 104 0.010479602 ubox
45 107 0.960824758 ubox
46 103 0.005424917 ubox
46 104 0.012170378 ubox
46 106 0.968206469 ubox
47 103 0.010703615 ubox
48 102 0.007937240 ubox
48 104 0.988046219 ubox
48 107 0.005144009 ubox
49 101 0.005085949 ubox
49 103 0.998827247 ubox
49 104 0.019300376 ubox
49 106 0.005027384 ubox
50 102 0.999886000 ubox
51 101 0.999760271 ubox
52 100 0.998853205 ubox
53 95 0.003187118 ubox
53 99 0.997756856 ubox
54 99 0.057032116 ubox
55 97 0.996415748 ubox
55 98 0.076352831 ubox
56 93 0.132498960 ubox
56 96 0.983513228 ubox
56 97 0.073819278 ubox
57 91 0.010116384 ubox
57 92 0.628661019 ubox
57 95 0.772116795 ubox
58 90 0.008859784 ubox
58 91 0.998766377 ubox
58 92 0.032151659 ubox
59 89 0.006660181 ubox
59 90 0.999409233 ubox
59 91 0.031817918 ubox
60 89 0.999530444 ubox
60 90 0.028744663 ubox
61 88 0.996901361 ubox
62 87 0.750966522 ubox
62 88 0.077034915 ubox
63 86 0.747720672 ubox
63 87 0.659504812 ubox
64 85 0.539287023 ubox
64 86 0.662538800 ubox
65 80 0.022724589 ubox
65 85 0.838363407 ubox
66 79 0.021269768 ubox
66 84 0.984814894 ubox
67 83 0.978671673 ubox
68 76 0.037296233 ubox
68 79 0.859874095 ubox
68 82 0.506813946 ubox
69 75 0.062052901 ubox
69 78 0.964851596 ubox
70 74 0.055998658 ubox
70 77 0.953541805 ubox
71 76 0.812806365 ubox
75 81 0.053749641 ubox
75 82 0.003798971 ubox
76 80 0.048474896 ubox
88 99 0.006922811 ubox
89 98 0.006943732 ubox
90 97 0.006944643 ubox
91 96 0.006934275 ubox
97 107 0.006927628 ubox
98 106 0.007038896 ubox
99 105 0.007050391 ubox
100 104 0.006600970 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
45 107 0.9500000 lbox
46 106 0.9500000 lbox
48 104 0.9500000 lbox
49 103 0.9500000 lbox
50 102 0.9500000 lbox
51 101 0.9500000 lbox
52 100 0.9500000 lbox
53 99 0.9500000 lbox
55 97 0.9500000 lbox
56 96 0.9500000 lbox
57 95 0.9500000 lbox
58 91 0.9500000 lbox
59 90 0.9500000 lbox
60 89 0.9500000 lbox
61 88 0.9500000 lbox
63 87 0.9500000 lbox
64 86 0.9500000 lbox
65 85 0.9500000 lbox
66 84 0.9500000 lbox
67 83 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
71 76 0.9500000 lbox
showpage
end
%%EOF
