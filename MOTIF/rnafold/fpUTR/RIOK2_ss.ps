%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGCGCGAGCCAUCUGGCGCUGUAAAGCGCUUAGAGGCUGGAAUAACGACCUGCCUUACGCUUUGCGGCUGUCGUCGGAGAGGCAUCUGGGUUCGGACUGGGGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[103.65302277 115.73489380]
[99.87335205 130.25088501]
[104.74900818 145.90847778]
[93.42964172 157.77456665]
[77.55964661 153.64233398]
[73.46471405 137.76268005]
[85.35736084 126.47122192]
[89.13703156 111.95522308]
[88.28840637 96.97924805]
[82.89307404 82.98316193]
[77.30022430 69.06482697]
[71.51097870 55.22703171]
[65.72174072 41.38923264]
[50.83679962 30.66480255]
[53.56922150 13.39345741]
[47.39070129 -0.27496961]
[41.21218491 -13.94339657]
[35.03366470 -27.61182404]
[28.85514641 -41.28025055]
[22.67662811 -54.94868088]
[15.73471260 -68.24566650]
[8.05163860 -81.12861633]
[0.36856499 -94.01156616]
[-7.31450891 -106.89450836]
[-14.99758244 -119.77745819]
[-22.68065643 -132.66041565]
[-30.36373138 -145.54336548]
[-38.04680634 -158.42630005]
[-45.72987747 -171.30924988]
[-53.41295242 -184.19219971]
[-61.09602737 -197.07514954]
[-70.72254181 -198.18350220]
[-78.59338379 -203.59388733]
[-82.94782257 -211.93801880]
[-82.88631439 -221.21075439]
[-78.55338287 -229.25149536]
[-85.11622620 -242.73959351]
[-91.67907715 -256.22772217]
[-98.24192047 -269.71582031]
[-104.80476379 -283.20391846]
[-117.80009460 -292.22790527]
[-116.41113281 -307.05758667]
[-122.97397614 -320.54571533]
[-138.27569580 -323.12191772]
[-149.11671448 -334.22381592]
[-151.32844543 -349.58245850]
[-144.06042480 -363.29214478]
[-130.10736084 -370.08120728]
[-114.83448792 -367.33914185]
[-104.11454010 -356.12030029]
[-102.06954956 -340.73858643]
[-109.48587036 -327.10855103]
[-102.92302704 -313.62045288]
[-90.39710999 -305.56121826]
[-91.31665802 -289.76675415]
[-84.75381470 -276.27865601]
[-78.19096375 -262.79055786]
[-71.62812042 -249.30244446]
[-65.06527710 -235.81433105]
[-46.97431564 -226.05249023]
[-48.21307755 -204.75822449]
[-40.53000259 -191.87527466]
[-32.84692764 -178.99232483]
[-25.16385651 -166.10937500]
[-17.48078156 -153.22642517]
[-9.79770756 -140.34349060]
[-2.11463380 -127.46053314]
[5.56843996 -114.57758331]
[13.25151443 -101.69463348]
[20.93458748 -88.81168365]
[28.61766243 -75.92874146]
[31.45863914 -75.15673065]
[34.13896942 -73.12892151]
[36.14556122 -69.91065979]
[37.00298309 -65.76407623]
[36.34505463 -61.12719727]
[42.52357483 -47.45877075]
[48.70209122 -33.79034424]
[54.88061142 -20.12191582]
[61.05913162 -6.45348835]
[67.23764801 7.21493912]
[78.51565552 11.83648586]
[83.73422241 23.29508400]
[79.55953979 35.59998703]
[85.34877777 49.43778610]
[91.13802338 63.27558517]
[96.70404053 68.30491638]
[96.88916016 77.58782959]
[102.28449249 91.58391571]
[113.50158691 84.15745544]
[129.99224854 86.45234680]
[144.99871826 100.74088287]
[154.08798218 112.67341614]
[163.17724609 124.60594940]
[172.26651001 136.53848267]
[181.35577393 148.47100830]
[197.04907227 150.34066772]
[206.75808716 162.81105042]
[204.72261047 178.48371887]
[192.15026855 188.06034851]
[176.50000000 185.85928345]
[167.05683899 173.18638611]
[169.42323303 157.56027222]
[160.33396912 145.62774658]
[151.24470520 133.69520569]
[142.15544128 121.76268005]
[133.06617737 109.83014679]
[125.71289062 111.30633545]
[128.66502380 126.01296234]
[113.95834351 128.96484375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 8]
[2 7]
[9 89]
[10 88]
[11 86]
[12 85]
[13 84]
[15 81]
[16 80]
[17 79]
[18 78]
[19 77]
[20 76]
[21 71]
[22 70]
[23 69]
[24 68]
[25 67]
[26 66]
[27 65]
[28 64]
[29 63]
[30 62]
[31 61]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[42 53]
[43 52]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
