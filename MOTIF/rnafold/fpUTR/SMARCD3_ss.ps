%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGGCCGAGCCGAGCGCCGAGCAGGGAGCGGGCGGCCGCGCUCCGGGCCGGGGUCCCGGGGGAGCAGAUCCUCAGAAUGGCCCUUGGUGCUGCAGGCGCGGUGGGCUCCGGGCCCAGGCACCGAGGGGGCACUGGAUGACUCUCCAGGUGCAGGACCCUGCCAUCU\
) } def
/len { sequence length } bind def

/coor [
[-41.97270966 255.79692078]
[-48.69546509 269.20602417]
[-55.29330063 282.67706299]
[-61.76564407 296.20883179]
[-68.23799133 309.74060059]
[-74.58428192 323.33193970]
[-80.80397797 336.98168945]
[-86.89653015 350.68862915]
[-92.86142731 364.45162964]
[-93.61229706 381.38894653]
[-110.09555054 385.35614014]
[-118.47071838 370.61529541]
[-106.62442017 358.48675537]
[-100.65953064 344.72375488]
[-100.88575745 337.30603027]
[-94.45371246 330.76199341]
[-88.23402405 317.11224365]
[-88.32233429 309.69161987]
[-81.76976013 303.26824951]
[-75.29741669 289.73648071]
[-68.82507324 276.20471191]
[-68.77542877 268.78372192]
[-62.10458755 262.48327637]
[-55.38182831 249.07415771]
[-57.09439468 247.26463318]
[-58.62177658 245.29629517]
[-59.94933319 243.18801880]
[-74.60787964 246.37031555]
[-89.26643372 249.55259705]
[-103.92498016 252.73487854]
[-118.58352661 255.91717529]
[-133.24208069 259.09945679]
[-147.87042236 262.41784668]
[-162.46728516 265.87207031]
[-176.48837280 275.40335083]
[-189.52859497 264.56872559]
[-182.72729492 249.03881836]
[-165.92149353 251.27520752]
[-151.32463074 247.82098389]
[-145.51615906 243.20196533]
[-136.42436218 244.44090271]
[-121.76581573 241.25862122]
[-107.10726929 238.07633972]
[-92.44871521 234.89404297]
[-77.79016876 231.71176147]
[-63.13162231 228.52947998]
[-49.92553711 207.72819519]
[-24.76832581 207.58468628]
[-14.01488304 197.12698364]
[-3.26143956 186.66929626]
[-0.64794880 179.72355652]
[7.79043245 176.11946106]
[18.73640823 165.86344910]
[29.68238258 155.60745239]
[40.62835693 145.35144043]
[51.57433319 135.09544373]
[62.52030945 124.83943939]
[73.46628571 114.58343506]
[66.42903900 100.65641785]
[67.01252747 83.51444244]
[76.51350403 67.40215302]
[67.87815857 55.13712692]
[59.24282074 42.87210083]
[50.60747910 30.60707283]
[41.97213745 18.34204674]
[26.47531319 14.19138241]
[20.19063950 -0.56945956]
[27.93918037 -14.61722374]
[43.77691650 -17.17566681]
[55.55449677 -6.28217173]
[54.23716354 9.70670509]
[62.87250519 21.97173119]
[71.50784302 34.23675919]
[80.14318848 46.50178528]
[88.77852631 58.76681137]
[96.24615479 59.46290588]
[88.02250671 46.91812134]
[92.70291138 32.66702271]
[106.76300049 27.44075012]
[119.61546326 35.17471313]
[121.58234406 50.04520035]
[111.18141174 60.85509872]
[118.64904022 61.55119324]
[129.40248108 51.09349442]
[140.15592957 40.63579559]
[150.90936279 30.17809868]
[161.66281128 19.72039986]
[172.41625977 9.26270008]
[183.16969299 -1.19499815]
[193.92314148 -11.65269661]
[204.67657471 -22.11039543]
[215.43002319 -32.56809235]
[226.18347168 -43.02579117]
[224.82188416 -56.45013428]
[231.35665894 -68.03217316]
[243.19911194 -73.64098358]
[255.91629028 -71.42561340]
[266.86227417 -81.68161774]
[277.80822754 -91.93762207]
[282.58840942 -107.01941681]
[297.16616821 -110.07532501]
[308.11212158 -120.33132935]
[319.05810547 -130.58732605]
[319.32159424 -146.38941956]
[330.73959351 -157.31668091]
[346.53799438 -156.88613892]
[357.34393311 -145.35325623]
[356.74639893 -129.56027222]
[345.09988403 -118.87687683]
[329.31411743 -119.64135742]
[318.36813354 -109.38535309]
[307.42214966 -99.12934875]
[303.42492676 -84.78113556]
[288.06423950 -80.99164581]
[277.11825562 -70.73564148]
[266.17230225 -60.47963333]
[266.35586548 -43.68106079]
[254.10577393 -31.69748497]
[236.64115906 -32.27235031]
[225.88772583 -21.81465149]
[215.13427734 -11.35695267]
[204.38084412 -0.89925367]
[193.62739563 9.55844498]
[182.87394714 20.01614380]
[172.12051392 30.47384262]
[161.36706543 40.93154144]
[150.61361694 51.38924026]
[139.86018372 61.84693909]
[129.10673523 72.30463409]
[134.36329651 92.24533844]
[128.77195740 109.42810822]
[141.42491150 117.48433685]
[154.07786560 125.54056549]
[166.73080444 133.59678650]
[179.45809937 141.53506470]
[192.25860596 149.35470581]
[205.05912781 157.17434692]
[217.85964966 164.99398804]
[233.16131592 161.03996277]
[246.73454285 169.13583374]
[250.52656555 184.47846985]
[242.28764343 197.96533203]
[226.90577698 201.59492493]
[213.50677490 193.21388245]
[210.04000854 177.79450989]
[197.23948669 169.97486877]
[184.43896484 162.15522766]
[171.63845825 154.33558655]
[164.26127625 153.52879333]
[158.67457581 146.24974060]
[146.02163696 138.19351196]
[133.36868286 130.13728333]
[120.71572876 122.08106232]
[102.81011963 130.14660645]
[83.72229004 125.52941132]
[72.77631378 135.78541565]
[61.83033752 146.04141235]
[50.88436127 156.29742432]
[39.93838882 166.55342102]
[28.99241257 176.80943298]
[18.04643631 187.06542969]
[7.19625902 197.42272949]
[-3.55718422 207.88043213]
[-14.31062698 218.33813477]
[-11.60707378 227.68731689]
[-12.46444035 237.31507874]
[-16.71864510 245.92039490]
[-23.74986458 252.35791016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 21]
[4 20]
[5 19]
[6 17]
[7 16]
[8 14]
[9 13]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 39]
[34 38]
[48 164]
[49 163]
[50 162]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[97 116]
[98 115]
[99 114]
[101 112]
[102 111]
[103 110]
[131 153]
[132 152]
[133 151]
[134 150]
[135 148]
[136 147]
[137 146]
[138 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
