%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RGS20)
} def

/sequence { (\
CAUUAACCAAACAAAGAGAAGCAGAGUGGAUCCUGUGCUAAUAUUGGGAAAACCAGGCAACAGGACUCAUUUGGGGCCUUUAUUGUGAAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 85 0.008787531 ubox
1 87 0.038303190 ubox
2 84 0.008688172 ubox
2 86 0.033285252 ubox
3 10 0.039368223 ubox
3 11 0.010483592 ubox
3 14 0.006082443 ubox
3 85 0.026163474 ubox
3 88 0.036594378 ubox
3 89 0.020316737 ubox
3 90 0.031832039 ubox
3 91 0.035516965 ubox
4 9 0.040117742 ubox
4 10 0.023692764 ubox
4 13 0.006958572 ubox
4 82 0.008825940 ubox
4 85 0.004985870 ubox
4 87 0.039162185 ubox
4 88 0.020118165 ubox
4 89 0.034289877 ubox
4 90 0.039427224 ubox
5 81 0.008560456 ubox
5 84 0.006513652 ubox
5 86 0.024875662 ubox
6 80 0.006710916 ubox
6 83 0.006079075 ubox
6 86 0.030650486 ubox
7 74 0.014288505 ubox
7 75 0.005664315 ubox
7 76 0.009025471 ubox
7 85 0.028561456 ubox
8 73 0.014327959 ubox
8 74 0.005620764 ubox
8 75 0.009046360 ubox
8 85 0.064305751 ubox
8 87 0.211672879 ubox
9 72 0.013270510 ubox
9 84 0.064955688 ubox
9 86 0.156726920 ubox
10 71 0.011221880 ubox
10 83 0.059554321 ubox
10 84 0.047342020 ubox
11 70 0.006877489 ubox
11 83 0.049290629 ubox
11 86 0.934379981 ubox
12 73 0.005234863 ubox
12 85 0.972229217 ubox
12 87 0.100978493 ubox
13 72 0.005106069 ubox
13 80 0.004551127 ubox
13 81 0.086779270 ubox
13 84 0.967879766 ubox
13 86 0.098935047 ubox
14 71 0.004860832 ubox
14 79 0.003600658 ubox
14 80 0.096935992 ubox
14 81 0.023938083 ubox
14 83 0.933227276 ubox
14 84 0.074954241 ubox
15 70 0.004406544 ubox
15 79 0.101625941 ubox
15 80 0.025333135 ubox
15 81 0.771932390 ubox
15 83 0.088725900 ubox
15 84 0.058492989 ubox
16 68 0.005214359 ubox
16 78 0.101626207 ubox
16 79 0.020055089 ubox
16 80 0.814664635 ubox
16 81 0.227753534 ubox
16 83 0.063156259 ubox
16 84 0.022812746 ubox
17 67 0.005220574 ubox
17 79 0.819942718 ubox
17 80 0.223417620 ubox
17 81 0.415079882 ubox
17 83 0.023813966 ubox
17 84 0.005040407 ubox
18 66 0.005206363 ubox
18 78 0.816609517 ubox
18 79 0.190909529 ubox
18 80 0.426437991 ubox
18 81 0.253440606 ubox
18 83 0.003461673 ubox
19 79 0.424607681 ubox
19 80 0.259127960 ubox
19 81 0.010310667 ubox
20 39 0.007473069 ubox
20 79 0.260678859 ubox
20 80 0.009746994 ubox
21 38 0.007754630 ubox
21 77 0.721725359 ubox
21 78 0.208453458 ubox
21 86 0.004271875 ubox
22 37 0.007756096 ubox
22 73 0.321733857 ubox
22 76 0.739116781 ubox
22 85 0.004488866 ubox
22 87 0.005666008 ubox
23 36 0.007744149 ubox
23 71 0.004563626 ubox
23 72 0.295922068 ubox
23 84 0.004449515 ubox
23 86 0.005672972 ubox
24 68 0.008416805 ubox
24 71 0.243219109 ubox
24 72 0.916107889 ubox
25 34 0.007715531 ubox
25 67 0.008496556 ubox
25 70 0.211915812 ubox
25 71 0.958782540 ubox
25 72 0.036433550 ubox
25 84 0.005512725 ubox
26 33 0.007697047 ubox
26 66 0.008525391 ubox
26 70 0.974306537 ubox
26 71 0.028921625 ubox
26 83 0.005561297 ubox
27 65 0.005504641 ubox
27 69 0.991508552 ubox
27 82 0.005557108 ubox
28 67 0.103945138 ubox
28 68 0.991868216 ubox
28 81 0.005447857 ubox
29 66 0.250337462 ubox
29 67 0.902731577 ubox
29 68 0.059584202 ubox
29 80 0.005269781 ubox
30 67 0.074304835 ubox
30 79 0.004910428 ubox
31 65 0.993134325 ubox
32 64 0.999948858 ubox
33 63 0.999957233 ubox
34 62 0.999705808 ubox
35 61 0.999650984 ubox
36 59 0.702229884 ubox
36 60 0.708113080 ubox
37 58 0.995468063 ubox
38 56 0.012833812 ubox
38 57 0.996066224 ubox
39 55 0.012888110 ubox
39 56 0.907376247 ubox
40 45 0.005375726 ubox
44 50 0.005340474 ubox
44 51 0.034235349 ubox
44 52 0.022518457 ubox
44 56 0.409429597 ubox
45 49 0.004817165 ubox
45 50 0.036310615 ubox
45 51 0.023854302 ubox
45 55 0.993290026 ubox
45 56 0.006442191 ubox
46 54 0.997341287 ubox
47 53 0.996951493 ubox
47 54 0.033750055 ubox
48 53 0.037162451 ubox
55 79 0.004597063 ubox
56 78 0.007159257 ubox
57 77 0.007377086 ubox
58 76 0.007378065 ubox
61 73 0.007370602 ubox
62 72 0.007294401 ubox
63 71 0.006926570 ubox
64 70 0.005091817 ubox
66 75 0.008042391 ubox
66 76 0.003676835 ubox
67 74 0.008058048 ubox
67 75 0.003703446 ubox
68 73 0.008032998 ubox
68 74 0.003726697 ubox
77 85 0.003246652 ubox
79 88 0.004804256 ubox
79 89 0.008613571 ubox
79 90 0.005476387 ubox
80 87 0.005076592 ubox
80 88 0.009780086 ubox
80 89 0.006188957 ubox
81 87 0.010021208 ubox
81 88 0.006205880 ubox
81 89 0.003266372 ubox
82 86 0.008506969 ubox
83 89 0.004005344 ubox
83 90 0.014575369 ubox
83 91 0.011318654 ubox
84 88 0.003843063 ubox
84 89 0.016488319 ubox
84 90 0.013511738 ubox
85 92 0.035662313 ubox
86 91 0.037067047 ubox
11 86 0.9500000 lbox
12 85 0.9500000 lbox
13 84 0.9500000 lbox
14 83 0.9500000 lbox
15 81 0.9500000 lbox
16 80 0.9500000 lbox
17 79 0.9500000 lbox
18 78 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
26 70 0.9500000 lbox
27 69 0.9500000 lbox
28 68 0.9500000 lbox
29 67 0.9500000 lbox
31 65 0.9500000 lbox
32 64 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
showpage
end
%%EOF
