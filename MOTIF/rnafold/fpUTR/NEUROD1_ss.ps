%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGAGGGGAGAACGGGGAGCGCACAGCCUGGACGCGUGCGCAGGCGUCAGGCGCAUAGACCUGCUAGCCCCUCAGCUAGCGGCCCCGCCCGCGCUUAGCAUCACUAACUGGGCUAUAUAACCUGAGCGCCCGCGCGGCCACGACACGAGGAAUUCGCCCACGCAGGAGGCGCGGCGUCCGGAGGCCCCAGGGUUAUGAGACUAUCACUGCUCAGGACCUACUAACAACAAAGGAAAUCGAAAC\
) } def
/len { sequence length } bind def

/coor [
[151.03285217 172.68026733]
[141.40722656 161.17604065]
[131.78158569 149.67181396]
[122.15596008 138.16758728]
[110.79791260 142.79084778]
[98.60614777 144.11019897]
[86.52200317 142.02374268]
[75.47850800 136.69261169]
[66.32833099 128.52842712]
[59.77797699 118.16152191]
[45.25682068 121.92131042]
[30.73566437 125.68109894]
[27.78431129 128.79112244]
[24.34631920 130.62985229]
[20.87644386 131.19958496]
[17.78278160 130.64857483]
[15.38361168 129.24360657]
[0.69066286 132.26309204]
[-14.00228596 135.28256226]
[-28.69523621 138.30204773]
[-43.38818359 141.32151794]
[-23.71949196 174.68511963]
[-41.39820480 222.42446899]
[-52.77957916 232.19506836]
[-64.16094971 241.96565247]
[-75.54232025 251.73623657]
[-86.92369080 261.50683594]
[-98.30506134 271.27740479]
[-102.76367188 279.22131348]
[-109.89305115 281.09857178]
[-121.39727783 290.72421265]
[-122.54704285 306.48660278]
[-134.56021118 316.75595093]
[-150.30958557 315.43960571]
[-160.45133972 303.31851196]
[-158.96855164 287.58395386]
[-146.74092102 277.57092285]
[-131.02290344 279.21997070]
[-119.51868439 269.59432983]
[-108.07565308 259.89602661]
[-96.69428253 250.12545776]
[-85.31291199 240.35485840]
[-73.93153381 230.58427429]
[-62.55016327 220.81369019]
[-51.16879272 211.04310608]
[-54.55678177 204.35194397]
[-61.33275604 190.96963501]
[-64.72074127 184.27848816]
[-79.33248138 187.66920471]
[-93.94422913 191.05993652]
[-108.55596924 194.45065308]
[-122.61836243 203.92089844]
[-135.61135864 193.02969360]
[-128.74261475 177.52947998]
[-111.94669342 179.83891296]
[-97.33494568 176.44818115]
[-82.72320557 173.05746460]
[-68.11146545 169.66674805]
[-67.68415833 162.17892456]
[-82.65979767 161.32432556]
[-97.63541412 160.46948242]
[-96.78034973 145.49386597]
[-81.80518341 146.34867859]
[-66.82955170 147.20329285]
[-66.40224457 139.71546936]
[-80.53339386 134.68449402]
[-94.66453552 129.65351868]
[-108.79568481 124.62254333]
[-122.92682648 119.59156036]
[-137.05796814 114.56058502]
[-151.18911743 109.52960968]
[-165.32026672 104.49862671]
[-179.48713684 111.50399780]
[-194.43119812 106.36096954]
[-201.28639221 92.12081909]
[-195.98565674 77.23197174]
[-181.67382812 70.52771759]
[-166.84185791 75.98557281]
[-160.28929138 90.36748505]
[-146.15814209 95.39846039]
[-132.02699280 100.42944336]
[-117.89585114 105.46041870]
[-103.76470184 110.49139404]
[-89.63356018 115.52237701]
[-75.50241852 120.55335236]
[-61.37126923 125.58432770]
[-46.40766144 126.62857056]
[-31.71471405 123.60909271]
[-17.02176476 120.58961487]
[-2.32881498 117.57013702]
[12.36413383 114.55065918]
[26.97587585 111.15994263]
[41.49703217 107.40015411]
[56.01818848 103.64036560]
[56.04617310 84.18698883]
[64.72578430 65.57083893]
[81.26236725 51.63169098]
[74.99973297 38.00159836]
[68.73709869 24.37150764]
[62.47446442 10.74141598]
[56.21183014 -2.88867569]
[49.94919205 -16.51876831]
[34.65978241 -18.57727051]
[22.92524338 -28.59246635]
[18.49002457 -43.36854172]
[22.76939011 -58.19050217]
[34.39780807 -68.32872009]
[49.66469574 -70.54811859]
[63.69844055 -64.14050293]
[72.02092743 -51.15052032]
[71.97647858 -35.72322083]
[63.57928467 -22.78140259]
[69.84191895 -9.15131092]
[76.10455322 4.47878122]
[82.36718750 18.10887337]
[88.62982178 31.73896408]
[94.89246368 45.36905670]
[102.26629639 46.73893738]
[103.30493164 31.77493858]
[99.54956818 17.25263786]
[109.78216553 6.28478336]
[124.52974701 9.02504253]
[130.13948059 22.93657684]
[121.41904449 35.14010239]
[117.01396179 49.47869873]
[124.38779449 50.84857941]
[135.12789917 40.37718582]
[145.86801147 29.90579224]
[150.34768677 14.73202705]
[164.86186218 11.38717270]
[175.60195923 0.91577953]
[186.34207153 -9.55561352]
[197.08218384 -20.02700615]
[207.82229614 -30.49839973]
[211.76913452 -38.70859528]
[218.76539612 -41.03334045]
[229.63728333 -51.36784363]
[240.50918579 -61.70234680]
[251.38107300 -72.03684998]
[251.94429016 -87.60350037]
[263.11715698 -97.92928314]
[277.95410156 -97.29640198]
[288.82598877 -107.63090515]
[293.64270020 -125.41552734]
[310.86624146 -128.83294678]
[321.60635376 -139.30433655]
[318.94781494 -156.02017212]
[326.70751953 -170.87513733]
[341.64657593 -178.09727478]
[357.78155518 -175.01432800]
[368.38815308 -185.62094116]
[378.99475098 -196.22753906]
[380.43261719 -212.20602417]
[393.90045166 -220.92367554]
[409.06686401 -215.69303894]
[414.29748535 -200.52662659]
[405.57983398 -187.05880737]
[389.60134888 -185.62094116]
[378.99475098 -175.01432800]
[368.38815308 -164.40773010]
[371.69058228 -151.48573303]
[368.15426636 -138.51364136]
[358.59823608 -128.90199280]
[345.43850708 -125.23227692]
[332.07772827 -128.56423950]
[321.33761597 -118.09284210]
[320.87573242 -106.02033234]
[312.03491211 -97.20924377]
[299.16049194 -96.75901794]
[288.28860474 -86.42451477]
[288.16918945 -71.57455444]
[277.29077148 -60.93902206]
[261.71557617 -61.16495895]
[250.84368896 -50.83045578]
[239.97178650 -40.49595261]
[229.09989929 -30.16144753]
[218.29368591 -19.75829124]
[207.55357361 -9.28689766]
[196.81346130 1.18449509]
[186.07334900 11.65588760]
[175.33325195 22.12728119]
[171.62178040 36.55206299]
[156.33940125 40.64590073]
[145.59930420 51.11729431]
[134.85919189 61.58868790]
[144.97460938 78.29946899]
[147.89935303 96.86914825]
[143.74258423 114.44800568]
[133.66018677 128.54196167]
[143.28581238 140.04618835]
[152.91145325 151.55041504]
[162.53707886 163.05464172]
[172.13307190 166.68096924]
[176.01296997 174.92309570]
[188.64109802 183.01817322]
[201.26922607 191.11325073]
[213.89736938 199.20832825]
[226.52549744 207.30340576]
[242.31913757 208.23712158]
[248.85830688 221.61950684]
[261.48645020 229.71458435]
[274.11456299 237.80966187]
[286.74270630 245.90473938]
[300.34909058 238.77998352]
[315.69427490 239.42900085]
[328.65045166 247.67718506]
[335.73251343 261.30584717]
[335.03540039 276.64889526]
[326.74664307 289.57916260]
[313.09588623 296.61846924]
[297.75506592 295.87329102]
[284.85083008 287.54403687]
[277.85437012 273.87127686]
[278.64764404 258.53286743]
[266.01950073 250.43778992]
[253.39137268 242.34272766]
[240.76322937 234.24765015]
[225.87284851 233.89294434]
[218.43041992 219.93153381]
[205.80229187 211.83645630]
[193.17416382 203.74137878]
[180.54602051 195.64631653]
[167.91789246 187.55123901]
[175.92007446 200.23843384]
[180.84115601 214.40823364]
[182.42543030 229.32432556]
[180.59060669 244.21168518]
[175.43199158 258.29675293]
[167.21763611 270.84762573]
[156.37437439 281.21215820]
[143.46563721 288.85180664]
[129.16217041 293.36962891]
[114.20718384 294.53085327]
[99.37776184 292.27514648]
[85.44445038 286.71969604]
[73.13124084 278.15319824]
[63.07793808 267.02075195]
[55.80692291 253.90084839]
[51.69599915 239.47515869]
[50.95877457 224.49328613]
[53.63356018 209.73370361]
[59.58136749 195.96331787]
[68.49314117 183.89764404]
[79.90583038 174.16365051]
[93.22640228 167.26712036]
[107.76272583 163.56637573]
[122.75946045 163.25373840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 189]
[10 94]
[11 93]
[12 92]
[17 91]
[18 90]
[19 89]
[20 88]
[21 87]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[30 39]
[31 38]
[48 58]
[49 57]
[50 56]
[51 55]
[65 86]
[66 85]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[97 117]
[98 116]
[99 115]
[100 114]
[101 113]
[102 112]
[126 185]
[127 184]
[128 183]
[130 181]
[131 180]
[132 179]
[133 178]
[134 177]
[136 176]
[137 175]
[138 174]
[139 173]
[142 170]
[143 169]
[145 166]
[146 165]
[150 160]
[151 159]
[152 158]
[194 223]
[195 222]
[196 221]
[197 220]
[198 219]
[200 217]
[201 216]
[202 215]
[203 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
