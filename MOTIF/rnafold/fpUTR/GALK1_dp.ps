%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GALK1)
} def

/sequence { (\
CCCGAGCAUCCCGCGCCGACGGGGCUGUGCCGGAGCAGCUGUGCAGAGCUGCAGGCGCGCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.041980386 ubox
1 23 0.752077959 ubox
1 24 0.014336617 ubox
1 33 0.013575581 ubox
2 21 0.041862190 ubox
2 22 0.756961778 ubox
2 23 0.016267390 ubox
2 32 0.011554230 ubox
2 33 0.217173764 ubox
3 13 0.011346076 ubox
3 15 0.003524022 ubox
3 18 0.094039846 ubox
3 21 0.756721340 ubox
3 22 0.015258705 ubox
3 27 0.007775224 ubox
3 32 0.217817276 ubox
3 59 0.011943296 ubox
3 61 0.093732186 ubox
4 10 0.031271888 ubox
4 12 0.012879748 ubox
4 14 0.003775376 ubox
4 17 0.104254573 ubox
4 20 0.752531151 ubox
4 26 0.011377002 ubox
4 31 0.217735800 ubox
4 58 0.006836344 ubox
4 60 0.093464765 ubox
4 63 0.077192822 ubox
5 9 0.027612307 ubox
5 26 0.327865293 ubox
5 62 0.074595231 ubox
6 14 0.195201423 ubox
6 16 0.730165551 ubox
6 25 0.346687951 ubox
6 28 0.065584235 ubox
6 30 0.209063007 ubox
6 56 0.004648932 ubox
6 58 0.022254583 ubox
6 60 0.110308487 ubox
6 62 0.068668308 ubox
7 13 0.195381705 ubox
7 15 0.730080241 ubox
7 24 0.341728770 ubox
7 27 0.066549207 ubox
7 29 0.209064174 ubox
7 55 0.004651656 ubox
7 57 0.022181854 ubox
7 59 0.109530296 ubox
7 61 0.073428981 ubox
8 26 0.069103068 ubox
8 28 0.208369724 ubox
8 62 0.026635517 ubox
9 19 0.054346019 ubox
9 23 0.021639811 ubox
9 24 0.180263643 ubox
9 27 0.185494958 ubox
9 34 0.007351463 ubox
9 61 0.027096368 ubox
10 18 0.054558344 ubox
10 22 0.022203494 ubox
10 23 0.584924840 ubox
10 24 0.112023956 ubox
10 33 0.007866349 ubox
11 21 0.019727959 ubox
11 22 0.587564372 ubox
11 23 0.113868682 ubox
11 24 0.076014910 ubox
11 32 0.007847165 ubox
12 18 0.018326738 ubox
12 21 0.587703764 ubox
12 22 0.113467729 ubox
12 23 0.076992097 ubox
12 27 0.011835200 ubox
12 29 0.005724228 ubox
12 59 0.160422749 ubox
12 61 0.086740712 ubox
13 17 0.017938292 ubox
13 20 0.578316631 ubox
13 25 0.103647571 ubox
13 26 0.012680374 ubox
13 28 0.007923232 ubox
13 30 0.005689823 ubox
13 58 0.168069017 ubox
13 60 0.088669058 ubox
13 62 0.005820531 ubox
14 21 0.132476199 ubox
14 24 0.103700845 ubox
14 27 0.008312252 ubox
14 29 0.005866873 ubox
14 57 0.168087607 ubox
14 59 0.088467443 ubox
14 61 0.006094013 ubox
15 20 0.129670342 ubox
15 25 0.113628226 ubox
15 56 0.168084842 ubox
15 58 0.012564416 ubox
15 60 0.004088479 ubox
16 22 0.086532110 ubox
16 23 0.060715188 ubox
16 24 0.113668020 ubox
16 55 0.168091784 ubox
16 57 0.011503224 ubox
16 59 0.003582680 ubox
17 21 0.085921169 ubox
17 22 0.061086423 ubox
17 23 0.113537507 ubox
17 54 0.168038936 ubox
17 57 0.004769048 ubox
18 56 0.006367119 ubox
18 63 0.015420753 ubox
19 28 0.004559172 ubox
19 62 0.016962412 ubox
20 27 0.004686230 ubox
20 32 0.046674339 ubox
20 51 0.097438584 ubox
20 61 0.017136584 ubox
21 26 0.003576101 ubox
21 31 0.046846943 ubox
21 42 0.003800723 ubox
21 50 0.061209934 ubox
21 60 0.015538738 ubox
21 63 0.076754867 ubox
22 30 0.046676740 ubox
22 31 0.011455540 ubox
22 49 0.046151804 ubox
22 50 0.017967963 ubox
22 62 0.078919861 ubox
22 63 0.006270443 ubox
23 30 0.011902563 ubox
23 31 0.028860656 ubox
23 40 0.007817905 ubox
23 49 0.014506580 ubox
23 50 0.141664964 ubox
23 62 0.008545726 ubox
23 63 0.076757806 ubox
24 30 0.028960636 ubox
24 39 0.008043588 ubox
24 49 0.151109291 ubox
24 58 0.008842225 ubox
24 60 0.786403557 ubox
24 62 0.303395957 ubox
25 29 0.028816212 ubox
25 38 0.008055568 ubox
25 46 0.040604151 ubox
25 48 0.153233978 ubox
25 57 0.008770069 ubox
25 59 0.769573966 ubox
25 61 0.316780834 ubox
26 37 0.008051664 ubox
26 45 0.040586457 ubox
26 47 0.152685058 ubox
26 59 0.405278052 ubox
26 61 0.018875329 ubox
27 36 0.008051275 ubox
27 44 0.040563813 ubox
27 58 0.958989068 ubox
27 60 0.037926725 ubox
28 35 0.007970040 ubox
28 43 0.040424995 ubox
28 45 0.153097568 ubox
28 57 0.959219288 ubox
28 59 0.037620794 ubox
28 61 0.008087191 ubox
29 42 0.039412498 ubox
29 44 0.153328312 ubox
29 56 0.960393457 ubox
29 58 0.036395036 ubox
29 60 0.014130812 ubox
30 41 0.029451231 ubox
30 43 0.153079621 ubox
30 55 0.960424271 ubox
30 57 0.033579468 ubox
30 59 0.014133995 ubox
31 41 0.155014758 ubox
31 43 0.008524486 ubox
31 54 0.959908221 ubox
31 57 0.019659544 ubox
32 40 0.157121078 ubox
32 42 0.011985815 ubox
32 56 0.023872458 ubox
33 39 0.156893229 ubox
34 40 0.013356262 ubox
34 50 0.003451766 ubox
34 62 0.003626255 ubox
35 39 0.013151675 ubox
35 42 0.004708538 ubox
35 49 0.003489294 ubox
35 52 0.984001422 ubox
35 58 0.028495033 ubox
35 60 0.033750650 ubox
36 41 0.004732606 ubox
36 48 0.003485759 ubox
36 51 0.986248927 ubox
36 57 0.028452573 ubox
36 59 0.033753011 ubox
37 50 0.986035294 ubox
38 49 0.986268055 ubox
38 56 0.042245347 ubox
38 58 0.006879639 ubox
38 60 0.003549796 ubox
39 48 0.986260138 ubox
39 54 0.012775561 ubox
39 55 0.042098417 ubox
39 57 0.006844786 ubox
39 59 0.003487329 ubox
40 45 0.004645372 ubox
40 47 0.980147564 ubox
40 53 0.013246665 ubox
40 54 0.038042690 ubox
41 52 0.013379318 ubox
41 58 0.003494169 ubox
41 60 0.003409350 ubox
42 51 0.013023196 ubox
42 53 0.038736647 ubox
42 57 0.003490218 ubox
42 59 0.003409513 ubox
43 49 0.011357919 ubox
43 50 0.004595382 ubox
43 52 0.042792705 ubox
43 56 0.003484385 ubox
43 58 0.003413597 ubox
44 48 0.011362193 ubox
44 51 0.042805047 ubox
44 55 0.003480546 ubox
44 57 0.003411091 ubox
45 50 0.038563762 ubox
48 56 0.003425462 ubox
49 55 0.003427325 ubox
51 58 0.003212750 ubox
52 57 0.003259606 ubox
54 63 0.153242991 ubox
55 62 0.159626153 ubox
56 61 0.159957530 ubox
1 23 0.9500000 lbox
2 22 0.9500000 lbox
3 21 0.9500000 lbox
4 20 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
27 58 0.9500000 lbox
28 57 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
31 54 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
showpage
end
%%EOF
