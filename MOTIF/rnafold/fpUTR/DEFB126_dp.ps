%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DEFB126)
} def

/sequence { (\
GAAGGACAAUAAAGAUCUGUGUUCAGAGUCAUACUGAAUAGAGACUUCUGGACUCUAUAGAACCCACUGCCUCCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 48 0.039167803 ubox
1 55 0.161056454 ubox
1 73 0.303241109 ubox
2 47 0.039166669 ubox
2 54 0.114035933 ubox
2 72 0.215091883 ubox
3 46 0.038962291 ubox
3 49 0.008085677 ubox
3 54 0.194356687 ubox
3 56 0.018521639 ubox
3 68 0.012530518 ubox
3 72 0.461422390 ubox
3 75 0.782202140 ubox
4 24 0.004609396 ubox
4 45 0.038842305 ubox
4 46 0.003332411 ubox
4 48 0.008743786 ubox
4 49 0.007798638 ubox
4 53 0.232332317 ubox
4 54 0.008799101 ubox
4 55 0.018930335 ubox
4 56 0.031517490 ubox
4 64 0.015943442 ubox
4 65 0.030346131 ubox
4 67 0.012798659 ubox
4 68 0.005750926 ubox
4 71 0.528761223 ubox
4 72 0.026315232 ubox
4 73 0.011694817 ubox
4 74 0.806583984 ubox
4 75 0.007668403 ubox
5 23 0.004645916 ubox
5 45 0.003905571 ubox
5 47 0.007308068 ubox
5 48 0.009549610 ubox
5 53 0.012149257 ubox
5 54 0.015621747 ubox
5 55 0.032715652 ubox
5 63 0.015979080 ubox
5 64 0.030299119 ubox
5 67 0.006089642 ubox
5 70 0.528732111 ubox
5 71 0.028998186 ubox
5 72 0.009035671 ubox
5 73 0.806562813 ubox
5 74 0.008107124 ubox
6 20 0.018561342 ubox
6 22 0.004823836 ubox
6 46 0.005177519 ubox
6 47 0.008793508 ubox
6 54 0.032117701 ubox
6 72 0.771899264 ubox
7 19 0.020554195 ubox
7 21 0.004976449 ubox
7 36 0.004973054 ubox
7 50 0.236051839 ubox
7 69 0.618641962 ubox
7 76 0.005172010 ubox
8 18 0.019576891 ubox
8 20 0.004018400 ubox
8 35 0.004873258 ubox
8 47 0.004406417 ubox
8 49 0.232772931 ubox
8 68 0.589091092 ubox
8 75 0.004862300 ubox
9 16 0.013873269 ubox
9 20 0.018167245 ubox
9 58 0.006464097 ubox
10 15 0.016367159 ubox
10 19 0.018773713 ubox
10 33 0.004009557 ubox
10 50 0.026605081 ubox
10 57 0.006607905 ubox
10 59 0.024578689 ubox
10 69 0.074522126 ubox
11 18 0.017855694 ubox
11 32 0.003978692 ubox
11 47 0.030843920 ubox
11 49 0.034438250 ubox
11 56 0.005928330 ubox
11 58 0.024509344 ubox
11 68 0.074997561 ubox
12 46 0.027179741 ubox
12 47 0.470830813 ubox
13 46 0.521691499 ubox
13 47 0.052165738 ubox
13 49 0.170147603 ubox
13 56 0.030245710 ubox
13 68 0.091645004 ubox
13 72 0.007124269 ubox
13 75 0.004209561 ubox
14 30 0.013520448 ubox
14 45 0.530352845 ubox
14 46 0.057118399 ubox
14 47 0.043256632 ubox
14 48 0.191112078 ubox
14 55 0.031052830 ubox
14 67 0.092794587 ubox
14 71 0.010711122 ubox
14 73 0.006056967 ubox
14 74 0.004178280 ubox
15 29 0.013190432 ubox
15 46 0.050044602 ubox
15 47 0.183828174 ubox
15 54 0.030930292 ubox
15 58 0.008817267 ubox
15 72 0.006116444 ubox
16 27 0.014689249 ubox
16 28 0.006879838 ubox
16 42 0.010506307 ubox
16 44 0.590515411 ubox
16 57 0.008567184 ubox
16 61 0.776882399 ubox
17 26 0.016771721 ubox
17 41 0.010668853 ubox
17 43 0.598683441 ubox
17 60 0.797390491 ubox
18 25 0.016778021 ubox
18 40 0.009892045 ubox
18 42 0.596469923 ubox
18 57 0.017919565 ubox
18 59 0.796814037 ubox
18 66 0.025261317 ubox
19 24 0.016743040 ubox
19 39 0.007878742 ubox
19 56 0.025558601 ubox
19 58 0.792168199 ubox
19 63 0.004542068 ubox
19 65 0.025827142 ubox
19 67 0.008214006 ubox
20 38 0.006394530 ubox
20 40 0.596071523 ubox
20 57 0.782211666 ubox
20 59 0.003306306 ubox
20 62 0.004502242 ubox
20 66 0.008016814 ubox
21 39 0.598531145 ubox
21 53 0.774345751 ubox
21 56 0.194571740 ubox
21 63 0.027509678 ubox
21 65 0.005934140 ubox
22 38 0.598541452 ubox
22 52 0.798181585 ubox
22 62 0.027937665 ubox
23 37 0.598743124 ubox
23 51 0.798398861 ubox
23 52 0.014672319 ubox
23 61 0.028075845 ubox
24 36 0.598940573 ubox
24 50 0.799179261 ubox
24 51 0.011122198 ubox
24 60 0.028060411 ubox
25 35 0.598102901 ubox
25 49 0.798963055 ubox
25 56 0.040929986 ubox
26 34 0.595899856 ubox
26 47 0.069311094 ubox
26 48 0.796126070 ubox
26 55 0.045166235 ubox
27 35 0.022226117 ubox
27 46 0.561884968 ubox
27 47 0.566332635 ubox
27 54 0.045167583 ubox
28 34 0.032520018 ubox
28 45 0.792940111 ubox
28 46 0.096690163 ubox
28 53 0.045174665 ubox
29 33 0.034573887 ubox
29 37 0.018640448 ubox
29 42 0.023689367 ubox
29 44 0.797582948 ubox
29 52 0.045119992 ubox
30 36 0.019580236 ubox
30 41 0.025329890 ubox
30 43 0.795551135 ubox
30 50 0.003714778 ubox
30 51 0.044961955 ubox
31 35 0.016695704 ubox
31 39 0.071879745 ubox
31 49 0.004635905 ubox
32 38 0.071592378 ubox
32 40 0.266604413 ubox
32 50 0.011480552 ubox
33 39 0.255420614 ubox
33 49 0.010825526 ubox
34 41 0.478077856 ubox
34 43 0.054941581 ubox
34 60 0.006994612 ubox
35 40 0.447788250 ubox
35 42 0.080270260 ubox
35 59 0.006842667 ubox
36 47 0.004681712 ubox
36 48 0.028892802 ubox
36 58 0.004583212 ubox
37 46 0.004938196 ubox
37 47 0.028727169 ubox
38 46 0.026292386 ubox
38 58 0.015575913 ubox
39 50 0.028428175 ubox
39 57 0.017234868 ubox
40 46 0.004859362 ubox
40 49 0.029134782 ubox
40 56 0.018996007 ubox
41 45 0.005534833 ubox
41 48 0.029379181 ubox
41 55 0.019338347 ubox
42 47 0.027478583 ubox
42 54 0.019335465 ubox
43 53 0.019284065 ubox
45 51 0.017843467 ubox
45 60 0.006250755 ubox
46 50 0.016103670 ubox
46 59 0.006197525 ubox
46 61 0.003488328 ubox
46 62 0.113445069 ubox
47 59 0.003813424 ubox
47 61 0.161819492 ubox
48 60 0.177048092 ubox
49 57 0.027421263 ubox
49 59 0.176573130 ubox
49 66 0.426370965 ubox
49 69 0.005067458 ubox
50 56 0.034156183 ubox
50 58 0.173193927 ubox
50 64 0.072394691 ubox
50 65 0.505965498 ubox
50 68 0.007927537 ubox
50 71 0.041270946 ubox
50 74 0.032431037 ubox
51 55 0.035195178 ubox
51 63 0.073337858 ubox
51 64 0.505740855 ubox
51 67 0.008448601 ubox
51 70 0.041292598 ubox
51 71 0.003361527 ubox
51 73 0.032502311 ubox
52 72 0.031447729 ubox
53 60 0.117162483 ubox
54 59 0.105725876 ubox
54 61 0.468593222 ubox
55 60 0.470085087 ubox
56 69 0.006664150 ubox
56 76 0.003680426 ubox
57 68 0.006144849 ubox
57 75 0.004456188 ubox
58 69 0.107479206 ubox
58 76 0.030803669 ubox
59 68 0.120583463 ubox
59 72 0.020573123 ubox
59 75 0.036975013 ubox
60 67 0.121445357 ubox
60 71 0.022685102 ubox
60 73 0.027121579 ubox
60 74 0.036841407 ubox
61 72 0.027059800 ubox
65 76 0.021246468 ubox
66 75 0.021053521 ubox
69 75 0.003818048 ubox
3 75 0.9500000 lbox
4 74 0.9500000 lbox
5 73 0.9500000 lbox
6 72 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
18 59 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
showpage
end
%%EOF
