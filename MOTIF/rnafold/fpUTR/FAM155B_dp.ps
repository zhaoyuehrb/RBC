%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM155B)
} def

/sequence { (\
UCUGGCCUCGCGCCUGCCUGUUCCCUCCAGCCCGGACCCCCCUGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 35 0.031963490 ubox
1 36 0.318251457 ubox
1 45 0.215075004 ubox
2 30 0.296919343 ubox
2 34 0.040559447 ubox
2 35 0.353245216 ubox
2 44 0.229030404 ubox
3 10 0.009072963 ubox
3 12 0.018058212 ubox
3 16 0.043648680 ubox
3 20 0.021344110 ubox
3 29 0.301763874 ubox
3 34 0.352828501 ubox
3 44 0.015442249 ubox
4 9 0.014881148 ubox
4 11 0.024660282 ubox
4 14 0.736162567 ubox
4 15 0.013570535 ubox
4 18 0.278573921 ubox
4 19 0.013014503 ubox
4 22 0.032037894 ubox
4 23 0.017118128 ubox
4 24 0.058061980 ubox
4 25 0.064379053 ubox
4 26 0.006812118 ubox
4 27 0.006766414 ubox
4 28 0.302444590 ubox
4 32 0.103725086 ubox
4 33 0.346216833 ubox
4 38 0.199999197 ubox
4 39 0.135706712 ubox
4 40 0.175590231 ubox
4 41 0.106883882 ubox
4 42 0.165877262 ubox
4 43 0.018845773 ubox
5 11 0.051174685 ubox
5 13 0.738007389 ubox
5 14 0.011823202 ubox
5 17 0.279162048 ubox
5 18 0.013098476 ubox
5 21 0.042711415 ubox
5 22 0.015079683 ubox
5 23 0.058245676 ubox
5 24 0.064269512 ubox
5 25 0.008323317 ubox
5 26 0.006688189 ubox
5 27 0.301662158 ubox
5 31 0.122664391 ubox
5 32 0.338727224 ubox
5 37 0.200772751 ubox
5 38 0.135903612 ubox
5 39 0.176131927 ubox
5 40 0.106688091 ubox
5 41 0.165373452 ubox
5 42 0.019509546 ubox
6 10 0.051280945 ubox
6 12 0.737210542 ubox
6 16 0.278441553 ubox
6 20 0.052298740 ubox
6 30 0.135943394 ubox
6 35 0.170293828 ubox
7 30 0.200442622 ubox
7 34 0.169338848 ubox
7 35 0.102544398 ubox
8 29 0.192913688 ubox
8 34 0.027611580 ubox
8 35 0.167948638 ubox
8 36 0.195204877 ubox
8 45 0.014042591 ubox
9 16 0.028625593 ubox
9 20 0.077316048 ubox
9 34 0.208519829 ubox
9 35 0.195862996 ubox
9 44 0.014725021 ubox
10 15 0.025495804 ubox
10 17 0.244739941 ubox
10 19 0.044563494 ubox
10 21 0.284846660 ubox
10 31 0.237571111 ubox
10 33 0.213251097 ubox
10 43 0.009606912 ubox
11 16 0.244995155 ubox
11 20 0.290370123 ubox
11 30 0.237116555 ubox
11 34 0.207345122 ubox
12 19 0.221344775 ubox
12 21 0.112786631 ubox
12 31 0.230567604 ubox
12 33 0.207430473 ubox
13 20 0.114668759 ubox
13 30 0.178135210 ubox
13 35 0.106274564 ubox
14 30 0.179661542 ubox
14 34 0.106216912 ubox
14 35 0.047481924 ubox
15 29 0.233764417 ubox
15 34 0.057345114 ubox
15 44 0.008345863 ubox
16 28 0.233120813 ubox
16 31 0.357447451 ubox
16 33 0.079894314 ubox
16 43 0.008087274 ubox
17 30 0.263447348 ubox
17 35 0.105587574 ubox
18 30 0.383844483 ubox
18 34 0.105610836 ubox
18 35 0.049836929 ubox
19 29 0.459475818 ubox
19 34 0.049359610 ubox
19 44 0.012246027 ubox
20 28 0.460045161 ubox
20 31 0.159437264 ubox
20 33 0.046506972 ubox
20 37 0.151984059 ubox
20 43 0.012059084 ubox
20 48 0.017512621 ubox
21 30 0.159641888 ubox
21 36 0.138085118 ubox
21 45 0.007892137 ubox
21 46 0.046862620 ubox
21 47 0.018544804 ubox
22 29 0.136616580 ubox
22 35 0.118007221 ubox
22 36 0.152256421 ubox
22 44 0.007307813 ubox
22 45 0.053897542 ubox
22 46 0.017596427 ubox
23 34 0.116895407 ubox
23 35 0.172798563 ubox
23 44 0.053692158 ubox
24 34 0.171426377 ubox
24 35 0.155734248 ubox
25 34 0.157602235 ubox
25 35 0.015058831 ubox
26 34 0.013414262 ubox
26 35 0.013569011 ubox
26 36 0.341389037 ubox
26 45 0.087722857 ubox
27 34 0.017654818 ubox
27 35 0.368715960 ubox
27 44 0.066233417 ubox
28 34 0.368623705 ubox
28 44 0.427792375 ubox
29 43 0.433533140 ubox
30 42 0.432078523 ubox
33 44 0.421353088 ubox
34 40 0.263613518 ubox
34 41 0.409741001 ubox
34 42 0.275025024 ubox
34 43 0.413674713 ubox
35 39 0.259619808 ubox
35 40 0.409146110 ubox
35 41 0.275480851 ubox
35 42 0.412910117 ubox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
6 12 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
