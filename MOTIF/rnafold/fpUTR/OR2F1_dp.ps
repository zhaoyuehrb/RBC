%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:36:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2F1)
} def

/sequence { (\
UUUUUCUGACUCCCUUCACAGAUUAAUAAUCCUUGAAUAUUUUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.051232029 ubox
1 22 0.014777489 ubox
1 26 0.255947040 ubox
1 29 0.020701633 ubox
1 36 0.006411673 ubox
1 37 0.007185676 ubox
2 8 0.057061745 ubox
2 9 0.066226776 ubox
2 21 0.016211862 ubox
2 22 0.019418648 ubox
2 25 0.307597423 ubox
2 26 0.052836870 ubox
2 28 0.023269424 ubox
2 29 0.007793165 ubox
2 35 0.006635680 ubox
2 36 0.008086929 ubox
2 37 0.013164434 ubox
3 8 0.070632406 ubox
3 9 0.027047134 ubox
3 20 0.016206736 ubox
3 21 0.020342602 ubox
3 22 0.074036387 ubox
3 25 0.058789702 ubox
3 26 0.031360893 ubox
3 28 0.007714947 ubox
3 29 0.013878409 ubox
3 35 0.007503508 ubox
3 36 0.014765780 ubox
3 37 0.006465014 ubox
4 8 0.026690534 ubox
4 20 0.018773884 ubox
4 21 0.079863642 ubox
4 22 0.018128613 ubox
4 25 0.032246531 ubox
4 26 0.012778010 ubox
4 28 0.015790526 ubox
4 29 0.004844905 ubox
4 35 0.014734481 ubox
4 36 0.006557723 ubox
4 37 0.025241973 ubox
5 20 0.078606558 ubox
5 21 0.011443497 ubox
5 22 0.440867830 ubox
5 25 0.006143640 ubox
5 28 0.003683390 ubox
5 35 0.004483815 ubox
5 36 0.028786210 ubox
6 21 0.456663261 ubox
6 35 0.029104224 ubox
7 18 0.131355526 ubox
7 20 0.453490652 ubox
7 25 0.025671973 ubox
7 39 0.021318606 ubox
7 44 0.086512385 ubox
8 16 0.010122232 ubox
8 17 0.149020531 ubox
8 19 0.449389815 ubox
8 24 0.027316956 ubox
8 31 0.011437852 ubox
8 34 0.003275431 ubox
8 38 0.023011062 ubox
8 41 0.025031491 ubox
8 42 0.035294616 ubox
8 43 0.109174054 ubox
9 15 0.024014547 ubox
9 16 0.144067387 ubox
9 23 0.027183346 ubox
9 30 0.010909869 ubox
9 33 0.003266636 ubox
9 40 0.026112878 ubox
9 41 0.036685498 ubox
9 42 0.106699439 ubox
10 21 0.024252379 ubox
11 20 0.024026960 ubox
11 22 0.029024355 ubox
11 36 0.006085911 ubox
12 21 0.030154056 ubox
12 35 0.006146061 ubox
14 21 0.021346948 ubox
15 20 0.019622350 ubox
15 22 0.004776834 ubox
15 26 0.004433558 ubox
15 36 0.021682445 ubox
15 37 0.748658889 ubox
16 21 0.004731964 ubox
16 22 0.013417771 ubox
16 25 0.004752720 ubox
16 35 0.009518071 ubox
16 36 0.859179388 ubox
17 21 0.013903999 ubox
17 35 0.870255584 ubox
18 34 0.861311759 ubox
19 35 0.042891822 ubox
20 33 0.145632473 ubox
20 34 0.039600504 ubox
20 42 0.013644529 ubox
20 43 0.008886063 ubox
21 31 0.865340216 ubox
21 32 0.121879635 ubox
21 33 0.017079308 ubox
21 40 0.003246856 ubox
21 41 0.016417450 ubox
21 42 0.010130311 ubox
21 43 0.008539668 ubox
22 30 0.868661436 ubox
22 33 0.003651872 ubox
22 38 0.015137736 ubox
22 40 0.017003402 ubox
22 41 0.009963294 ubox
22 42 0.008783141 ubox
23 29 0.857009441 ubox
23 36 0.097359521 ubox
23 37 0.015649522 ubox
23 39 0.016229330 ubox
24 28 0.713791161 ubox
24 35 0.105508761 ubox
24 36 0.013818656 ubox
24 39 0.009605938 ubox
24 44 0.020320977 ubox
25 34 0.106509701 ubox
25 38 0.009604564 ubox
25 41 0.095874477 ubox
25 42 0.010853969 ubox
25 43 0.022825998 ubox
26 33 0.094810169 ubox
26 38 0.013165627 ubox
26 40 0.114088704 ubox
26 41 0.011480224 ubox
26 42 0.021757571 ubox
27 35 0.022257916 ubox
27 37 0.013454388 ubox
27 39 0.117711541 ubox
27 44 0.026724996 ubox
28 34 0.025714290 ubox
28 38 0.115872584 ubox
28 41 0.028575346 ubox
28 42 0.012072629 ubox
28 43 0.030009269 ubox
29 33 0.020192782 ubox
29 38 0.029322441 ubox
29 40 0.032416765 ubox
29 41 0.013534405 ubox
29 42 0.029751211 ubox
30 36 0.120045001 ubox
30 37 0.029671438 ubox
30 39 0.032211083 ubox
31 35 0.121902564 ubox
34 44 0.052454368 ubox
35 41 0.012632006 ubox
35 42 0.022210023 ubox
35 43 0.064505931 ubox
36 40 0.011729939 ubox
36 41 0.022465322 ubox
36 42 0.064625311 ubox
36 43 0.047116430 ubox
37 41 0.049673670 ubox
37 42 0.049752699 ubox
38 44 0.022488782 ubox
39 43 0.022492261 ubox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
showpage
end
%%EOF
