%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VPS13C)
} def

/sequence { (\
CCGGAGGGGCUGUCAUUUGCAGCGCUGGUCGCAGCCCUCAGCUGCGCCGGGCGGUUCCGGCUCCUCCCUCUCCUUGUGCCUCAGCGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 66 0.003476886 ubox
3 67 0.990913414 ubox
3 68 0.082171811 ubox
3 70 0.006891928 ubox
3 71 0.048566456 ubox
3 72 0.013603906 ubox
3 73 0.066045162 ubox
3 88 0.003443412 ubox
3 91 0.003244091 ubox
4 66 0.994621026 ubox
4 67 0.058345056 ubox
4 70 0.053645955 ubox
4 72 0.066029271 ubox
5 65 0.996193944 ubox
5 69 0.053800097 ubox
5 71 0.065799731 ubox
6 26 0.003858438 ubox
6 64 0.996356167 ubox
6 67 0.005028124 ubox
6 68 0.053938831 ubox
6 69 0.004211337 ubox
6 70 0.065131029 ubox
7 25 0.017753586 ubox
7 26 0.006030767 ubox
7 63 0.996334959 ubox
7 64 0.003983778 ubox
7 65 0.003457360 ubox
7 66 0.006157654 ubox
7 67 0.053915937 ubox
7 68 0.037152977 ubox
7 69 0.049988766 ubox
8 25 0.007694229 ubox
8 62 0.995665903 ubox
8 63 0.004376334 ubox
8 64 0.004268831 ubox
8 65 0.006707003 ubox
8 66 0.053705092 ubox
8 67 0.037272120 ubox
8 68 0.049281672 ubox
9 20 0.003973520 ubox
9 23 0.052997880 ubox
9 61 0.996236753 ubox
9 63 0.004678430 ubox
9 64 0.032214851 ubox
9 65 0.018925402 ubox
9 66 0.035307081 ubox
9 67 0.042383380 ubox
10 19 0.004077755 ubox
10 22 0.054303578 ubox
10 60 0.996221437 ubox
11 21 0.055912026 ubox
11 53 0.003171004 ubox
11 59 0.994363666 ubox
12 18 0.003397806 ubox
12 20 0.058593859 ubox
12 23 0.003365836 ubox
12 52 0.004897280 ubox
12 58 0.984059147 ubox
12 61 0.062726118 ubox
13 19 0.056963134 ubox
13 22 0.004691617 ubox
13 51 0.005120452 ubox
13 54 0.032575987 ubox
13 60 0.062777292 ubox
14 50 0.005090806 ubox
14 53 0.033258030 ubox
14 59 0.064992250 ubox
15 55 0.349481431 ubox
16 22 0.004353287 ubox
16 54 0.334902477 ubox
17 21 0.005735652 ubox
17 53 0.298544369 ubox
17 54 0.325529208 ubox
18 46 0.005703326 ubox
18 53 0.351392599 ubox
18 59 0.009103993 ubox
19 45 0.023295688 ubox
19 52 0.362689264 ubox
19 55 0.820948509 ubox
19 58 0.017618889 ubox
20 44 0.023322547 ubox
20 51 0.361914679 ubox
20 54 0.825972080 ubox
21 43 0.023317500 ubox
21 56 0.042330217 ubox
22 42 0.023321287 ubox
22 52 0.904738053 ubox
22 55 0.045920788 ubox
23 41 0.023313480 ubox
23 49 0.013626622 ubox
23 51 0.907182115 ubox
23 53 0.188730928 ubox
23 54 0.033724682 ubox
24 35 0.022571732 ubox
24 48 0.006508528 ubox
24 52 0.194653640 ubox
24 61 0.007553386 ubox
25 34 0.022580755 ubox
25 50 0.983848128 ubox
25 51 0.159900944 ubox
25 60 0.007561525 ubox
26 33 0.022573953 ubox
26 49 0.990985653 ubox
26 50 0.113036689 ubox
26 59 0.007540884 ubox
27 32 0.022556071 ubox
27 36 0.006909119 ubox
27 37 0.003635831 ubox
27 48 0.998946917 ubox
27 58 0.007452041 ubox
27 64 0.003927900 ubox
28 35 0.006998334 ubox
28 36 0.003518077 ubox
28 47 0.998963146 ubox
28 57 0.007443904 ubox
28 63 0.003900887 ubox
29 34 0.006719412 ubox
29 46 0.209177534 ubox
30 46 0.976659389 ubox
31 45 0.999629518 ubox
31 55 0.006599192 ubox
32 44 0.999672180 ubox
32 54 0.006632190 ubox
33 43 0.999437114 ubox
34 42 0.999662312 ubox
34 52 0.007087125 ubox
35 41 0.998222828 ubox
35 51 0.007110843 ubox
36 50 0.007110847 ubox
37 49 0.007103466 ubox
41 47 0.006500838 ubox
42 46 0.006456537 ubox
42 54 0.003255771 ubox
43 53 0.003255764 ubox
44 52 0.003259914 ubox
45 51 0.003259562 ubox
46 55 0.005388611 ubox
46 61 0.036608610 ubox
47 54 0.005983560 ubox
47 60 0.036990710 ubox
48 53 0.005980536 ubox
48 59 0.037055906 ubox
49 58 0.037157069 ubox
49 62 0.004460473 ubox
49 63 0.017412916 ubox
49 64 0.011779636 ubox
49 65 0.003322901 ubox
49 67 0.004359874 ubox
49 68 0.020286808 ubox
50 57 0.037122351 ubox
50 61 0.005567039 ubox
50 62 0.017950141 ubox
50 63 0.011774415 ubox
50 64 0.003985219 ubox
50 66 0.004386557 ubox
50 67 0.021580541 ubox
51 56 0.026247209 ubox
51 61 0.026345463 ubox
51 63 0.004198193 ubox
51 64 0.004432554 ubox
51 65 0.004336680 ubox
51 66 0.022246745 ubox
52 59 0.010516701 ubox
52 60 0.025824280 ubox
53 58 0.013943364 ubox
53 62 0.009559463 ubox
53 64 0.031899749 ubox
53 67 0.003537756 ubox
54 61 0.010664962 ubox
54 63 0.031926337 ubox
54 66 0.003562464 ubox
55 60 0.010179712 ubox
59 67 0.003336485 ubox
60 66 0.003344473 ubox
73 84 0.009668724 ubox
74 83 0.008365787 ubox
74 84 0.020938109 ubox
75 83 0.027021759 ubox
75 86 0.040683809 ubox
75 89 0.238338299 ubox
76 82 0.028265453 ubox
76 85 0.055294407 ubox
76 87 0.960296851 ubox
76 88 0.211722705 ubox
76 90 0.114760909 ubox
77 83 0.007320810 ubox
77 84 0.054514402 ubox
77 86 0.976693869 ubox
77 89 0.114803430 ubox
78 82 0.008489906 ubox
78 85 0.979885673 ubox
78 87 0.159383719 ubox
78 88 0.084407903 ubox
79 84 0.976753064 ubox
79 86 0.176798189 ubox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 65 0.9500000 lbox
6 64 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
12 58 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
25 50 0.9500000 lbox
26 49 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
30 46 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
76 87 0.9500000 lbox
77 86 0.9500000 lbox
78 85 0.9500000 lbox
79 84 0.9500000 lbox
showpage
end
%%EOF
