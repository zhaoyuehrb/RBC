%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCUCCCUCUCCCACCUCUGUCUGCCCGCUGCCUCUUGUCUAGCUGCUGUCAGGAGCUGACUGCCUCCAGGGCUGGAAUCCUGUGCUCCCUCUGUGCCCAGAGCCCCACG\
) } def
/len { sequence length } bind def

/coor [
[148.21629333 253.80027771]
[140.02854919 255.75332642]
[131.64828491 256.56982422]
[123.23255157 256.23373413]
[114.93915558 254.75074768]
[106.92372131 252.14793396]
[99.33673859 248.47348022]
[92.32075500 243.79565430]
[86.00769806 238.20159912]
[80.51638031 231.79566956]
[75.95028687 224.69755554]
[72.39558411 217.03994751]
[69.91956329 208.96614075]
[68.56928253 200.62731934]
[68.37074280 192.17971802]
[69.32833862 183.78170776]
[71.42481232 175.59082031]
[74.62149811 167.76078796]
[78.85910034 160.43869019]
[84.05876923 153.76214600]
[90.12353516 147.85675049]
[96.94017792 142.83372498]
[104.38128662 138.78779602]
[99.86517334 124.48377991]
[95.34906769 110.17977142]
[90.63455963 95.93991852]
[85.72257233 81.76697540]
[80.81057739 67.59403229]
[75.89859009 53.42108536]
[62.01309586 54.18788910]
[48.42283630 51.29957962]
[36.07222366 44.96374893]
[25.81772232 35.62731552]
[18.36847115 23.94501877]
[14.23723125 10.73349953]
[13.70509720 -3.08577943]
[16.80238724 -16.55081177]
[23.30699158 -28.72600555]
[32.76029205 -38.76720047]
[44.49950027 -45.98018646]
[40.38275909 -60.40420914]
[36.26601791 -74.82823181]
[30.82873535 -82.34742737]
[32.24131012 -89.71063995]
[28.52712250 -104.24352264]
[24.81293297 -118.77641296]
[21.09874344 -133.30929565]
[10.18529320 -144.76387024]
[14.53021431 -159.01065063]
[10.81602478 -173.54353333]
[1.03600502 -187.39227295]
[11.63615036 -200.62380981]
[27.28499413 -194.10076904]
[25.34891129 -177.25773621]
[29.06310081 -162.72483826]
[39.71088791 -152.30976868]
[35.63162994 -137.02348328]
[39.34582138 -122.49060059]
[43.06000900 -107.95771027]
[46.77419662 -93.42482758]
[50.69004059 -78.94496918]
[54.80678177 -64.52095032]
[58.92352295 -50.09692764]
[75.10095978 -49.80536270]
[90.43047333 -44.57107162]
[103.43746948 -34.88562012]
[112.86711121 -21.66932678]
[117.80537415 -6.18380404]
[117.76766205 10.08845806]
[112.74629974 25.58602524]
[103.21236420 38.81834030]
[90.07153320 48.50909424]
[94.98352051 62.68203735]
[99.89551544 76.85498047]
[104.80750275 91.02793121]
[110.28636932 97.10715485]
[109.65307617 105.66365814]
[114.16918945 119.96767426]
[118.68529510 134.27168274]
[142.93975830 134.66545105]
[165.14860535 144.34812927]
[181.90235901 161.80821228]
[190.63862610 184.34211731]
[190.03402710 208.47283936]
[180.20458984 230.48649597]
[191.31448364 240.56469727]
[202.42437744 250.64291382]
[215.75093079 246.82263184]
[229.11033630 250.09611511]
[239.00347900 259.49487305]
[242.89440918 272.46081543]
[239.85989380 285.54193115]
[250.68533325 295.92507935]
[261.51077271 306.30822754]
[272.33621216 316.69140625]
[283.16165161 327.07455444]
[299.20751953 330.46017456]
[304.04049683 346.13098145]
[292.68884277 357.96618652]
[276.83016968 353.79074097]
[272.77850342 337.89999390]
[261.95306396 327.51684570]
[251.12762451 317.13369751]
[240.30218506 306.75051880]
[229.47674561 296.36737061]
[213.49131775 299.80490112]
[198.43519592 293.01547241]
[190.26684570 278.47073364]
[192.34616089 261.75280762]
[181.23626709 251.67459106]
[170.12638855 241.59637451]
[163.40731812 246.65419006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 79]
[24 78]
[25 77]
[26 75]
[27 74]
[28 73]
[29 72]
[40 63]
[41 62]
[42 61]
[44 60]
[45 59]
[46 58]
[47 57]
[49 55]
[50 54]
[85 111]
[86 110]
[87 109]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
