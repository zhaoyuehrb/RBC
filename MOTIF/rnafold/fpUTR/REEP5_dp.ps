%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (REEP5)
} def

/sequence { (\
GCGCGGCGGCCGGGCGGGGCGAGCGGAGGCGAGUGGAGGACGCGUAGACGCGCCGCGGUCCCCGCCUGCCGCUGCUCCGCCGCAGUCGCCGCUCCAGUCUAUCCGGCACUAGGAACAGCCCCGAGCGGCGAGACGGUCCCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 143 0.432504678 ubox
2 142 0.433882385 ubox
3 75 0.007632620 ubox
3 92 0.005123375 ubox
3 141 0.433565551 ubox
3 143 0.898443603 ubox
4 12 0.003432938 ubox
4 74 0.007667410 ubox
4 91 0.005134424 ubox
4 142 0.900242063 ubox
5 11 0.003471161 ubox
5 73 0.007664634 ubox
5 90 0.005136662 ubox
5 139 0.014619413 ubox
5 140 0.435164793 ubox
5 141 0.899565544 ubox
5 144 0.030444429 ubox
6 10 0.003415289 ubox
6 72 0.007671907 ubox
6 89 0.005136870 ubox
6 138 0.013851431 ubox
6 139 0.436812337 ubox
6 140 0.898285994 ubox
6 143 0.030667522 ubox
7 71 0.007672413 ubox
7 88 0.005136879 ubox
7 142 0.030664594 ubox
8 70 0.007672439 ubox
8 87 0.005137544 ubox
8 138 0.935880566 ubox
8 139 0.341062793 ubox
8 141 0.029530203 ubox
9 69 0.007672172 ubox
9 86 0.005133761 ubox
9 137 0.939932275 ubox
9 138 0.338966740 ubox
9 140 0.027778756 ubox
10 68 0.005476700 ubox
10 85 0.005130836 ubox
10 136 0.999911722 ubox
11 68 0.005370135 ubox
11 135 0.999887430 ubox
12 67 0.007590996 ubox
12 81 0.008673684 ubox
12 134 0.989835760 ubox
13 66 0.007670723 ubox
13 80 0.006442108 ubox
13 81 0.998695745 ubox
13 87 0.004284506 ubox
13 144 0.004912155 ubox
14 65 0.007674222 ubox
14 80 0.999601970 ubox
14 83 0.023968846 ubox
14 86 0.005158453 ubox
14 143 0.004972880 ubox
15 64 0.007676966 ubox
15 79 0.999613061 ubox
15 82 0.023979277 ubox
15 85 0.005609087 ubox
15 142 0.004979638 ubox
16 63 0.007662189 ubox
16 78 0.999608500 ubox
16 81 0.021842500 ubox
16 141 0.005045532 ubox
17 62 0.007647526 ubox
17 77 0.999583545 ubox
17 80 0.020973358 ubox
17 81 0.004626960 ubox
17 140 0.005045452 ubox
18 61 0.007632621 ubox
18 76 0.998937430 ubox
18 78 0.010314082 ubox
18 80 0.006188050 ubox
18 81 0.012250183 ubox
18 139 0.005041831 ubox
19 60 0.007599966 ubox
19 75 0.999562853 ubox
19 77 0.008572014 ubox
19 80 0.013057023 ubox
19 138 0.004979267 ubox
20 58 0.004316706 ubox
20 74 0.998466866 ubox
20 79 0.013759830 ubox
21 73 0.490083451 ubox
21 77 0.023020838 ubox
21 78 0.009767520 ubox
22 73 0.865742622 ubox
22 76 0.027270161 ubox
23 56 0.007643375 ubox
23 72 0.999451248 ubox
23 75 0.027865402 ubox
24 55 0.007646177 ubox
24 71 0.999506739 ubox
24 74 0.027963046 ubox
25 54 0.007641127 ubox
25 70 0.997113622 ubox
25 73 0.029024624 ubox
26 53 0.007636899 ubox
26 69 0.995518268 ubox
26 72 0.029361889 ubox
27 67 0.989735133 ubox
28 66 0.993521627 ubox
28 67 0.062267947 ubox
28 70 0.075050245 ubox
29 51 0.007564557 ubox
29 65 0.993021487 ubox
29 66 0.067807665 ubox
29 69 0.082147111 ubox
30 50 0.007564516 ubox
30 64 0.992069267 ubox
30 68 0.087672333 ubox
31 49 0.007373091 ubox
31 60 0.228461667 ubox
31 63 0.910976548 ubox
31 67 0.084846864 ubox
32 59 0.274416845 ubox
32 67 0.006788428 ubox
33 43 0.010652905 ubox
33 56 0.047582899 ubox
33 59 0.035638753 ubox
33 65 0.117224044 ubox
33 66 0.005562133 ubox
34 42 0.010663302 ubox
34 55 0.047651334 ubox
34 57 0.285739968 ubox
34 58 0.044067177 ubox
34 64 0.124374538 ubox
35 41 0.010708693 ubox
35 54 0.046668115 ubox
35 56 0.285106890 ubox
35 60 0.023690274 ubox
35 61 0.856899372 ubox
35 62 0.144596375 ubox
35 63 0.336503672 ubox
36 53 0.046522494 ubox
36 59 0.016817044 ubox
36 60 0.857491180 ubox
36 61 0.139695313 ubox
36 62 0.368777647 ubox
37 59 0.852058126 ubox
38 54 0.880205982 ubox
38 60 0.131745958 ubox
38 61 0.375747373 ubox
38 62 0.009177641 ubox
39 53 0.880557768 ubox
39 59 0.073971840 ubox
39 60 0.377258118 ubox
39 61 0.007407325 ubox
40 59 0.375114304 ubox
41 52 0.886619865 ubox
41 55 0.145072247 ubox
41 57 0.263429177 ubox
41 58 0.319391193 ubox
42 51 0.887628668 ubox
42 53 0.290704881 ubox
42 54 0.104815082 ubox
42 56 0.326914564 ubox
43 50 0.887596301 ubox
43 52 0.309006692 ubox
43 55 0.327070711 ubox
43 57 0.093974986 ubox
44 49 0.864622050 ubox
44 51 0.309616591 ubox
44 53 0.125191423 ubox
44 54 0.297559326 ubox
44 56 0.094230231 ubox
45 50 0.297244357 ubox
45 52 0.171617749 ubox
45 55 0.091755097 ubox
47 60 0.007719229 ubox
48 59 0.007702842 ubox
49 55 0.008678979 ubox
49 57 0.013040049 ubox
49 58 0.006810147 ubox
50 54 0.010061286 ubox
50 56 0.013646987 ubox
51 55 0.013565169 ubox
51 57 0.003709264 ubox
52 56 0.004385791 ubox
53 58 0.005549990 ubox
55 65 0.003226236 ubox
56 64 0.003562962 ubox
57 63 0.013950618 ubox
58 62 0.014418733 ubox
79 137 0.008735622 ubox
80 136 0.009169763 ubox
81 135 0.009211943 ubox
82 87 0.005628873 ubox
82 134 0.040557434 ubox
82 137 0.003284854 ubox
83 136 0.003436177 ubox
85 134 0.038310213 ubox
86 131 0.933784050 ubox
86 133 0.034696371 ubox
87 130 0.998233278 ubox
87 132 0.029236107 ubox
88 129 0.999961286 ubox
89 128 0.999981910 ubox
90 127 0.999964982 ubox
91 126 0.999968051 ubox
92 125 0.999975681 ubox
93 114 0.016967825 ubox
93 124 0.999500239 ubox
94 113 0.021497253 ubox
94 123 0.996809130 ubox
95 105 0.003956673 ubox
95 112 0.023595585 ubox
96 110 0.064011786 ubox
97 107 0.142509248 ubox
97 109 0.066723902 ubox
97 116 0.050917733 ubox
97 119 0.746006107 ubox
98 106 0.142221370 ubox
98 108 0.066264084 ubox
98 113 0.019925441 ubox
98 114 0.009465208 ubox
98 115 0.050414538 ubox
98 118 0.679383857 ubox
99 105 0.141949889 ubox
99 106 0.065666595 ubox
99 112 0.024816035 ubox
99 113 0.010519987 ubox
99 118 0.579832931 ubox
100 105 0.061478794 ubox
100 111 0.025180229 ubox
100 112 0.009887739 ubox
100 117 0.565102412 ubox
101 110 0.025002898 ubox
102 113 0.012466229 ubox
102 114 0.962927951 ubox
102 124 0.004042456 ubox
103 112 0.013161379 ubox
103 113 0.982162684 ubox
103 123 0.004910261 ubox
104 112 0.982093498 ubox
104 123 0.018380701 ubox
105 120 0.087721195 ubox
105 121 0.008445589 ubox
105 122 0.032715093 ubox
106 119 0.088015624 ubox
106 120 0.007210170 ubox
106 121 0.032660751 ubox
107 118 0.088020517 ubox
109 118 0.034289028 ubox
110 117 0.033420472 ubox
112 120 0.070964870 ubox
112 121 0.105091555 ubox
112 122 0.089640086 ubox
113 119 0.071085479 ubox
113 120 0.105329276 ubox
113 121 0.089405317 ubox
125 143 0.003930134 ubox
126 142 0.003939782 ubox
127 141 0.003937751 ubox
128 140 0.003930282 ubox
130 138 0.003901981 ubox
131 137 0.003865809 ubox
3 143 0.9500000 lbox
4 142 0.9500000 lbox
5 141 0.9500000 lbox
6 140 0.9500000 lbox
8 138 0.9500000 lbox
9 137 0.9500000 lbox
10 136 0.9500000 lbox
11 135 0.9500000 lbox
12 134 0.9500000 lbox
13 81 0.9500000 lbox
14 80 0.9500000 lbox
15 79 0.9500000 lbox
16 78 0.9500000 lbox
17 77 0.9500000 lbox
18 76 0.9500000 lbox
19 75 0.9500000 lbox
20 74 0.9500000 lbox
22 73 0.9500000 lbox
23 72 0.9500000 lbox
24 71 0.9500000 lbox
25 70 0.9500000 lbox
26 69 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
30 64 0.9500000 lbox
31 63 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
37 59 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
44 49 0.9500000 lbox
86 131 0.9500000 lbox
87 130 0.9500000 lbox
88 129 0.9500000 lbox
89 128 0.9500000 lbox
90 127 0.9500000 lbox
91 126 0.9500000 lbox
92 125 0.9500000 lbox
93 124 0.9500000 lbox
94 123 0.9500000 lbox
97 119 0.9500000 lbox
98 118 0.9500000 lbox
102 114 0.9500000 lbox
103 113 0.9500000 lbox
104 112 0.9500000 lbox
showpage
end
%%EOF
