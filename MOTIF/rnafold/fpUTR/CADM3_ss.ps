%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGGUUUGCUCCGAGCGCCCUAUUUAAUCCCCGCGACUGCAGCAGCGCCGGCUCCCUCCCGGUCCCCACCUCGGCCCCGGGCUCCGAAGCGGCUCGGGGGCGCCCUUUCGGUCAACAUCGUAGUCCACCCCCUCCCCAUCCCCAGCCCCCGGGGAUUCAGGCUCGCCAGCGCCCAGCCAGGGAGCCGGCCGGGAAGCGCG\
) } def
/len { sequence length } bind def

/coor [
[45.11792755 415.87728882]
[38.81959152 429.49090576]
[32.52125549 443.10452271]
[26.22291946 456.71817017]
[19.92458344 470.33178711]
[13.62624645 483.94543457]
[18.83919716 498.62408447]
[12.25785732 512.34051514]
[-1.76812220 517.21978760]
[-8.06645870 530.83343506]
[-14.36479568 544.44708252]
[-20.66313171 558.06072998]
[-21.82630157 574.97473145]
[-38.40129471 578.53924561]
[-46.41495132 563.59881592]
[-34.27676392 551.76239014]
[-27.97842598 538.14874268]
[-21.68008995 524.53509521]
[-15.38175392 510.92147827]
[-20.74316788 497.07263184]
[-14.54969120 483.17672729]
[0.01261519 477.64709473]
[6.31095171 464.03344727]
[12.60928822 450.41983032]
[18.90762520 436.80621338]
[25.20596123 423.19256592]
[31.50429726 409.57894897]
[19.79502296 394.74694824]
[17.22656059 375.94287109]
[24.59245872 358.36325073]
[39.92926788 346.90884399]
[59.03911972 344.81842041]
[64.48320007 330.84121704]
[69.92728424 316.86404419]
[75.37136841 302.88684082]
[70.56034851 297.13323975]
[62.58953857 309.84014893]
[48.04145432 306.18594360]
[47.02140045 291.22067261]
[60.93830490 285.62600708]
[56.12728500 279.87237549]
[41.40707779 282.75604248]
[29.40853119 293.93490601]
[13.80943966 288.87521362]
[10.65680981 272.78195190]
[23.19379616 262.21047974]
[38.52342224 268.03582764]
[53.24363327 265.15216064]
[65.65896606 256.73437500]
[73.78632355 244.12698364]
[81.91368103 231.51960754]
[90.04103851 218.91221619]
[98.16839600 206.30484009]
[106.29575348 193.69746399]
[114.42311096 181.09007263]
[122.55046844 168.48269653]
[130.67782593 155.87532043]
[138.80519104 143.26792908]
[146.93254089 130.66055298]
[113.84145355 148.60452271]
[80.93907166 140.77900696]
[63.92330933 116.06206512]
[67.50769806 90.09803772]
[54.47880554 82.66515350]
[41.44990540 75.23226166]
[25.06269646 75.85789490]
[16.55746841 61.83672333]
[24.68367004 47.59253693]
[41.08176422 47.77853012]
[48.88279343 62.20336533]
[61.91169357 69.63625336]
[74.94058990 77.06914520]
[88.42769623 56.49910355]
[117.08652496 46.60726929]
[111.42679596 32.71599579]
[99.05438232 22.85526848]
[101.41758728 8.14933205]
[95.75785828 -5.74194098]
[90.09812164 -19.63321304]
[84.43839264 -33.52448654]
[78.77866364 -47.41576004]
[73.11893463 -61.30702972]
[67.45920563 -75.19830322]
[61.79947281 -89.08957672]
[56.13974380 -102.98085022]
[41.19904327 -107.59707642]
[32.76454163 -120.76496124]
[34.81875229 -136.26702881]
[46.39173508 -146.78369141]
[62.01908875 -147.34927368]
[74.32204437 -137.69676208]
[77.49153900 -122.38374329]
[70.03101349 -108.64057922]
[75.69074249 -94.74930573]
[81.35047913 -80.85803223]
[87.01020813 -66.96675873]
[92.66993713 -53.07548904]
[98.32966614 -39.18421555]
[103.98939514 -25.29294395]
[109.64912415 -11.40167046]
[115.30886078 2.48960161]
[127.27645111 11.35673332]
[125.31806946 27.05626488]
[130.97779846 40.94753647]
[138.42733765 41.81610107]
[140.12028503 26.91194153]
[137.20632935 12.19770336]
[150.28730774 4.85686445]
[161.32861328 15.01016617]
[155.10769653 28.65936470]
[153.32641602 43.55322266]
[160.77593994 44.42178726]
[169.47966003 32.20518875]
[178.18338013 19.98858833]
[175.77040100 4.59978580]
[184.77124023 -7.66559505]
[199.45697021 -9.87117290]
[208.16069031 -22.08777237]
[205.29667664 -37.63039017]
[214.33049011 -50.59827042]
[229.90251160 -53.29779816]
[242.77415466 -44.12739182]
[245.30889893 -28.52769089]
[236.00291443 -15.75372219]
[220.37728882 -13.38405323]
[211.67356873 -1.16745436]
[214.38569641 13.43323135]
[205.73291016 25.94658661]
[190.39997864 28.69230652]
[181.69625854 40.90890503]
[172.99253845 53.12550354]
[176.75929260 59.61100006]
[189.73028564 52.07751846]
[202.70127869 44.54403687]
[215.67239380 37.01077271]
[223.20544434 49.98201752]
[210.23475647 57.51502991]
[197.26376343 65.04851532]
[184.29277039 72.58199310]
[188.05950928 79.06748962]
[202.98367310 77.56114197]
[217.90785217 76.05479431]
[232.83203125 74.54843903]
[247.75619507 73.04209137]
[262.68035889 71.53574371]
[271.32806396 58.50686646]
[286.34188843 54.13440323]
[300.63281250 60.48289490]
[307.45309448 74.55477905]
[303.58239746 89.70574188]
[290.84832764 98.78195953]
[275.26354980 97.49792480]
[264.18670654 86.45991516]
[249.26254272 87.96626282]
[234.33837891 89.47261047]
[219.41419983 90.97896576]
[204.49003601 92.48531342]
[189.56585693 93.99166107]
[187.78399658 101.27691650]
[198.62078857 111.64822388]
[184.22027588 115.84743500]
[182.43841553 123.13269043]
[194.98252869 131.35736084]
[207.52664185 139.58203125]
[220.07075500 147.80670166]
[238.47171021 148.42126465]
[245.75823975 164.38302612]
[258.42813110 172.41258240]
[274.82672119 172.54817200]
[282.67205811 186.94895935]
[273.89352417 200.80065918]
[257.52172852 199.85382080]
[250.39857483 185.08247375]
[237.72868347 177.05291748]
[225.85630798 179.39181519]
[215.23362732 172.80053711]
[211.84608459 160.35081482]
[199.30197144 152.12614441]
[186.75785828 143.90147400]
[174.21374512 135.67680359]
[159.53991699 138.78791809]
[151.41256714 151.39529419]
[143.28520203 164.00267029]
[135.15785217 176.61006165]
[127.03049469 189.21743774]
[118.90313721 201.82481384]
[110.77577972 214.43220520]
[102.64842224 227.03958130]
[94.52106476 239.64695740]
[86.39370728 252.25434875]
[78.26634979 264.86172485]
[89.34856415 308.33093262]
[83.90447998 322.30810547]
[78.46039581 336.28530884]
[73.01631927 350.26251221]
[81.34186554 357.86614990]
[86.94162750 367.62182617]
[89.29716492 378.59381104]
[88.20033264 389.73535156]
[83.77156830 399.98852539]
[76.44688416 408.38476562]
[66.93502808 414.13635254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[6 22]
[9 19]
[10 18]
[11 17]
[12 16]
[32 195]
[33 194]
[34 193]
[35 192]
[41 48]
[42 47]
[49 191]
[50 190]
[51 189]
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[59 181]
[63 72]
[64 71]
[65 70]
[74 104]
[75 103]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[112 131]
[113 130]
[114 129]
[117 126]
[118 125]
[140 158]
[141 157]
[142 156]
[143 155]
[144 154]
[145 153]
[162 180]
[163 179]
[164 178]
[165 177]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
