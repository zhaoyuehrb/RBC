%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:49:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DES)
} def

/sequence { (\
GUCUCCCCUCGCCGCAUCCACUCUCCGGCCGGCCGCCUGCCCGCCGCCUCCUCCGUGCGCCCGCCAGCCUCGCCCGCGCCGUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.134066996 ubox
1 15 0.100333420 ubox
1 17 0.006433448 ubox
1 21 0.035860964 ubox
1 29 0.004558758 ubox
1 47 0.005926884 ubox
1 60 0.007977780 ubox
1 64 0.004120370 ubox
1 68 0.013694456 ubox
1 73 0.030255954 ubox
1 77 0.019107422 ubox
1 79 0.019206133 ubox
1 82 0.004210536 ubox
1 85 0.069093243 ubox
2 11 0.133301473 ubox
2 14 0.097347975 ubox
2 16 0.006851499 ubox
2 20 0.033943206 ubox
2 28 0.004534545 ubox
2 46 0.003915967 ubox
2 59 0.004681744 ubox
2 63 0.003817050 ubox
2 67 0.009118161 ubox
2 72 0.029767651 ubox
2 76 0.018610268 ubox
2 78 0.013985684 ubox
2 81 0.003961857 ubox
2 84 0.065018006 ubox
3 27 0.004527216 ubox
3 67 0.014669382 ubox
4 66 0.014431338 ubox
6 32 0.006127033 ubox
7 31 0.007450570 ubox
7 32 0.005941689 ubox
8 31 0.007295845 ubox
8 32 0.003798036 ubox
8 67 0.103424090 ubox
9 31 0.004746555 ubox
9 66 0.104046987 ubox
10 27 0.003560181 ubox
10 31 0.012745990 ubox
10 35 0.004663653 ubox
10 55 0.003628620 ubox
10 59 0.024887239 ubox
10 63 0.054394726 ubox
10 78 0.057241553 ubox
10 81 0.057984699 ubox
11 26 0.005046133 ubox
11 29 0.402919154 ubox
11 30 0.026384690 ubox
11 33 0.023840282 ubox
11 34 0.003599472 ubox
11 47 0.020282553 ubox
11 54 0.003814687 ubox
11 56 0.003380457 ubox
11 58 0.026879612 ubox
11 60 0.485650506 ubox
11 62 0.063437575 ubox
11 64 0.134869563 ubox
11 68 0.021104868 ubox
11 73 0.009896653 ubox
11 77 0.059876427 ubox
11 79 0.049692127 ubox
11 80 0.055407916 ubox
11 82 0.039146650 ubox
12 28 0.404591568 ubox
12 32 0.024165157 ubox
12 46 0.018778089 ubox
12 57 0.023988076 ubox
12 59 0.345116533 ubox
12 63 0.134929468 ubox
12 67 0.021137167 ubox
12 72 0.009910956 ubox
12 76 0.059731063 ubox
12 78 0.049456301 ubox
12 81 0.040523066 ubox
13 27 0.404582176 ubox
13 31 0.024180550 ubox
13 55 0.021176233 ubox
13 57 0.039229465 ubox
13 59 0.521718719 ubox
13 76 0.006991481 ubox
13 78 0.037767614 ubox
13 81 0.018560783 ubox
14 26 0.394139955 ubox
14 29 0.007883070 ubox
14 30 0.023904284 ubox
14 44 0.007126524 ubox
14 47 0.024547692 ubox
14 54 0.021531299 ubox
14 56 0.042716004 ubox
14 58 0.638822975 ubox
14 60 0.008602410 ubox
14 73 0.007297921 ubox
14 75 0.005222663 ubox
14 77 0.038253589 ubox
14 79 0.013207445 ubox
14 80 0.017720358 ubox
14 82 0.020676329 ubox
15 28 0.008788322 ubox
15 43 0.007097414 ubox
15 46 0.022474534 ubox
15 55 0.042787768 ubox
15 57 0.639003702 ubox
15 59 0.008598103 ubox
15 72 0.007296696 ubox
15 76 0.038158423 ubox
15 78 0.013245574 ubox
15 81 0.021264267 ubox
16 56 0.637016110 ubox
16 82 0.004846486 ubox
17 28 0.003722860 ubox
17 55 0.610975023 ubox
18 27 0.004986773 ubox
18 28 0.025008079 ubox
19 27 0.025134100 ubox
19 57 0.010856303 ubox
20 56 0.012584462 ubox
20 82 0.017557556 ubox
21 55 0.012925203 ubox
21 81 0.017541185 ubox
23 67 0.005123812 ubox
24 66 0.004767346 ubox
26 46 0.763701416 ubox
26 55 0.013641453 ubox
26 81 0.462959333 ubox
27 37 0.003613388 ubox
27 41 0.007388284 ubox
27 42 0.003173791 ubox
27 45 0.777415632 ubox
27 48 0.068727138 ubox
27 49 0.005911713 ubox
27 50 0.003305534 ubox
27 51 0.031060877 ubox
27 52 0.008810125 ubox
27 53 0.003444996 ubox
27 54 0.015493669 ubox
27 65 0.011433744 ubox
27 69 0.005565105 ubox
27 74 0.010889980 ubox
27 75 0.003838921 ubox
27 80 0.473544760 ubox
27 83 0.005942257 ubox
27 86 0.003205830 ubox
28 36 0.003617184 ubox
28 40 0.007487402 ubox
28 44 0.777464776 ubox
28 47 0.068818945 ubox
28 48 0.006511942 ubox
28 50 0.031064057 ubox
28 51 0.009761297 ubox
28 53 0.015472513 ubox
28 64 0.011457304 ubox
28 68 0.005586683 ubox
28 73 0.010977290 ubox
28 74 0.003629314 ubox
28 77 0.010231008 ubox
28 79 0.473561390 ubox
28 82 0.005888658 ubox
28 85 0.003215676 ubox
29 35 0.003613448 ubox
29 39 0.007508485 ubox
29 43 0.776054578 ubox
29 46 0.049761676 ubox
29 63 0.011293542 ubox
29 67 0.005586050 ubox
29 72 0.010919810 ubox
29 76 0.010871573 ubox
29 78 0.473477289 ubox
29 81 0.005154488 ubox
30 39 0.007389060 ubox
30 43 0.042227358 ubox
30 46 0.095075123 ubox
30 72 0.004227453 ubox
30 76 0.458238117 ubox
30 78 0.003374471 ubox
30 81 0.051547284 ubox
31 37 0.007781269 ubox
31 38 0.007319424 ubox
31 41 0.775698545 ubox
31 42 0.051945633 ubox
31 45 0.108620879 ubox
31 48 0.392170538 ubox
31 49 0.003767664 ubox
31 51 0.006844785 ubox
31 61 0.011194094 ubox
31 65 0.005653236 ubox
31 69 0.011716796 ubox
31 71 0.004412832 ubox
31 74 0.203515329 ubox
31 75 0.428069014 ubox
31 80 0.052553607 ubox
32 36 0.007666127 ubox
32 37 0.007215197 ubox
32 40 0.776524443 ubox
32 41 0.045374864 ubox
32 44 0.108632792 ubox
32 47 0.392924218 ubox
32 48 0.003323832 ubox
32 50 0.006547294 ubox
32 60 0.011206244 ubox
32 64 0.005658612 ubox
32 68 0.011781669 ubox
32 70 0.003981680 ubox
32 73 0.261537603 ubox
32 74 0.394933401 ubox
32 79 0.052534575 ubox
33 39 0.775381208 ubox
33 43 0.097924280 ubox
33 46 0.392531245 ubox
33 59 0.010421403 ubox
33 63 0.004937590 ubox
33 67 0.011785174 ubox
33 72 0.306875406 ubox
33 78 0.043367665 ubox
34 43 0.051059064 ubox
34 46 0.014301078 ubox
34 57 0.009242351 ubox
34 59 0.005031051 ubox
34 63 0.003374234 ubox
34 72 0.352148458 ubox
34 76 0.026641839 ubox
34 78 0.029746519 ubox
35 42 0.067298007 ubox
35 44 0.392113254 ubox
35 45 0.014182757 ubox
35 47 0.008853074 ubox
35 56 0.009227578 ubox
35 58 0.006475671 ubox
35 62 0.004363077 ubox
35 64 0.012085730 ubox
35 68 0.310791831 ubox
35 71 0.346353652 ubox
35 73 0.046952861 ubox
35 75 0.019592284 ubox
35 77 0.041963746 ubox
36 43 0.391876296 ubox
36 46 0.008852736 ubox
36 55 0.009212346 ubox
36 57 0.006451535 ubox
36 63 0.012152859 ubox
36 67 0.303344284 ubox
36 72 0.047534770 ubox
36 76 0.041938208 ubox
37 67 0.361906506 ubox
38 55 0.004264087 ubox
38 59 0.003210188 ubox
38 63 0.028479607 ubox
38 66 0.368935705 ubox
39 47 0.011954295 ubox
39 54 0.004157415 ubox
39 58 0.004608353 ubox
39 60 0.012930149 ubox
39 62 0.030669502 ubox
39 64 0.382538600 ubox
39 65 0.277861300 ubox
39 68 0.044432001 ubox
39 73 0.017917309 ubox
40 46 0.011980286 ubox
40 57 0.004605239 ubox
40 59 0.012804751 ubox
40 63 0.452735158 ubox
40 67 0.044473805 ubox
40 72 0.017885520 ubox
42 55 0.004674055 ubox
42 57 0.011626285 ubox
42 59 0.327246330 ubox
42 63 0.046696781 ubox
43 54 0.004594457 ubox
43 56 0.011754258 ubox
43 58 0.328199582 ubox
43 60 0.336496465 ubox
43 62 0.043943531 ubox
43 64 0.044629543 ubox
43 68 0.010465836 ubox
44 55 0.011150753 ubox
44 57 0.314445732 ubox
44 59 0.331689513 ubox
44 63 0.044611193 ubox
44 67 0.010472915 ubox
45 55 0.297403530 ubox
45 57 0.339399947 ubox
45 59 0.096033014 ubox
46 54 0.291978281 ubox
46 56 0.352096597 ubox
46 58 0.113211672 ubox
46 60 0.014837107 ubox
46 64 0.006161476 ubox
47 55 0.352210740 ubox
47 57 0.112955946 ubox
47 59 0.014841187 ubox
47 63 0.006158033 ubox
47 81 0.003164092 ubox
54 72 0.019919553 ubox
54 76 0.005444199 ubox
54 78 0.014143892 ubox
54 81 0.529117286 ubox
55 62 0.003248739 ubox
55 64 0.008436971 ubox
55 68 0.004025673 ubox
55 71 0.020755636 ubox
55 73 0.018936356 ubox
55 75 0.010743857 ubox
55 77 0.015732333 ubox
55 79 0.151248467 ubox
55 80 0.539396763 ubox
55 82 0.006257392 ubox
55 85 0.185121480 ubox
56 63 0.008433606 ubox
56 67 0.003815322 ubox
56 72 0.018947105 ubox
56 76 0.015705859 ubox
56 78 0.157452723 ubox
56 81 0.012100182 ubox
56 84 0.185506515 ubox
57 62 0.008176350 ubox
57 64 0.009027616 ubox
57 68 0.023952529 ubox
57 71 0.018151053 ubox
57 73 0.014173456 ubox
57 75 0.015514786 ubox
57 77 0.158396303 ubox
57 79 0.547786743 ubox
57 80 0.012373902 ubox
57 82 0.041605747 ubox
57 83 0.180588082 ubox
58 63 0.009211313 ubox
58 67 0.024032922 ubox
58 72 0.014227906 ubox
58 76 0.158399154 ubox
58 78 0.548256328 ubox
58 81 0.178292248 ubox
59 68 0.030713679 ubox
59 71 0.011711144 ubox
59 73 0.018781977 ubox
59 75 0.157823637 ubox
59 77 0.549199423 ubox
59 79 0.059242684 ubox
59 80 0.178007869 ubox
59 82 0.065314152 ubox
60 67 0.031334825 ubox
60 72 0.019108906 ubox
60 76 0.548463096 ubox
60 78 0.062417374 ubox
60 81 0.090451630 ubox
62 72 0.135081246 ubox
62 76 0.055199207 ubox
62 78 0.604365667 ubox
62 81 0.069639281 ubox
63 71 0.131932527 ubox
63 73 0.551785629 ubox
63 75 0.059986608 ubox
63 77 0.627699245 ubox
63 79 0.065977155 ubox
63 80 0.067883768 ubox
63 82 0.035499667 ubox
64 72 0.551883433 ubox
64 76 0.627298753 ubox
64 78 0.068443094 ubox
64 81 0.037359365 ubox
67 73 0.622993778 ubox
67 77 0.113030118 ubox
67 79 0.037125480 ubox
67 82 0.052622759 ubox
68 72 0.618939244 ubox
68 76 0.113148661 ubox
68 78 0.037132579 ubox
68 81 0.056232764 ubox
71 78 0.046696694 ubox
71 81 0.035028048 ubox
72 77 0.046727069 ubox
72 79 0.105722621 ubox
72 80 0.028083392 ubox
72 82 0.014684511 ubox
73 78 0.108036377 ubox
73 81 0.015289665 ubox
75 81 0.023362760 ubox
76 80 0.022379920 ubox
76 82 0.011503736 ubox
77 81 0.011945824 ubox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
54 81 0.9500000 lbox
55 80 0.9500000 lbox
57 79 0.9500000 lbox
58 78 0.9500000 lbox
59 77 0.9500000 lbox
60 76 0.9500000 lbox
63 73 0.9500000 lbox
64 72 0.9500000 lbox
showpage
end
%%EOF
