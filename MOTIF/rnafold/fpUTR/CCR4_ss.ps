%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:03:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCACAGGAAGCCACGCACCCUUGAAAGGCACCGGGUCCUUCUUAGCAUCGUGCUUCCUGAGCAAGCCUGGCAUUGCCUCACAGACCUUCCUCAGAGCCGCUUUCAGAAAAGCAAGCUGCUUCUGGUUGGGCCCAGACCUGCCUUGAGGAGCCUGUAGAGUUAAAAA\
) } def
/len { sequence length } bind def

/coor [
[123.25218201 249.96353149]
[121.58261108 235.05673218]
[119.91304016 220.14993286]
[118.24346924 205.24313354]
[116.43541718 190.35250854]
[114.48904419 175.47932434]
[112.54267120 160.60614014]
[110.59629822 145.73295593]
[108.64992523 130.85977173]
[101.32065582 129.26861572]
[86.66210175 126.08633423]
[79.33283234 124.49519348]
[71.39455414 137.22247314]
[68.14242554 153.86158752]
[51.25329971 155.34271240]
[45.15467453 139.52363586]
[58.66726685 129.28419495]
[66.60554504 116.55691528]
[67.62941742 96.10581207]
[78.62977600 82.00994873]
[93.32376862 77.71376801]
[93.88131714 62.72413635]
[94.43886566 47.73450089]
[94.99642181 32.74486923]
[92.22109985 26.67211723]
[92.86296082 20.97414780]
[95.86358643 17.21140671]
[96.97792053 2.25285506]
[98.09224701 -12.70569611]
[99.20658112 -27.66424751]
[100.32090759 -42.62279892]
[101.43524170 -57.58135223]
[87.52857971 -72.03025055]
[88.64855957 -91.74895477]
[103.63404846 -104.14318085]
[103.91287231 -119.14058685]
[104.19169617 -134.13800049]
[104.47052002 -149.13540649]
[104.74934387 -164.13281250]
[105.02816772 -179.13021851]
[94.34243774 -190.46392822]
[94.83885193 -205.66946411]
[105.70966339 -215.78681946]
[105.98848724 -230.78424072]
[95.42849731 -247.92427063]
[106.01963043 -264.07379150]
[105.74080658 -279.07119751]
[105.46198273 -294.06860352]
[105.18315887 -309.06600952]
[92.63004303 -317.99493408]
[87.79804993 -332.43463135]
[92.34146881 -346.78112793]
[104.31810760 -355.59576416]
[104.03928375 -370.59317017]
[103.76045990 -385.59057617]
[103.48163605 -400.58798218]
[103.20281219 -415.58541870]
[93.33280945 -431.10882568]
[102.36783600 -446.13317871]
[101.81027985 -461.12280273]
[101.25273132 -476.11242676]
[100.69518280 -491.10208130]
[97.47639465 -496.95187378]
[97.69319153 -502.68179321]
[100.40599060 -506.65704346]
[100.40599060 -521.65704346]
[100.40599060 -536.65704346]
[100.40599060 -551.65704346]
[97.40686798 -557.62243652]
[97.83649445 -563.34033203]
[100.69518280 -567.21197510]
[101.25273132 -582.20159912]
[101.81027985 -597.19128418]
[94.59128571 -611.26947021]
[102.79631042 -623.70037842]
[103.35385895 -638.69000244]
[103.91140747 -653.67962646]
[89.86042786 -659.36694336]
[78.60408783 -669.51934814]
[71.50163269 -682.91076660]
[69.41073608 -697.92425537]
[72.58387756 -712.74676514]
[80.63788605 -725.58843994]
[92.60019684 -734.89862061]
[107.02629852 -739.55297852]
[122.17418671 -738.98956299]
[136.21466064 -733.27630615]
[147.45227051 -723.10321045]
[154.53002930 -709.69873047]
[156.59326172 -694.68145752]
[153.39280701 -679.86480713]
[145.31515503 -667.03796387]
[133.33570862 -657.74987793]
[118.90104675 -653.12207031]
[118.34349823 -638.13244629]
[117.78594208 -623.14282227]
[125.04482269 -610.13677979]
[116.79991913 -596.63372803]
[116.24237061 -581.64410400]
[115.68481445 -566.65441895]
[115.40599060 -551.65704346]
[115.40599060 -536.65704346]
[115.40599060 -521.65704346]
[115.40599060 -506.65704346]
[115.68481445 -491.65963745]
[116.24237061 -476.66998291]
[116.79991913 -461.68035889]
[117.35746765 -446.69073486]
[126.01986694 -438.21118164]
[126.58409119 -425.70068359]
[118.20021820 -415.86422729]
[118.47904205 -400.86682129]
[118.75786591 -385.86941528]
[119.03668976 -370.87200928]
[119.31551361 -355.87460327]
[131.61151123 -347.51119995]
[136.68505859 -333.34353638]
[132.39312744 -318.73419189]
[120.18057251 -309.34484863]
[120.45938873 -294.34744263]
[120.73821259 -279.35003662]
[121.01703644 -264.35263062]
[129.01757812 -257.91711426]
[132.20111084 -247.92427063]
[129.27774048 -237.62326050]
[120.98589325 -230.50541687]
[120.70706940 -215.50799561]
[131.19430542 -204.99356079]
[131.12518311 -189.78009033]
[120.02557373 -178.85139465]
[119.74674988 -163.85398865]
[119.46792603 -148.85658264]
[119.18910217 -133.85917664]
[118.91027832 -118.86176300]
[118.63145447 -103.86435699]
[127.53877258 -98.62418365]
[133.49618530 -90.08081818]
[135.36317444 -79.75183105]
[132.73321533 -69.50666809]
[126.01996613 -61.22825623]
[116.39379120 -56.46702194]
[115.27946472 -41.50846863]
[114.16513062 -26.54991722]
[113.05079651 -11.59136581]
[111.93647003 3.36718583]
[110.82213593 18.32573700]
[109.98605347 33.30241776]
[109.42850494 48.29205322]
[108.87094879 63.28168869]
[108.31340027 78.27132416]
[124.41165924 86.42063141]
[132.01664734 106.16065216]
[123.52310944 128.91339111]
[125.46948242 143.78657532]
[127.41585541 158.65975952]
[129.36222839 173.53294373]
[131.30860901 188.40612793]
[135.54042053 196.54785156]
[133.15026855 203.57356262]
[134.81983948 218.48036194]
[136.48941040 233.38716125]
[138.15898132 248.29396057]
[151.28170776 256.79855347]
[155.81819153 271.76364136]
[149.62646484 286.12319946]
[135.63006592 293.09704590]
[120.43765259 289.39236450]
[111.22262573 276.75839233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[12 18]
[13 17]
[21 150]
[22 149]
[23 148]
[24 147]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[32 141]
[35 135]
[36 134]
[37 133]
[38 132]
[39 131]
[40 130]
[43 127]
[44 126]
[46 122]
[47 121]
[48 120]
[49 119]
[53 115]
[54 114]
[55 113]
[56 112]
[57 111]
[59 108]
[60 107]
[61 106]
[62 105]
[65 104]
[66 103]
[67 102]
[68 101]
[71 100]
[72 99]
[73 98]
[75 96]
[76 95]
[77 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
