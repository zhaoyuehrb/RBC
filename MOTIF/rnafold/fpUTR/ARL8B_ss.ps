%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGCCGACGGCGGCGCCGGGACGGGCGUGGGGGGUAGGGCGAGUCAUAUGAUCCGCUCGGCUUCCUGGGUCUGGCUGCUGCCGCCCGCCGGUGUCCGCCCGUGUCGCGCCGGGGCACCAAGGAGCCGUUGGAGGGUCCGGGCGGAGGCCCGCUCGUGUGGAAGUCGUCGACGCCGCCGCUCGUCCGUCCUCCCGUCCGUUCUCGCUCCCGGCCGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[50.27890396 944.16046143]
[60.20804977 931.55920410]
[59.78356552 916.56524658]
[59.35908508 901.57122803]
[58.93460083 886.57727051]
[58.40403748 871.58660889]
[57.76741791 856.60015869]
[57.13080215 841.61364746]
[54.28784561 837.78521729]
[53.81433487 832.13214111]
[56.69430542 826.19531250]
[56.48204041 811.19683838]
[53.24702835 804.55853271]
[56.37440491 795.98492432]
[56.37440491 780.98492432]
[56.37440491 765.98492432]
[56.37440491 750.98492432]
[53.69649506 747.03930664]
[53.46333694 741.37115479]
[56.59267807 735.56195068]
[57.01715851 720.56793213]
[57.44164276 705.57397461]
[57.86612320 690.57995605]
[58.29060745 675.58599854]
[58.71509171 660.59197998]
[59.13957214 645.59802246]
[59.56405640 630.60400391]
[59.98854065 615.60998535]
[60.41302109 600.61602783]
[57.46265793 593.84643555]
[60.95109558 585.41326904]
[61.58771133 570.42675781]
[62.22433090 555.44030762]
[62.86094666 540.45379639]
[63.49756622 525.46734619]
[64.13418579 510.48083496]
[56.18729782 501.36758423]
[56.59004211 488.88189697]
[65.67148590 479.73016357]
[66.52011108 464.75418091]
[67.36873627 449.77822876]
[68.21736145 434.80224609]
[69.06598663 419.82626343]
[69.91461945 404.85028076]
[70.76324463 389.87432861]
[71.61186981 374.89834595]
[58.20616531 370.06521606]
[46.69272614 361.64102173]
[38.00993347 350.30130005]
[32.86858749 336.95956421]
[31.69372368 322.69387817]
[34.58949661 308.65960693]
[41.33000946 295.99594116]
[51.37690735 285.73342896]
[63.92236710 278.70999146]
[77.95404816 275.50271606]
[79.01451874 260.54025269]
[71.32870483 251.20576477]
[72.08461761 238.73646545]
[81.42140961 229.84539795]
[82.69349670 214.89942932]
[83.96559143 199.95347595]
[85.23767853 185.00750732]
[86.50976562 170.06155396]
[87.78185272 155.11558533]
[89.05394745 140.16961670]
[90.32603455 125.22366333]
[70.99687958 108.61962891]
[72.86927032 80.35105896]
[60.93674088 71.26179504]
[49.00421143 62.17253494]
[37.07167816 53.08327103]
[30.58598328 51.86853790]
[26.32245255 48.12630463]
[24.93492699 43.56406784]
[13.26438999 34.14076614]
[1.59385395 24.71746635]
[-14.68207359 22.71092606]
[-20.83232880 7.50874233]
[-10.53005695 -5.25038099]
[5.62664843 -2.44095111]
[11.01715374 13.04693127]
[22.68769073 22.47023010]
[34.35822678 31.89352989]
[46.16094208 41.15073776]
[58.09347153 50.24000168]
[70.02600098 59.32926559]
[81.95853424 68.41852570]
[96.23744202 63.82366943]
[100.62978363 49.48116684]
[97.27264404 34.02024460]
[108.39762878 24.11650848]
[112.78997040 9.77400684]
[117.18231201 -4.56849432]
[113.82516479 -20.02941704]
[124.95014954 -29.93315506]
[129.34248352 -44.27565384]
[133.73483276 -58.61815643]
[138.12716675 -72.96065521]
[142.51951599 -87.30316162]
[146.91184998 -101.64566040]
[151.30419922 -115.98815918]
[153.52484131 -130.82287598]
[153.52484131 -145.82287598]
[153.52484131 -160.82287598]
[153.52484131 -175.82287598]
[153.52484131 -190.82287598]
[141.43025208 -200.73524475]
[138.58763123 -216.11228943]
[146.33917236 -229.69343567]
[161.02484131 -235.06608582]
[175.71049500 -229.69343567]
[183.46203613 -216.11228943]
[180.61941528 -200.73524475]
[168.52484131 -190.82287598]
[168.52484131 -175.82287598]
[168.52484131 -160.82287598]
[168.52484131 -145.82287598]
[168.52484131 -130.82287598]
[175.71144104 -128.67750549]
[186.61373901 -138.97991943]
[190.08467102 -124.38674927]
[197.27128601 -122.24137878]
[205.49420166 -134.78663635]
[213.71711731 -147.33189392]
[214.81120300 -163.11523438]
[228.25932312 -169.51814270]
[236.48223877 -182.06341553]
[233.01702881 -197.48313904]
[241.54061890 -210.79193115]
[256.99612427 -214.09391785]
[270.21405029 -205.43008423]
[273.35244751 -189.94053650]
[264.54934692 -176.81495667]
[249.02749634 -173.84048462]
[240.80458069 -161.29522705]
[240.29866028 -146.40922546]
[226.26237488 -139.10897827]
[218.03945923 -126.56372070]
[209.81654358 -114.01845551]
[165.64669800 -111.59581757]
[161.25436401 -97.25331879]
[156.86201477 -82.91082001]
[152.46968079 -68.56831360]
[148.07733154 -54.22581482]
[143.68499756 -39.88331223]
[139.29264832 -25.54081345]
[142.96395874 -11.10576057]
[131.52481079 -0.17615286]
[127.13246918 14.16634846]
[122.74012756 28.50885010]
[126.41143799 42.94390106]
[114.97229004 53.87350845]
[110.57994843 68.21601105]
[120.88813782 75.00704956]
[127.77531433 84.83379364]
[130.48046875 96.17134094]
[128.86845398 107.36763000]
[123.41534424 116.88367462]
[115.10734558 123.50506592]
[105.27199554 126.49575043]
[103.99990845 141.44171143]
[102.72782135 156.38768005]
[101.45572662 171.33363342]
[100.18363953 186.27960205]
[98.91155243 201.22555542]
[97.63946533 216.17152405]
[96.36737061 231.11749268]
[104.57220459 247.60685730]
[93.97698212 261.60070801]
[92.91651917 276.56320190]
[107.60666656 282.44009399]
[119.74595642 292.55749512]
[128.15316772 305.91522217]
[132.01506042 321.19860840]
[130.96507263 336.90789795]
[125.11800385 351.50531006]
[115.05768585 363.56561279]
[101.77865601 371.91537476]
[86.58784485 375.74697876]
[85.73921967 390.72293091]
[84.89059448 405.69891357]
[84.04196930 420.67489624]
[83.19333649 435.65087891]
[82.34471130 450.62683105]
[81.49608612 465.60281372]
[80.64746094 480.57879639]
[89.31563568 496.82937622]
[79.12066650 511.11746216]
[78.48405457 526.10394287]
[77.84743500 541.09045410]
[77.21081543 556.07690430]
[76.57419586 571.06341553]
[75.93757629 586.04986572]
[75.40701294 601.04052734]
[74.98252869 616.03448486]
[74.55805206 631.02850342]
[74.13356781 646.02246094]
[73.70908356 661.01647949]
[73.28459930 676.01043701]
[72.86011505 691.00445557]
[72.43563843 705.99847412]
[72.01115417 720.99243164]
[71.58666992 735.98645020]
[71.37440491 750.98492432]
[71.37440491 765.98492432]
[71.37440491 780.98492432]
[71.37440491 795.98492432]
[71.48053741 810.98455811]
[71.69280243 825.98303223]
[72.11728668 840.97705078]
[72.75390625 855.96356201]
[73.39052582 870.95001221]
[76.87895966 879.38317871]
[73.92859650 886.15277100]
[74.35307312 901.14678955]
[74.77755737 916.14074707]
[75.20204163 931.13476562]
[85.82820129 943.15405273]
[82.91460419 958.93035889]
[68.69631195 966.36132812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 218]
[3 217]
[4 216]
[5 215]
[6 213]
[7 212]
[8 211]
[11 210]
[12 209]
[14 208]
[15 207]
[16 206]
[17 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[39 187]
[40 186]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[56 171]
[57 170]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[69 88]
[70 87]
[71 86]
[72 85]
[75 84]
[76 83]
[77 82]
[89 154]
[90 153]
[92 151]
[93 150]
[94 149]
[96 147]
[97 146]
[98 145]
[99 144]
[100 143]
[101 142]
[102 141]
[103 119]
[104 118]
[105 117]
[106 116]
[107 115]
[123 140]
[124 139]
[125 138]
[127 136]
[128 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
