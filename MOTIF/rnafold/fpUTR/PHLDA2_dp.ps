%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PHLDA2)
} def

/sequence { (\
AGAGCCGGCGCCGUCACCGCCCGCAUUGCCGCUCCCAGUCCCGCGCUCGGCACGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.044394916 ubox
2 26 0.068506267 ubox
2 27 0.027216133 ubox
2 34 0.397402560 ubox
2 48 0.028087218 ubox
3 26 0.034949066 ubox
3 27 0.004672379 ubox
3 33 0.398483573 ubox
3 47 0.028123173 ubox
4 11 0.004451453 ubox
4 24 0.260490668 ubox
4 29 0.003851176 ubox
4 32 0.398627273 ubox
4 46 0.028094136 ubox
4 51 0.877195941 ubox
5 10 0.004449696 ubox
5 23 0.259740039 ubox
5 28 0.003870903 ubox
5 31 0.283359419 ubox
5 45 0.028047925 ubox
5 50 0.878112910 ubox
6 19 0.005744068 ubox
6 23 0.042488273 ubox
6 28 0.009043065 ubox
6 31 0.280500991 ubox
6 43 0.025516368 ubox
6 49 0.878083959 ubox
6 54 0.011355024 ubox
7 18 0.006250266 ubox
7 21 0.261640722 ubox
7 22 0.046299740 ubox
7 27 0.008120022 ubox
7 30 0.396602932 ubox
7 42 0.025051354 ubox
7 47 0.143853920 ubox
7 48 0.865684203 ubox
7 53 0.011407463 ubox
8 17 0.006247380 ubox
8 20 0.262182991 ubox
8 21 0.044475562 ubox
8 24 0.015654769 ubox
8 26 0.006990883 ubox
8 29 0.396701828 ubox
8 41 0.024822954 ubox
8 44 0.003346256 ubox
8 46 0.868785863 ubox
8 47 0.124775361 ubox
9 19 0.262484398 ubox
9 23 0.015984249 ubox
9 28 0.396573137 ubox
9 43 0.003394880 ubox
9 45 0.874127668 ubox
10 18 0.257481174 ubox
10 20 0.061539139 ubox
10 22 0.016938599 ubox
10 24 0.160861110 ubox
10 27 0.332027963 ubox
10 39 0.023316290 ubox
10 42 0.003344009 ubox
10 44 0.873967208 ubox
10 46 0.080887795 ubox
10 51 0.011952159 ubox
11 19 0.057565235 ubox
11 23 0.153137675 ubox
11 38 0.023568273 ubox
11 43 0.733107345 ubox
11 45 0.080278593 ubox
11 50 0.011967983 ubox
12 19 0.131513314 ubox
12 23 0.285232978 ubox
12 28 0.006187830 ubox
12 31 0.038605404 ubox
12 43 0.481401670 ubox
12 45 0.011128969 ubox
12 49 0.011968067 ubox
12 54 0.005180948 ubox
13 18 0.133586751 ubox
13 20 0.118552743 ubox
13 22 0.290433442 ubox
13 24 0.208135279 ubox
13 26 0.016225606 ubox
13 27 0.006072981 ubox
13 29 0.007832714 ubox
13 30 0.038853589 ubox
13 32 0.007863161 ubox
13 39 0.029240664 ubox
13 42 0.673613141 ubox
13 44 0.015056836 ubox
13 48 0.011931203 ubox
13 53 0.005231479 ubox
13 56 0.003535649 ubox
14 19 0.112522842 ubox
14 23 0.206869170 ubox
14 25 0.016380333 ubox
14 28 0.006179477 ubox
14 31 0.007594751 ubox
14 38 0.020039474 ubox
14 43 0.014951349 ubox
14 52 0.005098858 ubox
14 55 0.003577160 ubox
15 28 0.035161526 ubox
15 54 0.003582363 ubox
16 27 0.032210754 ubox
16 39 0.717063501 ubox
17 38 0.726400009 ubox
17 50 0.006321365 ubox
18 28 0.007919415 ubox
18 31 0.043743223 ubox
18 45 0.011412690 ubox
18 49 0.006332071 ubox
19 27 0.006751257 ubox
19 29 0.053817740 ubox
19 30 0.039343007 ubox
19 32 0.175093524 ubox
19 39 0.039266567 ubox
19 42 0.004739402 ubox
19 44 0.011613688 ubox
19 48 0.006324127 ubox
20 28 0.057285357 ubox
20 31 0.175052042 ubox
20 38 0.040061792 ubox
20 43 0.011586880 ubox
22 28 0.032533465 ubox
22 31 0.120417185 ubox
22 43 0.004668937 ubox
22 45 0.011015123 ubox
22 54 0.015174992 ubox
23 27 0.020516478 ubox
23 29 0.186611804 ubox
23 30 0.111810126 ubox
23 32 0.836257552 ubox
23 39 0.010242382 ubox
23 42 0.010818750 ubox
23 44 0.012367342 ubox
23 46 0.003811743 ubox
23 51 0.006747335 ubox
23 53 0.015275654 ubox
24 28 0.190293337 ubox
24 31 0.836768228 ubox
24 38 0.010646651 ubox
24 43 0.012365235 ubox
24 45 0.003787534 ubox
24 50 0.006766629 ubox
25 39 0.042861792 ubox
26 38 0.044800704 ubox
26 55 0.015020115 ubox
27 37 0.046867753 ubox
27 43 0.003200791 ubox
27 45 0.006167628 ubox
27 52 0.222332912 ubox
27 54 0.012798484 ubox
28 36 0.046919228 ubox
28 39 0.020618141 ubox
28 42 0.026026372 ubox
28 44 0.012130253 ubox
28 46 0.016988284 ubox
28 48 0.003396568 ubox
28 51 0.255267106 ubox
28 53 0.010522202 ubox
29 38 0.021457435 ubox
29 43 0.012092469 ubox
29 45 0.012955080 ubox
29 50 0.255341698 ubox
30 43 0.006901325 ubox
30 45 0.022554032 ubox
30 49 0.254747406 ubox
30 54 0.042939244 ubox
31 39 0.071588973 ubox
31 42 0.008221270 ubox
31 44 0.042411414 ubox
31 46 0.056091699 ubox
31 48 0.244010776 ubox
31 51 0.016545676 ubox
31 53 0.043255310 ubox
32 38 0.077105725 ubox
32 43 0.044946387 ubox
32 45 0.061488619 ubox
32 50 0.016447019 ubox
33 37 0.069806614 ubox
33 49 0.015683659 ubox
33 55 0.004877187 ubox
34 49 0.003354236 ubox
34 50 0.043489855 ubox
34 54 0.005509017 ubox
35 49 0.044921652 ubox
35 50 0.057049456 ubox
36 49 0.057540718 ubox
37 47 0.218700420 ubox
38 44 0.089826727 ubox
38 46 0.220131945 ubox
38 51 0.049763447 ubox
38 53 0.237850253 ubox
38 56 0.266018436 ubox
39 43 0.084079489 ubox
39 45 0.214431124 ubox
39 50 0.046499166 ubox
39 52 0.233834852 ubox
39 55 0.269034495 ubox
40 49 0.046264090 ubox
40 50 0.036912424 ubox
40 54 0.268509948 ubox
41 49 0.035568624 ubox
41 50 0.271266795 ubox
42 49 0.271782512 ubox
42 54 0.124909107 ubox
43 48 0.254447141 ubox
43 51 0.248058679 ubox
43 53 0.128748204 ubox
44 50 0.248394940 ubox
44 54 0.007347385 ubox
45 51 0.129990461 ubox
45 53 0.007358882 ubox
46 50 0.129075171 ubox
47 55 0.017260501 ubox
48 54 0.018895983 ubox
49 53 0.017748876 ubox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
showpage
end
%%EOF
