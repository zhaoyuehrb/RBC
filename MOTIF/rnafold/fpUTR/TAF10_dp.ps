%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TAF10)
} def

/sequence { (\
CGCGGCGCGAGCGGAAGCGGAAGCGGCUCUGUUCGCCGCCUCUCCCACCGGCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.005474879 ubox
1 50 0.062651224 ubox
1 55 0.076345490 ubox
2 8 0.005920863 ubox
2 37 0.004532599 ubox
2 39 0.248581723 ubox
2 49 0.062908151 ubox
2 52 0.195111791 ubox
2 54 0.083592741 ubox
3 7 0.005880458 ubox
3 38 0.249209757 ubox
3 50 0.023553740 ubox
3 51 0.194538643 ubox
3 55 0.071852521 ubox
4 37 0.249833938 ubox
4 40 0.958433129 ubox
4 41 0.009154370 ubox
4 42 0.007336544 ubox
4 45 0.004386137 ubox
4 46 0.004031017 ubox
4 49 0.016854956 ubox
4 53 0.082121368 ubox
4 54 0.076546010 ubox
5 36 0.236109364 ubox
5 39 0.959729001 ubox
5 40 0.007598049 ubox
5 44 0.003360837 ubox
5 45 0.003209471 ubox
5 48 0.013704229 ubox
5 52 0.082152456 ubox
5 53 0.075788269 ubox
6 35 0.223309028 ubox
6 38 0.959590681 ubox
6 51 0.082035541 ubox
7 18 0.007444426 ubox
7 34 0.144648614 ubox
7 36 0.691062734 ubox
7 37 0.678564130 ubox
7 39 0.004374369 ubox
7 52 0.043111101 ubox
8 17 0.007451541 ubox
8 31 0.003606633 ubox
8 35 0.971453003 ubox
8 38 0.004369369 ubox
8 50 0.055967425 ubox
8 51 0.042901279 ubox
9 29 0.005193968 ubox
9 33 0.019603121 ubox
9 34 0.986343353 ubox
9 37 0.004317060 ubox
9 49 0.055816442 ubox
10 28 0.005242239 ubox
10 32 0.016654309 ubox
10 33 0.992417947 ubox
10 43 0.003175184 ubox
11 18 0.027162374 ubox
11 27 0.005243300 ubox
11 32 0.996467460 ubox
11 36 0.004416248 ubox
11 52 0.004963658 ubox
12 17 0.027185439 ubox
12 26 0.005140997 ubox
12 31 0.997087350 ubox
12 35 0.004416465 ubox
12 38 0.003583317 ubox
12 50 0.044988176 ubox
12 51 0.003600761 ubox
13 28 0.010614798 ubox
13 29 0.007433795 ubox
13 30 0.996267416 ubox
13 34 0.004341802 ubox
13 37 0.003584040 ubox
13 45 0.048775136 ubox
13 46 0.018938590 ubox
13 49 0.045366086 ubox
14 27 0.014073362 ubox
14 28 0.003744918 ubox
14 29 0.996877982 ubox
14 33 0.003547030 ubox
14 36 0.003573972 ubox
14 44 0.048863744 ubox
14 45 0.018855746 ubox
14 48 0.045315557 ubox
15 28 0.867751067 ubox
15 43 0.038905620 ubox
16 28 0.483089464 ubox
16 33 0.003867782 ubox
16 41 0.007493356 ubox
16 43 0.019370784 ubox
17 24 0.196756546 ubox
17 27 0.684201521 ubox
17 32 0.005196030 ubox
17 39 0.008263745 ubox
17 40 0.007293653 ubox
17 42 0.024339397 ubox
18 23 0.196801319 ubox
18 25 0.734369927 ubox
18 26 0.644761131 ubox
18 31 0.005529274 ubox
18 38 0.008535245 ubox
19 24 0.765919376 ubox
19 30 0.005544146 ubox
19 37 0.008528899 ubox
19 40 0.020060079 ubox
19 41 0.015708951 ubox
19 42 0.006091008 ubox
19 43 0.049882926 ubox
19 44 0.008116311 ubox
19 45 0.030814913 ubox
19 46 0.003826867 ubox
20 27 0.003295578 ubox
20 29 0.005552499 ubox
20 36 0.007835093 ubox
20 39 0.017101358 ubox
20 40 0.015806606 ubox
20 41 0.005243597 ubox
20 42 0.061416072 ubox
20 44 0.030915028 ubox
20 45 0.003438649 ubox
21 28 0.005261578 ubox
21 41 0.060651725 ubox
21 43 0.030684356 ubox
22 33 0.006334039 ubox
22 41 0.011788758 ubox
23 32 0.007196209 ubox
23 36 0.014464353 ubox
23 39 0.071988460 ubox
23 40 0.008655013 ubox
24 31 0.007364940 ubox
24 35 0.014798660 ubox
24 38 0.073221372 ubox
25 30 0.005614863 ubox
25 34 0.014773441 ubox
25 37 0.073228266 ubox
26 32 0.003558190 ubox
26 33 0.011509401 ubox
26 36 0.073229324 ubox
27 31 0.004837943 ubox
27 35 0.073182323 ubox
35 52 0.004354982 ubox
36 51 0.004694554 ubox
37 50 0.029487789 ubox
37 55 0.003607558 ubox
38 49 0.029009270 ubox
38 52 0.086762803 ubox
39 51 0.087414575 ubox
40 50 0.088503607 ubox
40 51 0.026049852 ubox
41 50 0.030782325 ubox
41 51 0.075704922 ubox
42 50 0.107984910 ubox
42 51 0.095902362 ubox
43 50 0.090816734 ubox
43 51 0.075996080 ubox
44 50 0.109506570 ubox
44 51 0.450784525 ubox
45 50 0.457160736 ubox
45 51 0.256568871 ubox
46 50 0.258061159 ubox
49 55 0.094577914 ubox
50 54 0.094582438 ubox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
showpage
end
%%EOF
