%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C11orf86)
} def

/sequence { (\
AGAUGGGUGGAGGCACUGGGCCACCUCAGAGGGCCAGUGUCUUGCUGAGGGGCCGGAGCAGUCCUGUGCCUGCAGCCUCCGGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 78 0.008542864 ubox
2 77 0.004995473 ubox
2 79 0.821984032 ubox
3 78 0.812643112 ubox
4 72 0.004028229 ubox
4 81 0.035945039 ubox
5 71 0.008793034 ubox
5 77 0.984602856 ubox
5 78 0.126238860 ubox
5 79 0.031838077 ubox
5 80 0.047347410 ubox
5 86 0.039438002 ubox
6 46 0.003762975 ubox
6 70 0.009186445 ubox
6 76 0.985135315 ubox
6 77 0.142018966 ubox
6 78 0.013063474 ubox
6 79 0.045696703 ubox
6 80 0.015064297 ubox
6 85 0.039737971 ubox
6 86 0.050502138 ubox
7 45 0.003971824 ubox
7 69 0.009190555 ubox
7 76 0.142506516 ubox
7 77 0.020579002 ubox
7 78 0.039069910 ubox
7 79 0.015074257 ubox
7 85 0.051132883 ubox
8 44 0.003568247 ubox
8 68 0.009172030 ubox
8 74 0.991184749 ubox
8 75 0.086975119 ubox
8 81 0.050914690 ubox
8 84 0.047087251 ubox
9 67 0.008860882 ubox
9 73 0.995803372 ubox
9 77 0.016939268 ubox
9 80 0.077606681 ubox
10 43 0.022545568 ubox
10 76 0.012590823 ubox
10 79 0.077635219 ubox
11 42 0.024853124 ubox
11 65 0.009176621 ubox
11 71 0.993383933 ubox
11 78 0.077401895 ubox
12 41 0.025860738 ubox
12 64 0.009188026 ubox
12 70 0.996624674 ubox
12 77 0.077171138 ubox
13 40 0.028285959 ubox
13 63 0.009185646 ubox
13 69 0.996633226 ubox
13 76 0.076224340 ubox
14 39 0.028741268 ubox
14 68 0.996625840 ubox
14 75 0.075905852 ubox
15 38 0.028852930 ubox
15 62 0.021852106 ubox
15 67 0.995483361 ubox
16 37 0.028870365 ubox
16 56 0.047176603 ubox
16 58 0.008021719 ubox
16 61 0.028389354 ubox
16 66 0.992992675 ubox
16 75 0.004935791 ubox
17 36 0.028860507 ubox
17 55 0.046427869 ubox
17 57 0.012018940 ubox
17 60 0.034403347 ubox
17 66 0.015538321 ubox
17 74 0.010621919 ubox
18 35 0.028824380 ubox
18 54 0.070384294 ubox
18 59 0.034427901 ubox
18 63 0.016789261 ubox
18 64 0.073522296 ubox
18 65 0.080398185 ubox
18 73 0.011161262 ubox
19 34 0.028778075 ubox
19 53 0.050084185 ubox
19 54 0.995292221 ubox
19 63 0.042292461 ubox
19 64 0.004504576 ubox
20 53 0.998123136 ubox
20 62 0.019381482 ubox
21 32 0.028730647 ubox
21 51 0.006748556 ubox
21 52 0.999371570 ubox
21 61 0.018590456 ubox
22 31 0.028728858 ubox
22 50 0.004815975 ubox
22 51 0.998535097 ubox
24 50 0.998677571 ubox
25 49 0.999568250 ubox
26 48 0.999431747 ubox
27 47 0.999564940 ubox
28 46 0.999249117 ubox
29 43 0.007161023 ubox
29 45 0.997060269 ubox
30 42 0.020565232 ubox
30 43 0.982099749 ubox
31 41 0.021295668 ubox
31 42 0.994960215 ubox
31 43 0.059534824 ubox
32 40 0.019440215 ubox
32 41 0.997384047 ubox
32 42 0.059141669 ubox
32 43 0.003291201 ubox
33 40 0.994507098 ubox
33 41 0.058866320 ubox
34 39 0.992148571 ubox
35 44 0.004259145 ubox
36 43 0.004183174 ubox
37 42 0.003176878 ubox
43 74 0.003430642 ubox
44 73 0.003695904 ubox
44 76 0.026700500 ubox
44 85 0.006165728 ubox
45 72 0.003685339 ubox
45 75 0.027190160 ubox
45 82 0.004544557 ubox
45 84 0.006181404 ubox
46 74 0.027197712 ubox
46 81 0.004599766 ubox
46 83 0.006077048 ubox
47 73 0.027142321 ubox
47 80 0.004750171 ubox
48 71 0.026714367 ubox
49 70 0.026853524 ubox
49 79 0.005362257 ubox
49 80 0.005478826 ubox
49 86 0.003809694 ubox
50 69 0.026851395 ubox
50 71 0.005148832 ubox
50 78 0.005405047 ubox
50 79 0.005460639 ubox
50 85 0.003841113 ubox
51 70 0.005219140 ubox
51 77 0.007650541 ubox
52 59 0.016787693 ubox
52 67 0.026907405 ubox
52 69 0.005247415 ubox
52 76 0.007665750 ubox
53 58 0.016758926 ubox
53 66 0.026945425 ubox
53 68 0.005270907 ubox
53 75 0.007649037 ubox
53 82 0.004068202 ubox
54 66 0.004785917 ubox
54 72 0.007838747 ubox
54 81 0.004084384 ubox
55 63 0.019488019 ubox
55 64 0.988303716 ubox
55 65 0.023464893 ubox
55 70 0.019571370 ubox
55 71 0.017694171 ubox
55 80 0.004093756 ubox
56 62 0.016596169 ubox
56 63 0.990485406 ubox
56 64 0.023487133 ubox
56 69 0.019473179 ubox
56 70 0.018412525 ubox
56 79 0.004093863 ubox
57 62 0.964877078 ubox
57 65 0.019855055 ubox
57 78 0.004082727 ubox
58 64 0.020241697 ubox
58 67 0.019275571 ubox
58 69 0.021112084 ubox
58 73 0.066984502 ubox
58 77 0.003237022 ubox
59 66 0.020471841 ubox
59 68 0.021254560 ubox
59 72 0.067095139 ubox
60 65 0.018600358 ubox
60 67 0.020706282 ubox
60 71 0.067062130 ubox
61 69 0.008990762 ubox
61 70 0.066386255 ubox
62 68 0.012290087 ubox
65 74 0.018331860 ubox
66 73 0.019766387 ubox
67 72 0.018955742 ubox
67 74 0.003737600 ubox
68 73 0.004129993 ubox
72 85 0.005402461 ubox
73 84 0.005422343 ubox
75 85 0.005454817 ubox
76 82 0.006728951 ubox
76 84 0.005351120 ubox
77 81 0.006861953 ubox
77 84 0.004616815 ubox
78 83 0.011101212 ubox
2 79 0.9500000 lbox
3 78 0.9500000 lbox
5 77 0.9500000 lbox
6 76 0.9500000 lbox
8 74 0.9500000 lbox
9 73 0.9500000 lbox
11 71 0.9500000 lbox
12 70 0.9500000 lbox
13 69 0.9500000 lbox
14 68 0.9500000 lbox
15 67 0.9500000 lbox
16 66 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
showpage
end
%%EOF
