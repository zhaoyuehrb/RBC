%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (STXBP3)
} def

/sequence { (\
GCAUUCCCCUGCAGCAAGGGGCGGGGCCACCCCAACGCCGCUUCUGCGGCCAAAGUAGGUUGGGAGUGGAAGGUGGUGGCUGCUGCUCCGCAGUGUCGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003588033 ubox
2 11 0.003593056 ubox
3 10 0.003283895 ubox
4 101 0.039213126 ubox
4 102 0.743359774 ubox
4 103 0.080869020 ubox
5 100 0.036201549 ubox
5 101 0.854135633 ubox
5 102 0.109164158 ubox
6 99 0.037318229 ubox
6 100 0.854787616 ubox
7 98 0.037331968 ubox
7 99 0.843972954 ubox
7 100 0.493941874 ubox
8 98 0.831817456 ubox
8 99 0.513205893 ubox
8 100 0.150499199 ubox
9 93 0.389117766 ubox
9 98 0.530367005 ubox
9 99 0.151177700 ubox
10 92 0.389635167 ubox
10 95 0.165796180 ubox
10 98 0.151539428 ubox
11 91 0.389646105 ubox
11 94 0.235773737 ubox
11 96 0.854319214 ubox
11 97 0.178291485 ubox
12 90 0.389487499 ubox
12 93 0.238476384 ubox
12 95 0.880716113 ubox
13 87 0.003526748 ubox
13 94 0.863932161 ubox
14 86 0.003809116 ubox
14 91 0.330262398 ubox
14 94 0.148949849 ubox
14 96 0.011853547 ubox
15 85 0.003807102 ubox
15 90 0.329525321 ubox
15 93 0.212067105 ubox
15 95 0.012189181 ubox
16 94 0.010266950 ubox
17 87 0.005273118 ubox
18 83 0.003220905 ubox
18 86 0.005436323 ubox
18 88 0.003368475 ubox
18 89 0.998767958 ubox
19 88 0.999618070 ubox
19 89 0.024719218 ubox
20 81 0.003215591 ubox
20 84 0.005635285 ubox
20 87 0.999014070 ubox
20 88 0.024688849 ubox
21 80 0.003223197 ubox
21 83 0.005839739 ubox
21 86 0.999955832 ubox
22 79 0.003218949 ubox
22 82 0.005831513 ubox
22 85 0.999938456 ubox
23 84 0.998346004 ubox
24 81 0.003714171 ubox
24 83 0.990848990 ubox
24 84 0.005526440 ubox
25 80 0.005693716 ubox
25 81 0.902503194 ubox
25 83 0.007129776 ubox
26 80 0.999865642 ubox
27 79 0.999988317 ubox
28 78 0.999981552 ubox
29 77 0.999774132 ubox
30 76 0.999868623 ubox
31 64 0.006654664 ubox
31 73 0.006076171 ubox
31 75 0.999630443 ubox
31 76 0.009116004 ubox
32 63 0.009257671 ubox
32 72 0.008530981 ubox
32 73 0.993683776 ubox
32 75 0.012501910 ubox
32 76 0.011887776 ubox
33 62 0.009272057 ubox
33 72 0.992368757 ubox
33 75 0.013854885 ubox
34 61 0.009289534 ubox
34 74 0.018083672 ubox
35 60 0.009286670 ubox
35 74 0.033367849 ubox
36 59 0.009278414 ubox
36 68 0.008473857 ubox
36 73 0.033808689 ubox
37 50 0.010640798 ubox
37 67 0.007851664 ubox
37 74 0.006023148 ubox
37 77 0.003247269 ubox
38 49 0.011473097 ubox
38 66 0.007621494 ubox
38 69 0.999451397 ubox
38 73 0.005996325 ubox
38 76 0.003297537 ubox
39 48 0.011672650 ubox
39 68 0.999815984 ubox
39 72 0.005449846 ubox
39 75 0.003314982 ubox
40 47 0.011683446 ubox
40 67 0.999453365 ubox
40 74 0.003406918 ubox
41 46 0.011677891 ubox
41 63 0.005547530 ubox
41 66 0.999820365 ubox
41 72 0.004812679 ubox
42 62 0.005224354 ubox
42 64 0.003746413 ubox
42 65 0.979371966 ubox
42 66 0.005537486 ubox
42 71 0.007301513 ubox
43 59 0.009747585 ubox
43 63 0.007698769 ubox
43 64 0.956653661 ubox
43 65 0.198596131 ubox
43 70 0.007924422 ubox
44 58 0.014382536 ubox
44 62 0.008086371 ubox
44 63 0.943447038 ubox
44 64 0.281199384 ubox
44 69 0.008105378 ubox
45 57 0.015697360 ubox
45 62 0.671629639 ubox
45 63 0.255707630 ubox
45 68 0.008073852 ubox
46 56 0.018705438 ubox
46 60 0.028945347 ubox
46 61 0.269998698 ubox
46 67 0.008092457 ubox
47 55 0.018787641 ubox
47 59 0.036915382 ubox
47 62 0.713789908 ubox
47 66 0.008104243 ubox
48 61 0.887448015 ubox
49 56 0.031589878 ubox
49 60 0.995374293 ubox
50 55 0.031749580 ubox
50 59 0.998865736 ubox
50 63 0.010531790 ubox
51 58 0.997992318 ubox
51 62 0.011644634 ubox
52 61 0.011607038 ubox
53 60 0.010277783 ubox
4 102 0.9500000 lbox
5 101 0.9500000 lbox
6 100 0.9500000 lbox
7 99 0.9500000 lbox
8 98 0.9500000 lbox
11 96 0.9500000 lbox
12 95 0.9500000 lbox
13 94 0.9500000 lbox
18 89 0.9500000 lbox
19 88 0.9500000 lbox
20 87 0.9500000 lbox
21 86 0.9500000 lbox
22 85 0.9500000 lbox
23 84 0.9500000 lbox
24 83 0.9500000 lbox
25 81 0.9500000 lbox
26 80 0.9500000 lbox
27 79 0.9500000 lbox
28 78 0.9500000 lbox
29 77 0.9500000 lbox
30 76 0.9500000 lbox
31 75 0.9500000 lbox
32 73 0.9500000 lbox
33 72 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
42 65 0.9500000 lbox
43 64 0.9500000 lbox
44 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
showpage
end
%%EOF
