%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2C1)
} def

/sequence { (\
UUCCAGCAGCUUGCGCUAAAUGAAUUCAUCAAGUGACUGAAGACAACCAGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.011400942 ubox
1 19 0.024065454 ubox
1 20 0.013103638 ubox
1 23 0.010438873 ubox
1 24 0.109067079 ubox
1 40 0.016815745 ubox
1 41 0.211854874 ubox
1 42 0.146277549 ubox
1 43 0.044432954 ubox
1 46 0.010538852 ubox
1 50 0.003436270 ubox
2 8 0.013851175 ubox
2 18 0.025724680 ubox
2 19 0.014981637 ubox
2 22 0.009867537 ubox
2 23 0.131068198 ubox
2 36 0.007416874 ubox
2 39 0.006344941 ubox
2 40 0.242580564 ubox
2 41 0.168768068 ubox
2 42 0.047988981 ubox
2 43 0.145117813 ubox
2 45 0.009880121 ubox
2 49 0.003257782 ubox
3 22 0.128678055 ubox
3 35 0.014390446 ubox
3 39 0.175453787 ubox
3 42 0.157138942 ubox
4 13 0.163437687 ubox
4 22 0.132085070 ubox
4 35 0.025778853 ubox
4 39 0.655979237 ubox
4 52 0.019820188 ubox
5 11 0.048025879 ubox
5 12 0.158683689 ubox
5 17 0.100984432 ubox
5 21 0.135388112 ubox
5 34 0.017379222 ubox
5 38 0.679810721 ubox
5 51 0.009959369 ubox
6 10 0.052924553 ubox
6 11 0.116330394 ubox
6 14 0.273341871 ubox
6 16 0.106339634 ubox
6 34 0.010899107 ubox
6 37 0.679877134 ubox
6 51 0.009085069 ubox
7 13 0.285023619 ubox
7 15 0.106302353 ubox
7 22 0.011606444 ubox
7 33 0.012972074 ubox
7 35 0.189206218 ubox
7 39 0.086605561 ubox
7 50 0.009747371 ubox
7 52 0.013145517 ubox
8 12 0.231089024 ubox
8 17 0.215428199 ubox
8 21 0.009012236 ubox
8 34 0.152892725 ubox
8 38 0.086914992 ubox
8 51 0.006253542 ubox
9 16 0.224617236 ubox
9 34 0.673238679 ubox
9 37 0.085876622 ubox
9 51 0.008881895 ubox
10 15 0.224276894 ubox
10 33 0.691666463 ubox
10 42 0.020901319 ubox
10 50 0.009519929 ubox
11 19 0.003458648 ubox
11 20 0.004326473 ubox
11 32 0.691358834 ubox
11 36 0.047854533 ubox
11 40 0.008542458 ubox
11 41 0.020421449 ubox
11 46 0.006604263 ubox
11 49 0.008432799 ubox
11 50 0.003291322 ubox
12 18 0.003928469 ubox
12 19 0.005526069 ubox
12 28 0.007335748 ubox
12 31 0.690494691 ubox
12 32 0.003473528 ubox
12 35 0.038192601 ubox
12 39 0.009383353 ubox
12 40 0.016060952 ubox
12 45 0.007940589 ubox
12 49 0.005162716 ubox
12 52 0.004459433 ubox
13 17 0.003423098 ubox
13 27 0.008280330 ubox
13 30 0.688556077 ubox
13 34 0.034234645 ubox
13 38 0.006659398 ubox
13 44 0.008041494 ubox
13 48 0.006137957 ubox
13 51 0.007776430 ubox
14 22 0.064474720 ubox
14 33 0.034246635 ubox
14 35 0.599676197 ubox
14 50 0.007922510 ubox
14 52 0.112164115 ubox
15 21 0.050987862 ubox
15 34 0.646159572 ubox
15 51 0.157254566 ubox
16 33 0.649268044 ubox
16 50 0.159703563 ubox
17 32 0.643243625 ubox
17 35 0.019156968 ubox
17 49 0.154609665 ubox
18 26 0.115330454 ubox
18 34 0.022565317 ubox
18 51 0.003472156 ubox
19 25 0.112594641 ubox
19 26 0.064681400 ubox
20 25 0.055200299 ubox
20 29 0.852915538 ubox
20 34 0.008104883 ubox
20 51 0.004955871 ubox
21 28 0.864873428 ubox
21 31 0.160588310 ubox
21 33 0.006845772 ubox
21 45 0.160308475 ubox
21 49 0.010142350 ubox
21 50 0.004547729 ubox
22 27 0.863339176 ubox
22 30 0.166482320 ubox
22 44 0.167698282 ubox
22 48 0.011350953 ubox
23 29 0.160024129 ubox
24 34 0.017508429 ubox
25 32 0.006881203 ubox
25 33 0.017909129 ubox
25 41 0.182478214 ubox
25 43 0.003332494 ubox
26 31 0.006826104 ubox
26 32 0.016462018 ubox
26 35 0.003732890 ubox
26 36 0.059421390 ubox
26 40 0.185662444 ubox
26 43 0.041851921 ubox
27 35 0.114810589 ubox
27 39 0.185980621 ubox
27 42 0.044905504 ubox
27 52 0.006042738 ubox
28 34 0.113400910 ubox
28 38 0.183271104 ubox
28 51 0.005910880 ubox
29 33 0.104983569 ubox
29 36 0.178966413 ubox
29 40 0.047365921 ubox
29 50 0.005478810 ubox
30 35 0.181428201 ubox
30 39 0.048388399 ubox
30 52 0.005078308 ubox
31 38 0.044794675 ubox
31 51 0.004087254 ubox
32 38 0.008608278 ubox
33 37 0.011618367 ubox
33 44 0.013559180 ubox
33 47 0.005124277 ubox
34 43 0.013562752 ubox
34 45 0.005871593 ubox
34 46 0.004764704 ubox
34 49 0.005721050 ubox
34 52 0.011006557 ubox
35 44 0.006711969 ubox
35 48 0.006776738 ubox
35 51 0.014780120 ubox
36 51 0.676818845 ubox
37 50 0.697286782 ubox
38 45 0.015042322 ubox
38 49 0.697366702 ubox
39 44 0.016561256 ubox
39 48 0.697269557 ubox
43 51 0.220466276 ubox
44 50 0.226474564 ubox
44 52 0.071785200 ubox
45 51 0.067955644 ubox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
showpage
end
%%EOF
