%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUUUAGAAGCCGUUGCUGCCCUCUCUGUCACCUGAAGCGGGGCCCUCUCCCAUCCCACCCUUGCCCCGCCUCCCUGCCCCCACCGGGCCGGCCCUGCCCGCCGCCGGACCCUGGCAUGUCAAGACCUGGUCCGCGCCUGCCUGCCCAGCCCGCGGAACCCCGGCGGCCCCGCGAGCUAGG\
) } def
/len { sequence length } bind def

/coor [
[104.69754791 405.43240356]
[92.75012970 414.83068848]
[78.11423492 418.93667603]
[63.02173615 417.12420654]
[49.77413177 409.66970825]
[40.39158630 397.70993042]
[36.30486298 383.06866455]
[38.13716507 367.97857666]
[45.60907745 354.74078369]
[57.58118439 345.37396240]
[72.22782898 341.30651855]
[74.01632690 326.41351318]
[75.80481720 311.52053833]
[77.46610260 296.61279297]
[79.00006866 281.69143677]
[80.53402710 266.77008057]
[71.34363556 249.77334595]
[83.34428406 233.59564209]
[84.36791992 218.63061523]
[85.39155579 203.66558838]
[86.41519165 188.70054626]
[87.43882751 173.73551941]
[88.46246338 158.77049255]
[81.86478424 157.08064270]
[75.50160980 154.65266418]
[69.45523071 151.51797485]
[63.80382919 147.71710205]
[58.62048340 143.29919434]
[53.97222137 138.32138062]
[49.91914749 132.84803772]
[46.51367569 126.94992065]
[43.79983902 120.70331573]
[41.81273651 114.18898773]
[40.57805634 107.49118805]
[40.11177063 100.69651794]
[40.41990662 93.89283752]
[41.49847794 87.16812897]
[27.36456299 82.14493561]
[11.77013493 84.81409454]
[2.36878848 73.26143646]
[-11.76512527 68.23824310]
[-25.89903831 63.21504974]
[-40.03295135 58.19185638]
[-54.16686630 53.16865921]
[-68.30078125 48.14546585]
[-82.43469238 43.12227249]
[-91.45738220 55.25003052]
[-103.65491486 64.17816162]
[-117.94271088 69.11277771]
[-133.05029297 69.61510468]
[-147.63430786 65.64046478]
[-160.39796448 57.54228973]
[-170.20632935 46.04065704]
[-176.18722534 32.15828705]
[-177.80886841 17.12958908]
[-174.92703247 2.29090858]
[-167.79798889 -11.03831196]
[-157.05563354 -21.67284775]
[-143.65518188 -28.66708183]
[-128.78819275 -31.39909172]
[-113.77661896 -29.62594986]
[-99.95528412 -23.50532150]
[-88.55316925 -13.58145046]
[-80.58414459 -0.73675913]
[-76.75682068 13.88661098]
[-77.41149902 28.98835945]
[-63.27758789 34.01155472]
[-49.14367294 39.03474808]
[-35.00975800 44.05794144]
[-20.87584496 49.08113480]
[-6.74193096 54.10432816]
[7.39198256 59.12752533]
[21.97545815 56.09907150]
[32.38775635 68.01102448]
[46.52167130 73.03421783]
[52.38698578 63.66701126]
[59.87360764 55.53700638]
[68.72660065 48.92104721]
[78.64450836 44.04441071]
[75.09304047 29.47090340]
[71.54157257 14.89739704]
[67.99011230 0.32389081]
[55.08487320 -9.20681953]
[54.63401413 -25.24353600]
[66.98339081 -35.48426056]
[82.65961456 -32.07318878]
[89.63723755 -17.62700081]
[82.56361389 -3.22757554]
[86.11508179 11.34593105]
[89.66654968 25.91943741]
[93.21801758 40.49294281]
[108.94724274 35.10454941]
[126.87658691 34.14704132]
[130.42805481 19.57353401]
[133.97952271 5.00002766]
[124.57571411 -7.49407244]
[125.45465851 -23.10693550]
[136.20132446 -34.46664429]
[151.74148560 -36.20949173]
[164.73754883 -27.51255989]
[169.05314636 -12.48227215]
[162.65061951 1.78452766]
[148.55302429 8.55149364]
[145.00155640 23.12500000]
[141.45008850 37.69850540]
[154.88424683 44.37109375]
[164.35057068 32.73542404]
[173.81687927 21.09975433]
[183.28320312 9.46408463]
[192.74952698 -2.17158461]
[198.05519104 -18.27395058]
[214.99702454 -17.63320541]
[219.07128906 -1.17608726]
[204.38519287 7.29473448]
[194.91886902 18.93040466]
[185.45256042 30.56607246]
[175.98623657 42.20174408]
[166.51991272 53.83741379]
[168.72766113 61.00510788]
[182.61358643 55.33224106]
[196.49949646 49.65937424]
[210.38540649 43.98651123]
[222.57801819 35.24922180]
[236.79220581 40.04054260]
[241.20745850 54.37601089]
[232.15203857 66.33424377]
[217.15695190 65.97106171]
[202.48568726 69.09420776]
[187.81443787 72.21734619]
[173.14317322 75.34049225]
[175.35092163 82.50818634]
[189.72348022 86.80114746]
[204.09603882 91.09410858]
[218.50473022 95.26422119]
[232.94848633 99.31117249]
[247.39224243 103.35812378]
[261.83599854 107.40507507]
[276.27975464 111.45202637]
[293.99548340 106.46920776]
[305.77676392 119.46196747]
[320.28753662 123.26173401]
[334.79827881 127.06149292]
[348.31173706 118.86624908]
[363.64199829 122.70788574]
[371.69390869 136.30723572]
[367.69042969 151.59603882]
[354.00671387 159.50372314]
[338.76107788 155.33879089]
[330.99850464 141.57223511]
[316.48776245 137.77247620]
[301.97702026 133.97271729]
[291.36575317 139.81134033]
[279.23419189 136.74688721]
[272.23281860 125.89578247]
[257.78906250 121.84883118]
[243.34529114 117.80187988]
[228.90153503 113.75492859]
[214.45777893 109.70797729]
[207.15122986 110.93379211]
[199.80308533 105.46666718]
[185.43051147 101.17370605]
[171.05795288 96.88074493]
[159.91383362 130.83219910]
[134.68243408 153.35536194]
[103.42749786 159.79412842]
[102.40386200 174.75915527]
[101.38022614 189.72418213]
[100.35658264 204.68922424]
[99.33294678 219.65425110]
[98.30931091 234.61927795]
[105.93885803 242.41372681]
[107.96417999 252.90722656]
[103.95163727 262.57489014]
[95.45538330 268.30404663]
[93.92142487 283.22540283]
[92.38745880 298.14675903]
[94.62641144 307.02774048]
[90.69780731 313.30902100]
[88.90931702 328.20199585]
[87.12082672 343.09500122]
[100.38800049 350.51461792]
[109.80197906 362.44967651]
[113.92720032 377.08013916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 180]
[12 179]
[13 178]
[14 176]
[15 175]
[16 174]
[18 170]
[19 169]
[20 168]
[21 167]
[22 166]
[23 165]
[37 75]
[38 74]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[79 91]
[80 90]
[81 89]
[82 88]
[93 105]
[94 104]
[95 103]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[131 162]
[132 161]
[133 160]
[134 158]
[135 157]
[136 156]
[137 155]
[138 154]
[140 151]
[141 150]
[142 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
