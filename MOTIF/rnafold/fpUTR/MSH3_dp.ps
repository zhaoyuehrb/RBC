%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MSH3)
} def

/sequence { (\
CCGCAGACGCCUGGGAACUGCGGCCGCGGGCUCGCGCUCCUCGCCAGGCCCUGCCGCCGGGCUGCCAUCCUUGCCCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.005705286 ubox
1 15 0.045813713 ubox
1 23 0.017589012 ubox
2 13 0.005681931 ubox
2 14 0.045979276 ubox
2 22 0.018191832 ubox
2 56 0.043839778 ubox
2 78 0.003416156 ubox
3 10 0.005832023 ubox
3 12 0.003235903 ubox
3 21 0.021264187 ubox
3 54 0.969857168 ubox
3 55 0.068882146 ubox
3 65 0.005815767 ubox
3 79 0.218467053 ubox
4 9 0.005870062 ubox
4 13 0.046239861 ubox
4 20 0.021271401 ubox
4 53 0.974226332 ubox
4 64 0.005827182 ubox
4 78 0.218902918 ubox
5 12 0.046294417 ubox
5 19 0.021253102 ubox
5 52 0.973741960 ubox
5 63 0.005762531 ubox
5 77 0.218786415 ubox
6 11 0.046108862 ubox
6 18 0.021162402 ubox
6 51 0.970809532 ubox
6 76 0.218091877 ubox
8 73 0.009680010 ubox
9 49 0.973179382 ubox
9 62 0.017080271 ubox
9 72 0.009208002 ubox
9 74 0.216259858 ubox
10 48 0.974379824 ubox
10 61 0.017311683 ubox
10 73 0.216404629 ubox
11 47 0.974377469 ubox
11 60 0.017312503 ubox
12 43 0.010689174 ubox
12 46 0.974049164 ubox
12 59 0.017271930 ubox
12 67 0.012019327 ubox
13 40 0.006027317 ubox
13 41 0.063901418 ubox
13 42 0.021810453 ubox
13 45 0.971906166 ubox
13 58 0.017212131 ubox
13 66 0.012403184 ubox
13 70 0.051831843 ubox
13 71 0.209461096 ubox
13 72 0.004873704 ubox
14 33 0.004202421 ubox
14 39 0.006876568 ubox
14 40 0.157709689 ubox
14 41 0.019710111 ubox
14 42 0.008411410 ubox
14 44 0.960188535 ubox
14 45 0.011837019 ubox
14 57 0.011727801 ubox
14 65 0.012393464 ubox
14 66 0.009206341 ubox
14 69 0.051100058 ubox
14 70 0.211321102 ubox
14 71 0.003670955 ubox
15 32 0.004222146 ubox
15 33 0.004487793 ubox
15 37 0.010457439 ubox
15 38 0.011190722 ubox
15 39 0.212803928 ubox
15 40 0.065903284 ubox
15 41 0.019761617 ubox
15 42 0.894914503 ubox
15 44 0.016322183 ubox
15 65 0.010574100 ubox
15 68 0.046032466 ubox
15 69 0.211426037 ubox
15 70 0.003645017 ubox
16 32 0.004398721 ubox
16 38 0.209177249 ubox
16 41 0.878462446 ubox
16 68 0.205754491 ubox
18 29 0.018070118 ubox
18 60 0.012777553 ubox
18 61 0.013401427 ubox
19 28 0.018450604 ubox
19 34 0.003367138 ubox
19 36 0.839752370 ubox
19 43 0.078302067 ubox
19 59 0.012621106 ubox
19 60 0.012177099 ubox
19 67 0.050099268 ubox
20 27 0.028017796 ubox
20 33 0.003778166 ubox
20 35 0.920577251 ubox
20 37 0.253927406 ubox
20 42 0.080594136 ubox
20 44 0.012243614 ubox
20 57 0.055994843 ubox
20 58 0.009893489 ubox
20 62 0.017226472 ubox
20 65 0.207916419 ubox
20 66 0.037783991 ubox
20 79 0.007050566 ubox
21 26 0.027994351 ubox
21 34 0.920886658 ubox
21 36 0.253278705 ubox
21 43 0.016626382 ubox
21 56 0.058233153 ubox
21 59 0.036023907 ubox
21 61 0.015711515 ubox
21 64 0.211447356 ubox
21 78 0.007064954 ubox
22 32 0.189756966 ubox
22 33 0.908350451 ubox
22 35 0.220988756 ubox
22 38 0.135591039 ubox
22 39 0.043754617 ubox
22 40 0.117291238 ubox
22 41 0.008327105 ubox
22 42 0.016032422 ubox
22 55 0.058642451 ubox
22 58 0.045750443 ubox
22 63 0.211174223 ubox
23 31 0.948157262 ubox
23 32 0.103326625 ubox
23 35 0.012164383 ubox
23 37 0.141639593 ubox
23 38 0.037098676 ubox
23 39 0.117028968 ubox
23 40 0.014412385 ubox
23 41 0.009833202 ubox
23 44 0.003192156 ubox
23 54 0.058654301 ubox
23 57 0.045930473 ubox
23 62 0.211325315 ubox
24 30 0.953636126 ubox
24 34 0.015714317 ubox
24 36 0.100367378 ubox
24 53 0.057102462 ubox
24 56 0.045908440 ubox
24 60 0.024476767 ubox
24 61 0.209906709 ubox
25 29 0.946701007 ubox
25 34 0.016916098 ubox
25 36 0.156785399 ubox
25 43 0.007526127 ubox
25 53 0.013518706 ubox
25 56 0.008617323 ubox
25 59 0.034569301 ubox
25 60 0.207984045 ubox
26 33 0.017634772 ubox
26 35 0.189135245 ubox
26 37 0.037237358 ubox
26 42 0.008144090 ubox
26 44 0.011634999 ubox
26 52 0.018936130 ubox
26 54 0.185130606 ubox
26 55 0.015016593 ubox
26 57 0.096626262 ubox
26 58 0.029379309 ubox
27 34 0.189671892 ubox
27 36 0.037276466 ubox
27 43 0.011663802 ubox
27 53 0.185770081 ubox
27 56 0.099736549 ubox
27 59 0.036244780 ubox
28 33 0.187083895 ubox
28 35 0.037178256 ubox
28 39 0.019227154 ubox
28 40 0.015188948 ubox
28 42 0.010739353 ubox
28 50 0.010977776 ubox
28 51 0.204553587 ubox
28 52 0.056737933 ubox
28 55 0.059057544 ubox
28 58 0.031073950 ubox
29 38 0.020553101 ubox
29 39 0.015228252 ubox
29 40 0.006235461 ubox
29 41 0.007212516 ubox
29 49 0.011513547 ubox
29 50 0.210424116 ubox
29 51 0.048540518 ubox
29 54 0.043579111 ubox
29 55 0.021490987 ubox
29 57 0.026172588 ubox
29 58 0.015304799 ubox
30 37 0.030571544 ubox
30 39 0.006134928 ubox
30 40 0.006483421 ubox
30 49 0.216044883 ubox
30 50 0.038392267 ubox
30 54 0.025156374 ubox
30 57 0.019738275 ubox
31 36 0.030653701 ubox
31 47 0.043888106 ubox
31 48 0.214505554 ubox
31 53 0.026989121 ubox
31 56 0.023286476 ubox
32 46 0.058288123 ubox
32 47 0.200295465 ubox
32 48 0.016916347 ubox
33 43 0.005657318 ubox
33 47 0.046106786 ubox
33 53 0.004488313 ubox
33 56 0.007171396 ubox
34 42 0.005550699 ubox
34 44 0.212520549 ubox
34 49 0.021169938 ubox
34 52 0.004161062 ubox
34 54 0.021889346 ubox
34 55 0.007102026 ubox
35 43 0.212804611 ubox
35 48 0.021159881 ubox
35 53 0.022008442 ubox
36 42 0.206444160 ubox
36 44 0.060254966 ubox
36 49 0.024869590 ubox
36 52 0.018334244 ubox
36 54 0.006944845 ubox
37 43 0.061509767 ubox
37 47 0.012035704 ubox
37 48 0.024812037 ubox
37 53 0.006947296 ubox
38 46 0.011651260 ubox
38 47 0.024089119 ubox
39 47 0.003946553 ubox
39 48 0.022027145 ubox
40 47 0.022234795 ubox
41 46 0.020357800 ubox
41 48 0.003647520 ubox
42 47 0.004495325 ubox
42 59 0.004605491 ubox
43 57 0.003339205 ubox
43 58 0.004491240 ubox
44 56 0.003521089 ubox
45 59 0.004588870 ubox
46 52 0.003208804 ubox
47 55 0.020939211 ubox
47 58 0.012899286 ubox
47 66 0.003432532 ubox
48 54 0.021018766 ubox
48 57 0.012922988 ubox
48 65 0.003443512 ubox
49 53 0.020868332 ubox
49 56 0.012904107 ubox
49 64 0.003439256 ubox
52 59 0.004590723 ubox
53 58 0.005663601 ubox
53 62 0.008530567 ubox
54 61 0.008558030 ubox
55 59 0.008500185 ubox
55 60 0.008820546 ubox
55 78 0.017498084 ubox
56 74 0.006086766 ubox
56 77 0.014574879 ubox
56 79 0.964096429 ubox
57 73 0.006081988 ubox
57 78 0.965347498 ubox
58 78 0.034139315 ubox
59 66 0.033263362 ubox
59 71 0.005610719 ubox
59 76 0.974792219 ubox
59 77 0.015058965 ubox
60 65 0.033435390 ubox
60 66 0.014337830 ubox
60 70 0.005717482 ubox
60 75 0.975577751 ubox
60 76 0.013695664 ubox
60 80 0.007262599 ubox
61 65 0.014141887 ubox
61 69 0.005682478 ubox
61 74 0.975594888 ubox
61 75 0.011990887 ubox
61 79 0.007429325 ubox
62 73 0.975122687 ubox
62 78 0.007434579 ubox
63 73 0.007791966 ubox
64 72 0.044989701 ubox
64 74 0.018528591 ubox
65 73 0.017143603 ubox
66 73 0.022391479 ubox
67 72 0.041810414 ubox
3 54 0.9500000 lbox
4 53 0.9500000 lbox
5 52 0.9500000 lbox
6 51 0.9500000 lbox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
56 79 0.9500000 lbox
57 78 0.9500000 lbox
59 76 0.9500000 lbox
60 75 0.9500000 lbox
61 74 0.9500000 lbox
62 73 0.9500000 lbox
showpage
end
%%EOF
