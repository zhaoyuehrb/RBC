%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MPZ)
} def

/sequence { (\
GUUCAGUUCCUGGUCCCCCACUUUCUCAACCCCACAGAUGCUCCGGGCCCCUGCCCCUGCCCCAGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003181488 ubox
1 14 0.003319726 ubox
1 21 0.028827909 ubox
1 30 0.816442461 ubox
1 35 0.061464764 ubox
1 39 0.018228857 ubox
1 41 0.032441795 ubox
1 48 0.007492896 ubox
1 54 0.010208446 ubox
1 60 0.026599646 ubox
1 66 0.077756612 ubox
2 6 0.003717955 ubox
2 13 0.007090979 ubox
2 20 0.027818087 ubox
2 29 0.819004615 ubox
2 34 0.059484064 ubox
2 37 0.003245902 ubox
2 38 0.017509254 ubox
2 40 0.031557290 ubox
2 47 0.007495417 ubox
2 53 0.008136760 ubox
2 59 0.024918891 ubox
2 65 0.076696387 ubox
3 13 0.145060068 ubox
3 28 0.775212726 ubox
3 36 0.003363162 ubox
3 37 0.014953250 ubox
3 38 0.056751880 ubox
3 46 0.007501997 ubox
3 64 0.067903823 ubox
4 12 0.198980161 ubox
4 37 0.060645523 ubox
4 40 0.019163365 ubox
4 45 0.008084197 ubox
4 53 0.047307628 ubox
4 59 0.079251724 ubox
5 11 0.199308702 ubox
5 22 0.067776855 ubox
5 23 0.007328168 ubox
5 24 0.020863143 ubox
5 26 0.811440400 ubox
5 39 0.020061342 ubox
5 42 0.217378549 ubox
5 52 0.048114420 ubox
5 58 0.080358364 ubox
5 67 0.081791880 ubox
6 10 0.195149812 ubox
6 21 0.072413798 ubox
6 22 0.006882146 ubox
6 23 0.022587210 ubox
6 25 0.824717655 ubox
6 30 0.069504406 ubox
6 35 0.065829065 ubox
6 39 0.064101724 ubox
6 41 0.232392510 ubox
6 51 0.048028640 ubox
6 54 0.039120879 ubox
6 57 0.079784387 ubox
6 60 0.013661632 ubox
6 66 0.090708145 ubox
7 20 0.055681195 ubox
7 29 0.069362759 ubox
7 34 0.063238670 ubox
7 37 0.010508045 ubox
7 38 0.067551464 ubox
7 40 0.230502942 ubox
7 53 0.039137207 ubox
7 59 0.013135575 ubox
7 65 0.082700204 ubox
8 28 0.063733206 ubox
8 36 0.012138010 ubox
8 37 0.065744075 ubox
8 38 0.081634168 ubox
8 64 0.067440623 ubox
9 37 0.078709558 ubox
9 47 0.039025639 ubox
10 37 0.300175776 ubox
10 46 0.039199385 ubox
10 65 0.162044575 ubox
11 20 0.840597622 ubox
11 28 0.024766920 ubox
11 34 0.117057008 ubox
11 36 0.302375679 ubox
11 45 0.039200727 ubox
11 53 0.004542378 ubox
11 64 0.165232088 ubox
12 18 0.081013856 ubox
12 19 0.879044179 ubox
12 22 0.092561595 ubox
12 23 0.008260887 ubox
12 24 0.006393379 ubox
12 25 0.021208493 ubox
12 26 0.022456469 ubox
12 27 0.026741783 ubox
12 31 0.107603700 ubox
12 32 0.030418087 ubox
12 33 0.125763417 ubox
12 35 0.298649741 ubox
12 42 0.004080024 ubox
12 44 0.042757199 ubox
12 49 0.070697446 ubox
12 50 0.042574905 ubox
12 51 0.045526126 ubox
12 52 0.003840154 ubox
12 55 0.010788923 ubox
12 61 0.027725502 ubox
12 62 0.023494465 ubox
12 63 0.165508320 ubox
12 67 0.003873461 ubox
13 17 0.082679875 ubox
13 18 0.872568738 ubox
13 21 0.098486149 ubox
13 22 0.007785215 ubox
13 23 0.007401027 ubox
13 24 0.020035481 ubox
13 25 0.027009224 ubox
13 26 0.019761731 ubox
13 30 0.110385978 ubox
13 31 0.031519844 ubox
13 32 0.125511390 ubox
13 35 0.018140669 ubox
13 39 0.027831557 ubox
13 41 0.005051781 ubox
13 43 0.042693623 ubox
13 48 0.071114771 ubox
13 49 0.042698152 ubox
13 50 0.045367203 ubox
13 51 0.003976206 ubox
13 54 0.010847252 ubox
13 60 0.027844705 ubox
13 61 0.025003220 ubox
13 62 0.164089025 ubox
13 66 0.005084353 ubox
14 20 0.094680131 ubox
14 29 0.105373879 ubox
14 34 0.021323520 ubox
14 38 0.034623719 ubox
14 40 0.004815448 ubox
14 47 0.059430680 ubox
14 53 0.010745444 ubox
14 59 0.026293097 ubox
14 65 0.004807584 ubox
15 37 0.035635112 ubox
15 46 0.059280278 ubox
15 47 0.061535196 ubox
16 45 0.059011143 ubox
16 46 0.061723279 ubox
16 47 0.041427524 ubox
17 45 0.061748645 ubox
17 46 0.041506080 ubox
17 47 0.013676064 ubox
18 45 0.041464770 ubox
18 46 0.013855523 ubox
19 40 0.037018884 ubox
19 45 0.013952346 ubox
19 59 0.012017628 ubox
20 39 0.037020459 ubox
20 58 0.010952618 ubox
21 37 0.038120500 ubox
21 65 0.005570894 ubox
22 29 0.020285318 ubox
22 36 0.036122530 ubox
22 37 0.008851517 ubox
22 38 0.020758896 ubox
22 64 0.005294842 ubox
23 28 0.020193279 ubox
23 29 0.015397889 ubox
23 36 0.008954840 ubox
23 37 0.021724963 ubox
23 38 0.014824857 ubox
24 28 0.014867354 ubox
24 36 0.019350954 ubox
24 37 0.012207718 ubox
24 38 0.180096027 ubox
25 37 0.189961979 ubox
25 65 0.003244782 ubox
26 36 0.180932861 ubox
26 38 0.086180387 ubox
27 37 0.092447391 ubox
27 40 0.014032166 ubox
27 59 0.003181704 ubox
28 39 0.013711708 ubox
30 47 0.009051105 ubox
31 46 0.009264860 ubox
31 47 0.017895841 ubox
32 45 0.009282220 ubox
32 46 0.018256527 ubox
33 40 0.049363836 ubox
33 45 0.018337929 ubox
33 59 0.006840803 ubox
34 39 0.043474853 ubox
34 58 0.006597013 ubox
35 53 0.042543452 ubox
35 59 0.137008890 ubox
36 42 0.029259962 ubox
36 52 0.042797524 ubox
36 58 0.138197349 ubox
36 67 0.091518039 ubox
37 41 0.030483192 ubox
37 43 0.055788074 ubox
37 51 0.042784205 ubox
37 57 0.138126631 ubox
37 66 0.100274567 ubox
38 42 0.048730739 ubox
39 64 0.065611760 ubox
40 44 0.019859635 ubox
40 48 0.042948753 ubox
40 54 0.021739141 ubox
40 58 0.004306755 ubox
40 60 0.405379004 ubox
40 63 0.066808903 ubox
40 66 0.789993643 ubox
41 47 0.042957749 ubox
41 53 0.021682931 ubox
41 59 0.406466610 ubox
41 65 0.791305640 ubox
42 46 0.038700161 ubox
42 64 0.766810531 ubox
44 53 0.003987484 ubox
44 59 0.074268876 ubox
45 51 0.015625983 ubox
45 52 0.006700559 ubox
45 55 0.010066842 ubox
45 56 0.599314092 ubox
45 57 0.061048947 ubox
45 58 0.043996605 ubox
45 61 0.020605961 ubox
45 62 0.781534639 ubox
45 63 0.080240301 ubox
46 50 0.015396134 ubox
46 51 0.006735666 ubox
46 54 0.009639605 ubox
46 55 0.601773658 ubox
46 56 0.052646862 ubox
46 57 0.043214058 ubox
46 60 0.018295342 ubox
46 61 0.783272795 ubox
46 62 0.074621732 ubox
46 67 0.005883500 ubox
47 54 0.602670566 ubox
47 55 0.042343443 ubox
47 56 0.042845658 ubox
47 60 0.783845937 ubox
47 61 0.068128793 ubox
47 66 0.007193111 ubox
48 53 0.600808104 ubox
48 59 0.782578636 ubox
48 65 0.007328603 ubox
51 65 0.016120195 ubox
52 59 0.004076418 ubox
52 64 0.016318706 ubox
53 58 0.035937192 ubox
53 60 0.058749736 ubox
53 63 0.015612362 ubox
53 66 0.015700672 ubox
54 59 0.058701831 ubox
54 65 0.015570765 ubox
57 65 0.166933473 ubox
58 64 0.169134850 ubox
59 63 0.167134821 ubox
59 66 0.248079238 ubox
60 65 0.247855030 ubox
1 30 0.9500000 lbox
2 29 0.9500000 lbox
3 28 0.9500000 lbox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
45 62 0.9500000 lbox
46 61 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
showpage
end
%%EOF
