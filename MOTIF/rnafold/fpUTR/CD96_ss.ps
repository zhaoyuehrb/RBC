%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUGUCUACGUUUCAUUUCCUGGGGGCUUGCCAAGUGAUAAACAGACCCAGGCGUGUGUGGUAGAGUUCGGGUUUUUUAGCACGAAGUGGGUGGCUGGAGUUUGCUUGAAAACAUCAAUUGACUUUGUGAUCAUUACAGAAAUGCUGGUGUAAGGUGUUCAGAAGACA\
) } def
/len { sequence length } bind def

/coor [
[-19.43322563 140.96833801]
[-22.58571243 140.30792236]
[-24.97557640 138.77467346]
[-39.74769211 141.37939453]
[-49.97705078 157.29008484]
[-68.26743317 160.65299988]
[-82.97476196 149.79934692]
[-97.64122772 152.94496155]
[-112.30768585 156.09059143]
[-126.97414398 159.23622131]
[-141.64060974 162.38185120]
[-146.43798828 176.90534973]
[-157.78591919 187.01086426]
[-172.57017517 190.05918884]
[-186.80001831 185.32974243]
[-196.68539429 174.18771362]
[-211.35185242 177.33334351]
[-226.01831055 180.47897339]
[-233.68461609 190.88246155]
[-245.99288940 193.18457031]
[-256.22302246 186.68472290]
[-270.94479370 189.56037903]
[-285.66656494 192.43603516]
[-300.38833618 195.31169128]
[-315.11010742 198.18736267]
[-329.83187866 201.06301880]
[-330.85992432 216.11643982]
[-335.74996948 230.39053345]
[-344.16857910 242.91207886]
[-355.54180908 252.82733154]
[-369.09417725 259.46026611]
[-383.90167236 262.35858154]
[-398.95471191 261.32473755]
[-413.22692871 256.42919922]
[-425.74520874 248.00572205]
[-435.65606689 236.62867737]
[-442.28375244 223.07374573]
[-445.17639160 208.26512146]
[-444.13671875 193.21250916]
[-439.23565674 178.94218445]
[-430.80737305 166.42713928]
[-419.42648315 156.52067566]
[-405.86898804 149.89822388]
[-391.05926514 147.01132202]
[-376.00704956 148.05679321]
[-361.73861694 152.96336365]
[-349.22683716 161.39649963]
[-339.32476807 172.78118896]
[-332.70755005 186.34124756]
[-317.98577881 183.46557617]
[-303.26400757 180.58992004]
[-288.54223633 177.71426392]
[-273.82046509 174.83860779]
[-259.09869385 171.96295166]
[-246.52926636 159.73968506]
[-229.16394043 165.81250000]
[-214.49748230 162.66688538]
[-199.83102417 159.52125549]
[-195.38435364 145.30532837]
[-184.34559631 135.15634155]
[-169.61161804 131.87367249]
[-155.11761475 136.43666077]
[-144.78622437 147.71537781]
[-130.11976624 144.56976318]
[-115.45330811 141.42413330]
[-100.78684998 138.27850342]
[-86.12039185 135.13288879]
[-82.12670898 124.39831543]
[-73.34502411 116.85987091]
[-61.89414597 114.48958588]
[-50.61202240 117.99359131]
[-42.35241699 126.60727692]
[-27.58029938 124.00254822]
[-12.91383934 120.85692596]
[1.62716460 117.17464447]
[16.16816902 113.49236298]
[30.70917320 109.81008148]
[45.25017548 106.12779236]
[59.79117966 102.44551086]
[74.33218384 98.76322937]
[81.44761658 79.31922913]
[101.79837036 70.18614197]
[124.04158783 78.95210266]
[134.69679260 68.39433289]
[145.35200500 57.83655548]
[156.00720215 47.27878189]
[166.66241455 36.72100830]
[177.31761169 26.16323471]
[187.97282410 15.60546017]
[198.62802124 5.04768610]
[202.98503113 -10.16175556]
[217.47171021 -13.62369823]
[228.12692261 -24.18147278]
[238.78213501 -34.73924637]
[240.17074585 -39.85001373]
[243.10430908 -43.52847290]
[246.76809692 -45.42400742]
[250.32720947 -45.56483841]
[261.54782104 -55.51961136]
[272.76846313 -65.47438049]
[277.95669556 -80.42070770]
[292.61209106 -83.07935333]
[303.83273315 -93.03412628]
[315.05337524 -102.98889923]
[326.27398682 -112.94367218]
[326.96679688 -128.73277283]
[338.67749023 -139.34571838]
[354.45840454 -138.48603821]
[364.94692993 -126.66375732]
[363.92044067 -110.89283752]
[351.98794556 -100.52987671]
[336.22875977 -101.72303772]
[325.00814819 -91.76827240]
[313.78750610 -81.81349945]
[302.56686401 -71.85872650]
[298.18121338 -57.62442780]
[282.72323608 -54.25374985]
[271.50259399 -44.29898071]
[260.28198242 -34.34420776]
[249.33990479 -24.08404160]
[238.68469238 -13.52626705]
[228.02949524 -2.96849275]
[224.43461609 11.48578644]
[209.18580627 15.70289135]
[198.53059387 26.26066589]
[187.87538147 36.81843948]
[177.22018433 47.37621307]
[166.56497192 57.93398666]
[155.90977478 68.49176025]
[145.25456238 79.04953766]
[134.59936523 89.60730743]
[135.83805847 104.55607605]
[148.08569336 113.21607208]
[160.33332825 121.87606049]
[169.18356323 124.28944397]
[172.72442627 130.80934143]
[184.81089783 139.69287109]
[196.89738464 148.57640076]
[208.98385620 157.45993042]
[221.07032776 166.34346008]
[235.10317993 160.10046387]
[250.37577820 161.72625732]
[262.77987671 170.78350830]
[268.97885132 184.83584595]
[267.30520630 200.10327148]
[258.20913696 212.47892761]
[244.13743591 218.63383484]
[228.87532043 216.91232300]
[216.52822876 207.77751160]
[210.41748047 193.68658447]
[212.18681335 178.42994690]
[200.10032654 169.54641724]
[188.01385498 160.66288757]
[175.92738342 151.77935791]
[163.84089661 142.89582825]
[151.67332458 134.12368774]
[139.42568970 125.46370697]
[127.17806244 116.80371094]
[117.54575348 125.19459534]
[105.83893585 128.86639404]
[94.14494324 127.58533478]
[84.38840485 121.96615601]
[78.01446533 113.30423737]
[63.47346115 116.98651886]
[48.93245697 120.66880035]
[34.39145660 124.35108185]
[19.85045052 128.03337097]
[5.30944681 131.71565247]
[-9.23155689 135.39793396]
[-12.28899288 138.60205078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 73]
[4 72]
[7 67]
[8 66]
[9 65]
[10 64]
[11 63]
[16 58]
[17 57]
[18 56]
[21 54]
[22 53]
[23 52]
[24 51]
[25 50]
[26 49]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[80 163]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[92 122]
[93 121]
[94 120]
[98 119]
[99 118]
[100 117]
[102 115]
[103 114]
[104 113]
[105 112]
[132 158]
[133 157]
[134 156]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
