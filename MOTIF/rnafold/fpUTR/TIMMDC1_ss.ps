%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCCCCGGUCGGGCGGGACUUCCUGUGUCGUAUUUCCAAGGACUCCAAAGCGAGGCCGGGGACUGAAGGUGUGGGUGUCGAGCCCUCUGGCAGAGGGUUAACCUGGGUCAAAUGCACGGAUUCUCACCUCGUACAGUUACGCUCUCCCGCGGCACGUCCGCGAGGACUUGAAGUCCUGAGCGCUCAAGUUUGUCCGUAGGUCGAGAGAAGGCC\
) } def
/len { sequence length } bind def

/coor [
[103.05532837 143.89906311]
[84.93582153 141.34649658]
[69.42104340 131.64474487]
[57.31172943 140.49711609]
[45.20241547 149.34948730]
[33.09309769 158.20185852]
[20.98378181 167.05422974]
[8.87446594 175.90660095]
[-3.23484993 184.75897217]
[-15.34416580 193.61134338]
[-17.90229225 208.97668457]
[-30.30896568 217.78173828]
[-44.94170761 215.24827576]
[-57.05102158 224.10064697]
[-64.35821533 242.88966370]
[-83.65618896 244.12503052]
[-95.50041199 253.32907104]
[-107.34463501 262.53311157]
[-109.72077942 275.20901489]
[-119.77342987 282.63137817]
[-131.79063416 281.26065063]
[-143.76869202 290.28982544]
[-155.74674988 299.31903076]
[-167.72480774 308.34820557]
[-163.88252258 323.05551147]
[-165.96592712 338.11300659]
[-173.65730286 351.22448730]
[-185.78376770 360.39059448]
[-200.49613953 364.21350098]
[-215.55085754 362.11032104]
[-228.65222168 354.40170288]
[-237.80235291 342.26318359]
[-241.60592651 327.54580688]
[-239.48292542 312.49383545]
[-231.75708008 299.40264893]
[-219.60653687 290.26849365]
[-204.88417053 286.48428345]
[-189.83502197 288.62707520]
[-176.75398254 296.37014771]
[-164.77592468 287.34094238]
[-152.79786682 278.31176758]
[-140.81980896 269.28259277]
[-134.84465027 252.78112793]
[-116.54867554 250.68888855]
[-104.70445251 241.48484802]
[-92.86022949 232.28080750]
[-92.50607300 222.07145691]
[-86.46497345 213.56295776]
[-76.53406525 209.70332336]
[-65.90339661 211.99131775]
[-53.79407883 203.13894653]
[-51.76814270 188.42735291]
[-39.61367798 179.27728271]
[-24.19653702 181.50202942]
[-12.08722019 172.64965820]
[0.02209544 163.79728699]
[12.13141155 154.94491577]
[24.24072647 146.09254456]
[36.35004425 137.24017334]
[48.45935822 128.38780212]
[60.56867599 119.53543091]
[57.61182022 111.81967163]
[56.14949036 103.68717957]
[56.23324585 95.42467499]
[57.86013031 87.32349396]
[60.97278595 79.66925812]
[65.46146393 72.73184967]
[71.16790771 66.75585938]
[63.41508865 53.91476059]
[55.66226959 41.07366562]
[41.90589142 33.25876617]
[41.95143890 18.36422920]
[34.19862366 5.52312994]
[26.44580460 -7.31796837]
[18.69298553 -20.15906715]
[10.94016838 -33.00016403]
[0.27583459 -32.89561462]
[-9.39649105 -37.19321060]
[-16.35968971 -45.05669022]
[-19.40815163 -55.02352142]
[-18.05617142 -65.27663422]
[-12.61399174 -73.97567749]
[-19.79393959 -87.14566040]
[-26.97388840 -100.31563568]
[-34.15383530 -113.48561859]
[-41.33378601 -126.65559387]
[-48.51373291 -139.82557678]
[-55.69367981 -152.99555969]
[-68.58396912 -164.00813293]
[-61.57015610 -179.44323730]
[-44.79663467 -176.97639465]
[-42.52370071 -160.17550659]
[-35.34375381 -147.00552368]
[-28.16380501 -133.83554077]
[-20.98385811 -120.66556549]
[-13.80390930 -107.49558258]
[-6.62396145 -94.32560730]
[0.55598694 -81.15562439]
[19.59895706 -77.03812408]
[29.62584877 -59.97809601]
[23.78126717 -40.75298309]
[31.53408432 -27.91188431]
[39.28690338 -15.07078648]
[47.03972244 -2.22968793]
[54.79253769 10.61141109]
[67.99438477 17.50782967]
[68.50337219 33.32084656]
[76.25618744 46.16194534]
[84.00900269 59.00304413]
[99.87078857 55.99493408]
[115.74996185 58.90984344]
[129.50921631 67.35542297]
[139.29656982 80.19491577]
[143.79467773 95.70014191]
[158.75428772 96.80017853]
[165.49325562 86.27454376]
[176.00642395 79.65054321]
[188.26661682 78.13289642]
[199.94042969 81.94863892]
[208.83226013 90.31556702]
[213.29727173 101.60169983]
[228.21813965 103.14041901]
[243.13900757 104.67914581]
[258.05987549 106.21787262]
[272.98074341 107.75659180]
[287.91250610 109.18575287]
[302.85437012 110.50527954]
[317.79620361 111.82479858]
[332.73806763 113.14432526]
[347.68917847 114.35413361]
[362.64880371 115.45417786]
[376.97921753 108.74975586]
[389.10479736 117.39958191]
[404.06442261 118.49962616]
[419.02401733 119.59966278]
[433.98364258 120.69969940]
[446.06875610 104.76862335]
[465.18484497 99.41423035]
[483.51828003 106.64394379]
[493.68432617 123.35812378]
[508.68270874 123.57832336]
[523.68109131 123.79851532]
[538.67950439 124.01871490]
[553.67785645 124.23891449]
[553.20574951 117.18457031]
[555.83728027 109.48760223]
[561.81158447 102.40091705]
[570.89477539 97.23217773]
[585.69958496 94.82043457]
[600.50445557 92.40869141]
[615.30932617 89.99694824]
[630.11413574 87.58521271]
[640.61602783 75.45713043]
[656.63946533 76.25003815]
[665.89270020 89.35567474]
[661.27734375 104.72052002]
[646.33404541 110.55798340]
[632.52587891 102.39005280]
[617.72106934 104.80179596]
[602.91619873 107.21353912]
[588.11132812 109.62528229]
[573.30651855 112.03702545]
[572.42620850 127.01116943]
[586.84643555 131.14102173]
[601.26672363 135.27088928]
[615.68701172 139.40074158]
[630.10729980 143.53059387]
[644.52752686 147.66044617]
[661.41925049 146.20867920]
[667.49035645 162.03833008]
[653.95996094 172.25427246]
[640.39770508 162.08071899]
[625.97741699 157.95086670]
[611.55712891 153.82101440]
[597.13690186 149.69116211]
[582.71661377 145.56129456]
[568.29632568 141.43144226]
[553.45770264 139.23728943]
[538.45928955 139.01710510]
[523.46087646 138.79690552]
[508.46252441 138.57670593]
[493.46414185 138.35650635]
[489.23818970 147.79005432]
[482.08901978 155.30880737]
[472.81216431 160.03921509]
[462.45227051 161.42005920]
[452.18548584 159.26893616]
[443.18588257 153.80587769]
[436.49130249 145.63113403]
[432.88360596 135.65930176]
[417.92398071 134.55926514]
[402.96438599 133.45922852]
[388.00476074 132.35919189]
[374.74435425 139.14230347]
[361.54876709 130.41378784]
[346.58914185 129.31375122]
[339.68939209 131.95759583]
[331.41851807 128.08616638]
[316.47668457 126.76664734]
[301.53482056 125.44712830]
[286.59298706 124.12760925]
[279.65518188 126.66987610]
[271.44201660 122.67745972]
[256.52114868 121.13874054]
[241.60028076 119.60001373]
[226.67941284 118.06129456]
[211.75854492 116.52256775]
[200.58949280 130.20419312]
[183.29072571 134.47833252]
[166.74546814 127.44977570]
[157.65425110 111.75978851]
[142.69464111 110.65975189]
[134.66778564 127.10364532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 61]
[4 60]
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[13 51]
[14 50]
[16 46]
[17 45]
[18 44]
[21 42]
[22 41]
[23 40]
[24 39]
[68 109]
[69 108]
[70 107]
[72 105]
[73 104]
[74 103]
[75 102]
[76 101]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[114 212]
[115 211]
[121 207]
[122 206]
[123 205]
[124 204]
[125 203]
[126 201]
[127 200]
[128 199]
[129 198]
[130 196]
[131 195]
[133 193]
[134 192]
[135 191]
[136 190]
[140 182]
[141 181]
[142 180]
[143 179]
[144 178]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
[168 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
