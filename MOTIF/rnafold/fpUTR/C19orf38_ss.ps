%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGCCCUGGUUCUCCUUUCCCCGAUCUGGCCUCACAGGAGGAGUUGGCGGGGAGCCUUGGGCCCCUCUGGCCUCAGCCGGAUUUCCCAGCCAAACGCAGAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[162.79261780 160.83906555]
[156.79747009 155.24765015]
[152.58273315 148.18440247]
[150.49488831 140.20042419]
[150.71388245 131.92359924]
[137.11926270 125.58432770]
[123.52464294 119.24505615]
[109.93002319 112.90578461]
[93.33350372 114.85673523]
[83.75761414 101.16172791]
[69.98437500 95.22053528]
[56.21113205 89.27933502]
[42.43789291 83.33814240]
[28.66464996 77.39694214]
[14.89140797 71.45574951]
[1.11816680 65.51454926]
[-12.65507507 59.57335663]
[-19.99592781 64.23190308]
[-28.50123024 65.49855042]
[-36.69752121 63.23186874]
[-43.19634247 57.89586258]
[-46.92940140 50.46749878]
[-47.32384491 42.25850296]
[-60.31422424 34.75850296]
[-73.30460358 27.25850105]
[-86.29499054 19.75850105]
[-95.44549561 18.13399124]
[-99.54956818 11.84673309]
[-112.31631470 3.97208428]
[-119.15486145 3.37748742]
[-123.86801910 -0.13848336]
[-125.57762909 -4.75001955]
[-137.86491394 -13.35366631]
[-150.15219116 -21.95731354]
[-162.43946838 -30.56095886]
[-178.81448364 -31.45043564]
[-185.98934937 -46.19673538]
[-176.58317566 -59.63013077]
[-160.27224731 -57.93149567]
[-153.83583069 -42.84823990]
[-141.54853821 -34.24459457]
[-129.26126099 -25.64094734]
[-116.97398376 -17.03730011]
[-104.44166565 -8.79466534]
[-91.67491913 -0.92001700]
[-78.79499054 6.76812029]
[-65.80460358 14.26812077]
[-52.81422424 21.76811981]
[-39.82384491 29.26811981]
[-18.38590050 26.77043533]
[-6.71387815 45.80011368]
[7.05936337 51.74131012]
[20.83260536 57.68250656]
[34.60584641 63.62370300]
[48.37908936 69.56490326]
[62.15232849 75.50609589]
[75.92556763 81.44729614]
[89.69881439 87.38848877]
[100.86084747 83.73889160]
[111.57516479 88.54660797]
[116.26930237 99.31116486]
[129.86392212 105.65043640]
[143.45854187 111.98971558]
[157.05314636 118.32898712]
[177.61793518 108.09183502]
[199.01225281 115.73537445]
[208.22680664 136.22419739]
[222.82247925 139.68342590]
[237.41815186 143.14266968]
[252.01382446 146.60191345]
[266.60949707 150.06114197]
[275.54675293 137.79733276]
[288.46362305 129.91079712]
[303.37554932 127.57675171]
[318.00540161 131.12010193]
[330.13113403 139.97061157]
[337.92330933 152.75448608]
[340.22113037 167.50743103]
[354.81680298 170.96665955]
[370.02935791 166.62046814]
[380.62921143 177.08432007]
[395.22488403 180.54354858]
[409.57928467 173.37901306]
[424.06930542 180.26513672]
[427.57943726 195.91949463]
[417.41702271 208.33337402]
[401.37777710 207.98393250]
[391.76565552 195.13922119]
[377.16998291 191.67999268]
[363.00143433 196.27362061]
[351.35757446 185.56233215]
[336.76190186 182.10310364]
[328.08737183 194.25553894]
[315.38662720 202.18249512]
[300.57858276 204.64959717]
[285.91464233 201.25018311]
[273.63635254 192.47193909]
[265.63290405 179.62719727]
[263.15026855 164.65681458]
[248.55458069 161.19758606]
[233.95890808 157.73834229]
[219.36323547 154.27909851]
[204.76756287 150.81987000]
[200.04722595 157.32121277]
[193.68150330 162.26750183]
[186.16474915 165.25532532]
[178.08612061 166.03419495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 64]
[6 63]
[7 62]
[8 61]
[10 58]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[16 52]
[17 51]
[23 49]
[24 48]
[25 47]
[26 46]
[28 45]
[29 44]
[32 43]
[33 42]
[34 41]
[35 40]
[67 103]
[68 102]
[69 101]
[70 100]
[71 99]
[78 92]
[79 91]
[81 89]
[82 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
