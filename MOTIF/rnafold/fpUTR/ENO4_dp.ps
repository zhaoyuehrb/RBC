%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ENO4)
} def

/sequence { (\
AGGGACGCUCGUGGGACCCCAGGCUAAACCCCGCUGUAGCCUUAAAUCUCCUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.159702822 ubox
1 42 0.021756705 ubox
1 43 0.191956217 ubox
1 49 0.009119920 ubox
1 52 0.067573206 ubox
2 8 0.183221358 ubox
2 9 0.281691284 ubox
2 10 0.518850583 ubox
2 18 0.005124397 ubox
2 19 0.035602259 ubox
2 20 0.058222059 ubox
2 30 0.003842005 ubox
2 31 0.017210293 ubox
2 32 0.013717100 ubox
2 41 0.024764683 ubox
2 42 0.225155324 ubox
2 43 0.016490893 ubox
2 48 0.010414672 ubox
2 49 0.005174436 ubox
2 50 0.033517564 ubox
2 51 0.071323119 ubox
2 52 0.081145586 ubox
2 55 0.019365966 ubox
3 8 0.311350712 ubox
3 9 0.510725265 ubox
3 10 0.173648661 ubox
3 17 0.005139213 ubox
3 18 0.035770377 ubox
3 19 0.058231640 ubox
3 20 0.004746778 ubox
3 29 0.003854035 ubox
3 30 0.017286180 ubox
3 31 0.013691742 ubox
3 40 0.024307789 ubox
3 41 0.229168652 ubox
3 42 0.016908540 ubox
3 47 0.009884303 ubox
3 48 0.005617673 ubox
3 49 0.034164066 ubox
3 50 0.071003728 ubox
3 51 0.084167705 ubox
3 52 0.003819751 ubox
3 54 0.017325522 ubox
3 55 0.014382410 ubox
4 8 0.500549253 ubox
4 9 0.136269670 ubox
4 10 0.169172168 ubox
4 17 0.035795756 ubox
4 18 0.058056863 ubox
4 19 0.004763097 ubox
4 29 0.017295143 ubox
4 30 0.013628152 ubox
4 40 0.228964251 ubox
4 41 0.017161074 ubox
4 42 0.003198525 ubox
4 43 0.031823499 ubox
4 47 0.004438263 ubox
4 48 0.062769543 ubox
4 49 0.036642855 ubox
4 50 0.084148275 ubox
4 51 0.003981059 ubox
4 54 0.012519100 ubox
5 9 0.147494622 ubox
5 12 0.028193021 ubox
5 37 0.018888961 ubox
5 42 0.039003221 ubox
5 47 0.060560632 ubox
5 49 0.080347538 ubox
6 11 0.029877870 ubox
6 13 0.014000720 ubox
6 36 0.019674692 ubox
7 12 0.009194767 ubox
7 24 0.021713359 ubox
7 35 0.018628042 ubox
7 37 0.226752612 ubox
7 40 0.110090166 ubox
8 14 0.043488629 ubox
8 15 0.022415360 ubox
8 23 0.021695976 ubox
8 36 0.227558594 ubox
8 39 0.110709223 ubox
9 13 0.039213304 ubox
9 14 0.020669547 ubox
9 15 0.003839841 ubox
9 16 0.035526534 ubox
9 22 0.017457533 ubox
9 38 0.109278649 ubox
10 14 0.004799013 ubox
10 15 0.036335622 ubox
10 22 0.011948420 ubox
10 33 0.039938991 ubox
10 36 0.085105524 ubox
11 17 0.003709760 ubox
11 32 0.040060698 ubox
11 34 0.252082555 ubox
11 35 0.004711451 ubox
11 54 0.957287470 ubox
12 16 0.003352139 ubox
12 21 0.032118740 ubox
12 33 0.252174399 ubox
12 44 0.004470212 ubox
12 53 0.959635185 ubox
13 19 0.007263347 ubox
13 20 0.047638225 ubox
13 30 0.007754485 ubox
13 31 0.041289683 ubox
13 32 0.252166820 ubox
13 41 0.006910245 ubox
13 42 0.018852245 ubox
13 43 0.004062733 ubox
13 48 0.004498295 ubox
13 49 0.003989010 ubox
13 50 0.048386207 ubox
13 51 0.055330595 ubox
13 52 0.959130581 ubox
14 18 0.007211692 ubox
14 19 0.047502424 ubox
14 20 0.012133364 ubox
14 29 0.007765704 ubox
14 30 0.042476769 ubox
14 31 0.251968162 ubox
14 40 0.006899828 ubox
14 41 0.019249154 ubox
14 42 0.003217953 ubox
14 47 0.004412493 ubox
14 48 0.005350225 ubox
14 49 0.051508406 ubox
14 50 0.055575838 ubox
14 51 0.959591768 ubox
15 19 0.011994550 ubox
15 24 0.005891984 ubox
15 29 0.043459869 ubox
15 30 0.250973816 ubox
15 40 0.019246277 ubox
15 47 0.004930576 ubox
15 48 0.076998713 ubox
15 49 0.018482124 ubox
15 50 0.959286768 ubox
16 37 0.003929098 ubox
16 47 0.080728158 ubox
16 49 0.937621490 ubox
17 23 0.061073398 ubox
17 36 0.004066918 ubox
18 22 0.060721931 ubox
20 36 0.013084541 ubox
21 35 0.012498858 ubox
21 42 0.928636646 ubox
21 43 0.075696861 ubox
22 30 0.011665693 ubox
22 32 0.003646892 ubox
22 34 0.010306159 ubox
22 35 0.017738309 ubox
22 41 0.965999297 ubox
22 42 0.013432083 ubox
23 29 0.016167509 ubox
23 30 0.003227645 ubox
23 31 0.003642657 ubox
23 34 0.019274060 ubox
23 40 0.966172975 ubox
23 41 0.009645969 ubox
24 33 0.020500402 ubox
24 39 0.966197774 ubox
25 36 0.022299734 ubox
25 38 0.957621490 ubox
26 35 0.043703291 ubox
26 37 0.870494585 ubox
28 37 0.312482500 ubox
29 36 0.388849879 ubox
33 40 0.011635082 ubox
34 39 0.011624062 ubox
36 54 0.017901461 ubox
37 53 0.017978466 ubox
38 52 0.017976079 ubox
39 51 0.017826211 ubox
43 53 0.005942252 ubox
44 52 0.006835436 ubox
11 54 0.9500000 lbox
12 53 0.9500000 lbox
13 52 0.9500000 lbox
14 51 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
showpage
end
%%EOF
