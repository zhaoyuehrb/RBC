%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCUUCCGUGUCUGCGCCCUGAGACAUUUUUGGCGCCGGCCCCAGCCUGAGCGGGGACGGCGGCCGGGAGGGCGCGGCCCGGGUUCCCGUUCCCCGCGGAGCC\
) } def
/len { sequence length } bind def

/coor [
[50.17636108 129.89274597]
[36.27601624 135.53016663]
[22.37567139 141.16757202]
[8.47532749 146.80499268]
[-5.42501688 152.44239807]
[-19.32536125 158.07981873]
[-23.12238312 174.48315430]
[-35.78395844 185.32919312]
[-52.24635315 186.53826904]
[-66.07707214 177.83435059]
[-79.80426025 183.88119507]
[-93.53144073 189.92805481]
[-107.25862885 195.97489929]
[-120.98580933 202.02175903]
[-134.71299744 208.06860352]
[-137.86740112 223.26167297]
[-149.37223816 233.67408752]
[-164.80368042 235.30203247]
[-178.22801208 227.51956177]
[-184.48330688 213.31918335]
[-181.16427612 198.16122437]
[-169.54716492 187.87423706]
[-154.09896851 186.41377258]
[-140.75984192 194.34141541]
[-127.03266144 188.29457092]
[-113.30548096 182.24772644]
[-99.57829285 176.20086670]
[-85.85111237 170.15402222]
[-72.12392426 164.10716248]
[-70.49041748 150.76731873]
[-62.38088608 139.91413879]
[-49.85151291 134.48001099]
[-36.16984177 135.99984741]
[-24.96277428 144.17947388]
[-11.06243038 138.54205322]
[2.83791351 132.90464783]
[16.73825836 127.26722717]
[30.63860130 121.62981415]
[44.53894424 115.99240112]
[58.35422516 110.14962769]
[72.08141327 104.10277557]
[85.80859375 98.05592346]
[94.22568512 86.89150238]
[108.14455414 88.21688843]
[121.87173462 82.17003632]
[128.59486389 75.74468231]
[136.09645081 76.15410614]
[149.99679565 70.51669312]
[156.44396973 54.33807373]
[172.25616455 47.87963486]
[187.57229614 54.64728928]
[201.29948425 48.60043716]
[215.02665710 42.55358505]
[228.75384521 36.50673294]
[242.48103333 30.45988274]
[256.20822144 24.41303062]
[269.93539429 18.36617851]
[283.66259766 12.31932735]
[297.38977051 6.27247620]
[311.11694336 0.22562487]
[314.50765991 -14.80132771]
[325.96264648 -24.83309746]
[340.95095825 -26.18023300]
[353.70581055 -18.53484726]
[367.43298340 -24.58169937]
[381.16018677 -30.62855148]
[394.88735962 -36.67540359]
[408.61453247 -42.72225189]
[411.76895142 -57.91532516]
[423.27377319 -68.32772827]
[438.70523071 -69.95568848]
[452.12954712 -62.17321396]
[458.38485718 -47.97283173]
[455.06582642 -32.81487274]
[443.44869995 -22.52788734]
[428.00051880 -21.06742668]
[414.66137695 -28.99506950]
[400.93420410 -22.94821739]
[387.20703125 -16.90136719]
[373.47982788 -10.85451508]
[359.75265503 -4.80766344]
[356.78436279 9.76379108]
[345.67355347 19.91336632]
[330.53985596 21.59397125]
[317.16378784 13.95280933]
[303.43661499 19.99966049]
[289.70944214 26.04651260]
[275.98223877 32.09336472]
[262.25506592 38.14021301]
[248.52787781 44.18706512]
[234.80068970 50.23391724]
[221.07351685 56.28076935]
[207.34632874 62.32762146]
[193.61914062 68.37447357]
[190.63729858 81.00579834]
[180.74401855 89.70520782]
[167.44601440 91.08766174]
[155.63421631 84.41703796]
[141.73387146 90.05445099]
[127.91858673 95.89722443]
[114.19140625 101.94407654]
[105.77431488 113.10849762]
[91.85544586 111.78311157]
[78.12826538 117.82996368]
[64.40107727 123.87680817]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[40 105]
[41 104]
[42 103]
[44 101]
[45 100]
[47 99]
[48 98]
[51 94]
[52 93]
[53 92]
[54 91]
[55 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
