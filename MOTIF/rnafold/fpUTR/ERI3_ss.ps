%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGUCAGAGUGCGCGGAGGUGAGUCGGUGUGUUGUGGACUCGUGGUGCUGGCUGCCGCUGUUCAGGCGGCCGGGAACGGGCGGUGGGGAGCGGGCGGAGCUGGCCCUGCCUCUGCCUGGCCGGCGCCGCAGUCGGCGCGGGCCGCGCCCGCCGCCGCCAACUGCCCUGAGCGCUUGCUGAGGCCGAGGGAGACGUCGGGGCCUGCACCUGGAGGGAGCCUGCCGCGCUGGCCCCGAGGAGGGGGCGUUGCC\
) } def
/len { sequence length } bind def

/coor [
[135.14901733 537.52752686]
[132.19992065 522.82031250]
[129.25082397 508.11306763]
[126.30171967 493.40582275]
[123.35262299 478.69857788]
[120.40352631 463.99133301]
[117.45442963 449.28411865]
[114.50534058 434.57687378]
[112.27957916 432.91589355]
[110.56830597 430.28527832]
[109.73970032 426.87322998]
[110.08827972 422.99627686]
[111.79306793 419.07025146]
[109.57490540 404.23516846]
[107.35675049 389.40008545]
[105.13858795 374.56500244]
[102.92042542 359.72991943]
[100.70226288 344.89483643]
[98.39240265 330.07373047]
[95.99092865 315.26721191]
[93.58945465 300.46069336]
[91.18798828 285.65420532]
[75.05610657 278.41567993]
[66.44116211 262.79467773]
[68.97082520 244.97665405]
[81.81623840 232.14796448]
[79.04926300 217.40538025]
[76.28229523 202.66278076]
[73.51532745 187.92019653]
[69.20455170 181.94248962]
[70.80648804 172.97822571]
[68.22206879 158.20254517]
[65.63764954 143.42686462]
[63.05323029 128.65118408]
[65.17297363 143.50065613]
[58.58272934 156.97540283]
[45.55990219 164.41891479]
[30.60482216 163.25892639]
[18.88555145 153.89630127]
[14.45194912 139.56651306]
[18.83614540 125.22151184]
[30.52308273 115.81856537]
[45.47442245 114.60713196]
[30.49277496 115.34893799]
[15.51112938 116.09074402]
[9.41817570 126.26092529]
[-0.71714610 132.17768860]
[-12.32956791 132.47698975]
[-22.54353333 127.20001984]
[-28.88526535 117.75457764]
[-43.88067627 118.12559509]
[-58.87608719 118.49661255]
[-73.87149811 118.86763000]
[-88.86691284 119.23864746]
[-103.86231995 119.60966492]
[-118.85773468 119.98068237]
[-133.85314941 120.35169220]
[-148.84855652 120.72270966]
[-157.54476929 133.57400513]
[-172.14537048 138.82774353]
[-187.03614807 134.46376038]
[-196.49128723 122.16010284]
[-196.87509155 106.64777374]
[-188.03999329 93.89158630]
[-173.38323975 88.79653931]
[-158.54067993 93.32180023]
[-149.21957397 105.72730255]
[-134.22415161 105.35628510]
[-119.22874451 104.98526764]
[-104.23333740 104.61425018]
[-89.23792267 104.24323273]
[-74.24251556 103.87221527]
[-59.24710464 103.50120544]
[-44.25169373 103.13018799]
[-29.25628281 102.75917053]
[-17.43000221 88.75992584]
[1.19457185 87.86339569]
[14.76932335 101.10909271]
[29.75096893 100.36728668]
[44.73261642 99.62548065]
[54.16761398 87.96440125]
[51.76613998 73.15789032]
[49.36466599 58.35137177]
[46.96319580 43.54485321]
[44.56172180 28.73833847]
[42.16024780 13.93182278]
[39.75877380 -0.87469393]
[37.35729980 -15.68121052]
[34.86430359 -30.47259140]
[32.27988434 -45.24827576]
[27.73026657 -53.13655853]
[29.75605774 -60.22260284]
[27.35458374 -75.02912140]
[24.95310974 -89.83563232]
[20.03646660 -104.00696564]
[12.75170517 -117.11926270]
[5.46694374 -130.23155212]
[-1.81781793 -143.34384155]
[-9.10257912 -156.45614624]
[-16.38734055 -169.56843567]
[-23.75305176 -182.63542175]
[-31.19943237 -195.65661621]
[-46.61923981 -198.25729370]
[-56.72041702 -210.19464111]
[-56.73348999 -225.83221436]
[-46.65228653 -237.78643799]
[-31.23684692 -240.41288757]
[-17.76586723 -232.47142029]
[-12.59993267 -217.71177673]
[-18.17823982 -203.10299683]
[-10.73186111 -190.08180237]
[-4.69987869 -185.84730530]
[-3.27504730 -176.85319519]
[4.00971413 -163.74090576]
[11.29447556 -150.62860107]
[18.57923698 -137.51631165]
[25.86399841 -124.40402222]
[33.14876175 -111.29172516]
[47.89134979 -114.05869293]
[49.92585754 -128.92007446]
[51.96036530 -143.78146362]
[53.99487305 -158.64285278]
[56.02938080 -173.50424194]
[50.23535156 -188.22631836]
[59.62739944 -199.78654480]
[61.66190720 -214.64793396]
[63.69641876 -229.50930786]
[65.73092651 -244.37069702]
[67.76543427 -259.23208618]
[69.79994202 -274.09347534]
[63.10483932 -289.06369019]
[72.93974304 -302.18646240]
[89.18734741 -299.96215820]
[95.13350677 -284.67901611]
[84.66132355 -272.05895996]
[82.62681580 -257.19757080]
[80.59230804 -242.33619690]
[78.55780029 -227.47480774]
[76.52329254 -212.61341858]
[74.48878479 -197.75202942]
[80.42833710 -184.09294128]
[70.89076233 -171.46972656]
[68.85625458 -156.60833740]
[66.82174683 -141.74696350]
[64.78723907 -126.88557434]
[62.75273514 -112.02418518]
[39.75962830 -92.23710632]
[42.16110229 -77.43059540]
[44.56257248 -62.62407684]
[47.05556870 -47.83269501]
[49.63998795 -33.05701065]
[53.87649918 -27.02643967]
[52.16381454 -18.08268356]
[54.56528854 -3.27616763]
[56.96676254 11.53034878]
[59.36823654 26.33686447]
[61.76971054 41.14338303]
[64.17118073 55.94989777]
[66.57265472 70.75641632]
[68.97412872 85.56292725]
[79.31018066 74.52077484]
[92.87329865 69.39595032]
[106.68249512 70.72895813]
[117.94802856 77.70017242]
[124.63495636 88.40644073]
[139.44146729 86.00496674]
[154.24798584 83.60349274]
[169.05450439 81.20201874]
[183.86102295 78.80054474]
[198.66754150 76.39907837]
[213.47404480 73.99760437]
[221.41799927 69.54589081]
[228.47845459 71.65917206]
[243.31353760 69.44100952]
[258.13461304 67.13114929]
[272.94113159 64.72967529]
[287.74765015 62.32820129]
[300.13110352 52.48131943]
[313.93292236 58.08120346]
[328.73944092 55.67972946]
[336.58761597 42.15420151]
[351.31121826 36.88641357]
[365.95819092 42.36364746]
[373.61270142 55.99972916]
[370.66049194 71.35610962]
[358.49554443 81.18198395]
[342.86175537 80.83786774]
[331.14089966 70.48624420]
[316.33438110 72.88771820]
[305.01000977 82.56283569]
[290.14913940 77.13471985]
[275.34262085 79.53619385]
[260.53610229 81.93766785]
[254.45358276 86.09926605]
[245.53169250 84.27609253]
[230.69660950 86.49425507]
[215.87551880 88.80411530]
[201.06901550 91.20558929]
[186.26249695 93.60706329]
[171.45597839 96.00853729]
[156.64945984 98.41001129]
[141.84294128 100.81148529]
[127.03643036 103.21295929]
[119.78613281 121.95856476]
[100.45585632 131.88587952]
[77.82891083 126.06676483]
[80.41333008 140.84245300]
[82.99774933 155.61813354]
[85.58216858 170.39381409]
[88.25791168 185.15322876]
[91.02488708 199.89581299]
[93.79185486 214.63839722]
[96.55882263 229.38099670]
[108.43248749 233.18859863]
[117.51538086 241.62605286]
[122.13231659 253.05372620]
[121.46731567 265.28866577]
[115.70716095 276.02160645]
[105.99449921 283.25271606]
[108.39597321 298.05923462]
[110.79744720 312.86575317]
[113.19892120 327.67227173]
[117.65062714 335.61621094]
[115.53735352 342.67666626]
[117.75551605 357.51174927]
[119.97367096 372.34683228]
[122.19183350 387.18191528]
[124.40999603 402.01699829]
[126.62815857 416.85208130]
[129.21257019 431.62777710]
[132.16166687 446.33502197]
[135.11076355 461.04223633]
[138.05986023 475.74948120]
[141.00895691 490.45672607]
[143.95805359 505.16397095]
[146.90715027 519.87121582]
[149.85624695 534.57843018]
[156.25349426 536.78332520]
[161.62496948 540.81323242]
[165.47178650 546.25451660]
[167.44879150 552.56439209]
[167.39546204 559.12512207]
[165.34846497 565.30450439]
[161.53504944 570.51660156]
[156.34831238 574.27752686]
[158.19885254 589.16290283]
[160.04939270 604.04833984]
[168.00361633 619.02050781]
[155.81848145 630.80859375]
[141.11790466 622.36291504]
[145.16398621 605.89886475]
[143.31344604 591.01342773]
[141.46289062 576.12805176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 237]
[2 236]
[3 235]
[4 234]
[5 233]
[6 232]
[7 231]
[8 230]
[13 229]
[14 228]
[15 227]
[16 226]
[17 225]
[18 224]
[19 222]
[20 221]
[21 220]
[22 219]
[26 213]
[27 212]
[28 211]
[29 210]
[31 209]
[32 208]
[33 207]
[34 206]
[43 80]
[44 79]
[45 78]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 151]
[90 150]
[92 149]
[93 148]
[94 147]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[101 111]
[102 110]
[119 146]
[120 145]
[121 144]
[122 143]
[123 142]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[165 203]
[166 202]
[167 201]
[168 200]
[169 199]
[170 198]
[171 197]
[173 196]
[174 195]
[175 193]
[176 192]
[177 191]
[179 189]
[180 188]
[245 253]
[246 252]
[247 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
