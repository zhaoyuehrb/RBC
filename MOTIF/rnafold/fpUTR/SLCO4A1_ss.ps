%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGGCGGGGGCGGCCCCAGCGGAUGAAUGAAGCGGCGCGUGGCUGCCGGGGAGGCCAGAGCGUGGAGCGCUGCGCGGCGCGGCGGCCGGGCCCUCGAGACGGGGACGGACACACCAGCCCCUCGGAUACCACUUGGCCACUCCCGCUGAGGCCACUCCCACUGCGUGGCUGAAGCCUCGAGGUCACCAGGCGGAGGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[435.76580811 734.87304688]
[441.79519653 722.47552490]
[433.77325439 709.80078125]
[425.75131226 697.12609863]
[417.72937012 684.45135498]
[409.70739746 671.77667236]
[396.36303711 665.16021729]
[395.52062988 649.36145020]
[387.49868774 636.68676758]
[379.47674561 624.01202393]
[371.45480347 611.33734131]
[363.43286133 598.66259766]
[350.08847046 592.04614258]
[349.24606323 576.24743652]
[341.22412109 563.57269287]
[333.20217896 550.89794922]
[325.18023682 538.22326660]
[311.83587646 531.60681152]
[310.99346924 515.80810547]
[302.97152710 503.13336182]
[294.94958496 490.45864868]
[286.92764282 477.78393555]
[278.90570068 465.10922241]
[270.88372803 452.43450928]
[264.90820312 452.94149780]
[258.98934937 451.75125122]
[253.60276794 448.93643188]
[249.18766785 444.70117188]
[246.11112976 439.36630249]
[244.63754272 433.34524536]
[244.90609741 427.11193848]
[246.91792297 421.16348267]
[250.53421021 415.98059082]
[243.90843201 402.52328491]
[231.34501648 394.52267456]
[232.19076538 378.72409058]
[225.56498718 365.26678467]
[218.93920898 351.80947876]
[202.80184937 347.08035278]
[194.92097473 331.84408569]
[200.60569763 315.30209351]
[193.77546692 301.94741821]
[186.94523621 288.59271240]
[180.11500549 275.23800659]
[165.39633179 273.11700439]
[154.62147522 262.61145020]
[152.06889343 247.60018921]
[158.92407227 233.80480957]
[152.09384155 220.45011902]
[145.26361084 207.09541321]
[138.43338013 193.74072266]
[131.60314941 180.38603210]
[124.77291870 167.03132629]
[118.92607117 162.50582886]
[117.94210815 153.42048645]
[111.31632996 139.96318054]
[104.69055176 126.50588226]
[91.80970764 130.43058777]
[76.71062469 127.59506989]
[63.03016663 117.03343964]
[54.69998169 99.71382141]
[54.94943619 78.54935455]
[44.42402267 67.86218262]
[29.22786140 63.45908356]
[25.80986214 48.96195984]
[15.28444481 38.27478790]
[4.75902843 27.58761978]
[-8.11172390 26.70833397]
[-16.65850449 17.58695793]
[-16.69608688 5.48799086]
[-27.05730247 -5.35844755]
[-37.41851807 -16.20488548]
[-47.77973175 -27.05132484]
[-58.14094543 -37.89776230]
[-68.50215912 -48.74420166]
[-78.86337280 -59.59064102]
[-94.17630005 -66.86735535]
[-91.42300415 -83.59624481]
[-74.58569336 -85.58156586]
[-68.01693726 -69.95185852]
[-57.65572357 -59.10541534]
[-47.29450607 -48.25897980]
[-36.93329239 -37.41254044]
[-26.57207870 -26.56610107]
[-16.21086311 -15.71966267]
[-5.84964848 -4.87322378]
[11.23294353 -0.86160511]
[15.44619846 17.06220245]
[25.97161484 27.74937248]
[36.49703217 38.43654251]
[50.94034195 42.07522583]
[55.11119080 57.33676529]
[65.63660431 68.02393341]
[79.24194336 61.70770645]
[77.87132263 46.77045822]
[76.50069427 31.83320999]
[75.13006592 16.89596176]
[73.75944519 1.95871294]
[66.29109955 -13.26167297]
[78.84922028 -24.65157509]
[93.27043152 -15.73726749]
[88.69669342 0.58808696]
[90.06731415 15.52533531]
[91.43794250 30.46258354]
[92.80857086 45.39982986]
[94.17919159 60.33707809]
[101.63649750 61.13620758]
[116.55110931 62.73446655]
[124.00841522 63.53359604]
[128.51293945 49.22592926]
[122.40401459 34.39149094]
[130.31884766 20.43674278]
[146.18585205 18.06657600]
[157.83322144 29.09918022]
[156.32609558 45.07128525]
[142.82060242 53.73045731]
[138.31607056 68.03812408]
[138.31886292 102.60375214]
[118.14785004 119.88009644]
[124.77363586 133.33740234]
[131.39941406 146.79470825]
[138.12760925 160.20109558]
[144.95783997 173.55580139]
[151.78808594 186.91049194]
[158.61831665 200.26518250]
[165.44854736 213.61988831]
[172.27877808 226.97457886]
[187.47659302 229.49099731]
[198.15374756 240.34695435]
[200.36502075 255.23233032]
[193.46969604 268.40777588]
[200.29992676 281.76248169]
[207.13015747 295.11718750]
[213.96040344 308.47186279]
[227.17044067 311.11254883]
[236.31326294 320.73965454]
[238.21258545 333.68319702]
[232.39649963 345.18371582]
[239.02229309 358.64102173]
[245.64807129 372.09832764]
[258.68539429 381.06149292]
[257.36572266 395.89752197]
[263.99151611 409.35482788]
[285.55181885 420.79724121]
[283.55847168 444.41256714]
[291.58041382 457.08728027]
[299.60235596 469.76199341]
[307.62429810 482.43670654]
[315.64624023 495.11141968]
[323.66818237 507.78613281]
[337.58633423 515.30914307]
[337.85494995 530.20129395]
[345.87689209 542.87603760]
[353.89883423 555.55072021]
[361.92077637 568.22546387]
[375.83895874 575.74847412]
[376.10757446 590.64062500]
[384.12951660 603.31536865]
[392.15145874 615.99011230]
[400.17340088 628.66479492]
[408.19534302 641.33953857]
[422.11349487 648.86248779]
[422.38214111 663.75469971]
[430.40408325 676.42944336]
[438.42602539 689.10412598]
[446.44796753 701.77886963]
[454.46990967 714.45355225]
[471.36093140 715.30554199]
[484.28842163 725.95074463]
[488.28488159 742.04199219]
[481.96792603 757.19171143]
[490.18222046 769.74261475]
[498.39651489 782.29351807]
[510.84197998 785.69061279]
[517.42480469 796.31671143]
[515.07861328 808.18609619]
[523.10058594 820.86077881]
[531.12249756 833.53552246]
[539.14447021 846.21020508]
[547.16638184 858.88494873]
[557.90350342 860.65447998]
[565.73156738 867.89373779]
[568.22827148 878.03363037]
[564.80322266 887.66589355]
[572.43487549 900.57934570]
[580.06658936 913.49279785]
[594.60925293 921.07183838]
[595.04656982 937.46514893]
[580.92858887 945.80871582]
[566.77868652 937.51934814]
[567.15313721 921.12451172]
[559.52142334 908.21105957]
[551.88977051 895.29754639]
[534.39739990 887.06250000]
[534.49169922 866.90686035]
[526.46972656 854.23217773]
[518.44781494 841.55743408]
[510.42587280 828.88275146]
[502.40390015 816.20800781]
[486.44607544 808.91040039]
[485.84561157 790.50787354]
[477.63131714 777.95690918]
[469.41702271 765.40600586]
[456.07708740 765.99456787]
[444.09262085 759.86462402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[4 165]
[5 164]
[6 163]
[8 161]
[9 160]
[10 159]
[11 158]
[12 157]
[14 155]
[15 154]
[16 153]
[17 152]
[19 150]
[20 149]
[21 148]
[22 147]
[23 146]
[24 145]
[33 143]
[34 142]
[36 140]
[37 139]
[38 138]
[41 134]
[42 133]
[43 132]
[44 131]
[48 127]
[49 126]
[50 125]
[51 124]
[52 123]
[53 122]
[55 121]
[56 120]
[57 119]
[62 93]
[63 92]
[65 90]
[66 89]
[67 88]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[109 117]
[110 116]
[171 203]
[172 202]
[173 201]
[176 199]
[177 198]
[178 197]
[179 196]
[180 195]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
