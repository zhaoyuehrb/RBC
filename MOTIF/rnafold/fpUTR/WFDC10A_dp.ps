%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WFDC10A)
} def

/sequence { (\
GUAGACAGCUCUGCAGGGAAGUCUGUGACAACCUGGCCAGACAUAGGGCUCACGAUCUGAUCAGAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.011633733 ubox
1 14 0.079102899 ubox
1 26 0.007476747 ubox
1 29 0.012905145 ubox
1 53 0.009841486 ubox
2 8 0.012223088 ubox
2 13 0.079247332 ubox
2 25 0.020978282 ubox
2 28 0.012460238 ubox
2 52 0.009724565 ubox
2 59 0.007673288 ubox
3 12 0.079309488 ubox
3 24 0.037416559 ubox
3 58 0.008496898 ubox
4 9 0.003633024 ubox
4 11 0.079314590 ubox
4 23 0.039995590 ubox
4 51 0.009899273 ubox
4 57 0.008576339 ubox
4 62 0.012246285 ubox
4 68 0.081421259 ubox
5 10 0.071454034 ubox
5 22 0.040005165 ubox
5 26 0.014771900 ubox
5 50 0.007584718 ubox
5 56 0.008379281 ubox
5 61 0.012217799 ubox
5 67 0.066511628 ubox
6 21 0.039962097 ubox
6 25 0.015025837 ubox
6 59 0.013063867 ubox
6 66 0.049634821 ubox
7 24 0.015043707 ubox
7 50 0.019047914 ubox
7 58 0.013053403 ubox
8 23 0.014916626 ubox
8 49 0.021707603 ubox
8 57 0.012995241 ubox
8 67 0.957553768 ubox
9 18 0.038536592 ubox
9 21 0.014274420 ubox
9 48 0.021730288 ubox
9 64 0.005879171 ubox
9 66 0.993528286 ubox
10 17 0.038356670 ubox
10 19 0.015444673 ubox
10 20 0.010133272 ubox
10 41 0.022399437 ubox
10 47 0.021517766 ubox
10 55 0.012511640 ubox
10 63 0.005701077 ubox
10 65 0.995025900 ubox
11 16 0.037766147 ubox
11 17 0.003456964 ubox
11 18 0.018490638 ubox
11 40 0.024376067 ubox
11 46 0.021417177 ubox
11 54 0.012663297 ubox
11 64 0.995226164 ubox
12 17 0.018142920 ubox
12 27 0.005191307 ubox
12 39 0.024367762 ubox
12 45 0.021168463 ubox
12 52 0.006243192 ubox
12 63 0.994445784 ubox
13 26 0.013247144 ubox
13 37 0.018119509 ubox
13 38 0.020958826 ubox
13 44 0.016543875 ubox
13 51 0.006204694 ubox
13 62 0.987351836 ubox
14 25 0.018632504 ubox
14 27 0.009051376 ubox
14 35 0.142191185 ubox
14 36 0.019660564 ubox
14 59 0.560918359 ubox
15 24 0.022192862 ubox
15 26 0.009214985 ubox
15 34 0.144854320 ubox
15 58 0.566330109 ubox
16 23 0.023175516 ubox
16 24 0.004626657 ubox
16 33 0.145130289 ubox
16 34 0.028999452 ubox
16 57 0.564502331 ubox
16 58 0.228164689 ubox
16 62 0.071036915 ubox
17 22 0.021460093 ubox
17 23 0.016294263 ubox
17 24 0.025546265 ubox
17 32 0.144953735 ubox
17 33 0.059906461 ubox
17 34 0.003327239 ubox
17 56 0.345246018 ubox
17 57 0.231226314 ubox
17 58 0.740398177 ubox
17 61 0.099099744 ubox
17 62 0.020430328 ubox
18 22 0.010823362 ubox
18 23 0.031894800 ubox
18 32 0.060513572 ubox
18 33 0.003794993 ubox
18 51 0.018108791 ubox
18 56 0.142003410 ubox
18 57 0.744075542 ubox
18 61 0.024955625 ubox
18 62 0.015672402 ubox
18 68 0.004230234 ubox
19 50 0.015936429 ubox
19 56 0.628351713 ubox
19 61 0.015942316 ubox
19 67 0.004240376 ubox
20 34 0.003611173 ubox
20 50 0.025565384 ubox
20 58 0.184039124 ubox
21 29 0.157992523 ubox
21 32 0.003544698 ubox
21 33 0.003674705 ubox
21 42 0.027292761 ubox
21 49 0.027425669 ubox
21 53 0.041358276 ubox
21 56 0.605270698 ubox
21 57 0.185280368 ubox
21 61 0.022194848 ubox
22 28 0.158276264 ubox
22 31 0.003598361 ubox
22 41 0.027349208 ubox
22 47 0.020267305 ubox
22 48 0.023419694 ubox
22 52 0.036813613 ubox
22 55 0.904668711 ubox
22 60 0.022553001 ubox
22 65 0.006864408 ubox
23 27 0.156964012 ubox
23 40 0.027370682 ubox
23 46 0.025230050 ubox
23 47 0.018428244 ubox
23 54 0.902561805 ubox
23 59 0.022564908 ubox
23 64 0.007195877 ubox
23 66 0.007440482 ubox
24 30 0.004576479 ubox
24 39 0.027347351 ubox
24 43 0.003749174 ubox
24 45 0.028904328 ubox
24 46 0.010856936 ubox
24 52 0.017469786 ubox
24 54 0.351245578 ubox
24 63 0.007118626 ubox
24 65 0.007556030 ubox
25 29 0.004766047 ubox
25 32 0.013883658 ubox
25 37 0.006383036 ubox
25 38 0.026539947 ubox
25 42 0.005331570 ubox
25 44 0.029391576 ubox
25 49 0.028308371 ubox
25 51 0.018167393 ubox
25 53 0.983340371 ubox
25 62 0.006788587 ubox
26 31 0.013888176 ubox
26 36 0.008794271 ubox
26 41 0.005256708 ubox
26 43 0.029849877 ubox
26 48 0.028208184 ubox
26 52 0.984243929 ubox
26 63 0.008232083 ubox
27 42 0.029753839 ubox
27 51 0.984534841 ubox
27 57 0.004591106 ubox
27 62 0.008806471 ubox
27 68 0.015770261 ubox
28 50 0.959955070 ubox
28 56 0.004505660 ubox
28 61 0.008765001 ubox
28 67 0.015977201 ubox
29 35 0.034490548 ubox
29 59 0.008928632 ubox
29 66 0.015978120 ubox
30 34 0.028026391 ubox
30 58 0.008622196 ubox
31 67 0.013644629 ubox
32 47 0.962591067 ubox
32 48 0.097238999 ubox
32 66 0.014455978 ubox
33 40 0.007733965 ubox
33 46 0.963042149 ubox
33 47 0.094963324 ubox
33 64 0.023636042 ubox
34 39 0.007304513 ubox
34 43 0.113068249 ubox
34 45 0.955626972 ubox
34 46 0.083981087 ubox
34 52 0.037849044 ubox
34 54 0.004121449 ubox
34 63 0.023672730 ubox
35 42 0.164852816 ubox
35 44 0.944361027 ubox
35 50 0.126649560 ubox
35 51 0.043800082 ubox
35 53 0.004066094 ubox
35 62 0.023665532 ubox
36 49 0.243397115 ubox
36 50 0.005063415 ubox
36 61 0.021831634 ubox
37 47 0.014255917 ubox
37 48 0.243552598 ubox
38 46 0.016524219 ubox
38 47 0.243363180 ubox
38 59 0.027109924 ubox
39 58 0.027132376 ubox
40 57 0.027126907 ubox
41 56 0.025082050 ubox
44 59 0.004995378 ubox
45 58 0.006015078 ubox
46 57 0.006136802 ubox
47 56 0.006054152 ubox
47 68 0.034176465 ubox
48 67 0.038660169 ubox
49 66 0.039045202 ubox
50 60 0.103852556 ubox
50 65 0.039083725 ubox
51 59 0.111561359 ubox
51 64 0.039050992 ubox
52 58 0.103265929 ubox
52 67 0.004935445 ubox
53 59 0.018572626 ubox
53 66 0.005277584 ubox
54 58 0.011663350 ubox
54 62 0.040659663 ubox
54 68 0.023113282 ubox
55 61 0.040493052 ubox
55 67 0.022907769 ubox
56 60 0.035942444 ubox
56 65 0.025902153 ubox
56 66 0.010206807 ubox
57 64 0.028830027 ubox
57 66 0.019796874 ubox
58 63 0.026987053 ubox
58 65 0.019923663 ubox
59 68 0.012098319 ubox
60 67 0.012161595 ubox
61 66 0.011500995 ubox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
17 58 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
32 47 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
showpage
end
%%EOF
