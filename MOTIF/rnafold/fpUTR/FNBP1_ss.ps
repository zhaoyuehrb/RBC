%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGCGGCUGCUGCUUCCUCGGGCCAUUUUGCUGUGGAGCGGCGGGGAGGAGGAGCCGCCGAGGAGACCCCGGGCGAGGAGCUGCGAGCCGGAGGAGGCCGCGCGGACUCCGGGCUUUCCGCCGUCGCGGGGAUCUCGGGGGGCAAAGGGAUCGCCGGGGAGGGGGACCAGAGAGCCGCGCCCGCCGCGCGGAGCGCCCCUUCGCGUCCCCUGCACC\
) } def
/len { sequence length } bind def

/coor [
[252.29789734 72.31118774]
[237.68772888 75.70864105]
[223.07754517 79.10608673]
[208.46736145 82.50354004]
[193.88182068 86.00521851]
[179.32164001 89.61095428]
[164.76145935 93.21668243]
[150.20129395 96.82241058]
[135.64111328 100.42814636]
[121.08094025 104.03387451]
[106.52076721 107.63961029]
[92.74594879 113.57716370]
[80.12715149 121.68677521]
[67.50834656 129.79638672]
[61.98556900 137.06359863]
[54.65094757 137.93020630]
[41.91762924 145.85881042]
[29.18431091 153.78739929]
[16.45099449 161.71598816]
[3.71767616 169.64459229]
[-9.01564121 177.57318115]
[-21.74895859 185.50178528]
[-25.40097427 202.61297607]
[-40.01248550 211.60877991]
[-56.28159714 207.33615112]
[-68.90039825 215.44575500]
[-81.51920319 223.55537415]
[-67.62602997 229.21043396]
[-63.24466705 243.55628967]
[-71.60767365 256.00860596]
[-86.54484558 257.38006592]
[-97.03556061 246.65884399]
[-95.34029388 231.75581360]
[-108.50547791 238.94453430]
[-121.67066193 246.13327026]
[-129.73922729 260.41018677]
[-146.13793945 260.29049683]
[-153.99720764 245.89729309]
[-145.23210144 232.03710938]
[-128.85940552 232.96809387]
[-115.69421387 225.77935791]
[-102.52902985 218.59062195]
[-89.62881470 210.93656921]
[-77.01001740 202.82696533]
[-64.39121246 194.71734619]
[-63.44200897 181.87098694]
[-55.14479446 171.76473999]
[-42.35414505 168.22850037]
[-29.67755508 172.76846313]
[-16.94423676 164.83987427]
[-4.21091938 156.91127014]
[8.52239799 148.98268127]
[21.25571632 141.05407715]
[33.98903275 133.12548828]
[46.72235107 125.19689178]
[59.39873505 117.17758179]
[72.01753998 109.06797028]
[84.63633728 100.95835876]
[83.24604034 86.02292633]
[69.34721375 80.38176727]
[55.44839096 74.74060822]
[41.54956818 69.09944916]
[27.13655090 75.00730133]
[13.12152576 69.08837128]
[7.57811594 55.31135559]
[-6.32070875 49.67019653]
[-22.48056412 52.46145630]
[-32.76848221 39.69075394]
[-26.60113525 24.49549675]
[-10.32296181 22.50725937]
[-0.67954987 35.77136993]
[13.21927452 41.41252899]
[26.79635048 35.39600372]
[40.97209549 40.91894531]
[47.19072723 55.20062637]
[61.08955002 60.84178543]
[74.98837280 66.48294067]
[88.88719940 72.12409973]
[95.51833344 76.03102875]
[100.18115997 81.24148560]
[102.66290283 87.13835907]
[102.91503143 93.07942963]
[117.47521210 89.47370148]
[132.03538513 85.86797333]
[146.59556580 82.26223755]
[161.15573120 78.65650940]
[175.71591187 75.05077362]
[190.27609253 71.44504547]
[197.84780884 66.34774780]
[205.06991577 67.89336395]
[219.68009949 64.49591064]
[234.29026794 61.09845734]
[248.90045166 57.70100784]
[264.47283936 40.50829697]
[285.70755005 47.79840469]
[300.03811646 43.36732864]
[314.36871338 38.93625641]
[321.63708496 33.41500854]
[328.93563843 34.54580307]
[343.32803345 30.31981468]
[375.84063721 1.31375134]
[389.00582886 -5.87498331]
[402.17102051 -13.06371784]
[415.33621216 -20.25245285]
[428.50140381 -27.44118690]
[441.66656494 -34.62992096]
[454.83175659 -41.81865692]
[467.99694824 -49.00739288]
[468.46359253 -64.29560852]
[476.46707153 -77.21229553]
[489.77285767 -84.34127045]
[504.76022339 -83.85621643]
[517.40728760 -75.98748779]
[530.57244873 -83.17621613]
[543.68597412 -90.45877075]
[556.74719238 -97.83476257]
[569.80841064 -105.21075439]
[582.86956787 -112.58675385]
[595.93078613 -119.96274567]
[608.72033691 -127.80022430]
[621.22210693 -136.08920288]
[633.72381592 -144.37817383]
[640.94989014 -158.45275879]
[655.83300781 -159.03720093]
[668.33477783 -167.32617188]
[675.56085205 -181.40075684]
[690.44396973 -181.98519897]
[702.94567871 -190.27416992]
[710.17181396 -204.34875488]
[725.05493164 -204.93319702]
[737.55664062 -213.22216797]
[750.05834961 -221.51113892]
[757.28448486 -235.58572388]
[772.16760254 -236.17016602]
[784.66931152 -244.45913696]
[797.17102051 -252.74810791]
[809.67272949 -261.03707886]
[822.17449951 -269.32608032]
[834.67620850 -277.61505127]
[833.64630127 -292.93936157]
[840.43096924 -306.71847534]
[853.20513916 -315.24584961]
[868.53265381 -316.22769165]
[882.29040527 -309.39987183]
[890.77770996 -296.59902954]
[891.71148682 -281.26855469]
[884.84057617 -267.53225708]
[872.01318359 -259.08511353]
[856.67987061 -258.19937134]
[842.96514893 -265.11331177]
[830.46343994 -256.82434082]
[817.96173096 -248.53536987]
[805.46002197 -240.24639893]
[792.95831299 -231.95742798]
[780.45660400 -223.66844177]
[774.12469482 -210.18673706]
[758.34735107 -209.00942993]
[745.84564209 -200.72044373]
[733.34393311 -192.43147278]
[727.01202393 -178.94976807]
[711.23468018 -177.77246094]
[698.73297119 -169.48347473]
[692.40106201 -156.00177002]
[676.62371826 -154.82446289]
[664.12200928 -146.53547668]
[657.79010010 -133.05377197]
[642.01275635 -131.87646484]
[629.51104736 -123.58748627]
[617.00933838 -115.29850769]
[630.98187256 -109.84241486]
[635.56762695 -95.56057739]
[627.38330078 -82.99011993]
[612.46722412 -81.40548706]
[601.82446289 -91.97582245]
[603.30676270 -106.90155029]
[590.24554443 -99.52555847]
[577.18438721 -92.14956665]
[564.12316895 -84.77357483]
[551.06201172 -77.39757538]
[546.78625488 -71.37545013]
[537.76123047 -70.01103210]
[524.59600830 -62.82229996]
[524.37811279 -47.92874146]
[516.68341064 -35.05833817]
[503.49246216 -27.71900940]
[488.29922485 -27.96933365]
[475.18566895 -35.84220886]
[462.02050781 -28.65347290]
[448.85531616 -21.46473694]
[435.69012451 -14.27600288]
[422.52493286 -7.08726835]
[409.35974121 0.10146660]
[396.19458008 7.29020119]
[383.02938843 14.47893620]
[380.91638184 21.67513275]
[374.57739258 43.26372528]
[381.76614380 56.42890930]
[388.95486450 69.59409332]
[396.14361572 82.75927734]
[411.37643433 86.97082520]
[419.09683228 100.76106262]
[414.72448730 115.94849396]
[400.85339355 123.52268219]
[385.71304321 118.98999786]
[378.28591919 105.03960419]
[382.97842407 89.94801331]
[375.78970337 76.78282928]
[368.60095215 63.61764526]
[361.41223145 50.45246124]
[347.55401611 44.71220779]
[333.16162109 48.93819809]
[318.79977417 53.26683807]
[304.46920776 57.69791031]
[290.13861084 62.12898636]
[288.50326538 69.02397919]
[284.54486084 74.98344421]
[278.71356201 79.24466705]
[271.70239258 81.24291229]
[264.36511230 80.68592072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 93]
[2 92]
[3 91]
[4 90]
[5 88]
[6 87]
[7 86]
[8 85]
[9 84]
[10 83]
[11 82]
[12 58]
[13 57]
[14 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[25 45]
[26 44]
[27 43]
[33 42]
[34 41]
[35 40]
[59 78]
[60 77]
[61 76]
[62 75]
[65 72]
[66 71]
[95 214]
[96 213]
[97 212]
[99 211]
[100 210]
[101 194]
[102 193]
[103 192]
[104 191]
[105 190]
[106 189]
[107 188]
[108 187]
[113 182]
[114 181]
[115 179]
[116 178]
[117 177]
[118 176]
[119 175]
[120 169]
[121 168]
[122 167]
[124 165]
[125 164]
[127 162]
[128 161]
[130 159]
[131 158]
[132 157]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[196 209]
[197 208]
[198 207]
[199 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
