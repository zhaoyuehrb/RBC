%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCUACCCUGUGCCGCAGCCGCAUCGCCACCGCAGCCCGGCAGAGCCGAGCCCGGCCCAGGCCCCUGCCCCUGCCCGGCCCUCGGCCAGUCGCCCCCGGCCCCGCCCCCGCCCGCAGGCCCCCCGCAGCGGCCGCGGCGCCCCCCGGCGCCCCCAGACCCCGGCCUCCGGCACAGAGGCGGGAGACCCGGAGCAGCAGCAGAGGCAGGAGGACUAGGAGGAGGAGGAGGAGCCGUCGCAGG\
) } def
/len { sequence length } bind def

/coor [
[-15.10116482 727.17156982]
[-21.14834976 741.46179199]
[-34.45756149 749.43957520]
[-49.91114044 748.03723145]
[-61.56686401 737.79400635]
[-64.94287109 722.64862061]
[-58.74102020 708.42480469]
[-45.34604645 700.59191895]
[-43.99042130 685.65325928]
[-42.63479614 670.71466064]
[-41.27917099 655.77606201]
[-39.92354202 640.83746338]
[-38.56791687 625.89880371]
[-45.12332535 612.52435303]
[-36.17049789 599.47991943]
[-34.81487274 584.54132080]
[-46.12724686 574.88897705]
[-49.62817001 560.25311279]
[-43.77120972 546.19787598]
[-30.60901451 538.19396973]
[-29.25338936 523.25537109]
[-40.56576538 513.60296631]
[-44.06668854 498.96716309]
[-38.20972824 484.91192627]
[-25.04753304 476.90802002]
[-23.69190788 461.96939087]
[-31.89993477 446.44796753]
[-21.13683319 431.49468994]
[-19.97444725 416.53979492]
[-27.33102798 411.47955322]
[-31.34190559 402.21325684]
[-44.87441635 408.68405151]
[-58.40692902 415.15484619]
[-63.42058945 427.02349854]
[-74.80775452 432.13949585]
[-86.25182343 428.26196289]
[-99.86685944 434.55725098]
[-109.14560699 447.37191772]
[-123.94499969 445.69049072]
[-137.56002808 451.98577881]
[-151.17506409 458.28106689]
[-164.79010010 464.57638550]
[-176.62922668 476.71194458]
[-191.56790161 468.69494629]
[-187.99966431 452.12075806]
[-171.08540344 450.96133423]
[-157.47036743 444.66604614]
[-143.85533142 438.37075806]
[-130.24029541 432.07543945]
[-121.93539429 419.71105957]
[-106.16216278 420.94223022]
[-92.54712677 414.64691162]
[-83.20919800 399.77786255]
[-64.87772369 401.62231445]
[-51.34520721 395.15155029]
[-37.81269836 388.68075562]
[-27.37888145 377.90414429]
[-21.34877586 364.16958618]
[-23.31687927 349.40557861]
[-10.68455887 339.88009644]
[-4.65445423 326.14553833]
[-6.62255764 311.38153076]
[6.00976324 301.85604858]
[12.03986740 288.12149048]
[17.98106384 274.34823608]
[23.83310509 260.53689575]
[29.68514442 246.72552490]
[35.53718567 232.91416931]
[41.38922501 219.10281372]
[47.24126434 205.29144287]
[45.08245850 190.55412292]
[57.59057617 180.86611938]
[63.44261551 167.05474854]
[69.29465485 153.24339294]
[75.14669800 139.43203735]
[58.52882385 121.27706909]
[53.47394180 97.18963623]
[61.39145279 73.88578033]
[50.48084641 63.59215927]
[39.57024384 53.29853439]
[28.65963745 43.00490952]
[13.49729538 45.72695923]
[-0.20043519 39.07672882]
[-7.27210093 25.79306984]
[-5.19072199 11.06874180]
[-16.10132599 0.77511704]
[-27.01193047 -9.51850796]
[-43.02547836 -10.49104023]
[-52.13114548 -23.69961357]
[-47.34383774 -39.01174164]
[-32.33597183 -44.68127060]
[-18.62029839 -36.35902023]
[-16.71830559 -20.42911148]
[-5.80770206 -10.13548756]
[5.10290289 0.15813699]
[19.68129921 -2.77586436]
[33.35366440 3.51146126]
[40.78909302 16.79934120]
[38.95326233 32.09430313]
[49.86386871 42.38792801]
[60.77447128 52.68155289]
[71.68507385 62.97517776]
[78.35182190 53.23121643]
[88.00141144 44.82843018]
[100.32068634 38.61445236]
[99.93287659 23.61946678]
[88.75413513 12.77172947]
[88.57444763 -2.44084311]
[98.98500061 -13.03121758]
[98.59719086 -28.02620316]
[98.20938110 -43.02119064]
[97.82157898 -58.01617432]
[89.03044128 -67.43517303]
[89.00446320 -79.91876984]
[97.21294403 -88.78570557]
[97.01902771 -103.78445435]
[89.10396576 -117.48344421]
[96.67607880 -130.30967712]
[96.48216248 -145.30842590]
[90.23155975 -161.06806946]
[103.64496613 -171.43710327]
[117.32197571 -161.41831970]
[111.48090363 -145.50234985]
[111.67482758 -130.50360107]
[119.57601929 -117.87742615]
[112.01777649 -103.97837830]
[112.21169281 -88.97962952]
[121.97833252 -74.38858032]
[112.81655884 -58.40398407]
[113.20436859 -43.40899658]
[113.59217834 -28.41401100]
[113.97998810 -13.41902542]
[124.92404175 -3.38093424]
[125.53093719 11.82059002]
[114.92786407 23.23165894]
[115.31567383 38.22664642]
[129.71302795 42.43571472]
[138.11698914 30.01100540]
[146.52095032 17.58629608]
[154.92491150 5.16158772]
[163.32887268 -7.26312113]
[171.73283386 -19.68782997]
[172.35758972 -36.07507324]
[186.98600769 -43.48729706]
[200.56965637 -34.29944229]
[199.13482666 -17.96318436]
[184.15754700 -11.28386688]
[175.75358582 1.14084256]
[167.34962463 13.56555176]
[158.94566345 25.99026108]
[150.54170227 38.41497040]
[142.13772583 50.83967972]
[146.17768860 57.15859222]
[158.81552124 49.07866669]
[171.45335388 40.99873734]
[184.09130859 32.91900635]
[192.17085266 45.55708694]
[179.53327942 53.63656998]
[166.89546204 61.71649551]
[154.25762939 69.79642487]
[158.29759216 76.11534119]
[173.10214233 73.70181274]
[187.90669250 71.28827667]
[202.71125793 68.87474823]
[216.70837402 56.89451599]
[232.86395264 63.77077866]
[247.63607788 61.16605759]
[262.40820312 58.56133270]
[277.18029785 55.95661163]
[289.42724609 45.94048309]
[303.30474854 51.35017014]
[318.07684326 48.74544525]
[326.93536377 35.65720367]
[342.46966553 32.74841690]
[355.46353149 41.74481964]
[358.20791626 57.30900574]
[349.07464600 70.20701599]
[333.48229980 72.78669739]
[320.68157959 63.51756287]
[305.90945435 66.12228394]
[294.71911621 75.95211029]
[279.78503418 70.72872925]
[265.01290894 73.33345032]
[250.24079895 75.93817139]
[235.46867371 78.54289246]
[228.28686523 88.26006317]
[216.01712036 90.56105042]
[205.12478638 83.67930603]
[190.32023621 86.09283447]
[175.51567078 88.50636292]
[160.71112061 90.91989899]
[159.26335144 105.72724915]
[154.36781311 119.30197144]
[146.52984619 130.88203430]
[136.41238403 139.87467957]
[124.78473663 145.88587952]
[112.46689606 148.73544312]
[100.27298737 148.45703125]
[88.95805359 145.28407288]
[83.10601807 159.09544373]
[77.25397491 172.90679932]
[71.40193176 186.71815491]
[73.14216614 202.44335938]
[61.05262375 211.14349365]
[55.20058441 224.95484924]
[49.34854507 238.76620483]
[43.49650192 252.57756042]
[37.64446259 266.38891602]
[31.79242325 280.20028687]
[31.32920456 289.30102539]
[25.77441597 294.15158081]
[19.74431229 307.88613892]
[21.28110123 323.63253784]
[9.08009434 332.17562866]
[3.04999042 345.91018677]
[4.58678055 361.65658569]
[-7.61422729 370.19967651]
[-13.64433193 383.93423462]
[5.54795074 399.02890015]
[-5.01955271 417.70217896]
[-6.18193865 432.65707397]
[1.58977962 442.93334961]
[0.32677850 455.35293579]
[-8.75329018 463.32501221]
[-10.10891628 478.26364136]
[1.39747977 488.50613403]
[4.62867737 503.38607788]
[-1.44965947 517.15264893]
[-14.31477165 524.61096191]
[-15.67039776 539.54962158]
[-4.16400242 549.79211426]
[-0.93280482 564.67205811]
[-7.01114178 578.43859863]
[-19.87625504 585.89691162]
[-21.23188019 600.83557129]
[-14.77343369 615.27850342]
[-23.62929916 627.25445557]
[-24.98492622 642.19305420]
[-26.34055138 657.13165283]
[-27.69617844 672.07031250]
[-29.05180359 687.00891113]
[-30.40743065 701.94750977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 242]
[9 241]
[10 240]
[11 239]
[12 238]
[13 237]
[15 235]
[16 234]
[20 230]
[21 229]
[25 225]
[26 224]
[28 221]
[29 220]
[31 56]
[32 55]
[33 54]
[36 52]
[37 51]
[39 49]
[40 48]
[41 47]
[42 46]
[57 218]
[58 217]
[60 215]
[61 214]
[63 212]
[64 211]
[65 209]
[66 208]
[67 207]
[68 206]
[69 205]
[70 204]
[72 202]
[73 201]
[74 200]
[75 199]
[78 102]
[79 101]
[80 100]
[81 99]
[85 95]
[86 94]
[87 93]
[105 136]
[106 135]
[109 132]
[110 131]
[111 130]
[112 129]
[115 127]
[116 126]
[118 124]
[119 123]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
[161 191]
[162 190]
[163 189]
[164 188]
[166 185]
[167 184]
[168 183]
[169 182]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
