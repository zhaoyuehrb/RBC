%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACGUAGAUCCUCCCUGUCAUCAGGCAGAGCUCUUCAGUGAGGUGGGCUCAGGGAGGGCUCUGUGCCUCCGUUCAGCAGAGCUGCAGCUGCUGCCCAGCUCUCAGGAGGCAAGCUGGACUCCCUCACUCAGCUGCAGGAGCAAGGACAGUGAGGCUCAACCCCGCCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[133.59190369 265.12033081]
[132.70787048 254.45780945]
[137.96025085 244.88494873]
[132.94258118 230.74908447]
[127.92489624 216.61320496]
[117.75477600 214.84643555]
[109.17879486 208.95718384]
[103.79475403 199.96089172]
[102.63962555 189.45895386]
[105.99049377 179.35382080]
[113.30200958 171.50436401]
[109.05253601 157.11888123]
[104.80306244 142.73341370]
[100.55359650 128.34793091]
[70.62483978 102.39611053]
[95.63258362 69.72123718]
[85.16974640 80.46968079]
[74.70690918 91.21812439]
[64.24407196 101.96656799]
[60.73999405 117.98697662]
[45.03390503 122.70405579]
[33.28288651 111.26528168]
[37.57537460 95.43788147]
[53.49562836 91.50373077]
[63.95846558 80.75528717]
[74.42130280 70.00684357]
[84.88414001 59.25840378]
[79.73978424 45.16813660]
[64.81284332 43.68950653]
[49.88589859 42.21087265]
[34.95895386 40.73224258]
[20.03200912 39.25361252]
[5.10506582 37.77497864]
[-9.82187843 36.29634857]
[-24.74882126 34.81771851]
[-39.67576599 33.33908463]
[-54.60271072 31.86045456]
[-69.52965546 30.38182259]
[-80.00151062 37.94936371]
[-92.42273712 36.38969803]
[-100.18374634 27.08373260]
[-115.08174133 25.33738518]
[-129.97973633 23.59103966]
[-144.87773132 21.84469223]
[-158.30624390 30.62276649]
[-173.49600220 25.46033859]
[-178.79473877 10.31758213]
[-170.13769531 -3.18927550]
[-154.16583252 -4.69892979]
[-143.13137817 6.94669724]
[-128.23338318 8.69304371]
[-113.33539581 10.43939018]
[-98.43739319 12.18573666]
[-82.73877716 4.37418222]
[-68.05102539 15.45487976]
[-53.12407684 16.93351173]
[-38.19713593 18.41214180]
[-23.27019119 19.89077377]
[-8.34324646 21.36940575]
[6.58369684 22.84803581]
[21.51064110 24.32666779]
[36.43758392 25.80529976]
[51.36452866 27.28392982]
[66.29147339 28.76256180]
[81.21841431 30.24119377]
[92.68982697 20.57647896]
[93.76602173 5.61513424]
[94.84220886 -9.34620953]
[95.91840363 -24.30755424]
[96.99459839 -39.26889801]
[98.07078552 -54.23023987]
[99.14698029 -69.19158173]
[91.38005066 -73.75633240]
[85.55928040 -80.57525635]
[82.30203247 -88.88130188]
[81.93939972 -97.75221252]
[84.48274994 -106.21296692]
[89.62561798 -113.34291840]
[96.78031158 -118.37596130]
[105.14500427 -120.78283691]
[107.55799103 -135.58747864]
[109.97097015 -150.39212036]
[112.38395691 -165.19676208]
[114.79694366 -180.00141907]
[117.20992279 -194.80606079]
[119.62290955 -209.61070251]
[112.72783661 -220.53706360]
[115.06436157 -232.83584595]
[124.83927917 -239.99722290]
[127.51763153 -254.75616455]
[121.47934723 -270.00317383]
[131.87518311 -282.68618774]
[148.01078796 -279.75799561]
[153.28724670 -264.23089600]
[142.27658081 -252.07780457]
[139.59822083 -237.31886292]
[146.40863037 -221.16072083]
[134.42755127 -207.19772339]
[132.01457214 -192.39306641]
[129.60159302 -177.58842468]
[127.18859863 -162.78378296]
[124.77561951 -147.97914124]
[122.36263275 -133.17449951]
[119.94964600 -118.36985016]
[133.94599915 -102.42167664]
[131.63894653 -81.04489899]
[114.10832214 -68.11539459]
[113.03213501 -53.15404892]
[111.95594025 -38.19270706]
[110.87974548 -23.23136139]
[109.80355835 -8.27001762]
[108.72736359 6.69132614]
[107.65116882 21.65266991]
[119.12258148 31.31738472]
[133.68423462 27.71759415]
[148.24588013 24.11780548]
[162.80752563 20.51801491]
[177.36917114 16.91822433]
[191.93080139 13.31843472]
[196.11659241 -1.45907521]
[207.14152527 -12.15236950]
[222.03994751 -15.88500690]
[236.80426025 -11.65292549]
[247.46293640 -0.59453380]
[251.14886475 14.31551552]
[246.87051392 29.06649399]
[235.77877808 39.69046402]
[220.85723877 43.32962799]
[206.11975098 39.00507355]
[195.53059387 27.88007927]
[180.96894836 31.47986984]
[166.40730286 35.07965851]
[151.84565735 38.67945099]
[137.28401184 42.27923965]
[122.72237396 45.87903214]
[122.31850433 60.87359238]
[136.66525269 65.25201416]
[152.51158142 61.02989578]
[163.89802551 72.83163452]
[159.11119080 88.51660156]
[143.07537842 91.94945526]
[132.28683472 79.59877014]
[117.94007874 75.22035217]
[129.45378113 101.05644989]
[114.93907166 124.09845734]
[119.18854523 138.48393250]
[123.43801117 152.86941528]
[127.68748474 167.25489807]
[145.80897522 175.85954285]
[151.72116089 194.71092224]
[142.06077576 211.59552002]
[147.07844543 225.73139954]
[152.09613037 239.86727905]
[168.01254272 252.20205688]
[163.76562500 271.04614258]
[169.28749084 284.99279785]
[174.80935669 298.93945312]
[180.33123779 312.88610840]
[185.85310364 326.83273315]
[191.37496948 340.77938843]
[206.43746948 344.50775146]
[216.40603638 356.39923096]
[217.44755554 371.88131714]
[209.16152954 385.00082397]
[194.73413086 390.71304321]
[179.71295166 386.82150269]
[169.87397766 374.82257080]
[169.00047302 359.33010864]
[177.42831421 346.30126953]
[171.90644836 332.35461426]
[166.38458252 318.40795898]
[160.86271667 304.46133423]
[155.34085083 290.51467896]
[149.81898499 276.56802368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 153]
[4 152]
[5 151]
[11 148]
[12 147]
[13 146]
[14 145]
[16 27]
[17 26]
[18 25]
[19 24]
[28 65]
[29 64]
[30 63]
[31 62]
[32 61]
[33 60]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[41 53]
[42 52]
[43 51]
[44 50]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[71 108]
[72 107]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[89 96]
[90 95]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[119 130]
[136 143]
[137 142]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
[160 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
