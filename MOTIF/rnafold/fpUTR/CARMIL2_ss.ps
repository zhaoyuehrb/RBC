%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCGGCCACGCCACUGCCCACCCCGACGUCUACCCUGGCGGAGAAGCUCCUGGGCGACGGGGCGGGCGGGCAGGUGGGACUCGGCCCCCCUCCCACAACCCCGCUCCCGGGCAAGCUCUCGAGCCGCGAGGCCGGGGCGGGGAGGGGCCGGGCCGGGGGCGGCCUGGCAGGAAGCGGCGCGCACCUUCCGCCGCCGGAGGAGCAGGUGGCUGCCGUGCGGGUCUGGGCCCCAGGCUUCCUGUGUGCGCGCUCGU\
CCUCUGCUGUUUCCCGCCGGAGCUCGUUGGGCCUCCCCGGCCCGCCCGGCCC\
) } def
/len { sequence length } bind def

/coor [
[120.70596313 235.60000610]
[104.90907288 235.11647034]
[94.14190674 223.54739380]
[94.79242706 207.75650024]
[106.47470093 197.11224365]
[106.93362427 182.11926270]
[107.39255524 167.12628174]
[107.85147858 152.13331604]
[101.06137085 148.94827271]
[87.48116302 142.57820129]
[80.69105530 139.39315796]
[69.45558929 149.33119202]
[58.22013092 159.26922607]
[55.79342651 165.33058167]
[51.35369110 168.77445984]
[46.65263367 169.29251099]
[35.21678543 178.99928284]
[23.78094101 188.70605469]
[12.34509563 198.41282654]
[0.90924978 208.11959839]
[-4.60491180 222.94879150]
[-19.31500053 225.28599548]
[-30.75084686 234.99276733]
[-42.18669128 244.69953918]
[-53.62253952 254.40631104]
[-65.05838013 264.11309814]
[-70.57254791 278.94226074]
[-85.28263092 281.27947998]
[-96.71848297 290.98623657]
[-108.15432739 300.69302368]
[-119.59017181 310.39981079]
[-131.02601624 320.10656738]
[-142.46186829 329.81335449]
[-141.10705566 341.56286621]
[-145.52452087 352.40533447]
[-154.51910400 359.71191406]
[-165.80151367 361.77099609]
[-176.57035828 358.18814087]
[-188.20182800 367.65963745]
[-199.83329773 377.13110352]
[-201.19300842 392.87680054]
[-213.34196472 402.98513794]
[-229.07238770 401.45904541]
[-239.05172729 389.20388794]
[-237.35939026 373.49047852]
[-224.99943542 363.64126587]
[-209.30477905 365.49963379]
[-197.67330933 356.02816772]
[-186.04183960 346.55667114]
[-185.24098206 328.23135376]
[-171.02122498 316.14285278]
[-152.16864014 318.37750244]
[-140.73278809 308.67071533]
[-129.29693604 298.96395874]
[-117.86109924 289.25717163]
[-106.42525482 279.55041504]
[-94.98940277 269.84362793]
[-90.29321289 255.70874023]
[-74.76515961 252.67724609]
[-63.32931137 242.97047424]
[-51.89346313 233.26370239]
[-40.45761871 223.55693054]
[-29.02177429 213.85014343]
[-24.32558060 199.71525574]
[-8.79752254 196.68376160]
[2.63832283 186.97698975]
[14.07416821 177.27021790]
[25.51001358 167.56344604]
[36.94585800 157.85667419]
[48.28210449 148.03375244]
[59.51756668 138.09573364]
[70.75302887 128.15769958]
[66.70088959 122.81295776]
[63.60549164 116.90655518]
[61.54056168 110.60675812]
[46.79266739 107.86820984]
[32.04477692 105.12966919]
[17.29688263 102.39112091]
[2.54898882 99.65257263]
[-12.19890499 96.91402435]
[-20.73998642 103.54415894]
[-31.29962158 104.39064789]
[-40.40346146 99.41548157]
[-45.18730545 90.45709991]
[-59.87627029 87.41828918]
[-76.61187744 90.13043976]
[-83.85091400 74.79966736]
[-71.12323761 63.59955215]
[-56.83745575 72.72932434]
[-42.14849472 75.76813507]
[-24.23715591 68.40591431]
[-9.46035767 82.16613007]
[5.28753614 84.90467834]
[20.03542900 87.64322662]
[34.78332138 90.38177490]
[49.53121567 93.12032318]
[64.27910614 95.85886383]
[68.17172241 89.44812775]
[75.95695496 76.62665558]
[79.84957123 70.21591949]
[70.61733246 58.39366913]
[61.38508987 46.57141495]
[52.15284729 34.74916077]
[42.92060471 22.92690468]
[33.68835831 11.10465050]
[25.98165131 6.29941034]
[24.42297935 -0.88559866]
[15.31180096 -12.80140495]
[6.20062304 -24.71721077]
[-2.91055465 -36.63301849]
[-12.02173233 -48.54882431]
[-14.73871613 -33.79694366]
[-27.03707886 -25.20914459]
[-41.82210159 -27.73958778]
[-50.56454468 -39.92850113]
[-48.22104645 -54.74430466]
[-36.14352417 -63.64000702]
[-21.29902649 -61.48365784]
[-29.66435623 -73.93441010]
[-38.02968597 -86.38516235]
[-46.39501572 -98.83591461]
[-54.76034546 -111.28666687]
[-70.16279602 -115.77490234]
[-76.12348938 -130.66952515]
[-68.06990051 -144.54464722]
[-52.18004990 -146.75648499]
[-40.64326859 -135.60827637]
[-42.30959320 -119.65200043]
[-33.94426346 -107.20124817]
[-25.57893372 -94.75049591]
[-17.21360207 -82.29974365]
[-8.84827328 -69.84898376]
[-0.10592626 -57.65999985]
[9.00525188 -45.74419403]
[18.11642838 -33.82838821]
[27.22760773 -21.91258240]
[36.33878326 -9.99677658]
[45.51061249 1.87240815]
[54.74285889 13.69466209]
[63.97510147 25.51691628]
[73.20734406 37.33917236]
[82.43958282 49.16142654]
[91.67182922 60.98368073]
[123.35320282 67.36536407]
[140.08215332 95.23741150]
[130.70494080 126.56027985]
[145.55226135 124.42556000]
[160.39958191 122.29084015]
[175.24690247 120.15611267]
[183.24714661 115.85729980]
[190.25646973 118.07614136]
[205.12478638 116.09296417]
[219.99311829 114.10979462]
[234.86143494 112.12662506]
[249.72975159 110.14345551]
[264.59808350 108.16027832]
[279.46640015 106.17710876]
[294.33471680 104.19393921]
[309.20306396 102.21076202]
[324.07138062 100.22759247]
[332.11505127 96.01060486]
[339.10137939 98.30081940]
[353.98916626 96.46940613]
[368.87692261 94.63799286]
[383.76470947 92.80657196]
[398.65249634 90.97515869]
[431.39642334 74.47248840]
[445.60446167 69.66297150]
[459.81253052 64.85345459]
[474.02056885 60.04393768]
[488.22860718 55.23442078]
[502.43664551 50.42490387]
[509.48880005 36.53588486]
[523.96630859 31.86075020]
[537.16387939 38.66950226]
[551.37194824 33.85998535]
[565.58001709 29.05046654]
[579.76330566 24.16855240]
[593.92156982 19.21436691]
[608.07983398 14.26018047]
[622.23809814 9.30599499]
[636.39630127 4.35180902]
[650.55456543 -0.60237712]
[664.71282959 -5.55656290]
[678.87109375 -10.51074886]
[691.65264893 -18.36126900]
[702.47344971 -28.74930382]
[713.29418945 -39.13734055]
[724.11492920 -49.52537537]
[734.93566895 -59.91341019]
[745.75646973 -70.30144501]
[749.80090332 -86.19403076]
[765.65771484 -90.37664032]
[777.01470947 -78.54656219]
[772.18878174 -62.87356949]
[756.14447021 -59.48069382]
[745.32373047 -49.09265900]
[734.50299072 -38.70462036]
[723.68218994 -28.31658554]
[712.86145020 -17.92855072]
[702.04071045 -7.54051495]
[705.39782715 -0.83382523]
[715.46923828 19.28624344]
[730.26989746 16.84910202]
[745.07061768 14.41195965]
[759.87127686 11.97481728]
[774.67199707 9.53767490]
[787.03167725 -0.33901426]
[800.84692383 5.22759867]
[815.64764404 2.79045653]
[830.44830322 0.35331440]
[845.24902344 -2.08382773]
[848.42633057 -4.87236834]
[851.96490479 -6.38364220]
[855.42816162 -6.65835428]
[858.43579102 -5.87198830]
[860.70202637 -4.30564070]
[875.58984375 -6.13705540]
[883.67608643 -10.27177906]
[890.63867188 -7.91042471]
[905.54437256 -9.58989239]
[920.45007324 -11.26935863]
[935.35571289 -12.94882584]
[948.22198486 -23.11702538]
[963.35894775 -16.80803108]
[965.19506836 -0.51199889]
[951.84149170 9.00711250]
[937.03521729 1.95685697]
[922.12951660 3.63632417]
[907.22381592 5.31579113]
[892.31817627 6.99525833]
[877.42126465 8.75072193]
[862.53344727 10.58213711]
[847.68615723 12.71685982]
[832.88543701 15.15400124]
[818.08477783 17.59114265]
[803.28405762 20.02828598]
[791.98303223 29.73065376]
[777.10913086 24.33836174]
[762.30841064 26.77550507]
[747.50775146 29.21264648]
[732.70703125 31.64978790]
[717.90637207 34.08692932]
[683.82525635 3.64750099]
[669.66699219 8.60168648]
[655.50872803 13.55587292]
[641.35052490 18.51005936]
[627.19226074 23.46424484]
[613.03399658 28.41843033]
[598.87573242 33.37261581]
[584.71752930 38.32680130]
[579.46899414 43.47526932]
[570.38952637 43.25851440]
[556.18145752 48.06803131]
[541.97338867 52.87754822]
[535.62512207 66.30270386]
[521.28466797 71.38263702]
[507.24618530 64.63294983]
[493.03811646 69.44246674]
[478.83007812 74.25198364]
[464.62203979 79.06150055]
[450.41400146 83.87101746]
[436.20593262 88.68053436]
[432.57052612 103.23332214]
[442.84765625 114.15946960]
[453.12475586 125.08561707]
[463.40188599 136.01176453]
[473.67901611 146.93791199]
[489.60604858 148.86396790]
[497.90756226 162.59220886]
[492.21536255 177.59149170]
[476.89599609 182.35565186]
[463.70120239 173.23004150]
[462.75286865 157.21504211]
[452.47573853 146.28889465]
[442.19860840 135.36274719]
[431.92150879 124.43659210]
[421.64437866 113.51044464]
[424.01574707 128.32180786]
[414.67993164 140.06246948]
[399.71508789 141.08859253]
[388.86410522 130.73213196]
[389.19158936 115.73570251]
[400.48388672 105.86293793]
[385.59613037 107.69435120]
[370.70834351 109.52576447]
[355.82055664 111.35718536]
[340.93280029 113.18859863]
[326.05453491 115.09591675]
[311.18621826 117.07908630]
[296.31790161 119.06225586]
[281.44958496 121.04543304]
[266.58123779 123.02860260]
[251.71293640 125.01177216]
[236.84460449 126.99494934]
[221.97628784 128.97811890]
[207.10795593 130.96128845]
[192.23963928 132.94445801]
[177.38162231 135.00343323]
[162.53430176 137.13815308]
[147.68698120 139.27288818]
[132.83966064 141.40760803]
[122.84445953 152.59223938]
[122.38552856 167.58522034]
[121.92660522 182.57818604]
[121.46767426 197.57116699]
[132.47705078 208.91000366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 306]
[6 305]
[7 304]
[8 303]
[11 72]
[12 71]
[13 70]
[16 69]
[17 68]
[18 67]
[19 66]
[20 65]
[22 63]
[23 62]
[24 61]
[25 60]
[26 59]
[28 57]
[29 56]
[30 55]
[31 54]
[32 53]
[33 52]
[38 49]
[39 48]
[40 47]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[84 90]
[85 89]
[100 143]
[101 142]
[102 141]
[103 140]
[104 139]
[105 138]
[107 137]
[108 136]
[109 135]
[110 134]
[111 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[146 302]
[147 301]
[148 300]
[149 299]
[151 298]
[152 297]
[153 296]
[154 295]
[155 294]
[156 293]
[157 292]
[158 291]
[159 290]
[160 289]
[162 288]
[163 287]
[164 286]
[165 285]
[166 284]
[167 263]
[168 262]
[169 261]
[170 260]
[171 259]
[172 258]
[175 255]
[176 254]
[177 253]
[178 251]
[179 250]
[180 249]
[181 248]
[182 247]
[183 246]
[184 245]
[185 244]
[186 201]
[187 200]
[188 199]
[189 198]
[190 197]
[191 196]
[203 243]
[204 242]
[205 241]
[206 240]
[207 239]
[209 237]
[210 236]
[211 235]
[212 234]
[217 233]
[218 232]
[220 231]
[221 230]
[222 229]
[223 228]
[264 278]
[265 277]
[266 276]
[267 275]
[268 274]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
