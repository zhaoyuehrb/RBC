%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OPN1LW)
} def

/sequence { (\
CGUGACCCUCAGGUGAUGCGCCAGGGCCGGCUGCCGUCGGGGACAGGGCUUUCCAUAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.114058300 ubox
1 20 0.016731072 ubox
1 29 0.264628209 ubox
1 33 0.005354433 ubox
2 17 0.123513163 ubox
2 19 0.018492869 ubox
2 21 0.006355548 ubox
2 27 0.018719691 ubox
2 28 0.267330306 ubox
2 31 0.045459323 ubox
2 32 0.003381200 ubox
2 34 0.003418897 ubox
2 44 0.167268563 ubox
2 49 0.004741453 ubox
2 56 0.016843493 ubox
2 59 0.023502465 ubox
3 11 0.012643449 ubox
3 16 0.124228417 ubox
3 18 0.017594182 ubox
3 20 0.006350169 ubox
3 26 0.006742019 ubox
3 29 0.226487032 ubox
3 30 0.041197778 ubox
3 33 0.003421099 ubox
3 39 0.003976821 ubox
3 43 0.162237037 ubox
3 45 0.174719294 ubox
3 48 0.004290001 ubox
3 55 0.017375540 ubox
3 57 0.003944446 ubox
3 58 0.022341127 ubox
4 10 0.014086314 ubox
4 17 0.010616073 ubox
4 19 0.006360524 ubox
4 28 0.300658808 ubox
4 38 0.005386825 ubox
4 44 0.193473339 ubox
4 51 0.005797557 ubox
4 53 0.006577179 ubox
4 54 0.016100987 ubox
4 56 0.003588599 ubox
5 9 0.012259175 ubox
5 14 0.126666773 ubox
5 37 0.005329552 ubox
5 50 0.006587436 ubox
5 52 0.007039023 ubox
6 13 0.127130180 ubox
6 25 0.012765256 ubox
6 26 0.953020403 ubox
6 30 0.033381148 ubox
6 36 0.004965316 ubox
6 40 0.013813243 ubox
6 41 0.088943349 ubox
6 42 0.210743674 ubox
6 47 0.007388160 ubox
6 48 0.021120134 ubox
7 12 0.126683124 ubox
7 13 0.004679493 ubox
7 24 0.011924443 ubox
7 25 0.956811405 ubox
7 26 0.063592281 ubox
7 29 0.033316108 ubox
7 30 0.004017431 ubox
7 39 0.013570733 ubox
7 40 0.088708080 ubox
7 41 0.211063303 ubox
7 42 0.062220483 ubox
7 46 0.007908834 ubox
7 47 0.022813727 ubox
8 12 0.005582284 ubox
8 24 0.956735994 ubox
8 25 0.064465511 ubox
8 26 0.087670774 ubox
8 29 0.003878421 ubox
8 39 0.088379697 ubox
8 40 0.205048759 ubox
8 41 0.062413847 ubox
8 42 0.010446554 ubox
8 46 0.023109507 ubox
8 58 0.005579792 ubox
9 16 0.004679347 ubox
9 23 0.885891533 ubox
9 24 0.052615646 ubox
9 25 0.089288160 ubox
9 26 0.011816267 ubox
9 39 0.182903769 ubox
9 40 0.061209278 ubox
9 41 0.010414828 ubox
9 43 0.007656549 ubox
9 45 0.021394359 ubox
9 57 0.005584093 ubox
10 15 0.005439721 ubox
10 18 0.014961826 ubox
10 24 0.097726334 ubox
10 25 0.015872702 ubox
10 33 0.022235171 ubox
10 39 0.070369555 ubox
10 40 0.011600193 ubox
10 41 0.003172120 ubox
10 42 0.009073423 ubox
11 17 0.014750066 ubox
11 32 0.022253272 ubox
12 22 0.960138469 ubox
12 28 0.004422181 ubox
12 31 0.022229826 ubox
12 35 0.152197297 ubox
12 38 0.045253087 ubox
12 54 0.010160427 ubox
12 60 0.015610544 ubox
13 19 0.049809215 ubox
13 21 0.963325975 ubox
13 27 0.004444159 ubox
13 34 0.152065763 ubox
13 37 0.043241841 ubox
13 53 0.010163006 ubox
13 59 0.015745093 ubox
14 18 0.046645734 ubox
14 20 0.961239651 ubox
14 23 0.003432588 ubox
14 26 0.004407607 ubox
14 29 0.021963714 ubox
14 33 0.150766145 ubox
14 36 0.041641501 ubox
14 39 0.077765972 ubox
14 58 0.015318044 ubox
15 19 0.915565689 ubox
15 22 0.004768632 ubox
15 28 0.021418936 ubox
15 32 0.121716142 ubox
15 35 0.042651379 ubox
15 38 0.162864032 ubox
15 51 0.007302001 ubox
15 52 0.004483765 ubox
15 53 0.003831813 ubox
16 37 0.162866530 ubox
16 50 0.007540208 ubox
16 51 0.004728539 ubox
16 52 0.003836914 ubox
16 56 0.012743451 ubox
17 23 0.003945016 ubox
17 29 0.046927120 ubox
17 33 0.008531666 ubox
17 36 0.161719364 ubox
17 45 0.004693699 ubox
17 55 0.015432561 ubox
18 22 0.004066982 ubox
18 27 0.038018113 ubox
18 28 0.046557584 ubox
18 31 0.037304456 ubox
18 32 0.034816912 ubox
18 34 0.107740506 ubox
18 35 0.130969357 ubox
18 37 0.009968226 ubox
18 44 0.007776401 ubox
18 49 0.014758349 ubox
18 54 0.015463430 ubox
18 59 0.030183221 ubox
19 26 0.040940117 ubox
19 29 0.016881975 ubox
19 30 0.036676206 ubox
19 33 0.143856206 ubox
19 36 0.012128830 ubox
19 48 0.014906243 ubox
19 58 0.031235196 ubox
20 27 0.057058142 ubox
20 28 0.014079633 ubox
20 31 0.208930205 ubox
20 32 0.030170310 ubox
20 34 0.064541031 ubox
20 35 0.012278805 ubox
20 38 0.003168264 ubox
20 49 0.064571593 ubox
20 59 0.032578024 ubox
21 26 0.058073163 ubox
21 30 0.211910802 ubox
21 33 0.046481412 ubox
21 40 0.007539153 ubox
21 41 0.015059496 ubox
21 42 0.036513949 ubox
21 47 0.024688181 ubox
21 48 0.064607223 ubox
21 58 0.032601021 ubox
22 29 0.211755368 ubox
22 33 0.048790166 ubox
22 39 0.007545799 ubox
22 40 0.014955581 ubox
22 41 0.036607229 ubox
22 46 0.026602796 ubox
22 47 0.064540096 ubox
23 32 0.066233389 ubox
23 51 0.004239498 ubox
23 52 0.054905911 ubox
24 31 0.066334219 ubox
24 32 0.009811612 ubox
24 35 0.006982897 ubox
24 38 0.005605503 ubox
24 50 0.004668661 ubox
24 51 0.063999665 ubox
24 53 0.006369040 ubox
24 54 0.020352571 ubox
25 31 0.010838949 ubox
25 32 0.003197065 ubox
25 34 0.006864379 ubox
25 35 0.039104439 ubox
25 38 0.025828514 ubox
25 49 0.004405009 ubox
25 50 0.068010910 ubox
25 52 0.003258485 ubox
25 53 0.019823976 ubox
25 54 0.013671548 ubox
25 60 0.007135041 ubox
26 31 0.003255204 ubox
26 34 0.039180895 ubox
26 37 0.025846753 ubox
26 49 0.072067049 ubox
26 52 0.006536903 ubox
26 53 0.013496671 ubox
26 59 0.007443520 ubox
27 33 0.039132785 ubox
27 36 0.019207451 ubox
27 40 0.846832191 ubox
27 41 0.055272614 ubox
27 42 0.014577105 ubox
27 47 0.013560609 ubox
27 48 0.072693585 ubox
27 58 0.007450758 ubox
28 36 0.022163539 ubox
28 39 0.850299949 ubox
28 40 0.039740196 ubox
28 41 0.013332551 ubox
28 46 0.014697521 ubox
28 47 0.072456440 ubox
29 35 0.028895435 ubox
29 38 0.851307787 ubox
29 50 0.015693501 ubox
29 53 0.005000652 ubox
29 54 0.016205611 ubox
29 60 0.070755066 ubox
30 34 0.028453002 ubox
30 37 0.850282565 ubox
30 49 0.016523092 ubox
30 52 0.004882568 ubox
30 53 0.016187308 ubox
30 59 0.072022719 ubox
31 36 0.849338497 ubox
31 40 0.007388526 ubox
31 42 0.005819191 ubox
31 46 0.453889449 ubox
31 47 0.004424834 ubox
31 48 0.016034316 ubox
31 58 0.072002780 ubox
32 39 0.007440224 ubox
32 41 0.005000666 ubox
32 45 0.457822376 ubox
32 46 0.003600304 ubox
32 47 0.012215250 ubox
32 57 0.071081568 ubox
33 38 0.007197035 ubox
33 44 0.458462731 ubox
33 49 0.052014954 ubox
33 54 0.003596694 ubox
33 56 0.045683319 ubox
33 59 0.009786028 ubox
34 40 0.013846473 ubox
34 41 0.084822726 ubox
34 42 0.454387058 ubox
34 47 0.022871243 ubox
34 48 0.052100563 ubox
34 58 0.009813517 ubox
35 39 0.013812992 ubox
35 40 0.088150322 ubox
35 41 0.453817841 ubox
35 46 0.024699108 ubox
35 47 0.051507574 ubox
36 44 0.056111416 ubox
36 49 0.013052545 ubox
36 56 0.020181699 ubox
37 43 0.056574374 ubox
37 48 0.013068916 ubox
37 55 0.024025249 ubox
38 42 0.056132016 ubox
38 46 0.005071471 ubox
38 47 0.013091749 ubox
39 50 0.007647294 ubox
39 51 0.005147667 ubox
39 52 0.004107179 ubox
39 54 0.036248584 ubox
40 49 0.007935125 ubox
40 50 0.005947829 ubox
40 51 0.004826129 ubox
40 53 0.036294602 ubox
40 54 0.011286250 ubox
40 60 0.006781612 ubox
41 49 0.006832341 ubox
41 50 0.009083046 ubox
41 52 0.036118787 ubox
41 53 0.013010395 ubox
41 54 0.108396831 ubox
41 59 0.014530593 ubox
41 60 0.067251887 ubox
42 49 0.009605564 ubox
42 51 0.035978769 ubox
42 52 0.012813451 ubox
42 53 0.108616224 ubox
42 59 0.067990894 ubox
43 50 0.033378823 ubox
43 51 0.012610285 ubox
43 52 0.106787015 ubox
45 51 0.014966613 ubox
46 50 0.010687884 ubox
46 51 0.006348454 ubox
46 53 0.006022872 ubox
46 54 0.079848151 ubox
46 60 0.065839346 ubox
47 52 0.004853533 ubox
47 53 0.079897188 ubox
47 54 0.053408029 ubox
47 59 0.047910421 ubox
47 60 0.967138889 ubox
48 52 0.051758699 ubox
48 53 0.052604119 ubox
48 59 0.979827671 ubox
49 58 0.980962196 ubox
50 57 0.964507875 ubox
50 58 0.006054362 ubox
51 57 0.035246961 ubox
52 57 0.005434588 ubox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
showpage
end
%%EOF
