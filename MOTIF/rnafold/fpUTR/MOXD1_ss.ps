%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGGGCGGUCCCUGGGCUCCCGCUCGCCGCCGCUGCCGCUCCUCGUUCUGCUCCUCACUCCCCAGCGGCUGGAGGCCGGUACCGGCGGGCAGGAGGCGCCCGAGG\
) } def
/len { sequence length } bind def

/coor [
[75.46970367 291.98764038]
[60.57319260 290.22866821]
[49.40659714 280.21334839]
[46.04330063 265.59759521]
[37.86767197 278.17373657]
[29.69204521 290.74984741]
[21.51641655 303.32598877]
[23.42443085 319.25518799]
[12.05797291 330.57696533]
[-3.86358094 328.60626221]
[-12.12657833 314.85482788]
[-6.39235449 299.87155151]
[8.94028473 295.15036011]
[17.11591148 282.57421875]
[25.29154015 269.99810791]
[33.46716690 257.42196655]
[40.14185715 243.98884583]
[45.22699356 229.87710571]
[50.31212997 215.76535034]
[55.39726639 201.65361023]
[52.43280792 187.05699158]
[64.39031219 176.69703674]
[69.47544861 162.58529663]
[62.92485046 149.25767517]
[67.88087463 134.87391663]
[81.90451813 128.09341431]
[86.98965454 113.98167419]
[80.91923523 100.82506561]
[85.83131409 87.19357300]
[98.89859772 80.93318939]
[103.98373413 66.82144165]
[109.06887054 52.70969772]
[114.15400696 38.59795380]
[119.23914337 24.48620605]
[124.32427979 10.37445927]
[121.72354126 -5.23152494]
[133.31732178 -14.58211231]
[138.40246582 -28.69385910]
[143.48759460 -42.80560303]
[148.57273865 -56.91735077]
[153.65786743 -71.02909851]
[148.86825562 -83.11190796]
[153.50747681 -94.82095337]
[164.54394531 -100.00119019]
[170.03364563 -113.96053314]
[175.52333069 -127.91987610]
[181.01303101 -141.87922668]
[172.83992004 -154.93702698]
[173.91032410 -170.12609863]
[183.60467529 -181.63624573]
[198.04492188 -185.18833923]
[203.53462219 -199.14768982]
[209.02430725 -213.10702515]
[214.51400757 -227.06637573]
[220.00370789 -241.02571106]
[209.94656372 -252.56315613]
[206.41439819 -267.45550537]
[210.21887207 -282.28063965]
[220.48576355 -293.63183594]
[234.85578918 -298.90066528]
[250.02685547 -296.87640381]
[262.51272583 -288.02423096]
[269.44427490 -274.37826538]
[269.22863770 -259.07424927]
[261.91543579 -245.62899780]
[249.18510437 -237.13206482]
[233.96304321 -235.53602600]
[228.47335815 -221.57667542]
[222.98365784 -207.61734009]
[217.49395752 -193.65798950]
[212.00425720 -179.69865417]
[220.15660095 -167.26171875]
[219.41354370 -152.23135376]
[209.85075378 -140.38203430]
[194.97238159 -136.38952637]
[189.48268127 -122.43018341]
[183.99298096 -108.47084045]
[178.50328064 -94.51149750]
[182.09510803 -77.40072632]
[167.76962280 -65.94396210]
[162.68447876 -51.83221436]
[157.59934998 -37.72047043]
[152.51420593 -23.60872269]
[147.42907715 -9.49697590]
[150.39353943 5.09964180]
[138.43603516 15.45959568]
[133.35089111 29.57134247]
[128.26576233 43.68309021]
[123.18061829 57.79483414]
[118.09548187 71.90657806]
[113.01034546 86.01832581]
[119.08076477 99.17493439]
[114.16868591 112.80642700]
[101.10140228 119.06681061]
[96.01626587 133.17855835]
[102.49144745 147.34576416]
[97.13336945 161.58464050]
[83.58719635 167.67042542]
[78.50205994 181.78218079]
[81.10279846 197.38815308]
[69.50901031 206.73873901]
[64.42387390 220.85049438]
[59.33874130 234.96223450]
[54.25360489 249.07398987]
[67.93602753 242.92652893]
[82.66240692 245.77851868]
[93.06054688 256.58956909]
[95.33721924 271.41577148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 16]
[5 15]
[6 14]
[7 13]
[17 104]
[18 103]
[19 102]
[20 101]
[22 99]
[23 98]
[26 95]
[27 94]
[30 91]
[31 90]
[32 89]
[33 88]
[34 87]
[35 86]
[37 84]
[38 83]
[39 82]
[40 81]
[41 80]
[44 78]
[45 77]
[46 76]
[47 75]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
