%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PSCA)
} def

/sequence { (\
AUUUGAGGCCAUAUAAAGUCACCUGAGGCCCUCUCCACCACAGCCCACCAGUGACCACGAAGGCUGUGCUGCUUGCCCUGUUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.005977375 ubox
1 81 0.012418809 ubox
2 13 0.005865355 ubox
2 17 0.003974586 ubox
2 18 0.003382075 ubox
2 26 0.006502730 ubox
2 28 0.011443813 ubox
2 80 0.013087051 ubox
3 16 0.004578664 ubox
3 17 0.003705986 ubox
3 25 0.006904690 ubox
3 26 0.012111113 ubox
3 27 0.016942370 ubox
4 11 0.010130642 ubox
4 15 0.004665980 ubox
4 16 0.003724554 ubox
4 21 0.011842485 ubox
4 25 0.012206942 ubox
4 26 0.060107136 ubox
4 37 0.018258549 ubox
4 68 0.007424071 ubox
4 71 0.003237423 ubox
4 75 0.009777961 ubox
4 80 0.013670735 ubox
4 83 0.006792440 ubox
5 10 0.010865509 ubox
5 14 0.004495890 ubox
5 20 0.013329180 ubox
5 24 0.005976036 ubox
5 33 0.948049288 ubox
5 35 0.091280178 ubox
5 36 0.015971756 ubox
5 67 0.009473939 ubox
5 74 0.011844274 ubox
5 79 0.017124978 ubox
5 82 0.009887881 ubox
6 19 0.012933676 ubox
6 24 0.076574548 ubox
6 32 0.948709925 ubox
6 34 0.091057360 ubox
6 65 0.003707669 ubox
6 73 0.011849082 ubox
6 74 0.011906128 ubox
6 79 0.050289096 ubox
6 81 0.009507640 ubox
6 82 0.004245318 ubox
7 20 0.054097247 ubox
7 23 0.077571064 ubox
7 30 0.613103002 ubox
7 31 0.776069325 ubox
7 33 0.045533467 ubox
7 65 0.034134711 ubox
7 72 0.008083066 ubox
7 73 0.012355555 ubox
7 77 0.068946662 ubox
7 78 0.049847998 ubox
7 82 0.003303010 ubox
8 19 0.054569507 ubox
8 22 0.077321610 ubox
8 29 0.822691202 ubox
8 30 0.551222928 ubox
8 32 0.008067944 ubox
8 64 0.036855412 ubox
8 72 0.012495474 ubox
8 76 0.070336606 ubox
8 77 0.047807525 ubox
8 81 0.004191213 ubox
9 18 0.055681615 ubox
9 28 0.987583562 ubox
9 63 0.036979830 ubox
9 71 0.012180297 ubox
9 75 0.070425344 ubox
9 80 0.004135374 ubox
10 25 0.015247302 ubox
10 27 0.986910084 ubox
10 62 0.036911388 ubox
10 71 0.007560838 ubox
10 75 0.044073738 ubox
10 80 0.003500968 ubox
11 19 0.070241608 ubox
11 24 0.026941723 ubox
11 70 0.007042522 ubox
11 74 0.040079383 ubox
11 79 0.003478382 ubox
12 18 0.070182843 ubox
12 25 0.591736517 ubox
12 71 0.003299982 ubox
12 75 0.003337874 ubox
13 19 0.022812151 ubox
13 24 0.547770775 ubox
13 70 0.003259697 ubox
13 74 0.004323520 ubox
14 18 0.024766501 ubox
14 25 0.209685069 ubox
14 71 0.009519777 ubox
15 24 0.210819105 ubox
15 70 0.008960132 ubox
15 74 0.003596871 ubox
16 73 0.003226760 ubox
16 74 0.023344684 ubox
17 24 0.254654340 ubox
17 34 0.003404323 ubox
17 70 0.015247349 ubox
17 73 0.025707585 ubox
18 23 0.264817483 ubox
18 29 0.077612066 ubox
18 33 0.003531574 ubox
18 38 0.003593757 ubox
18 55 0.062785373 ubox
18 69 0.015348826 ubox
18 72 0.025769291 ubox
19 26 0.221145314 ubox
19 28 0.077654429 ubox
19 37 0.003496811 ubox
19 54 0.063035116 ubox
19 68 0.004945826 ubox
19 71 0.018813283 ubox
20 25 0.222304526 ubox
20 27 0.077434568 ubox
20 53 0.063078000 ubox
20 68 0.011321209 ubox
20 71 0.012349923 ubox
20 83 0.004122554 ubox
21 52 0.062991235 ubox
21 67 0.011413905 ubox
21 70 0.011107724 ubox
21 81 0.011752882 ubox
21 82 0.004217838 ubox
22 28 0.009836416 ubox
22 51 0.055476290 ubox
22 66 0.011377957 ubox
22 80 0.012623096 ubox
23 27 0.009835559 ubox
23 43 0.004705268 ubox
23 51 0.029920051 ubox
24 37 0.007598287 ubox
24 42 0.004711805 ubox
24 47 0.044371884 ubox
24 50 0.042164412 ubox
24 80 0.010387833 ubox
25 33 0.024226753 ubox
25 35 0.059412144 ubox
25 36 0.006716348 ubox
25 41 0.004692770 ubox
25 46 0.044919511 ubox
25 49 0.042214280 ubox
25 79 0.016177543 ubox
25 82 0.005778586 ubox
26 32 0.024243933 ubox
26 34 0.059902780 ubox
26 74 0.007507868 ubox
26 79 0.030999773 ubox
26 81 0.005833568 ubox
27 31 0.023719963 ubox
27 33 0.059873534 ubox
27 34 0.003455220 ubox
27 35 0.003364092 ubox
27 36 0.011726322 ubox
27 39 0.004945353 ubox
27 45 0.062728041 ubox
27 46 0.004135264 ubox
27 65 0.011517107 ubox
27 73 0.008547389 ubox
27 77 0.089125640 ubox
27 78 0.029786510 ubox
28 32 0.038786503 ubox
28 33 0.003756358 ubox
28 35 0.011659567 ubox
28 38 0.004951980 ubox
28 44 0.062787835 ubox
28 45 0.003517307 ubox
28 64 0.011667056 ubox
28 72 0.008743251 ubox
28 76 0.090519890 ubox
28 77 0.026726406 ubox
28 81 0.003190810 ubox
29 43 0.062670041 ubox
29 63 0.011671622 ubox
29 71 0.008471672 ubox
29 75 0.091335283 ubox
29 80 0.003300087 ubox
30 62 0.011640683 ubox
32 42 0.003716760 ubox
32 60 0.011085575 ubox
33 59 0.011230283 ubox
36 53 0.003799770 ubox
36 68 0.007146943 ubox
36 71 0.875722961 ubox
36 75 0.039003945 ubox
36 80 0.022050733 ubox
36 83 0.021726771 ubox
37 52 0.003862355 ubox
37 67 0.005909043 ubox
37 70 0.875159011 ubox
37 74 0.037737370 ubox
37 79 0.021053268 ubox
37 81 0.028176653 ubox
37 82 0.019553440 ubox
38 51 0.003855484 ubox
38 66 0.004375322 ubox
38 80 0.030999804 ubox
39 53 0.012937503 ubox
39 68 0.988240298 ubox
39 71 0.005810834 ubox
39 75 0.015007975 ubox
39 80 0.010770142 ubox
39 83 0.015609545 ubox
40 52 0.012982765 ubox
40 67 0.995149142 ubox
40 70 0.003962543 ubox
40 74 0.014215293 ubox
40 79 0.009257223 ubox
40 81 0.039900438 ubox
40 82 0.011176894 ubox
41 51 0.012974917 ubox
41 66 0.995977537 ubox
41 71 0.038897883 ubox
41 75 0.007986652 ubox
41 80 0.043800368 ubox
41 83 0.005062851 ubox
42 65 0.995771738 ubox
42 70 0.039092346 ubox
42 73 0.013189177 ubox
42 74 0.005713571 ubox
42 79 0.043764642 ubox
42 82 0.005114548 ubox
43 64 0.996005484 ubox
43 69 0.039117878 ubox
43 72 0.014773673 ubox
43 76 0.008757477 ubox
43 78 0.043520764 ubox
43 81 0.005120155 ubox
44 63 0.992570818 ubox
44 68 0.038848699 ubox
44 71 0.014784666 ubox
44 75 0.008998865 ubox
44 80 0.005108221 ubox
45 62 0.987373297 ubox
45 63 0.082368190 ubox
46 53 0.118868450 ubox
46 62 0.116309885 ubox
46 66 0.035088754 ubox
46 68 0.014125768 ubox
46 75 0.041214169 ubox
47 52 0.099060989 ubox
47 65 0.034904661 ubox
47 67 0.016226952 ubox
47 74 0.039884037 ubox
48 63 0.035810257 ubox
48 66 0.011732570 ubox
49 62 0.036449236 ubox
49 66 0.019127733 ubox
49 71 0.041214338 ubox
49 75 0.004157979 ubox
50 65 0.022476795 ubox
50 70 0.041348416 ubox
50 73 0.015232568 ubox
50 74 0.003317379 ubox
51 58 0.810628165 ubox
51 64 0.022577611 ubox
51 69 0.041363248 ubox
51 72 0.016208160 ubox
52 57 0.758815024 ubox
52 59 0.142667324 ubox
52 63 0.021025283 ubox
52 68 0.039408844 ubox
52 71 0.016011879 ubox
53 58 0.144384206 ubox
53 65 0.008197848 ubox
53 67 0.031610266 ubox
53 70 0.011313088 ubox
53 82 0.003200142 ubox
54 67 0.006838781 ubox
54 81 0.003948073 ubox
55 63 0.038585323 ubox
55 66 0.006812488 ubox
55 80 0.003989048 ubox
56 62 0.038934069 ubox
56 66 0.005384235 ubox
56 68 0.022574149 ubox
56 80 0.005629710 ubox
56 83 0.004889667 ubox
57 65 0.005267509 ubox
57 67 0.023749779 ubox
57 79 0.005502719 ubox
57 81 0.008947502 ubox
57 82 0.004146514 ubox
58 66 0.023813144 ubox
58 75 0.003820487 ubox
58 80 0.009855647 ubox
58 83 0.006441766 ubox
59 65 0.020725407 ubox
59 74 0.003817671 ubox
59 79 0.008754723 ubox
59 82 0.006618611 ubox
60 73 0.003171862 ubox
60 74 0.004757867 ubox
60 81 0.006383836 ubox
61 73 0.004568912 ubox
61 74 0.041415564 ubox
61 79 0.006561147 ubox
62 70 0.004805999 ubox
62 72 0.003607498 ubox
62 73 0.046660174 ubox
62 77 0.015239660 ubox
62 78 0.006259094 ubox
63 69 0.005236060 ubox
63 72 0.047432507 ubox
63 76 0.015503163 ubox
63 77 0.005684394 ubox
64 68 0.005209515 ubox
64 71 0.047505968 ubox
64 75 0.015712061 ubox
66 72 0.009696537 ubox
66 76 0.003653809 ubox
67 71 0.009080159 ubox
67 75 0.003633142 ubox
68 76 0.097933024 ubox
68 81 0.012779346 ubox
69 75 0.112267899 ubox
69 80 0.031283004 ubox
70 80 0.005309617 ubox
70 83 0.005549933 ubox
71 79 0.006394295 ubox
71 81 0.138045454 ubox
71 82 0.009694672 ubox
72 80 0.170222039 ubox
74 80 0.014754702 ubox
74 83 0.014591214 ubox
75 79 0.012539861 ubox
75 81 0.092134858 ubox
75 82 0.020906874 ubox
76 80 0.096376415 ubox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
39 68 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
42 65 0.9500000 lbox
43 64 0.9500000 lbox
44 63 0.9500000 lbox
45 62 0.9500000 lbox
51 58 0.9500000 lbox
52 57 0.9500000 lbox
showpage
end
%%EOF
