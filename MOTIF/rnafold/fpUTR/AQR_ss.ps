%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACGCUUGGGCUGUUGUACGGGUUCCCUACGGGACUCUGAAGGCUGAGGAUAUCCGGCCCGGAGCGUUUGUGCGGCGCGGAGUUAAGCGCCCCGGCAGUAACUUAAGGGAAGUGGACCAGGGUUGCCGCUGCCCAGAGCGGUCCUUUAGUUUCCACUGGAGUGGAGGGAAGAGUGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[-108.24530792 103.56657410]
[-122.36027527 108.64276886]
[-136.47523499 113.71896362]
[-150.59020996 118.79515839]
[-164.70516968 123.87135315]
[-178.82012939 128.94755554]
[-192.93510437 134.02374268]
[-207.05006409 139.09994507]
[-221.12069702 144.29777527]
[-235.14593506 149.61685181]
[-249.17118835 154.93591309]
[-263.19641113 160.25498962]
[-249.56192017 166.50801086]
[-243.00541687 179.99920654]
[-246.51345825 194.58322144]
[-258.48812866 203.61691284]
[-273.47482300 202.98536682]
[-284.64700317 192.97625732]
[-286.91561890 178.14880371]
[-279.24658203 165.25642395]
[-293.81069946 168.84616089]
[-308.37481689 172.43589783]
[-322.93896484 176.02563477]
[-337.50308228 179.61535645]
[-345.70547485 192.85766602]
[-360.52670288 196.29069519]
[-373.10067749 188.38937378]
[-387.66479492 191.97911072]
[-402.22891235 195.56884766]
[-409.83584595 200.67356873]
[-417.07540894 199.09254456]
[-431.69934082 202.43035889]
[-446.32324219 205.76817322]
[-450.18035889 220.57969666]
[-460.48751831 231.89434814]
[-474.87615967 237.11210632]
[-490.03994751 235.03396606]
[-502.49429321 226.13748169]
[-509.37731934 212.46697998]
[-509.10733032 197.16384888]
[-501.74639893 183.74464417]
[-488.98599243 175.29298401]
[-473.75833130 173.75102234]
[-459.56268311 179.47306824]
[-449.66107178 191.14425659]
[-435.03713989 187.80644226]
[-420.41320801 184.46862793]
[-405.81866455 181.00471497]
[-391.25451660 177.41499329]
[-376.69039917 173.82525635]
[-369.22863770 160.98556519]
[-354.50967407 157.13758850]
[-341.09283447 165.05123901]
[-326.52868652 161.46150208]
[-311.96456909 157.87176514]
[-297.40045166 154.28202820]
[-282.83630371 150.69229126]
[-268.51550293 146.22975159]
[-254.49024963 140.91067505]
[-240.46501160 135.59159851]
[-226.43977356 130.27252197]
[-221.28715515 124.94696808]
[-212.12626648 124.98497772]
[-198.01129150 119.90878296]
[-183.89633179 114.83258820]
[-169.78137207 109.75639343]
[-155.66639709 104.68019867]
[-141.55143738 99.60399628]
[-127.43647003 94.52780151]
[-113.32151031 89.45160675]
[-112.94244385 84.73588562]
[-111.62699890 80.19151306]
[-109.42842865 76.00247955]
[-106.43573761 72.33838654]
[-102.77010345 69.34758759]
[-106.61069489 54.84759521]
[-110.45127869 40.34759903]
[-114.29186249 25.84760094]
[-118.13245392 11.34760571]
[-132.65090942 5.87092209]
[-141.14932251 -7.11201096]
[-140.35987854 -22.60899162]
[-130.58615112 -34.66111374]
[-115.58631134 -38.63409424]
[-101.12812042 -33.00023270]
[-92.77104187 -19.92587280]
[-93.72854614 -4.43836832]
[-103.63245392 7.50701904]
[-99.79187012 22.00701523]
[-95.95128632 36.50701141]
[-92.11069489 51.00700760]
[-88.27011108 65.50700378]
[-78.74045563 67.78749847]
[-70.82126617 73.82688904]
[-65.94612885 82.69510651]
[-50.96623611 83.47152710]
[-35.98634338 84.24794769]
[-21.00645256 85.02436829]
[-6.02655983 85.80078888]
[8.95333195 86.57720947]
[23.93322372 87.35363007]
[30.79365730 84.55263519]
[39.16430283 88.27494049]
[54.12856293 89.30980682]
[69.09281921 90.34467316]
[78.13875580 68.37214661]
[102.59870148 55.56050110]
[133.41516113 62.02543259]
[143.92982483 51.32768250]
[141.23751831 36.04595947]
[148.07200623 22.11507797]
[161.80529785 14.89174938]
[177.15664673 17.15349007]
[188.22315979 28.03061295]
[190.74954224 43.34064484]
[183.76432800 57.19656372]
[169.95349121 64.27048492]
[154.62757874 61.84234619]
[144.11291504 72.54009247]
[150.62117004 86.05462646]
[165.54078674 84.50386810]
[180.46041870 82.95310974]
[195.38003540 81.40235138]
[200.98364258 77.81531525]
[206.69671631 77.64247131]
[210.84010315 80.06471252]
[225.80435181 79.02984619]
[240.76861572 77.99497223]
[255.73287964 76.96010590]
[270.69714355 75.92523956]
[285.66140747 74.89037323]
[295.84875488 62.80760956]
[311.60296631 61.55061722]
[323.57736206 71.86515808]
[324.66772461 87.63179016]
[314.22714233 99.49645233]
[298.44989014 100.42005157]
[286.69625854 89.85463715]
[271.73199463 90.88950348]
[256.76773071 91.92436981]
[241.80348206 92.95923615]
[226.83921814 93.99410248]
[211.87496948 95.02896881]
[196.93080139 96.32197571]
[182.01116943 97.87273407]
[167.09155273 99.42349243]
[152.17193604 100.97425079]
[149.63383484 108.03173065]
[159.31967163 119.48531342]
[144.55763245 122.14669800]
[142.01953125 129.20417786]
[152.53419495 139.90193176]
[163.04887390 150.59968567]
[173.56353760 161.29742432]
[184.07820129 171.99517822]
[194.59286499 182.69291687]
[205.10752869 193.39067078]
[221.04661560 197.24783325]
[225.41554260 213.05430603]
[213.71995544 224.54974365]
[197.99124146 219.90861511]
[194.40977478 203.90533447]
[183.89511108 193.20759583]
[173.38044739 182.50984192]
[162.86578369 171.81208801]
[152.35112000 161.11434937]
[141.83645630 150.41659546]
[131.32179260 139.71884155]
[106.84635925 145.52033997]
[85.03144836 138.68678284]
[71.35704041 123.31252289]
[68.05795288 105.30892944]
[53.09369659 104.27406311]
[38.12943649 103.23919678]
[23.15680504 102.33351898]
[8.17691231 101.55709839]
[-6.80298042 100.78067780]
[-21.78287315 100.00425720]
[-36.76276398 99.22783661]
[-51.74265671 98.45141602]
[-66.72254944 97.67499542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[4 67]
[5 66]
[6 65]
[7 64]
[8 63]
[9 61]
[10 60]
[11 59]
[12 58]
[20 57]
[21 56]
[22 55]
[23 54]
[24 53]
[27 50]
[28 49]
[29 48]
[31 47]
[32 46]
[33 45]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[95 181]
[96 180]
[97 179]
[98 178]
[99 177]
[100 176]
[101 175]
[103 174]
[104 173]
[105 172]
[108 119]
[109 118]
[120 147]
[121 146]
[122 145]
[123 144]
[126 143]
[127 142]
[128 141]
[129 140]
[130 139]
[131 138]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
