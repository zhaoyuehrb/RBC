%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGGGAGCUCCCGCCCCUUCCGCCUCGGCGCCCCGCCCAGGCCUCGCCCCUAGGUGUUCCCGCCCCUCCCCCUCCCGUGUCGCUCGCUUUCUGUCAGCCUCUCUCCCUCUCCCUCUCCCCUCUCCUUCCUCUCGCUUCCUCUCUCGCACCUGAGCGUACGCACCUGCCCGGGCCCGGCUCCCUCCUCCUCUCCCCUCCCUCUUUCCCCGCCCGGCCGCGGGAGCCUCGUGGCUGCGUCACCGCCGCCCCCCCAG\
ACAAG\
) } def
/len { sequence length } bind def

/coor [
[147.25923157 353.08102417]
[146.35700989 338.10815430]
[145.45480347 323.13531494]
[144.55259705 308.16247559]
[143.65037537 293.18963623]
[142.74816895 278.21679688]
[134.45631409 248.76467896]
[150.31015015 229.79296875]
[145.34988403 215.63685608]
[140.38961792 201.48072815]
[135.42933655 187.32461548]
[130.46907043 173.16848755]
[125.50879669 159.01237488]
[120.54852295 144.85626221]
[115.58825684 130.70013428]
[108.28353882 128.99981689]
[105.84977722 143.80105591]
[106.27693176 158.79496765]
[92.35044098 164.36749268]
[82.31647491 153.21762085]
[89.32124329 139.95370483]
[93.67410278 125.59916687]
[86.36938477 123.89884186]
[75.66746521 134.40925598]
[64.96554565 144.91967773]
[54.26362610 155.43009949]
[49.83921814 170.62007141]
[35.33731842 174.01773071]
[24.63539886 184.52815247]
[13.93347836 195.03857422]
[3.23155880 205.54899597]
[-3.83241224 220.96121216]
[-20.59782219 218.43983459]
[-22.81610680 201.63163757]
[-7.27886009 194.84707642]
[3.42305970 184.33665466]
[14.12497997 173.82623291]
[24.82690048 163.31581116]
[28.48583221 148.87762451]
[43.75320435 144.72817993]
[54.45512390 134.21775818]
[65.15704346 123.70733643]
[75.85896301 113.19692230]
[72.54685974 106.46788025]
[59.08878326 113.09208679]
[45.63070679 119.71629333]
[32.17262650 126.34050751]
[18.71444702 132.96450806]
[12.09065437 119.50621796]
[25.54841805 112.88242340]
[39.00649643 106.25821686]
[52.46457672 99.63401031]
[65.92265320 93.00980377]
[62.61054993 86.28076172]
[47.75402832 88.35047913]
[32.89750290 90.42019653]
[18.04098129 92.48991394]
[5.44578743 102.99196625]
[-9.85142612 97.08203125]
[-12.11419678 80.83974457]
[0.98521841 70.97377777]
[15.97126484 77.63338470]
[30.82778740 75.56367493]
[45.68431091 73.49395752]
[60.54083252 71.42424011]
[64.71230316 65.19135284]
[50.68220139 59.88510513]
[36.65209961 54.57885361]
[21.69266701 53.47644424]
[10.91598892 43.04269028]
[9.33056641 28.12671280]
[17.67322731 15.66075802]
[32.06669235 11.43842220]
[45.82155609 17.42204857]
[52.54530716 30.83168411]
[62.80027008 41.77863312]
[73.05523682 52.72558212]
[77.22669983 46.49269867]
[73.47537231 31.96935463]
[69.72404480 17.44601059]
[65.97270966 2.92266583]
[62.13404465 -11.57783794]
[58.20817566 -26.05497742]
[54.28230667 -40.53211594]
[50.35644150 -55.00925446]
[46.43057251 -69.48639679]
[38.16281509 -82.00215149]
[26.38725281 -91.29387665]
[14.61169147 -100.58560181]
[-0.66185981 -97.23110199]
[-14.49427223 -104.52482605]
[-20.35430336 -119.02289581]
[-15.47502613 -133.87977600]
[-2.16028547 -142.08049011]
[13.30310440 -139.75291443]
[23.61380386 -127.99606323]
[23.90341568 -112.36116028]
[35.67897797 -103.06943512]
[47.45454025 -93.77770996]
[54.57622147 -96.12965393]
[48.69688416 -109.92942047]
[42.81754684 -123.72917938]
[36.93821335 -137.52894592]
[31.05887413 -151.32870483]
[25.17953873 -165.12846375]
[19.30020142 -178.92822266]
[13.42086506 -192.72798157]
[7.54152822 -206.52774048]
[1.66219187 -220.32749939]
[-4.21714497 -234.12725830]
[-10.09648132 -247.92703247]
[-15.97581768 -261.72677612]
[-27.47039986 -271.36392212]
[-33.32373810 -285.17474365]
[-32.25477219 -300.13659668]
[-24.49746513 -312.97497559]
[-11.74956131 -320.88012695]
[3.19895172 -322.12185669]
[17.07646751 -316.42849731]
[26.84577370 -305.04602051]
[30.36877823 -290.46560669]
[26.87434006 -275.87811279]
[30.36977768 -261.29104614]
[33.86521530 -246.70401001]
[37.36065292 -232.11695862]
[40.85609055 -217.52990723]
[44.35152817 -202.94287109]
[47.84696198 -188.35581970]
[51.34239960 -173.76876831]
[54.83783722 -159.18173218]
[58.33327484 -144.59468079]
[61.82871246 -130.00762939]
[65.32415009 -115.42058563]
[68.81958771 -100.83354187]
[75.94126892 -103.18548584]
[79.86713409 -117.66262817]
[68.98272705 -128.49891663]
[64.99019623 -143.32980347]
[68.96351624 -158.16586304]
[79.83386993 -169.01625061]
[94.67720032 -172.96226501]
[109.50072479 -168.94247437]
[120.31698608 -158.03814697]
[124.21646118 -143.18252563]
[120.15021515 -128.37167358]
[109.21205139 -117.58965302]
[94.34427643 -113.73675537]
[90.41841125 -99.25962067]
[87.06450653 -89.37990570]
[81.63685608 -81.61051178]
[74.91972351 -76.31830597]
[67.74198151 -73.62562561]
[60.90771103 -73.41226196]
[64.83358002 -58.93512344]
[68.75944519 -44.45798492]
[72.68531799 -29.98084641]
[76.61118317 -15.50370598]
[81.38002014 -9.88819981]
[80.49605560 -0.82866400]
[84.24738312 13.69468021]
[87.99871826 28.21802330]
[91.75004578 42.74136734]
[101.40849304 31.26467705]
[114.69851685 24.30944824]
[129.63359070 22.91531944]
[143.98127747 27.29067993]
[155.59695435 36.78151703]
[162.74436951 49.96918488]
[164.35513306 64.88244629]
[160.18850708 79.29213715]
[150.86727905 91.04435730]
[137.78543091 98.38220978]
[152.77864075 97.93090057]
[167.77185059 97.47959137]
[182.76506042 97.02827454]
[196.32618713 88.87927246]
[209.28050232 96.23014069]
[224.27371216 95.77882385]
[239.26692200 95.32751465]
[241.75299072 80.48481750]
[247.08724976 66.41243744]
[255.06465149 53.65127563]
[265.37857056 42.69183731]
[277.63256836 33.95537186]
[291.35562134 27.77769470]
[306.02029419 24.39625168]
[321.06286621 23.94101906]
[335.90515137 26.42949295]
[349.97668457 31.76602554]
[362.73654175 39.74549484]
[373.69430542 50.06118774]
[382.42880249 62.31660080]
[388.60424805 76.04066467]
[391.98330688 90.70586395]
[392.43612671 105.74851227]
[389.94525146 120.59040070]
[384.60641479 134.66105652]
[376.62490845 147.41963196]
[366.30743408 158.37573242]
[354.05059814 167.10823059]
[340.32553101 173.28146362]
[325.65979004 176.65815735]
[310.61706543 177.10852051]
[295.77557373 174.61524963]
[281.70578003 169.27415466]
[268.94851685 161.29055786]
[257.99407959 150.97132874]
[249.26356506 138.71308899]
[243.09254456 124.98702240]
[239.71823120 110.32072449]
[224.72502136 110.77203369]
[209.73181152 111.22335052]
[197.24308777 119.34007263]
[183.21636963 112.02148438]
[168.22315979 112.47279358]
[153.22994995 112.92411041]
[138.23674011 113.37541962]
[129.74436951 125.73986816]
[134.70465088 139.89598083]
[139.66491699 154.05210876]
[144.62518311 168.20822144]
[149.58546448 182.36434937]
[154.54573059 196.52046204]
[159.50601196 210.67657471]
[164.46627808 224.83270264]
[172.65676880 223.80992126]
[181.39439392 225.77413940]
[189.56274414 230.93281555]
[195.98460388 239.07395935]
[199.57833862 249.55458069]
[199.51318359 261.34646606]
[206.93486023 274.38177490]
[214.35655212 287.41705322]
[227.90844727 295.58139038]
[227.48176575 310.46990967]
[234.90345764 323.50518799]
[242.32513428 336.54046631]
[256.74325562 344.35388184]
[256.91516113 360.75213623]
[242.66398621 368.86608887]
[228.65013123 360.34881592]
[229.28985596 343.96215820]
[221.86816406 330.92684937]
[214.44648743 317.89157104]
[201.42544556 310.65960693]
[201.32125854 294.83871460]
[193.89958191 281.80343628]
[186.47790527 268.76815796]
[179.28868103 270.90475464]
[157.72100830 277.31457520]
[158.62321472 292.28741455]
[159.52543640 307.26028442]
[160.42764282 322.23312378]
[161.32984924 337.20596313]
[162.23207092 352.17880249]
[174.22407532 362.47283936]
[175.34140015 378.23757935]
[164.92115784 390.12008667]
[149.14547729 391.07067871]
[137.37380981 380.52539062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 255]
[2 254]
[3 253]
[4 252]
[5 251]
[6 250]
[8 225]
[9 224]
[10 223]
[11 222]
[12 221]
[13 220]
[14 219]
[15 218]
[23 43]
[24 42]
[25 41]
[26 40]
[28 38]
[29 37]
[30 36]
[31 35]
[54 65]
[55 64]
[56 63]
[57 62]
[78 162]
[79 161]
[80 160]
[81 159]
[82 157]
[83 156]
[84 155]
[85 154]
[86 153]
[87 99]
[88 98]
[89 97]
[135 148]
[136 147]
[172 217]
[173 216]
[174 215]
[175 214]
[177 212]
[178 211]
[179 210]
[231 248]
[232 247]
[233 246]
[235 244]
[236 243]
[237 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
