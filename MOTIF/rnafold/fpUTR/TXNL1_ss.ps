%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:48:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCUGCUGGGUGCCGCACGCCUUCCCAUCCUCCUCCUCUCCCCUCCCCCAUCCCUCCCCGCCCCCUCGGCCGCUCCGCUCCCUGGCGUGACUCGGCACUGAGAGUCCCGGGAGAAGACUCGGCGGUCGCCACCUCUUCUGUCCAGGCCUCGGCCUUCCUGAGCAUCUCUCCUUCCUCUCCCAGAUCGUCUUCUCCUUCAGUUUCAAAGCCAGUGGCGUCGCGGCCACCCUGCCGGGCUCUCUGUGAGG\
) } def
/len { sequence length } bind def

/coor [
[141.01400757 419.71337891]
[143.07624817 414.97302246]
[141.38340759 400.06887817]
[139.69055176 385.16470337]
[137.99771118 370.26052856]
[136.11770630 355.37881470]
[134.05085754 340.52188110]
[124.63366699 328.98214722]
[130.39562988 314.24746704]
[128.32878113 299.39056396]
[126.26192474 284.53363037]
[124.19506836 269.67669678]
[122.12821198 254.81979370]
[119.96805573 239.97615051]
[117.71466827 225.14636230]
[115.46128845 210.31658936]
[113.20790100 195.48681641]
[110.86138153 180.67149353]
[108.42182922 165.87120056]
[105.98226929 151.07090759]
[103.54270935 136.27062988]
[101.10315704 121.47033691]
[96.14842987 135.62840271]
[91.19371033 149.78645325]
[86.23898315 163.94451904]
[81.28426361 178.10258484]
[76.32953644 192.26065063]
[71.37480927 206.41870117]
[72.93439484 221.33740234]
[71.70282745 236.28675842]
[67.72275543 250.74909973]
[61.13199997 264.22360229]
[52.15879440 276.24365234]
[41.11387253 286.39300537]
[28.37969971 294.32022095]
[14.39725113 299.75079346]
[-0.34928164 302.49667358]
[-15.34924316 302.46273804]
[-30.08320427 299.65020752]
[-44.04094315 294.15643311]
[-56.73912430 286.17169189]
[-67.73802185 275.97244263]
[-76.65676117 263.91192627]
[-83.18649292 250.40776062]
[-87.10110474 235.92758179]
[-88.26503754 220.97280884]
[-86.63798523 206.06130981]
[-82.27629089 191.70945740]
[-75.33099365 178.41424561]
[-66.04259491 166.63604736]
[-54.73275375 156.78276062]
[-41.79310608 149.19557190]
[-27.67173767 144.13720703]
[-12.85765648 141.78285217]
[2.13722539 142.21415710]
[15.88183975 136.20703125]
[29.62645340 130.19989014]
[43.37106705 124.19277191]
[57.11568069 118.18563843]
[70.86029816 112.17851257]
[84.60491180 106.17138672]
[69.66290283 104.85361481]
[54.72090149 103.53585052]
[41.55002594 112.69595337]
[26.21826744 107.97189331]
[20.48683929 92.98756409]
[28.75240326 79.23764801]
[44.67432404 77.26992035]
[56.03866959 88.59384155]
[70.98067474 89.91161346]
[85.92267609 91.22937775]
[90.01695251 76.79896545]
[76.60933685 70.07321930]
[63.20171356 63.34746933]
[47.39727020 64.07562256]
[39.49038315 51.45300674]
[26.08276367 44.72726059]
[12.67514133 38.00151062]
[-2.94288969 41.66984177]
[-15.45895481 31.63352394]
[-15.27180004 15.59156322]
[-2.52499437 5.84997702]
[13.00320435 9.88167763]
[19.40089035 24.59388924]
[32.80850983 31.31963730]
[46.21613312 38.04538727]
[61.06157303 36.83616257]
[69.92745972 49.93984604]
[83.33508301 56.66559601]
[96.74270630 63.39134216]
[111.42141724 60.30340576]
[120.98278046 48.74570465]
[130.54414368 37.18800735]
[133.59182739 28.60454178]
[140.29898071 25.54613304]
[150.00482178 14.10949421]
[159.71066284 2.67285681]
[158.60795593 -12.86489677]
[168.61396790 -24.32501030]
[183.43363953 -25.28052711]
[193.13948059 -36.71716309]
[202.84532166 -48.15380096]
[212.55116272 -59.59043884]
[222.25700378 -71.02707672]
[216.87243652 -83.92216492]
[217.56031799 -97.81317902]
[224.12976074 -109.99681091]
[235.25090027 -118.12658691]
[248.72360229 -120.66467285]
[261.91268921 -117.17256927]
[271.76147461 -128.48634338]
[281.61026001 -139.80010986]
[291.45904541 -151.11387634]
[301.30783081 -162.42764282]
[311.15661621 -173.74142456]
[321.00540161 -185.05519104]
[330.85418701 -196.36895752]
[340.70297241 -207.68273926]
[350.55175781 -218.99650574]
[342.74188232 -233.00650024]
[344.55886841 -251.19752502]
[357.80447388 -266.89151001]
[358.36981201 -281.88085938]
[358.93518066 -296.87020874]
[350.80242920 -311.11065674]
[359.30120850 -325.13574219]
[375.68869019 -324.51763916]
[383.10684204 -309.89221191]
[373.92453003 -296.30484009]
[373.35916138 -281.31552124]
[372.79382324 -266.32617188]
[379.45483398 -262.87933350]
[386.34854126 -276.20135498]
[393.24246216 -289.52328491]
[406.56427002 -282.62915039]
[399.67059326 -269.30767822]
[392.77688599 -255.98562622]
[399.43789673 -252.53877258]
[411.34774780 -261.65771484]
[423.25762939 -270.77667236]
[435.16748047 -279.89562988]
[428.77410889 -301.49673462]
[435.11752319 -324.42425537]
[453.55377197 -341.38470459]
[479.40841675 -346.27774048]
[488.37701416 -358.30126953]
[497.34558105 -370.32476807]
[506.31414795 -382.34826660]
[507.69473267 -398.68920898]
[522.64971924 -405.41821289]
[535.79473877 -395.61309814]
[533.60729980 -379.36047363]
[518.33764648 -373.37969971]
[509.36907959 -361.35617065]
[500.40051270 -349.33267212]
[491.43194580 -337.30917358]
[496.53158569 -331.80975342]
[507.53057861 -342.00888062]
[517.72955322 -331.00973511]
[506.73089600 -320.81094360]
[511.83053589 -315.31152344]
[524.49542236 -323.34890747]
[537.16033936 -331.38632202]
[547.29400635 -344.97845459]
[563.16021729 -339.00350952]
[561.81097412 -322.10333252]
[545.19775391 -318.72140503]
[532.53283691 -310.68399048]
[519.86791992 -302.64660645]
[519.21533203 -293.63876343]
[516.94488525 -285.03308105]
[513.18115234 -277.11300659]
[508.09701538 -270.13015747]
[501.90634155 -264.29638672]
[494.85507202 -259.77731323]
[487.21194458 -256.68798828]
[479.25820923 -255.09016418]
[471.27737427 -254.99169922]
[463.54513550 -256.34786987]
[456.31985474 -259.06454468]
[449.83395386 -263.00286865]
[444.28643799 -267.98577881]
[432.37658691 -258.86682129]
[420.46670532 -249.74786377]
[408.55685425 -240.62892151]
[401.16937256 -215.93315125]
[381.34762573 -204.46058655]
[361.86553955 -209.14772034]
[352.01675415 -197.83393860]
[342.16796875 -186.52017212]
[332.31918335 -175.20640564]
[322.47039795 -163.89263916]
[312.62161255 -152.57885742]
[302.77282715 -141.26509094]
[292.92404175 -129.95132446]
[283.07525635 -118.63755035]
[273.22647095 -107.32378387]
[278.84872437 -92.16201782]
[276.03421021 -76.14278412]
[265.45898438 -63.66207504]
[249.94187927 -58.19337082]
[233.69363403 -61.32123947]
[223.98779297 -49.88460159]
[214.28195190 -38.44796371]
[204.57611084 -27.01132584]
[194.87028503 -15.57468700]
[196.33770752 -0.79692614]
[186.65753174 10.93971443]
[171.14730835 12.37869644]
[161.44146729 23.81533432]
[151.73562622 35.25197220]
[142.10183716 46.74936676]
[132.54048157 58.30706406]
[122.97911835 69.86476135]
[115.90344238 119.03077698]
[118.34300232 133.83106995]
[120.78255463 148.63136292]
[123.22211456 163.43164062]
[125.66167450 178.23193359]
[130.13468933 186.16644287]
[128.03767395 193.23342896]
[130.29106140 208.06320190]
[132.54444885 222.89299011]
[134.79782104 237.72276306]
[139.17079163 245.71284485]
[136.98513794 252.75292969]
[139.05198669 267.60986328]
[141.11885071 282.46676636]
[143.18569946 297.32369995]
[145.25254822 312.18060303]
[154.81758118 324.78302002]
[148.90777588 338.45501709]
[150.97462463 353.31195068]
[154.70649719 358.71990967]
[155.10629272 364.35693359]
[152.90188599 368.56768799]
[154.59472656 383.47186279]
[156.28756714 398.37600708]
[157.98042297 413.28018188]
[159.95388794 428.14981079]
[162.20726013 442.97958374]
[164.46064758 457.80935669]
[172.81781006 472.56042480]
[160.95671082 484.67449951]
[146.03259277 476.63043213]
[149.63087463 460.06274414]
[147.37748718 445.23297119]
[145.12409973 430.40319824]
[142.54150391 428.03781128]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 239]
[3 238]
[4 237]
[5 236]
[6 233]
[7 232]
[9 230]
[10 229]
[11 228]
[12 227]
[13 226]
[14 224]
[15 223]
[16 222]
[17 221]
[18 219]
[19 218]
[20 217]
[21 216]
[22 215]
[61 71]
[62 70]
[63 69]
[72 90]
[73 89]
[74 88]
[76 86]
[77 85]
[78 84]
[91 214]
[92 213]
[93 212]
[95 211]
[96 210]
[97 209]
[100 206]
[101 205]
[102 204]
[103 203]
[104 202]
[110 197]
[111 196]
[112 195]
[113 194]
[114 193]
[115 192]
[116 191]
[117 190]
[118 189]
[119 188]
[122 131]
[123 130]
[124 129]
[138 185]
[139 184]
[140 183]
[141 182]
[145 156]
[146 155]
[147 154]
[148 153]
[161 169]
[162 168]
[163 167]
[240 248]
[241 247]
[242 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
