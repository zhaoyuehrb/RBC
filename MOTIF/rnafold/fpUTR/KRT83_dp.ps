%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT83)
} def

/sequence { (\
ACAGGCCCUUGGUUCCAUCCUCUGCCAUCUACUCCACUGUUCAGACACCUCCUAACCUCCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.180896136 ubox
1 62 0.063486528 ubox
2 11 0.010778458 ubox
2 24 0.057757242 ubox
2 39 0.208027091 ubox
2 61 0.072757900 ubox
3 9 0.008794748 ubox
3 10 0.010973547 ubox
3 21 0.009435063 ubox
3 23 0.057983657 ubox
3 30 0.037338860 ubox
3 33 0.058008321 ubox
3 38 0.207043324 ubox
3 50 0.066539578 ubox
3 53 0.052242270 ubox
3 58 0.092715175 ubox
4 8 0.009255808 ubox
4 9 0.009119215 ubox
4 14 0.038252648 ubox
4 15 0.010845377 ubox
4 16 0.016635117 ubox
4 20 0.010741687 ubox
4 22 0.057890114 ubox
4 26 0.936868678 ubox
4 29 0.035809504 ubox
4 30 0.012876561 ubox
4 32 0.061927569 ubox
4 33 0.053239575 ubox
4 34 0.025528068 ubox
4 35 0.131758773 ubox
4 37 0.191781299 ubox
4 38 0.003176173 ubox
4 41 0.006489798 ubox
4 42 0.005185501 ubox
4 49 0.070939622 ubox
4 50 0.003686497 ubox
4 51 0.004096935 ubox
4 52 0.054509422 ubox
4 53 0.005449928 ubox
4 57 0.098987588 ubox
4 58 0.006726868 ubox
4 59 0.013267318 ubox
4 60 0.057030869 ubox
4 63 0.122237815 ubox
5 13 0.050177571 ubox
5 14 0.007869731 ubox
5 15 0.015789705 ubox
5 19 0.010527192 ubox
5 20 0.008074875 ubox
5 21 0.052935051 ubox
5 25 0.938415494 ubox
5 28 0.033978877 ubox
5 29 0.013783122 ubox
5 32 0.073644269 ubox
5 33 0.024740540 ubox
5 34 0.134744428 ubox
5 37 0.004366388 ubox
5 40 0.008036643 ubox
5 41 0.004251540 ubox
5 48 0.070562102 ubox
5 49 0.003959203 ubox
5 51 0.053755066 ubox
5 52 0.005585439 ubox
5 56 0.098506861 ubox
5 57 0.007483026 ubox
5 58 0.011383414 ubox
5 59 0.056770170 ubox
5 62 0.127388106 ubox
6 12 0.055194624 ubox
6 24 0.937265589 ubox
6 39 0.008440565 ubox
6 61 0.127591020 ubox
7 11 0.054852397 ubox
8 44 0.014840302 ubox
9 43 0.014460640 ubox
9 44 0.010017322 ubox
9 55 0.040729338 ubox
10 17 0.056597486 ubox
10 27 0.271382374 ubox
10 31 0.037432277 ubox
10 36 0.023305229 ubox
10 43 0.010979146 ubox
10 47 0.006831955 ubox
10 54 0.042668190 ubox
10 61 0.005719116 ubox
11 16 0.057283638 ubox
11 19 0.116169076 ubox
11 20 0.929549744 ubox
11 21 0.031075787 ubox
11 22 0.019201874 ubox
11 23 0.030886814 ubox
11 26 0.281580823 ubox
11 29 0.039658488 ubox
11 30 0.038663948 ubox
11 33 0.009664326 ubox
11 35 0.024072239 ubox
11 42 0.011081409 ubox
11 46 0.006808981 ubox
11 49 0.054988829 ubox
11 52 0.039119744 ubox
11 53 0.040611087 ubox
11 57 0.140777419 ubox
11 60 0.008375963 ubox
12 18 0.113282228 ubox
12 19 0.928472542 ubox
12 20 0.031988014 ubox
12 21 0.017850427 ubox
12 22 0.031141420 ubox
12 25 0.281602361 ubox
12 28 0.039654192 ubox
12 29 0.038758180 ubox
12 32 0.010180363 ubox
12 34 0.024024235 ubox
12 41 0.010314627 ubox
12 46 0.004207442 ubox
12 48 0.055027998 ubox
12 51 0.039166760 ubox
12 52 0.040413670 ubox
12 56 0.140905425 ubox
12 59 0.008353269 ubox
13 17 0.114657213 ubox
13 24 0.278573212 ubox
13 27 0.040130390 ubox
13 31 0.010082625 ubox
13 45 0.003888294 ubox
13 47 0.053340571 ubox
13 55 0.140008968 ubox
14 44 0.003436158 ubox
14 45 0.023283883 ubox
14 54 0.128101815 ubox
15 44 0.023339201 ubox
16 24 0.052969233 ubox
16 39 0.006178515 ubox
17 23 0.050853119 ubox
17 28 0.007096060 ubox
17 38 0.005675116 ubox
17 40 0.003447538 ubox
18 27 0.007441792 ubox
18 39 0.003325029 ubox
18 45 0.010264155 ubox
19 44 0.010094518 ubox
20 44 0.007931085 ubox
21 43 0.007882488 ubox
21 45 0.161148319 ubox
22 44 0.166533627 ubox
23 36 0.011401218 ubox
23 43 0.166465341 ubox
23 47 0.022547999 ubox
24 35 0.011940955 ubox
24 40 0.015330949 ubox
24 42 0.165190661 ubox
24 46 0.023973467 ubox
25 39 0.021565094 ubox
26 39 0.113770415 ubox
27 38 0.105880820 ubox
27 40 0.030295209 ubox
27 62 0.006801427 ubox
28 39 0.029566353 ubox
28 45 0.434463865 ubox
28 61 0.006424760 ubox
29 44 0.475484567 ubox
30 39 0.032674597 ubox
30 43 0.451749490 ubox
30 54 0.025015921 ubox
31 38 0.034509675 ubox
31 40 0.507019304 ubox
31 53 0.024889380 ubox
31 62 0.067850868 ubox
32 39 0.534049205 ubox
32 44 0.041088008 ubox
32 61 0.073089342 ubox
33 43 0.039482079 ubox
33 45 0.050000593 ubox
34 44 0.053926249 ubox
36 62 0.069847460 ubox
37 44 0.095776447 ubox
37 61 0.074357070 ubox
38 43 0.090439809 ubox
38 47 0.256213824 ubox
38 54 0.018142043 ubox
38 61 0.022746644 ubox
39 46 0.288796006 ubox
39 48 0.079851397 ubox
39 53 0.017685135 ubox
39 56 0.408062486 ubox
39 60 0.029146017 ubox
39 62 0.003413119 ubox
40 45 0.267334152 ubox
40 47 0.075771266 ubox
40 55 0.409411836 ubox
40 61 0.005372926 ubox
41 54 0.402300508 ubox
43 50 0.170553186 ubox
43 53 0.250939615 ubox
43 58 0.052143725 ubox
44 49 0.176962907 ubox
44 51 0.340271801 ubox
44 52 0.250862897 ubox
44 57 0.055151987 ubox
44 59 0.046943247 ubox
44 63 0.332676989 ubox
45 50 0.309224607 ubox
45 58 0.044471711 ubox
45 62 0.336434319 ubox
46 61 0.336755964 ubox
47 62 0.050286059 ubox
48 61 0.054124338 ubox
55 62 0.147076345 ubox
56 61 0.155174800 ubox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
showpage
end
%%EOF
