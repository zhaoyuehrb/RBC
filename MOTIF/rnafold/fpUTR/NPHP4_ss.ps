%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACGCGAGGCGGGUUCUUGGACUGAGUGUGCGGCGCGGUGCGCCGCCUUCCGAGGCUCCUCCCGCGGGUGGCAGCGGACGGGGCGCGCCCCUCGGCCAGUCCUCGGUCCUCAGGCUUGUGGCUCCGUUGAGCACCGGCCGCCGGGCCUCUGGGUCCGUCGAGUGGAGACUCUCUGAAAAGCGUGGGCUCCGUGGCCUCCGGCGCGGCCGCGGCGGGUCGGUCUCCUAGAUCAUCCGGGAAGCCCACGGGACCC\
UCAGGCGGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[116.45187378 126.51736450]
[108.66768646 129.30702209]
[100.59282684 129.91160583]
[97.12096405 144.50428772]
[93.64910126 159.09695435]
[97.98213959 174.31324768]
[87.50912476 184.90405273]
[84.03726196 199.49673462]
[86.25332642 216.30522156]
[70.71518707 223.08773804]
[59.89634705 210.03440857]
[69.44458771 196.02487183]
[72.91645050 181.43218994]
[68.33508301 167.25967407]
[79.05642700 155.62509155]
[82.52828979 141.03242493]
[86.00015259 126.43975067]
[81.01928711 123.12549591]
[76.79746246 118.88645935]
[73.50350189 113.89214325]
[71.26914215 108.34229279]
[56.27553558 108.78018188]
[41.28192902 109.21807098]
[26.28832245 109.65596771]
[11.29471493 110.09385681]
[-3.69889235 110.53175354]
[-18.69249916 110.96964264]
[-33.68610764 111.40753174]
[-40.64860535 119.70651245]
[-50.81362915 122.75973511]
[-60.77653122 119.79544067]
[-67.33628845 112.01670837]
[-82.33603668 112.10430145]
[-97.33501434 112.27947235]
[-112.33271027 112.54223633]
[-127.33041382 112.80499268]
[-140.55087280 127.97701263]
[-160.36178589 128.46990967]
[-173.89462280 114.41606140]
[-188.87390137 115.20401764]
[-203.85319519 115.99197388]
[-218.83248901 116.77993011]
[-233.81178284 117.56787872]
[-248.79106140 118.35583496]
[-263.77035522 119.14379120]
[-278.74963379 119.93174744]
[-287.12060547 123.49697113]
[-293.90826416 120.64040375]
[-308.89575195 121.25336456]
[-322.36819458 129.54814148]
[-335.40103149 122.33739471]
[-350.38848877 122.95035553]
[-365.37597656 123.56332397]
[-380.36343384 124.17629242]
[-391.04205322 135.51669312]
[-406.25021362 135.92481995]
[-416.99575806 125.67449951]
[-431.98321533 126.28746033]
[-446.97070312 126.90042877]
[-460.44317627 135.19520569]
[-473.47598267 127.98445129]
[-488.46343994 128.59741211]
[-503.45092773 129.21038818]
[-517.00903320 138.43583679]
[-531.65795898 131.06416321]
[-532.32812500 114.67871857]
[-518.33007812 106.13543701]
[-504.06390381 114.22291565]
[-489.07641602 113.60994720]
[-474.08895874 112.99698639]
[-461.68847656 104.74605560]
[-447.58364868 111.91295624]
[-432.59619141 111.29998779]
[-417.60873413 110.68702698]
[-407.73611450 99.59345245]
[-392.54544067 98.75831604]
[-380.97640991 109.18881989]
[-365.98892212 108.57585144]
[-351.00146484 107.96289062]
[-336.01400757 107.34992218]
[-323.61352539 99.09899139]
[-309.50869751 106.26589203]
[-294.52124023 105.65293121]
[-279.53759766 104.95246124]
[-264.55831909 104.16450500]
[-249.57902527 103.37654877]
[-234.59973145 102.58859253]
[-219.62043762 101.80063629]
[-204.64115906 101.01268005]
[-189.66186523 100.22472382]
[-174.68257141 99.43677521]
[-170.15533447 90.29113007]
[-162.18934631 83.78478241]
[-152.16812134 81.13372040]
[-141.86804199 82.87675476]
[-133.14352417 88.76762390]
[-127.59317017 97.80729675]
[-112.59547424 97.54453278]
[-97.59777069 97.28177643]
[-90.98838806 94.03394318]
[-82.42362976 97.10455322]
[-67.42388153 97.01696014]
[-51.45632553 86.07617188]
[-34.12399673 96.41392517]
[-19.13039207 95.97603607]
[-4.13678455 95.53814697]
[10.85682201 95.10025024]
[25.85042953 94.66236115]
[40.84403610 94.22446442]
[55.83764267 93.78657532]
[70.83125305 93.34868622]
[74.62358093 82.11584473]
[82.71511841 72.86456299]
[94.12151337 67.22226715]
[107.25293732 66.34421539]
[104.98431396 51.51676559]
[102.71569061 36.68931198]
[100.44706726 21.86186028]
[90.71160889 9.39063454]
[96.43501282 -4.36043453]
[94.16638947 -19.18788719]
[91.89776611 -34.01533890]
[87.52046967 -41.99175262]
[89.69027710 -49.02910233]
[87.59497070 -63.88203812]
[85.49966431 -78.73497772]
[74.97592926 -91.31205750]
[80.85950470 -106.61943054]
[97.09786987 -108.91017914]
[106.98638916 -95.82778168]
[100.35260010 -80.83028412]
[102.44790649 -65.97734833]
[104.54321289 -51.12440872]
[106.72521973 -36.28396225]
[108.99384308 -21.45651054]
[111.26246643 -6.62905836]
[120.83565521 4.78160810]
[115.27451324 19.59323692]
[117.54314423 34.42068863]
[119.81176758 49.24814224]
[122.08039093 64.07559204]
[133.25875854 74.07778931]
[148.24623108 74.69075012]
[163.23370361 75.30371857]
[173.20986938 67.16446686]
[185.65917969 67.96299744]
[193.96235657 76.72953796]
[208.94163513 77.51749420]
[223.92092896 78.30545044]
[238.90022278 79.09339905]
[250.59027100 68.79871368]
[265.77017212 69.81120300]
[275.51254272 81.01931763]
[290.49182129 81.80727386]
[305.47113037 82.59523010]
[320.45040894 83.38318634]
[335.42968750 84.17113495]
[350.40899658 84.95909119]
[346.63388062 77.58016205]
[345.31695557 68.64581299]
[346.87423706 58.85446548]
[351.54037476 48.99829102]
[361.99099731 38.23798752]
[372.44165039 27.47768021]
[382.89227295 16.71737289]
[386.37817383 0.69300020]
[402.07888794 -4.04189634]
[413.84289551 7.38353920]
[409.56835938 23.21579742]
[393.65258789 27.16801071]
[383.20193481 37.92831802]
[372.75131226 48.68862152]
[362.30065918 59.44892883]
[364.03659058 66.74526978]
[378.36666870 62.31251144]
[392.69671631 57.87975693]
[406.31222534 51.58547211]
[417.31652832 61.77888870]
[412.08074951 75.83544922]
[397.09033203 76.34661865]
[382.29940796 78.84227753]
[367.50845337 81.33794403]
[369.24438477 88.63427734]
[383.42114258 93.53527832]
[397.59790039 98.43628693]
[411.77462769 103.33728790]
[425.95138550 108.23828888]
[440.12814331 113.13928986]
[454.30487061 118.04029083]
[468.48162842 122.94129944]
[483.25204468 125.55560303]
[498.24975586 125.81835938]
[513.24743652 126.08112335]
[528.24517822 126.34387970]
[543.24285889 126.60664368]
[558.24053955 126.86940002]
[573.23822021 127.13215637]
[588.23596191 127.39492035]
[597.46728516 114.92245483]
[612.27679443 110.29016876]
[626.96990967 115.27927399]
[635.89685059 127.97135925]
[635.62506104 143.48605347]
[626.25897217 155.85763550]
[611.40008545 160.32899475]
[596.76196289 155.18078613]
[587.97320557 142.39260864]
[572.97546387 142.12985229]
[557.97778320 141.86709595]
[542.98010254 141.60433960]
[527.98236084 141.34158325]
[512.98468018 141.07882690]
[497.98699951 140.81605530]
[482.98928833 140.55329895]
[478.58789062 154.89302063]
[491.15045166 163.08952332]
[503.71298218 171.28602600]
[516.27551270 179.48252869]
[528.83807373 187.67903137]
[537.70111084 189.73574829]
[541.49865723 196.04533386]
[553.96459961 204.38798523]
[566.43060303 212.73065186]
[578.89654541 221.07330322]
[591.36248779 229.41595459]
[607.88867188 233.20042419]
[608.82696533 250.12838745]
[592.82031250 255.71617126]
[583.01983643 241.88191223]
[570.55389404 233.53926086]
[558.08795166 225.19660950]
[545.62194824 216.85394287]
[533.15600586 208.51129150]
[520.64154053 200.24157715]
[508.07901001 192.04507446]
[495.51647949 183.84857178]
[482.95394897 175.65206909]
[470.39138794 167.45556641]
[463.94937134 159.75358582]
[460.87039185 151.35758972]
[460.94580078 143.47451782]
[463.58062744 137.11804199]
[449.40386963 132.21704102]
[435.22714233 127.31604004]
[421.05038452 122.41503906]
[406.87362671 117.51403046]
[392.69689941 112.61302948]
[378.52014160 107.71202850]
[364.34338379 102.81102753]
[349.62103271 99.93838501]
[334.64175415 99.15042877]
[319.66244507 98.36247253]
[304.68316650 97.57451630]
[289.70388794 96.78656006]
[274.72457886 95.99861145]
[263.86007690 106.12274170]
[248.65773010 105.53703308]
[238.11225891 94.07269287]
[223.13298035 93.28473663]
[208.15368652 92.49678040]
[193.17439270 91.70882416]
[177.96730042 100.49706268]
[162.62074280 90.29119110]
[147.63327026 89.67822266]
[132.64579773 89.06526184]
[133.73205566 98.12712860]
[132.39573669 106.98201752]
[128.82279968 115.00606537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 17]
[4 16]
[5 15]
[7 13]
[8 12]
[21 111]
[22 110]
[23 109]
[24 108]
[25 107]
[26 106]
[27 105]
[28 104]
[32 102]
[33 101]
[34 99]
[35 98]
[36 97]
[39 91]
[40 90]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
[48 83]
[49 82]
[51 80]
[52 79]
[53 78]
[54 77]
[57 74]
[58 73]
[59 72]
[61 70]
[62 69]
[63 68]
[115 141]
[116 140]
[117 139]
[118 138]
[120 136]
[121 135]
[122 134]
[124 133]
[125 132]
[126 131]
[142 265]
[143 264]
[144 263]
[147 261]
[148 260]
[149 259]
[150 258]
[153 255]
[154 254]
[155 253]
[156 252]
[157 251]
[158 250]
[162 173]
[163 172]
[164 171]
[165 170]
[183 249]
[184 248]
[185 247]
[186 246]
[187 245]
[188 244]
[189 243]
[190 242]
[191 214]
[192 213]
[193 212]
[194 211]
[195 210]
[196 209]
[197 208]
[198 207]
[215 238]
[216 237]
[217 236]
[218 235]
[219 234]
[221 233]
[222 232]
[223 231]
[224 230]
[225 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
