%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COX4I2)
} def

/sequence { (\
CAGGUCCCUCCGCAGCGGGUUCUCAGUUGCUCGCUGGGCAGACCCAGGUCGCGCUCCCACUGCCGAGCCCGCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.067439819 ubox
2 23 0.006871566 ubox
3 8 0.071908452 ubox
3 9 0.025932392 ubox
3 10 0.044302149 ubox
3 11 0.506130337 ubox
3 22 0.007345972 ubox
3 44 0.721815084 ubox
3 45 0.087320121 ubox
3 69 0.050058776 ubox
3 70 0.121878477 ubox
4 8 0.027584166 ubox
4 9 0.032730768 ubox
4 10 0.506133841 ubox
4 13 0.103413482 ubox
4 21 0.005612233 ubox
4 43 0.725211004 ubox
4 44 0.071840087 ubox
4 68 0.050244343 ubox
4 69 0.121919802 ubox
4 72 0.034136387 ubox
5 12 0.099865621 ubox
5 42 0.725759986 ubox
5 67 0.026615239 ubox
5 71 0.033404312 ubox
5 74 0.020220150 ubox
6 19 0.007830344 ubox
6 38 0.005505561 ubox
6 41 0.716935147 ubox
6 48 0.007569213 ubox
6 73 0.021588726 ubox
7 18 0.007837167 ubox
7 37 0.006647502 ubox
7 38 0.053038945 ubox
7 47 0.007616642 ubox
7 48 0.012367912 ubox
8 17 0.007833758 ubox
8 36 0.005909464 ubox
8 37 0.053169526 ubox
8 38 0.034163355 ubox
8 41 0.118230462 ubox
8 47 0.012432529 ubox
8 67 0.136961225 ubox
8 75 0.266160313 ubox
9 14 0.005748731 ubox
9 36 0.021650734 ubox
9 37 0.029873659 ubox
9 38 0.083245294 ubox
9 40 0.173425191 ubox
9 46 0.012219740 ubox
9 66 0.139693900 ubox
9 74 0.272108349 ubox
10 36 0.017273937 ubox
10 37 0.088305424 ubox
10 38 0.716741201 ubox
10 65 0.139521328 ubox
10 73 0.271348357 ubox
11 36 0.080021824 ubox
11 37 0.717572159 ubox
11 65 0.004757513 ubox
11 71 0.006288358 ubox
11 73 0.046792534 ubox
12 30 0.008226606 ubox
12 34 0.008859504 ubox
12 35 0.037156011 ubox
12 39 0.004361081 ubox
12 63 0.139724404 ubox
12 64 0.004569658 ubox
12 70 0.005917759 ubox
12 72 0.040399240 ubox
13 29 0.008291344 ubox
13 33 0.008985302 ubox
13 36 0.723230948 ubox
13 38 0.003922098 ubox
13 62 0.139874489 ubox
13 71 0.036988812 ubox
14 28 0.008285157 ubox
14 31 0.009351509 ubox
14 35 0.727795078 ubox
14 61 0.139826668 ubox
15 27 0.008287600 ubox
15 30 0.009413215 ubox
15 34 0.729464529 ubox
15 60 0.139816110 ubox
15 72 0.667403489 ubox
16 26 0.008283452 ubox
16 29 0.009413100 ubox
16 33 0.729470004 ubox
16 71 0.668336845 ubox
17 24 0.003563625 ubox
17 28 0.009320429 ubox
17 32 0.729387840 ubox
17 45 0.004490628 ubox
17 58 0.139784034 ubox
17 70 0.669353233 ubox
18 24 0.004686933 ubox
18 27 0.009186801 ubox
18 30 0.004287050 ubox
18 31 0.728992541 ubox
18 44 0.004499122 ubox
18 57 0.139816137 ubox
18 69 0.669366234 ubox
19 30 0.729440669 ubox
19 43 0.004499890 ubox
19 56 0.139763291 ubox
19 68 0.669364185 ubox
20 26 0.003637386 ubox
20 29 0.727724889 ubox
20 42 0.004444698 ubox
20 66 0.007873924 ubox
20 67 0.668975941 ubox
21 25 0.008907657 ubox
21 41 0.004024140 ubox
21 65 0.009294983 ubox
21 66 0.668529989 ubox
22 38 0.005387750 ubox
22 65 0.667761631 ubox
22 67 0.003879565 ubox
23 37 0.010936868 ubox
23 66 0.004577539 ubox
24 36 0.040087683 ubox
24 62 0.665284614 ubox
24 65 0.004419724 ubox
25 35 0.040201163 ubox
25 55 0.136843958 ubox
25 61 0.666916180 ubox
26 34 0.040219035 ubox
26 52 0.012474529 ubox
26 54 0.137936887 ubox
26 60 0.667001593 ubox
26 63 0.012595840 ubox
27 33 0.039178194 ubox
27 51 0.012162167 ubox
27 53 0.097450622 ubox
27 59 0.638021856 ubox
27 62 0.012424238 ubox
27 74 0.006036592 ubox
28 40 0.012522518 ubox
28 51 0.008918401 ubox
28 53 0.485955107 ubox
28 59 0.040986690 ubox
28 73 0.006518706 ubox
29 39 0.013520811 ubox
29 49 0.012257142 ubox
29 50 0.009452106 ubox
29 52 0.503061044 ubox
29 54 0.453828135 ubox
29 58 0.043087226 ubox
29 63 0.004909717 ubox
29 72 0.006777904 ubox
30 38 0.013519118 ubox
30 48 0.012770436 ubox
30 51 0.502485564 ubox
30 53 0.454717288 ubox
30 62 0.004935386 ubox
30 71 0.006772583 ubox
30 75 0.003873196 ubox
31 37 0.013201422 ubox
31 47 0.005203252 ubox
31 48 0.006896689 ubox
31 74 0.005794578 ubox
32 36 0.012748320 ubox
32 47 0.004734754 ubox
32 51 0.448456042 ubox
32 53 0.059693974 ubox
32 73 0.005958794 ubox
33 49 0.071002748 ubox
33 50 0.438306916 ubox
33 52 0.060436600 ubox
33 54 0.016825016 ubox
33 68 0.006998436 ubox
33 72 0.005942401 ubox
34 47 0.656866783 ubox
34 48 0.160936641 ubox
34 51 0.053715836 ubox
34 53 0.016548189 ubox
34 67 0.007012840 ubox
34 71 0.005796834 ubox
35 46 0.676543737 ubox
35 47 0.080003401 ubox
35 59 0.007386993 ubox
35 66 0.007004961 ubox
36 44 0.010260134 ubox
36 45 0.681558424 ubox
36 56 0.021703888 ubox
36 57 0.015882670 ubox
36 58 0.010502992 ubox
36 70 0.006144185 ubox
37 43 0.011978078 ubox
37 44 0.681571236 ubox
37 45 0.010838263 ubox
37 50 0.012335683 ubox
37 55 0.022616884 ubox
37 56 0.015904286 ubox
37 57 0.010386207 ubox
37 64 0.038568009 ubox
37 69 0.006165982 ubox
38 43 0.677349916 ubox
38 44 0.010902565 ubox
38 49 0.012418867 ubox
38 52 0.016948341 ubox
38 54 0.028076351 ubox
38 56 0.009405538 ubox
38 63 0.038675390 ubox
38 68 0.005911062 ubox
39 48 0.012459908 ubox
39 51 0.016998456 ubox
39 53 0.028364707 ubox
39 62 0.038675877 ubox
39 67 0.005902175 ubox
40 61 0.038649740 ubox
41 50 0.037845301 ubox
41 60 0.038212352 ubox
42 49 0.038298290 ubox
43 48 0.038508416 ubox
46 55 0.028951886 ubox
47 54 0.029963075 ubox
47 55 0.014940272 ubox
47 56 0.003819357 ubox
47 57 0.014225796 ubox
47 58 0.009383754 ubox
47 69 0.080983671 ubox
47 70 0.029717245 ubox
48 54 0.016117820 ubox
48 56 0.014321136 ubox
48 57 0.009482907 ubox
48 68 0.081250666 ubox
48 69 0.029226519 ubox
48 72 0.076467567 ubox
49 53 0.015130451 ubox
49 66 0.073564057 ubox
49 67 0.043172579 ubox
49 71 0.019537534 ubox
49 74 0.671516722 ubox
50 65 0.085471001 ubox
50 71 0.084934565 ubox
50 73 0.717816908 ubox
51 63 0.007801297 ubox
51 64 0.085535886 ubox
51 70 0.087464425 ubox
51 72 0.718720062 ubox
52 62 0.009114310 ubox
52 65 0.003398275 ubox
52 71 0.716063621 ubox
53 61 0.007588854 ubox
53 63 0.089862039 ubox
53 68 0.659580747 ubox
53 70 0.293146448 ubox
54 62 0.089968688 ubox
54 67 0.722751838 ubox
55 66 0.724008769 ubox
56 65 0.723800084 ubox
60 67 0.011543130 ubox
61 66 0.011480871 ubox
62 68 0.006496935 ubox
63 67 0.006459557 ubox
3 44 0.9500000 lbox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
6 41 0.9500000 lbox
10 38 0.9500000 lbox
11 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
49 74 0.9500000 lbox
50 73 0.9500000 lbox
51 72 0.9500000 lbox
52 71 0.9500000 lbox
53 68 0.9500000 lbox
54 67 0.9500000 lbox
55 66 0.9500000 lbox
56 65 0.9500000 lbox
showpage
end
%%EOF
