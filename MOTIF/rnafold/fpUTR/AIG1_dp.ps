%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AIG1)
} def

/sequence { (\
CCCACGGCGCCCGCCCCCGCGCGCCCGGCGCCUCCCUCACGCCCGCCCUCCUUGCCGCCCAGCCGGUCCAGGCCUCUGGCGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.022451269 ubox
2 6 0.003342597 ubox
2 27 0.023976276 ubox
2 28 0.028712457 ubox
2 79 0.014031887 ubox
3 27 0.029911887 ubox
3 54 0.014175165 ubox
3 78 0.014156774 ubox
4 53 0.012752122 ubox
4 77 0.012580829 ubox
5 23 0.005611831 ubox
5 27 0.057191910 ubox
5 41 0.009620213 ubox
5 45 0.023183563 ubox
5 54 0.009007676 ubox
5 57 0.007054355 ubox
5 81 0.011165807 ubox
6 15 0.017618946 ubox
6 22 0.004529410 ubox
6 25 0.596365139 ubox
6 26 0.114049105 ubox
6 32 0.789036854 ubox
6 33 0.006730035 ubox
6 34 0.004637971 ubox
6 35 0.004336245 ubox
6 36 0.004014645 ubox
6 40 0.004271681 ubox
6 43 0.037135570 ubox
6 44 0.018566891 ubox
6 47 0.050868127 ubox
6 48 0.005931261 ubox
6 56 0.008649826 ubox
7 14 0.017678131 ubox
7 20 0.004501134 ubox
7 22 0.027385701 ubox
7 24 0.598964755 ubox
7 25 0.106667065 ubox
7 31 0.790063167 ubox
7 32 0.005266091 ubox
7 42 0.037834619 ubox
7 43 0.016069707 ubox
7 46 0.051041703 ubox
7 47 0.004815854 ubox
7 55 0.008783996 ubox
8 13 0.017674734 ubox
8 19 0.004517822 ubox
8 21 0.027720637 ubox
8 23 0.600337180 ubox
8 30 0.790086931 ubox
8 41 0.038449855 ubox
8 45 0.051092833 ubox
8 54 0.008774289 ubox
9 18 0.004499268 ubox
9 20 0.027899722 ubox
9 22 0.599886653 ubox
9 24 0.104267016 ubox
9 26 0.003767213 ubox
9 29 0.790085799 ubox
9 40 0.038058389 ubox
9 42 0.015146019 ubox
9 44 0.039272064 ubox
9 46 0.003494704 ubox
10 19 0.027897550 ubox
10 21 0.589124658 ubox
10 23 0.104462414 ubox
10 28 0.790025105 ubox
10 41 0.015279971 ubox
10 45 0.003487515 ubox
11 27 0.789285458 ubox
11 28 0.010444123 ubox
12 19 0.530841923 ubox
12 21 0.345600781 ubox
12 23 0.697704935 ubox
12 27 0.014528431 ubox
12 41 0.034138773 ubox
13 18 0.506045569 ubox
13 20 0.424221595 ubox
13 22 0.700338777 ubox
13 24 0.190525911 ubox
13 26 0.012947007 ubox
13 40 0.033880436 ubox
13 42 0.010247807 ubox
14 19 0.423707162 ubox
14 21 0.699162337 ubox
14 23 0.190733535 ubox
14 41 0.010235444 ubox
19 31 0.054382018 ubox
19 46 0.004578303 ubox
20 30 0.054476984 ubox
20 45 0.004586834 ubox
21 29 0.054481226 ubox
21 31 0.016960449 ubox
21 44 0.004537715 ubox
21 46 0.009309780 ubox
22 28 0.054474236 ubox
22 30 0.017053290 ubox
22 45 0.009342949 ubox
23 29 0.017058647 ubox
23 44 0.009364717 ubox
23 46 0.021370134 ubox
24 28 0.016934988 ubox
24 45 0.021379243 ubox
26 41 0.004117791 ubox
26 45 0.189841325 ubox
26 57 0.005287306 ubox
26 81 0.005765563 ubox
27 35 0.008392640 ubox
27 36 0.016130084 ubox
27 40 0.004263169 ubox
27 43 0.545637392 ubox
27 44 0.183810897 ubox
27 47 0.181944521 ubox
27 48 0.030896309 ubox
27 49 0.003575593 ubox
27 51 0.006530293 ubox
27 56 0.007302862 ubox
27 59 0.003182789 ubox
28 34 0.008396635 ubox
28 35 0.016066518 ubox
28 42 0.553872410 ubox
28 43 0.168467613 ubox
28 46 0.183376244 ubox
28 47 0.029095117 ubox
28 48 0.004365432 ubox
28 50 0.006459566 ubox
28 55 0.007797184 ubox
28 58 0.003221108 ubox
29 41 0.558786639 ubox
29 45 0.183563068 ubox
29 54 0.007798962 ubox
29 57 0.003227096 ubox
29 81 0.014415632 ubox
30 40 0.551100131 ubox
30 42 0.168119801 ubox
30 44 0.163958465 ubox
30 46 0.028637044 ubox
30 53 0.005507547 ubox
30 80 0.014616161 ubox
31 41 0.171005891 ubox
31 45 0.028596571 ubox
31 79 0.014613046 ubox
32 78 0.014589677 ubox
33 82 0.027849804 ubox
34 81 0.028217430 ubox
35 72 0.010215932 ubox
35 79 0.025850341 ubox
36 71 0.010334885 ubox
36 78 0.025844199 ubox
36 79 0.004133674 ubox
37 70 0.009918845 ubox
37 82 0.046678402 ubox
38 54 0.006842015 ubox
38 78 0.004687762 ubox
38 81 0.040813400 ubox
39 53 0.006246462 ubox
39 77 0.004700088 ubox
40 54 0.008482037 ubox
40 78 0.004417988 ubox
40 81 0.597132360 ubox
41 53 0.006781248 ubox
41 55 0.055281338 ubox
41 58 0.010384782 ubox
41 67 0.011389769 ubox
41 73 0.026314808 ubox
41 77 0.004221743 ubox
41 80 0.610037859 ubox
42 54 0.055253042 ubox
42 57 0.010390722 ubox
42 66 0.011674211 ubox
42 72 0.026208412 ubox
42 79 0.604083217 ubox
43 65 0.011653710 ubox
43 71 0.026018504 ubox
43 78 0.596945770 ubox
43 79 0.086215993 ubox
44 54 0.014186857 ubox
44 57 0.006357231 ubox
44 71 0.004073777 ubox
44 78 0.121245758 ubox
44 81 0.584585334 ubox
45 53 0.012758262 ubox
45 55 0.134663633 ubox
45 56 0.005467209 ubox
45 58 0.014085509 ubox
45 63 0.011670504 ubox
45 67 0.018556419 ubox
45 73 0.351633033 ubox
45 77 0.130196737 ubox
45 80 0.590640711 ubox
46 54 0.134821859 ubox
46 57 0.014094839 ubox
46 62 0.011699684 ubox
46 66 0.018576252 ubox
46 72 0.338924656 ubox
46 79 0.589411925 ubox
47 65 0.018436913 ubox
47 66 0.007170855 ubox
47 71 0.324360139 ubox
47 72 0.192749333 ubox
47 78 0.587109398 ubox
47 79 0.038385979 ubox
48 62 0.003667655 ubox
48 65 0.007479400 ubox
48 66 0.005348561 ubox
48 71 0.215304055 ubox
48 72 0.036953297 ubox
48 78 0.054061517 ubox
49 61 0.003572740 ubox
49 65 0.004744371 ubox
49 66 0.004884554 ubox
49 70 0.228139821 ubox
49 71 0.033502948 ubox
49 72 0.044770340 ubox
49 78 0.003218171 ubox
49 82 0.023519648 ubox
50 65 0.005904809 ubox
50 66 0.095796165 ubox
50 71 0.050581443 ubox
50 72 0.677017756 ubox
50 78 0.003166071 ubox
50 79 0.003718965 ubox
50 81 0.024107012 ubox
51 62 0.012456228 ubox
51 65 0.095623962 ubox
51 66 0.085470788 ubox
51 71 0.678207101 ubox
51 72 0.180143503 ubox
51 78 0.004438974 ubox
52 61 0.011834949 ubox
52 62 0.016768106 ubox
52 65 0.084372701 ubox
52 66 0.011914486 ubox
52 70 0.655147262 ubox
52 71 0.180742505 ubox
52 72 0.008578067 ubox
52 82 0.385544565 ubox
52 83 0.027889944 ubox
53 61 0.022841672 ubox
53 65 0.013711094 ubox
53 70 0.190904397 ubox
53 71 0.009598773 ubox
53 81 0.408106268 ubox
53 82 0.026414843 ubox
54 60 0.023441210 ubox
54 63 0.128296559 ubox
54 64 0.012591203 ubox
54 67 0.761581800 ubox
54 69 0.182364978 ubox
54 73 0.260719355 ubox
54 80 0.421037938 ubox
55 62 0.128440188 ubox
55 66 0.786718949 ubox
55 72 0.261096514 ubox
55 79 0.421061261 ubox
56 65 0.786825882 ubox
56 71 0.260956508 ubox
56 78 0.420921626 ubox
56 81 0.311837770 ubox
57 63 0.274957113 ubox
57 64 0.718214748 ubox
57 67 0.247769727 ubox
57 73 0.014285848 ubox
57 77 0.385829558 ubox
57 80 0.315148917 ubox
58 62 0.385626107 ubox
58 66 0.249592180 ubox
58 72 0.014366986 ubox
58 79 0.304653912 ubox
59 65 0.248732168 ubox
59 66 0.144507000 ubox
59 71 0.014181982 ubox
59 78 0.293372131 ubox
59 79 0.081757722 ubox
60 65 0.145526290 ubox
60 78 0.114962277 ubox
61 75 0.152960592 ubox
61 77 0.139836298 ubox
62 73 0.500567263 ubox
62 74 0.110689919 ubox
62 76 0.117448286 ubox
62 80 0.013883501 ubox
63 72 0.514770899 ubox
63 79 0.013902195 ubox
64 71 0.514655242 ubox
64 78 0.013902830 ubox
65 74 0.112221807 ubox
65 75 0.003240202 ubox
65 77 0.013256277 ubox
66 73 0.112329990 ubox
66 74 0.003382199 ubox
66 76 0.013226032 ubox
66 80 0.004191816 ubox
67 72 0.106954612 ubox
68 79 0.018435457 ubox
69 78 0.020810982 ubox
70 77 0.022267393 ubox
71 76 0.022320694 ubox
72 80 0.011276579 ubox
73 79 0.011503751 ubox
74 78 0.011477736 ubox
75 82 0.003222833 ubox
76 81 0.003378531 ubox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
40 81 0.9500000 lbox
41 80 0.9500000 lbox
42 79 0.9500000 lbox
43 78 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
52 70 0.9500000 lbox
54 67 0.9500000 lbox
55 66 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
showpage
end
%%EOF
