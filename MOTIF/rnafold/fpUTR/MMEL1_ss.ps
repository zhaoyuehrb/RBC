%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACAAAGGAGGCCCAGAAGCCUUCAGGCAGCCUCAACUCAGCCCCAAGCCACUGCUCUCCCAUCCCAGUCCCUGGAAAUCCACCCACUUGGCCCAGCUCACCCCAACUCCAACCCACUGGGACCCAGUCUCCAGGGGCCUGACUGUGGGCGGCAGCCACUCCUGAGUGAGCAAAGGUUCCUCCGCGGUGCUCUCCCGUCCAGAGCCCUGCUG\
) } def
/len { sequence length } bind def

/coor [
[121.06509399 161.59645081]
[125.38655853 175.96046448]
[113.06095886 184.50912476]
[101.12189484 175.42845154]
[106.06869507 161.26771545]
[106.39743805 146.27131653]
[106.72618866 131.27491760]
[107.05493164 116.27851868]
[99.55673218 116.11414337]
[92.21546173 129.19488525]
[84.87419891 142.27563477]
[77.53292847 155.35636902]
[70.19166565 168.43710327]
[62.85039520 181.51785278]
[67.36717224 196.66296387]
[59.77841568 210.52609253]
[44.58640289 214.88249207]
[30.80428123 207.14758301]
[26.60874176 191.91036987]
[34.48892212 178.21078491]
[49.76965332 174.17658997]
[57.11091995 161.09584045]
[64.45218658 148.01510620]
[71.79345703 134.93435669]
[79.13472748 121.85362244]
[86.47599030 108.77288055]
[89.73744202 94.13173676]
[88.64251709 79.17175293]
[87.54758453 64.21176910]
[83.80108643 55.88440704]
[86.54757690 49.02548218]
[85.67135620 34.05109406]
[84.79512787 19.07670975]
[83.91890717 4.10232401]
[83.04267883 -10.87206173]
[70.14373016 -19.29365540]
[64.74017334 -33.52935028]
[68.70830536 -48.04547882]
[80.32418060 -57.33037949]
[79.44795227 -72.30476379]
[78.57173157 -87.27915192]
[77.69550323 -102.25354004]
[63.38230133 -107.29415894]
[52.11974716 -117.40345764]
[45.60327911 -131.01776123]
[44.79781342 -146.04902649]
[49.79499817 -160.20504761]
[59.80397034 -171.33905029]
[73.27636719 -177.77517700]
[72.40013885 -192.74957275]
[59.50119019 -201.17115784]
[54.09763718 -215.40686035]
[58.06576157 -229.92298889]
[69.68164062 -239.20788574]
[68.80541229 -254.18226624]
[67.92919159 -269.15664673]
[67.05296326 -284.13104248]
[66.17674255 -299.10543823]
[57.07660294 -308.24322510]
[56.65348434 -320.73147583]
[64.58917236 -329.85864258]
[63.93183899 -344.84423828]
[63.27450562 -359.82983398]
[62.61717224 -374.81542969]
[61.95984268 -389.80102539]
[48.84522629 -401.38015747]
[48.17731094 -418.52416992]
[59.88135910 -430.60305786]
[59.00513458 -445.57745361]
[58.12891006 -460.55184937]
[57.14330673 -475.51943970]
[56.04837799 -490.47940063]
[54.95344543 -505.43939209]
[53.85851669 -520.39935303]
[52.76358795 -535.35937500]
[51.66865921 -550.31933594]
[50.57372665 -565.27935791]
[49.47879791 -580.23931885]
[40.12063599 -568.51647949]
[26.03993416 -563.34600830]
[11.31920528 -566.22698975]
[0.22652727 -576.32415771]
[-4.02192307 -590.70996094]
[-0.19436446 -605.21337891]
[10.59945297 -615.62939453]
[25.23000526 -618.93798828]
[39.45536041 -614.17993164]
[49.15003967 -602.73693848]
[49.80736923 -617.72253418]
[50.46470261 -632.70806885]
[43.33958817 -646.83410645]
[51.62719345 -659.21008301]
[52.28452301 -674.19561768]
[52.83235550 -689.18566895]
[53.27065277 -704.17926025]
[53.70895386 -719.17285156]
[54.14725113 -734.16644287]
[54.58555222 -749.16003418]
[40.21818924 -753.82427979]
[27.74766159 -762.34857178]
[18.18490410 -774.04174805]
[12.30512428 -787.95593262]
[10.58496857 -802.96319580]
[13.16388416 -817.84692383]
[19.83280754 -831.40057373]
[30.05112267 -842.52545166]
[42.99047470 -850.31970215]
[57.60192490 -854.15142822]
[72.70099640 -853.71002197]
[87.06366730 -849.03131104]
[99.52561951 -840.49456787]
[109.07662964 -828.79174805]
[114.94242859 -814.87170410]
[116.64750671 -799.86273193]
[114.05363464 -784.98156738]
[107.37110138 -771.43457031]
[97.14161682 -760.32000732]
[84.19444275 -752.53875732]
[69.57914734 -748.72174072]
[69.14084625 -733.72814941]
[68.70254517 -718.73455811]
[68.26425171 -703.74090576]
[67.82595062 -688.74731445]
[70.77169037 -681.97161865]
[67.27011108 -673.53833008]
[66.61278534 -658.55273438]
[73.78491211 -645.49859619]
[65.45029449 -632.05078125]
[64.79296112 -617.06518555]
[64.13562775 -602.07958984]
[69.28443909 -592.51800537]
[64.43878174 -581.33422852]
[65.53371429 -566.37426758]
[66.62863922 -551.41430664]
[67.72357178 -536.45428467]
[68.81850433 -521.49432373]
[69.91342926 -506.53433228]
[71.00836182 -491.57434082]
[72.10328674 -476.61434937]
[75.72547913 -470.17480469]
[73.10329437 -461.42807007]
[73.97952271 -446.45367432]
[74.85574341 -431.47930908]
[85.58586121 -424.34848022]
[90.32125854 -412.15783691]
[87.12467957 -399.27587891]
[76.94543457 -390.45834351]
[77.60276031 -375.47274780]
[78.26009369 -360.48718262]
[78.91742706 -345.50158691]
[79.57476044 -330.51599121]
[89.79015350 -316.24511719]
[81.15112305 -299.98165894]
[82.02735138 -285.00726318]
[82.90357208 -270.03286743]
[83.77980042 -255.05850220]
[84.65602112 -240.08410645]
[97.27552795 -232.21733093]
[102.90959930 -218.26307678]
[99.20323181 -203.49432373]
[87.37452698 -193.62579346]
[88.25075531 -178.65141296]
[102.38185120 -173.83049011]
[113.62107849 -163.93981934]
[120.23518372 -150.46322632]
[121.18831635 -135.44061279]
[116.30416107 -121.15920258]
[106.29752350 -109.80533600]
[92.66989136 -103.12976074]
[93.54611969 -88.15538025]
[94.42234039 -73.18099213]
[95.29856873 -58.20660400]
[107.91806793 -50.33983231]
[113.55213928 -36.38557816]
[109.84577179 -21.61681747]
[98.01706696 -11.74828625]
[98.89329529 3.22609973]
[99.76951599 18.20048523]
[100.64574432 33.17486954]
[101.52196503 48.14925766]
[102.50756836 63.11684036]
[103.60250092 78.07682800]
[104.69742584 93.03681183]
[117.03061676 88.95864105]
[131.71276855 94.45579529]
[142.93940735 110.01064301]
[149.70040894 123.40052795]
[156.46139526 136.79042053]
[163.22238159 150.18029785]
[176.34933472 159.01170349]
[175.17916870 173.86026001]
[181.94015503 187.25015259]
[188.70114136 200.64002991]
[195.46212769 214.02992249]
[202.22312927 227.41979980]
[217.48728943 230.81674194]
[226.95571899 243.26194763]
[226.15769958 258.87915039]
[215.47004700 270.29440308]
[199.93911743 272.11776733]
[186.89817810 263.48831177]
[182.50473022 248.48059082]
[188.83323669 234.18080139]
[182.07225037 220.79090881]
[175.31126404 207.40101624]
[168.55026245 194.01113892]
[161.78927612 180.62124634]
[149.14591980 172.74758911]
[149.83248901 156.94128418]
[143.07150269 143.55140686]
[136.31051636 130.16151428]
[129.54953003 116.77163696]
[122.05133057 116.60726166]
[121.72258759 131.60365295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[27 183]
[28 182]
[29 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[39 172]
[40 171]
[41 170]
[42 169]
[49 162]
[50 161]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[61 151]
[62 150]
[63 149]
[64 148]
[65 147]
[68 143]
[69 142]
[70 141]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[88 130]
[89 129]
[90 128]
[92 126]
[93 125]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[186 212]
[187 211]
[188 210]
[189 209]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
