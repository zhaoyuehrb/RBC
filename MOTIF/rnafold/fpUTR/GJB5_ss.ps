%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACACCCGGCAGGCUCUGUCCUGGAAACAGGCUUCAACGGGCUUCCCCGAAAACCUUCCCCGCUUCUGGAUAUGAAAUUCAAGCUGCUUGCUGAGUCCUAUUGCCGGCUGCUGGGAGCCAGGAGAGCCCUGAGGAGUAGUCACUCAGUAGCAGCUGACGCGUGGGUCCACC\
) } def
/len { sequence length } bind def

/coor [
[151.21560669 434.52490234]
[139.77081299 424.36245728]
[134.37051392 410.04129028]
[136.25567627 394.85232544]
[144.99310303 382.28585815]
[158.57496643 375.22955322]
[158.57496643 360.22955322]
[158.57496643 345.22955322]
[158.57496643 330.22955322]
[158.57496643 315.22955322]
[158.43955994 300.23016357]
[158.16874695 285.23263550]
[162.91587830 261.53930664]
[178.11860657 251.56446838]
[170.38529968 238.71160889]
[162.65199280 225.85874939]
[154.91868591 213.00588989]
[147.18537903 200.15303040]
[142.81687927 198.14628601]
[139.67918396 193.35574341]
[139.41456604 186.69358826]
[132.15031433 173.56991577]
[124.88606262 160.44624329]
[117.62181854 147.32258606]
[110.35757446 134.19891357]
[103.09332275 121.07524109]
[94.99084473 122.05814362]
[86.63510895 119.86026001]
[79.28964996 114.45706177]
[74.18826294 106.32714081]
[72.33590698 96.42125702]
[57.34568405 95.87972260]
[42.35546112 95.33818817]
[28.28495026 102.57222748]
[15.84531021 94.38048553]
[0.85508859 93.83894348]
[-6.69994020 101.72434998]
[-17.13742065 104.08233643]
[-26.93702126 100.36630249]
[-32.92943192 92.03749847]
[-47.89033127 90.95513153]
[-62.85122681 89.87277222]
[-77.81212616 88.79040527]
[-92.32479095 96.42681122]
[-106.04817963 87.44902802]
[-104.86485291 71.09262848]
[-89.99211121 64.18367767]
[-76.72975922 73.82950592]
[-61.76886368 74.91187286]
[-46.80796432 75.99423981]
[-31.84706497 77.07659912]
[-15.14693832 67.37005615]
[1.39662480 78.84872437]
[16.38684654 79.39025879]
[29.38515663 72.11749268]
[42.89699554 80.34796906]
[57.88721848 80.88950348]
[72.87744141 81.43103790]
[83.95183563 71.31383514]
[84.76391602 56.33583450]
[85.57600403 41.35783386]
[86.38808441 26.37983322]
[79.40925598 12.18101025]
[87.82424927 -0.10870702]
[88.63633728 -15.08670807]
[78.36049652 -26.79332542]
[79.39743042 -41.97158051]
[90.62123108 -51.69587708]
[91.43331146 -66.67388153]
[92.24539185 -81.65187836]
[93.05747986 -96.62988281]
[82.78163910 -108.33650208]
[83.81857300 -123.51475525]
[95.04237366 -133.23905945]
[95.85445404 -148.21705627]
[96.66653442 -163.19505310]
[86.39069366 -174.90167236]
[87.42763519 -190.07992554]
[98.65142822 -199.80422974]
[99.46351624 -214.78222656]
[100.27559662 -229.76022339]
[101.08767700 -244.73823547]
[101.89976501 -259.71621704]
[99.23271942 -268.48965454]
[102.86412811 -274.95657349]
[103.94649506 -289.91748047]
[94.58016968 -302.94250488]
[99.06227112 -318.34674072]
[113.95451355 -324.31335449]
[127.83284760 -316.26528931]
[130.05099487 -300.37631226]
[118.90739441 -288.83511353]
[117.82502747 -273.87420654]
[116.87776184 -258.90414429]
[116.06568146 -243.92614746]
[115.25360107 -228.94815063]
[114.44151306 -213.97013855]
[113.62943268 -198.99214172]
[123.73605347 -188.11134338]
[123.12584686 -172.90994263]
[111.64453888 -162.38296509]
[110.83245850 -147.40496826]
[110.02037048 -132.42697144]
[120.12699127 -121.54616547]
[119.51679230 -106.34477997]
[108.03547668 -95.81779480]
[107.22339630 -80.83979797]
[106.41131592 -65.86179352]
[105.59922791 -50.88379288]
[115.70584869 -40.00299454]
[115.09564972 -24.80160332]
[103.61433411 -14.27462482]
[102.80225372 0.70337659]
[109.83916473 13.83087158]
[101.36608887 27.19191551]
[100.55400085 42.16991806]
[99.74192047 57.14791870]
[98.92983246 72.12592316]
[122.12906647 89.25954437]
[116.21699524 113.81098938]
[123.48123932 126.93466187]
[130.74548340 140.05833435]
[138.00973511 153.18200684]
[145.27398682 166.30567932]
[152.53822327 179.42933655]
[160.03822327 192.41972351]
[167.77154541 205.27258301]
[175.50485229 218.12544250]
[183.23815918 230.97830200]
[190.97146606 243.83116150]
[202.57734680 253.33396912]
[216.70335388 258.37933350]
[230.82937622 263.42471313]
[244.95538330 268.47009277]
[259.08139038 273.51547241]
[273.25238037 278.43313599]
[287.46716309 283.22265625]
[303.42843628 279.45834351]
[314.47048950 291.58291626]
[309.23422241 307.12362671]
[293.10626221 310.09353638]
[282.67764282 297.43743896]
[268.46286011 292.64791870]
[261.09460449 293.49487305]
[254.03601074 287.64147949]
[239.91000366 282.59609985]
[225.78399658 277.55072021]
[211.65797424 272.50534058]
[197.53196716 267.45996094]
[191.44055176 271.83541870]
[201.41841125 283.03555298]
[211.39627075 294.23565674]
[225.11959839 300.29122925]
[229.75216675 314.55795288]
[222.20428467 327.52056885]
[207.51002502 330.53366089]
[195.46975708 321.58758545]
[194.11346436 306.64987183]
[186.68559265 293.61810303]
[179.25772095 280.58636475]
[173.16630554 284.96182251]
[173.43711853 299.95935059]
[176.73027039 308.51748657]
[173.57496643 315.22955322]
[173.57496643 330.22955322]
[173.57496643 345.22955322]
[173.57496643 360.22955322]
[173.57496643 375.22955322]
[187.15684509 382.28585815]
[195.89427185 394.85232544]
[197.77943420 410.04129028]
[192.37913513 424.36245728]
[180.93434143 434.52490234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 162]
[12 161]
[14 130]
[15 129]
[16 128]
[17 127]
[18 126]
[21 125]
[22 124]
[23 123]
[24 122]
[25 121]
[26 120]
[31 58]
[32 57]
[33 56]
[35 54]
[36 53]
[40 51]
[41 50]
[42 49]
[43 48]
[59 118]
[60 117]
[61 116]
[62 115]
[64 113]
[65 112]
[68 109]
[69 108]
[70 107]
[71 106]
[74 103]
[75 102]
[76 101]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[85 93]
[86 92]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
