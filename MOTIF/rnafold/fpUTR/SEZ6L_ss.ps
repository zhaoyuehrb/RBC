%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCCGGCGCAGCUCGGCCAGAGCGACCGCGGGGCUGAGCGCGCGUCCGCCCAGGGGGCUCCGGAAGCUGCCCCGGCCCGCGGCCUCCUCCCUCGCUCCCGCUUCCCCUUUCUCGCUCACCGCCGCCCUCCUUCCCCAGCUCCCUCGCCGUCCGCCCGCCCCACAGCCAGCGGCUCCGCGCCCCCUGCAGCCACG\
) } def
/len { sequence length } bind def

/coor [
[109.54023743 252.43342590]
[107.86925507 237.52677917]
[106.19828033 222.62014771]
[93.17844391 215.43531799]
[86.81057739 201.80027771]
[89.72663879 186.85537720]
[101.01403809 176.37202454]
[99.34306335 161.46537781]
[97.67208862 146.55874634]
[96.00110626 131.65211487]
[94.33013153 116.74546814]
[88.50711060 102.92185211]
[79.00855255 91.31248474]
[69.51000214 79.70310974]
[60.01144791 68.09374237]
[49.44721603 57.44493866]
[37.91395187 47.85411835]
[26.38068581 38.26330185]
[14.84742165 28.67248154]
[-2.53439474 30.59565926]
[-15.67431831 19.57416725]
[-16.76127815 2.79673600]
[-28.44601631 -6.60894775]
[-40.13075256 -16.01463127]
[-51.81549072 -25.42031670]
[-63.50022888 -34.82600021]
[-75.18496704 -44.23168564]
[-89.48506165 -38.80447769]
[-104.48266602 -41.24758148]
[-116.16608429 -50.80604172]
[-121.46099091 -64.83529663]
[-119.03903961 -79.53222656]
[-130.72378540 -88.93791199]
[-142.40852356 -98.34358978]
[-154.09326172 -107.74927521]
[-160.57505798 -109.14389801]
[-164.74615479 -113.02520752]
[-165.99435425 -117.64597321]
[-177.37321472 -127.41948700]
[-188.75207520 -137.19300842]
[-200.13092041 -146.96652222]
[-211.50978088 -156.74003601]
[-231.46260071 -159.55842590]
[-237.09338379 -178.04959106]
[-248.77812195 -187.45527649]
[-260.46286011 -196.86096191]
[-271.03982544 -191.11317444]
[-282.90203857 -189.27879333]
[-294.65310669 -191.55010986]
[-304.91775513 -197.63746643]
[-312.50268555 -206.80601501]
[-316.53533936 -217.96432495]
[-316.56420898 -229.79432678]
[-312.60928345 -240.90693665]
[-323.83084106 -250.86065674]
[-335.05239868 -260.81439209]
[-346.27395630 -270.76809692]
[-357.49551392 -280.72183228]
[-368.71707153 -290.67556763]
[-379.93865967 -300.62927246]
[-391.16021729 -310.58300781]
[-406.61849976 -313.95223999]
[-411.00549316 -328.18612671]
[-422.22705078 -338.13986206]
[-433.44860840 -348.09356689]
[-439.85629272 -349.79660034]
[-443.83700562 -353.87292480]
[-444.86279297 -358.54809570]
[-455.76123047 -368.85461426]
[-466.65966797 -379.16110229]
[-477.55810547 -389.46762085]
[-493.22067261 -395.95764160]
[-491.32009888 -412.80471802]
[-474.60528564 -415.64218140]
[-467.25158691 -400.36605835]
[-456.35314941 -390.05953979]
[-445.45471191 -379.75305176]
[-434.55627441 -369.44653320]
[-423.49487305 -359.31512451]
[-412.27331543 -349.36141968]
[-401.05175781 -339.40768433]
[-386.39611816 -336.75039673]
[-381.20648193 -321.80456543]
[-369.98492432 -311.85083008]
[-358.76336670 -301.89712524]
[-347.54180908 -291.94338989]
[-336.32025146 -281.98965454]
[-325.09869385 -272.03594971]
[-313.87713623 -262.08221436]
[-302.65557861 -252.12849426]
[-285.75930786 -258.64236450]
[-267.80966187 -255.67430115]
[-253.77911377 -243.95918274]
[-247.59881592 -226.66703796]
[-251.05717468 -208.54570007]
[-239.37243652 -199.14001465]
[-227.68769836 -189.73432922]
[-217.65426636 -191.74232483]
[-207.97096252 -187.80786133]
[-201.93263245 -179.00865173]
[-201.73626709 -168.11889648]
[-190.35740662 -158.34538269]
[-178.97856140 -148.57186890]
[-167.59970093 -138.79835510]
[-156.22084045 -129.02482605]
[-144.68757629 -119.43401337]
[-133.00283813 -110.02832794]
[-121.31809998 -100.62265015]
[-109.63336182 -91.21696472]
[-95.79309845 -96.72266388]
[-80.95657349 -94.54702759]
[-69.12286377 -85.17527008]
[-63.53225708 -71.04579926]
[-65.77928162 -55.91642380]
[-54.09454727 -46.51073837]
[-42.40980911 -37.10505295]
[-30.72506905 -27.69936943]
[-19.04033089 -18.29368591]
[-7.35559320 -8.88800240]
[5.14227200 -12.05120087]
[17.36115265 -7.36521673]
[24.75589561 3.66701627]
[24.43824005 17.13921738]
[35.97150421 26.73003578]
[47.50476837 36.32085419]
[59.03803635 45.91167450]
[54.66866302 31.56215858]
[56.86638260 16.72402954]
[65.20761108 4.25711966]
[78.08470917 -3.43576050]
[93.01580048 -4.87192202]
[107.12313843 0.22543420]
[117.68773651 10.87386799]
[122.67343903 25.02105141]
[121.11931610 39.94032288]
[113.32489777 52.75621796]
[100.79245758 60.99865723]
[85.93742371 63.07903290]
[71.62081909 58.59518814]
[81.11936951 70.20455933]
[90.61792755 81.81392670]
[100.11647797 93.42330170]
[102.67822266 87.62761688]
[107.44676208 82.80294037]
[114.09944153 79.57193756]
[122.15927124 78.46084595]
[131.02163696 79.86402130]
[139.98863220 84.01557159]
[153.56918335 90.38494110]
[167.14971924 96.75431061]
[180.73025513 103.12367249]
[194.31080627 109.49304199]
[209.01649475 104.35684967]
[222.69836426 111.00975037]
[227.50431824 125.06102753]
[241.08485413 131.43040466]
[253.63955688 122.58307648]
[268.93734741 121.21440887]
[282.86318970 127.69255066]
[291.67111206 140.27491760]
[292.99182129 155.57691956]
[286.47006226 169.48240662]
[273.86013794 178.25083923]
[258.55407715 179.52357483]
[244.66911316 172.95826721]
[235.94024658 160.32092285]
[234.71548462 145.01094055]
[221.13494873 138.64157104]
[207.25827026 143.93057251]
[193.39492798 137.66458130]
[187.94143677 123.07358551]
[174.36088562 116.70421600]
[160.78034973 110.33484650]
[147.19981384 103.96547699]
[133.61926270 97.59611511]
[127.52364349 101.96570587]
[128.99641418 116.89323425]
[115.33238983 110.70489502]
[109.23677063 115.07449341]
[110.90774536 129.98112488]
[112.57872009 144.88777161]
[114.24970245 159.79440308]
[115.92067719 174.70104980]
[129.24905396 182.42506409]
[135.40170288 196.35339355]
[132.21081543 211.05993652]
[121.10491943 220.94917297]
[122.77589417 235.85580444]
[124.44686890 250.76245117]
[138.00436401 258.31054688]
[144.50538635 272.40014648]
[141.45014954 287.61346436]
[130.01347351 298.10070801]
[114.59297180 299.82928467]
[101.11816406 292.13452148]
[94.77037048 277.97525024]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[7 183]
[8 182]
[9 181]
[10 180]
[11 179]
[12 142]
[13 141]
[14 140]
[15 139]
[16 126]
[17 125]
[18 124]
[19 123]
[22 119]
[23 118]
[24 117]
[25 116]
[26 115]
[27 114]
[32 109]
[33 108]
[34 107]
[35 106]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
[44 97]
[45 96]
[46 95]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[63 81]
[64 80]
[65 79]
[68 78]
[69 77]
[70 76]
[71 75]
[148 175]
[149 174]
[150 173]
[151 172]
[152 171]
[155 168]
[156 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
