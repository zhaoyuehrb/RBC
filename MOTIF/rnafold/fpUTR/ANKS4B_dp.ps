%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANKS4B)
} def

/sequence { (\
CUGCCUGGAGAGACAUCUGGCCAAGUUCUGGUGAGCAGGAAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008508867 ubox
1 10 0.021626503 ubox
1 12 0.019731920 ubox
1 20 0.005112905 ubox
1 25 0.209514738 ubox
1 35 0.006836195 ubox
1 38 0.244884259 ubox
1 39 0.029722609 ubox
2 7 0.008011442 ubox
2 9 0.021631030 ubox
2 11 0.019824258 ubox
2 15 0.035394180 ubox
2 19 0.005104570 ubox
2 23 0.287262597 ubox
2 24 0.190979375 ubox
2 33 0.008292012 ubox
2 34 0.006633766 ubox
2 37 0.245777298 ubox
2 38 0.025611797 ubox
3 14 0.039247612 ubox
3 18 0.003357959 ubox
3 21 0.685986652 ubox
3 22 0.281453046 ubox
3 26 0.092953662 ubox
3 32 0.013568683 ubox
3 36 0.243270330 ubox
4 20 0.702714610 ubox
4 25 0.114471598 ubox
4 31 0.014463462 ubox
4 35 0.237082051 ubox
4 39 0.570560166 ubox
5 12 0.085350113 ubox
5 19 0.700322053 ubox
5 20 0.294391939 ubox
5 25 0.068795875 ubox
5 30 0.015137148 ubox
5 31 0.052051143 ubox
5 35 0.030342933 ubox
5 38 0.572412518 ubox
5 39 0.007165984 ubox
6 11 0.084784393 ubox
6 15 0.113783070 ubox
6 19 0.306569097 ubox
6 23 0.190575705 ubox
6 24 0.049381560 ubox
6 30 0.051694983 ubox
6 33 0.031025450 ubox
6 34 0.040975479 ubox
6 37 0.570961831 ubox
6 38 0.006007158 ubox
7 14 0.120953594 ubox
7 17 0.075422248 ubox
7 18 0.694248392 ubox
7 22 0.210360984 ubox
7 28 0.004860592 ubox
7 29 0.051424100 ubox
7 32 0.017514902 ubox
7 36 0.568230526 ubox
8 16 0.054720339 ubox
8 17 0.737420686 ubox
8 21 0.210167007 ubox
8 27 0.004820744 ubox
8 28 0.051638626 ubox
9 16 0.728157549 ubox
9 18 0.253507080 ubox
9 26 0.004704002 ubox
9 27 0.049515123 ubox
9 29 0.035485826 ubox
10 17 0.268456833 ubox
10 26 0.041020519 ubox
10 28 0.035854698 ubox
11 16 0.263438538 ubox
11 18 0.180290527 ubox
11 26 0.004834320 ubox
11 27 0.033956040 ubox
11 29 0.039891032 ubox
12 17 0.180857055 ubox
12 26 0.027649525 ubox
12 27 0.015604299 ubox
12 28 0.040207598 ubox
13 26 0.028426747 ubox
13 27 0.038210442 ubox
13 32 0.011228994 ubox
14 25 0.034681568 ubox
14 30 0.011918970 ubox
14 31 0.011119545 ubox
14 33 0.057649735 ubox
15 26 0.014382643 ubox
15 29 0.011626646 ubox
15 32 0.057718382 ubox
16 25 0.009681321 ubox
16 31 0.057197821 ubox
16 34 0.028995338 ubox
16 39 0.019122448 ubox
16 40 0.009948715 ubox
17 25 0.048980844 ubox
17 30 0.056770898 ubox
17 31 0.008114429 ubox
17 33 0.030358909 ubox
17 35 0.549966304 ubox
17 38 0.029539534 ubox
17 39 0.010029306 ubox
18 24 0.048982103 ubox
18 30 0.008169776 ubox
18 33 0.004400989 ubox
18 34 0.566917636 ubox
18 37 0.029670656 ubox
18 38 0.008575175 ubox
19 27 0.024075606 ubox
19 28 0.045951794 ubox
19 29 0.011785658 ubox
19 32 0.008851260 ubox
19 36 0.029626095 ubox
20 26 0.028106353 ubox
20 27 0.036209864 ubox
20 28 0.012127164 ubox
20 32 0.599948700 ubox
20 36 0.009731815 ubox
21 25 0.030104813 ubox
21 31 0.611265307 ubox
21 35 0.010160776 ubox
21 39 0.098583096 ubox
22 30 0.611356741 ubox
22 33 0.017197830 ubox
22 38 0.113941394 ubox
23 29 0.582079713 ubox
23 32 0.016844752 ubox
25 36 0.437040769 ubox
26 34 0.004284606 ubox
26 35 0.437371508 ubox
26 38 0.003591928 ubox
26 39 0.009190104 ubox
26 40 0.566407592 ubox
26 41 0.090943248 ubox
26 42 0.014410117 ubox
26 43 0.005707287 ubox
27 33 0.003721210 ubox
27 34 0.440749532 ubox
27 37 0.004388285 ubox
27 39 0.616886017 ubox
27 40 0.101352433 ubox
27 41 0.010645505 ubox
27 42 0.005216367 ubox
28 33 0.441077574 ubox
28 35 0.010416832 ubox
28 38 0.640096051 ubox
28 39 0.091984921 ubox
29 34 0.011500507 ubox
29 37 0.641758521 ubox
29 38 0.079224653 ubox
30 36 0.642188514 ubox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
showpage
end
%%EOF
