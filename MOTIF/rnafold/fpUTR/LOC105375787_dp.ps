%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LOC105375787)
} def

/sequence { (\
AGAGGUGGGAAGGUGAUACAAACAGGUGGUCCGCUGGUAAUCCCCAUCGAGUGACUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 56 0.038194525 ubox
2 42 0.007033475 ubox
2 48 0.082021963 ubox
2 55 0.039923342 ubox
3 35 0.004342792 ubox
3 41 0.007027013 ubox
3 47 0.078957193 ubox
3 56 0.030718627 ubox
4 34 0.003324393 ubox
4 35 0.036784682 ubox
4 42 0.009103941 ubox
4 43 0.016858521 ubox
4 44 0.007554241 ubox
4 45 0.069104375 ubox
4 48 0.983404074 ubox
4 55 0.029992038 ubox
4 56 0.040241710 ubox
5 17 0.003658932 ubox
5 19 0.020029210 ubox
5 23 0.003514946 ubox
5 34 0.040909905 ubox
5 41 0.009201950 ubox
5 42 0.016888334 ubox
5 43 0.007649619 ubox
5 44 0.068721151 ubox
5 47 0.989647114 ubox
5 52 0.012279985 ubox
5 55 0.043596549 ubox
6 16 0.003729703 ubox
6 18 0.020022103 ubox
6 20 0.009437967 ubox
6 22 0.003477222 ubox
6 33 0.041022275 ubox
6 40 0.009694524 ubox
6 46 0.991110269 ubox
6 49 0.009638681 ubox
6 51 0.013277654 ubox
6 53 0.005141023 ubox
6 54 0.043286402 ubox
7 17 0.019583650 ubox
7 19 0.010493818 ubox
7 23 0.003466875 ubox
7 32 0.040980347 ubox
7 42 0.014651527 ubox
7 43 0.067555338 ubox
7 44 0.112619742 ubox
7 45 0.986712753 ubox
7 48 0.012455159 ubox
7 52 0.009851217 ubox
7 56 0.003537754 ubox
8 31 0.040861520 ubox
8 32 0.004279053 ubox
8 41 0.014466796 ubox
8 42 0.067512467 ubox
8 43 0.149786777 ubox
8 44 0.981211802 ubox
8 45 0.008043785 ubox
8 47 0.012194257 ubox
8 48 0.008192175 ubox
8 55 0.003648594 ubox
9 30 0.038945815 ubox
9 31 0.005190502 ubox
9 34 0.004275643 ubox
9 41 0.062253140 ubox
9 42 0.179048137 ubox
9 43 0.968788546 ubox
9 44 0.010252643 ubox
9 47 0.007325992 ubox
9 48 0.058781391 ubox
10 30 0.005843122 ubox
10 41 0.192507253 ubox
10 47 0.058019615 ubox
11 35 0.129050723 ubox
12 31 0.004539390 ubox
12 32 0.090413068 ubox
12 34 0.129966515 ubox
12 35 0.422410360 ubox
12 42 0.656726256 ubox
12 43 0.079859954 ubox
12 44 0.040221709 ubox
12 45 0.058841539 ubox
12 48 0.021461934 ubox
12 56 0.004158378 ubox
13 19 0.066687902 ubox
13 23 0.057228759 ubox
13 30 0.004499414 ubox
13 31 0.090284820 ubox
13 34 0.427652952 ubox
13 38 0.008927167 ubox
13 41 0.674484309 ubox
13 42 0.112015875 ubox
13 43 0.052505431 ubox
13 44 0.058775164 ubox
13 47 0.021489564 ubox
13 55 0.004504175 ubox
14 18 0.060183492 ubox
14 20 0.034947496 ubox
14 22 0.057683886 ubox
14 24 0.032050942 ubox
14 29 0.028501571 ubox
14 33 0.426817325 ubox
14 36 0.006740027 ubox
14 37 0.008079575 ubox
14 39 0.042810260 ubox
14 40 0.648650605 ubox
14 46 0.021491056 ubox
14 54 0.004453500 ubox
15 19 0.039118182 ubox
15 23 0.033046393 ubox
15 31 0.237751270 ubox
15 32 0.375130452 ubox
15 38 0.035795013 ubox
15 42 0.528043184 ubox
15 45 0.021245534 ubox
16 27 0.030617068 ubox
16 30 0.305513717 ubox
16 38 0.151777615 ubox
16 41 0.526923825 ubox
16 52 0.003343949 ubox
17 26 0.030589547 ubox
17 28 0.309950406 ubox
17 29 0.235753085 ubox
17 36 0.029760330 ubox
17 37 0.151311630 ubox
17 39 0.639967302 ubox
17 40 0.414748415 ubox
17 51 0.003180161 ubox
18 27 0.366155066 ubox
18 30 0.047886033 ubox
18 35 0.026231300 ubox
18 38 0.738589631 ubox
19 26 0.371654829 ubox
19 28 0.246966299 ubox
19 29 0.047770344 ubox
19 36 0.272155755 ubox
19 37 0.740349512 ubox
19 53 0.003661759 ubox
20 27 0.226563248 ubox
20 35 0.264179758 ubox
20 52 0.003623833 ubox
22 30 0.030259311 ubox
22 38 0.127029169 ubox
22 52 0.004805371 ubox
23 29 0.031319673 ubox
23 36 0.554591023 ubox
23 37 0.131481492 ubox
23 51 0.004950832 ubox
23 57 0.040949692 ubox
24 35 0.551847927 ubox
24 56 0.040881441 ubox
25 31 0.033739762 ubox
25 32 0.661996275 ubox
25 34 0.538645320 ubox
25 35 0.185692670 ubox
25 42 0.024650552 ubox
25 43 0.004050508 ubox
25 48 0.008201378 ubox
25 55 0.040442727 ubox
25 56 0.007941952 ubox
26 30 0.022345892 ubox
26 31 0.661121813 ubox
26 34 0.228391173 ubox
26 41 0.024827630 ubox
26 42 0.005591764 ubox
26 47 0.008234963 ubox
26 55 0.010357851 ubox
27 33 0.252608740 ubox
27 36 0.007546484 ubox
27 40 0.024619527 ubox
27 46 0.008241003 ubox
27 53 0.012198815 ubox
27 54 0.011845541 ubox
27 57 0.009824010 ubox
28 32 0.243762112 ubox
28 35 0.009998354 ubox
28 42 0.008029043 ubox
28 45 0.008239958 ubox
28 52 0.037737629 ubox
28 56 0.016182211 ubox
29 34 0.010582949 ubox
29 38 0.008994754 ubox
29 41 0.008126630 ubox
29 44 0.008221027 ubox
29 52 0.010642892 ubox
29 55 0.016884453 ubox
30 37 0.008552501 ubox
30 40 0.007631868 ubox
30 50 0.038915628 ubox
30 51 0.006951886 ubox
30 54 0.016909031 ubox
31 36 0.009376390 ubox
31 37 0.028368646 ubox
31 49 0.029738682 ubox
31 53 0.015242923 ubox
32 36 0.028401914 ubox
32 49 0.032145905 ubox
32 53 0.007842487 ubox
33 48 0.040807300 ubox
33 52 0.010776597 ubox
34 51 0.010832634 ubox
35 46 0.043883800 ubox
35 49 0.004311859 ubox
35 50 0.009280510 ubox
35 57 0.004689839 ubox
36 42 0.044592628 ubox
36 43 0.048656565 ubox
36 44 0.008467554 ubox
36 45 0.045944655 ubox
36 48 0.008600426 ubox
36 56 0.011205055 ubox
37 41 0.029511827 ubox
37 42 0.072413052 ubox
37 43 0.008918329 ubox
37 44 0.045715454 ubox
37 47 0.008555621 ubox
37 55 0.011681103 ubox
38 46 0.008400694 ubox
38 54 0.011219388 ubox
39 52 0.003198720 ubox
41 50 0.011426498 ubox
42 49 0.011587816 ubox
42 58 0.003539168 ubox
43 57 0.003617061 ubox
43 58 0.009127966 ubox
44 57 0.009423101 ubox
44 58 0.037927119 ubox
45 53 0.015758345 ubox
45 57 0.040882632 ubox
46 52 0.015650112 ubox
46 56 0.040346655 ubox
47 51 0.014499032 ubox
47 54 0.043698259 ubox
47 58 0.012656865 ubox
48 53 0.046501925 ubox
48 57 0.033262445 ubox
49 56 0.036065751 ubox
50 56 0.122668878 ubox
51 55 0.123277826 ubox
4 48 0.9500000 lbox
5 47 0.9500000 lbox
6 46 0.9500000 lbox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
9 43 0.9500000 lbox
12 42 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
17 39 0.9500000 lbox
18 38 0.9500000 lbox
19 37 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
showpage
end
%%EOF
