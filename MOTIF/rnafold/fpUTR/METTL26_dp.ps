%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (METTL26)
} def

/sequence { (\
GUGCCCCGCGGAAGCCCGGCCACCGCCCCCGACGCGACCCGCGCCGCGUCCGCGGCGGGGAGUUGUUGCUGCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.009383758 ubox
1 15 0.006499150 ubox
1 23 0.069366140 ubox
1 26 0.015381511 ubox
1 33 0.012116155 ubox
1 47 0.011420269 ubox
1 49 0.003558833 ubox
1 75 0.013472386 ubox
2 8 0.009399479 ubox
2 14 0.006506663 ubox
2 22 0.069544150 ubox
2 25 0.015390431 ubox
2 32 0.011969400 ubox
2 46 0.011420401 ubox
2 48 0.014855051 ubox
2 74 0.013436176 ubox
2 76 0.013539251 ubox
3 7 0.017513811 ubox
3 9 0.005826381 ubox
3 20 0.049930425 ubox
3 21 0.056214288 ubox
3 24 0.013806749 ubox
3 26 0.004219138 ubox
3 30 0.008904353 ubox
3 45 0.011368732 ubox
3 47 0.020769959 ubox
3 72 0.004244063 ubox
3 73 0.012667094 ubox
3 75 0.022820518 ubox
4 8 0.005812794 ubox
4 11 0.005268229 ubox
4 19 0.064666140 ubox
4 25 0.004225893 ubox
4 46 0.020767493 ubox
4 71 0.005719048 ubox
4 74 0.022796668 ubox
5 10 0.005268655 ubox
5 11 0.006105697 ubox
5 18 0.064452211 ubox
5 19 0.025536279 ubox
6 10 0.006068953 ubox
6 18 0.024853274 ubox
6 19 0.030225112 ubox
6 55 0.003626830 ubox
7 18 0.030813618 ubox
7 43 0.023660978 ubox
7 48 0.009441086 ubox
7 54 0.003915997 ubox
7 76 0.930158448 ubox
8 15 0.068707574 ubox
8 17 0.031163737 ubox
8 20 0.005916063 ubox
8 26 0.056841732 ubox
8 42 0.023761560 ubox
8 47 0.009660834 ubox
8 53 0.004032028 ubox
8 69 0.004197095 ubox
8 72 0.025263955 ubox
8 75 0.994405685 ubox
9 14 0.068789332 ubox
9 18 0.013300041 ubox
9 19 0.004261143 ubox
9 25 0.056954856 ubox
9 31 0.003345052 ubox
9 41 0.023761693 ubox
9 46 0.009660989 ubox
9 52 0.004033883 ubox
9 68 0.004204646 ubox
9 71 0.025314424 ubox
9 74 0.994535057 ubox
10 16 0.031142079 ubox
10 17 0.019358867 ubox
10 24 0.056967599 ubox
10 30 0.004848180 ubox
10 39 0.004198506 ubox
10 40 0.023393576 ubox
10 45 0.009644745 ubox
10 51 0.004073237 ubox
10 70 0.025120750 ubox
10 73 0.994530562 ubox
11 15 0.030647007 ubox
11 16 0.019353876 ubox
11 23 0.056921650 ubox
11 29 0.004844857 ubox
11 38 0.005910098 ubox
11 39 0.022982130 ubox
11 44 0.009505940 ubox
11 50 0.004028134 ubox
11 69 0.025064252 ubox
11 72 0.991059060 ubox
12 49 0.003733255 ubox
13 67 0.017944052 ubox
13 70 0.871040445 ubox
14 20 0.056217191 ubox
14 26 0.005049866 ubox
14 35 0.023708921 ubox
14 47 0.003634260 ubox
14 66 0.024510058 ubox
14 69 0.981792605 ubox
14 72 0.008150082 ubox
14 75 0.003771301 ubox
15 19 0.055845504 ubox
15 25 0.004751957 ubox
15 34 0.023696844 ubox
15 46 0.003570605 ubox
15 65 0.024702668 ubox
15 68 0.977790335 ubox
15 71 0.010674006 ubox
15 74 0.003762805 ubox
16 60 0.004135355 ubox
17 25 0.127824646 ubox
17 31 0.214328921 ubox
17 34 0.007709248 ubox
17 59 0.004120938 ubox
17 65 0.458339124 ubox
17 68 0.019276496 ubox
17 71 0.148851251 ubox
18 24 0.132808468 ubox
18 27 0.816567182 ubox
18 28 0.059699452 ubox
18 29 0.045023216 ubox
18 30 0.198475996 ubox
18 33 0.008321883 ubox
18 40 0.003408245 ubox
18 64 0.458785383 ubox
18 67 0.051737343 ubox
18 70 0.149433926 ubox
19 23 0.130686218 ubox
19 26 0.820087947 ubox
19 27 0.046545555 ubox
19 28 0.048058810 ubox
19 29 0.192277696 ubox
19 35 0.003539196 ubox
19 39 0.003405655 ubox
19 63 0.452086393 ubox
19 66 0.065999757 ubox
19 69 0.149706598 ubox
20 25 0.819570442 ubox
20 34 0.003644278 ubox
20 58 0.003558166 ubox
20 60 0.192478892 ubox
20 62 0.438221116 ubox
20 65 0.065015242 ubox
20 68 0.149389795 ubox
21 57 0.003892480 ubox
21 59 0.210901063 ubox
21 65 0.013170745 ubox
21 68 0.008348209 ubox
22 63 0.058752762 ubox
22 64 0.014897446 ubox
22 66 0.146542601 ubox
22 67 0.009754708 ubox
23 55 0.004374177 ubox
23 58 0.453380118 ubox
23 59 0.149182776 ubox
23 60 0.019708542 ubox
23 62 0.059484355 ubox
23 65 0.148449182 ubox
24 31 0.027820228 ubox
24 34 0.004382270 ubox
24 36 0.050150257 ubox
24 54 0.004484749 ubox
24 57 0.464643034 ubox
24 58 0.109973674 ubox
24 59 0.019633356 ubox
24 65 0.007739858 ubox
24 76 0.031550549 ubox
25 30 0.027462513 ubox
25 33 0.007297744 ubox
25 35 0.051028126 ubox
25 53 0.004636564 ubox
25 56 0.475456439 ubox
25 63 0.149498398 ubox
25 64 0.006375259 ubox
25 72 0.006136067 ubox
25 75 0.033721340 ubox
26 34 0.051107949 ubox
26 52 0.004626778 ubox
26 55 0.474300614 ubox
26 58 0.019593632 ubox
26 59 0.033995635 ubox
26 60 0.011659205 ubox
26 62 0.151015192 ubox
26 71 0.006326072 ubox
26 74 0.033664259 ubox
27 54 0.472383752 ubox
27 55 0.054407670 ubox
27 57 0.019744390 ubox
27 58 0.034010222 ubox
27 59 0.011393075 ubox
27 60 0.158404275 ubox
28 54 0.063904144 ubox
28 55 0.020768483 ubox
28 57 0.033987549 ubox
28 58 0.011102776 ubox
28 59 0.158500204 ubox
28 60 0.004357734 ubox
29 54 0.021666819 ubox
29 55 0.034168761 ubox
29 57 0.010743194 ubox
29 58 0.158522854 ubox
29 59 0.004323630 ubox
30 36 0.013580363 ubox
30 46 0.003282928 ubox
30 52 0.170456538 ubox
30 54 0.034171735 ubox
30 57 0.158519217 ubox
30 58 0.004280001 ubox
30 65 0.027333966 ubox
30 68 0.044686382 ubox
30 71 0.022388685 ubox
31 35 0.013318715 ubox
31 45 0.004584307 ubox
31 50 0.470241859 ubox
31 51 0.121372763 ubox
31 53 0.024130714 ubox
31 56 0.149203688 ubox
31 64 0.027600623 ubox
31 67 0.114747242 ubox
31 70 0.021621209 ubox
31 73 0.003304238 ubox
32 49 0.486664897 ubox
32 63 0.027252986 ubox
32 66 0.109480177 ubox
33 41 0.003727545 ubox
33 43 0.052561627 ubox
33 48 0.486865991 ubox
33 52 0.017868165 ubox
33 54 0.142985604 ubox
33 62 0.027039690 ubox
33 65 0.106425003 ubox
33 68 0.039676292 ubox
33 71 0.006039079 ubox
33 76 0.003236454 ubox
34 40 0.003687759 ubox
34 42 0.065789861 ubox
34 44 0.004419546 ubox
34 47 0.486864644 ubox
34 51 0.017866749 ubox
34 53 0.144853683 ubox
34 63 0.050655195 ubox
34 64 0.073748249 ubox
34 66 0.811065581 ubox
34 67 0.051851936 ubox
34 69 0.018768692 ubox
34 75 0.003531351 ubox
35 41 0.065821365 ubox
35 43 0.004876232 ubox
35 46 0.486860023 ubox
35 52 0.144836574 ubox
35 62 0.070178036 ubox
35 65 0.847822322 ubox
35 68 0.018864047 ubox
35 74 0.003528942 ubox
36 40 0.061583433 ubox
36 42 0.006159566 ubox
36 45 0.485877506 ubox
36 50 0.077350981 ubox
36 51 0.123078365 ubox
36 64 0.849760581 ubox
36 67 0.018805903 ubox
36 73 0.003444742 ubox
37 49 0.107613717 ubox
37 63 0.851587488 ubox
37 66 0.018679889 ubox
38 48 0.104529922 ubox
38 59 0.021171219 ubox
38 60 0.094176920 ubox
38 62 0.851376609 ubox
38 65 0.018413259 ubox
39 55 0.003934074 ubox
39 58 0.021040349 ubox
39 59 0.095564435 ubox
39 60 0.852559687 ubox
40 46 0.097544454 ubox
40 48 0.099729419 ubox
40 54 0.003945579 ubox
40 57 0.019550278 ubox
40 58 0.095621610 ubox
40 59 0.852558324 ubox
41 45 0.091369665 ubox
41 47 0.105543247 ubox
41 49 0.010573140 ubox
41 53 0.003952208 ubox
41 56 0.011435906 ubox
42 46 0.104821844 ubox
42 48 0.010845514 ubox
42 52 0.003951967 ubox
42 55 0.008790426 ubox
42 57 0.857824974 ubox
43 47 0.010203573 ubox
43 51 0.003867968 ubox
43 56 0.859065780 ubox
44 55 0.860698201 ubox
45 52 0.003657191 ubox
45 54 0.860733000 ubox
46 51 0.003603790 ubox
46 53 0.860697336 ubox
47 52 0.859465300 ubox
51 76 0.086012239 ubox
52 75 0.091987038 ubox
53 74 0.092000689 ubox
54 73 0.092004399 ubox
55 72 0.092006196 ubox
56 71 0.092003741 ubox
57 70 0.091922790 ubox
58 69 0.091973206 ubox
58 73 0.005858532 ubox
59 72 0.006166745 ubox
59 73 0.004189432 ubox
60 67 0.090694874 ubox
60 72 0.004192471 ubox
61 66 0.088523862 ubox
61 67 0.003406886 ubox
61 70 0.010179106 ubox
62 69 0.010333052 ubox
63 68 0.010172364 ubox
67 76 0.009331353 ubox
68 75 0.015984682 ubox
69 74 0.015971536 ubox
7 76 0.9500000 lbox
8 75 0.9500000 lbox
9 74 0.9500000 lbox
10 73 0.9500000 lbox
11 72 0.9500000 lbox
13 70 0.9500000 lbox
14 69 0.9500000 lbox
15 68 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
34 66 0.9500000 lbox
35 65 0.9500000 lbox
36 64 0.9500000 lbox
37 63 0.9500000 lbox
38 62 0.9500000 lbox
39 60 0.9500000 lbox
40 59 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
