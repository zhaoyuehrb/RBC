%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL37)
} def

/sequence { (\
CUCAUUCGUUCCCAGCAGGCCCUGCGCGCGGCAACAUGGCGGGGUCCAGGUGGAGGUCUUGAGGCUAUCAGAUCGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 53 0.007509776 ubox
1 55 0.012667725 ubox
1 63 0.681286345 ubox
1 64 0.015162880 ubox
1 71 0.005741354 ubox
1 76 0.037815143 ubox
2 53 0.021279662 ubox
2 54 0.015727192 ubox
2 62 0.684541209 ubox
2 63 0.007317574 ubox
2 64 0.003735949 ubox
2 70 0.005367959 ubox
2 72 0.007825609 ubox
2 75 0.033822102 ubox
2 76 0.050375258 ubox
3 52 0.026696165 ubox
3 53 0.014366933 ubox
3 55 0.004419678 ubox
3 61 0.684953286 ubox
3 63 0.005062377 ubox
3 71 0.008356041 ubox
3 75 0.064904131 ubox
4 51 0.026791667 ubox
4 57 0.006313937 ubox
4 60 0.675410814 ubox
4 73 0.006713222 ubox
4 77 0.021350164 ubox
5 50 0.024217877 ubox
5 54 0.036339917 ubox
5 55 0.009291303 ubox
5 56 0.008719428 ubox
5 63 0.016424424 ubox
5 72 0.006616449 ubox
5 76 0.021268777 ubox
6 49 0.019783040 ubox
6 50 0.010313790 ubox
6 53 0.038857413 ubox
6 54 0.034650886 ubox
6 55 0.006289566 ubox
6 56 0.049576858 ubox
6 62 0.022011043 ubox
6 71 0.005908840 ubox
6 72 0.013607104 ubox
6 75 0.016950078 ubox
6 76 0.067392984 ubox
7 49 0.012478330 ubox
7 52 0.040175122 ubox
7 53 0.035374176 ubox
7 55 0.053682658 ubox
7 61 0.022522544 ubox
7 71 0.013998718 ubox
7 75 0.091588540 ubox
8 16 0.024689591 ubox
8 51 0.035555722 ubox
8 57 0.022401003 ubox
8 60 0.021074954 ubox
8 73 0.004340884 ubox
8 74 0.071595377 ubox
8 77 0.003793488 ubox
9 15 0.024473006 ubox
9 53 0.019865164 ubox
9 54 0.139205805 ubox
9 55 0.628644356 ubox
9 56 0.060890996 ubox
9 72 0.009017942 ubox
9 76 0.006947749 ubox
10 14 0.018668621 ubox
10 44 0.008981548 ubox
10 50 0.003204098 ubox
10 52 0.020373631 ubox
10 53 0.144230426 ubox
10 54 0.736395997 ubox
10 55 0.062994720 ubox
10 56 0.178509886 ubox
10 71 0.008219904 ubox
10 72 0.059139880 ubox
10 75 0.007047220 ubox
10 76 0.025348788 ubox
11 19 0.003271731 ubox
11 43 0.009906595 ubox
11 44 0.011660893 ubox
11 49 0.003854975 ubox
11 50 0.039339862 ubox
11 52 0.147710173 ubox
11 53 0.724666172 ubox
11 55 0.192231918 ubox
11 56 0.026105642 ubox
11 71 0.060496049 ubox
11 75 0.034146584 ubox
11 76 0.020976114 ubox
12 18 0.003432944 ubox
12 19 0.006785904 ubox
12 42 0.009916911 ubox
12 43 0.011673512 ubox
12 49 0.039316925 ubox
12 50 0.158802580 ubox
12 52 0.700098177 ubox
12 53 0.664269628 ubox
12 55 0.024684415 ubox
12 56 0.014249910 ubox
12 75 0.017901268 ubox
12 76 0.022836317 ubox
13 18 0.007313384 ubox
13 41 0.009886556 ubox
13 42 0.011633192 ubox
13 49 0.161346323 ubox
13 52 0.689131816 ubox
13 55 0.014411199 ubox
13 75 0.022926716 ubox
14 51 0.687994606 ubox
14 66 0.012391719 ubox
15 25 0.006901118 ubox
15 40 0.012335638 ubox
15 51 0.470137482 ubox
15 65 0.012793315 ubox
15 77 0.003568787 ubox
16 24 0.006924065 ubox
16 38 0.004904919 ubox
16 39 0.012280742 ubox
16 50 0.539528272 ubox
16 52 0.016761376 ubox
16 64 0.012774088 ubox
16 76 0.003811111 ubox
17 23 0.006907988 ubox
17 37 0.004862339 ubox
17 51 0.017512108 ubox
18 22 0.006757055 ubox
18 46 0.814461358 ubox
18 47 0.567325267 ubox
19 32 0.009579363 ubox
19 40 0.003588083 ubox
19 45 0.824688926 ubox
19 46 0.564312901 ubox
20 31 0.009580636 ubox
20 39 0.003589202 ubox
20 44 0.999477131 ubox
21 30 0.009567523 ubox
21 38 0.003580559 ubox
21 43 0.999509512 ubox
21 44 0.025238104 ubox
22 42 0.999472181 ubox
22 43 0.025266084 ubox
22 44 0.007638080 ubox
23 33 0.012378343 ubox
23 41 0.995587628 ubox
23 42 0.022945002 ubox
23 43 0.007800101 ubox
24 32 0.014940158 ubox
24 40 0.995441208 ubox
25 31 0.015134144 ubox
25 38 0.026761699 ubox
25 39 0.994550250 ubox
25 41 0.078600847 ubox
26 32 0.135629525 ubox
26 37 0.027216124 ubox
26 40 0.089136324 ubox
27 31 0.134733307 ubox
27 38 0.687530885 ubox
27 39 0.089834265 ubox
27 41 0.022195208 ubox
28 37 0.630984551 ubox
28 40 0.024922114 ubox
29 38 0.190352468 ubox
29 39 0.024982295 ubox
29 41 0.007774777 ubox
30 37 0.177792686 ubox
30 40 0.008545783 ubox
31 40 0.005560670 ubox
32 38 0.039832321 ubox
32 39 0.005775428 ubox
33 37 0.032660362 ubox
45 54 0.012971550 ubox
46 53 0.018588020 ubox
46 76 0.004521656 ubox
47 52 0.019433608 ubox
47 61 0.013114637 ubox
47 75 0.005664999 ubox
48 60 0.013126183 ubox
49 59 0.013117658 ubox
49 69 0.005736659 ubox
49 74 0.009306314 ubox
50 58 0.013112642 ubox
50 68 0.005759072 ubox
50 73 0.009102923 ubox
51 56 0.004163779 ubox
51 67 0.005748145 ubox
51 70 0.019273453 ubox
51 72 0.008212376 ubox
52 66 0.004928509 ubox
52 69 0.021849727 ubox
53 65 0.004577273 ubox
53 68 0.020251385 ubox
53 69 0.012031127 ubox
53 74 0.004396643 ubox
54 66 0.006385954 ubox
54 68 0.012706113 ubox
54 73 0.003919316 ubox
55 65 0.005579241 ubox
55 66 0.076558520 ubox
55 69 0.004161002 ubox
55 74 0.711831924 ubox
56 65 0.080439879 ubox
56 68 0.003509343 ubox
56 73 0.720163407 ubox
57 64 0.080301644 ubox
57 67 0.003309153 ubox
57 72 0.721432614 ubox
57 76 0.004333612 ubox
58 63 0.079057823 ubox
58 64 0.005416115 ubox
58 71 0.718990493 ubox
58 75 0.005779688 ubox
58 76 0.004737569 ubox
59 63 0.004931419 ubox
59 70 0.509012770 ubox
59 71 0.070430666 ubox
59 75 0.003941994 ubox
59 76 0.009551105 ubox
60 67 0.020806430 ubox
60 70 0.510018765 ubox
60 75 0.012300239 ubox
61 66 0.020935323 ubox
61 69 0.719469747 ubox
61 74 0.013700102 ubox
62 68 0.712404896 ubox
62 73 0.013592200 ubox
63 69 0.025542224 ubox
63 74 0.013757844 ubox
64 68 0.017641750 ubox
64 73 0.019512371 ubox
64 77 0.324330977 ubox
65 71 0.083635715 ubox
65 76 0.343433657 ubox
66 70 0.075680354 ubox
66 75 0.340050853 ubox
67 73 0.056180644 ubox
67 77 0.153800625 ubox
68 72 0.050992346 ubox
68 76 0.168175515 ubox
69 75 0.179369292 ubox
1 63 0.9500000 lbox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
4 60 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
showpage
end
%%EOF
