%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUCAUCGUCUGGGCGAGCGGGGCGGCUCGUGGUGUUUCUAACCCAGUUCGUGGAUUCAAAGGUGGCUCCGCGCCGAGCGCGGCCGGCGACUUGUAGGACCUCAGCCCUGGCCGCGGCCGCCGCGCACGCCCUCGGAAGACUCGGCGGGGUGGGGGCGCGGGGGUCUCCGUGUGCGCCGCGGGAGGGCCGAAGGCUGAUUUGGAAGGGCGUCCCCGGAGAACCAGUGUGGGAUUUACUGUGAACAGC\
) } def
/len { sequence length } bind def

/coor [
[130.58351135 505.51690674]
[135.83546448 491.25808716]
[147.59606934 481.47875977]
[145.15652466 466.67846680]
[142.71696472 451.87817383]
[140.27740479 437.07788086]
[137.83784485 422.27758789]
[133.65965271 416.20449829]
[135.46183777 407.27609253]
[133.20845032 392.44631958]
[129.10690308 386.32119751]
[131.02114868 377.41616821]
[128.95429993 362.55923462]
[126.88744354 347.70230103]
[124.82058716 332.84539795]
[110.58737183 328.38656616]
[99.65660858 318.14801025]
[94.23295593 304.12142944]
[95.44213104 289.06958008]
[103.09768677 275.98220825]
[115.72743225 267.48214722]
[113.66057587 252.62524414]
[111.59372711 237.76831055]
[109.52687073 222.91139221]
[107.46001434 208.05447388]
[95.45934296 199.30693054]
[93.15161896 184.26933289]
[102.40821838 171.74124146]
[100.34136200 156.88432312]
[98.27450562 142.02740479]
[96.20765686 127.17047882]
[79.43546295 126.04792023]
[63.73524094 114.18601227]
[50.97032547 122.06362915]
[38.20540619 129.94125366]
[32.56413269 137.09249878]
[25.23021889 137.83648682]
[12.36732006 145.55308533]
[-0.49557984 153.26968384]
[-10.96758175 166.60285950]
[-26.67862892 160.23109436]
[-24.90512657 143.37016296]
[-8.21217251 140.40678406]
[4.65072680 132.69018555]
[17.51362610 124.97359467]
[30.32778740 117.17633057]
[43.09270477 109.29871368]
[55.85762405 101.42109680]
[55.33967209 93.93900299]
[40.37548447 94.97489929]
[25.41128159 96.01057434]
[24.37584305 81.04634857]
[39.33958435 80.01071167]
[54.30377197 78.97481537]
[53.78582382 71.49272156]
[40.05720520 65.44912720]
[30.96780014 64.86003113]
[26.19479370 59.24235916]
[12.54320431 53.02672577]
[-1.10838568 46.81109238]
[-17.39067650 53.23992157]
[-32.97254562 46.03411484]
[-38.40071869 30.10434532]
[-52.12933731 24.06074905]
[-65.85795593 18.01715279]
[-79.58657074 11.97355652]
[-95.33446503 13.49487400]
[-103.86557770 1.28547847]
[-117.59420013 -4.75811815]
[-131.32281494 -10.80171490]
[-145.12629700 -16.67231941]
[-159.00245667 -22.36900520]
[-172.87861633 -28.06569290]
[-186.75477600 -33.76237869]
[-200.63092041 -39.45906448]
[-214.50708008 -45.15575027]
[-231.45578003 -45.57779312]
[-235.74209595 -61.98095703]
[-221.16654968 -70.64060974]
[-208.81039429 -59.03190994]
[-194.93423462 -53.33522415]
[-181.05807495 -47.63853836]
[-167.18193054 -41.94184875]
[-153.30577087 -36.24516296]
[-139.42961121 -30.54847717]
[-134.77705383 -31.51986122]
[-129.46319580 -29.59659386]
[-125.27922058 -24.53033257]
[-111.55060577 -18.48673630]
[-97.82198334 -12.44313908]
[-83.05605316 -14.39673519]
[-73.54297638 -1.75506115]
[-59.81435776 4.28853559]
[-46.08573914 10.33213234]
[-32.35712433 16.37572861]
[-21.13296890 10.07745361]
[-8.13574028 11.40589333]
[1.87586212 20.09951019]
[5.10724783 33.15950394]
[18.75883675 39.37513733]
[32.41042709 45.59077072]
[46.10079956 51.72050476]
[59.82941818 57.76410294]
[74.40389252 54.21661758]
[83.81926727 42.53968430]
[93.23463440 30.86274910]
[102.65000916 19.18581390]
[112.06537628 7.50887966]
[121.48074341 -4.16805506]
[123.91261292 -22.43272972]
[140.53651428 -28.08877563]
[149.80439758 -39.88310242]
[159.07229614 -51.67742920]
[168.34019470 -63.47175598]
[177.60807800 -75.26608276]
[172.87213135 -88.19534302]
[175.11883545 -101.67051697]
[183.65707397 -112.19586182]
[196.17781067 -117.09440613]
[209.37760925 -115.18838501]
[218.79298401 -126.86531830]
[228.20834351 -138.54225159]
[237.62371826 -150.21919250]
[240.26277161 -165.81874084]
[254.27476501 -170.86979675]
[263.69012451 -182.54673767]
[273.10549927 -194.22367859]
[282.52087402 -205.90060425]
[291.93624878 -217.57754517]
[301.35162354 -229.25447083]
[310.76699829 -240.93141174]
[320.18237305 -252.60833740]
[297.22451782 -291.17434692]
[303.61120605 -304.74676514]
[309.99789429 -318.31915283]
[316.38458252 -331.89157104]
[322.77127075 -345.46395874]
[313.93997192 -358.02993774]
[312.59082031 -373.32946777]
[319.08673096 -387.24703979]
[331.68032837 -396.03890991]
[346.98400879 -397.34008789]
[360.88113403 -390.80059814]
[369.63348389 -378.17950439]
[370.88668823 -362.87182617]
[364.30368042 -348.99523926]
[351.65521240 -340.28250122]
[336.34365845 -339.07727051]
[329.95697021 -325.50488281]
[323.57028198 -311.93246460]
[317.18359375 -298.36007690]
[310.79690552 -284.78765869]
[322.35513306 -275.22589111]
[333.91232300 -265.66494751]
[346.04757690 -274.48171997]
[358.18283081 -283.29849243]
[370.31808472 -292.11526489]
[382.45333862 -300.93203735]
[394.58859253 -309.74884033]
[396.81304932 -325.39578247]
[409.50006104 -334.81997681]
[425.12265015 -332.43020630]
[434.41217041 -319.64425659]
[431.85733032 -304.04782104]
[418.97390747 -294.89401245]
[403.40536499 -297.61358643]
[391.27011108 -288.79678345]
[379.13485718 -279.98001099]
[366.99960327 -271.16323853]
[354.86434937 -262.34646606]
[342.72909546 -253.52967834]
[331.85928345 -243.19297791]
[322.44390869 -231.51603699]
[313.02856445 -219.83911133]
[303.61318970 -208.16217041]
[294.19781494 -196.48522949]
[284.78244019 -184.80830383]
[275.36706543 -173.13136292]
[265.95169067 -161.45443726]
[263.98611450 -146.69009399]
[249.30065918 -140.80381775]
[239.88528442 -129.12687683]
[230.46990967 -117.44995117]
[221.05455017 -105.77301025]
[225.83999634 -90.05812836]
[220.25091553 -74.43399048]
[206.30686951 -65.13537598]
[189.40240479 -65.99818420]
[180.13452148 -54.20386124]
[170.86662292 -42.40953445]
[161.59872437 -30.61520767]
[152.33084106 -18.82088089]
[153.46263123 -6.79337311]
[145.85983276 3.10487771]
[133.15768433 5.24731541]
[123.74230957 16.92424965]
[114.32694244 28.60118484]
[104.91156769 40.27811813]
[95.49620056 51.95505524]
[86.08082581 63.63198853]
[100.78623962 62.50592422]
[114.29152679 66.88864136]
[124.69280243 75.72657776]
[130.69096375 87.37228394]
[131.74868774 99.87815857]
[128.11834717 111.31764984]
[120.74458313 120.08151245]
[111.06457520 125.10363007]
[113.13143158 139.96055603]
[115.19828796 154.81747437]
[117.26513672 169.67439270]
[129.58981323 179.20016479]
[131.47425842 194.29663086]
[122.31694031 205.98762512]
[124.38378906 220.84454346]
[126.45064545 235.70146179]
[128.51750183 250.55838013]
[130.58435059 265.41531372]
[145.05462646 270.14529419]
[155.99171448 280.64608765]
[161.26339722 294.79635620]
[159.87428284 309.77069092]
[152.15319824 322.60403442]
[139.67750549 330.77853394]
[141.74436951 345.63546753]
[143.81121826 360.49237061]
[145.87806702 375.34930420]
[148.03823853 390.19293213]
[150.29161072 405.02270508]
[152.63813782 419.83804321]
[155.07769775 434.63833618]
[157.51724243 449.43862915]
[159.95680237 464.23892212]
[162.39636230 479.03921509]
[176.67343140 484.52670288]
[186.22383118 496.34561157]
[188.56054688 511.25891113]
[183.15499878 525.24591064]
[171.55229187 534.58624268]
[173.99183655 549.38653564]
[176.43139648 564.18682861]
[187.24427795 576.51623535]
[181.71766663 591.95605469]
[165.53684998 594.62316895]
[155.34729004 581.77386475]
[161.63110352 566.62640381]
[159.19155884 551.82611084]
[156.75199890 537.02581787]
[142.76535034 531.90338135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 234]
[4 233]
[5 232]
[6 231]
[7 230]
[9 229]
[10 228]
[12 227]
[13 226]
[14 225]
[15 224]
[21 218]
[22 217]
[23 216]
[24 215]
[25 214]
[28 211]
[29 210]
[30 209]
[31 208]
[33 48]
[34 47]
[35 46]
[37 45]
[38 44]
[39 43]
[55 103]
[56 102]
[58 101]
[59 100]
[60 99]
[63 95]
[64 94]
[65 93]
[66 92]
[68 90]
[69 89]
[70 88]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[104 200]
[105 199]
[106 198]
[107 197]
[108 196]
[109 195]
[111 192]
[112 191]
[113 190]
[114 189]
[115 188]
[120 184]
[121 183]
[122 182]
[123 181]
[125 179]
[126 178]
[127 177]
[128 176]
[129 175]
[130 174]
[131 173]
[132 172]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[239 248]
[240 247]
[241 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
