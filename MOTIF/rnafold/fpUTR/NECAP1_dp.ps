%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NECAP1)
} def

/sequence { (\
GCGCUUUGCAUCUCCGCCUCCCGUGCUCCGCCUCCGGUCUUACGUUUCGCCCCCGGCAGCGCCGACAGCGGACCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.829672070 ubox
1 17 0.040046854 ubox
1 24 0.050405543 ubox
1 26 0.299166008 ubox
1 31 0.022400086 ubox
1 62 0.006312445 ubox
2 8 0.829959134 ubox
2 16 0.040174921 ubox
2 23 0.052682248 ubox
2 25 0.299663784 ubox
2 30 0.022473977 ubox
2 61 0.007350721 ubox
2 70 0.007521578 ubox
3 7 0.512089835 ubox
3 9 0.211196176 ubox
3 15 0.038968625 ubox
3 17 0.012694627 ubox
3 22 0.052489048 ubox
3 24 0.299395801 ubox
3 26 0.009968463 ubox
3 29 0.022329639 ubox
3 31 0.010709932 ubox
3 60 0.007388315 ubox
3 69 0.007610561 ubox
4 8 0.209891525 ubox
4 16 0.012712349 ubox
4 23 0.298930543 ubox
4 25 0.009975193 ubox
4 30 0.010719550 ubox
4 59 0.007366697 ubox
4 68 0.007608236 ubox
4 78 0.074338443 ubox
5 58 0.005662022 ubox
5 67 0.007172603 ubox
5 77 0.066214604 ubox
5 78 0.143831907 ubox
6 65 0.003392424 ubox
6 76 0.052688968 ubox
6 77 0.235402715 ubox
6 78 0.021503808 ubox
7 16 0.006921828 ubox
7 58 0.004221121 ubox
7 64 0.003392025 ubox
7 76 0.254089260 ubox
7 77 0.031964055 ubox
8 15 0.007835821 ubox
8 17 0.296373383 ubox
8 22 0.004372213 ubox
8 26 0.039109000 ubox
8 57 0.006152621 ubox
8 75 0.258741425 ubox
9 16 0.296546667 ubox
9 25 0.039155495 ubox
9 56 0.006157487 ubox
10 24 0.038763546 ubox
11 23 0.036134084 ubox
11 72 0.023622167 ubox
12 71 0.015753397 ubox
12 78 0.025905194 ubox
13 70 0.007079636 ubox
13 72 0.880503107 ubox
13 77 0.016660598 ubox
14 70 0.004500386 ubox
14 71 0.947259459 ubox
15 23 0.012411169 ubox
15 25 0.021945073 ubox
15 70 0.947640288 ubox
16 22 0.013200453 ubox
16 24 0.022620131 ubox
16 26 0.015835611 ubox
16 38 0.003386907 ubox
16 50 0.006413866 ubox
16 69 0.947654125 ubox
17 23 0.022678746 ubox
17 25 0.015827545 ubox
17 37 0.003537117 ubox
17 49 0.006431175 ubox
17 68 0.930261034 ubox
18 36 0.003586397 ubox
18 68 0.174417616 ubox
18 78 0.003675228 ubox
19 65 0.507368510 ubox
19 67 0.241100232 ubox
19 72 0.019077992 ubox
19 77 0.003620427 ubox
20 64 0.516308505 ubox
20 71 0.018803443 ubox
21 37 0.009719423 ubox
21 70 0.016801472 ubox
21 71 0.069688959 ubox
22 36 0.010146435 ubox
22 44 0.035194864 ubox
22 61 0.008217076 ubox
22 64 0.350468438 ubox
22 70 0.070358175 ubox
23 31 0.006311266 ubox
23 35 0.010100681 ubox
23 43 0.036266630 ubox
23 60 0.007945727 ubox
23 62 0.907798858 ubox
23 63 0.259323633 ubox
23 66 0.019351357 ubox
23 69 0.070833527 ubox
23 73 0.003699803 ubox
24 30 0.006325870 ubox
24 42 0.036058181 ubox
24 58 0.004979966 ubox
24 59 0.006284829 ubox
24 61 0.939995116 ubox
24 64 0.012558670 ubox
24 65 0.018825539 ubox
24 67 0.041721709 ubox
24 68 0.068904887 ubox
24 76 0.015609366 ubox
25 29 0.006064177 ubox
25 31 0.010094791 ubox
25 41 0.032020319 ubox
25 57 0.006044233 ubox
25 60 0.941319822 ubox
25 62 0.092881220 ubox
25 63 0.014204806 ubox
25 66 0.043627537 ubox
25 75 0.020797274 ubox
26 30 0.010029548 ubox
26 56 0.005995546 ubox
26 59 0.941298008 ubox
26 61 0.087695937 ubox
27 55 0.005676777 ubox
27 58 0.900295890 ubox
27 65 0.078846863 ubox
27 72 0.283482289 ubox
28 37 0.076229092 ubox
28 56 0.613467510 ubox
28 64 0.079438094 ubox
28 71 0.306270570 ubox
29 36 0.076860052 ubox
29 44 0.003993646 ubox
29 55 0.613532944 ubox
29 61 0.053637127 ubox
29 64 0.005276529 ubox
29 70 0.306369856 ubox
30 35 0.073255906 ubox
30 38 0.035720265 ubox
30 43 0.003776063 ubox
30 48 0.005946212 ubox
30 50 0.098107302 ubox
30 54 0.600992850 ubox
30 57 0.708746542 ubox
30 60 0.087283939 ubox
30 62 0.075027827 ubox
30 63 0.004201579 ubox
30 69 0.306362123 ubox
31 37 0.045401708 ubox
31 44 0.003662832 ubox
31 49 0.107207579 ubox
31 56 0.710239067 ubox
31 59 0.085689841 ubox
31 61 0.075170274 ubox
31 68 0.303575884 ubox
32 36 0.045162796 ubox
32 55 0.708595442 ubox
32 56 0.006445757 ubox
32 59 0.077522274 ubox
32 68 0.038304721 ubox
32 78 0.014713509 ubox
33 55 0.007513436 ubox
33 58 0.079182980 ubox
33 65 0.058794655 ubox
33 67 0.052623460 ubox
33 72 0.013386262 ubox
33 77 0.014863171 ubox
34 55 0.006239480 ubox
34 56 0.126910819 ubox
34 64 0.042467428 ubox
34 71 0.014467417 ubox
35 44 0.130812480 ubox
35 49 0.522962953 ubox
35 55 0.130270323 ubox
35 64 0.297102954 ubox
35 70 0.014468240 ubox
36 43 0.131921437 ubox
36 46 0.004729899 ubox
36 47 0.020146387 ubox
36 48 0.526127522 ubox
36 51 0.739560064 ubox
36 52 0.105834283 ubox
36 53 0.127403802 ubox
36 54 0.143274364 ubox
36 63 0.301897702 ubox
36 69 0.014167558 ubox
36 74 0.026429411 ubox
36 75 0.004516919 ubox
37 43 0.045562754 ubox
37 45 0.008603535 ubox
37 46 0.051613974 ubox
37 47 0.489235548 ubox
37 50 0.740800384 ubox
37 51 0.103671968 ubox
37 52 0.126893873 ubox
37 53 0.142709972 ubox
37 62 0.301840539 ubox
37 66 0.049143379 ubox
37 73 0.026510246 ubox
37 74 0.004293247 ubox
38 42 0.042135330 ubox
38 44 0.023160662 ubox
38 49 0.716250677 ubox
38 61 0.201924343 ubox
38 65 0.049302130 ubox
38 72 0.026327139 ubox
39 59 0.109248386 ubox
39 64 0.049182398 ubox
39 71 0.025889173 ubox
39 78 0.017706630 ubox
40 58 0.108180420 ubox
40 59 0.036615923 ubox
40 70 0.013668587 ubox
40 77 0.018188678 ubox
41 58 0.036416253 ubox
41 76 0.017387080 ubox
43 49 0.117343957 ubox
43 55 0.086183969 ubox
43 61 0.228453041 ubox
43 70 0.003449558 ubox
44 48 0.118359448 ubox
44 50 0.035880240 ubox
44 54 0.084793194 ubox
44 57 0.021036267 ubox
44 60 0.279997793 ubox
44 66 0.007276394 ubox
44 69 0.003871269 ubox
44 73 0.024996749 ubox
45 49 0.033796509 ubox
45 56 0.020441746 ubox
45 59 0.276965851 ubox
45 65 0.007273990 ubox
45 68 0.003846031 ubox
45 72 0.020578028 ubox
46 55 0.017519931 ubox
46 58 0.219963954 ubox
46 59 0.037346102 ubox
46 64 0.006554139 ubox
46 67 0.003514664 ubox
46 71 0.014589252 ubox
46 72 0.031173888 ubox
47 56 0.066980151 ubox
47 58 0.051533379 ubox
47 71 0.036602405 ubox
48 55 0.069290277 ubox
48 61 0.015326236 ubox
48 70 0.045584439 ubox
49 54 0.066623158 ubox
49 57 0.292854427 ubox
49 60 0.018180238 ubox
49 69 0.047145589 ubox
50 56 0.293424874 ubox
50 59 0.018165754 ubox
50 68 0.047091513 ubox
51 55 0.291292328 ubox
54 64 0.059364540 ubox
55 63 0.059958794 ubox
56 62 0.059962030 ubox
57 61 0.059525954 ubox
62 71 0.010885162 ubox
63 70 0.011625421 ubox
64 69 0.011430985 ubox
1 9 0.9500000 lbox
2 8 0.9500000 lbox
13 72 0.9500000 lbox
14 71 0.9500000 lbox
15 70 0.9500000 lbox
16 69 0.9500000 lbox
17 68 0.9500000 lbox
23 62 0.9500000 lbox
24 61 0.9500000 lbox
25 60 0.9500000 lbox
26 59 0.9500000 lbox
27 58 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
showpage
end
%%EOF
