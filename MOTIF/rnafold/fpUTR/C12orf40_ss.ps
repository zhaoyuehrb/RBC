%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGAGGCUGUUGGGAGGUUGGGCCUCAGGCGGUGGACCAGAAGGAGCUUACUCGGGCCCUGACGUUGUCAGGAGGCCCUGGGGGAUCCUGCUGAAGCUGCGAUUUGGCGCAGAGCUGAGAUGUCUGAGCUCUAGACACAGGGACCUCAGUGUCAAAAGAUUUGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[13.12510681 263.78994751]
[4.35297728 275.95751953]
[-4.41915274 288.12509155]
[-5.83338881 306.46722412]
[-22.07620811 313.06793213]
[-30.62332916 325.39459229]
[-39.17044830 337.72125244]
[-47.71757126 350.04791260]
[-56.26469040 362.37460327]
[-64.81181335 374.70126343]
[-57.23978806 387.95370483]
[-56.17621613 403.17971802]
[-61.83226776 417.35617065]
[-73.08493042 427.66830444]
[-87.69998169 432.06866455]
[-102.77558899 429.68353271]
[-115.31847382 420.98648071]
[-122.83825684 407.70434570]
[-123.84185791 392.47424316]
[-118.13002014 378.32019043]
[-106.83683777 368.05242920]
[-92.20457458 363.70965576]
[-77.13848114 366.15414429]
[-68.59135437 353.82748413]
[-60.04423904 341.50079346]
[-51.49711609 329.17413330]
[-42.94999695 316.84747314]
[-34.40287399 304.52081299]
[-36.24586105 292.54135132]
[-29.19348335 282.19451904]
[-16.58672142 279.35296631]
[-7.81459188 267.18539429]
[0.95753789 255.01782227]
[-6.24991989 241.95956421]
[-7.07640696 227.00543213]
[-1.30451310 213.11851501]
[9.97039795 203.07379150]
[24.54764366 198.90354919]
[39.55064392 201.48643494]
[48.32277679 189.31886292]
[57.09490585 177.15129089]
[65.86703491 164.98371887]
[74.63916779 152.81616211]
[45.84127426 66.97936249]
[36.62808228 55.14225388]
[27.41489220 43.30514908]
[18.20170212 31.46804047]
[3.61964321 25.33011246]
[1.90820801 10.53415871]
[-7.30498266 -1.30294859]
[-16.51817322 -13.14005661]
[-24.28955460 -18.01414680]
[-25.78949928 -25.28030777]
[-34.78367615 -37.28467178]
[-49.25051498 -43.68944931]
[-50.68984604 -58.51434708]
[-59.68402481 -70.51870728]
[-68.67819977 -82.52307129]
[-77.67237854 -94.52743530]
[-86.66655731 -106.53179932]
[-95.87975311 -118.36891174]
[-105.30884552 -130.03475952]
[-114.73793793 -141.70062256]
[-124.16703033 -153.36647034]
[-133.59613037 -165.03233337]
[-148.25508118 -173.55003357]
[-144.12826538 -189.99404907]
[-127.18446350 -190.58065796]
[-121.93026733 -174.46142578]
[-112.50117493 -162.79557800]
[-103.07208252 -151.12971497]
[-93.64299011 -139.46385193]
[-84.21389771 -127.79800415]
[-79.60746002 -126.41168976]
[-75.83827972 -122.09455109]
[-74.66219330 -115.52597809]
[-65.66801453 -103.52161407]
[-56.67383957 -91.51725006]
[-47.67966080 -79.51288605]
[-38.68548203 -67.50852203]
[-24.86196899 -61.96237946]
[-22.77931213 -46.27885056]
[-13.78513432 -34.27448654]
[-4.68106556 -22.35324669]
[4.53212500 -10.51613903]
[13.74531555 1.32096839]
[27.66838455 6.61222601]
[30.03880882 22.25484848]
[39.25199890 34.09195709]
[48.46519089 45.92906570]
[57.67838287 57.76617050]
[72.51666260 55.56947327]
[77.90503693 41.57071304]
[74.82141876 25.46408844]
[87.40359497 14.94645023]
[102.70811462 20.83744049]
[104.99099731 37.07691193]
[91.90380096 46.95909119]
[86.51541901 60.95785522]
[92.83158875 65.00212097]
[111.78008270 77.13490295]
[122.23953247 66.38317108]
[132.69898987 55.63143158]
[132.23065186 39.83408356]
[143.13053894 28.38996506]
[158.93196106 28.08866882]
[170.26019287 39.10894775]
[170.39440918 54.91267014]
[159.25497437 66.12375641]
[143.45072937 66.09088135]
[132.99127197 76.84262085]
[122.53182220 87.59436035]
[129.54954529 100.85148621]
[144.32167053 98.24676514]
[159.09378052 95.64204407]
[173.86590576 93.03731537]
[188.63801575 90.43259430]
[203.41012573 87.82787323]
[215.65707397 77.81174469]
[229.53456116 83.22142792]
[244.30668640 80.61670685]
[256.51452637 69.66678619]
[272.01510620 75.02059937]
[274.86279297 91.17060852]
[262.12811279 101.50306702]
[246.91140747 95.38882446]
[232.13928223 97.99354553]
[220.94894409 107.82337189]
[206.01484680 102.59999084]
[191.24273682 105.20471191]
[176.47062683 107.80943298]
[161.69850159 110.41416168]
[146.92639160 113.01888275]
[132.15426636 115.62360382]
[130.44700623 122.92670441]
[125.32521057 144.83599854]
[137.41168213 153.71952820]
[149.49816895 162.60305786]
[161.58464050 171.48658752]
[173.67111206 180.37011719]
[189.37312317 182.30860901]
[195.04600525 196.08059692]
[207.13247681 204.96412659]
[223.48274231 206.22938538]
[230.31710815 221.13655090]
[220.60494995 234.35041809]
[204.33732605 232.27767944]
[198.24894714 217.05059814]
[186.16247559 208.16708374]
[171.32498169 206.86398315]
[164.78758240 192.45658875]
[152.70111084 183.57305908]
[140.61463928 174.68952942]
[128.52815247 165.80599976]
[116.44168091 156.92247009]
[109.03294373 158.08892822]
[118.46211243 169.75473022]
[113.07390594 183.75355530]
[98.25646973 186.08673096]
[88.82708740 174.42111206]
[94.21546936 160.42182922]
[86.80673218 161.58828735]
[78.03460693 173.75585938]
[69.26247406 185.92343140]
[60.49034500 198.09098816]
[51.71821594 210.25856018]
[58.90966797 223.67662048]
[59.55948257 238.82472229]
[53.59229279 252.69601440]
[42.24085617 262.56039429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[5 28]
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 91]
[45 90]
[46 89]
[47 88]
[49 86]
[50 85]
[51 84]
[53 83]
[54 82]
[56 80]
[57 79]
[58 78]
[59 77]
[60 76]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[92 99]
[93 98]
[101 112]
[102 111]
[103 110]
[113 134]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[120 127]
[121 126]
[136 155]
[137 154]
[138 153]
[139 152]
[140 151]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
