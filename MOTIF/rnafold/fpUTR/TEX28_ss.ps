%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCAAGCCCCGUGUGAUUGUUGAGGAGGAGUUAGCCCAUUGCCAGCCUGUGACGUGACUGACUCGAAUGAACCCUGUUAUUCUCUCAGUGUAUCGAAGAUAUCAGUCAACUAUCUUCUGGAUUGCAUUGAUGCUAUUGAGAAGGCAGCCUGCAGUCUAAAAGUC\
) } def
/len { sequence length } bind def

/coor [
[33.73206711 166.53546143]
[19.20823669 163.43804932]
[6.76566362 171.81553650]
[-5.67690849 180.19303894]
[-18.11948013 188.57052612]
[-21.26985741 203.82545471]
[-34.00773621 212.14418030]
[-48.53156662 209.04676819]
[-60.97413635 217.42425537]
[-57.67998505 233.14088440]
[-60.65340805 248.88218689]
[-69.41139221 262.24990845]
[-82.59190369 271.21896362]
[-98.16567993 274.44415283]
[-113.74861145 271.46185303]
[-126.96671295 262.75646973]
[-139.24949646 271.36651611]
[-151.53227234 279.97659302]
[-163.81506348 288.58666992]
[-176.09783936 297.19671631]
[-182.95689392 311.45379639]
[-197.81990051 312.42358398]
[-210.10267639 321.03366089]
[-216.53121948 336.12026978]
[-232.84126282 337.82742310]
[-242.25444031 324.39895630]
[-235.08729553 309.64889526]
[-218.71275330 308.75088501]
[-206.42996216 300.14080811]
[-200.44944763 286.49960327]
[-184.70790100 284.91394043]
[-172.42512512 276.30386353]
[-160.14234924 267.69381714]
[-147.85955811 259.08374023]
[-135.57678223 250.47367859]
[-139.14309692 236.87831116]
[-137.84484863 222.85302734]
[-131.81808472 210.08920288]
[-121.77027893 200.13308716]
[-108.89742279 194.19853210]
[-94.74162292 193.01896667]
[-81.00638580 196.75686646]
[-69.35163116 204.98168945]
[-56.90905762 196.60418701]
[-54.31575394 181.98193359]
[-41.81655884 173.30871582]
[-26.49697495 176.12796021]
[-14.05440140 167.75045776]
[-1.61182952 159.37297058]
[10.83074284 150.99546814]
[13.42404652 136.37321472]
[25.92324448 127.69999695]
[41.24282837 130.51924133]
[53.68539810 122.14174652]
[66.12797546 113.76425171]
[63.45287704 101.03764343]
[65.40158081 88.17975616]
[71.72753143 76.81732178]
[81.63040924 68.38786316]
[76.91471863 54.14840317]
[72.19902802 39.90894318]
[67.48333740 25.66948128]
[62.76764679 11.43002033]
[50.09386826 6.79520702]
[42.52537537 -4.14110851]
[42.64948273 -17.24547958]
[50.19605637 -27.72021484]
[45.74905396 -42.04586411]
[41.30205536 -56.37150955]
[36.85505295 -70.69715881]
[32.40805054 -85.02280426]
[27.96105194 -99.34845734]
[13.86007118 -106.48553467]
[9.01530743 -121.52893066]
[16.30107117 -135.55366516]
[31.39484978 -140.23910522]
[45.34177017 -132.80548096]
[49.86737442 -117.66300201]
[42.28670120 -103.79545593]
[46.73369980 -89.46981049]
[51.18070221 -75.14415741]
[55.62770081 -60.81851196]
[60.07470322 -46.49286270]
[64.52170563 -32.16721725]
[79.71366882 -24.99832535]
[85.14688110 -8.74679852]
[77.00711060 6.71432924]
[81.72280121 20.95379066]
[86.43849182 35.19325256]
[91.15418243 49.43271255]
[95.86987305 63.67217255]
[102.86524200 62.70684814]
[110.07421875 63.10645294]
[117.22739410 64.91593933]
[124.04631042 68.12658691]
[130.25431824 72.67425537]
[135.58760071 78.43987274]
[147.53782654 69.37388611]
[159.48805237 60.30789566]
[171.43827820 51.24190521]
[183.38850403 42.17591476]
[195.33871460 33.10992813]
[207.28894043 24.04393768]
[205.98721313 8.67158985]
[213.22323608 -4.95351553]
[226.68801880 -12.48365879]
[242.08500671 -11.51599789]
[254.50106812 -2.35930967]
[259.97430420 12.06453991]
[256.75817871 27.15295219]
[245.87899780 38.09127045]
[230.80824280 41.38911438]
[216.35493469 35.99415970]
[204.40470886 45.06015015]
[192.45448303 54.12614059]
[180.50425720 63.19212723]
[168.55404663 72.25811768]
[156.60382080 81.32410431]
[144.65359497 90.39009857]
[145.35877991 105.37351227]
[158.10766602 113.27704620]
[170.85655212 121.18058777]
[183.60543823 129.08412170]
[196.35432434 136.98765564]
[209.10321045 144.89120483]
[221.85209656 152.79473877]
[234.60098267 160.69827271]
[247.34986877 168.60180664]
[259.71212769 162.45091248]
[273.39028931 163.21672058]
[284.80657959 170.59153748]
[291.02813721 182.55305481]
[290.51998901 195.91780090]
[303.11795044 204.05976868]
[315.71591187 212.20172119]
[328.31384277 220.34367371]
[342.73898315 214.62567139]
[357.76171875 218.51116943]
[367.60549927 230.50614929]
[368.48522949 245.99826050]
[360.06259155 259.03048706]
[345.57629395 264.59167480]
[330.59661865 260.54342651]
[320.88351440 248.44238281]
[320.17190552 232.94163513]
[307.57394409 224.79968262]
[294.97598267 216.65771484]
[282.37802124 208.51576233]
[267.28457642 214.92053223]
[251.18281555 211.04301453]
[240.44656372 198.21498108]
[239.44633484 181.35069275]
[226.69744873 173.44715881]
[213.94856262 165.54362488]
[201.19967651 157.64009094]
[188.45079041 149.73654175]
[175.70190430 141.83300781]
[162.95301819 133.92947388]
[150.20413208 126.02593231]
[137.45524597 118.12239838]
[124.32803345 132.18772888]
[106.77693939 138.49346924]
[88.87016296 136.14907837]
[74.50546265 126.20682526]
[62.06289291 134.58432007]
[49.62031937 142.96180725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 50]
[3 49]
[4 48]
[5 47]
[8 44]
[9 43]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[22 29]
[23 28]
[53 166]
[54 165]
[55 164]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[97 119]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[120 160]
[121 159]
[122 158]
[123 157]
[124 156]
[125 155]
[126 154]
[127 153]
[128 152]
[133 148]
[134 147]
[135 146]
[136 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
