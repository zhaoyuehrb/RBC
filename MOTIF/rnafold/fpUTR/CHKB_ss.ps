%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAUCUGCGGAAUUCGGCCUUCGGAAAGAGCCCCCGGGCCGGGGCACGGAGAGAGCCGAGCGCCGCAGCCGUGAGCCGAAUAGAGCCGGAGAGACCCGAGUAUGACCGGAGAAGCCCAGGCCGGCCGGAAGAGGAGCCGAGCGCGGCCGGAAGGAACCGAGCCCGUCCGAAGGGAGCGGAGCGCAGCCUGGCCUGGGGCCCGGUCGAGCCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[26.26635361 201.92663574]
[15.77437210 212.64663696]
[1.24426508 216.37168884]
[-13.11115646 212.02175903]
[-23.12972641 200.85804749]
[-25.90669632 186.11734009]
[-20.63836288 172.07548523]
[-34.03748322 178.81814575]
[-47.43660355 185.56082153]
[-60.83572388 192.30348206]
[-74.23484039 199.04615784]
[-87.63396454 205.78881836]
[-92.68167877 220.52511597]
[-106.36634064 227.17227173]
[-120.38404083 222.26922607]
[-133.78315735 229.01190186]
[-147.18228149 235.75456238]
[-160.58140564 242.49723816]
[-173.98051453 249.23989868]
[-187.37963867 255.98257446]
[-200.63058472 263.01196289]
[-213.72721863 270.32485962]
[-226.82383728 277.63775635]
[-239.92047119 284.95062256]
[-253.01710510 292.26351929]
[-253.39526367 299.75027466]
[-256.31484985 306.58074951]
[-261.37158203 311.92889404]
[-267.90600586 315.16580200]
[-275.08929443 315.93338013]
[-282.02819824 314.18353271]
[-287.87619019 310.17828369]
[-301.46322632 316.53381348]
[-315.05026245 322.88931274]
[-328.63726807 329.24484253]
[-342.22430420 335.60037231]
[-347.37564087 350.54156494]
[-361.61959839 357.38882446]
[-376.50549316 352.07983398]
[-383.20178223 337.76428223]
[-377.73568726 322.93533325]
[-363.35015869 316.39077759]
[-348.57983398 322.01333618]
[-334.99279785 315.65780640]
[-321.40576172 309.30230713]
[-307.81875610 302.94677734]
[-294.23171997 296.59124756]
[-283.41714478 276.91632080]
[-260.32998657 279.16687012]
[-247.23335266 271.85400391]
[-234.13673401 264.54110718]
[-221.04010010 257.22824097]
[-207.94346619 249.91534424]
[-206.63528442 246.64706421]
[-203.68235779 243.84826660]
[-199.32171631 242.28361511]
[-194.12231445 242.58345032]
[-180.72319031 235.84077454]
[-167.32406616 229.09811401]
[-153.92494202 222.35543823]
[-140.52583313 215.61277771]
[-127.12670898 208.87010193]
[-122.71135712 194.69123840]
[-109.21879578 187.66233826]
[-94.37663269 192.38970947]
[-80.97750854 185.64703369]
[-67.57839203 178.90437317]
[-54.17927170 172.16169739]
[-40.78015137 165.41903687]
[-27.38103104 158.67636108]
[-21.53600693 149.49816895]
[-9.38543510 148.28660583]
[3.15344691 140.05395508]
[15.69232941 131.82130432]
[28.23121071 123.58866882]
[34.62369919 110.13558960]
[50.40617752 109.02926636]
[62.94506073 100.79662323]
[49.99514771 108.36627960]
[35.02950287 107.35161591]
[23.21984673 98.10326385]
[18.64726639 83.81719971]
[22.89192009 69.43030548]
[34.48697662 59.91427612]
[49.42549515 58.55760574]
[62.54514694 65.82910919]
[69.31218719 79.21631622]
[63.25048065 65.49568176]
[57.09051514 51.81888580]
[50.83261108 38.18662262]
[44.57470703 24.55435753]
[29.67084312 19.29599380]
[22.92590714 5.00329018]
[28.34155083 -9.84414577]
[42.70476532 -16.43759537]
[57.49411392 -10.86527824]
[63.93533707 3.56684494]
[58.20697403 18.29645348]
[64.46487427 31.92871857]
[70.72277832 45.56098175]
[76.36666870 50.32566071]
[76.97110748 59.43397522]
[83.03282166 73.15460205]
[99.04431152 70.88697052]
[112.65828705 76.71920776]
[120.44979858 87.68724060]
[135.08052063 84.37940216]
[149.71125793 81.07156372]
[164.34197998 77.76372528]
[178.97271729 74.45588684]
[193.60343933 71.14804840]
[196.86495972 61.00087357]
[203.98747253 53.18048477]
[213.63806152 49.05094147]
[224.05149841 49.29478073]
[233.35293579 53.80113602]
[239.89550781 61.69774628]
[254.65499878 59.02241516]
[269.41448975 56.34708786]
[284.17398071 53.67176056]
[298.93347168 50.99642944]
[313.69296265 48.32110214]
[328.45245361 45.64577103]
[343.21194458 42.97044373]
[357.95187378 40.18931961]
[372.67147827 37.30254745]
[387.39108276 34.41577530]
[400.38143921 26.91577339]
[410.24127197 15.61161518]
[420.10107422 4.30745745]
[416.50466919 -10.78709412]
[422.49853516 -25.09978676]
[435.77792358 -33.12709808]
[451.23663330 -31.78236389]
[462.93045044 -21.58266258]
[466.36291504 -6.44998503]
[460.21411133 7.79684353]
[446.84844971 15.67962742]
[431.40524292 14.16727543]
[421.54544067 25.47143364]
[411.68560791 36.77559280]
[417.84585571 50.45299530]
[424.00555420 64.12918854]
[439.00515747 64.23677826]
[454.00476074 64.34436798]
[469.00439453 64.45195007]
[483.90570068 62.73431015]
[498.48748779 59.21693802]
[513.06927490 55.69956589]
[527.62542725 52.07769775]
[542.15527344 48.35151672]
[556.68505859 44.62533951]
[564.51727295 30.89829826]
[579.78381348 26.81068802]
[593.42730713 34.78761292]
[597.35327148 50.09650803]
[589.23254395 63.65487671]
[573.88299561 67.41877747]
[560.41125488 59.15515518]
[545.88140869 62.88133621]
[531.35162354 66.60751343]
[525.65673828 71.31111145]
[516.58660889 70.28134155]
[502.00485229 73.79871368]
[487.42309570 77.31607819]
[487.31549072 92.31569672]
[501.84530640 96.04187775]
[516.40148926 99.66374207]
[530.98327637 103.18111420]
[545.56500244 106.69848633]
[561.13220215 101.54135132]
[573.20037842 112.64496613]
[569.35491943 128.58686829]
[553.55169678 132.96740723]
[542.04766846 121.28025818]
[527.46588135 117.76288605]
[512.88409424 114.24551392]
[505.64901733 115.73187256]
[498.11914062 110.57169342]
[483.58932495 106.84551239]
[473.17880249 98.82095337]
[468.34729004 88.76200867]
[468.89678955 79.45156860]
[453.89718628 79.34397888]
[438.89755249 79.23638916]
[423.89794922 79.12880707]
[396.67465210 69.06909180]
[390.27783203 49.13537216]
[375.55825806 52.02214432]
[360.83865356 54.90891647]
[354.88339233 59.27817154]
[345.88726807 57.72993469]
[331.12777710 60.40526581]
[316.36828613 63.08059311]
[301.60879517 65.75592041]
[286.84930420 68.43125153]
[272.08981323 71.10658264]
[257.33032227 73.78190613]
[242.57083130 76.45723724]
[232.67005920 93.24063873]
[213.31745911 97.38639832]
[196.91128540 85.77877808]
[182.28054810 89.08661652]
[167.64982605 92.39445496]
[153.01908875 95.70229340]
[138.38836670 99.01013184]
[123.75763702 102.31797028]
[115.03288269 121.82292175]
[92.31135559 128.09567261]
[71.17770386 113.33550262]
[58.63882065 121.56814575]
[51.34946823 135.61007690]
[36.46385574 136.12754822]
[23.92497253 144.36019897]
[11.38609123 152.59283447]
[-1.15279102 160.82548523]
[13.64420414 163.28494263]
[25.02068710 173.06121826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 70]
[8 69]
[9 68]
[10 67]
[11 66]
[12 65]
[15 62]
[16 61]
[17 60]
[18 59]
[19 58]
[20 57]
[21 53]
[22 52]
[23 51]
[24 50]
[25 49]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[72 216]
[73 215]
[74 214]
[75 213]
[77 211]
[78 210]
[87 103]
[88 102]
[89 100]
[90 99]
[91 98]
[106 207]
[107 206]
[108 205]
[109 204]
[110 203]
[111 202]
[117 199]
[118 198]
[119 197]
[120 196]
[121 195]
[122 194]
[123 193]
[124 192]
[125 190]
[126 189]
[127 188]
[128 141]
[129 140]
[130 139]
[143 186]
[144 185]
[145 184]
[146 183]
[147 165]
[148 164]
[149 163]
[150 161]
[151 160]
[152 159]
[166 180]
[167 179]
[168 177]
[169 176]
[170 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
