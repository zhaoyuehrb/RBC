%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR9Q2)
} def

/sequence { (\
UGAGCUGUCCCCUCAUCUGGCUCUUGUCUUAGCCGUUGCAGGUGAACCACUGGAUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.003770598 ubox
1 15 0.098691328 ubox
1 26 0.015183156 ubox
1 31 0.047174024 ubox
1 49 0.019119464 ubox
1 52 0.014688354 ubox
1 56 0.005610416 ubox
2 6 0.003837287 ubox
2 9 0.061976759 ubox
2 14 0.114194155 ubox
2 17 0.009797946 ubox
2 23 0.437229686 ubox
2 25 0.016385600 ubox
2 28 0.013736472 ubox
2 30 0.051457180 ubox
2 48 0.022375310 ubox
2 51 0.011488407 ubox
2 55 0.005653805 ubox
3 8 0.060635619 ubox
3 13 0.114540098 ubox
3 16 0.009589370 ubox
3 18 0.025889217 ubox
3 22 0.438109093 ubox
3 24 0.016895059 ubox
3 27 0.013005986 ubox
3 29 0.051866314 ubox
3 51 0.149161955 ubox
4 12 0.113944754 ubox
4 17 0.026691072 ubox
4 21 0.438300337 ubox
4 23 0.016903673 ubox
4 27 0.013855731 ubox
4 28 0.051460309 ubox
4 33 0.008705881 ubox
4 50 0.152975630 ubox
5 20 0.437778708 ubox
5 26 0.048614358 ubox
5 32 0.009169805 ubox
5 41 0.007438903 ubox
5 53 0.037266860 ubox
5 57 0.789490272 ubox
6 15 0.090735693 ubox
6 19 0.418744161 ubox
6 26 0.010752771 ubox
6 31 0.009090193 ubox
6 40 0.007550898 ubox
6 49 0.085727804 ubox
6 52 0.036153436 ubox
6 56 0.807270460 ubox
7 14 0.125505335 ubox
7 16 0.111378516 ubox
7 18 0.269169150 ubox
7 21 0.019143666 ubox
7 25 0.011688145 ubox
7 30 0.008313713 ubox
7 39 0.007575777 ubox
7 47 0.118523940 ubox
7 48 0.084900174 ubox
7 50 0.026389848 ubox
7 51 0.021611800 ubox
7 55 0.830782387 ubox
8 15 0.115404133 ubox
8 20 0.014423454 ubox
8 38 0.006805647 ubox
8 45 0.208395556 ubox
8 46 0.088380408 ubox
8 49 0.024444782 ubox
8 54 0.835494450 ubox
8 57 0.003864212 ubox
9 19 0.016007697 ubox
9 20 0.018475265 ubox
9 42 0.004224410 ubox
9 44 0.232311736 ubox
9 52 0.004623584 ubox
9 53 0.835668431 ubox
9 56 0.006098059 ubox
9 57 0.015851421 ubox
10 19 0.021686678 ubox
10 20 0.010397069 ubox
10 41 0.004207071 ubox
10 42 0.060095169 ubox
10 52 0.833939026 ubox
10 53 0.026446825 ubox
10 56 0.016065702 ubox
10 57 0.019524640 ubox
11 19 0.011569305 ubox
11 20 0.059299220 ubox
11 41 0.060562453 ubox
11 42 0.577958495 ubox
11 52 0.034024125 ubox
11 53 0.033990608 ubox
11 56 0.019550916 ubox
11 57 0.018083027 ubox
12 19 0.062288138 ubox
12 32 0.003742321 ubox
12 41 0.580798489 ubox
12 42 0.006429987 ubox
12 52 0.034817905 ubox
12 53 0.003598902 ubox
12 56 0.017865794 ubox
12 57 0.027664560 ubox
13 31 0.003689360 ubox
13 40 0.576905278 ubox
13 41 0.006110383 ubox
13 45 0.632175855 ubox
13 53 0.003819512 ubox
13 54 0.021155506 ubox
13 56 0.004498592 ubox
13 57 0.078404178 ubox
14 19 0.008315629 ubox
14 38 0.553283796 ubox
14 44 0.646751579 ubox
14 52 0.004907724 ubox
14 53 0.021393215 ubox
14 56 0.136987946 ubox
15 36 0.028480035 ubox
15 37 0.546667114 ubox
15 43 0.646702226 ubox
15 51 0.005700004 ubox
15 55 0.138129342 ubox
16 35 0.029468000 ubox
16 42 0.646331631 ubox
16 45 0.010364714 ubox
16 54 0.138497814 ubox
17 32 0.025011018 ubox
17 41 0.646517796 ubox
17 42 0.012246627 ubox
17 44 0.010587084 ubox
17 53 0.138456897 ubox
17 56 0.003974266 ubox
17 57 0.003792741 ubox
18 31 0.024179904 ubox
18 35 0.616032328 ubox
18 38 0.011724401 ubox
18 40 0.591388272 ubox
18 41 0.010916149 ubox
18 49 0.027949544 ubox
18 52 0.113298900 ubox
18 56 0.003791148 ubox
19 28 0.104314997 ubox
19 29 0.008141323 ubox
19 30 0.013613469 ubox
19 34 0.792467833 ubox
19 37 0.018950822 ubox
19 39 0.357291130 ubox
19 48 0.035082974 ubox
19 51 0.097222711 ubox
20 27 0.110554492 ubox
20 28 0.011004581 ubox
20 29 0.008938479 ubox
20 33 0.831888106 ubox
20 36 0.097493699 ubox
20 39 0.156335372 ubox
20 47 0.035061425 ubox
20 50 0.097250697 ubox
21 26 0.111425550 ubox
21 32 0.831782738 ubox
21 35 0.101319982 ubox
21 38 0.216380381 ubox
22 31 0.817915220 ubox
22 45 0.028788901 ubox
22 54 0.010899560 ubox
23 32 0.115097627 ubox
23 42 0.020269005 ubox
23 44 0.028990635 ubox
23 53 0.012271444 ubox
24 31 0.117087496 ubox
24 32 0.032660558 ubox
24 41 0.020963892 ubox
24 45 0.015798855 ubox
24 46 0.022307658 ubox
24 52 0.012596680 ubox
24 53 0.003381016 ubox
24 57 0.030059436 ubox
25 31 0.040107840 ubox
25 35 0.062017701 ubox
25 40 0.021572023 ubox
25 44 0.016262967 ubox
25 45 0.022852371 ubox
25 49 0.066042535 ubox
25 52 0.003298032 ubox
25 53 0.003226628 ubox
25 56 0.050458499 ubox
26 30 0.039482091 ubox
26 33 0.200280120 ubox
26 34 0.064772674 ubox
26 37 0.003231773 ubox
26 39 0.021679640 ubox
26 43 0.013966029 ubox
26 47 0.039926625 ubox
26 48 0.066505600 ubox
26 50 0.023795466 ubox
26 55 0.067174968 ubox
27 32 0.191808686 ubox
27 38 0.020895137 ubox
27 42 0.013510926 ubox
27 45 0.046100825 ubox
27 46 0.038574398 ubox
27 49 0.023342483 ubox
27 54 0.068408431 ubox
28 41 0.014525971 ubox
28 42 0.039221474 ubox
28 44 0.047772654 ubox
28 53 0.068543554 ubox
28 56 0.003231007 ubox
29 40 0.013407476 ubox
29 41 0.039225584 ubox
29 45 0.039753013 ubox
29 46 0.040334612 ubox
29 52 0.061039347 ubox
29 53 0.006813107 ubox
30 38 0.006336669 ubox
30 40 0.038508247 ubox
30 44 0.036837451 ubox
30 45 0.034582728 ubox
30 52 0.029024346 ubox
30 56 0.004282283 ubox
31 37 0.007259930 ubox
31 43 0.033613277 ubox
31 51 0.040512555 ubox
31 55 0.003809107 ubox
32 36 0.005046426 ubox
32 39 0.056200057 ubox
32 43 0.116945195 ubox
32 50 0.040853015 ubox
33 38 0.056108731 ubox
33 42 0.123513159 ubox
33 53 0.007982038 ubox
33 57 0.435145257 ubox
34 41 0.123518389 ubox
34 52 0.007980051 ubox
34 56 0.443996358 ubox
35 47 0.045870567 ubox
35 50 0.007827352 ubox
35 51 0.005543906 ubox
35 55 0.444014414 ubox
36 45 0.004766655 ubox
36 46 0.045882045 ubox
36 49 0.007651964 ubox
36 54 0.443027675 ubox
36 57 0.003681612 ubox
37 44 0.005173308 ubox
37 45 0.045554984 ubox
37 49 0.004849114 ubox
37 52 0.004808689 ubox
37 53 0.401595243 ubox
37 56 0.005250533 ubox
38 43 0.003400728 ubox
38 48 0.004916892 ubox
38 51 0.004255313 ubox
38 55 0.004174850 ubox
39 52 0.435801650 ubox
39 56 0.009743128 ubox
40 51 0.436569962 ubox
40 55 0.009657832 ubox
41 48 0.073211724 ubox
41 50 0.426688619 ubox
41 51 0.147590852 ubox
42 47 0.074045472 ubox
42 50 0.188108728 ubox
43 49 0.212472873 ubox
44 48 0.211699945 ubox
44 51 0.012872699 ubox
47 53 0.051250216 ubox
47 57 0.157611784 ubox
48 52 0.051255522 ubox
48 56 0.159886895 ubox
49 55 0.146126558 ubox
50 57 0.016015972 ubox
51 56 0.015256313 ubox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
8 54 0.9500000 lbox
9 53 0.9500000 lbox
10 52 0.9500000 lbox
11 42 0.9500000 lbox
12 41 0.9500000 lbox
13 40 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
showpage
end
%%EOF
