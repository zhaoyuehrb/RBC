%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WDR78)
} def

/sequence { (\
CUCGUGCCGCCAGCCAACCGCGCGGCCGCUUGUUGAGCCAGGGCUCCACCGUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.003404245 ubox
1 25 0.006023060 ubox
1 37 0.037286553 ubox
1 41 0.012015817 ubox
1 43 0.007553658 ubox
2 12 0.003474739 ubox
2 25 0.025518536 ubox
2 36 0.041211409 ubox
2 40 0.011544696 ubox
2 42 0.007721142 ubox
3 9 0.003472494 ubox
3 20 0.003401026 ubox
3 22 0.008125650 ubox
3 24 0.058692214 ubox
3 28 0.607460879 ubox
3 32 0.042037363 ubox
3 35 0.041200320 ubox
3 41 0.009505328 ubox
3 51 0.101234378 ubox
3 54 0.030869528 ubox
4 8 0.003793633 ubox
4 10 0.005129667 ubox
4 14 0.005022037 ubox
4 18 0.007578542 ubox
4 19 0.003398808 ubox
4 21 0.011875158 ubox
4 23 0.080637262 ubox
4 26 0.005355396 ubox
4 27 0.729390823 ubox
4 29 0.408505816 ubox
4 31 0.042053321 ubox
4 33 0.003335897 ubox
4 34 0.022183581 ubox
4 38 0.004949552 ubox
4 44 0.003731977 ubox
4 49 0.301185794 ubox
4 50 0.076172447 ubox
4 53 0.027223861 ubox
4 55 0.057761186 ubox
5 9 0.004804449 ubox
5 12 0.003324899 ubox
5 13 0.004871145 ubox
5 16 0.004259517 ubox
5 17 0.007140213 ubox
5 20 0.011851397 ubox
5 22 0.080613778 ubox
5 24 0.003680869 ubox
5 25 0.003952690 ubox
5 28 0.406866211 ubox
5 37 0.004909218 ubox
5 43 0.003560707 ubox
5 48 0.310132812 ubox
5 51 0.008073902 ubox
5 54 0.056941945 ubox
6 11 0.003710616 ubox
6 14 0.013527205 ubox
6 15 0.004255738 ubox
6 19 0.010913924 ubox
6 21 0.081002063 ubox
6 23 0.022433238 ubox
6 26 0.889930521 ubox
6 27 0.289641085 ubox
6 29 0.108930395 ubox
6 33 0.004145586 ubox
6 44 0.045331554 ubox
6 47 0.309749527 ubox
6 50 0.006307767 ubox
6 52 0.004589663 ubox
6 53 0.046985925 ubox
6 55 0.008720053 ubox
7 13 0.013852991 ubox
7 20 0.077668259 ubox
7 22 0.017463060 ubox
7 25 0.936308867 ubox
7 28 0.109019139 ubox
7 32 0.004281320 ubox
7 42 0.005347690 ubox
7 43 0.045860163 ubox
7 51 0.012688558 ubox
7 54 0.008666405 ubox
8 20 0.024678701 ubox
8 22 0.018106825 ubox
8 24 0.936337195 ubox
8 28 0.005599454 ubox
8 41 0.005632241 ubox
8 42 0.045736079 ubox
8 51 0.043864195 ubox
9 19 0.032637325 ubox
9 21 0.025248514 ubox
9 23 0.936265673 ubox
9 26 0.115236642 ubox
9 27 0.005038039 ubox
9 29 0.009898370 ubox
9 38 0.007732820 ubox
9 44 0.311667071 ubox
9 50 0.041766228 ubox
9 52 0.004690971 ubox
10 20 0.025308087 ubox
10 22 0.932330086 ubox
10 25 0.115435017 ubox
10 28 0.009917314 ubox
10 37 0.007741952 ubox
10 42 0.020175768 ubox
10 43 0.311549326 ubox
10 51 0.004880775 ubox
11 24 0.115212903 ubox
11 35 0.007767523 ubox
11 41 0.024858769 ubox
11 42 0.311053229 ubox
12 34 0.007768185 ubox
12 45 0.041866284 ubox
13 21 0.899965529 ubox
13 23 0.060613432 ubox
13 26 0.018467166 ubox
13 33 0.007722906 ubox
13 38 0.314343795 ubox
13 44 0.043203703 ubox
14 20 0.902832856 ubox
14 22 0.060593896 ubox
14 25 0.018505176 ubox
14 32 0.006298143 ubox
14 37 0.314842067 ubox
14 43 0.043201918 ubox
15 24 0.018502522 ubox
15 32 0.005149901 ubox
15 35 0.315016556 ubox
15 42 0.043141584 ubox
16 31 0.006802204 ubox
16 34 0.314922598 ubox
17 30 0.005974149 ubox
17 33 0.314746566 ubox
18 25 0.003733997 ubox
18 32 0.312150605 ubox
19 24 0.003819611 ubox
19 28 0.012614323 ubox
19 32 0.034752508 ubox
20 26 0.006878649 ubox
20 27 0.011558015 ubox
20 29 0.304713383 ubox
20 31 0.046224519 ubox
20 38 0.042928150 ubox
20 55 0.013374009 ubox
21 25 0.008120098 ubox
21 28 0.305065446 ubox
21 37 0.042897204 ubox
21 54 0.013400959 ubox
22 27 0.290464250 ubox
22 29 0.077730186 ubox
22 53 0.013099567 ubox
22 55 0.027048858 ubox
23 28 0.077712778 ubox
23 35 0.042573737 ubox
23 51 0.013428223 ubox
23 54 0.027234765 ubox
24 34 0.042786972 ubox
24 39 0.006368894 ubox
24 45 0.005958136 ubox
24 50 0.013252246 ubox
24 53 0.027345863 ubox
24 56 0.061243117 ubox
25 33 0.042926601 ubox
25 38 0.006443163 ubox
25 44 0.014383487 ubox
25 49 0.012523638 ubox
25 52 0.027282681 ubox
25 55 0.077506730 ubox
26 32 0.042886565 ubox
26 37 0.006441500 ubox
26 42 0.004994603 ubox
26 43 0.014975195 ubox
26 51 0.023195125 ubox
26 54 0.075777485 ubox
27 35 0.008358402 ubox
27 41 0.011750788 ubox
27 42 0.015046687 ubox
27 51 0.094276524 ubox
27 54 0.219480181 ubox
28 34 0.006996986 ubox
28 38 0.141706402 ubox
28 44 0.028848203 ubox
28 50 0.099633831 ubox
28 52 0.166209108 ubox
28 53 0.236285080 ubox
28 55 0.408309923 ubox
29 37 0.143510065 ubox
29 41 0.025351917 ubox
29 42 0.047729139 ubox
29 43 0.026882150 ubox
29 51 0.231451815 ubox
29 54 0.413236857 ubox
30 36 0.142392515 ubox
30 37 0.005617542 ubox
30 40 0.024313913 ubox
30 41 0.053990956 ubox
30 42 0.024225167 ubox
31 35 0.128334758 ubox
31 36 0.014227659 ubox
31 40 0.058254062 ubox
31 41 0.019154707 ubox
31 48 0.112069202 ubox
31 51 0.267523586 ubox
31 54 0.027811347 ubox
32 38 0.027418239 ubox
32 39 0.058824362 ubox
32 44 0.006168109 ubox
32 47 0.123109960 ubox
32 49 0.801886712 ubox
32 50 0.265145135 ubox
32 52 0.007688397 ubox
32 53 0.033200210 ubox
32 55 0.029034803 ubox
33 37 0.026374193 ubox
33 41 0.010163365 ubox
33 43 0.006147337 ubox
33 48 0.804049526 ubox
33 51 0.010841063 ubox
33 54 0.026493177 ubox
34 40 0.014085579 ubox
34 42 0.005952254 ubox
34 48 0.190023782 ubox
34 51 0.012916206 ubox
34 54 0.022658740 ubox
35 39 0.014339364 ubox
35 46 0.902631639 ubox
35 47 0.140123579 ubox
35 50 0.006528803 ubox
35 53 0.030924637 ubox
36 45 0.915049420 ubox
36 52 0.027874241 ubox
37 44 0.915304042 ubox
37 52 0.019422558 ubox
37 55 0.163944878 ubox
38 43 0.912335190 ubox
38 51 0.026081549 ubox
38 54 0.164230301 ubox
41 47 0.021775879 ubox
41 50 0.184010479 ubox
41 53 0.007232310 ubox
41 56 0.014978417 ubox
42 46 0.021455613 ubox
42 49 0.184073653 ubox
42 50 0.065395125 ubox
42 52 0.005328359 ubox
42 53 0.091768377 ubox
42 55 0.014004939 ubox
42 56 0.095083244 ubox
43 49 0.065313859 ubox
43 52 0.093520823 ubox
43 55 0.099091102 ubox
44 51 0.093684735 ubox
44 54 0.099137075 ubox
3 28 0.9500000 lbox
4 27 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
showpage
end
%%EOF
