%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL48)
} def

/sequence { (\
UGGUCAAGGCCGUUCCUUCAGUGUUUUCAGACGCCCUGGGAACGCGGCUGCAGGGUCCGGUCUUCGGUUUGCACAGCUAGAGGCCGCGCAGCAGCAAAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.361507577 ubox
1 20 0.059971001 ubox
1 46 0.016271117 ubox
1 66 0.005553439 ubox
1 86 0.011210943 ubox
1 96 0.012163495 ubox
2 11 0.676107736 ubox
2 15 0.004020843 ubox
2 16 0.033357182 ubox
2 17 0.003250215 ubox
2 19 0.066499210 ubox
2 45 0.020157145 ubox
2 49 0.010100218 ubox
2 57 0.005131892 ubox
2 58 0.019589847 ubox
2 65 0.007902716 ubox
2 69 0.003521456 ubox
2 85 0.029476515 ubox
2 95 0.007518239 ubox
3 10 0.679689934 ubox
3 14 0.003862162 ubox
3 15 0.033365466 ubox
3 16 0.003507315 ubox
3 18 0.049147292 ubox
3 45 0.018283109 ubox
3 48 0.013052459 ubox
3 51 0.006291079 ubox
3 56 0.004903413 ubox
3 57 0.019658093 ubox
3 64 0.005772952 ubox
3 68 0.005182275 ubox
3 84 0.029503047 ubox
3 95 0.006721596 ubox
4 9 0.647151039 ubox
4 44 0.010742943 ubox
4 47 0.013291542 ubox
4 50 0.006043333 ubox
4 54 0.006452282 ubox
4 55 0.018812052 ubox
4 67 0.013899704 ubox
4 83 0.029472717 ubox
4 94 0.006362399 ubox
4 100 0.032828328 ubox
5 46 0.048613182 ubox
5 53 0.008057286 ubox
5 54 0.019908962 ubox
5 66 0.021445731 ubox
5 82 0.029285719 ubox
5 99 0.052925554 ubox
6 14 0.008476467 ubox
6 18 0.136551394 ubox
6 64 0.043958892 ubox
7 13 0.009534156 ubox
7 14 0.008369527 ubox
7 17 0.159756878 ubox
7 18 0.012114582 ubox
7 49 0.003695118 ubox
7 63 0.050076028 ubox
8 13 0.008494045 ubox
8 15 0.008738004 ubox
8 16 0.161740043 ubox
8 17 0.014082054 ubox
8 19 0.007591748 ubox
8 48 0.003350502 ubox
8 49 0.038600205 ubox
8 62 0.050833485 ubox
8 85 0.008751726 ubox
9 14 0.006485129 ubox
9 15 0.160568422 ubox
9 16 0.014186760 ubox
9 18 0.007132042 ubox
9 45 0.632413856 ubox
9 48 0.050758634 ubox
9 61 0.050856425 ubox
9 84 0.008761346 ubox
9 95 0.008377950 ubox
10 44 0.447751776 ubox
10 47 0.052033822 ubox
10 60 0.050895361 ubox
10 83 0.008760542 ubox
10 94 0.008328335 ubox
10 100 0.026595043 ubox
11 44 0.541724556 ubox
11 46 0.055072821 ubox
11 59 0.050894156 ubox
11 82 0.008673846 ubox
11 99 0.026833497 ubox
12 43 0.836051398 ubox
12 45 0.051694366 ubox
12 58 0.050821405 ubox
13 41 0.008260406 ubox
13 42 0.836807013 ubox
13 44 0.046888556 ubox
13 97 0.006455101 ubox
13 98 0.006161561 ubox
13 99 0.004614241 ubox
14 20 0.005110305 ubox
14 40 0.010022995 ubox
14 41 0.838525314 ubox
14 55 0.022450311 ubox
14 96 0.006627405 ubox
14 97 0.006299481 ubox
14 98 0.004850655 ubox
14 99 0.003626710 ubox
14 100 0.011268659 ubox
15 39 0.012314749 ubox
15 40 0.838905485 ubox
15 46 0.013439586 ubox
15 47 0.006149864 ubox
15 54 0.023952616 ubox
15 55 0.045578169 ubox
15 99 0.017473316 ubox
15 100 0.378404324 ubox
16 38 0.014116508 ubox
16 39 0.838779787 ubox
16 46 0.019577930 ubox
16 53 0.024010627 ubox
16 54 0.045562202 ubox
16 99 0.386969456 ubox
16 100 0.025544834 ubox
17 38 0.827082319 ubox
17 39 0.003253004 ubox
17 46 0.008181953 ubox
17 52 0.023577333 ubox
17 53 0.045449404 ubox
17 97 0.018706161 ubox
17 98 0.382119798 ubox
17 99 0.025653375 ubox
18 38 0.014691163 ubox
18 39 0.008843600 ubox
18 46 0.012210442 ubox
18 47 0.008719622 ubox
18 52 0.044675853 ubox
18 96 0.022416452 ubox
18 97 0.344151544 ubox
18 98 0.023316871 ubox
18 99 0.003585782 ubox
18 100 0.013867917 ubox
19 38 0.054303119 ubox
19 46 0.176289787 ubox
19 50 0.050557241 ubox
19 99 0.023302611 ubox
20 37 0.057987135 ubox
20 49 0.050430658 ubox
21 32 0.023656491 ubox
21 34 0.835624601 ubox
21 36 0.045617435 ubox
21 45 0.541052614 ubox
21 48 0.044833973 ubox
22 29 0.004555968 ubox
22 31 0.023595289 ubox
22 33 0.837140546 ubox
22 44 0.541642442 ubox
22 46 0.004885758 ubox
22 47 0.041037938 ubox
23 28 0.005168394 ubox
23 32 0.837926121 ubox
23 34 0.031919211 ubox
23 43 0.544026833 ubox
23 45 0.005779643 ubox
24 30 0.022368749 ubox
24 31 0.830975431 ubox
24 33 0.031650541 ubox
24 42 0.543809610 ubox
24 44 0.005307348 ubox
25 29 0.024214948 ubox
25 30 0.768672018 ubox
25 31 0.026603271 ubox
25 41 0.543688044 ubox
26 30 0.033671432 ubox
26 40 0.543248496 ubox
27 39 0.542461405 ubox
28 38 0.544070163 ubox
29 37 0.543886438 ubox
30 36 0.542930574 ubox
44 77 0.003580444 ubox
44 87 0.010064075 ubox
44 95 0.199644242 ubox
45 76 0.003585263 ubox
45 86 0.010081705 ubox
45 94 0.199203752 ubox
46 57 0.007051237 ubox
46 78 0.010502683 ubox
46 85 0.010090948 ubox
47 56 0.007148653 ubox
47 77 0.011049108 ubox
47 84 0.010090294 ubox
47 92 0.203694773 ubox
47 95 0.974553842 ubox
48 55 0.007474397 ubox
48 76 0.011042151 ubox
48 83 0.010073416 ubox
48 91 0.204447020 ubox
48 94 0.975876773 ubox
49 54 0.007334484 ubox
49 73 0.010022561 ubox
49 75 0.009040034 ubox
49 82 0.007486645 ubox
49 90 0.204399986 ubox
49 93 0.975846600 ubox
49 96 0.026117516 ubox
50 72 0.014133863 ubox
50 74 0.006843428 ubox
50 89 0.204241773 ubox
50 92 0.976278828 ubox
50 95 0.038051984 ubox
51 71 0.014472512 ubox
51 88 0.203921435 ubox
51 91 0.974635856 ubox
51 94 0.038027296 ubox
52 70 0.014352904 ubox
53 69 0.013446357 ubox
53 70 0.003465381 ubox
53 85 0.004009540 ubox
54 68 0.010144086 ubox
54 69 0.004359763 ubox
54 70 0.003207400 ubox
54 84 0.003656836 ubox
54 85 0.054306378 ubox
55 68 0.004927186 ubox
55 84 0.054193718 ubox
55 87 0.159106571 ubox
55 89 0.962907864 ubox
56 83 0.046884166 ubox
56 86 0.092130279 ubox
56 88 0.952203681 ubox
57 67 0.017660882 ubox
57 82 0.044807917 ubox
57 83 0.026313067 ubox
58 66 0.018307795 ubox
58 82 0.026307805 ubox
58 86 0.990592877 ubox
59 65 0.018279033 ubox
59 78 0.012102704 ubox
59 85 0.997023743 ubox
60 64 0.011842025 ubox
60 77 0.012247368 ubox
60 84 0.997083942 ubox
61 76 0.009629052 ubox
61 81 0.047351511 ubox
61 83 0.993314688 ubox
62 76 0.007481546 ubox
62 80 0.048278259 ubox
62 82 0.993559962 ubox
62 83 0.082986473 ubox
63 75 0.007317707 ubox
63 79 0.045920719 ubox
63 80 0.012608642 ubox
63 81 0.989305139 ubox
63 82 0.083682552 ubox
64 79 0.020105761 ubox
64 80 0.956570168 ubox
64 81 0.118795234 ubox
65 71 0.007146717 ubox
65 80 0.145053128 ubox
65 86 0.021494506 ubox
65 99 0.004891619 ubox
66 70 0.004454256 ubox
66 78 0.979224034 ubox
66 85 0.026616025 ubox
67 74 0.026547294 ubox
67 77 0.996687947 ubox
67 84 0.026630610 ubox
67 92 0.011272205 ubox
67 95 0.016569411 ubox
68 73 0.024582042 ubox
68 76 0.990298719 ubox
68 80 0.007479970 ubox
68 81 0.008400805 ubox
68 83 0.026455586 ubox
68 91 0.009993071 ubox
68 94 0.014349481 ubox
68 98 0.015833686 ubox
69 75 0.876928248 ubox
69 76 0.062226917 ubox
69 79 0.012656291 ubox
69 80 0.009935804 ubox
69 81 0.003510931 ubox
69 82 0.025686900 ubox
69 90 0.008339820 ubox
69 91 0.010021310 ubox
69 93 0.009897435 ubox
69 94 0.013458625 ubox
69 97 0.018279063 ubox
70 75 0.073366270 ubox
70 79 0.011804397 ubox
70 80 0.003519146 ubox
70 81 0.025052149 ubox
70 88 0.006939266 ubox
70 90 0.014055585 ubox
70 93 0.017947176 ubox
70 96 0.018862512 ubox
71 77 0.046891316 ubox
71 78 0.006650578 ubox
71 87 0.008162323 ubox
71 89 0.015315279 ubox
71 92 0.020092024 ubox
71 95 0.018981172 ubox
72 76 0.046838026 ubox
72 86 0.008161695 ubox
72 88 0.015298045 ubox
72 91 0.020069938 ubox
72 94 0.018969121 ubox
76 84 0.017389814 ubox
76 87 0.020958652 ubox
76 89 0.004904072 ubox
76 92 0.017398212 ubox
77 83 0.017407911 ubox
77 86 0.020958847 ubox
77 88 0.004903671 ubox
77 91 0.017404206 ubox
78 82 0.015685663 ubox
78 90 0.017042460 ubox
83 89 0.013323075 ubox
84 88 0.013231549 ubox
86 92 0.006768427 ubox
86 95 0.034206390 ubox
87 91 0.006738581 ubox
87 94 0.034320087 ubox
88 95 0.029266214 ubox
89 94 0.029256831 ubox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
47 95 0.9500000 lbox
48 94 0.9500000 lbox
49 93 0.9500000 lbox
50 92 0.9500000 lbox
51 91 0.9500000 lbox
55 89 0.9500000 lbox
56 88 0.9500000 lbox
58 86 0.9500000 lbox
59 85 0.9500000 lbox
60 84 0.9500000 lbox
61 83 0.9500000 lbox
62 82 0.9500000 lbox
63 81 0.9500000 lbox
64 80 0.9500000 lbox
66 78 0.9500000 lbox
67 77 0.9500000 lbox
68 76 0.9500000 lbox
69 75 0.9500000 lbox
showpage
end
%%EOF
