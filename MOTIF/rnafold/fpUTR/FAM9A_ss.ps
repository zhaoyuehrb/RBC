%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAAGCGGCAUCAGGGGUCCCUCAGGUGAAGCGCUCGCGGUGGGGAGGCAGGAAGUCGAGCAUGCGGCCCUCUCGCAACCAGGGUGUGAAGCGCAGGUUCAGGGAUCGCCUCUAACUUCCCAGGACAGCCAACC\
) } def
/len { sequence length } bind def

/coor [
[151.29034424 392.39419556]
[155.65827942 384.39614868]
[162.45402527 378.25897217]
[158.37828064 363.82330322]
[154.30253601 349.38763428]
[150.22679138 334.95196533]
[146.15104675 320.51632690]
[132.93688965 309.02557373]
[137.49578857 291.22674561]
[133.09011841 276.88833618]
[130.58091736 275.46017456]
[128.51292419 272.90820312]
[127.33397675 269.40542603]
[127.41705322 265.28964233]
[129.00317383 261.03112793]
[125.92937469 246.34945679]
[122.85556793 231.66778564]
[119.61363983 217.02230835]
[116.20401001 202.41496277]
[112.79437256 187.80761719]
[109.38474274 173.20028687]
[105.97510529 158.59294128]
[102.56547546 143.98559570]
[99.15584564 129.37826538]
[81.79725647 123.07498932]
[71.62565613 107.66102600]
[72.65708160 89.22226715]
[84.48429871 75.03887177]
[80.07862091 60.70046234]
[75.67295074 46.36205292]
[58.64407730 38.21820450]
[52.98416519 20.54324913]
[61.80842590 4.57747126]
[56.75001907 -9.54387760]
[51.69160843 -23.66522789]
[46.63320160 -37.78657532]
[41.57479477 -51.90792465]
[36.51638794 -66.02927399]
[25.16481590 -72.27332306]
[21.27056313 -84.20756531]
[26.41513062 -95.21636200]
[21.68184471 -109.44998169]
[16.78567696 -123.62840271]
[11.72726917 -137.74975586]
[6.50728655 -151.81217957]
[1.12641585 -165.81382751]
[-4.25445509 -179.81547546]
[-9.63532639 -193.81712341]
[-15.01619720 -207.81878662]
[-20.39706802 -221.82043457]
[-27.97571945 -208.87577820]
[-42.43288040 -204.87696838]
[-55.58631516 -212.08717346]
[-59.99165344 -226.42568970]
[-53.15563202 -239.77742004]
[-38.94719315 -244.58576965]
[-25.40843010 -238.13008118]
[-28.81806374 -252.73742676]
[-32.22769547 -267.34475708]
[-35.63732910 -281.95208740]
[-49.19097137 -290.08071899]
[-52.94594574 -305.43243408]
[-44.67449188 -318.89938354]
[-29.28391457 -322.49185181]
[-15.90517426 -314.07846069]
[-12.47563839 -298.65078735]
[-21.02998924 -285.36172485]
[-17.62035751 -270.75439453]
[-14.21072292 -256.14706421]
[-10.80109024 -241.53971863]
[-6.39541674 -227.20129395]
[-1.01454604 -213.19964600]
[4.36632490 -199.19799805]
[9.74719620 -185.19635010]
[15.12806702 -171.19470215]
[20.50893784 -157.19303894]
[25.89195442 -152.03253174]
[25.84861946 -142.80816650]
[30.90702629 -128.68681335]
[36.17029953 -123.40422058]
[35.91546631 -114.18326569]
[40.64875412 -99.94964600]
[54.37582779 -89.07682037]
[50.63773727 -71.08768463]
[55.69614410 -56.96633530]
[60.75455093 -42.84498596]
[65.81295776 -28.72363472]
[70.87136841 -14.60228634]
[75.92977142 -0.48093644]
[87.15312195 2.07804751]
[95.80989838 9.84717369]
[99.64204407 20.95707703]
[97.57400513 32.64825821]
[90.01136017 41.95637894]
[94.41703033 56.29478836]
[98.82270813 70.63320160]
[109.93511963 72.33977509]
[119.59373474 78.09383392]
[126.38523102 87.05339050]
[129.31579590 97.90741730]
[127.95661926 109.06764984]
[122.50658417 118.90102386]
[113.76318359 125.96862793]
[117.17281342 140.57597351]
[120.58245087 155.18330383]
[123.99208069 169.79064941]
[127.40171814 184.39799500]
[130.81135559 199.00532532]
[134.22097778 213.61267090]
[139.26062012 221.33879089]
[137.53724670 228.59397888]
[140.61105347 243.27566528]
[143.68486023 257.95733643]
[147.42852783 272.48266602]
[151.83419800 286.82107544]
[162.88755798 293.57897949]
[166.23057556 305.67922974]
[160.58670044 316.44058228]
[164.66244507 330.87622070]
[168.73818970 345.31188965]
[172.81393433 359.74755859]
[176.88967896 374.18322754]
[196.67146301 383.18075562]
[203.48631287 403.52346802]
[193.38197327 422.13305664]
[199.08247375 436.00762939]
[212.38768005 445.59426880]
[210.46902466 461.88079834]
[195.30026245 468.11303711]
[182.48570251 457.87979126]
[185.20788574 441.70812988]
[179.50737000 427.83355713]
[170.66891479 427.37200928]
[162.43775940 424.00213623]
[155.74768066 418.07501221]
[151.36785889 410.23345947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 122]
[4 121]
[5 120]
[6 119]
[7 118]
[9 115]
[10 114]
[15 113]
[16 112]
[17 111]
[18 109]
[19 108]
[20 107]
[21 106]
[22 105]
[23 104]
[24 103]
[28 96]
[29 95]
[30 94]
[33 89]
[34 88]
[35 87]
[36 86]
[37 85]
[38 84]
[41 82]
[42 81]
[43 79]
[44 78]
[45 76]
[46 75]
[47 74]
[48 73]
[49 72]
[50 71]
[57 70]
[58 69]
[59 68]
[60 67]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
