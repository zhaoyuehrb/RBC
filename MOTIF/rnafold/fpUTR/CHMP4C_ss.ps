%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAUGCCCUGGAGUGUGUGUCACCUGUCCAGGACGACUUGUUGAUUCCCAGGAGGGCCGCCUUUCCGGUCUGGGUCCCCGAGAGGACUGCCUUGCUCACCUGUCCCCUCGGCGCGGCCCCGGGGAGCUCCCGAGAGGCCCCCGGGAUCGCUGGCCCUCCGAACUCCACAGCA\
) } def
/len { sequence length } bind def

/coor [
[-91.83152008 316.59628296]
[-92.26811981 329.35122681]
[-96.27725220 341.44866943]
[-103.52407074 351.91036987]
[-113.41237640 359.89346313]
[-125.13360596 364.75811768]
[-137.73301697 366.11904907]
[-150.18737793 363.87591553]
[-161.48814392 358.22067261]
[-171.95097351 368.96911621]
[-182.41381836 379.71755981]
[-192.87664795 390.46600342]
[-203.33949280 401.21444702]
[-213.80232239 411.96289062]
[-223.97196960 422.98913574]
[-233.84106445 434.28521729]
[-243.71014404 445.58126831]
[-244.06990051 461.62030029]
[-256.92077637 471.22415161]
[-272.40469360 467.02560425]
[-278.64370728 452.24542236]
[-270.85177612 438.22167969]
[-255.00621033 435.71218872]
[-245.13713074 424.41613770]
[-235.26805115 413.12005615]
[-235.15245056 409.56439209]
[-233.28796387 405.89135742]
[-229.64001465 402.93191528]
[-224.55076599 401.50003052]
[-214.08793640 390.75158691]
[-203.62509155 380.00314331]
[-193.16226196 369.25469971]
[-182.69941711 358.50625610]
[-172.23658752 347.75781250]
[-179.57725525 332.06500244]
[-180.35197449 314.72229004]
[-174.41581726 298.37139893]
[-162.64808655 285.51318359]
[-146.82223511 278.12527466]
[-129.33859253 277.35784912]
[-112.86028290 283.35476685]
[-102.99119568 272.05868530]
[-93.12211609 260.76263428]
[-83.25303650 249.46655273]
[-73.38395691 238.17048645]
[-81.15119934 224.49290466]
[-83.77573395 208.95707703]
[-80.92283630 193.43429565]
[-72.91866302 179.80067444]
[-60.71308899 169.71035767]
[-45.76699448 164.39485168]
[-29.87745094 164.51272583]
[-14.96162701 170.06809998]
[-5.29691172 158.59669495]
[4.36780310 147.12527466]
[14.03251839 135.65386963]
[23.69723320 124.18245697]
[33.36194992 112.71104431]
[43.02666473 101.23963165]
[52.69137955 89.76821899]
[52.96064377 74.77063751]
[43.71393585 62.95969009]
[34.46723175 51.14874649]
[25.22052383 39.33779907]
[9.86975574 40.87319565]
[-3.86383557 33.84524918]
[-11.59790897 20.49655342]
[-10.86455154 5.08663082]
[-1.89777362 -7.46727037]
[12.44115829 -13.15924549]
[27.57674217 -10.17300606]
[38.67927170 0.53854972]
[42.20596313 15.55740356]
[37.03147125 30.09109306]
[46.27817535 41.90203857]
[55.52488327 53.71298599]
[64.77159119 65.52392578]
[72.16278076 64.25104523]
[86.94517517 61.70527267]
[94.33636475 60.43238831]
[99.09948730 46.20871735]
[103.86260223 31.98505211]
[108.62571716 17.76138306]
[113.38883209 3.53771615]
[110.43410492 -12.00513268]
[121.81238556 -21.61678696]
[126.57550049 -35.84045410]
[131.33862305 -50.06412125]
[136.10173035 -64.28778839]
[124.60900116 -74.23693085]
[117.80293274 -87.82905579]
[116.72141266 -102.99147034]
[121.52937317 -117.41201019]
[131.49362183 -128.89164734]
[145.09469604 -135.67982483]
[160.25851440 -136.74139404]
[174.67271423 -131.91447449]
[186.13923645 -121.93513489]
[192.90951538 -108.32514954]
[193.95114136 -93.15994263]
[189.10527039 -78.75210571]
[179.11083984 -67.29872131]
[165.49197388 -60.54634476]
[150.32540894 -59.52467346]
[145.56228638 -45.30100632]
[140.79916382 -31.07733917]
[136.03605652 -16.85367012]
[139.33148193 -2.32819438]
[127.61250305 8.30083275]
[122.84938812 22.52449989]
[118.08626556 36.74816895]
[113.32315063 50.97183609]
[108.56003571 65.19550323]
[120.35597229 79.22186279]
[121.57344055 94.22204590]
[136.52452087 95.43248749]
[151.47560120 96.64292908]
[166.42668152 97.85336304]
[180.80621338 91.25491333]
[192.86761475 99.99402618]
[207.81869507 101.20446014]
[222.76977539 102.41490173]
[237.72085571 103.62534332]
[252.67193604 104.83578491]
[267.62301636 106.04621887]
[282.57409668 107.25666046]
[294.55007935 97.29603577]
[309.69534302 98.73657990]
[319.11746216 110.21520996]
[334.06854248 111.42565155]
[349.01962280 112.63609314]
[363.59716797 105.12423706]
[377.24316406 114.21920776]
[375.91983032 130.56486511]
[360.98846436 137.34622192]
[347.80920410 127.58717346]
[332.85812378 126.37673187]
[317.90704346 125.16629028]
[306.76110840 134.97973633]
[291.58132935 133.96516418]
[281.36364746 122.20774078]
[266.41256714 120.99729919]
[251.46150208 119.78686523]
[236.51042175 118.57642365]
[221.55934143 117.36598206]
[206.60826111 116.15554047]
[191.65718079 114.94510651]
[178.34704590 121.63013458]
[165.21624756 112.80444336]
[150.26516724 111.59400940]
[135.31407166 110.38356781]
[120.36299896 109.17312622]
[93.66532135 128.38958740]
[64.16278839 99.43292999]
[54.49807358 110.90434265]
[44.83335876 122.37575531]
[35.16864395 133.84716797]
[25.50392914 145.31857300]
[15.83921528 156.78999329]
[6.17449999 168.26139832]
[-3.49021482 179.73281860]
[3.94084883 192.00338745]
[7.20935678 205.94931030]
[6.00798130 220.20111084]
[0.46766466 233.36349487]
[-8.85650635 244.15193176]
[-21.04088974 251.51805115]
[-34.88476562 254.75144958]
[-49.02867126 253.54824829]
[-62.08788300 248.03956604]
[-71.95696259 259.33563232]
[-81.82604980 270.63171387]
[-91.69512939 281.92776489]
[-101.56420898 293.22384644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 34]
[10 33]
[11 32]
[12 31]
[13 30]
[14 29]
[15 25]
[16 24]
[17 23]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[53 161]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 77]
[62 76]
[63 75]
[64 74]
[80 113]
[81 112]
[82 111]
[83 110]
[84 109]
[86 107]
[87 106]
[88 105]
[89 104]
[115 152]
[116 151]
[117 150]
[118 149]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[129 138]
[130 137]
[131 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
