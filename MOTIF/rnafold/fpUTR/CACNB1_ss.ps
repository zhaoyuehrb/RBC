%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGCUGAGCCUACGGGGGAGGCGGCGGCGGCAGUGGAGAGAGCGGGAGGAGCGAGGGAAGGCAGGAAGGAGGCAGCCGAAGGCCGAGCUGGGUGGCUGGACCGGGUGCUGGCUGCGCCGCGCUGCUUUCGGCUCCCACGGCCUCUCCCAUGCGCUGAGGGAGCCCGGCUGGGCCGGGCCGGCGGCGGGAGGGGAGGCUCCUCUCC\
) } def
/len { sequence length } bind def

/coor [
[64.97846985 151.86596680]
[63.06690979 166.74366760]
[48.18924332 164.83186340]
[50.10073853 149.95466614]
[52.01205063 135.07693481]
[44.57318497 134.12127686]
[36.65415955 146.86054993]
[28.73513794 159.59982300]
[20.81611443 172.33909607]
[20.64444542 190.75173950]
[4.85923529 198.41795349]
[-2.86740971 211.27482605]
[-10.59405422 224.13168335]
[-18.32069969 236.98855591]
[-13.06009674 251.71472168]
[-18.54448318 266.35900879]
[-32.18429947 274.00686646]
[-47.53923798 271.04714966]
[-57.35917282 258.87741089]
[-57.00742340 243.24377441]
[-46.65008163 231.52799988]
[-31.17756271 229.26190186]
[-23.45091820 216.40504456]
[-15.72427368 203.54817200]
[-7.99762917 190.69131470]
[-10.61777592 178.88093567]
[-4.28449488 168.10604858]
[8.07684231 164.42007446]
[15.99586582 151.68080139]
[23.91488838 138.94152832]
[31.83391190 126.20225525]
[60.15505600 91.30616760]
[94.03216553 93.89662933]
[89.37546539 79.63776398]
[84.71877289 65.37889862]
[70.90627289 58.17802429]
[66.38684845 43.65116882]
[73.33690643 30.52743912]
[68.68021393 16.26857567]
[64.02351379 2.00971103]
[59.36682510 -12.24915314]
[54.71012878 -26.50801659]
[50.05343628 -40.76688004]
[44.41365433 -47.95435715]
[45.43565750 -55.27519226]
[40.99381256 -69.60243988]
[26.10014915 -73.08467865]
[15.02232170 -83.48557281]
[10.66687679 -97.93882751]
[14.10764885 -112.53392792]
[24.32310104 -123.37413788]
[19.88125992 -137.70138550]
[15.43941593 -152.02862549]
[10.99757385 -166.35588074]
[6.55573082 -180.68312073]
[-2.30012417 -183.92860413]
[-8.57601357 -190.78398132]
[-10.95710373 -199.62564087]
[-9.03127670 -208.43670654]
[-3.35429049 -215.26699829]
[-7.14575481 -229.77992249]
[-10.93721867 -244.29283142]
[-14.72868252 -258.80575562]
[-18.52014732 -273.31866455]
[-22.31161118 -287.83160400]
[-26.10307503 -302.34451294]
[-29.89453888 -316.85742188]
[-44.19284821 -322.59017944]
[-52.27935410 -335.49218750]
[-51.23051453 -350.50433350]
[-41.65763092 -361.88403320]
[-45.44909286 -376.39694214]
[-56.16452408 -383.57809448]
[-59.02306366 -395.74514771]
[-53.02310944 -406.24993896]
[-56.59600067 -420.81820679]
[-60.16889191 -435.38647461]
[-63.74178696 -449.95474243]
[-67.31468201 -464.52301025]
[-70.88757324 -479.09127808]
[-74.46046448 -493.65954590]
[-89.11796570 -498.03045654]
[-99.55078888 -509.07821655]
[-103.02986908 -523.76708984]
[-98.71829224 -538.12902832]
[-87.86991119 -548.33581543]
[-91.44280243 -562.90411377]
[-95.01569366 -577.47235107]
[-108.24851227 -585.69006348]
[-111.66440582 -600.51525879]
[-103.74854279 -613.08007812]
[-107.32144165 -627.64831543]
[-110.89433289 -642.21661377]
[-114.46722412 -656.78485107]
[-126.19812012 -668.24426270]
[-121.87780762 -684.06408691]
[-105.95066833 -687.97027588]
[-94.80116272 -675.94445801]
[-99.89895630 -660.35778809]
[-96.32606506 -645.78948975]
[-92.75317383 -631.22125244]
[-89.18027496 -616.65295410]
[-76.34922791 -609.17633057]
[-72.51827240 -594.45294189]
[-80.44742584 -581.04522705]
[-76.87453461 -566.47698975]
[-73.30164337 -551.90869141]
[-58.96183395 -547.87939453]
[-48.49458694 -537.14196777]
[-44.78273392 -522.51019287]
[-48.92021179 -507.88903809]
[-59.89219666 -497.23245239]
[-56.31930161 -482.66418457]
[-52.74641037 -468.09591675]
[-49.17351913 -453.52764893]
[-45.60062408 -438.95938110]
[-42.02773285 -424.39111328]
[-38.45484161 -409.82284546]
[-25.64773941 -397.82608032]
[-30.93617630 -380.18841553]
[-27.14471054 -365.67550659]
[-13.22908020 -360.43209839]
[-4.97163582 -347.85122681]
[-5.71430969 -332.64260864]
[-15.38162136 -320.64889526]
[-11.59015656 -306.13598633]
[-7.79869270 -291.62304688]
[-4.00722885 -277.11013794]
[-0.21576451 -262.59722900]
[3.57569957 -248.08430481]
[7.36716366 -233.57138062]
[11.15862751 -219.05847168]
[26.88609505 -205.69515991]
[20.88297844 -185.12496948]
[25.32482147 -170.79772949]
[29.76666451 -156.47047424]
[34.20850754 -142.14323425]
[38.65034866 -127.81597900]
[53.20636749 -124.65560913]
[64.29991150 -114.56655121]
[68.88427734 -100.18426514]
[65.63286591 -85.34091949]
[55.32106018 -74.04428101]
[59.76290512 -59.71703339]
[64.31230164 -45.42357635]
[68.96899414 -31.16471100]
[73.62568665 -16.90584564]
[78.28237915 -2.64698243]
[82.93907166 11.61188126]
[87.59576416 25.87074661]
[100.95199585 32.36280441]
[105.87766266 46.75698471]
[98.97763824 60.72220230]
[103.63433075 74.98107147]
[108.29102325 89.23992920]
[118.11393738 100.57617950]
[131.56495667 107.21472168]
[145.01596069 113.85326385]
[158.46697998 120.49180603]
[173.27203369 115.64946747]
[186.81869507 122.57350922]
[191.34388733 136.71769714]
[204.79490662 143.35624695]
[211.40870667 143.30758667]
[216.31668091 146.17655945]
[218.54592896 150.40184021]
[231.79132080 157.44171143]
[245.03671265 164.48156738]
[258.28210449 171.52142334]
[271.52749634 178.56129456]
[284.77288818 185.60115051]
[301.59692383 187.69577026]
[304.24154663 204.44218445]
[288.88168335 211.61930847]
[277.73300171 198.84654236]
[264.48764038 191.80668640]
[251.24223328 184.76681519]
[237.99684143 177.72695923]
[224.75144958 170.68710327]
[211.50607300 163.64723206]
[198.15635681 156.80726624]
[184.70533752 150.16871643]
[170.72610474 155.18032837]
[156.99029541 148.63951111]
[151.82843018 133.94281006]
[138.37742615 127.30427551]
[124.92640686 120.66573334]
[111.47539520 114.02719116]
[105.77052307 118.89590454]
[88.65589142 133.50205994]
[93.09774017 147.82929993]
[97.53958130 162.15655518]
[101.98142242 176.48379517]
[106.42326355 190.81105042]
[110.86511230 205.13829041]
[115.30695343 219.46554565]
[119.74879456 233.79278564]
[130.21427917 247.13107300]
[120.29439545 260.87997437]
[104.33671570 255.15383911]
[105.42154694 238.23463440]
[100.97970581 223.90737915]
[96.53785706 209.58013916]
[92.09601593 195.25288391]
[87.65417480 180.92564392]
[83.21233368 166.59838867]
[78.77049255 152.27114868]
[74.32864380 137.94389343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 31]
[7 30]
[8 29]
[9 28]
[11 25]
[12 24]
[13 23]
[14 22]
[33 155]
[34 154]
[35 153]
[38 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[45 144]
[46 143]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[71 121]
[72 120]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
[86 107]
[87 106]
[88 105]
[91 102]
[92 101]
[93 100]
[94 99]
[156 188]
[157 187]
[158 186]
[159 185]
[162 182]
[163 181]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
[190 208]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
