%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCGGAUUGUGCACAGUUCUUGAAGGUGGGAACAGAAGAGAAGGCCCGGGGGGGCCGGGGAGGGGGUACCCAGGCUCUGCACAGUACCCAAGGGGCUUCUGGCAGCAGGAAGGAAGCUACACAUCAGAGUUGGGGACUUGUGCCCUGGGGCUGCCUGGCAUCUGGGGGCCUCCUCAGAGCCAGGGCUCUUUCUGGUUGAGGCUGAGACUCACUGGUGUCAUCAGGCCCCUCC\
) } def
/len { sequence length } bind def

/coor [
[272.68588257 50.12658310]
[265.05404663 52.79320908]
[256.94247437 53.11613846]
[249.05761719 51.04755783]
[242.09193420 46.74879456]
[236.66302490 40.57789612]
[222.27836609 44.83011246]
[207.92243958 49.17838669]
[193.59590149 53.62252045]
[179.26936340 58.06665421]
[164.94282532 62.51078796]
[150.61628723 66.95492554]
[136.28974915 71.39905548]
[121.96321869 75.84319305]
[107.63668060 80.28732300]
[127.99978638 89.18636322]
[134.77713013 117.40759277]
[112.92781067 145.98297119]
[103.16704559 157.37275696]
[93.40627289 168.76255798]
[83.64550781 180.15235901]
[73.88474274 191.54214478]
[64.12397766 202.93194580]
[65.58737183 218.66833496]
[55.43069458 230.77690125]
[39.67971039 232.07383728]
[27.67920303 221.78970337]
[26.54886055 206.02589417]
[36.95929337 194.13478088]
[52.73418045 193.17117310]
[62.49494553 181.78137207]
[72.25571442 170.39158630]
[82.01647949 159.00178528]
[91.77725220 147.61199951]
[101.53801727 136.22219849]
[97.75910950 129.74378967]
[84.80227661 137.30160522]
[71.84545135 144.85940552]
[61.85824585 156.05117798]
[48.12802887 150.01121521]
[49.62953949 135.08654785]
[64.28763580 131.90257263]
[77.24446869 124.34476471]
[90.20129395 116.78695679]
[86.42239380 110.30854034]
[71.70332336 113.19800568]
[56.98425674 116.08747864]
[42.26518631 118.97694397]
[27.54611969 121.86641693]
[15.55199146 133.05001831]
[-0.04909787 127.99649811]
[-3.20808673 111.90448761]
[9.32472229 101.32806396]
[24.65664864 107.14734650]
[39.37571716 104.25788116]
[54.09478760 101.36840820]
[68.81385040 98.47894287]
[83.53292084 95.58946991]
[84.13434601 80.60153198]
[69.69411469 76.54199219]
[55.25389099 72.48244476]
[40.14822388 81.32074738]
[23.65125656 76.58480835]
[15.84789467 61.67851257]
[1.35469151 57.81237030]
[-13.13851166 53.94622803]
[-28.82488632 58.72845459]
[-40.62327957 47.33855057]
[-36.39651871 31.49347115]
[-20.49273109 27.49327660]
[-9.27237034 39.45302582]
[5.22083330 43.31916428]
[19.71403694 47.18530655]
[29.84396362 39.23763275]
[42.89648819 38.56032562]
[54.12393188 45.62385941]
[59.31343460 58.04222107]
[73.75366211 62.10176468]
[88.19388580 66.16130829]
[103.19254303 65.96078491]
[117.51908112 61.51665115]
[131.84562683 57.07251740]
[146.17216492 52.62838364]
[160.49868774 48.18424988]
[174.82522583 43.74011612]
[189.15176392 39.29598236]
[203.47830200 34.85184860]
[210.73291016 29.32931519]
[218.02613831 30.44544792]
[232.41081238 26.19322968]
[241.50997925 5.61979818]
[262.60858154 -1.34364188]
[281.68341064 9.49735737]
[295.68112183 4.10624075]
[309.67883301 -1.28487587]
[323.67654419 -6.67599249]
[337.67425537 -12.06710911]
[351.67193604 -17.45822525]
[365.66964722 -22.84934235]
[379.66735840 -28.24045944]
[390.91464233 -42.83027649]
[408.13430786 -39.41020203]
[422.05871582 -44.98796082]
[435.98309326 -50.56571960]
[449.90747070 -56.14347458]
[463.83187866 -61.72123337]
[473.76535034 -74.03530884]
[488.45709229 -71.58547974]
[502.38150024 -77.16323090]
[516.30590820 -82.74098969]
[522.58953857 -96.99417877]
[536.79028320 -102.45246124]
[550.33984375 -96.37412262]
[564.26422119 -101.95188141]
[571.06329346 -119.64862823]
[588.34838867 -126.62001038]
[604.94299316 -118.86286926]
[618.71325684 -124.81088257]
[632.48358154 -130.75889587]
[646.25384521 -136.70690918]
[655.85461426 -149.28215027]
[670.60656738 -147.22595215]
[684.37689209 -153.17396545]
[691.00054932 -159.43933105]
[698.37127686 -159.10809326]
[712.21984863 -164.87149048]
[726.06842041 -170.63490295]
[739.91699219 -176.39830017]
[753.76556396 -182.16169739]
[767.61413574 -187.92509460]
[781.46270752 -193.68850708]
[772.61401367 -202.48133850]
[768.42803955 -216.26986694]
[770.91882324 -232.83480835]
[779.57263184 -245.08685303]
[788.22637939 -257.33889771]
[783.10717773 -271.98721313]
[787.60791016 -286.83721924]
[799.99804688 -296.17877197]
[815.51324463 -296.41986084]
[828.18762207 -287.46780396]
[833.14764404 -272.76480103]
[828.48602295 -257.96450806]
[815.99530029 -248.75788879]
[800.47839355 -248.68511963]
[791.82464600 -236.43309021]
[783.17089844 -224.18104553]
[791.15777588 -211.48344421]
[799.14398193 -198.78694153]
[813.93499756 -201.28189087]
[828.72607422 -203.77682495]
[843.51715088 -206.27177429]
[858.30816650 -208.76670837]
[863.61749268 -212.66151428]
[869.25213623 -213.21932983]
[873.52758789 -211.12510681]
[888.38006592 -213.22373962]
[903.23248291 -215.32237244]
[918.08496094 -217.42098999]
[932.93743896 -219.51962280]
[947.78991699 -221.61825562]
[955.83349609 -225.91107178]
[962.85479736 -223.64428711]
[977.73400879 -225.54417419]
[992.61322021 -227.44406128]
[1007.49237061 -229.34394836]
[1022.37158203 -231.24385071]
[1037.25073242 -233.14373779]
[1052.13000488 -235.04362488]
[1064.84423828 -245.40113831]
[1080.07299805 -239.31686401]
[1082.15014648 -223.04978943]
[1068.93884277 -213.33409119]
[1054.02990723 -220.16442871]
[1039.15063477 -218.26454163]
[1024.27148438 -216.36465454]
[1009.39227295 -214.46476746]
[994.51306152 -212.56486511]
[979.63391113 -210.66497803]
[964.75469971 -208.76509094]
[949.88854980 -206.76577759]
[935.03607178 -204.66716003]
[920.18359375 -202.56852722]
[905.33111572 -200.46989441]
[890.47869873 -198.37127686]
[875.62622070 -196.27264404]
[860.80310059 -193.97564697]
[846.01208496 -191.48071289]
[831.22100830 -188.98577881]
[816.42993164 -186.49082947]
[801.63891602 -183.99589539]
[787.22613525 -179.83992004]
[773.37756348 -174.07652283]
[759.52899170 -168.31311035]
[745.68041992 -162.54971313]
[731.83178711 -156.78631592]
[717.98321533 -151.02291870]
[704.13464355 -145.25950623]
[690.32489014 -139.40367126]
[676.55462646 -133.45565796]
[667.93884277 -121.30586243]
[652.20190430 -122.93661499]
[638.43157959 -116.98860168]
[624.66125488 -111.04058075]
[610.89099121 -105.09256744]
[609.08819580 -93.84649658]
[602.01306152 -84.76851654]
[591.32781982 -80.17907715]
[579.63458252 -81.32146454]
[569.84197998 -88.02748871]
[555.91760254 -82.44972992]
[550.31146240 -68.69812012]
[536.26959229 -62.84312439]
[521.88366699 -68.81660461]
[507.95925903 -63.23884201]
[494.03485107 -57.66108704]
[485.09735107 -45.74596405]
[469.40963745 -47.79684448]
[455.48522949 -42.21908569]
[441.56085205 -36.64132690]
[427.63647461 -31.06357193]
[413.71206665 -25.48581314]
[408.67282104 -14.50033283]
[397.13146973 -9.73433685]
[385.05847168 -14.24274921]
[371.06079102 -8.85163307]
[357.06307983 -3.46051645]
[343.06536865 1.93060017]
[329.06765747 7.32171679]
[315.06994629 12.71283340]
[301.07223511 18.10395050]
[287.07452393 23.49506569]
[286.68344116 31.43498802]
[283.97921753 38.94625854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 90]
[7 89]
[8 87]
[9 86]
[10 85]
[11 84]
[12 83]
[13 82]
[14 81]
[15 80]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[59 79]
[60 78]
[61 77]
[64 73]
[65 72]
[66 71]
[93 232]
[94 231]
[95 230]
[96 229]
[97 228]
[98 227]
[99 226]
[100 225]
[102 222]
[103 221]
[104 220]
[105 219]
[106 218]
[108 216]
[109 215]
[110 214]
[113 211]
[114 210]
[117 205]
[118 204]
[119 203]
[120 202]
[122 200]
[123 199]
[125 198]
[126 197]
[127 196]
[128 195]
[129 194]
[130 193]
[131 192]
[134 147]
[135 146]
[136 145]
[149 191]
[150 190]
[151 189]
[152 188]
[153 187]
[156 186]
[157 185]
[158 184]
[159 183]
[160 182]
[161 181]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
