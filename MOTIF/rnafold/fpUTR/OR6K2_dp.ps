%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR6K2)
} def

/sequence { (\
GCUUGAGUGCACUGGAAAUUGAAACUCUCACUUUCAACUUGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.047704007 ubox
1 10 0.835485390 ubox
2 7 0.049353324 ubox
2 9 0.836032933 ubox
2 15 0.018968026 ubox
2 42 0.119396864 ubox
2 44 0.191713660 ubox
3 14 0.018681852 ubox
3 15 0.004067200 ubox
3 16 0.075133599 ubox
3 17 0.005967986 ubox
3 22 0.004244893 ubox
3 23 0.017734345 ubox
3 37 0.052906673 ubox
3 41 0.092563960 ubox
3 42 0.221689795 ubox
3 43 0.191172145 ubox
3 44 0.009596475 ubox
4 11 0.039857080 ubox
4 14 0.006033533 ubox
4 15 0.080385673 ubox
4 16 0.005441153 ubox
4 17 0.003316340 ubox
4 21 0.004428404 ubox
4 22 0.019500014 ubox
4 30 0.077490312 ubox
4 36 0.062301228 ubox
4 41 0.281928780 ubox
4 42 0.167304661 ubox
4 43 0.012790671 ubox
5 10 0.044649428 ubox
5 13 0.004352252 ubox
5 20 0.004409986 ubox
5 27 0.259350208 ubox
5 29 0.086951601 ubox
5 33 0.094256562 ubox
5 34 0.005788195 ubox
5 35 0.062546880 ubox
5 40 0.343871572 ubox
6 13 0.091879853 ubox
6 19 0.004386898 ubox
6 20 0.020477756 ubox
6 26 0.259991010 ubox
6 28 0.086625942 ubox
6 32 0.110474986 ubox
6 33 0.008189713 ubox
6 34 0.051933131 ubox
6 39 0.366767948 ubox
6 40 0.098439376 ubox
7 12 0.091980583 ubox
7 19 0.020895620 ubox
7 25 0.260245074 ubox
7 27 0.086019813 ubox
7 31 0.119970073 ubox
7 33 0.030801237 ubox
7 38 0.373605619 ubox
7 39 0.065802140 ubox
8 14 0.003748953 ubox
8 18 0.020983882 ubox
8 24 0.259131741 ubox
8 30 0.120247363 ubox
8 36 0.029347167 ubox
8 37 0.365943262 ubox
8 41 0.008864412 ubox
9 13 0.004665038 ubox
9 29 0.119986114 ubox
9 35 0.036568614 ubox
9 40 0.009586449 ubox
10 21 0.214731777 ubox
10 41 0.113535903 ubox
11 20 0.209818672 ubox
11 40 0.115701271 ubox
12 42 0.205499742 ubox
12 44 0.209110757 ubox
13 21 0.018097762 ubox
13 30 0.049785304 ubox
13 36 0.462760215 ubox
13 41 0.201542189 ubox
13 43 0.208563139 ubox
14 20 0.022121321 ubox
14 26 0.031882901 ubox
14 27 0.017301791 ubox
14 28 0.114914908 ubox
14 29 0.052578816 ubox
14 32 0.048754811 ubox
14 33 0.005457886 ubox
14 34 0.017574388 ubox
14 35 0.467764406 ubox
14 39 0.064478468 ubox
14 40 0.176606989 ubox
15 19 0.016254653 ubox
15 25 0.033193136 ubox
15 26 0.014516867 ubox
15 27 0.124883296 ubox
15 28 0.025277181 ubox
15 29 0.036777957 ubox
15 31 0.049519940 ubox
15 32 0.004673297 ubox
15 33 0.022067940 ubox
15 34 0.451472294 ubox
15 35 0.685734454 ubox
15 38 0.072059104 ubox
15 39 0.148820896 ubox
15 40 0.051489929 ubox
16 26 0.120566342 ubox
16 28 0.035749358 ubox
16 32 0.023802062 ubox
16 33 0.441553041 ubox
16 34 0.697116184 ubox
16 39 0.052480510 ubox
16 40 0.200474103 ubox
17 32 0.406498631 ubox
17 33 0.699958708 ubox
17 34 0.012410682 ubox
17 39 0.205782362 ubox
17 40 0.097290298 ubox
18 32 0.671699945 ubox
18 33 0.015461768 ubox
18 39 0.099553069 ubox
19 37 0.381077689 ubox
19 43 0.004903234 ubox
20 30 0.812507996 ubox
20 36 0.417854311 ubox
20 42 0.005027116 ubox
21 27 0.104633984 ubox
21 29 0.825969049 ubox
21 34 0.008381280 ubox
21 35 0.422282587 ubox
22 26 0.091218838 ubox
22 28 0.801024460 ubox
22 32 0.003299730 ubox
22 33 0.018690270 ubox
22 34 0.421198921 ubox
22 40 0.004799093 ubox
23 32 0.024500283 ubox
23 33 0.414733774 ubox
23 34 0.013202754 ubox
23 39 0.004479044 ubox
24 32 0.379500601 ubox
24 33 0.017990917 ubox
25 42 0.003469496 ubox
25 44 0.113934230 ubox
26 42 0.006214375 ubox
26 43 0.115776174 ubox
27 41 0.008304410 ubox
27 42 0.115631212 ubox
27 44 0.032425252 ubox
28 41 0.076374332 ubox
28 42 0.032118830 ubox
28 43 0.039794446 ubox
29 41 0.091182550 ubox
29 42 0.039933317 ubox
30 40 0.084304706 ubox
31 42 0.055276898 ubox
31 44 0.112894079 ubox
32 41 0.055627018 ubox
32 42 0.006669570 ubox
32 43 0.108673259 ubox
32 44 0.110648675 ubox
33 41 0.008768413 ubox
33 42 0.101993248 ubox
33 43 0.184779538 ubox
33 44 0.061126261 ubox
34 41 0.077592135 ubox
34 42 0.196165644 ubox
34 43 0.100358966 ubox
35 41 0.203306869 ubox
35 42 0.103523537 ubox
36 40 0.165137713 ubox
38 44 0.060538551 ubox
39 43 0.055434992 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
showpage
end
%%EOF
