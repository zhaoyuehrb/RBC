%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCCCCCGCCACUCCUUUAGACUCUGGACGUGCGGGGACUGGUGGCGCUCGGCCUCGCGUUAUAAAAAGCGGUGGGGCAGGGCCGGCGAGACAAUCUGGGAGGCGGGUACCGGGCCUCACGGAUCCGCGCCGCGCCCCCCACCUGUGGCUGCGCGCGGGGUGGGCUGCGCUCCCCUGGGCGGCGCCGGGCGCCCGGGGCUGGUGGCGAG\
) } def
/len { sequence length } bind def

/coor [
[-43.86616516 367.49487305]
[-51.32035065 377.31649780]
[-61.40799713 384.36395264]
[-73.14780426 387.96994019]
[-85.40333557 387.80111694]
[-96.99304199 383.88870239]
[-106.27072144 395.67535400]
[-115.54840088 407.46197510]
[-124.82608032 419.24859619]
[-134.10375977 431.03524780]
[-143.38143921 442.82186890]
[-146.22994995 451.49996948]
[-152.88496399 454.71307373]
[-162.33628845 466.36093140]
[-171.70103455 478.07849121]
[-180.97871399 489.86514282]
[-190.25639343 501.65176392]
[-184.48005676 515.88305664]
[-186.60911560 531.09362793]
[-196.07090759 543.19201660]
[-210.32022095 548.92370605]
[-225.52407837 546.74700928]
[-237.59272766 537.24731445]
[-243.27973938 522.98010254]
[-241.05535889 507.78314209]
[-231.51791382 495.74435425]
[-217.23294067 490.10208130]
[-202.04302979 492.37408447]
[-192.76535034 480.58746338]
[-183.48767090 468.80081177]
[-181.82075500 461.60119629]
[-173.98414612 456.90960693]
[-164.53282166 445.26174927]
[-155.16807556 433.54418945]
[-145.89039612 421.75756836]
[-136.61271667 409.97091675]
[-127.33502960 398.18429565]
[-118.05735779 386.39767456]
[-108.77967834 374.61102295]
[-117.14334869 359.01629639]
[-117.84268188 341.28112793]
[-110.69035339 324.97915649]
[-97.08582306 313.41555786]
[-79.74176788 308.95697021]
[-62.14327240 312.54711914]
[-53.39857864 300.35980225]
[-52.26529694 285.50839233]
[-37.93362427 278.80661011]
[-29.18893051 266.61932373]
[-20.44423866 254.43200684]
[-19.09893990 247.16542053]
[-11.47856712 242.13020325]
[-2.55424023 230.07380676]
[6.37008667 218.01742554]
[15.29441357 205.96104431]
[24.21874046 193.90466309]
[33.14306641 181.84828186]
[42.06739426 169.79190063]
[50.81208801 157.60459900]
[59.37522507 145.28904724]
[67.93836212 132.97349548]
[76.50149536 120.65795135]
[85.06463623 108.34240723]
[72.15485382 115.98030853]
[57.15575027 115.81625366]
[44.41611862 107.89781189]
[37.62964249 94.52082825]
[38.76397324 79.56378174]
[47.49022293 67.36326599]
[61.27833557 61.45666504]
[76.13063049 63.55651474]
[87.74087524 73.05399323]
[92.74268341 87.19299316]
[94.07461548 72.25225067]
[95.40655518 57.31150055]
[96.73849487 42.37075043]
[98.07043457 27.43000412]
[99.40237427 12.48925686]
[100.73431396 -2.45149088]
[98.53520203 -7.18383312]
[98.38567352 -11.82272339]
[99.90703583 -15.60326481]
[102.47195435 -18.02162170]
[104.46656799 -32.88841248]
[106.46118927 -47.75520706]
[108.34559631 -62.63636780]
[110.11969757 -77.53108215]
[111.89379120 -92.42580414]
[113.66789246 -107.32051849]
[115.44198608 -122.21523285]
[105.22992706 -129.42355347]
[99.08700562 -140.22685242]
[98.12550354 -152.54486084]
[102.46669769 -164.03546143]
[111.22942352 -172.53994751]
[122.70820618 -176.48861694]
[124.92290497 -191.32421875]
[127.13760376 -206.15982056]
[129.35229492 -220.99542236]
[131.56700134 -235.83102417]
[125.95204926 -250.62232971]
[135.48368835 -262.06771851]
[137.69837952 -276.90332031]
[139.91308594 -291.73895264]
[142.12777710 -306.57455444]
[144.34248352 -321.41015625]
[132.67036438 -331.49801636]
[128.32701111 -346.30136108]
[132.69834900 -361.09646606]
[144.38949585 -371.16226196]
[159.66987610 -373.28680420]
[173.66355896 -366.79214478]
[181.90521240 -353.75073242]
[181.76495361 -338.32400513]
[173.28753662 -325.43457031]
[159.17808533 -319.19543457]
[156.96337891 -304.35983276]
[154.74868774 -289.52423096]
[152.53398132 -274.68862915]
[150.31929016 -259.85302734]
[156.09265137 -246.12286377]
[146.40260315 -233.61631775]
[144.18791199 -218.78071594]
[141.97320557 -203.94511414]
[139.75851440 -189.10951233]
[137.54380798 -174.27391052]
[150.70375061 -162.49642944]
[154.18955994 -145.02297974]
[146.42024231 -128.81373596]
[130.33670044 -120.44113922]
[128.56260681 -105.54641724]
[126.78850555 -90.65170288]
[125.01441193 -75.75698853]
[123.24031067 -60.86227036]
[125.57044220 -53.84915924]
[121.32798004 -45.76058960]
[119.33336639 -30.89379692]
[117.33874512 -16.02700424]
[115.67505646 -1.11955249]
[114.34311676 13.82119560]
[113.01118469 28.76194191]
[111.67924500 43.70269012]
[110.34730530 58.64343643]
[109.01536560 73.58418274]
[107.68342590 88.52493286]
[111.02681732 90.58119202]
[113.79141235 93.62413788]
[115.68511963 97.48210144]
[130.09446716 101.64988708]
[144.50382996 105.81767273]
[158.91319275 109.98546600]
[172.63500977 102.61326599]
[187.18876648 107.04525757]
[194.13247681 120.17234802]
[208.54183960 124.34014130]
[222.95118713 128.50791931]
[238.35778809 124.90970612]
[248.43408203 135.87864685]
[262.84344482 140.04643250]
[277.25280762 144.21421814]
[291.66213989 148.38200378]
[306.07150269 152.54978943]
[315.18395996 151.92800903]
[320.66265869 156.88757324]
[335.00866699 161.26841736]
[349.35467529 165.64927673]
[363.70068359 170.03012085]
[380.61514282 168.87332153]
[386.40911865 184.80650330]
[372.70254517 194.78479004]
[359.31985474 184.37614441]
[344.97381592 179.99528503]
[330.62780762 175.61444092]
[316.28179932 171.23358154]
[301.90371704 166.95915222]
[287.49435425 162.79136658]
[273.08502197 158.62356567]
[258.67565918 154.45578003]
[244.26629639 150.28799438]
[229.89035034 154.18432617]
[218.78340149 142.91728210]
[204.37403870 138.74949646]
[189.96469116 134.58171082]
[177.08557129 141.97521973]
[162.41307068 137.95375061]
[154.74539185 124.39482117]
[140.33604431 120.22703552]
[125.92668915 116.05924225]
[111.51732635 111.89145660]
[97.38018036 116.90554047]
[88.81704712 129.22108459]
[80.25390625 141.53663635]
[71.69077301 153.85218811]
[63.12763214 166.16772461]
[62.19373322 172.71165466]
[58.63049698 177.13764954]
[54.12377930 178.71621704]
[45.19945145 190.77261353]
[36.27512360 202.82899475]
[27.35079765 214.88537598]
[18.42646980 226.94175720]
[9.50214386 238.99813843]
[0.57781643 251.05451965]
[-8.25693607 263.17669678]
[-17.00162697 275.36401367]
[-25.74632072 287.55130005]
[-27.50508308 303.27444458]
[-41.21127701 309.10452271]
[-49.95596695 321.29180908]
[-42.95987320 331.56332397]
[-39.45886993 343.46228027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[13 33]
[14 32]
[15 30]
[16 29]
[17 28]
[45 209]
[46 208]
[48 206]
[49 205]
[50 204]
[52 203]
[53 202]
[54 201]
[55 200]
[56 199]
[57 198]
[58 197]
[59 194]
[60 193]
[61 192]
[62 191]
[63 190]
[73 145]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
[79 139]
[83 138]
[84 137]
[85 136]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[102 120]
[103 119]
[104 118]
[105 117]
[106 116]
[148 189]
[149 188]
[150 187]
[151 186]
[154 183]
[155 182]
[156 181]
[158 179]
[159 178]
[160 177]
[161 176]
[162 175]
[164 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
