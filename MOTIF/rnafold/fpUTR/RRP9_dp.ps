%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RRP9)
} def

/sequence { (\
AGGCGGCUGGGGAGCUGGGAGGGUUCAGCUGCCACGUGAGUUCUGCGGCCGCUGCUACACGCCUGGUGGGCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 53 0.043378584 ubox
1 56 0.024088781 ubox
2 33 0.022640686 ubox
2 50 0.103892683 ubox
2 52 0.039925752 ubox
2 53 0.568132545 ubox
2 55 0.023100702 ubox
2 56 0.004072060 ubox
3 32 0.022664508 ubox
3 49 0.103992542 ubox
3 52 0.794918501 ubox
3 55 0.003388873 ubox
3 74 0.004122367 ubox
4 31 0.022664093 ubox
4 48 0.103917565 ubox
4 51 0.854824398 ubox
5 30 0.022648284 ubox
5 50 0.994022415 ubox
6 29 0.022665377 ubox
6 41 0.003398923 ubox
6 46 0.103526151 ubox
6 49 0.994308817 ubox
7 28 0.022664387 ubox
7 40 0.003921517 ubox
7 45 0.103437327 ubox
7 48 0.994306569 ubox
8 27 0.022520857 ubox
8 34 0.012853725 ubox
8 36 0.058721257 ubox
8 39 0.003932009 ubox
8 47 0.993520607 ubox
9 26 0.019717088 ubox
9 33 0.011867499 ubox
9 35 0.060545368 ubox
9 42 0.006075560 ubox
9 43 0.046046515 ubox
9 44 0.009074600 ubox
9 46 0.993783733 ubox
10 25 0.015986324 ubox
10 32 0.009913446 ubox
10 33 0.106338036 ubox
10 42 0.016392924 ubox
10 43 0.008407839 ubox
10 44 0.006856426 ubox
11 24 0.009441961 ubox
11 26 0.004847110 ubox
11 32 0.106771023 ubox
11 33 0.014619939 ubox
11 41 0.012304732 ubox
11 42 0.005721366 ubox
11 43 0.006904221 ubox
11 44 0.990485887 ubox
12 25 0.008746030 ubox
12 26 0.009944044 ubox
12 32 0.014708814 ubox
12 41 0.004657258 ubox
12 42 0.006136357 ubox
12 43 0.993710678 ubox
13 24 0.010912218 ubox
13 25 0.012565978 ubox
13 30 0.108350116 ubox
13 41 0.006525591 ubox
13 42 0.993113349 ubox
14 24 0.016632592 ubox
14 29 0.109124117 ubox
14 37 0.044092948 ubox
14 41 0.992275925 ubox
15 21 0.005770616 ubox
15 22 0.012764448 ubox
15 23 0.016992966 ubox
15 28 0.109130006 ubox
15 36 0.046196933 ubox
15 40 0.992596369 ubox
16 20 0.005218672 ubox
16 21 0.012480420 ubox
16 22 0.016834791 ubox
16 27 0.109098775 ubox
16 34 0.288696121 ubox
16 36 0.061148590 ubox
16 38 0.036329277 ubox
16 39 0.940958574 ubox
17 26 0.108998370 ubox
17 33 0.407337951 ubox
17 35 0.123981976 ubox
17 37 0.086020662 ubox
18 24 0.004059599 ubox
18 25 0.100337894 ubox
18 26 0.005167549 ubox
18 32 0.407332391 ubox
18 33 0.136713947 ubox
19 24 0.073912919 ubox
19 25 0.006833017 ubox
19 26 0.003983583 ubox
19 32 0.136574096 ubox
20 24 0.007095148 ubox
20 25 0.003926903 ubox
20 30 0.405828643 ubox
21 29 0.405737095 ubox
21 30 0.118412085 ubox
21 33 0.058285099 ubox
22 29 0.131358341 ubox
22 30 0.053043956 ubox
22 32 0.056388834 ubox
22 33 0.893344608 ubox
23 29 0.055532559 ubox
23 32 0.893859611 ubox
23 35 0.003430264 ubox
24 28 0.052502844 ubox
24 31 0.885020676 ubox
24 34 0.003266141 ubox
34 41 0.055052277 ubox
35 40 0.058911021 ubox
35 45 0.005771967 ubox
35 47 0.022987721 ubox
36 44 0.005119452 ubox
36 46 0.023564582 ubox
37 45 0.023401579 ubox
38 44 0.018033673 ubox
40 46 0.003626793 ubox
40 49 0.003982991 ubox
41 45 0.003453644 ubox
41 48 0.003919381 ubox
51 74 0.515028724 ubox
52 73 0.604110227 ubox
53 59 0.005926949 ubox
53 68 0.004202975 ubox
53 72 0.787403440 ubox
54 58 0.009922368 ubox
54 60 0.015373873 ubox
54 62 0.014833605 ubox
54 67 0.010149537 ubox
54 71 0.958080106 ubox
54 74 0.201930025 ubox
55 61 0.014914792 ubox
55 66 0.010425694 ubox
55 69 0.046103415 ubox
55 70 0.957460891 ubox
55 73 0.204255078 ubox
56 65 0.010414889 ubox
56 68 0.058822794 ubox
56 69 0.863759353 ubox
56 72 0.200361127 ubox
57 64 0.009561737 ubox
57 67 0.069476020 ubox
58 65 0.021431246 ubox
58 66 0.069770592 ubox
58 68 0.951981907 ubox
59 64 0.020455250 ubox
59 67 0.959595619 ubox
60 66 0.959757538 ubox
60 68 0.049731472 ubox
61 67 0.049781670 ubox
61 71 0.262190834 ubox
61 74 0.011318795 ubox
62 66 0.049562877 ubox
62 69 0.029481910 ubox
62 70 0.262015118 ubox
62 73 0.008192050 ubox
63 68 0.032670521 ubox
63 69 0.261573068 ubox
63 70 0.003297805 ubox
63 73 0.021840393 ubox
64 68 0.235647332 ubox
64 69 0.003994900 ubox
64 72 0.023440738 ubox
65 71 0.023490017 ubox
2 53 0.9500000 lbox
3 52 0.9500000 lbox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 46 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
54 71 0.9500000 lbox
55 70 0.9500000 lbox
56 69 0.9500000 lbox
58 68 0.9500000 lbox
59 67 0.9500000 lbox
60 66 0.9500000 lbox
showpage
end
%%EOF
