%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUCUCCAUAGCAACCGCUCCAUCUGAUUGCCCCUCCCCGCUCCCAGAGGCCACCUAGUGCGCAGGCCCGCCUGAUGUCGUCCCACGCCGUGCCGGCUCUCAGGCGCCGGAAGUGAGCUGCGCAGCGCCGGAAGCGGCGGACGCAGGAGGCCUCGUGGAGGACACAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[118.84669495 278.34103394]
[117.21556854 263.42999268]
[115.58444977 248.51893616]
[113.95332336 233.60789490]
[112.32220459 218.69683838]
[110.55576324 203.80120850]
[108.65414429 188.92224121]
[106.75252533 174.04325867]
[104.85091400 159.16429138]
[102.94929504 144.28532410]
[88.30403900 141.04241943]
[80.29885864 153.72772217]
[72.29368591 166.41304016]
[72.18963623 182.81185913]
[57.80395508 190.68487549]
[43.93540192 181.93299866]
[44.85075378 165.55941772]
[59.60837173 158.40786743]
[67.61354828 145.72254944]
[75.61872864 133.03724670]
[71.22136688 126.96161652]
[56.30071640 128.50248718]
[62.42663574 114.81037140]
[58.02927399 108.73474884]
[43.47777176 112.37532043]
[28.92626762 116.01589966]
[14.37476540 119.65647125]
[8.49385834 133.89448547]
[-4.49141693 141.84658813]
[-19.49184418 140.64193726]
[-30.77154922 130.95141602]
[-45.32305145 134.59199524]
[-50.99911880 149.03366089]
[-64.09783173 157.35252380]
[-79.58247375 156.34977722]
[-91.49888611 146.41102600]
[-95.26495361 131.35791016]
[-89.43255615 116.97866058]
[-76.24436951 108.80239105]
[-60.77151489 109.97305298]
[-48.96362686 120.04048920]
[-34.41212463 116.39991760]
[-29.02452469 102.53948212]
[-16.35858536 94.41310883]
[-1.15850568 95.31365204]
[10.73419094 105.10496521]
[25.28569412 101.46439362]
[39.83719635 97.82382202]
[54.38869858 94.18324280]
[67.21956635 82.69342804]
[81.30496216 78.94594574]
[68.26942444 71.52471161]
[55.16703415 64.22214508]
[41.99888229 57.03884506]
[28.83073235 49.85554504]
[12.03041649 47.57833481]
[9.56784058 30.80418587]
[25.00473976 23.79430389]
[36.01403427 36.68739319]
[49.18218613 43.87069321]
[62.35033417 51.05399704]
[69.75462341 51.49838638]
[75.69065094 58.48917007]
[88.72618866 65.91040039]
[103.63724518 64.27928162]
[114.76007843 54.21535873]
[125.88291931 44.15143967]
[137.00575256 34.08751678]
[148.12860107 24.02359772]
[149.55807495 11.18138981]
[159.05958557 3.02802944]
[171.16799927 3.53269553]
[182.47175598 -6.32759094]
[193.77549744 -16.18787766]
[205.07925415 -26.04816437]
[206.35598755 -30.28338432]
[208.69396973 -33.54650116]
[211.65013123 -35.62122345]
[214.75685120 -36.46003342]
[217.57994080 -36.17729187]
[229.56948853 -45.19121552]
[241.55903625 -54.20514297]
[253.54856873 -63.21906662]
[265.53811646 -72.23299408]
[267.60592651 -77.10360718]
[271.00799561 -80.34812927]
[274.89151001 -81.73011780]
[278.43493652 -81.39006805]
[290.89752197 -89.73777008]
[303.36007690 -98.08547211]
[315.82266235 -106.43317413]
[328.28524780 -114.78087616]
[336.00436401 -131.48083496]
[353.53033447 -132.00453186]
[365.83926392 -140.57716370]
[378.14822388 -149.14979553]
[390.45715332 -157.72241211]
[402.76608276 -166.29504395]
[409.66851807 -180.53115845]
[424.53442383 -181.45570374]
[436.84335327 -190.02833557]
[439.08666992 -194.82066345]
[442.60427856 -197.93951416]
[446.53543091 -199.17956543]
[450.06417847 -198.71107483]
[462.82165527 -206.60073853]
[475.57910156 -214.49041748]
[488.33657837 -222.38008118]
[494.01486206 -229.58180237]
[501.39813232 -230.29475403]
[514.29675293 -237.95146179]
[516.64685059 -253.41145325]
[528.41870117 -263.70501709]
[544.05401611 -263.97186279]
[556.17022705 -254.08598328]
[559.04650879 -238.71520996]
[551.32470703 -225.11712646]
[536.65087891 -219.71234131]
[521.95349121 -225.05284119]
[509.05484009 -217.39611816]
[496.22625732 -209.62260437]
[483.46878052 -201.73294067]
[470.71130371 -193.84327698]
[457.95382690 -185.95359802]
[445.41598511 -177.71939087]
[433.10702515 -169.14677429]
[427.08502197 -155.52381897]
[411.33871460 -153.98609924]
[399.02978516 -145.41348267]
[386.72082520 -136.84085083]
[374.41189575 -128.26821899]
[362.10296631 -119.69559479]
[359.65374756 -107.82672882]
[349.43811035 -100.58818054]
[336.63296509 -102.31829834]
[324.17037964 -93.97059631]
[311.70779419 -85.62289429]
[299.24520874 -77.27519226]
[286.78265381 -68.92749023]
[274.55203247 -60.24345016]
[262.56250000 -51.22952652]
[250.57295227 -42.21559906]
[238.58340454 -33.20167542]
[226.59387207 -24.18774796]
[214.93952942 -14.74441528]
[203.63578796 -4.88412857]
[192.33203125 4.97615814]
[181.02828979 14.83644485]
[176.26660156 31.71126556]
[158.19252014 35.14643478]
[147.06967163 45.21035767]
[135.94683838 55.27427673]
[124.82399750 65.33819580]
[113.70116425 75.40211487]
[137.01242065 102.03837585]
[117.82826996 142.38369751]
[119.72988892 157.26268005]
[121.63150024 172.14164734]
[123.53311920 187.02062988]
[125.43473816 201.89959717]
[129.64027405 210.04949951]
[127.23325348 217.06571960]
[128.86437988 231.97676086]
[130.49549866 246.88781738]
[132.12661743 261.79885864]
[133.75775146 276.70993042]
[146.85848999 285.24832153]
[151.35638428 300.22506714]
[145.12763977 314.56860352]
[131.11329651 321.50634766]
[115.93048859 317.76248169]
[106.74807739 305.10479736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 162]
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[11 20]
[12 19]
[13 18]
[24 49]
[25 48]
[26 47]
[27 46]
[31 42]
[32 41]
[51 64]
[52 63]
[53 61]
[54 60]
[55 59]
[65 154]
[66 153]
[67 152]
[68 151]
[69 150]
[72 148]
[73 147]
[74 146]
[75 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[88 139]
[89 138]
[90 137]
[91 136]
[92 135]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[100 126]
[101 125]
[105 124]
[106 123]
[107 122]
[108 121]
[110 120]
[111 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
