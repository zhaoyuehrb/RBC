%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZFP3)
} def

/sequence { (\
AAGUGGCCGAUGCCCGUCGCCAGUGACACCGGGACAACAGCUGCGGGCUCUGUGCGAGCGGCCCAGCAGCGCGGAGCCUCAGCGGAGUGAGCGAGCGCGGGGCAGUAGCGGCCUGCGAUUGUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 120 0.067213634 ubox
2 114 0.034173975 ubox
2 119 0.068622702 ubox
2 120 0.067622271 ubox
3 112 0.070737070 ubox
3 113 0.019590785 ubox
3 116 0.758703868 ubox
3 119 0.070332693 ubox
4 22 0.004961029 ubox
4 111 0.071789140 ubox
4 115 0.733170597 ubox
4 117 0.015814479 ubox
4 118 0.070156487 ubox
4 121 0.003902617 ubox
4 123 0.004041470 ubox
5 14 0.005834838 ubox
5 21 0.005521383 ubox
5 113 0.991084650 ubox
5 114 0.098150229 ubox
5 116 0.006730625 ubox
6 13 0.005884606 ubox
6 20 0.005522956 ubox
6 109 0.072111290 ubox
6 112 0.994885988 ubox
6 113 0.069690536 ubox
7 12 0.005880062 ubox
7 19 0.003973437 ubox
7 108 0.072032323 ubox
7 111 0.997330799 ubox
8 19 0.003924939 ubox
8 110 0.997229673 ubox
9 18 0.005488486 ubox
9 109 0.967342338 ubox
10 17 0.005447339 ubox
10 106 0.296489591 ubox
11 16 0.005187310 ubox
11 36 0.004192151 ubox
11 104 0.859476465 ubox
11 105 0.187554759 ubox
11 107 0.116468565 ubox
12 35 0.004558284 ubox
12 103 0.992858840 ubox
12 106 0.059513690 ubox
13 33 0.005472835 ubox
13 101 0.184208055 ubox
13 102 0.982102238 ubox
13 105 0.037541487 ubox
14 32 0.005491207 ubox
14 100 0.239707307 ubox
14 101 0.970732076 ubox
14 102 0.004344245 ubox
15 31 0.005490166 ubox
15 97 0.003224261 ubox
15 99 0.282590308 ubox
15 100 0.959068590 ubox
15 101 0.004292084 ubox
16 27 0.015184732 ubox
16 30 0.003604498 ubox
16 35 0.072056597 ubox
16 96 0.007274155 ubox
16 98 0.319598635 ubox
16 103 0.008574761 ubox
17 26 0.015548632 ubox
17 34 0.072198166 ubox
17 94 0.011925665 ubox
17 95 0.003831008 ubox
17 97 0.067798826 ubox
17 100 0.003357091 ubox
17 102 0.008583827 ubox
18 25 0.015555972 ubox
18 33 0.072168017 ubox
18 93 0.016183885 ubox
18 97 0.993845388 ubox
18 99 0.014518175 ubox
18 101 0.008526801 ubox
19 24 0.010077178 ubox
19 92 0.016209999 ubox
19 96 0.996910658 ubox
19 98 0.014783381 ubox
20 32 0.072228493 ubox
20 33 0.003927434 ubox
20 91 0.016143089 ubox
20 95 0.996368550 ubox
20 97 0.014749251 ubox
20 100 0.008524152 ubox
21 31 0.072399750 ubox
21 32 0.005302435 ubox
21 89 0.013541251 ubox
21 99 0.008523657 ubox
22 88 0.012563356 ubox
23 29 0.065676547 ubox
23 35 0.009901300 ubox
23 38 0.007235054 ubox
23 92 0.994465233 ubox
23 96 0.003286949 ubox
23 98 0.008832227 ubox
24 28 0.059233776 ubox
24 31 0.007298828 ubox
24 34 0.009878636 ubox
24 36 0.003489338 ubox
24 37 0.007035401 ubox
24 89 0.005317261 ubox
24 91 0.992378517 ubox
24 93 0.020026879 ubox
24 95 0.003273537 ubox
24 97 0.008836186 ubox
25 30 0.015907785 ubox
25 35 0.004965516 ubox
25 88 0.010293442 ubox
25 92 0.020584933 ubox
25 96 0.008929110 ubox
26 88 0.395196599 ubox
27 87 0.404477858 ubox
27 89 0.892338627 ubox
28 88 0.889563212 ubox
29 85 0.453866566 ubox
29 87 0.871358173 ubox
30 43 0.016808096 ubox
30 45 0.003173016 ubox
30 84 0.464830559 ubox
30 89 0.010362820 ubox
30 93 0.032583150 ubox
31 42 0.023828430 ubox
31 44 0.003323510 ubox
31 79 0.003871741 ubox
31 83 0.191085595 ubox
31 88 0.009917276 ubox
31 92 0.032794991 ubox
32 41 0.026504113 ubox
32 42 0.008312989 ubox
32 78 0.007892323 ubox
33 41 0.009139551 ubox
33 77 0.007893571 ubox
33 80 0.016020526 ubox
34 79 0.012673486 ubox
34 88 0.098192507 ubox
35 43 0.008732153 ubox
35 87 0.104151174 ubox
35 89 0.039963972 ubox
36 42 0.008380386 ubox
36 88 0.040305191 ubox
37 88 0.054103363 ubox
38 87 0.057045325 ubox
38 89 0.014770637 ubox
39 88 0.014818513 ubox
40 70 0.009221116 ubox
40 77 0.005633008 ubox
40 83 0.971883076 ubox
40 88 0.006687728 ubox
41 69 0.009313289 ubox
41 76 0.005673584 ubox
41 82 0.990313104 ubox
41 85 0.131143461 ubox
41 87 0.006928528 ubox
42 68 0.009320049 ubox
42 75 0.005655300 ubox
42 81 0.990037195 ubox
42 84 0.131677073 ubox
42 86 0.006901904 ubox
43 67 0.009323738 ubox
43 80 0.988529913 ubox
43 83 0.133255633 ubox
44 66 0.009319481 ubox
44 73 0.005672335 ubox
44 82 0.133014630 ubox
44 84 0.007234301 ubox
45 64 0.009286125 ubox
45 72 0.005672576 ubox
45 78 0.074049437 ubox
45 79 0.978050624 ubox
45 80 0.063520545 ubox
45 83 0.006372461 ubox
46 63 0.009322301 ubox
46 77 0.052417558 ubox
46 78 0.997093417 ubox
46 79 0.008198423 ubox
47 62 0.009317191 ubox
47 70 0.005673625 ubox
47 77 0.998543274 ubox
47 78 0.005849648 ubox
48 61 0.009259378 ubox
48 69 0.005674167 ubox
48 76 0.999926117 ubox
49 60 0.008620251 ubox
49 68 0.005652285 ubox
49 75 0.999789424 ubox
50 58 0.007935220 ubox
50 66 0.005671248 ubox
50 74 0.999922243 ubox
51 57 0.007913824 ubox
51 65 0.005671962 ubox
51 73 0.999176580 ubox
52 59 0.004472859 ubox
52 64 0.005665301 ubox
52 72 0.999889517 ubox
53 58 0.004411741 ubox
53 71 0.999533157 ubox
54 62 0.005701768 ubox
54 70 0.999891454 ubox
54 72 0.003696891 ubox
55 61 0.005709844 ubox
55 69 0.999744144 ubox
55 71 0.003811631 ubox
56 70 0.003819876 ubox
58 67 0.997598357 ubox
59 66 0.998402034 ubox
59 69 0.003244202 ubox
61 67 0.011218722 ubox
62 66 0.011227226 ubox
71 98 0.004111364 ubox
72 97 0.004115179 ubox
73 96 0.004104742 ubox
76 92 0.003569610 ubox
78 91 0.003467543 ubox
79 86 0.004559305 ubox
79 90 0.004609530 ubox
80 85 0.005818575 ubox
80 89 0.004838378 ubox
81 88 0.004701301 ubox
84 92 0.005638258 ubox
84 98 0.005464581 ubox
87 96 0.013686252 ubox
87 98 0.053854806 ubox
88 95 0.013565365 ubox
88 97 0.053886791 ubox
89 96 0.053522140 ubox
89 98 0.003720208 ubox
91 98 0.042490678 ubox
91 122 0.008996591 ubox
92 97 0.042484022 ubox
92 99 0.016279720 ubox
92 121 0.009455989 ubox
93 98 0.016177482 ubox
93 120 0.009425399 ubox
94 119 0.008748798 ubox
96 117 0.009724348 ubox
97 116 0.009835036 ubox
98 115 0.009832722 ubox
99 114 0.009534554 ubox
100 113 0.009268123 ubox
101 112 0.008951428 ubox
101 113 0.003249003 ubox
102 109 0.018721364 ubox
102 112 0.003962376 ubox
103 108 0.019233206 ubox
103 111 0.004560664 ubox
113 125 0.019890733 ubox
114 121 0.013647486 ubox
114 123 0.184470619 ubox
114 124 0.039052181 ubox
115 120 0.011611789 ubox
115 122 0.272559131 ubox
116 121 0.277168769 ubox
116 123 0.100090096 ubox
117 122 0.072675951 ubox
119 125 0.014374835 ubox
120 124 0.016163742 ubox
3 116 0.9500000 lbox
4 115 0.9500000 lbox
5 113 0.9500000 lbox
6 112 0.9500000 lbox
7 111 0.9500000 lbox
8 110 0.9500000 lbox
9 109 0.9500000 lbox
11 104 0.9500000 lbox
12 103 0.9500000 lbox
13 102 0.9500000 lbox
14 101 0.9500000 lbox
15 100 0.9500000 lbox
18 97 0.9500000 lbox
19 96 0.9500000 lbox
20 95 0.9500000 lbox
23 92 0.9500000 lbox
24 91 0.9500000 lbox
27 89 0.9500000 lbox
28 88 0.9500000 lbox
29 87 0.9500000 lbox
40 83 0.9500000 lbox
41 82 0.9500000 lbox
42 81 0.9500000 lbox
43 80 0.9500000 lbox
45 79 0.9500000 lbox
46 78 0.9500000 lbox
47 77 0.9500000 lbox
48 76 0.9500000 lbox
49 75 0.9500000 lbox
50 74 0.9500000 lbox
51 73 0.9500000 lbox
52 72 0.9500000 lbox
53 71 0.9500000 lbox
54 70 0.9500000 lbox
55 69 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
showpage
end
%%EOF
