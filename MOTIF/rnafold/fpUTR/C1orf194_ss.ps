%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCCCGGGGUGCGCAACCGGCCCAACAGGCAGGCCCGGGGCUCGUGUGAAGAACACAGUGGAAGCAUCCUCCAAGCCAGCCAACAAAUUUCCGUUUUCUACUGCCCUUUCGGGCCAGGGGUUAUUUUAUGAGCAUCUCCGAUGUUGCACACGUGGCGUGUGAACCGAGAGAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[103.21188354 114.45703888]
[98.60139465 128.73091125]
[93.99090576 143.00479126]
[89.38042450 157.27865601]
[84.76993561 171.55252075]
[80.15944672 185.82640076]
[75.54895782 200.10026550]
[76.43419647 217.03109741]
[60.41009903 222.56864929]
[50.65303802 208.70373535]
[61.27508926 195.48977661]
[65.88557434 181.21591187]
[70.49606323 166.94204712]
[75.10655212 152.66816711]
[79.71704102 138.39430237]
[84.32752228 124.12042236]
[88.93801117 109.84655762]
[86.34753418 95.07192993]
[77.15598297 83.21800995]
[67.96443939 71.36408997]
[58.77288818 59.51016998]
[44.55505753 60.65299225]
[31.97695923 54.53258133]
[19.58687210 62.98750305]
[7.19678259 71.44242096]
[2.81977081 86.87684631]
[-12.03146458 92.94482422]
[-25.96432686 84.99152374]
[-28.29071617 69.11804199]
[-17.22602463 57.50115204]
[-1.25813925 59.05233765]
[11.13194942 50.59741211]
[23.52203751 42.14249039]
[23.04312897 27.79362488]
[30.16874123 15.32987595]
[23.16245079 2.06669736]
[16.15616226 -11.19648170]
[9.14987278 -24.45965958]
[2.14358425 -37.72283936]
[-4.86270475 -50.98601913]
[-12.21189117 -64.06230927]
[-19.89899445 -76.94285583]
[-27.58609581 -89.82340240]
[-35.27319717 -102.70394897]
[-40.53152847 -97.89250183]
[-48.12192917 -95.02079773]
[-57.31543350 -94.93520355]
[-71.77586365 -98.92217255]
[-86.23629761 -102.90914154]
[-100.69673157 -106.89610291]
[-115.30183411 -100.25754547]
[-129.53224182 -107.66530609]
[-132.47161865 -123.43679047]
[-121.86510468 -135.47346497]
[-105.84912109 -134.54182434]
[-96.70976257 -121.35653687]
[-82.24932861 -117.36956787]
[-67.78890228 -113.38259888]
[-53.32846832 -109.39563751]
[-42.76799011 -120.04816437]
[-46.88029861 -134.47344971]
[-50.99260712 -148.89874268]
[-55.10491943 -163.32402039]
[-59.21722794 -177.74931335]
[-63.32953644 -192.17459106]
[-67.44184875 -206.59988403]
[-71.67919159 -220.98893738]
[-76.04124451 -235.34068298]
[-91.05484772 -234.15498352]
[-105.97225952 -236.22494507]
[-120.09577942 -241.45373535]
[-132.76481628 -249.59680176]
[-143.38682556 -260.27328491]
[-151.46498108 -272.98379517]
[-156.62147522 -287.13388062]
[-158.61509705 -302.06167603]
[-157.35263062 -317.06903076]
[-152.89311218 -331.45397949]
[-145.44512939 -344.54373169]
[-135.35702515 -355.72604370]
[-123.10063934 -364.47790527]
[-109.24923706 -370.38998413]
[-94.45066833 -373.18576050]
[-79.39707947 -372.73446655]
[-64.79257202 -369.05718994]
[-51.32020569 -362.32595825]
[-39.61012268 -352.85559082]
[-30.21002007 -341.08901978]
[-23.55955505 -327.57659912]
[-19.96978378 -312.95034790]
[-19.60860825 -297.89431763]
[-22.49291801 -283.11276245]
[-28.48781013 -269.29699707]
[-37.31289291 -257.09320068]
[-48.55540085 -247.07223511]
[-61.68950272 -239.70274353]
[-57.32744598 -225.35099792]
[-52.36059189 -219.85070801]
[-53.01655960 -210.71218872]
[-48.90425110 -196.28691101]
[-44.79193878 -181.86161804]
[-40.67963028 -167.43632507]
[-36.56732178 -153.01104736]
[-32.45501328 -138.58575439]
[-28.34270287 -124.16046906]
[-22.39265251 -110.39105225]
[-14.70555019 -97.51050568]
[-7.01844788 -84.62995911]
[0.66865444 -71.74941254]
[4.00723171 -70.53850555]
[6.91743851 -67.63517761]
[8.60334587 -63.26218033]
[8.40047455 -57.99230576]
[15.40676308 -44.72912979]
[22.41305161 -31.46595001]
[29.41934204 -18.20277023]
[36.42562866 -4.93959188]
[43.43191910 8.32358742]
[59.00903702 9.68598366]
[71.21124268 19.70986366]
[75.65848541 35.02362823]
[70.62680817 50.31862259]
[79.81835938 62.17254257]
[89.00990295 74.02646637]
[98.20145416 85.88038635]
[90.18647766 73.20126343]
[87.58457947 58.42864990]
[90.78529358 43.77411270]
[99.30944824 31.43155289]
[111.88091278 23.24874115]
[126.61763763 20.45071220]
[141.31341553 23.45634651]
[153.76820374 31.81568336]
[162.11740112 44.27725983]
[165.11106873 58.97549057]
[162.30104065 73.70993042]
[154.10800171 86.27472687]
[141.75955200 94.78837585]
[153.20361328 104.48548126]
[164.64765930 114.18257904]
[176.09170532 123.87968445]
[187.61947632 133.47711182]
[199.23010254 142.97412109]
[205.72509766 144.42488098]
[209.87275696 148.35948181]
[211.07138062 153.00782776]
[222.34541321 162.90209961]
[233.61943054 172.79635620]
[242.15830994 176.11753845]
[245.00134277 182.96151733]
[256.10192871 193.04995728]
[267.20254517 203.13841248]
[278.30313110 213.22685242]
[289.40371704 223.31529236]
[300.50433350 233.40374756]
[316.29244995 239.58203125]
[314.72622681 256.46347046]
[298.07092285 259.63168335]
[290.41589355 244.50434875]
[279.31527710 234.41589355]
[268.21469116 224.32745361]
[257.11407471 214.23899841]
[246.01348877 204.15055847]
[234.91288757 194.06211853]
[223.72515869 184.07037354]
[212.45114136 174.17611694]
[201.17712402 164.28184509]
[189.73307800 154.58474731]
[178.12245178 145.08773804]
[170.93490601 143.28164673]
[166.39459229 135.32373047]
[154.95054626 125.62662506]
[143.50650024 115.92952728]
[132.06245422 106.23242188]
[124.84981537 108.28857422]
[130.24386597 122.28515625]
[137.61755371 135.34765625]
[128.06065369 146.90904236]
[113.84413910 142.12463379]
[113.22170258 127.13777161]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[18 125]
[19 124]
[20 123]
[21 122]
[23 33]
[24 32]
[25 31]
[35 118]
[36 117]
[37 116]
[38 115]
[39 114]
[40 113]
[41 109]
[42 108]
[43 107]
[44 106]
[47 59]
[48 58]
[49 57]
[50 56]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[65 100]
[66 99]
[67 97]
[68 96]
[138 174]
[139 173]
[140 172]
[141 171]
[142 169]
[143 168]
[146 167]
[147 166]
[148 165]
[150 164]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
