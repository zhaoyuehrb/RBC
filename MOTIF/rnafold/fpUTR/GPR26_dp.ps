%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPR26)
} def

/sequence { (\
CGCCAUGGCGGCGCCGGGUUGCGGACCCUGAGCGCCGGCGCGGGGCGCGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.033323794 ubox
1 10 0.025484962 ubox
1 13 0.167044971 ubox
1 16 0.004137587 ubox
1 40 0.005770773 ubox
1 42 0.037841292 ubox
1 47 0.862302787 ubox
1 49 0.034291047 ubox
2 6 0.020794431 ubox
2 9 0.062211844 ubox
2 12 0.176951381 ubox
2 19 0.150342135 ubox
2 20 0.003830899 ubox
2 39 0.019757906 ubox
2 41 0.039065039 ubox
2 46 0.913129901 ubox
2 48 0.033650922 ubox
2 50 0.029907487 ubox
3 8 0.064059435 ubox
3 11 0.176981105 ubox
3 17 0.008160155 ubox
3 18 0.156847592 ubox
3 38 0.019799888 ubox
3 40 0.038721504 ubox
3 43 0.120986614 ubox
3 44 0.092552610 ubox
3 45 0.908642144 ubox
3 47 0.026159174 ubox
3 49 0.029652588 ubox
4 10 0.176868562 ubox
4 16 0.008384213 ubox
4 17 0.156711261 ubox
4 37 0.018040175 ubox
4 42 0.129481010 ubox
4 43 0.124730427 ubox
4 44 0.903383952 ubox
6 16 0.140752139 ubox
6 37 0.004978332 ubox
6 40 0.723083576 ubox
6 42 0.337116369 ubox
6 51 0.006158969 ubox
7 15 0.160118837 ubox
7 36 0.008823897 ubox
7 39 0.818939986 ubox
7 41 0.370393333 ubox
7 50 0.006618861 ubox
7 53 0.046909434 ubox
8 14 0.160137327 ubox
8 35 0.008835055 ubox
8 39 0.413041926 ubox
8 41 0.026136262 ubox
8 46 0.005338408 ubox
8 48 0.006624192 ubox
8 50 0.012615122 ubox
8 52 0.047244609 ubox
9 13 0.158972389 ubox
9 34 0.008815899 ubox
9 37 0.920993836 ubox
9 38 0.292770980 ubox
9 40 0.024690443 ubox
9 42 0.008259789 ubox
9 45 0.005340266 ubox
9 47 0.006630788 ubox
9 49 0.012591226 ubox
10 33 0.006775940 ubox
10 36 0.969469542 ubox
10 39 0.010751367 ubox
10 41 0.006022435 ubox
10 46 0.006399572 ubox
10 48 0.011330546 ubox
11 33 0.005604127 ubox
11 35 0.970010430 ubox
11 41 0.038752553 ubox
11 46 0.011382498 ubox
12 32 0.007902669 ubox
12 34 0.969998017 ubox
12 40 0.039270128 ubox
12 45 0.011498698 ubox
13 33 0.969996420 ubox
13 39 0.039406277 ubox
14 32 0.969815653 ubox
14 38 0.039415737 ubox
14 43 0.011499237 ubox
15 30 0.830694387 ubox
15 37 0.039423857 ubox
15 42 0.011503635 ubox
16 27 0.010181428 ubox
16 28 0.853647636 ubox
16 29 0.459505313 ubox
16 36 0.039343859 ubox
16 41 0.011497702 ubox
16 53 0.044094171 ubox
17 26 0.010366635 ubox
17 27 0.861977088 ubox
17 28 0.444918592 ubox
17 29 0.004237519 ubox
17 35 0.039220563 ubox
17 52 0.043221665 ubox
17 53 0.168321140 ubox
18 26 0.869758609 ubox
18 27 0.429036375 ubox
18 28 0.004202048 ubox
18 33 0.037026371 ubox
18 35 0.003504561 ubox
18 39 0.011500585 ubox
18 50 0.008116786 ubox
18 52 0.170600976 ubox
19 25 0.871238696 ubox
19 32 0.037022601 ubox
19 38 0.011476785 ubox
19 49 0.005716652 ubox
19 51 0.121028887 ubox
20 24 0.785151619 ubox
20 31 0.036524670 ubox
20 34 0.007826353 ubox
20 37 0.010954496 ubox
20 49 0.020303358 ubox
20 51 0.190441884 ubox
21 33 0.009948382 ubox
21 35 0.008410452 ubox
21 36 0.007771483 ubox
21 48 0.022389991 ubox
21 50 0.238057962 ubox
22 30 0.036829680 ubox
22 32 0.009946966 ubox
22 34 0.011467140 ubox
22 47 0.022394085 ubox
22 49 0.238099240 ubox
23 29 0.036833890 ubox
23 33 0.011442375 ubox
23 46 0.021908687 ubox
23 48 0.238055529 ubox
24 28 0.036058740 ubox
26 44 0.003496365 ubox
26 45 0.239070095 ubox
27 43 0.003486189 ubox
27 44 0.239137222 ubox
28 42 0.003470174 ubox
28 43 0.239136490 ubox
29 42 0.238840073 ubox
29 51 0.007668285 ubox
30 41 0.236696051 ubox
30 50 0.008628580 ubox
32 39 0.238288082 ubox
32 41 0.013182123 ubox
32 48 0.009437664 ubox
33 38 0.238678148 ubox
33 40 0.013691342 ubox
33 47 0.009455900 ubox
34 39 0.013357753 ubox
34 46 0.009459041 ubox
35 45 0.009432455 ubox
36 44 0.009404458 ubox
37 53 0.022946489 ubox
38 46 0.004818408 ubox
38 48 0.052339441 ubox
38 50 0.282338658 ubox
38 52 0.025322989 ubox
39 45 0.004824018 ubox
39 47 0.052391492 ubox
39 49 0.282704539 ubox
40 46 0.052687207 ubox
40 48 0.283602676 ubox
40 50 0.088268699 ubox
41 45 0.052306504 ubox
41 47 0.283584561 ubox
41 49 0.088464011 ubox
42 46 0.265293405 ubox
42 48 0.088307096 ubox
42 53 0.014111393 ubox
43 52 0.015228644 ubox
43 53 0.025100666 ubox
44 52 0.028775528 ubox
44 53 0.048415748 ubox
45 52 0.048854165 ubox
1 47 0.9500000 lbox
2 46 0.9500000 lbox
3 45 0.9500000 lbox
4 44 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
12 34 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
20 24 0.9500000 lbox
showpage
end
%%EOF
