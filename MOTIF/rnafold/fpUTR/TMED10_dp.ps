%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMED10)
} def

/sequence { (\
GAGUCACGUGGGUCCCCCCGGUUCCGGCGCGGUUGAGGCCUUCGGUGGUGAACGAGUCUCCAGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.013757238 ubox
1 24 0.072167246 ubox
1 34 0.063851781 ubox
1 42 0.009315920 ubox
1 43 0.040289805 ubox
1 58 0.024256989 ubox
1 60 0.033940524 ubox
2 13 0.013804181 ubox
2 23 0.072034835 ubox
2 33 0.067294474 ubox
2 34 0.132706172 ubox
2 41 0.012110538 ubox
2 42 0.039339154 ubox
2 57 0.024228336 ubox
2 59 0.034053206 ubox
3 22 0.056122828 ubox
3 28 0.080070047 ubox
3 30 0.061758866 ubox
3 33 0.134777739 ubox
3 39 0.011346716 ubox
3 40 0.013061922 ubox
3 41 0.031647232 ubox
3 53 0.003992192 ubox
3 58 0.033942882 ubox
3 64 0.021322107 ubox
3 66 0.069033602 ubox
4 11 0.013625042 ubox
4 21 0.025352859 ubox
4 27 0.080095487 ubox
4 29 0.044112853 ubox
4 32 0.203878756 ubox
4 36 0.020253745 ubox
4 38 0.011316069 ubox
4 48 0.009582685 ubox
4 51 0.005956646 ubox
4 55 0.024353510 ubox
4 63 0.019907572 ubox
4 65 0.064710828 ubox
5 10 0.014054348 ubox
5 20 0.020873733 ubox
5 26 0.079323507 ubox
5 31 0.850837329 ubox
5 35 0.021190556 ubox
5 37 0.010010133 ubox
5 47 0.017072752 ubox
5 50 0.006691549 ubox
5 54 0.024236389 ubox
6 22 0.099165742 ubox
6 33 0.004784697 ubox
6 34 0.020836300 ubox
6 46 0.017864343 ubox
6 49 0.006672409 ubox
6 57 0.015378354 ubox
7 20 0.114365559 ubox
7 21 0.103295637 ubox
7 26 0.031071402 ubox
7 29 0.965354815 ubox
7 31 0.080963080 ubox
7 32 0.004403584 ubox
7 44 0.078897723 ubox
7 45 0.014432024 ubox
7 48 0.006176223 ubox
7 54 0.027313616 ubox
7 56 0.016412092 ubox
8 19 0.116487315 ubox
8 25 0.031276377 ubox
8 28 0.971754982 ubox
8 30 0.081178975 ubox
8 43 0.103061539 ubox
8 53 0.027736419 ubox
8 64 0.003215886 ubox
8 66 0.004468763 ubox
9 20 0.099751129 ubox
9 21 0.005101668 ubox
9 26 0.118838419 ubox
9 27 0.963085782 ubox
9 29 0.079924681 ubox
9 31 0.005215174 ubox
9 52 0.027442218 ubox
9 54 0.015639349 ubox
9 62 0.003606236 ubox
9 65 0.004377935 ubox
10 17 0.021628974 ubox
10 18 0.130173723 ubox
10 19 0.118855565 ubox
10 24 0.020892404 ubox
10 25 0.176947887 ubox
10 28 0.072449839 ubox
10 30 0.006425473 ubox
10 41 0.106266992 ubox
10 53 0.015909659 ubox
10 61 0.004034983 ubox
10 64 0.003805723 ubox
11 16 0.021692258 ubox
11 17 0.130573601 ubox
11 18 0.118914092 ubox
11 19 0.006185457 ubox
11 23 0.020890498 ubox
11 24 0.177547514 ubox
11 25 0.960151661 ubox
11 40 0.110261496 ubox
11 60 0.004013338 ubox
12 16 0.128496987 ubox
12 17 0.118026026 ubox
12 18 0.006184806 ubox
12 22 0.021434388 ubox
12 23 0.137470217 ubox
12 24 0.959939951 ubox
12 28 0.006896266 ubox
12 39 0.110272409 ubox
12 49 0.006820799 ubox
12 53 0.003574084 ubox
12 59 0.003512931 ubox
13 21 0.028530566 ubox
13 27 0.006231085 ubox
13 36 0.003901636 ubox
13 38 0.106491892 ubox
13 48 0.003350060 ubox
13 51 0.024271080 ubox
14 20 0.034169662 ubox
14 21 0.585004674 ubox
14 26 0.006058461 ubox
14 27 0.003815811 ubox
14 32 0.005491024 ubox
14 35 0.005443545 ubox
14 37 0.105447573 ubox
14 38 0.027894696 ubox
14 47 0.003582764 ubox
14 48 0.017962930 ubox
14 50 0.024669136 ubox
15 20 0.583618432 ubox
15 21 0.776170276 ubox
15 26 0.003802047 ubox
15 31 0.006061282 ubox
15 32 0.046667387 ubox
15 37 0.028005206 ubox
15 45 0.003232972 ubox
15 47 0.017925478 ubox
15 48 0.021007526 ubox
16 20 0.770888666 ubox
16 27 0.004009327 ubox
16 31 0.046722611 ubox
16 32 0.027166995 ubox
16 44 0.003237793 ubox
16 45 0.011469236 ubox
16 47 0.021009766 ubox
16 48 0.015922055 ubox
17 26 0.004016848 ubox
17 27 0.003519592 ubox
17 31 0.027241769 ubox
17 32 0.028489981 ubox
17 44 0.011429645 ubox
17 45 0.018286717 ubox
17 47 0.015959989 ubox
18 27 0.057593897 ubox
18 31 0.028377379 ubox
18 32 0.091341145 ubox
18 44 0.018260771 ubox
18 45 0.023628418 ubox
19 26 0.057937702 ubox
19 29 0.030546426 ubox
19 31 0.091609952 ubox
19 35 0.005622018 ubox
19 44 0.023674466 ubox
20 25 0.057418033 ubox
20 28 0.030444129 ubox
20 30 0.091159612 ubox
20 34 0.005436161 ubox
20 40 0.039171138 ubox
20 43 0.022309736 ubox
20 67 0.005774846 ubox
21 28 0.083368631 ubox
21 30 0.010978924 ubox
21 33 0.004181636 ubox
21 39 0.039627932 ubox
21 42 0.019988399 ubox
21 53 0.018155623 ubox
21 64 0.003603710 ubox
21 66 0.006101021 ubox
22 27 0.079496493 ubox
22 29 0.012072544 ubox
22 38 0.038987735 ubox
22 51 0.003539140 ubox
22 52 0.018015480 ubox
22 63 0.003582427 ubox
22 65 0.005987988 ubox
23 36 0.003598321 ubox
23 37 0.035650832 ubox
23 38 0.007771384 ubox
23 50 0.003972691 ubox
23 51 0.016483140 ubox
24 32 0.016553582 ubox
24 37 0.010213418 ubox
24 38 0.004600319 ubox
24 45 0.009738100 ubox
24 48 0.017335941 ubox
24 50 0.010575831 ubox
25 31 0.018974002 ubox
25 35 0.038470683 ubox
25 37 0.004617547 ubox
25 44 0.010049989 ubox
25 47 0.019357904 ubox
25 50 0.005159448 ubox
26 30 0.017808564 ubox
26 34 0.038546018 ubox
26 40 0.040857694 ubox
26 41 0.007251050 ubox
26 43 0.010100318 ubox
26 46 0.019407071 ubox
26 49 0.007059887 ubox
26 58 0.005331502 ubox
26 67 0.150073566 ubox
27 33 0.038579565 ubox
27 39 0.040958767 ubox
27 40 0.007587671 ubox
27 42 0.009534467 ubox
27 57 0.005388472 ubox
27 64 0.008917508 ubox
27 66 0.151376915 ubox
28 32 0.038365829 ubox
28 35 0.003199110 ubox
28 38 0.040951356 ubox
28 44 0.019544984 ubox
28 47 0.007461700 ubox
28 56 0.005440561 ubox
28 63 0.008930504 ubox
29 39 0.013674388 ubox
29 43 0.019735776 ubox
29 46 0.007457987 ubox
29 49 0.003287859 ubox
29 64 0.168073372 ubox
30 38 0.013918430 ubox
30 44 0.003620566 ubox
30 45 0.007345299 ubox
30 48 0.003377424 ubox
30 54 0.005555969 ubox
30 63 0.168576638 ubox
31 40 0.089569185 ubox
31 41 0.003921411 ubox
31 43 0.004598213 ubox
31 53 0.005482338 ubox
31 61 0.043913435 ubox
31 67 0.117650223 ubox
32 39 0.090018377 ubox
32 40 0.004169464 ubox
32 42 0.004273250 ubox
32 46 0.003186264 ubox
32 53 0.010016515 ubox
32 60 0.036371157 ubox
32 64 0.930570872 ubox
32 66 0.119828159 ubox
33 38 0.085716554 ubox
33 45 0.004783364 ubox
33 52 0.010099075 ubox
33 55 0.005882557 ubox
33 63 0.931991479 ubox
33 65 0.112519345 ubox
34 44 0.007816065 ubox
34 51 0.009278150 ubox
34 54 0.006114366 ubox
34 62 0.925416995 ubox
34 65 0.010659431 ubox
35 42 0.003426957 ubox
35 43 0.033882939 ubox
35 53 0.006252284 ubox
35 58 0.008732052 ubox
35 60 0.725987853 ubox
35 61 0.662666986 ubox
35 64 0.010643712 ubox
36 41 0.003646512 ubox
36 42 0.033326711 ubox
36 57 0.008643528 ubox
36 59 0.973921967 ubox
37 41 0.022614924 ubox
37 43 0.009458519 ubox
37 58 0.975625680 ubox
37 59 0.109090593 ubox
37 60 0.060635122 ubox
37 61 0.017552475 ubox
38 42 0.006166827 ubox
38 46 0.011180315 ubox
38 49 0.018493480 ubox
38 57 0.972482321 ubox
38 58 0.113914250 ubox
38 59 0.050078093 ubox
38 60 0.017729485 ubox
38 64 0.003380448 ubox
39 45 0.011611037 ubox
39 48 0.019608035 ubox
39 56 0.941194598 ubox
39 63 0.003345981 ubox
40 44 0.011598241 ubox
40 47 0.020047304 ubox
40 48 0.007492096 ubox
40 56 0.224587497 ubox
41 47 0.007415527 ubox
41 52 0.321609581 ubox
41 55 0.218101255 ubox
41 56 0.154919912 ubox
42 51 0.330840376 ubox
42 54 0.059982783 ubox
42 55 0.858915275 ubox
43 50 0.331486064 ubox
43 54 0.922702224 ubox
44 49 0.293819920 ubox
44 53 0.918449990 ubox
44 67 0.147642870 ubox
45 53 0.117536514 ubox
45 64 0.022363711 ubox
45 66 0.160315272 ubox
46 52 0.150396502 ubox
46 54 0.008495473 ubox
46 62 0.034034916 ubox
46 63 0.013192181 ubox
46 65 0.160247614 ubox
47 53 0.014918683 ubox
47 61 0.039671436 ubox
47 64 0.160103469 ubox
47 67 0.037407874 ubox
48 60 0.039839849 ubox
48 66 0.039715288 ubox
49 62 0.159154633 ubox
49 63 0.003701509 ubox
49 65 0.039734133 ubox
50 58 0.040602743 ubox
50 60 0.033429207 ubox
50 61 0.155689893 ubox
50 64 0.039693020 ubox
51 57 0.039391144 ubox
51 59 0.045214676 ubox
54 60 0.055881765 ubox
55 59 0.048693636 ubox
56 64 0.004605447 ubox
57 63 0.004519473 ubox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
32 64 0.9500000 lbox
33 63 0.9500000 lbox
34 62 0.9500000 lbox
35 61 0.9500000 lbox
36 59 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
showpage
end
%%EOF
