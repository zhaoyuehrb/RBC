%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LCN10)
} def

/sequence { (\
GGCGGCUCCAGAGAGGUUUAAACACUGGCCUUGGCGGCUGAGGGAGGAGGGUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.012289203 ubox
1 18 0.015066306 ubox
1 19 0.003827496 ubox
1 30 0.003560491 ubox
1 39 0.488060100 ubox
2 8 0.012208708 ubox
2 17 0.022364846 ubox
2 18 0.003508229 ubox
2 29 0.003652698 ubox
2 38 0.517055694 ubox
2 52 0.077956973 ubox
3 16 0.022813308 ubox
3 28 0.003391800 ubox
3 36 0.006808344 ubox
3 37 0.517102379 ubox
3 40 0.837438252 ubox
3 51 0.080226276 ubox
3 53 0.033388338 ubox
4 18 0.013943926 ubox
4 19 0.003206615 ubox
4 30 0.005693665 ubox
4 35 0.007207576 ubox
4 39 0.845352347 ubox
4 52 0.032444535 ubox
5 17 0.016931161 ubox
5 18 0.003191515 ubox
5 29 0.005782957 ubox
5 35 0.516695126 ubox
5 38 0.846847676 ubox
5 52 0.007400825 ubox
6 13 0.015858702 ubox
6 15 0.043747767 ubox
6 16 0.014799385 ubox
6 28 0.005319259 ubox
6 34 0.514948575 ubox
6 37 0.846582568 ubox
6 42 0.007234122 ubox
6 43 0.004367627 ubox
6 44 0.020233406 ubox
6 46 0.077443581 ubox
6 47 0.003303097 ubox
6 49 0.070004201 ubox
6 50 0.021161748 ubox
6 51 0.007817837 ubox
7 12 0.014730197 ubox
7 14 0.044827855 ubox
7 15 0.011005101 ubox
7 27 0.004508774 ubox
7 33 0.494852737 ubox
7 34 0.015659575 ubox
7 36 0.828818840 ubox
7 37 0.008372932 ubox
7 41 0.007247048 ubox
7 42 0.004229121 ubox
7 43 0.020293913 ubox
7 44 0.003641976 ubox
7 45 0.077659214 ubox
7 48 0.072074521 ubox
7 49 0.012483267 ubox
7 50 0.006811333 ubox
8 13 0.045172260 ubox
8 15 0.004461749 ubox
8 16 0.012661083 ubox
8 28 0.074965544 ubox
8 33 0.126781458 ubox
8 34 0.823662448 ubox
8 36 0.072895907 ubox
8 37 0.022061303 ubox
8 40 0.005804385 ubox
8 42 0.020329478 ubox
8 43 0.006437675 ubox
8 44 0.077589933 ubox
8 47 0.072532923 ubox
8 49 0.005559287 ubox
8 50 0.003929262 ubox
9 15 0.012830379 ubox
9 27 0.075113273 ubox
9 33 0.825387100 ubox
9 36 0.029848238 ubox
9 40 0.022677045 ubox
9 42 0.007721806 ubox
9 43 0.077004854 ubox
9 46 0.072297830 ubox
9 49 0.003931629 ubox
10 18 0.003162327 ubox
10 19 0.019962060 ubox
10 26 0.074998015 ubox
10 31 0.035102857 ubox
10 32 0.669597269 ubox
10 39 0.027163743 ubox
11 17 0.003297043 ubox
11 18 0.022735172 ubox
11 19 0.010958789 ubox
11 25 0.074349414 ubox
11 30 0.043767814 ubox
11 31 0.274568738 ubox
11 32 0.044762513 ubox
11 38 0.026932134 ubox
12 17 0.022590307 ubox
12 18 0.011427208 ubox
12 19 0.008746534 ubox
12 26 0.022382610 ubox
12 31 0.046625467 ubox
12 32 0.043610597 ubox
12 39 0.020694876 ubox
13 17 0.007865911 ubox
13 18 0.007531128 ubox
13 19 0.006109698 ubox
13 25 0.023388498 ubox
13 30 0.039229385 ubox
13 31 0.048692974 ubox
13 32 0.719910680 ubox
13 38 0.020025967 ubox
14 18 0.005402728 ubox
14 26 0.056343650 ubox
14 31 0.945180900 ubox
14 32 0.008926911 ubox
15 25 0.057707794 ubox
15 26 0.081123719 ubox
15 30 0.988480830 ubox
15 31 0.003849082 ubox
15 39 0.004919593 ubox
16 23 0.065001897 ubox
16 25 0.083048715 ubox
16 29 0.988771521 ubox
16 30 0.003699857 ubox
16 35 0.006224405 ubox
16 38 0.004927958 ubox
17 22 0.060270320 ubox
17 24 0.078570707 ubox
17 28 0.985358942 ubox
17 34 0.006052750 ubox
17 37 0.004816152 ubox
17 42 0.003211407 ubox
17 45 0.003425691 ubox
17 55 0.009421502 ubox
18 27 0.970109294 ubox
18 28 0.064720139 ubox
18 33 0.005512878 ubox
18 36 0.004194248 ubox
18 41 0.003295340 ubox
18 44 0.003437453 ubox
18 54 0.011053947 ubox
18 55 0.004802423 ubox
19 27 0.091228475 ubox
19 40 0.003202566 ubox
19 43 0.003275074 ubox
19 53 0.011069747 ubox
19 54 0.004984409 ubox
19 55 0.004323730 ubox
20 26 0.108798984 ubox
20 52 0.010689595 ubox
22 52 0.010271371 ubox
23 40 0.003488531 ubox
23 51 0.010432631 ubox
23 53 0.049691832 ubox
24 52 0.049911711 ubox
25 42 0.038472474 ubox
25 43 0.013864092 ubox
25 44 0.005561977 ubox
25 46 0.005602018 ubox
25 47 0.013802022 ubox
25 49 0.008868321 ubox
25 50 0.006031960 ubox
25 51 0.049852073 ubox
26 40 0.025423037 ubox
26 41 0.036344802 ubox
26 42 0.012937943 ubox
26 43 0.005369825 ubox
26 45 0.005822008 ubox
26 46 0.013890751 ubox
26 48 0.008896214 ubox
26 49 0.006442058 ubox
26 50 0.049356140 ubox
27 39 0.067327501 ubox
28 35 0.003681745 ubox
28 38 0.070617257 ubox
29 34 0.003781475 ubox
29 37 0.070634545 ubox
29 43 0.043497699 ubox
29 44 0.019326646 ubox
29 47 0.041292489 ubox
30 36 0.070580076 ubox
30 42 0.043707470 ubox
30 43 0.019246402 ubox
30 46 0.041302330 ubox
30 56 0.003312902 ubox
31 41 0.043812940 ubox
31 42 0.019128853 ubox
31 45 0.041197791 ubox
31 55 0.006211404 ubox
32 40 0.043696834 ubox
32 41 0.019145286 ubox
32 44 0.040664720 ubox
32 54 0.006784898 ubox
33 39 0.044064227 ubox
34 38 0.043326466 ubox
34 52 0.007120272 ubox
35 51 0.007168063 ubox
35 53 0.004880814 ubox
36 52 0.005108528 ubox
37 52 0.004863259 ubox
38 44 0.008424729 ubox
38 46 0.010504490 ubox
38 47 0.007179140 ubox
38 49 0.011553101 ubox
38 50 0.005840859 ubox
38 51 0.005512814 ubox
39 43 0.007945535 ubox
39 45 0.013949118 ubox
39 46 0.009820850 ubox
39 48 0.015456876 ubox
39 49 0.006453785 ubox
39 50 0.006362858 ubox
39 55 0.003499967 ubox
40 52 0.004277078 ubox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
showpage
end
%%EOF
