%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCAGGAGGGAGCGGCCUUUGCUCAGCGCGAGACGGCUGGGCGCCGAGUGGGACAGCGCUGGUGCGGAGACUGCUUCCGGACUCCAGGUACCGCGCUUGGCGGCAGCUGGCCCCAGACUUCUGUCUUUUCAGCUGCAGUGAAGGCUCGGGGCUGCAGAAUUGCAACCUUGCCA\
) } def
/len { sequence length } bind def

/coor [
[104.36125183 111.22486877]
[99.90359497 125.54721069]
[95.44593811 139.86953735]
[90.98828125 154.19187927]
[86.53062439 168.51422119]
[82.07296753 182.83654785]
[86.20742798 198.70596313]
[74.34293365 210.02699280]
[58.68466568 205.15354919]
[55.34049988 189.09899902]
[67.75063324 178.37889099]
[72.20829010 164.05654907]
[76.66594696 149.73422241]
[81.12360382 135.41188049]
[85.58126068 121.08955383]
[90.03891754 106.76721191]
[90.83724976 91.78847504]
[87.92722321 77.07345581]
[85.01718903 62.35844040]
[82.10715485 47.64342499]
[79.19712067 32.92840958]
[76.28708649 18.21339226]
[73.37705231 3.49837613]
[70.46702576 -11.21664047]
[67.55699158 -25.93165588]
[64.64695740 -40.64667130]
[61.60644913 -55.33528519]
[58.43571091 -69.99633789]
[55.26497269 -84.65738678]
[52.09423065 -99.31843567]
[35.79968643 -108.93506622]
[31.74608803 -127.09014130]
[42.04405975 -142.19775391]
[38.35498428 -156.73704529]
[34.66591263 -171.27632141]
[30.97683907 -185.81561279]
[27.28776550 -200.35488892]
[23.59869194 -214.89416504]
[19.90961647 -229.43345642]
[15.70685768 -243.83264160]
[10.99570656 -258.07360840]
[6.28455591 -272.31457520]
[1.57340527 -286.55554199]
[-3.13774538 -300.79650879]
[-8.82135391 -307.98815918]
[-7.80370140 -315.33221436]
[-12.26135826 -329.65454102]
[-16.71901512 -343.97686768]
[-21.17667389 -358.29922485]
[-34.88754654 -365.69177246]
[-39.20421982 -380.28015137]
[-32.07206345 -393.30581665]
[-36.52972031 -407.62814331]
[-52.61019135 -412.82528687]
[-62.33729553 -426.44116211]
[-62.04642868 -443.00607300]
[-52.04961014 -456.00881958]
[-56.76076126 -470.24978638]
[-61.59810638 -484.44839478]
[-66.56126404 -498.60348511]
[-71.52442932 -512.75860596]
[-76.48758698 -526.91369629]
[-82.29793549 -534.00335693]
[-81.41078949 -541.36431885]
[-86.12194061 -555.60528564]
[-90.83309174 -569.84625244]
[-95.54424286 -584.08721924]
[-100.25539398 -598.32818604]
[-105.21855164 -612.48327637]
[-110.43215942 -626.54809570]
[-115.64575958 -640.61285400]
[-120.85936737 -654.67767334]
[-132.91084290 -664.92816162]
[-130.07960510 -679.55114746]
[-135.29321289 -693.61596680]
[-140.50682068 -707.68078613]
[-153.46990967 -717.72515869]
[-150.98493958 -733.93493652]
[-135.60824585 -739.63488770]
[-123.15803528 -728.96130371]
[-126.44203186 -712.89434814]
[-121.22842407 -698.82958984]
[-116.01481628 -684.76477051]
[-104.33625793 -675.52032471]
[-106.79457855 -659.89123535]
[-101.58097076 -645.82647705]
[-96.36736298 -631.76165771]
[-91.15376282 -617.69689941]
[-87.23657227 -614.91534424]
[-85.04287720 -609.63006592]
[-86.01442719 -603.03930664]
[-81.30327606 -588.79833984]
[-76.59212494 -574.55737305]
[-71.88097382 -560.31640625]
[-67.16982269 -546.07543945]
[-62.33247757 -531.87689209]
[-57.36931992 -517.72174072]
[-52.40615845 -503.56665039]
[-47.44300079 -489.41156006]
[-42.24636459 -484.12329102]
[-42.51979828 -474.96093750]
[-37.80864716 -460.71997070]
[-24.75179863 -457.85256958]
[-14.74183655 -448.82971191]
[-10.47099495 -435.93380737]
[-13.15904903 -422.50723267]
[-22.20738411 -412.08581543]
[-17.74972725 -397.76345825]
[-4.48521137 -391.08602905]
[0.23951431 -376.62463379]
[-6.85433817 -362.75686646]
[-2.39668059 -348.43453979]
[2.06097674 -334.11221313]
[6.51863432 -319.78985596]
[11.10321903 -305.50765991]
[15.81436920 -291.26669312]
[20.52552032 -277.02572632]
[25.23667145 -262.78475952]
[29.94782066 -248.54379272]
[32.42336273 -247.16641235]
[34.49345016 -244.71009827]
[35.73862457 -241.32762146]
[35.80369949 -237.32263184]
[34.44889832 -233.12252808]
[38.13797379 -218.58325195]
[41.82704544 -204.04396057]
[45.51612091 -189.50468445]
[49.20519638 -174.96539307]
[52.89426804 -160.42611694]
[56.58334351 -145.88682556]
[67.45186615 -142.29878235]
[75.30947113 -133.81233215]
[78.10942078 -122.46713257]
[75.04000092 -111.06745148]
[66.75527954 -102.48917389]
[69.92602539 -87.82812500]
[73.09676361 -73.16707611]
[76.26750183 -58.50602341]
[80.76873016 -52.61453629]
[79.36196899 -43.55670547]
[82.27200317 -28.84169006]
[85.18203735 -14.12667370]
[88.09207153 0.58834314]
[91.00210571 15.30335999]
[93.91213989 30.01837540]
[96.82217407 44.73339081]
[99.73220062 59.44841003]
[102.64223480 74.16342163]
[105.55226898 88.87844086]
[146.91612244 99.66398621]
[154.75927734 112.45011139]
[162.60243225 125.23623657]
[170.44558716 138.02235413]
[178.28874207 150.80848694]
[192.09986877 158.52621460]
[192.15933228 173.42070007]
[200.00247192 186.20681763]
[207.84562683 198.99293518]
[215.68878174 211.77906799]
[230.35423279 219.11778259]
[231.06120300 235.50167847]
[217.08244324 244.07641602]
[202.79808044 236.02102661]
[202.90266418 219.62222290]
[195.05950928 206.83609009]
[187.21635437 194.04997253]
[179.37319946 181.26383972]
[166.12306213 174.46067810]
[165.50260925 158.65164185]
[157.65946960 145.86550903]
[149.81631470 133.07939148]
[141.97315979 120.29326630]
[134.13000488 107.50714111]
[126.68782043 108.43657684]
[128.54644775 123.32097626]
[113.66201782 125.17938232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[17 149]
[18 148]
[19 147]
[20 146]
[21 145]
[22 144]
[23 143]
[24 142]
[25 141]
[26 140]
[27 138]
[28 137]
[29 136]
[30 135]
[33 130]
[34 129]
[35 128]
[36 127]
[37 126]
[38 125]
[39 124]
[40 119]
[41 118]
[42 117]
[43 116]
[44 115]
[46 114]
[47 113]
[48 112]
[49 111]
[52 108]
[53 107]
[57 102]
[58 101]
[59 99]
[60 98]
[61 97]
[62 96]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 88]
[70 87]
[71 86]
[72 85]
[74 83]
[75 82]
[76 81]
[150 173]
[151 172]
[152 171]
[153 170]
[154 169]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
