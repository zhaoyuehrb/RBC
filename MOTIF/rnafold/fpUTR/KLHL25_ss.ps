%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUCGGGCCGGGAGGCGGGGCGGGAAGGCCGGAGAAACUAGUUUGUUGGCGGCGCCUAGGCUGUAUCGCAGCGAGAGCGUUUUUGCCUGUGGAGAGCCGGCCGACGGGAGCCGCGGCGGAGCCUGUUGAGCUCGCGCGGGCUGCCGGGAGUGGUCUCUGAGGCGGCGGCGGCGGCGGGGAUCGUCUCCGGCACUGACGCACC\
) } def
/len { sequence length } bind def

/coor [
[9.79364300 618.34442139]
[21.70352173 627.46331787]
[26.09295654 641.80670166]
[21.32610703 656.02911377]
[9.17946625 664.83020020]
[-5.82020140 664.92999268]
[-18.08287811 656.29132080]
[-23.03855515 642.13354492]
[-28.67193031 656.03552246]
[-34.30530548 669.93750000]
[-31.50499535 686.09576416]
[-44.26993179 696.39086914]
[-59.46864319 690.23199463]
[-61.46599579 673.95495605]
[-48.20728683 664.30413818]
[-42.57391357 650.40216064]
[-36.94053650 636.50018311]
[-32.17366791 622.27777100]
[-28.29137993 607.78887939]
[-32.47097778 593.49267578]
[-21.42557335 582.16534424]
[-17.54328728 567.67645264]
[-13.66100121 553.18756104]
[-21.60292435 543.03674316]
[-22.25626373 529.96997070]
[-15.15853596 518.74853516]
[-2.71261048 513.59063721]
[1.39233434 499.16326904]
[5.38606787 484.70471191]
[9.26835346 470.21582031]
[13.15063953 455.72692871]
[17.03292465 441.23803711]
[20.91521072 426.74914551]
[24.79749680 412.26025391]
[28.67978287 397.77136230]
[32.56206894 383.28250122]
[21.61213112 374.75912476]
[14.71697426 362.66741943]
[12.94670773 348.81723022]
[16.60146523 335.29632568]
[25.16113472 324.15542603]
[37.35908890 317.09729004]
[51.36954880 315.21661377]
[55.47449112 300.78921509]
[59.57943726 286.36184692]
[63.68438339 271.93444824]
[67.78932953 257.50704956]
[71.89427185 243.07968140]
[75.99921417 228.65229797]
[72.04026794 214.29347229]
[83.25879669 203.13751221]
[87.36373901 188.71012878]
[83.40479279 174.35130310]
[94.62332153 163.19535828]
[98.72826385 148.76797485]
[102.83321381 134.34059143]
[106.93815613 119.91320038]
[91.56853485 117.85907745]
[82.72610474 106.37117767]
[84.43140411 92.99135590]
[74.84870148 81.45134735]
[65.26599884 69.91133881]
[55.68329620 58.37132645]
[42.21446991 58.68011093]
[31.18893814 51.28173447]
[26.50865936 39.06442261]
[29.67375946 26.57061768]
[20.26990128 14.88440895]
[10.86604500 3.19820023]
[1.46218801 -8.48800850]
[-7.94166899 -20.17421722]
[-17.34552574 -31.86042595]
[-26.83908653 -43.47388077]
[-36.42179108 -55.01388931]
[-46.00448990 -66.55390167]
[-55.58719254 -78.09391022]
[-65.16989899 -89.63391876]
[-80.73035431 -94.81119537]
[-83.76142883 -110.92778778]
[-71.14500427 -121.40433502]
[-55.85978317 -115.46345520]
[-53.62988663 -99.21662140]
[-44.04718399 -87.67661285]
[-34.46448135 -76.13659668]
[-24.88178062 -64.59658813]
[-15.29907799 -53.05657959]
[-8.60368824 -49.91719437]
[-5.65931749 -41.26428223]
[3.74453950 -29.57807350]
[13.14839649 -17.89186478]
[22.55225372 -6.20565701]
[31.95611000 5.48055172]
[41.35996628 17.16675949]
[58.13980103 18.25829697]
[69.15735626 31.40513992]
[67.22330475 48.78862381]
[76.80600739 60.32863235]
[86.38871002 71.86864471]
[95.97141266 83.40865326]
[111.65065765 84.88965607]
[121.08351135 99.60078430]
[133.19154358 90.74667358]
[145.29959106 81.89255524]
[148.04714966 69.28668976]
[158.31890869 62.16181564]
[170.29478455 63.89094925]
[182.53773499 55.22434235]
[194.78068542 46.55773544]
[207.02363586 37.89112854]
[213.81689453 23.60258675]
[228.67526245 22.56426430]
[240.91821289 13.89765644]
[253.16116333 5.23104858]
[265.40411377 -3.43555880]
[277.64706421 -12.10216618]
[280.27810669 -29.39389229]
[294.32290649 -39.24121475]
[310.81347656 -35.95261765]
[322.92150879 -44.80672836]
[335.02957153 -53.66084290]
[347.06906128 -62.60792542]
[359.03933716 -71.64744568]
[371.00958252 -80.68696594]
[382.97985840 -89.72648621]
[394.95010376 -98.76600647]
[406.92034912 -107.80551910]
[418.89062500 -116.84503937]
[430.79092407 -125.97646332]
[442.62054443 -135.19924927]
[448.27456665 -150.59289551]
[464.47686768 -153.12620544]
[474.55990601 -140.19314575]
[468.15112305 -125.09812927]
[451.84332275 -123.36960602]
[440.01370239 -114.14682770]
[436.66961670 -107.55129242]
[427.93014526 -104.87478638]
[415.95986938 -95.83526611]
[403.98962402 -86.79574585]
[392.01937866 -77.75622559]
[380.04910278 -68.71670532]
[368.07885742 -59.67718506]
[356.10858154 -50.63766479]
[352.66333008 -44.09440994]
[343.88366699 -41.55280304]
[331.77563477 -32.69868851]
[319.66760254 -23.84457397]
[319.49121094 -10.95729733]
[311.80831909 -0.36762440]
[299.24365234 3.92504048]
[286.31369019 0.14078736]
[274.07073975 8.80739498]
[261.82775879 17.47400284]
[249.58482361 26.14060974]
[237.34185791 34.80721664]
[231.42431641 48.47586441]
[215.69024658 50.13407898]
[203.44729614 58.80068970]
[191.20434570 67.46729279]
[178.96138000 76.13390350]
[172.49966431 92.44738770]
[154.15370178 94.00060272]
[142.04566956 102.85471344]
[129.93762207 111.70882416]
[121.36553955 124.01815033]
[117.26059723 138.44552612]
[113.15564728 152.87292480]
[109.05070496 167.30030823]
[112.71604156 182.69107056]
[101.79113007 192.81507874]
[97.68618011 207.24246216]
[101.35151672 222.63323975]
[90.42660522 232.75723267]
[86.32165527 247.18463135]
[82.21671295 261.61199951]
[78.11177063 276.03939819]
[74.00682068 290.46676636]
[69.90187836 304.89416504]
[65.79693604 319.32153320]
[78.04963684 330.02294922]
[84.38748169 344.94241333]
[83.58876801 361.07431030]
[75.86401367 375.19268799]
[62.80368042 384.49639893]
[47.05095673 387.16476440]
[43.16867065 401.65365601]
[39.28638458 416.14254761]
[35.40409851 430.63143921]
[31.52181244 445.12033081]
[27.63952637 459.60922241]
[23.75724030 474.09808350]
[19.87495613 488.58697510]
[20.67655563 497.69192505]
[15.81971931 503.26821899]
[11.71477413 517.69561768]
[20.50558853 532.81671143]
[15.73707962 549.29357910]
[0.82788599 557.06982422]
[-3.05439973 571.55871582]
[-6.93668556 586.04760742]
[-3.03477454 601.38012695]
[-13.80249310 611.67114258]
[-17.68477821 626.16003418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 17]
[9 16]
[10 15]
[18 203]
[19 202]
[21 200]
[22 199]
[23 198]
[27 195]
[28 194]
[29 192]
[30 191]
[31 190]
[32 189]
[33 188]
[34 187]
[35 186]
[36 185]
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[51 171]
[52 170]
[54 168]
[55 167]
[56 166]
[57 165]
[60 99]
[61 98]
[62 97]
[63 96]
[67 93]
[68 92]
[69 91]
[70 90]
[71 89]
[72 88]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
[101 164]
[102 163]
[103 162]
[106 160]
[107 159]
[108 158]
[109 157]
[111 155]
[112 154]
[113 153]
[114 152]
[115 151]
[118 147]
[119 146]
[120 145]
[121 143]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
