%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUGGCCGCCGAGGAGUCCCUUGCUGAAGGCGGACCGCGGAGCGGCGGGCGGCGGGCGGCGCGCGCGCGCGCGCGAGAGGCGGCUGUUGGAGAAGUGGAGCGGCGGUCGCGGGGGGAGGAGGAGGAGGGACUGAGCGGCGGCGGCCCCCGCGUCCCGUGCCUCUAUGGGGGAAGCAGACA\
) } def
/len { sequence length } bind def

/coor [
[345.67001343 210.95646667]
[331.70236206 205.48789978]
[317.73474121 200.01931763]
[303.76712036 194.55075073]
[289.79946899 189.08216858]
[275.83184814 183.61360168]
[261.86422729 178.14503479]
[247.89659119 172.67645264]
[233.92895508 167.20788574]
[219.96131897 161.73931885]
[205.99369812 156.27073669]
[199.56558228 160.92636108]
[191.72544861 162.66741943]
[183.74604797 161.13478088]
[176.95323181 156.50701904]
[172.50569153 149.48316956]
[171.19766235 141.17784119]
[157.64305115 134.75347900]
[144.08842468 128.32913208]
[130.47857666 122.02264404]
[116.81449127 115.83451080]
[103.15042114 109.64636993]
[95.06874084 109.45120239]
[89.30433655 103.23043060]
[75.74971771 96.80607605]
[63.65398026 102.76783752]
[50.52602386 100.69621277]
[41.13338089 91.57074738]
[38.75579071 78.89083862]
[25.31471825 72.23219299]
[11.87364388 65.57355499]
[-1.56743026 58.91490936]
[-15.00850487 52.25626755]
[-24.11456680 51.24510574]
[-28.62356758 45.36363983]
[-41.94704819 38.47271347]
[-55.27053070 31.58179283]
[-68.59401703 24.69086838]
[-84.52374268 33.30440140]
[-102.28263092 30.67520905]
[-114.81228638 18.03838539]
[-117.24679565 0.56855375]
[-130.80140686 -5.85580301]
[-144.35603333 -12.28015995]
[-157.96588135 -18.58664322]
[-171.62995911 -24.77477837]
[-185.29403687 -30.96291351]
[-201.05711365 -29.60786438]
[-209.45890808 -41.90660858]
[-223.12298584 -48.09474182]
[-236.78706360 -54.28287888]
[-250.50433350 -60.35219955]
[-264.27374268 -66.30224609]
[-278.04315186 -72.25229645]
[-293.42654419 -67.69911194]
[-306.49468994 -77.00518799]
[-307.22283936 -93.03171539]
[-295.05242920 -103.48449707]
[-279.31954956 -100.34506226]
[-272.09310913 -86.02171326]
[-258.32369995 -80.07166290]
[-244.55427551 -74.12162018]
[-237.14697266 -74.35522461]
[-230.59892273 -67.94695282]
[-216.93484497 -61.75881958]
[-203.27076721 -55.57068253]
[-188.48504639 -57.36834717]
[-179.10591125 -44.62699127]
[-165.44183350 -38.43885422]
[-151.77775574 -32.25072098]
[-144.36750793 -32.35573196]
[-137.93167114 -25.83477592]
[-124.37705231 -19.41041946]
[-110.82244110 -12.98606300]
[-101.12194824 -20.33531380]
[-89.14430237 -22.86742020]
[-77.15869141 -20.03974533]
[-67.46268463 -12.33107853]
[-61.94182205 -1.16183245]
[-61.70309067 11.36738682]
[-48.37960815 18.25831032]
[-35.05612564 25.14923286]
[-21.73264313 32.04015732]
[-8.34986210 38.81519318]
[5.09121275 45.47383499]
[18.53228760 52.13248062]
[31.97336006 58.79112244]
[45.41443634 65.44976807]
[61.09093475 59.39356232]
[76.60810089 66.68074799]
[82.17407990 83.25145721]
[95.72869110 89.67581177]
[109.33855438 95.98229980]
[123.00263214 102.17043304]
[136.66670227 108.35856628]
[145.80238342 109.05307770]
[150.51278687 114.77450562]
[164.06739807 121.19886780]
[177.62202454 127.62322235]
[199.74136353 124.11891937]
[211.46226501 142.30310059]
[225.42990112 147.77168274]
[239.39752197 153.24024963]
[253.36515808 158.70883179]
[267.33279419 164.17739868]
[281.30041504 169.64596558]
[295.26806641 175.11454773]
[309.23568726 180.58311462]
[323.20330811 186.05169678]
[337.17095947 191.52026367]
[351.13858032 196.98883057]
[364.90969849 180.71241760]
[383.74139404 170.77444458]
[404.89532471 168.59689331]
[425.30401611 174.47489929]
[442.01574707 187.53703308]
[452.62152100 205.87434387]
[455.60220337 226.81938171]
[470.35379028 229.53797913]
[485.10537720 232.25657654]
[499.85696411 234.97517395]
[514.60852051 237.69377136]
[523.87512207 227.46919250]
[536.88281250 223.19909668]
[550.19396973 225.89920044]
[560.34637451 234.75787354]
[564.75347900 247.37602234]
[579.45568848 250.35023499]
[594.15783691 253.32444763]
[608.86004639 256.29867554]
[623.56219482 259.27288818]
[628.56011963 257.58959961]
[633.23126221 257.97149658]
[636.83843994 259.94302368]
[638.94317627 262.80355835]
[653.47058105 266.53894043]
[667.99804688 270.27432251]
[682.52551270 274.00973511]
[691.64385986 273.11608887]
[697.27154541 277.93807983]
[711.73199463 281.92504883]
[727.45776367 277.27389526]
[739.16064453 288.76187134]
[734.80181885 304.57113647]
[718.86517334 308.43844604]
[707.74505615 296.38546753]
[693.28460693 292.39849854]
[678.79010010 288.53717041]
[664.26263428 284.80178833]
[649.73522949 281.06640625]
[635.20776367 277.33099365]
[620.58801270 273.97506714]
[605.88580322 271.00085449]
[591.18365479 268.02664185]
[576.48144531 265.05239868]
[561.77929688 262.07818604]
[550.06335449 273.55902100]
[533.64978027 275.82666016]
[518.96856689 267.79315186]
[511.88995361 252.44535828]
[497.13836670 249.72676086]
[482.38677979 247.00816345]
[467.63519287 244.28956604]
[452.88360596 241.57095337]
[449.20840454 250.26800537]
[444.11093140 258.22109985]
[437.73712158 265.19964600]
[430.26983643 271.00097656]
[421.92382812 275.45626831]
[412.93936157 278.43539429]
[403.57546997 279.85079956]
[394.10235596 279.65997314]
[384.79370117 277.86685181]
[375.91867065 274.52160645]
[367.73422241 269.71939087]
[360.47750854 263.59747314]
[354.35925293 256.33151245]
[349.55734253 248.13031006]
[346.21188354 239.22993469]
[344.42105103 229.88691711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 111]
[2 110]
[3 109]
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[9 103]
[10 102]
[11 101]
[17 99]
[18 98]
[19 97]
[20 95]
[21 94]
[22 93]
[24 92]
[25 91]
[29 88]
[30 87]
[31 86]
[32 85]
[33 84]
[35 83]
[36 82]
[37 81]
[38 80]
[42 74]
[43 73]
[44 72]
[45 70]
[46 69]
[47 68]
[49 66]
[50 65]
[51 64]
[52 62]
[53 61]
[54 60]
[118 164]
[119 163]
[120 162]
[121 161]
[122 160]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[135 151]
[136 150]
[137 149]
[138 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
