%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUACUCCUCCCCCAAGAGCGGUGGCACCGAGGGAGUUGGGGUGGGGGGAGGCUGAGCGCUCUGGCUGGGACAGCUAGAGAAGAUGGCCCAGGCUGGGGAAGUCGCUCUCAUGCCUUGCUGUCCCCUCCCCUGAGCCAGGUGAUUUGGGAGACCCCCUCCUUCCUUCUUUCCCUACCGCCCCACGCGCGACCCGGGG\
) } def
/len { sequence length } bind def

/coor [
[-50.54702759 463.41448975]
[-56.77825165 477.05895996]
[-63.00947571 490.70343018]
[-69.24069977 504.34793091]
[-75.47193146 517.99237061]
[-81.70315552 531.63690186]
[-80.39785767 547.40417480]
[-92.72305298 555.76708984]
[-98.95427704 569.41156006]
[-105.18550110 583.05603027]
[-99.42832947 597.77441406]
[-105.84130859 612.21911621]
[-120.61973572 617.82037354]
[-134.99581909 611.25500488]
[-140.44049072 596.41821289]
[-133.72352600 582.11230469]
[-118.82997894 576.82482910]
[-112.59875488 563.18035889]
[-106.36753082 549.53588867]
[-108.11853027 534.74456787]
[-95.34763336 525.40563965]
[-89.11640930 511.76116943]
[-82.88518524 498.11669922]
[-76.65395355 484.47219849]
[-70.42272949 470.82772827]
[-64.19150543 457.18325806]
[-67.44281006 438.12866211]
[-50.86646652 426.66976929]
[-45.07128906 412.83444214]
[-39.27611542 398.99911499]
[-39.59193039 391.60717773]
[-33.27767181 384.99145508]
[-27.26371574 371.24981689]
[-32.91188049 357.51541138]
[-27.00862503 343.49377441]
[-12.56442261 337.66259766]
[-6.55046463 323.92095947]
[-0.86522907 310.04010010]
[4.48806429 296.02789307]
[9.84135723 282.01565552]
[15.19465065 268.00344849]
[20.54794502 253.99124146]
[25.90123749 239.97901917]
[31.25452995 225.96679688]
[36.60782242 211.95457458]
[41.84978867 197.90032959]
[46.98008728 183.80494690]
[52.11038971 169.70954895]
[57.24069214 155.61416626]
[62.37099457 141.51878357]
[67.50129700 127.42338562]
[60.00129700 114.43300629]
[45.22918320 111.82828522]
[28.58074570 115.03233337]
[20.89316940 99.92148590]
[33.28533936 88.35124969]
[47.83390427 97.05616760]
[62.60602188 99.66088867]
[65.97647095 92.66575623]
[70.52721405 86.99484253]
[58.59078598 77.91069794]
[46.65435791 68.82655334]
[34.71792984 59.74240875]
[22.78150177 50.65826416]
[10.84507370 41.57411957]
[-1.09135377 32.48997498]
[-13.02778149 23.40582848]
[-24.96420860 14.32168293]
[-41.23010635 9.54079723]
[-41.13890839 -7.41290522]
[-24.82251930 -12.01852322]
[-15.88006401 2.38525510]
[-3.94363594 11.46940041]
[7.99279165 20.55354500]
[19.92921829 29.63769150]
[31.86564636 38.72183609]
[43.80207443 47.80598068]
[55.73850250 56.89012527]
[67.67492676 65.97427368]
[79.61135864 75.05841827]
[84.10807037 71.97811890]
[89.05972290 69.70000458]
[94.32456207 68.28929901]
[99.75187683 67.78637695]
[105.18629456 68.20563507]
[110.98146820 54.37031937]
[116.77664185 40.53500748]
[122.57182312 26.69969177]
[120.76692200 10.98177528]
[132.82057190 2.23198915]
[138.61575317 -11.60332489]
[144.41091919 -25.43863869]
[150.20610046 -39.27395248]
[143.27976990 -55.33218384]
[149.97349548 -71.12265015]
[165.69883728 -77.07167053]
[171.27377319 -90.99719238]
[176.84870911 -104.92270660]
[182.42364502 -118.84822845]
[187.99858093 -132.77374268]
[193.46286011 -146.74305725]
[198.81616211 -160.75527954]
[204.16944885 -174.76748657]
[200.08013916 -194.49967957]
[215.58238220 -206.04647827]
[220.48840332 -220.22148132]
[213.35824585 -234.32595825]
[218.36912537 -249.31484985]
[232.54820251 -256.29550171]
[247.48326111 -251.12641907]
[254.31361389 -236.87432861]
[248.98692322 -221.99475098]
[234.66342163 -215.31547546]
[229.75740051 -201.14045715]
[235.03604126 -192.37599182]
[234.60429382 -181.93389893]
[228.36344910 -173.27850342]
[218.18167114 -169.41419983]
[212.82838440 -155.40197754]
[207.47508240 -141.38975525]
[208.02526855 -134.01153564]
[201.92410278 -127.19880676]
[196.34916687 -113.27329254]
[190.77423096 -99.34777069]
[185.19927979 -85.42225647]
[179.62434387 -71.49673462]
[186.30593872 -60.47196198]
[185.40086365 -47.41720200]
[177.01614380 -37.11793518]
[164.04141235 -33.47877884]
[158.24624634 -19.64346313]
[152.45106506 -5.80814838]
[146.65588379 8.02716637]
[148.87530518 22.75548744]
[136.40713501 32.49486923]
[130.61195374 46.33018112]
[124.81678009 60.16549683]
[119.02160645 74.00080872]
[124.31417084 78.86708069]
[128.39564514 84.78598785]
[131.06274414 91.46269989]
[132.18258667 98.56465912]
[146.91151428 101.40342712]
[159.10005188 89.68320465]
[175.70733643 87.55451965]
[190.16795349 95.65933990]
[196.88377380 110.63314056]
[211.65588379 113.23786926]
[226.42800903 115.84259033]
[241.20011902 118.44731140]
[255.97224426 121.05203247]
[269.88577271 113.06498718]
[284.75167847 119.09693909]
[289.16610718 134.52070618]
[279.74267578 147.50448608]
[263.71023560 148.08822632]
[253.36750793 135.82414246]
[238.59539795 133.21942139]
[223.82328796 130.61470032]
[209.05116272 128.00997925]
[194.27905273 125.40525818]
[185.57255554 135.53425598]
[172.89543152 140.07235718]
[159.52542114 137.73251343]
[148.97595215 129.02096558]
[144.07275391 116.13235474]
[129.34382629 113.29358673]
[110.79800415 133.08767700]
[81.59668732 132.55369568]
[76.46638489 146.64907837]
[71.33608246 160.74447632]
[66.20578003 174.83985901]
[61.07547760 188.93524170]
[55.94517517 203.03063965]
[55.94964600 212.17599487]
[50.62004089 217.30787659]
[45.26675034 231.32009888]
[39.91345596 245.33230591]
[34.56016159 259.34451294]
[29.20686913 273.35675049]
[23.85357475 287.36895752]
[18.50028229 301.38119507]
[13.14698887 315.39340210]
[13.97793961 320.56829834]
[12.84726143 325.08905029]
[10.33498669 328.31634521]
[7.19116211 329.93490601]
[1.17720401 343.67654419]
[6.69418669 358.24365234]
[0.39942321 372.09393311]
[-13.52208805 377.26376343]
[-19.53604507 391.00540161]
[-25.44079971 404.79431152]
[-31.23597527 418.62960815]
[-37.03115463 432.46493530]
[-32.32892990 442.28790283]
[-33.78512573 452.85879517]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[8 19]
[9 18]
[10 17]
[28 195]
[29 194]
[30 193]
[32 192]
[33 191]
[36 188]
[37 187]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 58]
[53 57]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[85 138]
[86 137]
[87 136]
[88 135]
[90 133]
[91 132]
[92 131]
[93 130]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[101 120]
[102 119]
[103 118]
[105 114]
[106 113]
[142 167]
[143 166]
[147 161]
[148 160]
[149 159]
[150 158]
[151 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
