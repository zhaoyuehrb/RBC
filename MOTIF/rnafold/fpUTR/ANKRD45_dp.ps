%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANKRD45)
} def

/sequence { (\
GUUGCGCCGUUGCUAUGGUAACCGAGGAGGCCGGGGCCCGGGUGUGGUAUUUUUGGAGUUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.005066117 ubox
1 13 0.008574787 ubox
1 16 0.022827595 ubox
1 22 0.061954190 ubox
1 37 0.043880864 ubox
1 45 0.003186133 ubox
1 48 0.187401458 ubox
1 50 0.051471799 ubox
1 59 0.005807133 ubox
2 6 0.004921306 ubox
2 12 0.008506124 ubox
2 15 0.023089987 ubox
2 21 0.085872037 ubox
2 25 0.010475246 ubox
2 34 0.020562526 ubox
2 36 0.043980557 ubox
2 41 0.003420459 ubox
2 47 0.485895570 ubox
2 49 0.053568087 ubox
2 56 0.007306560 ubox
2 57 0.012653407 ubox
2 58 0.019083317 ubox
3 15 0.006767881 ubox
3 20 0.087813015 ubox
3 24 0.011357929 ubox
3 33 0.026169328 ubox
3 34 0.004721548 ubox
3 35 0.043863700 ubox
3 40 0.003816421 ubox
3 44 0.020905095 ubox
3 46 0.636020910 ubox
3 49 0.027163238 ubox
3 55 0.008044781 ubox
3 56 0.012374107 ubox
3 57 0.023988092 ubox
3 61 0.013096377 ubox
4 10 0.007790302 ubox
4 13 0.049058008 ubox
4 14 0.004731196 ubox
4 19 0.053939550 ubox
4 23 0.011867962 ubox
4 31 0.007946442 ubox
4 32 0.028726104 ubox
4 37 0.181554076 ubox
4 39 0.003184420 ubox
4 43 0.037656439 ubox
4 45 0.783671403 ubox
4 48 0.024962267 ubox
4 59 0.099441921 ubox
4 60 0.012055310 ubox
5 9 0.007857918 ubox
5 12 0.049149713 ubox
5 18 0.044415200 ubox
5 24 0.005703211 ubox
5 30 0.008360052 ubox
5 33 0.044709325 ubox
5 36 0.182263169 ubox
5 42 0.038470854 ubox
5 44 0.792927407 ubox
5 46 0.008111668 ubox
5 47 0.023874944 ubox
5 55 0.021860088 ubox
5 58 0.104749065 ubox
6 11 0.033321870 ubox
6 13 0.026176388 ubox
6 19 0.543675272 ubox
6 23 0.005544653 ubox
6 31 0.044758401 ubox
6 32 0.032067419 ubox
6 37 0.009239582 ubox
6 43 0.792329390 ubox
6 45 0.007225948 ubox
6 48 0.045463961 ubox
6 54 0.016555938 ubox
6 59 0.003254504 ubox
7 12 0.026085482 ubox
7 18 0.561982659 ubox
7 27 0.010610019 ubox
7 30 0.054590631 ubox
7 34 0.182519183 ubox
7 35 0.004747929 ubox
7 36 0.009247074 ubox
7 41 0.102484280 ubox
7 42 0.787757815 ubox
7 44 0.006510599 ubox
7 47 0.046925019 ubox
7 56 0.086200890 ubox
7 58 0.003208231 ubox
8 17 0.562646873 ubox
8 24 0.008206190 ubox
8 26 0.010681148 ubox
8 29 0.054473375 ubox
8 33 0.182516274 ubox
8 34 0.004654728 ubox
8 35 0.009226156 ubox
8 40 0.135082763 ubox
8 41 0.782441337 ubox
8 46 0.046923352 ubox
8 55 0.086304380 ubox
9 16 0.553571330 ubox
9 22 0.081516887 ubox
9 23 0.007343394 ubox
9 31 0.098514103 ubox
9 32 0.153778261 ubox
9 37 0.004270119 ubox
9 39 0.160156721 ubox
9 45 0.035677233 ubox
9 50 0.008041120 ubox
9 54 0.073449946 ubox
10 15 0.543510935 ubox
10 21 0.084822967 ubox
10 27 0.010071611 ubox
10 28 0.014509142 ubox
10 29 0.072413872 ubox
10 30 0.135432879 ubox
10 36 0.004169075 ubox
10 41 0.003469024 ubox
10 44 0.010919316 ubox
10 49 0.006845328 ubox
11 20 0.086178142 ubox
11 26 0.005784043 ubox
11 27 0.013614947 ubox
11 28 0.095554143 ubox
11 29 0.105125217 ubox
11 40 0.018106024 ubox
11 44 0.026257338 ubox
11 49 0.065428399 ubox
12 19 0.086397837 ubox
12 31 0.044507207 ubox
12 37 0.787327890 ubox
12 39 0.019555350 ubox
12 43 0.042515799 ubox
12 45 0.004269426 ubox
12 48 0.073630942 ubox
12 59 0.005787191 ubox
13 18 0.086196379 ubox
13 26 0.111264462 ubox
13 27 0.143400466 ubox
13 29 0.017504705 ubox
13 30 0.044241916 ubox
13 34 0.004627217 ubox
13 35 0.031454968 ubox
13 36 0.788050806 ubox
13 41 0.015509523 ubox
13 42 0.043220972 ubox
13 44 0.004458831 ubox
13 47 0.073912154 ubox
13 56 0.006628989 ubox
13 58 0.006107813 ubox
14 25 0.110686335 ubox
14 26 0.142916533 ubox
14 28 0.018227530 ubox
14 29 0.041986923 ubox
14 33 0.003943819 ubox
14 34 0.033056600 ubox
14 35 0.759861134 ubox
14 40 0.015270452 ubox
14 41 0.040002779 ubox
14 46 0.073838956 ubox
14 49 0.042394775 ubox
14 55 0.006819286 ubox
14 57 0.006063935 ubox
15 45 0.073498123 ubox
15 48 0.044197722 ubox
15 50 0.013799705 ubox
15 54 0.006675787 ubox
16 24 0.174808934 ubox
16 33 0.776402004 ubox
16 40 0.033127578 ubox
16 44 0.070920176 ubox
16 47 0.044186692 ubox
16 49 0.014112250 ubox
16 61 0.005463311 ubox
17 23 0.188244524 ubox
17 32 0.787872777 ubox
17 38 0.066435141 ubox
17 39 0.041969594 ubox
17 43 0.021670819 ubox
17 48 0.013993726 ubox
17 51 0.008937169 ubox
17 60 0.006674314 ubox
18 22 0.185226626 ubox
18 31 0.787690055 ubox
18 37 0.066983303 ubox
18 38 0.041449452 ubox
18 43 0.003747689 ubox
18 45 0.038272587 ubox
18 50 0.009960015 ubox
18 59 0.006225960 ubox
19 30 0.549328912 ubox
19 36 0.065922190 ubox
19 44 0.033985802 ubox
19 46 0.012995814 ubox
19 49 0.010338872 ubox
19 58 0.009118773 ubox
19 61 0.025230924 ubox
20 43 0.025798167 ubox
20 45 0.011483561 ubox
20 48 0.007850134 ubox
20 60 0.059733663 ubox
21 43 0.042877488 ubox
21 48 0.073944233 ubox
21 59 0.057261293 ubox
22 30 0.559828188 ubox
22 34 0.087667285 ubox
22 35 0.017894834 ubox
22 36 0.015229690 ubox
22 41 0.063317396 ubox
22 42 0.043609918 ubox
22 47 0.077135136 ubox
22 56 0.552878236 ubox
22 58 0.031209399 ubox
23 29 0.593030041 ubox
23 33 0.087824336 ubox
23 34 0.017945473 ubox
23 35 0.015599325 ubox
23 40 0.072645443 ubox
23 41 0.043072676 ubox
23 46 0.077201623 ubox
23 55 0.559651421 ubox
24 32 0.086918916 ubox
24 39 0.072889899 ubox
24 45 0.074628477 ubox
24 53 0.005629400 ubox
24 54 0.559126327 ubox
25 52 0.007764119 ubox
25 53 0.558865808 ubox
25 54 0.012948321 ubox
26 32 0.026065746 ubox
26 38 0.039353665 ubox
26 39 0.024020197 ubox
26 50 0.003420845 ubox
26 51 0.009091184 ubox
26 52 0.556113572 ubox
26 53 0.014615941 ubox
26 54 0.003266955 ubox
27 31 0.026062613 ubox
27 37 0.038986520 ubox
27 38 0.017751057 ubox
27 50 0.009937795 ubox
27 51 0.553453954 ubox
27 52 0.019594490 ubox
27 53 0.004129028 ubox
27 60 0.015376110 ubox
28 50 0.551265720 ubox
28 51 0.023312158 ubox
28 52 0.004600794 ubox
28 59 0.015836417 ubox
29 38 0.095809989 ubox
29 39 0.007394239 ubox
29 50 0.017365181 ubox
29 51 0.004619090 ubox
30 37 0.097652554 ubox
30 38 0.005806908 ubox
30 43 0.026004329 ubox
30 45 0.005934516 ubox
30 48 0.502317660 ubox
30 50 0.003461302 ubox
31 36 0.097552354 ubox
31 41 0.181553748 ubox
31 42 0.024524360 ubox
31 44 0.003925703 ubox
31 47 0.535647842 ubox
31 56 0.025784102 ubox
32 40 0.185429586 ubox
32 41 0.021185873 ubox
32 46 0.535266197 ubox
32 55 0.026002070 ubox
33 39 0.188914014 ubox
33 43 0.006406529 ubox
33 45 0.503727075 ubox
33 54 0.025783851 ubox
34 38 0.185930438 ubox
34 53 0.025417063 ubox
35 52 0.024990186 ubox
35 59 0.003377084 ubox
35 60 0.038402102 ubox
36 43 0.465666532 ubox
36 45 0.058373053 ubox
36 48 0.011001135 ubox
36 51 0.022713885 ubox
36 59 0.043236607 ubox
37 42 0.468322973 ubox
37 44 0.063314716 ubox
37 47 0.011104537 ubox
37 56 0.004185452 ubox
37 58 0.044110927 ubox
38 46 0.010794957 ubox
38 47 0.090252862 ubox
38 55 0.005099120 ubox
38 56 0.169563414 ubox
39 46 0.090981274 ubox
39 55 0.169927131 ubox
40 45 0.080764374 ubox
40 51 0.003235944 ubox
40 52 0.016989776 ubox
40 53 0.013494374 ubox
40 54 0.166300904 ubox
41 50 0.005220860 ubox
41 51 0.031150604 ubox
41 52 0.019038922 ubox
41 53 0.160429535 ubox
41 54 0.004067821 ubox
42 50 0.041885172 ubox
42 51 0.023199763 ubox
42 52 0.150590201 ubox
42 53 0.005506340 ubox
43 49 0.043862047 ubox
44 48 0.036821589 ubox
44 50 0.081104680 ubox
45 49 0.075695751 ubox
45 55 0.004683788 ubox
45 61 0.003728375 ubox
46 52 0.009437166 ubox
46 53 0.018788499 ubox
46 54 0.020937250 ubox
46 60 0.010148666 ubox
47 51 0.008830320 ubox
47 52 0.024128166 ubox
47 53 0.025364377 ubox
47 59 0.010041702 ubox
48 55 0.063479600 ubox
48 58 0.009073137 ubox
48 61 0.033585928 ubox
49 54 0.067765325 ubox
49 59 0.109236118 ubox
49 60 0.036557510 ubox
50 56 0.012021736 ubox
50 57 0.039908315 ubox
50 58 0.116019978 ubox
51 55 0.013392740 ubox
51 56 0.039860348 ubox
51 57 0.117896159 ubox
51 58 0.028766780 ubox
52 56 0.106785253 ubox
52 57 0.028690160 ubox
52 58 0.015585335 ubox
53 57 0.015523722 ubox
54 61 0.024337588 ubox
55 60 0.027454294 ubox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
22 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
showpage
end
%%EOF
