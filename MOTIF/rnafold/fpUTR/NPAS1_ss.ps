%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGCGCCGAGAGCUGGGCGCCACAGCCCGCGCGUCCCGCUGCGCCCCGCGCGCCCCGGGGUCUAUGGAGCUGCCCCUCCGCGCCGCCCGGCCGGCCCCACGCCGCGCCCGGAGCCUGCUCUGCGGCCAAGUAAUCGGACUGGCGGUCCUGCGGGAGACUCGGGGCUCGGAGCCCGCCUGAGCGAGCCCCCCGGAG\
) } def
/len { sequence length } bind def

/coor [
[101.99953461 119.58973694]
[93.15895844 117.54494476]
[82.59472656 128.19375610]
[72.03049469 138.84255981]
[61.46626663 149.49136353]
[50.90203476 160.14016724]
[40.33780289 170.78897095]
[29.94472694 181.60487366]
[19.72544670 192.58514404]
[15.98743629 207.95843506]
[1.65268993 212.00370789]
[-8.56658936 222.98397827]
[-18.69799232 234.04539490]
[-28.74087524 245.18722534]
[-38.69459915 256.40878296]
[-48.55853271 267.70935059]
[-58.42246628 279.00991821]
[-68.28639984 290.31048584]
[-78.15032959 301.61105347]
[-76.83008575 317.36010742]
[-87.09645081 329.37582397]
[-102.85858154 330.52947998]
[-114.76507568 320.13665771]
[-115.75202942 304.36318970]
[-105.23389435 292.56726074]
[-89.45089722 291.74713135]
[-79.58696747 280.44656372]
[-69.72303772 269.14599609]
[-59.85910034 257.84542847]
[-49.99516678 246.54484558]
[-47.96271515 239.43008423]
[-39.88271332 235.14434814]
[-29.83982849 224.00250244]
[-27.69417763 216.92106628]
[-19.54685974 212.76470947]
[-9.32758045 201.78443909]
[-6.32051992 187.19653320]
[8.74517727 182.36587524]
[18.96445656 171.38560486]
[19.69014359 166.65454102]
[23.40290070 162.33274841]
[29.68900108 160.22473145]
[40.25323105 149.57592773]
[50.81746292 138.92712402]
[61.38169479 128.27832031]
[71.94592285 117.62952423]
[82.51015472 106.98072052]
[82.09999847 89.05395508]
[97.84358215 76.96910858]
[88.91109467 64.91876984]
[79.97860718 52.86843109]
[71.04611969 40.81808853]
[62.11362839 28.76775169]
[46.90671158 30.40997505]
[33.01129913 24.26064491]
[24.11864662 12.06281090]
[22.53608322 -2.84864283]
[28.58904839 -16.45846367]
[19.65656090 -28.50880241]
[10.72407436 -40.55913925]
[1.79158688 -52.60948181]
[-7.14090061 -64.65982056]
[-16.07338715 -76.71015930]
[-33.41593933 -78.96006775]
[-43.57036209 -92.78100586]
[-40.65124893 -109.33825684]
[-49.77476120 -121.24462128]
[-58.89827347 -133.15098572]
[-66.61123657 -138.06669617]
[-68.07053375 -145.32073975]
[-77.00302124 -157.37107849]
[-91.43681335 -163.84997559]
[-92.80008698 -178.68206787]
[-101.73257446 -190.73240662]
[-117.24707031 -190.44927979]
[-129.94564819 -199.36698914]
[-134.94546509 -214.05648804]
[-130.32397461 -228.86936951]
[-117.85824585 -238.10978699]
[-102.34159088 -238.22457886]
[-89.74049377 -229.16964722]
[-84.90032959 -214.42677307]
[-89.68223572 -199.66488647]
[-80.74974823 -187.61454773]
[-66.95486450 -181.99757385]
[-64.95268250 -166.30357361]
[-56.02019501 -154.25323486]
[-46.99190521 -142.27450562]
[-37.86839676 -130.36813354]
[-28.74488258 -118.46176910]
[-15.85341549 -118.57374573]
[-5.09271765 -111.12613678]
[-0.52243054 -98.65597534]
[-4.02304840 -85.64264679]
[4.90943861 -73.59230804]
[13.84192562 -61.54196548]
[22.77441406 -49.49162674]
[31.70689964 -37.44128799]
[40.63938904 -25.39094925]
[55.42117310 -27.22518921]
[69.22823334 -21.37532043]
[78.31343079 -9.32021141]
[80.15682983 5.76284790]
[74.16397095 19.83526421]
[83.09645844 31.88560295]
[92.02894592 43.93594360]
[100.96143341 55.98628235]
[109.89392090 68.03662109]
[122.86431885 75.57112122]
[137.75715637 77.36090088]
[152.64999390 79.15068817]
[167.54283142 80.94046783]
[168.61471558 69.38207245]
[176.91757202 58.03834534]
[192.00840759 50.98287201]
[205.78515625 45.04981232]
[219.56190491 39.11675262]
[233.33865356 33.18369293]
[247.11540222 27.25063133]
[250.63034058 12.25224876]
[262.16793823 2.31560659]
[277.16687012 1.09253550]
[289.85803223 8.84319687]
[303.63476562 2.91013670]
[313.24914551 -9.65466976]
[327.99890137 -7.58245850]
[341.77566528 -13.51551914]
[355.55239868 -19.44857979]
[369.32916260 -25.38163948]
[375.98260498 -31.65744019]
[383.37322998 -31.29752350]
[397.24282837 -37.01013947]
[403.08782959 -51.69385147]
[417.63665771 -57.86693573]
[432.25775146 -51.86701202]
[438.27667236 -37.25372696]
[432.12249756 -22.69688225]
[417.44641113 -16.83279800]
[402.95544434 -23.14052963]
[389.08584595 -17.42791557]
[375.26220703 -11.60489178]
[361.48547363 -5.67183113]
[347.70870972 0.26122919]
[333.93197632 6.19428968]
[325.30300903 18.33472443]
[309.56784058 16.68688583]
[295.79110718 22.61994553]
[292.70233154 37.16633987]
[281.50793457 47.22363281]
[266.36083984 48.77895737]
[253.04846191 41.02737808]
[239.27171326 46.96044159]
[225.49496460 52.89350128]
[211.71821594 58.82656097]
[197.94146729 64.75962067]
[196.10643005 72.03166962]
[210.53704834 67.93810272]
[221.29740906 78.38868713]
[217.62701416 92.93269348]
[203.19631958 97.02593994]
[192.43635559 86.57575226]
[190.60131836 93.84780121]
[199.91354370 105.60716248]
[209.22575378 117.36652374]
[218.53796387 129.12588501]
[227.85018921 140.88525391]
[237.16239929 152.64462280]
[246.47462463 164.40397644]
[255.78683472 176.16334534]
[270.52838135 172.34147644]
[285.54888916 174.85235596]
[298.24594116 183.26095581]
[306.41970825 196.11044312]
[308.65405273 211.17456055]
[304.56182861 225.84336853]
[294.85208130 237.57537842]
[281.20703125 244.33798218]
[265.99081421 244.95950317]
[251.83969116 239.33226013]
[241.20545959 228.43121338]
[235.93054199 214.14501953]
[236.92887878 198.94885254]
[244.02748108 185.47555542]
[234.71525574 173.71620178]
[225.40304565 161.95683289]
[216.09082031 150.19746399]
[206.77861023 138.43811035]
[197.46638489 126.67874146]
[188.15417480 114.91938019]
[178.84196472 103.16001892]
[165.75305176 95.83330536]
[150.86021423 94.04352570]
[135.96737671 92.25374603]
[121.07453918 90.46395874]
[122.24533081 101.08145905]
[118.55923462 110.67755890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[5 44]
[6 43]
[7 42]
[8 39]
[9 38]
[11 36]
[12 35]
[13 33]
[14 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[49 108]
[50 107]
[51 106]
[52 105]
[53 104]
[58 99]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[66 90]
[67 89]
[68 88]
[70 87]
[71 86]
[73 84]
[74 83]
[109 194]
[110 193]
[111 192]
[112 191]
[115 155]
[116 154]
[117 153]
[118 152]
[119 151]
[123 147]
[124 146]
[126 144]
[127 143]
[128 142]
[129 141]
[131 140]
[132 139]
[162 190]
[163 189]
[164 188]
[165 187]
[166 186]
[167 185]
[168 184]
[169 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
