%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGCGGCGGCGGGCGGCGCCCCGGUCCGCGGCGCCGAGGCUCGCACCGGGAGCUGCCCAUGGGCCGGGCCCGGAGUUCCGGCGCGCCGGGAGCCGGCAGAC\
) } def
/len { sequence length } bind def

/coor [
[155.77897644 340.04501343]
[152.80010986 325.34378052]
[149.82125854 310.64254761]
[135.45533752 302.02941895]
[131.61788940 285.38009644]
[141.13073730 270.78497314]
[137.73327637 256.17477417]
[134.33583069 241.56460571]
[130.93836975 226.95442200]
[127.54092407 212.34423828]
[122.89142609 206.45449829]
[124.26138306 197.26844788]
[121.28252411 182.56721497]
[111.17182159 171.62998962]
[116.01442719 156.56813049]
[113.03557587 141.86688232]
[110.05671692 127.16564941]
[81.31149292 116.37221527]
[81.68041229 90.31089020]
[71.85750580 78.97464752]
[62.03459167 67.63840485]
[52.21168137 56.30215836]
[42.38877106 44.96591568]
[32.56586075 33.62966919]
[22.74294853 22.29342651]
[9.86297035 20.56357384]
[1.91778684 10.79361534]
[2.79306674 -1.36487138]
[-6.70211983 -12.97699547]
[-16.19730759 -24.58911896]
[-25.69249344 -36.20124435]
[-35.18767929 -47.81336975]
[-44.68286896 -59.42549133]
[-50.94360352 -62.21690750]
[-54.24922943 -67.07093811]
[-54.36571503 -71.98243713]
[-63.18249512 -84.11769104]
[-71.99927521 -96.25294495]
[-80.98844147 -108.26106262]
[-90.14815521 -120.13959503]
[-105.85225677 -121.91635132]
[-115.63489532 -134.32907104]
[-113.69219971 -150.01350403]
[-101.17675018 -159.66435242]
[-85.51373291 -157.55595398]
[-75.99573517 -144.93916321]
[-78.26962280 -129.29931641]
[-69.10990143 -117.42078400]
[-62.43388367 -113.99475861]
[-59.86401749 -105.06972504]
[-51.04724121 -92.93447113]
[-42.23046112 -80.79920959]
[-33.07074356 -68.92067719]
[-23.57555580 -57.30855560]
[-14.08036900 -45.69643021]
[-4.58518267 -34.08430481]
[4.91000414 -22.47218323]
[14.40519142 -10.86005783]
[31.08923149 -5.62883472]
[34.07919312 12.47051620]
[43.90210342 23.80675888]
[53.72501373 35.14300156]
[63.54792404 46.47924805]
[73.37083435 57.81549072]
[83.19374847 69.15173340]
[93.01665497 80.48797607]
[104.29851532 76.92513275]
[117.13143921 80.15102386]
[127.39608002 90.58912659]
[140.66258240 83.58911896]
[153.92907715 76.58911133]
[167.19557190 69.58910370]
[178.38258362 56.84991455]
[193.72079468 64.07318115]
[191.02584839 80.81156921]
[174.19557190 82.85559082]
[160.92907715 89.85560608]
[147.66258240 96.85561371]
[134.39608765 103.85562134]
[149.12191772 101.00075531]
[161.96061707 108.75752258]
[166.28356934 123.12109375]
[159.85881042 136.67552185]
[146.00346375 142.42262268]
[131.87106323 137.39515686]
[124.75795746 124.18679047]
[127.73680878 138.88803101]
[130.71566772 153.58926392]
[141.03944397 165.57801819]
[135.98376465 179.58834839]
[138.96261597 194.28959656]
[142.15110779 208.94679260]
[145.54855347 223.55697632]
[148.94599915 238.16714478]
[152.34346008 252.77732849]
[155.74090576 267.38751221]
[167.99133301 273.19723511]
[174.52131653 284.85577393]
[173.11724854 297.94793701]
[164.52249146 307.66369629]
[167.50135803 322.36492920]
[170.48020935 337.06616211]
[184.65045166 343.38943481]
[192.36848450 356.85092163]
[190.66658020 372.27438354]
[180.19915771 383.72918701]
[164.99114990 386.81072998]
[150.89033508 380.33410645]
[143.31878662 366.78970337]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[3 100]
[6 96]
[7 95]
[8 94]
[9 93]
[10 92]
[12 91]
[13 90]
[15 88]
[16 87]
[17 86]
[19 66]
[20 65]
[21 64]
[22 63]
[23 62]
[24 61]
[25 60]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[33 53]
[36 52]
[37 51]
[38 50]
[39 48]
[40 47]
[69 79]
[70 78]
[71 77]
[72 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
