%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PTPRCAP)
} def

/sequence { (\
ACUUCUCGCUCGACACAGCCAGAGCUGGAGGUGGGUGCCCGGCACGGAGGGGCCUGCGGACCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.775862428 ubox
1 36 0.004367316 ubox
2 24 0.027360040 ubox
2 28 0.006201861 ubox
2 30 0.427734549 ubox
2 31 0.829887602 ubox
2 34 0.003781150 ubox
2 35 0.004528093 ubox
2 49 0.005301613 ubox
2 50 0.008811612 ubox
2 52 0.004627119 ubox
2 59 0.015832531 ubox
3 23 0.019928666 ubox
3 24 0.058582112 ubox
3 27 0.005931866 ubox
3 29 0.418005059 ubox
3 30 0.867107010 ubox
3 33 0.003783471 ubox
3 34 0.004260512 ubox
3 48 0.005306590 ubox
3 49 0.008846832 ubox
3 51 0.004650755 ubox
3 58 0.013525653 ubox
3 60 0.008009897 ubox
4 13 0.006264905 ubox
4 22 0.005999393 ubox
4 23 0.076841710 ubox
4 28 0.406579691 ubox
4 29 0.888663122 ubox
4 30 0.004550687 ubox
4 31 0.014264781 ubox
4 47 0.005273485 ubox
4 48 0.008871000 ubox
4 50 0.005018532 ubox
4 59 0.008481473 ubox
4 60 0.026614780 ubox
5 12 0.006797407 ubox
5 22 0.080547348 ubox
5 24 0.014444377 ubox
5 27 0.405768825 ubox
5 28 0.895901127 ubox
5 30 0.098200014 ubox
5 34 0.003532773 ubox
5 35 0.019811549 ubox
5 46 0.005225492 ubox
5 47 0.008864761 ubox
5 49 0.005332873 ubox
5 58 0.008351263 ubox
5 59 0.028661197 ubox
6 13 0.007009871 ubox
6 21 0.079648137 ubox
6 23 0.014979687 ubox
6 27 0.876790769 ubox
6 28 0.018843601 ubox
6 29 0.098322029 ubox
6 34 0.020578343 ubox
6 46 0.008060709 ubox
6 48 0.005320140 ubox
6 58 0.010809686 ubox
6 59 0.022486809 ubox
6 60 0.005894533 ubox
7 12 0.007658702 ubox
7 22 0.014912427 ubox
7 27 0.096341515 ubox
7 28 0.096695258 ubox
7 33 0.025093842 ubox
7 37 0.032519340 ubox
7 47 0.005209700 ubox
7 58 0.037676160 ubox
7 59 0.006102117 ubox
8 19 0.082290937 ubox
8 25 0.993265242 ubox
8 26 0.020596729 ubox
8 32 0.025098552 ubox
8 36 0.034103904 ubox
8 38 0.007880927 ubox
8 43 0.004319186 ubox
8 57 0.037702174 ubox
9 18 0.082351307 ubox
9 24 0.994133190 ubox
9 30 0.028615270 ubox
9 31 0.024468234 ubox
9 35 0.034238428 ubox
9 37 0.007893612 ubox
9 42 0.004318870 ubox
9 56 0.037600294 ubox
10 17 0.077770050 ubox
10 23 0.993976212 ubox
10 29 0.029326354 ubox
10 30 0.017784810 ubox
10 31 0.005148872 ubox
10 34 0.034052486 ubox
10 35 0.006818299 ubox
10 41 0.003223378 ubox
11 22 0.993883321 ubox
11 28 0.029451901 ubox
11 30 0.017437281 ubox
11 33 0.034077420 ubox
11 34 0.009583088 ubox
12 32 0.032020192 ubox
13 32 0.013859272 ubox
14 27 0.003745466 ubox
14 31 0.015273696 ubox
14 33 0.036863709 ubox
15 32 0.037294087 ubox
16 27 0.058400419 ubox
16 31 0.037340463 ubox
17 26 0.058666643 ubox
18 25 0.058773524 ubox
19 24 0.058583358 ubox
19 28 0.037553817 ubox
20 27 0.037564362 ubox
21 26 0.033841490 ubox
25 59 0.026116605 ubox
26 58 0.026408272 ubox
26 63 0.093114147 ubox
27 57 0.026448217 ubox
27 62 0.122252550 ubox
28 61 0.121937179 ubox
29 55 0.026557201 ubox
30 39 0.007071832 ubox
30 54 0.026648042 ubox
30 62 0.067794334 ubox
31 38 0.007323394 ubox
31 43 0.004127173 ubox
31 53 0.026602357 ubox
31 57 0.545159975 ubox
31 61 0.067950213 ubox
32 37 0.007049613 ubox
32 41 0.005649308 ubox
32 42 0.004156128 ubox
32 52 0.026466643 ubox
32 56 0.551520048 ubox
32 58 0.029093708 ubox
32 60 0.065787271 ubox
32 63 0.074950948 ubox
33 39 0.027381062 ubox
33 40 0.136960864 ubox
33 54 0.021657489 ubox
33 55 0.682520542 ubox
33 57 0.074894598 ubox
33 62 0.186428735 ubox
34 38 0.027138357 ubox
34 39 0.136624385 ubox
34 40 0.052563809 ubox
34 53 0.019880115 ubox
34 54 0.696953455 ubox
34 55 0.133456911 ubox
34 61 0.182980477 ubox
34 62 0.643914153 ubox
35 39 0.051806668 ubox
35 45 0.050379759 ubox
35 53 0.696329530 ubox
35 54 0.144166182 ubox
35 57 0.079572439 ubox
35 61 0.645618262 ubox
36 44 0.050715291 ubox
36 52 0.661231232 ubox
36 56 0.076462485 ubox
36 58 0.141776017 ubox
36 60 0.637847952 ubox
36 63 0.008883433 ubox
37 43 0.051056914 ubox
37 53 0.220540603 ubox
37 55 0.007102008 ubox
37 57 0.173609419 ubox
37 62 0.011226313 ubox
38 42 0.050686565 ubox
38 47 0.006055033 ubox
38 50 0.218887524 ubox
38 51 0.658976590 ubox
38 52 0.221953983 ubox
38 56 0.173386721 ubox
38 59 0.581079614 ubox
39 46 0.006281388 ubox
39 47 0.116906907 ubox
39 49 0.183669643 ubox
39 50 0.661935159 ubox
39 51 0.221386594 ubox
39 52 0.005544909 ubox
39 58 0.579256111 ubox
39 59 0.235485071 ubox
40 46 0.162018831 ubox
40 49 0.663344545 ubox
40 50 0.220498784 ubox
40 51 0.005602045 ubox
40 56 0.437532679 ubox
40 58 0.240369867 ubox
41 45 0.153479767 ubox
41 54 0.555126607 ubox
41 55 0.103902965 ubox
41 57 0.173757775 ubox
41 62 0.170197526 ubox
42 53 0.560314409 ubox
42 54 0.075138042 ubox
42 57 0.285741584 ubox
42 61 0.170372492 ubox
43 52 0.564719246 ubox
43 56 0.332494155 ubox
44 55 0.330278686 ubox
45 56 0.023218088 ubox
45 58 0.170773662 ubox
46 54 0.332945093 ubox
46 55 0.024883733 ubox
46 57 0.171281152 ubox
47 53 0.332408679 ubox
47 54 0.026852059 ubox
48 55 0.170602750 ubox
49 54 0.170421922 ubox
49 55 0.004387857 ubox
49 62 0.019293009 ubox
50 54 0.005243802 ubox
50 61 0.019259612 ubox
50 62 0.028035022 ubox
51 61 0.027899493 ubox
51 62 0.030388052 ubox
52 61 0.030606281 ubox
53 59 0.045784459 ubox
54 58 0.046081399 ubox
55 63 0.010032202 ubox
56 62 0.027630981 ubox
2 30 0.9500000 lbox
3 29 0.9500000 lbox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
8 25 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
showpage
end
%%EOF
