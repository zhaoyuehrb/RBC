%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PNN)
} def

/sequence { (\
AUUGGCUGAGCCCGGCUGUCAGUCCUUUCGCGCCUCGGCGGCGCGGCAUAGCCCGGCUCGGCCUGUAAAGCAGUCUCAAGCCUGCCGCAGGGAGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 66 0.405459736 ubox
1 74 0.006844992 ubox
2 65 0.395572290 ubox
2 68 0.034767751 ubox
2 69 0.024688395 ubox
2 70 0.011654437 ubox
2 73 0.010760555 ubox
2 79 0.006100689 ubox
2 91 0.003506785 ubox
2 92 0.003744727 ubox
2 93 0.010756665 ubox
2 94 0.005895263 ubox
2 95 0.009465143 ubox
2 96 0.016565273 ubox
2 97 0.014099499 ubox
3 65 0.040069586 ubox
3 67 0.038739032 ubox
3 68 0.027651293 ubox
3 69 0.015007968 ubox
3 72 0.012027218 ubox
3 78 0.006987485 ubox
3 90 0.003501363 ubox
3 91 0.004709128 ubox
3 92 0.011042170 ubox
3 93 0.008043696 ubox
3 94 0.008962221 ubox
3 95 0.016274646 ubox
3 96 0.018998638 ubox
4 63 0.940193884 ubox
4 64 0.009912228 ubox
4 66 0.006048072 ubox
4 71 0.006525466 ubox
4 77 0.006967234 ubox
5 62 0.980653723 ubox
5 63 0.007405356 ubox
6 61 0.999624867 ubox
7 60 0.999108483 ubox
8 59 0.999945252 ubox
9 58 0.999847102 ubox
10 57 0.999989480 ubox
11 56 0.999264327 ubox
12 55 0.997990616 ubox
12 56 0.038206291 ubox
13 55 0.054017538 ubox
14 53 0.997985330 ubox
14 54 0.054049048 ubox
15 52 0.999257229 ubox
15 53 0.038294429 ubox
16 51 0.999969780 ubox
17 48 0.051283610 ubox
17 50 0.997674443 ubox
18 47 0.075352690 ubox
18 49 0.991969227 ubox
19 46 0.071481947 ubox
19 48 0.932890016 ubox
20 45 0.043420027 ubox
21 27 0.023699221 ubox
21 28 0.033721482 ubox
22 26 0.019316770 ubox
22 27 0.043218131 ubox
22 31 0.004422494 ubox
22 42 0.004324532 ubox
22 44 0.010689301 ubox
22 47 0.786836108 ubox
22 49 0.032060501 ubox
23 30 0.004272503 ubox
23 41 0.003962855 ubox
23 43 0.009458207 ubox
23 46 0.697018705 ubox
23 48 0.038731434 ubox
24 41 0.003359267 ubox
24 45 0.413860290 ubox
24 46 0.302718488 ubox
25 41 0.005097588 ubox
25 45 0.277655775 ubox
25 46 0.060952955 ubox
26 45 0.030140392 ubox
26 46 0.017854380 ubox
27 45 0.010514933 ubox
27 46 0.031880880 ubox
28 41 0.051983358 ubox
28 45 0.012999764 ubox
28 46 0.591812637 ubox
29 40 0.056476132 ubox
29 43 0.119842879 ubox
29 45 0.863864719 ubox
30 39 0.056623573 ubox
30 42 0.120191303 ubox
30 44 0.990526085 ubox
31 38 0.056542783 ubox
31 40 0.089798688 ubox
31 41 0.085180115 ubox
31 43 0.990619291 ubox
32 36 0.003695584 ubox
32 39 0.123592865 ubox
32 42 0.990616945 ubox
32 47 0.008924537 ubox
33 38 0.123779801 ubox
33 41 0.990602233 ubox
33 46 0.008930096 ubox
34 40 0.989830010 ubox
34 41 0.007179679 ubox
34 45 0.008926509 ubox
35 40 0.009185086 ubox
36 43 0.008913350 ubox
37 42 0.008879545 ubox
62 91 0.194135745 ubox
62 92 0.013683849 ubox
63 70 0.013841271 ubox
63 73 0.176544129 ubox
63 90 0.285411616 ubox
63 91 0.016841167 ubox
63 92 0.010348191 ubox
63 94 0.003691118 ubox
64 69 0.038674938 ubox
64 72 0.406160216 ubox
64 78 0.013832808 ubox
64 87 0.010527625 ubox
64 89 0.406301000 ubox
64 90 0.015998049 ubox
64 91 0.016859232 ubox
64 93 0.005792334 ubox
64 96 0.007184549 ubox
65 71 0.432802613 ubox
65 74 0.003614093 ubox
65 77 0.014939883 ubox
65 81 0.005614307 ubox
65 85 0.008108777 ubox
65 86 0.014233869 ubox
65 88 0.423384949 ubox
66 70 0.404927816 ubox
66 73 0.013662827 ubox
66 80 0.005549013 ubox
66 84 0.008375235 ubox
66 87 0.420789222 ubox
67 83 0.007992578 ubox
69 76 0.012801317 ubox
69 83 0.010429981 ubox
70 75 0.013428539 ubox
70 81 0.089108146 ubox
70 82 0.007824377 ubox
70 85 0.447571629 ubox
70 88 0.008769841 ubox
71 80 0.089994811 ubox
71 84 0.448900126 ubox
71 87 0.008715578 ubox
72 83 0.448671655 ubox
73 81 0.071206028 ubox
73 82 0.442776587 ubox
73 85 0.007775945 ubox
74 80 0.097156826 ubox
74 84 0.007405540 ubox
74 92 0.004684590 ubox
74 93 0.058690145 ubox
74 95 0.815895614 ubox
75 90 0.003371010 ubox
75 91 0.005885444 ubox
75 92 0.062728230 ubox
75 94 0.872234162 ubox
75 97 0.043493202 ubox
76 89 0.003326458 ubox
76 90 0.005696585 ubox
76 91 0.060504743 ubox
76 92 0.017600126 ubox
76 93 0.871870951 ubox
76 95 0.074581714 ubox
76 96 0.041323081 ubox
77 84 0.004557461 ubox
77 90 0.060008734 ubox
77 91 0.037409273 ubox
77 92 0.870125716 ubox
77 94 0.079110177 ubox
78 83 0.004248201 ubox
80 88 0.158142449 ubox
81 87 0.158330107 ubox
81 91 0.868710083 ubox
81 92 0.047764487 ubox
82 90 0.869565915 ubox
82 91 0.050325004 ubox
82 92 0.003319809 ubox
82 94 0.111000000 ubox
82 97 0.006291603 ubox
83 89 0.868536990 ubox
83 90 0.049171521 ubox
83 91 0.003392005 ubox
83 93 0.110992834 ubox
83 96 0.006162861 ubox
84 88 0.854714675 ubox
85 91 0.095709226 ubox
85 92 0.071767699 ubox
86 90 0.095215020 ubox
86 91 0.080115644 ubox
4 63 0.9500000 lbox
5 62 0.9500000 lbox
6 61 0.9500000 lbox
7 60 0.9500000 lbox
8 59 0.9500000 lbox
9 58 0.9500000 lbox
10 57 0.9500000 lbox
11 56 0.9500000 lbox
12 55 0.9500000 lbox
14 53 0.9500000 lbox
15 52 0.9500000 lbox
16 51 0.9500000 lbox
17 50 0.9500000 lbox
18 49 0.9500000 lbox
19 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
74 95 0.9500000 lbox
75 94 0.9500000 lbox
76 93 0.9500000 lbox
77 92 0.9500000 lbox
81 91 0.9500000 lbox
82 90 0.9500000 lbox
83 89 0.9500000 lbox
84 88 0.9500000 lbox
showpage
end
%%EOF
