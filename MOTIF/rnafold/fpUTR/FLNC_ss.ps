%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGGAGGGAGAGAGAGCCAGAGAGCGGCCGAGCGCCUAGGAGGCCCGCCGAGCCUCGCCGAGCCCCGCCAGCCCCGGCGCGAGAGAAGUUGGAGAGGAGAGCAGCGCAGCGCAGCGAGUCCCGUGGUCGCGCCCCAACAGCGCCCGACAGCCCCCGAUAGCCCAAACCGCGGCCCUAGCCCCGGCCGCACCCCCAGCCCGCGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[-130.73846436 235.70339966]
[-142.72216797 231.55450439]
[-152.21131897 223.21209717]
[-165.82170105 229.51745605]
[-179.43206787 235.82281494]
[-193.04244995 242.12817383]
[-202.31173706 254.94969177]
[-217.11236572 253.27917480]
[-230.72274780 259.58453369]
[-244.33312988 265.88989258]
[-241.62440491 281.75311279]
[-243.81143188 297.84359741]
[-250.77970886 312.67190552]
[-261.96820068 324.83932495]
[-276.41363525 333.16949463]
[-292.83309937 336.82202148]
[-309.73782349 335.37646484]
[-325.56817627 328.87866211]
[-334.92050171 340.60610962]
[-332.90216064 356.28100586]
[-342.62478638 368.74078369]
[-358.32012939 370.59329224]
[-370.67642212 360.73947144]
[-372.36288452 345.02542114]
[-362.37899780 332.77401733]
[-346.64797974 331.25378418]
[-337.29565430 319.52630615]
[-345.83792114 307.19625854]
[-360.10375977 311.83154297]
[-374.36959839 316.46679688]
[-388.60037231 321.20861816]
[-402.79528809 326.05676270]
[-409.90554810 331.79229736]
[-417.23895264 330.86953735]
[-431.50479126 335.50479126]
[-445.69970703 340.35293579]
[-459.82052612 345.41287231]
[-473.94131470 350.47283936]
[-488.06210327 355.53277588]
[-500.93322754 366.56774902]
[-515.10003662 357.25439453]
[-510.07241821 341.06304932]
[-493.12207031 341.41198730]
[-479.00125122 336.35202026]
[-464.88046265 331.29208374]
[-450.75967407 326.23214722]
[-447.94570923 322.37243652]
[-442.67687988 320.23989868]
[-436.14007568 321.23895264]
[-421.87420654 316.60366821]
[-407.64343262 311.86184692]
[-393.44851685 307.01370239]
[-388.13430786 301.87661743]
[-379.00485229 302.20092773]
[-364.73901367 297.56567383]
[-350.47317505 292.93041992]
[-351.20962524 277.29910278]
[-347.65643311 262.16851807]
[-340.14273071 248.68493652]
[-329.29528809 237.85343933]
[-315.98681641 230.46292114]
[-301.26565552 227.02883911]
[-286.27337646 227.75759888]
[-272.15634155 232.53506470]
[-259.97790527 240.93978882]
[-250.63848877 252.27951050]
[-237.02810669 245.97415161]
[-223.41772461 239.66879272]
[-215.12194824 227.29829407]
[-199.34780884 228.51779175]
[-185.73742676 222.21243286]
[-172.12705994 215.90707397]
[-158.51667786 209.60171509]
[-157.59722900 192.40954590]
[-148.04827881 177.97663879]
[-132.42497253 170.32850647]
[-114.99127960 171.65293884]
[-100.55632782 181.67503357]
[-87.14067078 174.96533203]
[-73.72500610 168.25563049]
[-60.30934525 161.54592896]
[-46.89368439 154.83624268]
[-33.47802353 148.12654114]
[-32.98830032 141.03810120]
[-30.04363823 134.49694824]
[-24.96624184 129.33369446]
[-18.35218811 126.22177887]
[-11.00166512 125.58982086]
[-3.82221174 127.56318665]
[2.28332639 131.94262695]
[16.16289139 126.25424194]
[30.04245567 120.56586456]
[43.92201996 114.87747955]
[57.80158615 109.18910217]
[53.06383133 83.48952484]
[64.58890533 56.20060349]
[92.01959991 37.61684799]
[128.66642761 36.73175430]
[131.12370300 21.93439484]
[133.58096313 7.13703680]
[123.14593506 -6.90278435]
[126.03622437 -23.81280518]
[139.98200989 -33.21186829]
[142.21763611 -48.04433060]
[136.62356567 -62.84354782]
[146.17134094 -74.27548218]
[148.40698242 -89.10794830]
[150.64260864 -103.94040680]
[147.02450562 -120.50379181]
[161.93899536 -128.56570435]
[173.81459045 -116.46583557]
[165.47508240 -101.70477295]
[163.23944092 -86.87231445]
[161.00381470 -72.03984833]
[166.75778198 -58.30154419]
[157.05009460 -45.80869675]
[154.81446838 -30.97623253]
[163.84149170 -21.78092194]
[165.95544434 -8.87258339]
[160.16337585 3.07206106]
[148.37832642 9.59430599]
[145.92105103 24.39166451]
[143.46379089 39.18902206]
[156.28260803 46.97861481]
[168.28462219 37.98128510]
[173.27449036 30.32926369]
[180.53413391 28.94073105]
[192.66938782 20.12395287]
[197.77317810 12.54743195]
[205.05278015 11.26765537]
[217.31855774 2.63339901]
[229.58435059 -6.00085688]
[228.83140564 -21.40983582]
[236.54850769 -34.76834869]
[250.27316284 -41.81374741]
[265.62585449 -40.29786682]
[277.70764160 -30.70442200]
[282.66323853 -16.09464455]
[278.91134644 -1.13046002]
[267.64916992 9.41311169]
[252.47042847 12.17165756]
[238.21861267 6.26493406]
[225.95281982 14.89918995]
[213.68702698 23.53344536]
[201.48616028 32.25920868]
[189.35090637 41.07598495]
[177.28193665 49.98328781]
[165.27993774 58.98061752]
[167.65086365 66.09600830]
[182.34605408 69.10454559]
[172.39268494 80.32678223]
[174.76361084 87.44216919]
[189.76361084 87.44216919]
[198.77502441 74.80991364]
[213.50111389 69.91891479]
[228.27940369 74.64987183]
[237.42732239 87.18363190]
[237.42732239 102.70070648]
[228.27940369 115.23446655]
[213.50111389 119.96542358]
[198.77502441 115.07443237]
[189.76361084 102.44216919]
[174.76361084 102.44216919]
[172.23362732 109.50257111]
[186.35443115 114.56252289]
[201.34770203 115.01143646]
[205.55375671 129.40966797]
[193.15986633 137.85900879]
[181.29447937 128.68331909]
[167.17367554 123.62336731]
[164.64370728 130.68376160]
[176.22996521 140.21049500]
[187.81620789 149.73724365]
[199.40246582 159.26397705]
[210.98872375 168.79071045]
[222.57498169 178.31744385]
[237.55850220 174.28337097]
[252.03953552 179.85826111]
[260.44982910 192.89845276]
[259.55545044 208.38972473]
[249.70030212 220.37538147]
[234.67390442 224.24667358]
[220.25419617 218.51502991]
[211.98587036 205.38436890]
[213.04824829 189.90370178]
[201.46199036 180.37696838]
[189.87573242 170.85023499]
[178.28947449 161.32348633]
[166.70323181 151.79675293]
[155.11697388 142.27001953]
[132.55682373 155.33853149]
[108.63564301 158.31474304]
[87.35358429 152.18576050]
[71.75432587 139.35464478]
[63.48996735 123.06866455]
[49.61040115 128.75704956]
[35.73083878 134.44543457]
[21.85127258 140.13380432]
[7.97170830 145.82218933]
[-4.63280439 165.29380798]
[-26.76832771 161.54220581]
[-40.18398666 168.25189209]
[-53.59964752 174.96159363]
[-67.01531219 181.67129517]
[-80.43096924 188.38099670]
[-93.84663391 195.09068298]
[-93.39080048 207.99781799]
[-97.83450317 220.07467651]
[-106.48435211 229.53918457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 73]
[4 72]
[5 71]
[6 70]
[8 68]
[9 67]
[10 66]
[18 27]
[19 26]
[28 56]
[29 55]
[30 54]
[31 52]
[32 51]
[34 50]
[35 49]
[36 46]
[37 45]
[38 44]
[39 43]
[78 206]
[79 205]
[80 204]
[81 203]
[82 202]
[83 201]
[90 199]
[91 198]
[92 197]
[93 196]
[94 195]
[98 123]
[99 122]
[100 121]
[103 117]
[104 116]
[106 114]
[107 113]
[108 112]
[124 148]
[125 147]
[127 146]
[128 145]
[130 144]
[131 143]
[132 142]
[152 163]
[153 162]
[171 190]
[172 189]
[173 188]
[174 187]
[175 186]
[176 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
