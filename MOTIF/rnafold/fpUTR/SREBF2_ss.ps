%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGCGGGGGAAUCCCGCCCCGCCCUUUCUGUGCGGCGCCCGGGCGCAACGCAAACAUGGCGGCGGGUGGCACCCGUCGGUGAGGCGGUGCCGGGCGGGGGUUGUCGGGUGUCAUGGGCGGUGGCGACGGCACCGCCCCCGCGUCUCCCUGAGCGGGACGGCAGGGGGGGCUUCUGCGCUGAGCCGGGCG\
) } def
/len { sequence length } bind def

/coor [
[27.39951706 331.60455322]
[25.10210419 333.82046509]
[22.51492500 334.93652344]
[16.35445213 348.61306763]
[10.19397831 362.28964233]
[4.03350449 375.96621704]
[-2.12696910 389.64279175]
[-8.28744316 403.31936646]
[-14.44791603 416.99594116]
[-20.60839081 430.67248535]
[-16.29160881 446.12387085]
[-25.79696846 459.04779053]
[-41.83276749 459.53012085]
[-52.09771729 447.20089722]
[-48.71742249 431.51800537]
[-34.28496170 424.51202393]
[-28.12448692 410.83544922]
[-21.96401215 397.15887451]
[-15.80353928 383.48233032]
[-9.64306545 369.80575562]
[-3.48259187 356.12918091]
[2.67788172 342.45260620]
[8.83835506 328.77603149]
[14.55039787 314.90618896]
[19.80795479 300.85778809]
[25.06551170 286.80935669]
[30.32307053 272.76092529]
[26.49803543 255.64048767]
[40.79003525 244.04039001]
[45.81823349 229.90824890]
[50.84642792 215.77612305]
[47.82313538 201.19157410]
[59.73877335 190.78349304]
[64.76696777 176.65135193]
[69.79516602 162.51922607]
[74.82335663 148.38708496]
[79.85155487 134.25494385]
[84.87974548 120.12281799]
[72.07942200 100.29236603]
[81.06430054 75.86865234]
[69.35861206 66.48905945]
[57.65291977 57.10947037]
[45.94722366 47.72987747]
[34.24153137 38.35028458]
[22.53583908 28.97069168]
[13.86786175 26.04017830]
[10.71758270 19.34191704]
[-0.83388835 9.77303410]
[-12.38535881 0.20415093]
[-18.85262489 -1.28267121]
[-22.97043228 -5.22704077]
[-24.15047264 -9.86907196]
[-35.38435745 -19.80887985]
[-46.61824417 -29.74868965]
[-59.88747787 -27.38504219]
[-71.91761780 -33.01753235]
[-78.40680695 -44.38438797]
[-77.17796326 -57.21974564]
[-88.24857330 -67.34109497]
[-99.31918335 -77.46244049]
[-105.70616150 -79.26317596]
[-109.62651825 -83.40385437]
[-110.57855988 -88.09794617]
[-121.31385803 -98.57427979]
[-132.04914856 -109.05060577]
[-142.78445435 -119.52693176]
[-153.51974487 -130.00325012]
[-164.25503540 -140.47958374]
[-174.99034119 -150.95590210]
[-185.72563171 -161.43223572]
[-201.28437805 -168.16734314]
[-199.11956787 -184.98251343]
[-182.36225891 -187.55720520]
[-175.24931335 -172.16752625]
[-164.51400757 -161.69120789]
[-153.77871704 -151.21487427]
[-143.04341125 -140.73855591]
[-132.30812073 -130.26222229]
[-121.57282257 -119.78589630]
[-110.83753204 -109.30957031]
[-100.10223389 -98.83324432]
[-89.19783783 -88.53304291]
[-78.12722778 -78.41169739]
[-67.05661774 -68.29035187]
[-50.31035995 -69.76403809]
[-37.42110825 -58.45295715]
[-36.67843628 -40.98257446]
[-25.44454956 -31.04276657]
[-14.21066380 -21.10295868]
[-2.81647587 -11.34731960]
[8.73499489 -1.77843666]
[20.28646469 7.79044628]
[31.91543198 17.26499748]
[43.62112427 26.64459038]
[55.32681656 36.02418137]
[67.03250885 45.40377426]
[78.73820496 54.78336716]
[90.44389343 64.16296387]
[105.41955566 63.30884552]
[115.98291016 52.65916824]
[126.54626465 42.00949097]
[137.10961914 31.35981560]
[147.67295837 20.71013832]
[158.23631287 10.06046200]
[168.62492371 -0.75974250]
[178.83602905 -11.74760914]
[189.04714966 -22.73547554]
[199.25825500 -33.72334290]
[209.46936035 -44.71120834]
[209.78013611 -57.61555481]
[218.52391052 -66.55831146]
[230.61689758 -67.12094116]
[241.00549316 -77.94114685]
[251.39410400 -88.76135254]
[261.78271484 -99.58155823]
[272.17132568 -110.40176392]
[282.55993652 -121.22196198]
[283.67239380 -137.22639465]
[296.96008301 -146.21624756]
[312.22976685 -141.29527283]
[317.76788330 -126.23842621]
[309.32604980 -112.59602356]
[293.38012695 -110.83335876]
[282.99151611 -100.01315308]
[272.60290527 -89.19294739]
[262.21432495 -78.37274170]
[251.82569885 -67.55253601]
[241.43710327 -56.73233414]
[238.17343140 -39.49606323]
[220.45722961 -34.50009537]
[210.24612427 -23.51222992]
[200.03501892 -12.52436447]
[189.82389832 -1.53649783]
[179.61279297 9.45136833]
[178.89102173 14.18634415]
[175.17745972 18.51344872]
[168.88598633 20.62381363]
[158.32264709 31.27349091]
[147.75929260 41.92316818]
[137.19593811 52.57284164]
[126.63258362 63.22251892]
[116.06923676 73.87220001]
[123.37382507 83.10704041]
[126.27992249 93.78475952]
[124.84348297 104.04364014]
[138.25810242 110.75541687]
[151.67272949 117.46719360]
[165.08734131 124.17897034]
[178.50196838 130.89074707]
[191.91658020 137.60252380]
[205.33120728 144.31430054]
[218.74583435 151.02607727]
[231.21748352 147.69790649]
[242.25704956 153.57621765]
[246.19540405 165.02374268]
[259.49899292 171.95297241]
[274.49569702 166.96549988]
[288.58901978 174.11766052]
[293.41766357 189.16624451]
[286.11688232 203.18316650]
[271.01809692 207.85244751]
[257.07916260 200.40388489]
[252.56976318 185.25657654]
[239.26617432 178.32733154]
[221.80734253 180.03898621]
[212.03405762 164.44070435]
[198.61943054 157.72892761]
[185.20480347 151.01715088]
[171.79019165 144.30537415]
[158.37556458 137.59359741]
[144.96095276 130.88182068]
[131.54632568 124.17003632]
[118.13170624 117.45825958]
[112.57483673 121.80419922]
[106.03019714 124.43740082]
[99.01188660 125.15100861]
[93.98368835 139.28314209]
[88.95549011 153.41528320]
[83.92729950 167.54740906]
[78.89910126 181.67955017]
[73.87091064 195.81169128]
[76.53454590 211.40705872]
[64.97856140 220.80432129]
[59.95036697 234.93644714]
[54.92217255 249.06858826]
[59.74436569 261.04211426]
[55.25420761 272.71536255]
[44.37149048 278.01849365]
[39.11393356 292.06692505]
[33.85637283 306.11532593]
[28.59881783 320.16375732]
[29.47572708 324.45150757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[24 191]
[25 190]
[26 189]
[27 188]
[29 185]
[30 184]
[31 183]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[40 98]
[41 97]
[42 96]
[43 95]
[44 94]
[45 93]
[47 92]
[48 91]
[49 90]
[52 89]
[53 88]
[54 87]
[58 84]
[59 83]
[60 82]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[99 142]
[100 141]
[101 140]
[102 139]
[103 138]
[104 137]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
[145 173]
[146 172]
[147 171]
[148 170]
[149 169]
[150 168]
[151 167]
[152 166]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
