%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCGCAGCCGCCCGAACACGCCCAGACCGAGCGCUUGAGGUGCCGCAGCCGCCGCCGCCGCCGCCGCCGCGAUGUGACCUUCAGGGCCGCCAGGACGGGAUGACCGGAGCCUCCGCCCCGCGGCGCCCGCGGCUCGCCUCGGCCUCCCGGGCGCUCUGACCGCGCGUCCCCGGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[12.93494511 907.60009766]
[-2.08312273 911.95800781]
[-16.36790657 905.59570312]
[-23.17456627 891.51721191]
[-19.28920555 876.36999512]
[-6.54637480 867.30609131]
[-5.52273846 852.34106445]
[-4.49910259 837.37603760]
[-12.21629143 828.04150391]
[-11.47081089 815.55114746]
[-2.11775565 806.64685059]
[-0.83876991 791.70147705]
[0.44021574 776.75610352]
[1.71920133 761.81072998]
[-8.55547428 755.29479980]
[-15.11563492 744.96258545]
[-16.66007042 732.74865723]
[-12.83361912 720.97125244]
[-4.30641222 711.89208984]
[7.34259129 707.28222656]
[9.13108253 692.38928223]
[2.96648598 678.83026123]
[12.29402351 666.05102539]
[14.08251572 651.15808105]
[15.87100697 636.26507568]
[4.36782694 630.17572021]
[-4.39747477 620.51098633]
[-9.36212158 608.41040039]
[-9.91315460 595.31054688]
[-5.96302986 582.77478027]
[2.03733301 572.30651855]
[13.14991474 565.16894531]
[26.05953979 562.23266602]
[28.35545158 547.40942383]
[30.65136528 532.58618164]
[32.94727707 517.76293945]
[35.24319077 502.93966675]
[37.53910065 488.11642456]
[39.83501434 473.29315186]
[42.13092804 458.46990967]
[44.42683792 443.64666748]
[42.33858490 436.53839111]
[46.89057159 428.59078979]
[49.43922424 413.80889893]
[42.48971939 397.70565796]
[54.35980988 383.64236450]
[56.65572357 368.81909180]
[58.95163345 353.99584961]
[61.24754715 339.17260742]
[52.27176285 327.34167480]
[54.38898087 312.27606201]
[66.85920715 302.94165039]
[69.15512085 288.11840820]
[61.93169403 272.13613892]
[73.55995178 257.87225342]
[75.60245514 243.01194763]
[77.64495087 228.15167236]
[79.68745422 213.29138184]
[81.72994995 198.43109131]
[83.39123535 183.52336121]
[84.67022705 168.57798767]
[85.94921112 153.63261414]
[87.22819519 138.68724060]
[88.50717926 123.74187469]
[89.78616333 108.79650116]
[85.00501251 94.57888031]
[74.95537567 83.44314575]
[64.90573120 72.30740356]
[49.14533615 67.77508545]
[45.45336914 51.79693222]
[57.62781143 40.80989456]
[73.14463806 46.11649704]
[76.04147339 62.25776291]
[86.09111023 73.39350128]
[96.14075470 84.52924347]
[103.56191254 83.44460297]
[100.08127594 68.85401154]
[96.60064697 54.26342773]
[93.12001801 39.67284012]
[86.35189056 26.28656006]
[93.26239014 12.97322178]
[108.10474396 10.80419922]
[118.53604126 21.58325195]
[115.88197327 36.34605789]
[116.72272491 51.32247543]
[117.56346893 66.29889679]
[118.40422058 81.27531433]
[125.82537842 80.19067383]
[132.26762390 66.64455414]
[138.70988464 53.09843063]
[145.15213013 39.55231094]
[139.05451965 29.31351280]
[138.67173767 17.52278900]
[143.98326111 7.12384605]
[153.56135559 0.65685940]
[164.95277405 -0.36177349]
[171.85375977 -13.68005180]
[178.75473022 -26.99832916]
[176.90681458 -47.05620956]
[193.59049988 -56.80337906]
[200.03274536 -70.34949493]
[206.47500610 -83.89562225]
[202.47898865 -99.43303680]
[212.24981689 -112.15743256]
[228.29217529 -112.30773926]
[238.29971313 -99.76865387]
[234.59552002 -84.15908813]
[220.02111816 -77.45336914]
[213.57887268 -63.90724564]
[207.13662720 -50.36112595]
[211.41920471 -41.05150223]
[209.82443237 -30.70641899]
[202.64170837 -22.79289436]
[192.07301331 -20.09735489]
[185.17202759 -6.77907610]
[178.27105713 6.53920221]
[184.85806274 23.60072517]
[176.76539612 40.35644913]
[158.69825745 45.99456024]
[152.25599670 59.54068375]
[145.81375122 73.08679962]
[139.37149048 86.63292694]
[124.25160980 110.31715393]
[104.73154449 110.07548523]
[103.45255280 125.02085876]
[102.17356873 139.96623230]
[100.89458466 154.91160583]
[99.61560059 169.85697937]
[98.33660889 184.80235291]
[100.57569885 189.57035828]
[100.73017883 194.24945068]
[99.18711853 198.05535889]
[96.59024048 200.47358704]
[94.54773712 215.33387756]
[92.50524139 230.19416809]
[90.46273804 245.05445862]
[88.42024231 259.91473389]
[95.58364105 270.65957642]
[93.56116486 283.00765991]
[83.97837067 290.41433716]
[81.68245697 305.23757935]
[90.74459076 317.90704346]
[88.20504761 332.90722656]
[76.07080078 341.46850586]
[73.77488708 356.29174805]
[71.47897339 371.11502075]
[69.18305969 385.93826294]
[76.16197205 396.80383301]
[73.92897034 409.11560059]
[64.22111511 416.35757446]
[61.67246246 431.13946533]
[59.25009155 445.94256592]
[56.95417786 460.76580811]
[54.65826416 475.58908081]
[52.36235428 490.41232300]
[50.06644058 505.23556519]
[47.77052689 520.05883789]
[45.47461700 534.88208008]
[43.17870331 549.70532227]
[40.88278961 564.52856445]
[55.19859695 573.97528076]
[63.92723846 588.67559814]
[65.35947418 605.65655518]
[59.25609207 621.50811768]
[46.88627625 633.06823730]
[30.76400185 638.05352783]
[28.97550964 652.94653320]
[27.18701935 667.83953857]
[33.22369003 682.46380615]
[24.02407837 694.17773438]
[22.23558617 709.07073975]
[35.88336945 720.97790527]
[39.63681412 738.53613281]
[32.18164444 754.69757080]
[16.66457558 763.08972168]
[15.38558960 778.03509521]
[14.10660362 792.98046875]
[12.82761860 807.92584229]
[21.03051949 824.39971924]
[10.46592903 838.39971924]
[9.44229317 853.36474609]
[8.41865635 868.32977295]
[19.80859947 879.04437256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 182]
[7 181]
[8 180]
[11 178]
[12 177]
[13 176]
[14 175]
[20 171]
[21 170]
[23 168]
[24 167]
[25 166]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[43 151]
[44 150]
[46 147]
[47 146]
[48 145]
[49 144]
[52 141]
[53 140]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 75]
[67 74]
[68 73]
[88 122]
[89 121]
[90 120]
[91 119]
[96 116]
[97 115]
[98 114]
[100 110]
[101 109]
[102 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
