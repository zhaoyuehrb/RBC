%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGUCUGCGCAGCUGCCAGCGCCUUUAAGCCCGGGCUCGCGCUCUCGGACCGUGCUUUCGCCGCCUGGGAGCCGUCCGGCGCAGCAGUUUCUAGGUCCCCACUGUCCCCGCCGUCCCGCCCCUUCGCGUCCCGGGAACCGGCUGGCUUCCGAGCCGCACUCGCCGAUCCUCCAGGC\
) } def
/len { sequence length } bind def

/coor [
[189.26092529 597.84954834]
[186.38301086 583.12817383]
[183.50508118 568.40686035]
[180.62715149 553.68554688]
[177.74922180 538.96423340]
[165.28721619 530.88745117]
[162.15887451 515.99896240]
[170.71501160 502.98239136]
[167.83708191 488.26107788]
[164.95915222 473.53973389]
[162.08123779 458.81842041]
[158.66551208 455.44271851]
[157.35238647 449.87582397]
[159.37017822 443.53042603]
[157.01066589 428.71716309]
[154.65113831 413.90390015]
[151.64414978 399.20840454]
[147.99545288 384.65893555]
[144.34675598 370.10946655]
[140.69805908 355.55999756]
[137.04937744 341.01052856]
[133.40068054 326.46105957]
[121.79193878 325.59075928]
[110.87684631 321.48818970]
[101.53796387 314.47348022]
[94.53362274 305.10272217]
[90.43640900 294.12377930]
[89.58632660 282.41677856]
[92.06262970 270.92337036]
[97.67656708 260.57113647]
[105.98570251 252.19866943]
[116.32881165 246.48764038]
[113.70968628 231.71807861]
[111.09056091 216.94850159]
[108.47143555 202.17893982]
[105.85231018 187.40936279]
[103.23318481 172.63980103]
[93.48882294 165.44152832]
[91.19959259 153.13670349]
[98.13302612 142.23803711]
[95.77351379 127.42478180]
[93.41399384 112.61151886]
[84.66123199 100.43000793]
[71.37468719 93.46813202]
[58.08814621 86.50624847]
[44.80160522 79.54437256]
[31.51506233 72.58248901]
[18.22851944 65.62060547]
[4.94197607 58.65872955]
[-8.34456635 51.69684601]
[-20.88564301 54.79117966]
[-31.81723785 48.69613647]
[-35.53079987 37.16456604]
[-48.69311523 29.97058105]
[-57.75323868 28.59335518]
[-62.02168655 22.53308868]
[-75.05571747 15.10921288]
[-91.44248962 15.74617577]
[-99.95742035 1.73089457]
[-91.84107208 -12.51891041]
[-75.44285583 -12.34426117]
[-67.63184357 2.07517743]
[-54.59780884 9.49905205]
[-41.49913025 16.80826378]
[-28.33681297 24.00224876]
[-10.85365200 22.63413620]
[-1.38268626 38.41030502]
[11.90385628 45.37218475]
[25.19039917 52.33406448]
[38.47694397 59.29594421]
[51.76348495 66.25782776]
[65.05002594 73.21970367]
[78.33657074 80.18158722]
[91.62311554 87.14346313]
[98.49419403 84.13710022]
[92.48168182 70.39483643]
[106.22404480 64.38255310]
[112.23635101 78.12435913]
[119.10743713 75.11798859]
[123.01090240 60.63479233]
[126.91437531 46.15159988]
[130.81785583 31.66840553]
[134.72132874 17.18521118]
[125.72074890 2.20112848]
[130.23881531 -14.33485603]
[145.01499939 -22.33875084]
[148.66369629 -36.88821793]
[152.31239319 -51.43768692]
[155.96107483 -65.98715973]
[159.60977173 -80.53662872]
[147.84918213 -90.26551819]
[141.48226929 -104.13726044]
[141.77319336 -119.39760590]
[148.66418457 -133.01660156]
[160.78701782 -142.29019165]
[175.73472595 -145.37709045]
[190.53941345 -141.66438293]
[202.26159668 -131.88925171]
[208.57383728 -117.99255371]
[208.22282410 -102.73347473]
[201.27825928 -89.14171600]
[189.11898804 -79.91594696]
[174.15924072 -76.88793182]
[170.51054382 -62.33846283]
[166.86186218 -47.78899384]
[163.21316528 -33.23952866]
[159.56446838 -18.69005775]
[167.67471313 -8.65569210]
[168.52841187 4.41334105]
[161.58918762 15.74980068]
[149.20451355 21.08868408]
[145.30104065 35.57187653]
[141.39756775 50.05507278]
[137.49409485 64.53826904]
[133.59062195 79.02146149]
[143.95985413 68.18268585]
[158.95776367 68.43304443]
[172.66009521 74.53603363]
[182.87858582 85.51702881]
[187.98141479 99.62238312]
[187.15365601 114.59952545]
[180.52749634 128.05664062]
[169.16113281 137.84468079]
[154.86972046 142.40051270]
[139.93556213 140.99656677]
[126.74360657 133.85708618]
[117.39978027 122.12065125]
[108.22725677 110.25199890]
[110.58676910 125.06526184]
[112.94628906 139.87852478]
[124.87677002 153.88745117]
[118.00275421 170.02067566]
[120.62187958 184.79023743]
[123.24100494 199.55981445]
[125.86013031 214.32937622]
[128.47924805 229.09895325]
[131.09837341 243.86851501]
[149.19338989 248.23753357]
[163.53453064 260.02581787]
[171.28082275 276.84088135]
[170.92272949 295.30023193]
[162.57609558 311.71179199]
[147.95014954 322.81237793]
[151.59884644 337.36184692]
[155.24752808 351.91131592]
[158.89622498 366.46078491]
[162.54492188 381.01025391]
[166.19361877 395.55972290]
[176.14958191 384.34014893]
[191.13722229 384.94894409]
[200.15039062 396.93905640]
[196.57029724 411.50555420]
[183.02595520 417.95156860]
[169.46440125 411.54440308]
[171.82391357 426.35766602]
[174.18344116 441.17092896]
[176.80256653 455.94049072]
[179.68048096 470.66180420]
[182.55841064 485.38314819]
[185.43634033 500.10446167]
[198.26451111 508.94052124]
[200.97343445 523.91101074]
[192.47055054 536.08630371]
[195.34848022 550.80761719]
[198.22640991 565.52893066]
[201.10433960 580.25030518]
[203.98225403 594.97161865]
[218.76191711 598.78271484]
[230.41879272 608.63562012]
[236.63842773 622.57403564]
[236.18589783 637.83044434]
[229.15104675 651.37567139]
[216.93066406 660.52032471]
[201.95111084 663.44873047]
[187.18658447 659.57946777]
[175.56858826 649.68072510]
[169.40388489 635.71795654]
[169.91650391 620.46343994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[5 163]
[8 160]
[9 159]
[10 158]
[11 157]
[14 156]
[15 155]
[16 154]
[17 148]
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[32 137]
[33 136]
[34 135]
[35 134]
[36 133]
[37 132]
[40 130]
[41 129]
[42 128]
[43 74]
[44 73]
[45 72]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[53 65]
[54 64]
[56 63]
[57 62]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
