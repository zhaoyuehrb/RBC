%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGGUCGCCUGACUGGGCUCCUCCCCGGGCCCGCCCCGACAGGUUUGUCUUGUGACCGCGGGCGGCCGCUGCUUCUUUCCCGAGCUUGGAACUUCGUUAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[260.34393311 192.37278748]
[245.65388489 189.33924866]
[237.18891907 176.95602417]
[239.69575500 162.16699219]
[251.76800537 153.26525879]
[237.39816284 148.96321106]
[223.02832031 144.66114807]
[208.65847778 140.35910034]
[194.28863525 136.05705261]
[179.91879272 131.75500488]
[166.97125244 139.02803040]
[152.33689880 134.86984253]
[144.79608154 121.23995972]
[130.42623901 116.93791199]
[116.05638885 112.63586426]
[97.33509827 124.75685883]
[73.58527374 112.83425140]
[58.64235687 114.14158630]
[43.69943619 115.44892120]
[28.75651550 116.75625610]
[13.81359482 118.06359100]
[-1.12932599 119.37093353]
[-11.09485340 131.63729858]
[-26.82355881 133.18110657]
[-38.98388290 123.08645630]
[-40.36131668 107.34230804]
[-30.13865471 95.28939056]
[-14.38082314 94.07849121]
[-2.43666220 104.42800903]
[12.50625801 103.12067413]
[27.44917870 101.81333923]
[42.39209747 100.50600433]
[57.33501816 99.19866180]
[72.27793884 97.89132690]
[77.40824127 83.79593658]
[66.80164337 73.18933868]
[56.19503784 62.58273697]
[40.39273834 62.83337021]
[29.09988976 51.77682495]
[29.01634216 35.97275925]
[40.19166183 24.79743767]
[55.99573135 24.88098526]
[67.05227661 36.17383194]
[66.80164337 51.97613525]
[77.40824127 62.58273697]
[88.01484680 73.18933868]
[105.63062286 74.21858978]
[117.59452057 84.55686188]
[120.35843658 98.26602173]
[134.72828674 102.56806946]
[149.09812927 106.87011719]
[162.88813782 99.62626648]
[177.39991760 104.19386292]
[184.22084045 117.38516998]
[198.59068298 121.68721771]
[212.96052551 125.98926544]
[227.33036804 130.29130554]
[241.70021057 134.59336853]
[256.07003784 138.89541626]
[270.76016235 141.92868042]
[285.65872192 143.67007446]
[300.55731201 145.41145325]
[315.45587158 147.15284729]
[330.41622925 148.24272156]
[345.40988159 148.67900085]
[360.40353394 149.11526489]
[375.39718628 149.55152893]
[390.39086914 149.11526489]
[405.33377075 147.80792236]
[420.27670288 146.50059509]
[429.23507690 137.08085632]
[441.81195068 136.37872314]
[451.14562988 144.22509766]
[466.12023926 143.35292053]
[481.09484863 142.48074341]
[496.06948853 141.60856628]
[505.26184082 128.95809937]
[520.44757080 125.22619629]
[534.45648193 132.17494202]
[540.67395020 146.52337646]
[536.16424561 161.49658203]
[523.05682373 170.02467346]
[507.54049683 168.08096313]
[496.94165039 156.58319092]
[481.96704102 157.45536804]
[466.99240112 158.32754517]
[452.01779175 159.19970703]
[437.99365234 169.63807678]
[421.58404541 161.44351196]
[406.64111328 162.75085449]
[391.69818115 164.05818176]
[389.76486206 166.28952026]
[386.76287842 167.82582092]
[382.97738647 168.22880554]
[378.85659790 167.18162537]
[374.96093750 164.54519653]
[359.96728516 164.10891724]
[344.97363281 163.67265320]
[329.97998047 163.23637390]
[327.10397339 165.52249146]
[322.92553711 166.44128418]
[318.14282227 165.37228394]
[313.71447754 162.05143738]
[298.81591797 160.31004333]
[283.91732788 158.56864929]
[269.01876831 156.82725525]
[276.57800293 169.78324890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 59]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[13 51]
[14 50]
[15 49]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[35 46]
[36 45]
[37 44]
[60 106]
[61 105]
[62 104]
[63 103]
[64 99]
[65 98]
[66 97]
[67 96]
[68 91]
[69 90]
[70 89]
[73 87]
[74 86]
[75 85]
[76 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
