%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCUUCGUCGCGGCCUCUAGUGCACUUUCGGCUCCUUCCCCUUCCCGGGCCUUUCAGCUUGGUCUUUCCGGGCCUCGCUUCCCCCAGCCCCUGCGCCCGGCCCGAACGAGAGGUUCCGGAGCCCCGGCGCGGGCGGGUUCUGGGGUGUAGACGCUGCUGGCCAGCCCGCCCCAGCCGAGGUUCUCGGCACCGCCUUGAGAGCUUCAGCUGCCCCAGGGUGUGCAGAUUAGAAUCCCAAGAAAAUCAA\
) } def
/len { sequence length } bind def

/coor [
[177.17089844 272.37322998]
[184.44480896 259.25491333]
[193.91464233 247.62210083]
[205.28457642 237.83819580]
[218.19940186 230.20883179]
[232.25569153 224.97235107]
[247.01432800 222.29232788]
[262.01428223 222.25247192]
[276.79364014 224.85585022]
[264.33471680 216.50271606]
[251.87577820 208.14958191]
[239.36459351 199.87489319]
[226.80168152 191.67898560]
[214.23875427 183.48306274]
[201.67584229 175.28715515]
[189.11291504 167.09123230]
[174.22584534 166.61734009]
[166.89543152 152.59678650]
[154.33251953 144.40087891]
[141.76959229 136.20495605]
[129.20668030 128.00904846]
[125.39411163 132.59738159]
[120.85794830 136.65747070]
[115.67300415 140.07514954]
[109.93203735 142.74707031]
[103.74422455 144.58360291]
[97.23302460 145.51132202]
[90.53376007 145.47537231]
[83.79080963 144.44123840]
[77.15446472 142.39631653]
[70.77763367 139.35079956]
[64.81232452 135.33818054]
[51.66772079 142.56448364]
[38.52312088 149.79078674]
[25.37852287 157.01708984]
[12.23392200 164.24339294]
[13.10697269 179.48152161]
[7.27405310 193.58612061]
[-4.10670710 203.75672913]
[-18.77565002 207.97393799]
[-33.82024384 205.40043640]
[-46.25337601 196.54719543]
[-53.60644150 183.17201233]
[-54.41947556 167.93057251]
[-48.53105927 153.84904480]
[-37.11033630 143.72334290]
[-22.42490005 139.56393433]
[-7.39055586 142.19665527]
[5.00761652 151.09880066]
[18.15221596 143.87249756]
[31.29681778 136.64617920]
[44.44141769 129.41987610]
[57.58601761 122.19357300]
[56.36623764 114.79343414]
[41.56591034 117.23274231]
[39.12684250 102.43237305]
[53.92668152 99.99314117]
[52.70690155 92.59299469]
[37.93843842 89.96765137]
[23.16997337 87.34230804]
[10.30189705 96.12014008]
[-4.63802767 93.24728394]
[-12.92705059 80.92544556]
[-27.69551468 78.30010223]
[-42.46398163 75.67475128]
[-57.23244476 73.04940796]
[-72.00090790 70.42406464]
[-87.22613525 76.51705170]
[-99.94638824 66.16681671]
[-97.07615662 50.02080536]
[-81.56809998 44.68863678]
[-69.37556458 55.65559769]
[-54.60709763 58.28094482]
[-39.83863449 60.90628815]
[-25.07016945 63.53163528]
[-10.30170441 66.15698242]
[1.72611606 57.44680786]
[16.74083900 59.89889908]
[25.79531860 72.57384491]
[40.56378174 75.19918823]
[55.33224869 77.82453156]
[63.92829895 70.28463745]
[73.49385834 65.38130188]
[83.30828857 63.13642120]
[79.76080322 48.56194687]
[76.21331787 33.98747253]
[72.66583252 19.41299438]
[69.11834717 4.83851910]
[65.57086182 -9.73595715]
[61.74930191 -24.24097824]
[57.65502167 -38.67139435]
[53.47015381 -53.07579803]
[49.19486618 -67.45362854]
[44.91957855 -81.83145142]
[40.64428711 -96.20928192]
[36.36899948 -110.58710480]
[32.09371185 -124.96493530]
[27.81842041 -139.34275818]
[23.54313278 -153.72058105]
[9.88109779 -166.08428955]
[14.65338135 -182.98310852]
[10.19775772 -197.30607605]
[5.74213409 -211.62904358]
[1.19660485 -225.92373657]
[-3.43865013 -240.18959045]
[-8.07390499 -254.45542908]
[-12.79870319 -268.69186401]
[-17.61285782 -282.89834595]
[-22.42701149 -297.10482788]
[-36.11735153 -305.46868896]
[-37.97095871 -321.40429688]
[-26.56590843 -332.68722534]
[-10.65117645 -330.66217041]
[-2.43518329 -316.88256836]
[-8.22053623 -301.91897583]
[-3.40638232 -287.71249390]
[1.40777183 -273.50604248]
[6.51805258 -268.19332886]
[6.19194269 -259.09069824]
[10.82719803 -244.82484436]
[15.46245289 -230.55899048]
[20.50556946 -225.18249512]
[20.06510162 -216.08467102]
[24.52072525 -201.76170349]
[28.97634888 -187.43873596]
[39.52342606 -181.54797363]
[43.36213303 -169.67185974]
[37.92095947 -157.99588013]
[42.19624710 -143.61804199]
[46.47153854 -129.24021912]
[50.74682617 -114.86239624]
[55.02211380 -100.48456573]
[59.29740524 -86.10674286]
[63.57269287 -71.72891235]
[67.84798431 -57.35108948]
[72.75439453 -51.84954834]
[72.08543396 -42.76567459]
[76.17971802 -28.33525848]
[79.03840637 -26.31223106]
[81.06980133 -22.81577301]
[81.59718323 -18.24485970]
[80.14533997 -13.28344154]
[83.69282532 1.29103422]
[87.24031067 15.86550999]
[90.78778839 30.43998528]
[94.33527374 45.01446152]
[97.88275909 59.58893967]
[123.48767853 67.04752350]
[138.89103699 88.81857300]
[137.40258789 115.44612885]
[149.96551514 123.64204407]
[162.52842712 131.83795166]
[175.09135437 140.03387451]
[190.87699890 141.09400940]
[197.30883789 154.52832031]
[209.87174988 162.72422791]
[222.43467712 170.92015076]
[234.99758911 179.11605835]
[247.56051636 187.31198120]
[256.43310547 189.37150574]
[260.22891235 195.69064331]
[272.68783569 204.04377747]
[285.14678955 212.39691162]
[291.71359253 212.12918091]
[297.17004395 214.60424805]
[300.54943848 218.83366394]
[315.24725342 221.82931519]
[330.31463623 217.00392151]
[341.24032593 227.12712097]
[355.93814087 230.12275696]
[370.63595581 233.11840820]
[385.33380127 236.11405945]
[400.03161621 239.10971069]
[414.81628418 241.64221191]
[429.67321777 243.70907593]
[444.53012085 245.77592468]
[459.38705444 247.84277344]
[474.12170410 242.08081055]
[485.66146851 251.49800110]
[500.51837158 253.56484985]
[515.37530518 255.63171387]
[530.23223877 257.69857788]
[545.08917236 259.76541138]
[559.94604492 261.83227539]
[574.80297852 263.89913940]
[589.65991211 265.96597290]
[604.51684570 268.03283691]
[619.39855957 269.91284180]
[634.30273438 271.60568237]
[649.20690918 273.29852295]
[665.62719727 269.07836914]
[674.22802734 283.68869019]
[662.56964111 295.99795532]
[647.51403809 288.20269775]
[632.60986328 286.50985718]
[617.70568848 284.81701660]
[613.49493408 287.02142334]
[607.85791016 286.62161255]
[602.44995117 282.88977051]
[587.59307861 280.82290649]
[572.73614502 278.75604248]
[557.87921143 276.68920898]
[543.02227783 274.62234497]
[528.16534424 272.55548096]
[513.30847168 270.48864746]
[498.45153809 268.42178345]
[483.59460449 266.35491943]
[469.92260742 272.26473999]
[457.32019043 262.69970703]
[442.46328735 260.63284302]
[427.60635376 258.56597900]
[412.74942017 256.49914551]
[419.70303345 269.79000854]
[413.76568604 283.56494141]
[399.32870483 287.63592529]
[387.06964111 278.99212646]
[386.05532837 264.02645874]
[397.03598022 253.80754089]
[382.33813477 250.81188965]
[367.64031982 247.81623840]
[352.94250488 244.82058716]
[338.24465942 241.82493591]
[324.22857666 246.86460876]
[312.25161743 236.52714539]
[297.55380249 233.53149414]
[309.78564453 242.21377563]
[320.29785156 252.91390991]
[328.76208496 265.29763794]
[334.91390991 278.97811890]
[338.56115723 293.52795410]
[339.58984375 308.49261475]
[337.96789551 323.40466309]
[333.74594116 337.79824829]
[327.05587769 351.22372437]
[318.10671997 363.26168823]
[307.17800903 373.53607178]
[294.61111450 381.72592163]
[280.79867554 387.57540894]
[266.17214966 390.90179443]
[251.18847656 391.60116577]
[236.31570435 389.65167236]
[222.01844788 385.11422729]
[208.74334717 378.13055420]
[196.90510559 368.91882324]
[186.87353516 357.76678467]
[178.96200562 345.02285767]
[173.41767883 331.08514404]
[170.41374207 316.38900757]
[170.04403687 301.39355469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 163]
[10 162]
[11 161]
[12 159]
[13 158]
[14 157]
[15 156]
[16 155]
[18 153]
[19 152]
[20 151]
[21 150]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[58 81]
[59 80]
[60 79]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[84 147]
[85 146]
[86 145]
[87 144]
[88 143]
[89 142]
[90 138]
[91 137]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[101 125]
[102 124]
[103 123]
[104 121]
[105 120]
[106 119]
[107 117]
[108 116]
[109 115]
[166 225]
[167 224]
[169 222]
[170 221]
[171 220]
[172 219]
[173 218]
[174 212]
[175 211]
[176 210]
[177 209]
[179 207]
[180 206]
[181 205]
[182 204]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
