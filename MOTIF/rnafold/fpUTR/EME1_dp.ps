%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EME1)
} def

/sequence { (\
AGGAGAUCUACUUCCGGGCCCUGCGUGGCAGUUGAAAGAGUGGCGGGAGAAGUUGCAGGGAAUUAUUUGAUAGCACAUACUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.032935567 ubox
1 12 0.030574326 ubox
1 13 0.010549482 ubox
1 64 0.007721876 ubox
1 67 0.004802455 ubox
1 68 0.007742515 ubox
1 81 0.027534485 ubox
2 8 0.034855765 ubox
2 9 0.034813224 ubox
2 11 0.035606987 ubox
2 12 0.014921112 ubox
2 13 0.003411220 ubox
2 14 0.246293328 ubox
2 15 0.949115418 ubox
2 80 0.026999401 ubox
2 81 0.011666579 ubox
3 7 0.022616803 ubox
3 8 0.036055606 ubox
3 11 0.015408149 ubox
3 12 0.003425966 ubox
3 13 0.249535994 ubox
3 14 0.950236901 ubox
3 64 0.004336585 ubox
3 67 0.003660325 ubox
3 80 0.012550505 ubox
4 12 0.296052169 ubox
4 13 0.933906024 ubox
4 63 0.004400141 ubox
4 66 0.003629805 ubox
4 68 0.008980348 ubox
4 81 0.021035846 ubox
5 11 0.334956489 ubox
5 12 0.800772765 ubox
5 13 0.022193100 ubox
5 14 0.046358501 ubox
5 54 0.006879941 ubox
5 64 0.004436869 ubox
5 67 0.009703908 ubox
5 80 0.021499977 ubox
6 12 0.037927371 ubox
6 13 0.046631811 ubox
6 53 0.007777712 ubox
6 63 0.004561003 ubox
6 66 0.009685099 ubox
6 71 0.066365966 ubox
6 78 0.016114812 ubox
7 17 0.007364245 ubox
7 18 0.027917667 ubox
7 35 0.065895999 ubox
7 39 0.014247296 ubox
7 50 0.006433208 ubox
7 59 0.003659701 ubox
7 61 0.004654593 ubox
7 62 0.003810436 ubox
7 65 0.008756723 ubox
7 70 0.068988821 ubox
7 77 0.015567527 ubox
8 16 0.010038421 ubox
8 17 0.038091945 ubox
8 18 0.008840019 ubox
8 34 0.070055352 ubox
8 38 0.015337843 ubox
8 43 0.016469822 ubox
8 49 0.006626625 ubox
8 52 0.021350974 ubox
8 58 0.004338895 ubox
8 60 0.005044604 ubox
8 69 0.069418277 ubox
8 73 0.030352081 ubox
9 16 0.036590910 ubox
9 17 0.008816311 ubox
9 34 0.004241242 ubox
9 37 0.015197312 ubox
9 42 0.016796211 ubox
9 48 0.004968923 ubox
9 51 0.025081733 ubox
9 57 0.004283668 ubox
9 59 0.004927705 ubox
9 65 0.011891572 ubox
9 69 0.006209617 ubox
9 72 0.030572358 ubox
10 32 0.071096598 ubox
10 33 0.003985890 ubox
10 41 0.016902332 ubox
10 53 0.011677470 ubox
10 64 0.012331736 ubox
10 68 0.012924549 ubox
10 71 0.029304336 ubox
11 17 0.017795665 ubox
11 18 0.017309321 ubox
11 31 0.075300929 ubox
11 40 0.016906075 ubox
11 49 0.069192267 ubox
11 52 0.012415825 ubox
11 73 0.036323505 ubox
12 16 0.016089110 ubox
12 17 0.016108008 ubox
12 30 0.073837288 ubox
12 39 0.016592828 ubox
12 48 0.069237243 ubox
12 49 0.026919275 ubox
12 51 0.012300699 ubox
12 61 0.005760615 ubox
12 62 0.020321176 ubox
12 70 0.008308884 ubox
12 72 0.036253746 ubox
13 30 0.003583653 ubox
13 35 0.004332050 ubox
13 38 0.015776344 ubox
13 47 0.068942816 ubox
13 48 0.033444042 ubox
13 50 0.011408607 ubox
13 60 0.005991143 ubox
13 61 0.022606460 ubox
13 69 0.007982847 ubox
13 70 0.018900428 ubox
14 28 0.076302215 ubox
14 34 0.004699077 ubox
14 38 0.003464070 ubox
14 46 0.069023857 ubox
14 47 0.034969243 ubox
14 49 0.011196810 ubox
14 59 0.006161718 ubox
14 60 0.022543368 ubox
14 69 0.019195390 ubox
15 27 0.076390701 ubox
15 34 0.008180397 ubox
15 45 0.068797482 ubox
15 46 0.034997141 ubox
15 58 0.006178752 ubox
15 59 0.022391540 ubox
15 69 0.064200234 ubox
15 82 0.047047192 ubox
16 26 0.076134850 ubox
16 33 0.007886703 ubox
16 44 0.041260183 ubox
16 64 0.132658497 ubox
16 67 0.014067598 ubox
16 68 0.068037755 ubox
16 81 0.072636202 ubox
17 32 0.006555232 ubox
17 33 0.004928514 ubox
17 63 0.154116567 ubox
17 64 0.070530768 ubox
17 66 0.011567781 ubox
17 67 0.067514102 ubox
17 68 0.011558405 ubox
17 80 0.074508159 ubox
17 81 0.041599416 ubox
18 24 0.076629541 ubox
18 29 0.017322009 ubox
18 32 0.004805743 ubox
18 41 0.026725000 ubox
18 44 0.066631867 ubox
18 53 0.004150997 ubox
18 56 0.022800138 ubox
18 63 0.060369075 ubox
18 66 0.066655110 ubox
18 67 0.013213339 ubox
18 74 0.022278089 ubox
18 80 0.043536059 ubox
19 23 0.076075869 ubox
19 28 0.017570343 ubox
19 31 0.004385922 ubox
19 40 0.026927426 ubox
19 43 0.071073143 ubox
19 47 0.019740350 ubox
19 52 0.004212952 ubox
19 55 0.022788980 ubox
19 59 0.004836283 ubox
19 60 0.988192558 ubox
19 73 0.016645625 ubox
20 27 0.017433318 ubox
20 28 0.007451169 ubox
20 42 0.071053999 ubox
20 43 0.004939370 ubox
20 46 0.019679680 ubox
20 47 0.061526764 ubox
20 58 0.003491375 ubox
20 59 0.991500106 ubox
20 60 0.005806872 ubox
21 27 0.007723235 ubox
21 31 0.067817118 ubox
21 38 0.022138925 ubox
21 40 0.030573872 ubox
21 42 0.004899269 ubox
21 43 0.006097242 ubox
21 45 0.019027998 ubox
21 46 0.061695875 ubox
21 47 0.004471504 ubox
21 49 0.006817203 ubox
21 52 0.005836277 ubox
21 58 0.991525144 ubox
21 59 0.004428496 ubox
22 30 0.068331440 ubox
22 37 0.021834347 ubox
22 39 0.029823681 ubox
22 42 0.006130982 ubox
22 45 0.061202394 ubox
22 46 0.004074088 ubox
22 48 0.006727387 ubox
22 51 0.005790847 ubox
22 57 0.991304500 ubox
22 75 0.004139691 ubox
23 29 0.068685744 ubox
23 32 0.021533626 ubox
23 41 0.010088592 ubox
23 44 0.062432021 ubox
23 56 0.991525474 ubox
23 74 0.004410172 ubox
24 28 0.068187375 ubox
24 31 0.021667893 ubox
24 34 0.012299842 ubox
24 40 0.010356201 ubox
24 43 0.062361842 ubox
24 45 0.040026405 ubox
24 55 0.990449540 ubox
24 73 0.004407984 ubox
25 33 0.011782592 ubox
25 44 0.098533269 ubox
25 53 0.047643882 ubox
25 54 0.952774953 ubox
26 34 0.006149179 ubox
26 42 0.004650715 ubox
26 43 0.099558027 ubox
26 45 0.940190428 ubox
26 52 0.019275806 ubox
27 33 0.006020332 ubox
27 41 0.005119092 ubox
27 44 0.967594226 ubox
27 54 0.023257611 ubox
28 32 0.004122134 ubox
28 41 0.100292825 ubox
28 44 0.133280812 ubox
28 53 0.043870627 ubox
29 40 0.100456275 ubox
29 42 0.977364569 ubox
29 43 0.108377833 ubox
29 52 0.044400124 ubox
29 69 0.004379856 ubox
29 73 0.003228416 ubox
30 41 0.978460771 ubox
30 68 0.004371715 ubox
31 41 0.024134474 ubox
31 44 0.050498519 ubox
31 67 0.003963103 ubox
31 71 0.003299374 ubox
32 38 0.026756812 ubox
32 39 0.970484626 ubox
32 40 0.085889106 ubox
32 43 0.050451496 ubox
32 46 0.045441099 ubox
32 47 0.015468283 ubox
32 48 0.022827864 ubox
32 49 0.017734292 ubox
32 50 0.009009865 ubox
32 51 0.007663655 ubox
32 70 0.003625372 ubox
33 37 0.024367611 ubox
33 38 0.947593050 ubox
33 39 0.094069354 ubox
33 42 0.049157221 ubox
33 45 0.046953711 ubox
33 46 0.015260630 ubox
33 47 0.022688612 ubox
33 48 0.018154728 ubox
33 49 0.009101616 ubox
33 50 0.008414005 ubox
33 65 0.004086032 ubox
33 69 0.003630431 ubox
34 41 0.032477733 ubox
34 44 0.047340257 ubox
34 64 0.004078894 ubox
34 68 0.003632278 ubox
35 63 0.003890720 ubox
35 67 0.003638001 ubox
36 66 0.003404191 ubox
37 81 0.053717242 ubox
38 64 0.003164451 ubox
38 80 0.055119931 ubox
39 63 0.003233754 ubox
39 81 0.015607849 ubox
40 56 0.013276822 ubox
40 76 0.023111032 ubox
40 78 0.062717395 ubox
40 80 0.015945398 ubox
41 55 0.013288479 ubox
41 75 0.022958882 ubox
41 77 0.064731722 ubox
41 79 0.015047741 ubox
42 54 0.018190353 ubox
42 74 0.020324334 ubox
42 76 0.065047744 ubox
42 78 0.013803463 ubox
43 53 0.052433909 ubox
43 56 0.012410389 ubox
43 74 0.067434940 ubox
44 52 0.054036246 ubox
44 55 0.012639220 ubox
44 73 0.068299444 ubox
44 82 0.024364089 ubox
45 54 0.038779971 ubox
45 81 0.026474463 ubox
46 53 0.055665227 ubox
46 54 0.024181381 ubox
46 68 0.006226086 ubox
46 80 0.026693139 ubox
46 81 0.003316156 ubox
47 53 0.026721357 ubox
47 54 0.083364570 ubox
47 67 0.007909850 ubox
47 68 0.050331122 ubox
47 80 0.003501195 ubox
48 53 0.088539636 ubox
48 54 0.030043727 ubox
48 66 0.008028408 ubox
48 67 0.050541755 ubox
48 68 0.033539913 ubox
48 81 0.010552562 ubox
49 53 0.023418394 ubox
49 66 0.047647667 ubox
49 67 0.034104588 ubox
49 68 0.026414922 ubox
49 80 0.010818363 ubox
50 64 0.004778363 ubox
50 66 0.033600841 ubox
50 67 0.026092061 ubox
50 68 0.013436677 ubox
51 63 0.004582680 ubox
51 64 0.061906784 ubox
51 66 0.021127159 ubox
51 67 0.013578354 ubox
51 81 0.021450273 ubox
52 63 0.066452830 ubox
52 66 0.013450871 ubox
52 74 0.094820541 ubox
52 76 0.016579826 ubox
52 78 0.005833305 ubox
52 80 0.022113529 ubox
53 61 0.006161861 ubox
53 62 0.066851811 ubox
53 65 0.013215471 ubox
53 73 0.094924175 ubox
53 75 0.011974220 ubox
53 77 0.006066168 ubox
53 79 0.021882596 ubox
54 60 0.006793773 ubox
54 61 0.066183460 ubox
54 65 0.003527113 ubox
54 72 0.094855638 ubox
54 75 0.033150537 ubox
54 77 0.003188036 ubox
55 64 0.004022963 ubox
55 71 0.094424124 ubox
55 74 0.037126928 ubox
55 76 0.003238472 ubox
56 69 0.096284526 ubox
56 73 0.037006461 ubox
56 82 0.008637651 ubox
57 68 0.096279554 ubox
57 81 0.009006661 ubox
58 67 0.095487366 ubox
58 68 0.004986130 ubox
58 80 0.009029144 ubox
59 66 0.088695092 ubox
59 67 0.005110881 ubox
59 68 0.012190726 ubox
60 66 0.004085220 ubox
60 67 0.013129790 ubox
60 68 0.018496024 ubox
60 80 0.003218232 ubox
61 66 0.019003285 ubox
61 67 0.030714575 ubox
61 68 0.098521888 ubox
62 66 0.025149459 ubox
62 67 0.098728695 ubox
62 71 0.128383494 ubox
62 78 0.018854964 ubox
63 70 0.133385237 ubox
63 73 0.096194408 ubox
63 77 0.017848454 ubox
64 69 0.126116446 ubox
64 72 0.126349378 ubox
64 79 0.258545426 ubox
64 82 0.016324456 ubox
65 71 0.127460778 ubox
65 78 0.276305121 ubox
65 81 0.018120375 ubox
66 70 0.113309955 ubox
66 73 0.035364419 ubox
66 77 0.265992653 ubox
67 72 0.043023022 ubox
67 73 0.018262073 ubox
68 72 0.017467325 ubox
68 75 0.317429771 ubox
68 77 0.179264493 ubox
68 79 0.023226348 ubox
68 82 0.012008373 ubox
69 74 0.329135452 ubox
69 76 0.198772370 ubox
69 78 0.024248314 ubox
69 81 0.020561749 ubox
70 78 0.043111684 ubox
71 77 0.043329773 ubox
71 79 0.070620498 ubox
71 82 0.263998507 ubox
72 78 0.075458725 ubox
72 81 0.318521739 ubox
73 80 0.322089268 ubox
74 82 0.067722480 ubox
75 81 0.063901695 ubox
76 82 0.073376447 ubox
77 81 0.060184069 ubox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
showpage
end
%%EOF
