%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUACCGCUGCUGGCUAGCGACCGACGAGCAACCGUCUGAGGCCAGGAGCGCUGCGACGGAGCCUUGACCGCCGUUGCCCGGCCCUCUCCCGCGCAGCCCCGGGCUUCCGCAGUCCUUCCUUCAGAAGGGAAAUUUCUGAGGGUCAGGAAGGGGAAUCUGUACCUCACUCCUUGAACACCAAGGAAGGAAUAUUGGGAAACCAAA\
) } def
/len { sequence length } bind def

/coor [
[126.16943359 180.89424133]
[135.55848694 178.75877380]
[127.00152588 166.43893433]
[118.44456482 154.11909485]
[109.88759613 141.79927063]
[101.33063507 129.47943115]
[86.48627472 127.32422638]
[74.77910614 136.70198059]
[63.07193756 146.07972717]
[51.36476898 155.45747375]
[45.43127060 170.12390137]
[30.66068649 172.04199219]
[18.95351791 181.41975403]
[7.24635029 190.79750061]
[-4.46081781 200.17524719]
[-16.16798592 209.55300903]
[-27.87515259 218.93075562]
[-30.06538010 231.64369202]
[-40.01200867 239.21327209]
[-52.05100632 238.01461792]
[-63.89914322 247.21360779]
[-65.86965179 252.05403137]
[-69.17086029 255.32557678]
[-72.98146820 256.78405762]
[-76.50240326 256.54693604]
[-88.75695801 265.19714355]
[-101.01150513 273.84735107]
[-113.26605225 282.49755859]
[-115.70404053 298.11267090]
[-128.51858521 307.36270142]
[-144.10705566 304.75973511]
[-153.22106934 291.84811401]
[-150.45346069 276.28805542]
[-137.44619751 267.31103516]
[-121.91625977 270.24301147]
[-109.66170502 261.59280396]
[-97.40715790 252.94259644]
[-85.15261078 244.29238892]
[-73.09814453 235.36547852]
[-61.25000763 226.16647339]
[-55.51384354 209.58285522]
[-37.25290298 207.22358704]
[-25.54573631 197.84584045]
[-13.83856869 188.46807861]
[-2.13140130 179.09033203]
[9.57576656 169.71258545]
[21.28293419 160.33482361]
[26.37905693 146.33915710]
[41.98701859 143.75030518]
[53.69418335 134.37255859]
[65.40135193 124.99480438]
[77.10852051 115.61705780]
[79.00847626 73.47441864]
[70.45150757 61.15458298]
[61.89454651 48.83474731]
[53.33758163 36.51491165]
[44.78061676 24.19507408]
[38.96742249 21.03510094]
[36.06126785 16.14672470]
[36.15758514 11.36896038]
[27.97845650 -1.20489562]
[19.79932785 -13.77875137]
[11.62019730 -26.35260582]
[3.44106817 -38.92646027]
[-4.73806143 -51.50031662]
[-10.36863041 -37.59719849]
[-24.70399284 -33.18161392]
[-37.18142700 -41.50709534]
[-38.60718918 -56.43918228]
[-27.93073654 -66.97547150]
[-13.01822567 -65.35215759]
[-20.22057915 -78.50989532]
[-35.12273788 -83.04458618]
[-42.23951340 -96.49100494]
[-37.82454300 -110.66999054]
[-45.02689743 -123.82772827]
[-52.22925186 -136.98547363]
[-59.43160629 -150.14320374]
[-66.63395691 -163.30094910]
[-80.04723358 -171.69110107]
[-79.37129974 -186.57035828]
[-86.57365417 -199.72808838]
[-93.77600098 -212.88583374]
[-109.14465332 -215.77349854]
[-119.02154541 -227.89706421]
[-118.74311066 -243.53218079]
[-108.44081879 -255.29638672]
[-92.97910309 -257.63500977]
[-79.65850067 -249.44383240]
[-74.76860046 -234.59043884]
[-80.61826324 -220.08819580]
[-73.41590881 -206.93045044]
[-66.21355438 -193.77270508]
[-53.31544495 -186.32368469]
[-53.47622299 -170.50329590]
[-46.27386856 -157.34556580]
[-39.07151413 -144.18782043]
[-31.86915970 -131.03007507]
[-24.66680527 -117.87234497]
[-10.34362316 -113.95034790]
[-2.85197520 -100.70912933]
[-7.06284046 -85.71224976]
[0.13951351 -72.55451202]
[7.83579445 -59.67944717]
[16.01492310 -47.10559082]
[24.19405365 -34.53173447]
[32.37318420 -21.95788002]
[40.55231094 -9.38402462]
[48.73144150 3.18983054]
[57.10045242 15.63811016]
[65.65741730 27.95794678]
[74.21437836 40.27778244]
[82.77134705 52.59761810]
[91.32830811 64.91745758]
[106.18859863 66.95995331]
[117.75209808 57.40561295]
[129.31559753 47.85126877]
[140.87910461 38.29692841]
[146.90431213 20.89793968]
[164.30813599 18.65579224]
[175.72531128 8.92706108]
[187.14247131 -0.80167055]
[198.55964661 -10.53040218]
[209.97682190 -20.25913239]
[221.39398193 -29.98786545]
[232.81115723 -39.71659470]
[244.22833252 -49.44532776]
[255.64550781 -59.17405701]
[267.06268311 -68.90278625]
[269.76776123 -84.71614075]
[283.88671875 -92.33416748]
[298.58871460 -85.91298676]
[302.59558105 -70.37836456]
[292.83364868 -57.64714050]
[276.79141235 -57.48561859]
[265.37423706 -47.75688934]
[253.95706177 -38.02815628]
[242.53988647 -28.29942513]
[231.12272644 -18.57069397]
[219.70555115 -8.84196281]
[208.28837585 0.88676876]
[196.87121582 10.61550045]
[185.45404053 20.34423065]
[174.03686523 30.07296371]
[172.76106262 42.10402679]
[163.32609558 50.30253601]
[150.43344116 49.86042786]
[138.86994934 59.41477203]
[127.30644226 68.96911621]
[115.74294281 78.52345276]
[120.76613617 92.65737152]
[135.76570129 92.77119446]
[150.76527405 92.88501740]
[164.75440979 84.32722473]
[179.02900696 92.39990234]
[178.90455627 108.79857635]
[164.50910950 116.65369415]
[150.65144348 107.88458252]
[135.65187073 107.77075958]
[120.65231323 107.65693665]
[113.65046692 120.92246246]
[122.20743561 133.24229431]
[130.76440430 145.56213379]
[139.32136536 157.88197327]
[147.87832642 170.20181274]
[158.03314209 181.24172974]
[169.59664917 190.79606628]
[185.11851501 189.48876953]
[196.70945740 199.34295654]
[197.86010742 214.14874268]
[209.42359924 223.70309448]
[220.98710632 233.25743103]
[232.55061340 242.81176758]
[244.11410522 252.36611938]
[255.67761230 261.92047119]
[271.72045898 261.83850098]
[281.67446899 274.42010498]
[277.90380859 290.01376343]
[263.30099487 296.65731812]
[249.06803894 289.25442505]
[246.12327576 273.48394775]
[234.55976868 263.92962646]
[222.99626160 254.37527466]
[211.43276978 244.82093811]
[199.86926270 235.26658630]
[188.30577087 225.71224976]
[173.54861450 227.37422180]
[161.68547058 217.84948730]
[160.04229736 202.35957336]
[148.47880554 192.80522156]
[142.10041809 196.75062561]
[142.55567932 211.74371338]
[129.34362793 204.64140320]
[122.96524048 208.58680725]
[126.35059357 223.19978333]
[129.73594666 237.81277466]
[133.12130737 252.42576599]
[144.70394897 264.03500366]
[140.18066406 279.79800415]
[124.20463562 283.49911499]
[113.21061707 271.33099365]
[118.50832367 255.81111145]
[115.12296295 241.19813538]
[111.73760986 226.58514404]
[108.35225677 211.97215271]
[110.99038696 198.10673523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[4 163]
[5 162]
[6 161]
[7 52]
[8 51]
[9 50]
[10 49]
[12 47]
[13 46]
[14 45]
[15 44]
[16 43]
[17 42]
[20 40]
[21 39]
[25 38]
[26 37]
[27 36]
[28 35]
[53 114]
[54 113]
[55 112]
[56 111]
[57 110]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[65 104]
[71 103]
[72 102]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[81 93]
[82 92]
[83 91]
[115 150]
[116 149]
[117 148]
[118 147]
[120 144]
[121 143]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[151 160]
[152 159]
[153 158]
[166 190]
[167 189]
[170 186]
[171 185]
[172 184]
[173 183]
[174 182]
[175 181]
[194 205]
[195 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
