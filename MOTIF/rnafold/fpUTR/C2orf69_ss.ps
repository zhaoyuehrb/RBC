%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCUUUCCUUACGCACGCUGCGCGCGGACGUCGGCCUCUGACGUCGUCGCCUCAGCGCCGGCUCCCGGCCGGGCCGCGGCCGCCGACCGUUGAGCCGCCGGCUGAGCCGCCUGCUGAAGUCCCUCCCUCAGGAACCCCUCCGCCACCCUCCACCUCCGAACCGCUCUCGCGGCGGCGACCC\
) } def
/len { sequence length } bind def

/coor [
[100.11512756 392.85275269]
[89.45894623 403.59057617]
[76.00521851 410.50814819]
[61.07200241 412.92767334]
[46.12229919 410.61218262]
[32.62072754 403.78848267]
[21.89003754 393.12512207]
[14.98150921 379.66674805]
[12.57197189 364.73193359]
[14.89748669 349.78378296]
[21.73022461 336.28677368]
[32.40077972 325.56323242]
[45.86376572 318.66372681]
[60.80021286 316.26419067]
[63.09612656 301.44094849]
[65.39203644 286.61770630]
[63.30378723 279.50942993]
[67.85576630 271.56182861]
[70.40442657 256.77993774]
[72.95307922 241.99806213]
[75.50173950 227.21615601]
[78.05039215 212.43426514]
[80.59904480 197.65237427]
[83.14770508 182.87048340]
[75.13863373 165.28619385]
[88.21530914 149.96516418]
[90.25781250 135.10487366]
[92.30030823 120.24458313]
[80.99461365 110.38652802]
[66.55085754 114.43347931]
[52.10709763 118.48043060]
[37.66333771 122.52738190]
[23.21957779 126.57433319]
[8.77581882 130.62129211]
[-5.66794014 134.66824341]
[-20.11170006 138.71519470]
[-33.73218918 148.81065369]
[-47.20365524 138.51716614]
[-41.04170990 122.72264862]
[-24.15865135 124.27143097]
[-9.71489143 120.22447968]
[4.72886753 116.17752838]
[19.17262650 112.13057709]
[33.61638641 108.08362579]
[48.06014633 104.03667450]
[62.50390625 99.98972321]
[76.94766235 95.94277191]
[79.30147552 90.64402771]
[82.80422211 86.24073792]
[87.16461182 82.96264648]
[92.05126953 80.95269775]
[89.25061035 66.21646881]
[79.07273865 54.10361099]
[84.29766083 40.15551376]
[81.49700928 25.41928864]
[78.69635010 10.68306351]
[75.89569092 -4.05316162]
[73.09503937 -18.78938675]
[70.29438019 -33.52561188]
[57.95107269 -47.17545319]
[64.34674835 -63.50658798]
[61.29490662 -78.19284821]
[58.24306488 -92.87911224]
[55.19122696 -107.56536865]
[52.13938522 -122.25163269]
[49.08754349 -136.93789673]
[45.78541183 -151.56991577]
[42.23394394 -166.14341736]
[38.68247604 -180.71691895]
[35.13101196 -195.29043579]
[31.57954407 -209.86393738]
[27.27075195 -214.92924500]
[26.32703400 -220.56387329]
[28.16465569 -224.99557495]
[25.11281586 -239.68183899]
[22.06097603 -254.36810303]
[18.88387108 -269.02777100]
[15.58173752 -283.65979004]
[12.15481186 -298.26309204]
[8.60334587 -312.83657837]
[5.05187941 -327.41009521]
[-9.04571533 -334.17706299]
[-15.44824886 -348.44384766]
[-11.13263893 -363.47415161]
[1.86341321 -372.17108154]
[17.40357018 -370.42822266]
[28.15024567 -359.06851196]
[29.02918816 -343.45565796]
[19.62538528 -330.96154785]
[23.17685127 -316.38806152]
[26.72831917 -301.81454468]
[31.37782478 -296.04650879]
[30.21375465 -286.96191406]
[33.51588821 -272.32989502]
[38.06623840 -266.48333740]
[36.74723816 -257.41995239]
[39.79907608 -242.73367310]
[42.85091782 -228.04742432]
[46.15304947 -213.41540527]
[49.70451736 -198.84188843]
[53.25598526 -184.26838684]
[56.80744934 -169.69488525]
[60.35891724 -155.12138367]
[63.92176819 -151.90844727]
[65.48950195 -146.41464233]
[63.77380753 -139.98973083]
[66.82564545 -125.30347443]
[69.87748718 -110.61721039]
[72.92932892 -95.93094635]
[75.98117065 -81.24468994]
[79.03300476 -66.55842590]
[88.98245239 -59.65211487]
[91.63448334 -47.42375946]
[85.03060913 -36.32626724]
[87.83126068 -21.59004211]
[90.63191986 -6.85381746]
[93.43257141 7.88240719]
[96.23323059 22.61863136]
[99.03388977 37.35485840]
[109.01144409 48.41368484]
[103.98683929 63.41581726]
[106.78749084 78.15203857]
[111.39460754 63.87707901]
[112.20003510 48.89871979]
[120.74197388 36.56846237]
[134.48191833 30.55065155]
[149.33657837 32.63367844]
[160.89140320 42.19850159]
[165.71250916 56.40262222]
[162.36712646 71.02481079]
[151.84945679 81.71960449]
[137.28288269 85.30861664]
[124.11914062 92.50000000]
[139.11914062 92.50000000]
[154.11914062 92.50000000]
[166.43437195 82.21823120]
[182.12185669 85.57711029]
[189.14752197 100.00000000]
[182.12185669 114.42288971]
[166.43437195 117.78176880]
[154.11914062 107.50000000]
[139.11914062 107.50000000]
[124.11914062 107.50000000]
[137.28288269 114.69138336]
[150.44662476 121.88276672]
[163.61035156 129.07414246]
[178.55392456 130.37413025]
[192.24578857 136.50051880]
[203.17309570 146.77641296]
[210.12846375 160.06637573]
[212.34335327 174.90194702]
[209.57302856 189.64390564]
[202.12359619 202.66334534]
[190.81819153 212.52172852]
[176.90596008 218.12974548]
[161.92411804 218.86776733]
[147.52807617 214.65422058]
[135.30850220 205.95468140]
[126.61556244 193.73042297]
[122.40977478 179.33210754]
[123.15641785 164.34815979]
[117.82447815 150.32780457]
[112.49253845 136.30743408]
[107.16059875 122.28708649]
[105.11810303 137.14736938]
[103.07559967 152.00765991]
[110.15544891 160.30459595]
[111.45994568 170.91184998]
[106.79701233 180.28314209]
[97.92959595 185.41914368]
[95.38094330 200.20103455]
[92.83228302 214.98292542]
[90.28363037 229.76481628]
[87.73497009 244.54670715]
[85.18631744 259.32861328]
[82.63766479 274.11050415]
[80.21528625 288.91360474]
[77.91938019 303.73684692]
[75.62346649 318.56011963]
[89.13417053 325.36569214]
[99.87914276 336.01467896]
[106.80570221 349.46377563]
[109.23525238 364.39535522]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 179]
[15 178]
[16 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[26 166]
[27 165]
[28 164]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[51 122]
[52 121]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[67 103]
[68 102]
[69 101]
[70 100]
[71 99]
[74 98]
[75 97]
[76 96]
[77 94]
[78 93]
[79 91]
[80 90]
[81 89]
[133 143]
[134 142]
[135 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
