%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGACCUGAAACACAGACAAAAGGAAAAACAGGAGGGACAAGGAGGCAGAACUGAGAGAGGAGGGGACAGAGAGGUGUCCUGGGCCUGACCCCGCCCACGAGCUUGAGAAAUGCUCCUGCCCCGGGAGGAGGCUCAGCACAGAAGGAGGAAGGACAGCACAGCUGACAGCCGUACUCAGGAAGCUUCUGGAUCCUAGGCUUAUCUCCACAGAGGAGAACACACAAGCAGCAGAGACC\
) } def
/len { sequence length } bind def

/coor [
[127.06248474 584.08679199]
[127.44927979 569.09173584]
[127.83608246 554.09674072]
[128.22288513 539.10174561]
[128.60968018 524.10675049]
[121.12927246 524.64849854]
[113.60083771 537.62237549]
[106.07239532 550.59631348]
[98.54395294 563.57025146]
[109.08155060 574.38049316]
[116.31079865 587.63342285]
[119.69524384 602.34558105]
[118.98373413 617.42529297]
[114.22907257 631.75341797]
[105.78408051 644.26678467]
[94.27543640 654.03686523]
[80.55715942 660.33856201]
[65.64723206 662.70428467]
[50.65207672 660.95849609]
[36.68442535 655.23071289]
[24.78077507 645.94598389]
[15.82445526 633.79333496]
[10.48008442 619.67456055]
[9.14425087 604.63732910]
[11.91608047 589.79754639]
[18.58988762 576.25640869]
[28.67042923 565.01873779]
[41.40966415 556.91845703]
[55.86225510 552.55664062]
[70.95571899 552.25701904]
[85.57003021 556.04180908]
[93.09847260 543.06787109]
[100.62691498 530.09393311]
[108.15535736 517.12005615]
[105.14739227 487.21389771]
[124.37480164 471.66036987]
[122.99655151 456.72381592]
[121.61830139 441.78729248]
[120.24005127 426.85073853]
[107.36365509 419.41189575]
[101.26447296 405.65457153]
[104.47312927 390.76974487]
[115.96399689 380.50982666]
[114.58574677 365.57327271]
[113.20749664 350.63671875]
[111.82924652 335.70016479]
[110.45099640 320.76364136]
[109.07274628 305.82708740]
[97.02153015 300.10614014]
[89.30499268 289.09188843]
[88.02345276 275.59603882]
[93.61753845 263.12881470]
[104.72551727 254.98594666]
[103.54371643 240.03257751]
[102.36191559 225.07919312]
[101.18011475 210.12582397]
[99.99832153 195.17245483]
[87.22081757 187.56500244]
[81.30299377 173.72868347]
[84.70702362 158.88732910]
[96.33175659 148.77932739]
[95.14995575 133.82595825]
[70.43247986 124.72162628]
[57.11743546 98.47109222]
[65.98080444 67.16744995]
[51.95018768 61.86255646]
[37.91957474 56.55767059]
[23.88895988 51.25278091]
[9.85834503 45.94789124]
[-4.17226982 40.64300156]
[-18.47272682 47.37148285]
[-33.31391907 41.93875504]
[-39.89083481 27.56796074]
[-34.30149841 12.78503513]
[-19.86197281 6.36042643]
[-5.13896704 12.10574150]
[1.13261926 26.61238670]
[15.16323376 31.91727638]
[29.19384956 37.22216415]
[43.22446442 42.52705383]
[57.25507736 47.83194351]
[71.28569031 53.13683319]
[82.40203094 43.06573105]
[78.50387573 28.58110619]
[74.60572052 14.09647942]
[70.70756531 -0.38814682]
[66.80941010 -14.87277317]
[62.91125488 -29.35739899]
[48.57114792 -34.98478699]
[40.38992691 -47.82694244]
[41.32826996 -62.84638214]
[50.81715775 -74.29622650]
[46.91900253 -88.78085327]
[43.02084732 -103.26548004]
[39.12269592 -117.75010681]
[23.80069542 -126.21023560]
[19.43322563 -142.80972290]
[28.25342369 -157.13911438]
[24.16521454 -171.57124329]
[12.95963097 -182.74020386]
[16.93523216 -197.09442139]
[12.84702396 -211.52656555]
[8.75881481 -225.95869446]
[4.67060661 -240.39083862]
[-10.11919785 -244.78004456]
[-20.17086029 -256.48336792]
[-22.27692986 -271.76629639]
[-15.76536846 -285.75210571]
[-2.71399164 -293.97799683]
[12.71255302 -293.81909180]
[25.59171295 -285.32611084]
[31.81379318 -271.20913696]
[29.39335251 -255.97282410]
[19.10274315 -244.47904968]
[23.19095039 -230.04690552]
[27.27915955 -215.61477661]
[31.36736870 -201.18263245]
[42.28053665 -191.04595947]
[38.59735107 -175.65945435]
[42.68555832 -161.22732544]
[54.69416809 -156.58644104]
[61.95043945 -145.71739197]
[61.62292862 -132.45831299]
[53.60732269 -121.64826202]
[57.50547409 -107.16363525]
[61.40362930 -92.67900848]
[65.30178070 -78.19438171]
[79.25562286 -73.05352783]
[87.60541534 -60.53374481]
[86.97467804 -45.32008362]
[77.39588165 -33.25555420]
[81.29403687 -18.77092743]
[85.19219208 -4.28630114]
[89.09034729 10.19832516]
[92.98850250 24.68295097]
[96.88665771 39.16757584]
[103.75286865 42.18504333]
[107.27621460 27.60471344]
[110.79956055 13.02438354]
[114.32291412 -1.55594647]
[117.84626007 -16.13627625]
[121.36960602 -30.71660614]
[121.44894409 -45.71639633]
[129.55458069 -58.33775711]
[143.16192627 -64.64964294]
[158.03286743 -62.68616104]
[169.53569031 -53.05885315]
[174.08773804 -38.76623535]
[170.27122498 -24.25988388]
[159.27549744 -14.05825806]
[150.91746521 -1.60261095]
[142.55941772 10.85303593]
[134.20138550 23.30868340]
[125.84333801 35.76433182]
[117.48529816 48.21997833]
[124.35150909 51.23744202]
[137.65794373 44.31364441]
[150.96437073 37.38984299]
[164.27079773 30.46604347]
[175.53070068 17.79123306]
[190.82722473 25.10236168]
[188.03631592 41.82501602]
[171.19459534 43.77246857]
[157.88816833 50.69626999]
[144.58174133 57.62007141]
[131.27531433 64.54386902]
[140.69851685 81.61756134]
[142.03601074 99.97807312]
[135.93743896 116.18687439]
[124.36782837 127.56725311]
[110.10333252 132.64414978]
[111.28513336 147.59753418]
[124.35335541 155.75398254]
[130.04646301 169.87637329]
[126.37555695 184.47050476]
[114.95169067 193.99064636]
[116.13349152 208.94403076]
[117.31529236 223.89739990]
[118.49709320 238.85076904]
[119.67889404 253.80413818]
[134.22830200 262.44808960]
[140.68792725 277.91012573]
[136.69178772 294.01245117]
[124.00929260 304.44882202]
[125.38754272 319.38537598]
[126.76579285 334.32192993]
[128.14404297 349.25848389]
[129.52229309 364.19500732]
[130.90054321 379.13156128]
[144.07484436 387.11553955]
[149.95309448 401.16189575]
[146.47433472 415.80300903]
[135.17658997 425.47247314]
[136.55484009 440.40902710]
[137.93309021 455.34558105]
[139.31134033 470.28213501]
[154.99562073 475.66809082]
[165.14381409 491.77886963]
[162.80467224 513.16217041]
[172.12396240 524.91595459]
[181.44323730 536.66973877]
[190.76251221 548.42352295]
[212.95426941 555.18560791]
[215.35868835 577.50762939]
[225.42979431 588.62396240]
[235.50088501 599.74035645]
[245.57199097 610.85668945]
[255.64309692 621.97302246]
[271.53131104 624.19641113]
[279.57479858 638.07745361]
[273.60321045 652.96771240]
[258.19750977 657.44470215]
[245.17558289 648.07403564]
[244.52676392 632.04412842]
[234.45565796 620.92773438]
[224.38455200 609.81140137]
[214.31346130 598.69506836]
[204.24235535 587.57873535]
[197.33314514 589.00317383]
[190.28973389 587.94494629]
[183.98493958 584.48785400]
[179.21633911 579.01574707]
[176.60543823 572.17041016]
[176.51699829 564.77667236]
[179.00874329 557.74279785]
[169.68946838 545.98901367]
[160.37019348 534.23522949]
[151.05090332 522.48150635]
[143.57049561 523.02325439]
[146.11387634 537.80603027]
[148.65725708 552.58880615]
[151.20063782 567.37164307]
[153.74401855 582.15441895]
[162.50352478 594.33111572]
[161.24870300 609.27850342]
[150.58169556 619.82434082]
[135.62091064 620.90832520]
[123.54511261 612.01025391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 34]
[7 33]
[8 32]
[9 31]
[36 196]
[37 195]
[38 194]
[39 193]
[43 189]
[44 188]
[45 187]
[46 186]
[47 185]
[48 184]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[61 172]
[62 171]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[83 136]
[84 135]
[85 134]
[86 133]
[87 132]
[88 131]
[92 127]
[93 126]
[94 125]
[95 124]
[98 120]
[99 119]
[101 117]
[102 116]
[103 115]
[104 114]
[156 166]
[157 165]
[158 164]
[159 163]
[199 228]
[200 227]
[201 226]
[202 225]
[204 218]
[205 217]
[206 216]
[207 215]
[208 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
