%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HHIPL1)
} def

/sequence { (\
AGGGAAGGGGAGCGCCCGCCCCUUCCCUGCCGCCGCGAGCGCCCCGGGAGGGGACCGGGGCUGCCGUCCCUCCGCCUCUUCCCCCGCGGGGCGUAGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.943659354 ubox
2 27 0.999709236 ubox
2 28 0.004798795 ubox
3 26 0.999976545 ubox
3 27 0.004418818 ubox
4 25 0.999980300 ubox
4 26 0.003473636 ubox
5 24 0.999241213 ubox
6 23 0.998626958 ubox
6 24 0.027868474 ubox
7 21 0.003231568 ubox
7 22 0.998545632 ubox
7 23 0.039581255 ubox
8 17 0.003394438 ubox
8 20 0.004520227 ubox
8 21 0.997912911 ubox
8 22 0.053465001 ubox
9 16 0.004799155 ubox
9 17 0.005132480 ubox
9 19 0.005452100 ubox
9 20 0.997182304 ubox
9 21 0.064143325 ubox
10 15 0.005857831 ubox
10 16 0.007210167 ubox
10 19 0.989292698 ubox
10 20 0.073269095 ubox
12 19 0.140642059 ubox
13 18 0.178746058 ubox
28 37 0.029373693 ubox
28 93 0.004797526 ubox
28 98 0.004285517 ubox
29 34 0.022690910 ubox
29 36 0.075401843 ubox
29 40 0.006954729 ubox
29 92 0.013282127 ubox
29 97 0.019839618 ubox
30 35 0.075322802 ubox
30 39 0.007143343 ubox
30 91 0.013294416 ubox
30 96 0.019792798 ubox
31 37 0.018238587 ubox
31 90 0.013282352 ubox
31 93 0.013485554 ubox
31 98 0.072217487 ubox
32 36 0.017231472 ubox
32 40 0.003561901 ubox
32 92 0.013852250 ubox
32 94 0.003287929 ubox
32 97 0.076470435 ubox
33 39 0.003611061 ubox
33 89 0.013259819 ubox
33 91 0.013848585 ubox
33 96 0.076245657 ubox
34 88 0.013271844 ubox
34 90 0.013822025 ubox
34 98 0.927075925 ubox
35 67 0.009562350 ubox
35 87 0.013262645 ubox
35 94 0.018231123 ubox
35 97 0.991292114 ubox
36 66 0.009977482 ubox
36 86 0.013259567 ubox
36 88 0.008840396 ubox
36 93 0.016484210 ubox
36 96 0.991242236 ubox
36 98 0.045756402 ubox
37 65 0.009999913 ubox
37 85 0.013020349 ubox
37 87 0.004142181 ubox
37 92 0.007215977 ubox
37 97 0.055742946 ubox
39 64 0.010354807 ubox
39 87 0.009127996 ubox
39 92 0.016586463 ubox
39 94 0.983072388 ubox
39 97 0.004221024 ubox
40 63 0.010352997 ubox
40 86 0.009772942 ubox
40 91 0.016815277 ubox
40 93 0.999245180 ubox
40 96 0.003860884 ubox
41 61 0.010205446 ubox
41 85 0.009746956 ubox
41 87 0.003442093 ubox
41 92 0.999618457 ubox
42 60 0.010437978 ubox
42 86 0.003486527 ubox
42 89 0.008903297 ubox
42 90 0.020283455 ubox
42 91 0.999549257 ubox
43 59 0.010439441 ubox
43 88 0.008887680 ubox
43 89 0.024769308 ubox
43 90 0.999446656 ubox
44 58 0.010439458 ubox
44 88 0.028542648 ubox
44 89 0.999331668 ubox
45 57 0.010439276 ubox
45 86 0.056182122 ubox
45 88 0.997908909 ubox
46 56 0.010436367 ubox
46 80 0.073658520 ubox
46 81 0.019182167 ubox
46 82 0.362653929 ubox
46 83 0.505991149 ubox
46 84 0.111187658 ubox
46 85 0.111745433 ubox
46 87 0.760072543 ubox
47 55 0.010431061 ubox
47 73 0.034741497 ubox
47 76 0.005013249 ubox
47 78 0.005000197 ubox
47 79 0.351784827 ubox
47 80 0.023076771 ubox
47 81 0.403200164 ubox
47 82 0.562169958 ubox
47 83 0.117974879 ubox
47 84 0.120256672 ubox
47 85 0.564849398 ubox
48 72 0.034835598 ubox
48 75 0.005013586 ubox
48 78 0.371194244 ubox
48 79 0.003472091 ubox
48 80 0.404155891 ubox
48 81 0.561868366 ubox
48 82 0.105367988 ubox
48 83 0.111809401 ubox
48 84 0.555302024 ubox
49 71 0.034480057 ubox
49 77 0.395787646 ubox
49 79 0.525075825 ubox
49 80 0.491821365 ubox
50 70 0.032538177 ubox
50 71 0.022341742 ubox
50 72 0.004861287 ubox
50 76 0.401557599 ubox
50 77 0.025348360 ubox
50 78 0.591866190 ubox
50 79 0.405196677 ubox
50 80 0.003256189 ubox
50 81 0.023599676 ubox
50 82 0.055586355 ubox
50 83 0.514803000 ubox
50 84 0.212970780 ubox
50 85 0.047584499 ubox
51 69 0.030457441 ubox
51 70 0.028415869 ubox
51 73 0.003248499 ubox
51 75 0.401290329 ubox
51 76 0.045158976 ubox
51 77 0.591811152 ubox
51 78 0.403639475 ubox
51 80 0.023037308 ubox
51 81 0.054828921 ubox
51 82 0.514474510 ubox
51 83 0.223545965 ubox
51 84 0.047237933 ubox
52 68 0.028218930 ubox
52 69 0.031718404 ubox
52 72 0.003807686 ubox
52 73 0.408022571 ubox
52 75 0.045234353 ubox
52 76 0.684849137 ubox
52 77 0.203186769 ubox
52 78 0.004213366 ubox
52 79 0.031948479 ubox
52 80 0.028505972 ubox
52 81 0.513279870 ubox
52 82 0.224589380 ubox
52 83 0.046754807 ubox
53 67 0.021717792 ubox
53 68 0.033873848 ubox
53 71 0.003978035 ubox
53 72 0.409226062 ubox
53 75 0.685406467 ubox
53 76 0.200231549 ubox
53 77 0.005291780 ubox
53 78 0.048846115 ubox
53 79 0.017583513 ubox
53 80 0.508156469 ubox
53 81 0.225504163 ubox
53 82 0.046186772 ubox
54 67 0.035724532 ubox
54 71 0.389950036 ubox
54 77 0.048468825 ubox
54 79 0.468260334 ubox
54 80 0.221910567 ubox
55 66 0.026484076 ubox
56 66 0.035722288 ubox
56 74 0.149842589 ubox
57 65 0.043723856 ubox
57 69 0.004990105 ubox
57 70 0.820538553 ubox
57 71 0.123110660 ubox
57 72 0.030620552 ubox
57 73 0.137766387 ubox
57 76 0.028831998 ubox
57 77 0.017634404 ubox
57 78 0.523064523 ubox
57 79 0.028800749 ubox
58 64 0.043658814 ubox
58 65 0.009574450 ubox
58 68 0.004575676 ubox
58 69 0.822837468 ubox
58 70 0.129239461 ubox
58 71 0.026636434 ubox
58 72 0.133054310 ubox
58 73 0.004088342 ubox
58 75 0.027139078 ubox
58 76 0.017067407 ubox
58 77 0.531855098 ubox
58 78 0.032126022 ubox
59 64 0.009892485 ubox
59 65 0.003583590 ubox
59 67 0.003875253 ubox
59 68 0.823484953 ubox
59 69 0.130056151 ubox
59 70 0.096599922 ubox
59 71 0.088565046 ubox
59 72 0.004197073 ubox
59 73 0.023731717 ubox
59 75 0.015848332 ubox
59 76 0.533366838 ubox
59 77 0.010073357 ubox
60 64 0.003681452 ubox
60 67 0.822611539 ubox
60 68 0.129413776 ubox
60 69 0.096454131 ubox
60 70 0.086536700 ubox
60 72 0.023508738 ubox
60 75 0.533397597 ubox
60 76 0.009638251 ubox
61 66 0.830368745 ubox
61 74 0.531692153 ubox
62 74 0.026334819 ubox
63 73 0.122353215 ubox
63 75 0.009137378 ubox
64 74 0.008515490 ubox
65 74 0.027142792 ubox
66 73 0.063676380 ubox
72 89 0.009774246 ubox
73 88 0.009802059 ubox
73 93 0.003276352 ubox
74 85 0.003701010 ubox
74 87 0.015633383 ubox
74 92 0.003358260 ubox
75 86 0.016025049 ubox
75 91 0.003357845 ubox
76 90 0.003353512 ubox
77 89 0.003306049 ubox
78 88 0.003291695 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
3 26 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
34 98 0.9500000 lbox
35 97 0.9500000 lbox
36 96 0.9500000 lbox
39 94 0.9500000 lbox
40 93 0.9500000 lbox
41 92 0.9500000 lbox
42 91 0.9500000 lbox
43 90 0.9500000 lbox
44 89 0.9500000 lbox
45 88 0.9500000 lbox
46 87 0.9500000 lbox
47 85 0.9500000 lbox
48 84 0.9500000 lbox
50 83 0.9500000 lbox
51 82 0.9500000 lbox
52 81 0.9500000 lbox
53 80 0.9500000 lbox
54 79 0.9500000 lbox
57 78 0.9500000 lbox
58 77 0.9500000 lbox
59 76 0.9500000 lbox
60 75 0.9500000 lbox
61 74 0.9500000 lbox
showpage
end
%%EOF
