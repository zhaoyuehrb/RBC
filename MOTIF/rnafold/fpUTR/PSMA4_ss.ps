%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCGACCGCCGGGAAUGGCCCCCGCCGGCCGCCGUCGGGGGCUUCCCAGUGCCAAGCCUGGACGCCGGGGCCCGCGAGGGGGCGGGCUGAGGGUGGGGGUCUGUGGGCAGGACCGAGAGUUGGGGUGGCUUCCGUCCUCAGGAGUUCGGAACUAUAUAAAGUUCAGAAAAC\
) } def
/len { sequence length } bind def

/coor [
[251.81669617 183.02714539]
[237.60191345 178.23762512]
[223.38711548 173.44810486]
[209.17231750 168.65856934]
[194.95751953 163.86904907]
[183.96266174 168.96456909]
[172.06626892 165.06413269]
[165.83483887 153.74531555]
[151.70881653 148.69993591]
[137.58280945 143.65455627]
[123.45680237 138.60917664]
[109.33079529 133.56379700]
[94.35279083 134.37588501]
[80.85508728 140.91897583]
[67.35739136 147.46206665]
[53.85968781 154.00515747]
[49.80570984 159.29852295]
[44.48135376 161.40698242]
[39.75448990 160.53091431]
[26.02936745 166.58244324]
[12.30424309 172.63397217]
[-1.42088008 178.68550110]
[-15.14600372 184.73703003]
[-28.87112617 190.78855896]
[-42.59625244 196.84008789]
[-56.32137299 202.89161682]
[-65.82714844 215.53878784]
[-80.59420776 213.59371948]
[-94.31932831 219.64524841]
[-108.04444885 225.69677734]
[-120.09808350 237.61927795]
[-134.89143372 229.33718872]
[-131.02822876 212.82925415]
[-114.09597778 211.97164917]
[-100.37085724 205.92012024]
[-86.64572906 199.86859131]
[-78.12167358 187.65426636]
[-62.37290192 189.16648865]
[-48.64777756 183.11495972]
[-34.92265320 177.06343079]
[-21.19753075 171.01190186]
[-7.47240734 164.96037292]
[6.25271606 158.90885925]
[19.97784042 152.85733032]
[33.70296478 146.80580139]
[47.31659317 140.50746155]
[60.81429672 133.96437073]
[74.31199646 127.42127991]
[87.80970001 120.87818146]
[74.33189392 114.95703125]
[64.76343536 100.45460510]
[52.05228806 92.49050903]
[39.34114456 84.52642059]
[26.55862427 76.67739868]
[13.70576572 68.94409180]
[0.85290807 61.21078110]
[-15.54440784 61.45586777]
[-23.72189140 47.24105453]
[-15.26724720 33.18933105]
[1.12211061 33.75589752]
[8.58621597 48.35792160]
[21.43907356 56.09123230]
[34.29193115 63.82453918]
[41.66996765 64.58133698]
[47.30524063 71.81526947]
[60.01638412 79.77936554]
[72.72753143 87.74346161]
[78.81894684 83.36800385]
[77.33153534 68.44193268]
[91.00177765 74.61708832]
[97.09319305 70.24162292]
[93.60468292 55.65291977]
[90.11617279 41.06421661]
[86.62766266 26.47551346]
[83.13914490 11.88680935]
[79.65063477 -2.70189476]
[76.16212463 -17.29059982]
[62.56475830 -25.34585762]
[58.72689056 -40.67707825]
[66.92546082 -54.18851852]
[82.29639435 -57.86408234]
[95.72040558 -49.52312088]
[99.23324585 -34.11418152]
[90.75083160 -20.77910995]
[94.23934174 -6.19040680]
[97.72785187 8.39829731]
[101.21636200 22.98700142]
[104.70487213 37.57570648]
[108.19338989 52.16440964]
[111.68190002 66.75311279]
[125.02081299 79.29969025]
[129.37680054 95.57638550]
[124.89586639 110.29949188]
[114.37616730 119.43778992]
[128.50218201 124.48316956]
[142.62818909 129.52854919]
[156.75419617 134.57392883]
[170.88020325 139.61930847]
[188.89477539 135.88186646]
[199.74703979 149.65425110]
[213.96183777 154.44378662]
[228.17663574 159.23330688]
[242.39143372 164.02282715]
[256.60623169 168.81234741]
[279.41439819 161.82960510]
[294.46276855 179.40182495]
[309.11209106 182.62638855]
[323.76141357 185.85093689]
[338.41070557 189.07550049]
[353.06002808 192.30004883]
[367.88372803 194.59306335]
[382.82263184 195.94535828]
[394.89260864 186.09884644]
[410.02352905 187.68307495]
[419.33627319 199.25062561]
[434.27520752 200.60292053]
[449.21411133 201.95521545]
[464.15304565 203.30752563]
[479.09194946 204.65982056]
[492.30017090 193.21499634]
[509.36486816 194.81491089]
[519.79650879 207.98670959]
[534.75738525 209.06907654]
[549.71826172 210.15144348]
[564.67919922 211.23381042]
[579.64007568 212.31617737]
[594.60095215 213.39854431]
[609.57104492 214.34580994]
[624.54901123 215.15788269]
[639.52703857 215.96997070]
[655.67028809 210.79000854]
[665.11669922 224.86842346]
[654.20349121 237.84295654]
[638.71496582 230.94796753]
[623.73693848 230.13589478]
[608.75897217 229.32380676]
[601.88586426 232.11109924]
[593.51861572 228.35943604]
[578.55767822 227.27706909]
[563.59680176 226.19470215]
[548.63592529 225.11233521]
[533.67498779 224.02996826]
[518.71411133 222.94760132]
[510.22772217 232.67016602]
[497.49850464 235.76536560]
[485.13290405 230.88201904]
[477.73965454 219.59873962]
[462.80075073 218.24642944]
[447.86181641 216.89413452]
[432.92291260 215.54183960]
[417.98397827 214.18954468]
[406.74539185 223.89675903]
[391.57595825 222.73814392]
[381.47033691 210.88427734]
[366.53143311 209.53198242]
[376.00637817 221.16061401]
[375.94189453 236.16047668]
[366.36730957 247.70722961]
[351.63867188 250.54756165]
[338.45693970 243.38925171]
[332.81921387 229.48902893]
[337.29046631 215.17092896]
[349.83544922 206.94935608]
[335.18615723 203.72480774]
[320.53683472 200.50024414]
[305.88754272 197.27569580]
[291.23822021 194.05113220]
[286.89678955 199.00540161]
[281.18273926 202.38574219]
[274.64920044 203.82749939]
[267.94030762 203.15553284]
[261.72793579 200.40476990]
[256.64419556 195.81987000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[3 102]
[4 101]
[5 100]
[8 98]
[9 97]
[10 96]
[11 95]
[12 94]
[13 49]
[14 48]
[15 47]
[16 46]
[19 45]
[20 44]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[28 36]
[29 35]
[30 34]
[51 67]
[52 66]
[53 65]
[54 63]
[55 62]
[56 61]
[71 90]
[72 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[106 167]
[107 166]
[108 165]
[109 164]
[110 163]
[111 155]
[112 154]
[115 151]
[116 150]
[117 149]
[118 148]
[119 147]
[122 143]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 136]
[129 135]
[130 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
