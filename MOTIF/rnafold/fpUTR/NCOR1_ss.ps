%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCUGGGGGGAGGGAGAGGGGUUGAGUCAAGAUGGCGGCCAAGGUGGCGAAGCAGCAGCCGCGGCGGCGGCGGCGGCUGGAGUGAGCGUCCGACUCGCCGCGCCGAACGAGGUCCCGGUGUAGGGCCGCGCGCCGUGGCCGCGUCCCACUCCUCAGGCCGGGGCGCACGUCGGCUCCCACGCUUAGCCAGCUCCCGGUGGUUUCCUAGAAACAUGAUUGUUUAUUGGCAUUGAUCUCACAGUCUGGUGAGGA\
CUUCUUUACUGAUA\
) } def
/len { sequence length } bind def

/coor [
[448.80960083 513.91882324]
[461.38748169 522.09271240]
[457.92825317 507.49703979]
[454.46902466 492.90136719]
[451.00976562 478.30569458]
[447.55053711 463.71002197]
[444.09130859 449.11434937]
[440.63208008 434.51867676]
[433.66717529 421.23370361]
[423.63021851 410.08654785]
[413.59323120 398.93936157]
[403.55627441 387.79220581]
[393.51931763 376.64501953]
[378.67800903 376.12438965]
[368.34030151 364.96255493]
[368.98703003 349.39913940]
[358.95007324 338.25198364]
[344.10876465 337.73135376]
[333.77105713 326.56948853]
[334.41778564 311.00610352]
[324.38082886 299.85891724]
[314.34387207 288.71176147]
[300.07772827 284.43081665]
[296.59353638 268.99801636]
[286.55657959 257.85086060]
[269.58828735 253.31506348]
[265.95031738 235.24714661]
[255.78431702 224.21751404]
[245.61834717 213.18788147]
[235.45236206 202.15823364]
[225.28637695 191.12860107]
[220.66899109 190.04130554]
[216.67300415 186.06332397]
[215.01585388 179.72203064]
[205.10928345 168.45883179]
[195.20269775 157.19563293]
[185.29612732 145.93243408]
[173.16087341 137.11564636]
[159.38761902 131.17445374]
[145.61437988 125.23326111]
[131.84114075 119.29206085]
[118.06790161 113.35086823]
[104.29466248 107.40966797]
[102.02940369 120.34940338]
[89.62914276 130.62821960]
[69.77954865 132.28543091]
[54.80492783 131.41325378]
[43.05717850 141.64204407]
[27.88320541 140.54421997]
[18.20401573 129.28149414]
[3.22939396 128.40931702]
[-5.71744299 138.44900513]
[-18.62192726 141.46984863]
[-30.73473740 136.58963013]
[-37.72913361 125.79258728]
[-52.69259644 124.74623871]
[-64.55856323 134.83764648]
[-79.71873474 133.56333923]
[-89.26622772 122.18875885]
[-104.22968292 121.14241791]
[-119.19314575 120.09606934]
[-134.15660095 119.04972076]
[-149.12007141 118.00337219]
[-164.08352661 116.95702362]
[-179.04699707 115.91067505]
[-193.35327148 122.66648102]
[-205.50981140 114.06021881]
[-220.47328186 113.01387024]
[-234.96751404 120.68519592]
[-248.71247864 111.74047852]
[-247.56852722 95.38127899]
[-232.71246338 88.43653870]
[-219.42692566 98.05040741]
[-204.46347046 99.09675598]
[-191.22747803 92.26611328]
[-178.00064087 100.94721985]
[-163.03718567 101.99356842]
[-148.07371521 103.03990936]
[-133.11026001 104.08625793]
[-118.14679718 105.13260651]
[-103.18334198 106.17895508]
[-88.21987915 107.22530365]
[-77.18227386 97.29016876]
[-61.99228668 98.13815308]
[-51.64624786 109.78277588]
[-36.68278885 110.82912445]
[-24.45436668 99.26011658]
[-7.30535269 100.14957428]
[4.10156631 113.43470001]
[19.07618904 114.30686951]
[29.99745178 104.24398804]
[45.19627380 104.91517639]
[55.67710114 116.43862915]
[70.65172577 117.31080627]
[74.51451111 110.88204956]
[82.24008179 98.02453613]
[86.10286713 91.59578705]
[78.30261993 78.78343964]
[70.42797089 66.01668549]
[62.47918701 53.29596710]
[54.53039551 40.57524490]
[46.58160782 27.85452461]
[38.63282013 15.13380241]
[22.17005730 6.84753895]
[22.28272438 -10.71615410]
[14.18646336 -23.34352875]
[6.09020376 -35.97090149]
[-9.40093899 -39.10140610]
[-18.07149887 -52.31491852]
[-14.77738953 -67.77209473]
[-1.47294497 -76.30247498]
[13.94854259 -72.84512329]
[22.33777809 -59.45123672]
[18.71757698 -44.06716156]
[26.81383705 -31.43978882]
[34.91009903 -18.81241417]
[46.63637161 -15.93451786]
[53.49008942 -5.51138783]
[51.35353851 7.18501329]
[59.30233002 19.90573502]
[67.25112152 32.62645721]
[75.19990540 45.34717941]
[83.14869690 58.06789780]
[89.33615875 62.06070328]
[91.11496735 70.98319244]
[98.91521454 83.79553986]
[110.23585510 93.63642883]
[124.00909424 99.57762146]
[137.78233337 105.51882172]
[151.55557251 111.46001434]
[165.32882690 117.40121460]
[179.10206604 123.34240723]
[192.94349670 117.56187439]
[198.40039062 103.58967590]
[203.85729980 89.61747742]
[209.31419373 75.64528656]
[214.77108765 61.67308807]
[212.58436584 46.00373077]
[224.42160034 36.96331024]
[229.87849426 22.99111366]
[235.33538818 9.01891804]
[240.79229736 -4.95327759]
[246.24919128 -18.92547417]
[235.04092407 -29.15969086]
[228.29005432 -42.75344849]
[226.90959167 -57.86830139]
[231.08621216 -72.46008301]
[240.25506592 -84.55538940]
[253.17616272 -92.51841736]
[268.10202026 -95.27223969]
[283.01400757 -92.44441986]
[295.89544678 -84.41739655]
[305.00421143 -72.27676392]
[309.10839844 -57.66444016]
[307.65298462 -42.55662155]
[300.83477783 -28.99651718]
[289.57586670 -18.81801987]
[275.39898682 -13.39768791]
[260.22137451 -13.46857548]
[254.76448059 0.50362039]
[249.30758667 14.47581673]
[243.85069275 28.44801331]
[238.39379883 42.42020798]
[240.97084045 57.09018326]
[228.74328613 67.12998199]
[223.28639221 81.10218048]
[217.82949829 95.07437897]
[212.37258911 109.04657745]
[206.91569519 123.01876831]
[203.17251587 131.48887634]
[196.55932617 136.02584839]
[206.46589661 147.28904724]
[216.37248230 158.55224609]
[226.27905273 169.81546021]
[236.31602478 180.96263123]
[246.48199463 191.99226379]
[256.64797974 203.02189636]
[266.81396484 214.05152893]
[276.97994995 225.08116150]
[289.78936768 226.37803650]
[298.02911377 235.74401855]
[297.70373535 247.81388855]
[307.74069214 258.96105957]
[322.72476196 264.03933716]
[325.49102783 278.67480469]
[335.52798462 289.82196045]
[345.56494141 300.96914673]
[361.11068726 301.95278931]
[371.13079834 313.40057373]
[370.09725952 328.21502686]
[380.13421631 339.36218262]
[395.67996216 340.34582520]
[405.70004272 351.79364014]
[404.66650391 366.60806274]
[414.70346069 377.75521851]
[424.74041748 388.90240479]
[434.77737427 400.04959106]
[444.81433105 411.19674683]
[483.32592773 397.40545654]
[497.29812622 402.86236572]
[511.27032471 408.31924438]
[522.46826172 398.00582886]
[536.97454834 393.59503174]
[551.89630127 395.91049194]
[564.28210449 404.44000244]
[571.70574951 417.44766235]
[572.74121094 432.32696533]
[586.71337891 437.78384399]
[599.75195312 429.58010864]
[614.94348145 430.61483765]
[626.47637939 440.28213501]
[630.06237793 454.71398926]
[644.03460693 460.17089844]
[658.00677490 465.62777710]
[671.97900391 471.08468628]
[685.95117188 476.54156494]
[702.07269287 473.53689575]
[712.52856445 486.17047119]
[706.56268311 501.44592285]
[690.31219482 503.64923096]
[680.49426270 490.51376343]
[666.52209473 485.05688477]
[652.54986572 479.59997559]
[638.57769775 474.14309692]
[624.60546875 468.68618774]
[612.18774414 476.86770630]
[597.15563965 476.15994263]
[585.28393555 466.62500000]
[581.25646973 451.75604248]
[567.28430176 446.29916382]
[556.43872070 456.53826904]
[542.16436768 461.07171631]
[527.27624512 458.94927979]
[514.73492432 450.53890991]
[507.05764771 437.46423340]
[505.81341553 422.29144287]
[491.84121704 416.83456421]
[477.86901855 411.37765503]
[472.20870972 416.29809570]
[475.07113647 431.02246094]
[460.88806152 426.13897705]
[455.22775269 431.05941772]
[458.68698120 445.65509033]
[462.14620972 460.25076294]
[465.60543823 474.84643555]
[469.06469727 489.44210815]
[472.52392578 504.03778076]
[475.98315430 518.63348389]
[480.03378296 533.07623291]
[484.66903687 547.34204102]
[489.30429077 561.60791016]
[493.93954468 575.87371826]
[498.57479858 590.13958740]
[503.21005249 604.40545654]
[515.75238037 614.97052002]
[512.60797119 631.06536865]
[497.01144409 636.13299561]
[485.00723267 624.96026611]
[488.94421387 609.04071045]
[484.30892944 594.77484131]
[479.67367554 580.50897217]
[475.03842163 566.24316406]
[470.40316772 551.97729492]
[465.76791382 537.71148682]
[459.27539062 551.23358154]
[445.65084839 557.50823975]
[431.15496826 553.65222168]
[422.44876099 541.43737793]
[423.53292847 526.47662354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 248]
[3 247]
[4 246]
[5 245]
[6 244]
[7 243]
[8 242]
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[16 191]
[17 190]
[20 187]
[21 186]
[22 185]
[24 183]
[25 182]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 132]
[39 131]
[40 130]
[41 129]
[42 128]
[43 127]
[46 94]
[47 93]
[50 90]
[51 89]
[55 86]
[56 85]
[59 82]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[67 74]
[68 73]
[97 126]
[98 125]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[105 116]
[106 115]
[107 114]
[133 169]
[134 168]
[135 167]
[136 166]
[137 165]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[199 238]
[200 237]
[201 236]
[207 230]
[208 229]
[212 225]
[213 224]
[214 223]
[215 222]
[216 221]
[249 264]
[250 263]
[251 262]
[252 261]
[253 260]
[254 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
