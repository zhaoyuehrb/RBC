%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IRAK2)
} def

/sequence { (\
GCCCCUGGCUAGAGAAGCCGCAGCCCGCAGUGUCCGACCCAGUCGUCCCGCGCCGGAGCCGGCCCCGUAGCGUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.145190976 ubox
1 18 0.004688065 ubox
1 21 0.074163319 ubox
1 24 0.043951637 ubox
1 28 0.009770229 ubox
1 46 0.003565930 ubox
1 59 0.005495751 ubox
1 63 0.051636707 ubox
1 68 0.005370635 ubox
1 71 0.044893279 ubox
1 73 0.071901626 ubox
1 75 0.601557571 ubox
2 8 0.146126953 ubox
2 17 0.004710840 ubox
2 20 0.073547499 ubox
2 23 0.044062729 ubox
2 27 0.009761811 ubox
2 45 0.003897968 ubox
2 58 0.005508371 ubox
2 62 0.051748239 ubox
2 67 0.005558571 ubox
2 70 0.044811130 ubox
2 72 0.074504847 ubox
2 74 0.602778061 ubox
3 7 0.148779801 ubox
3 61 0.051589582 ubox
3 62 0.004656529 ubox
4 56 0.004553903 ubox
4 61 0.005266850 ubox
4 62 0.004558010 ubox
5 12 0.006011790 ubox
5 14 0.018206838 ubox
5 23 0.009251377 ubox
5 42 0.006467977 ubox
5 55 0.004546829 ubox
5 61 0.004696005 ubox
5 62 0.005270632 ubox
5 70 0.009885182 ubox
6 11 0.005642771 ubox
6 13 0.018150722 ubox
6 20 0.097763075 ubox
6 22 0.008483302 ubox
6 41 0.006520224 ubox
6 61 0.005494444 ubox
6 67 0.019144325 ubox
6 69 0.009587177 ubox
6 72 0.121890340 ubox
6 74 0.070226481 ubox
7 19 0.166641559 ubox
7 21 0.004284642 ubox
7 25 0.003443287 ubox
7 40 0.006522648 ubox
7 54 0.003243931 ubox
7 60 0.007981424 ubox
7 65 0.023559798 ubox
7 66 0.021974551 ubox
7 68 0.005342089 ubox
7 71 0.094492500 ubox
7 73 0.098732638 ubox
7 76 0.059559168 ubox
8 18 0.166810042 ubox
8 24 0.003489873 ubox
8 39 0.006505154 ubox
8 53 0.003241561 ubox
8 59 0.007980688 ubox
8 64 0.023652912 ubox
8 65 0.021870614 ubox
8 68 0.005736049 ubox
8 71 0.967025144 ubox
8 73 0.005443464 ubox
8 75 0.059177467 ubox
9 17 0.166802991 ubox
9 23 0.003498746 ubox
9 52 0.003236899 ubox
9 58 0.007979427 ubox
9 67 0.006327480 ubox
9 70 0.972377293 ubox
9 72 0.005467194 ubox
9 74 0.058191794 ubox
10 16 0.163146961 ubox
10 22 0.003376163 ubox
10 57 0.007750635 ubox
10 69 0.972104724 ubox
11 68 0.964111946 ubox
11 73 0.008438109 ubox
14 34 0.009585697 ubox
15 33 0.008832710 ubox
17 24 0.007041915 ubox
17 31 0.010206697 ubox
17 63 0.983926065 ubox
17 68 0.005125128 ubox
17 71 0.005988623 ubox
17 75 0.025337380 ubox
18 23 0.007040396 ubox
18 30 0.010406491 ubox
18 62 0.985370708 ubox
18 67 0.005279725 ubox
18 70 0.005977039 ubox
18 74 0.025371176 ubox
19 61 0.985331933 ubox
19 67 0.004112945 ubox
19 72 0.025449682 ubox
20 28 0.018614981 ubox
20 31 0.003225082 ubox
20 33 0.008416622 ubox
20 59 0.120179749 ubox
20 60 0.957818902 ubox
20 63 0.057198618 ubox
20 66 0.005066614 ubox
20 68 0.005339486 ubox
20 71 0.025819928 ubox
20 75 0.043633047 ubox
21 27 0.018637260 ubox
21 30 0.003349975 ubox
21 32 0.009186541 ubox
21 58 0.169127697 ubox
21 62 0.057436125 ubox
21 67 0.005497148 ubox
21 70 0.025771986 ubox
21 74 0.043815227 ubox
22 31 0.009041236 ubox
22 73 0.042188994 ubox
23 59 0.945016641 ubox
23 63 0.014020433 ubox
23 68 0.008328923 ubox
23 71 0.025206715 ubox
23 75 0.109381782 ubox
24 30 0.003436758 ubox
24 56 0.232020617 ubox
24 58 0.948966633 ubox
24 62 0.014028299 ubox
24 67 0.008710833 ubox
24 70 0.025191876 ubox
24 72 0.003994837 ubox
24 74 0.109532940 ubox
25 55 0.231524723 ubox
25 56 0.964500397 ubox
25 61 0.013938119 ubox
26 52 0.012994157 ubox
26 55 0.964707091 ubox
26 67 0.011202242 ubox
26 72 0.114925565 ubox
26 74 0.003361932 ubox
27 51 0.014653820 ubox
27 53 0.375184074 ubox
27 54 0.909090064 ubox
27 59 0.013940150 ubox
27 66 0.010884518 ubox
27 68 0.015199331 ubox
27 71 0.115223492 ubox
27 73 0.003569332 ubox
27 75 0.013565692 ubox
28 50 0.014712325 ubox
28 52 0.476647776 ubox
28 58 0.014018253 ubox
28 67 0.015447452 ubox
28 70 0.115103461 ubox
28 72 0.003582042 ubox
28 74 0.013585371 ubox
29 73 0.012613872 ubox
30 38 0.003692085 ubox
30 51 0.868973860 ubox
30 53 0.483971674 ubox
30 68 0.004768990 ubox
30 71 0.004121980 ubox
31 37 0.003687297 ubox
31 50 0.868670870 ubox
31 52 0.486670867 ubox
31 67 0.011038191 ubox
31 70 0.003951500 ubox
31 72 0.006997188 ubox
32 46 0.005594715 ubox
32 49 0.858530913 ubox
32 51 0.487542379 ubox
32 53 0.004376180 ubox
32 66 0.011669398 ubox
32 71 0.007762437 ubox
33 45 0.003239103 ubox
33 50 0.480931253 ubox
33 52 0.004328527 ubox
33 57 0.004685934 ubox
33 70 0.007509223 ubox
34 56 0.004769969 ubox
34 62 0.006879340 ubox
35 45 0.819551569 ubox
35 50 0.006654260 ubox
35 55 0.004767503 ubox
35 61 0.006889873 ubox
36 44 0.826571465 ubox
36 47 0.561624508 ubox
36 49 0.005635931 ubox
36 54 0.004647603 ubox
36 60 0.006790650 ubox
37 43 0.825524078 ubox
37 46 0.562187161 ubox
38 42 0.817354154 ubox
38 45 0.560969204 ubox
39 56 0.006282626 ubox
40 55 0.006299425 ubox
42 51 0.003329946 ubox
42 53 0.007073773 ubox
42 63 0.004046357 ubox
43 62 0.004051723 ubox
44 52 0.006797601 ubox
44 61 0.004052120 ubox
44 72 0.004586411 ubox
45 51 0.007587305 ubox
45 60 0.003534213 ubox
45 71 0.004870025 ubox
46 50 0.007123435 ubox
46 57 0.004952397 ubox
46 70 0.004843589 ubox
47 56 0.005272989 ubox
47 62 0.003733905 ubox
48 55 0.005215502 ubox
48 56 0.006571426 ubox
48 61 0.003773525 ubox
48 62 0.009761339 ubox
49 55 0.006624349 ubox
49 61 0.009874262 ubox
49 67 0.027417067 ubox
49 72 0.012364351 ubox
49 74 0.021594663 ubox
50 54 0.006236140 ubox
50 59 0.004650463 ubox
50 60 0.009640328 ubox
50 66 0.027885559 ubox
50 68 0.008894290 ubox
50 71 0.012688268 ubox
50 73 0.022581249 ubox
51 58 0.005134414 ubox
51 67 0.009174720 ubox
51 70 0.012684928 ubox
51 72 0.022680754 ubox
52 59 0.009508699 ubox
52 63 0.117288062 ubox
52 66 0.003926740 ubox
52 68 0.003317769 ubox
52 71 0.022730053 ubox
53 58 0.009480233 ubox
53 62 0.117590676 ubox
53 70 0.022630929 ubox
54 61 0.117605679 ubox
54 67 0.031172444 ubox
55 60 0.115986768 ubox
55 64 0.003212870 ubox
55 65 0.003463469 ubox
55 66 0.031854788 ubox
56 63 0.003225368 ubox
56 64 0.003591222 ubox
56 65 0.031826279 ubox
58 68 0.003492730 ubox
58 71 0.005602307 ubox
58 75 0.050971285 ubox
59 70 0.005594766 ubox
59 74 0.051062675 ubox
60 67 0.022298320 ubox
60 72 0.021571692 ubox
60 74 0.007991451 ubox
61 66 0.022563775 ubox
61 71 0.019248775 ubox
61 73 0.007459213 ubox
61 76 0.057518746 ubox
62 68 0.007538649 ubox
62 71 0.055122897 ubox
62 73 0.003840905 ubox
62 75 0.057944383 ubox
63 67 0.007702464 ubox
63 70 0.055923516 ubox
63 72 0.004189990 ubox
63 74 0.057849012 ubox
66 72 0.057840875 ubox
66 74 0.010930034 ubox
67 71 0.054735554 ubox
67 73 0.009134997 ubox
67 75 0.060302534 ubox
68 74 0.060036921 ubox
69 73 0.050000866 ubox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
17 63 0.9500000 lbox
18 62 0.9500000 lbox
19 61 0.9500000 lbox
20 60 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
showpage
end
%%EOF
