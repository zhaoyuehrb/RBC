%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:06:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PSMD11)
} def

/sequence { (\
UUUCCGGGUGUGUGUUUCCGGCGUCGGCGGCCGCGGCCGGGGACGGUGUGAGAGCGGUAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.006003497 ubox
1 42 0.029554936 ubox
1 43 0.358741970 ubox
1 46 0.003942050 ubox
1 52 0.004022699 ubox
1 53 0.047778687 ubox
1 54 0.014532638 ubox
1 57 0.005911431 ubox
1 60 0.300008748 ubox
1 61 0.181747497 ubox
2 41 0.025807178 ubox
2 42 0.628718994 ubox
2 43 0.032994648 ubox
2 45 0.003909618 ubox
2 51 0.004669028 ubox
2 52 0.051568903 ubox
2 53 0.019299774 ubox
2 54 0.069330810 ubox
2 56 0.005611802 ubox
2 57 0.003237525 ubox
2 59 0.279663073 ubox
2 60 0.308570837 ubox
2 61 0.027626255 ubox
3 40 0.004048395 ubox
3 41 0.715534648 ubox
3 42 0.047910100 ubox
3 43 0.004578910 ubox
3 50 0.004243258 ubox
3 51 0.052902893 ubox
3 52 0.018609031 ubox
3 53 0.088171228 ubox
3 57 0.007867950 ubox
3 59 0.321562306 ubox
3 60 0.033135424 ubox
4 21 0.036773115 ubox
4 40 0.753542204 ubox
4 41 0.048883095 ubox
4 42 0.006049097 ubox
4 46 0.011173341 ubox
4 50 0.050659511 ubox
4 52 0.089948412 ubox
4 56 0.009529258 ubox
4 57 0.633908582 ubox
5 12 0.019391523 ubox
5 14 0.003325485 ubox
5 20 0.037557850 ubox
5 39 0.754071707 ubox
5 40 0.043205744 ubox
5 41 0.005497492 ubox
5 45 0.011242233 ubox
5 48 0.032469276 ubox
5 50 0.091713010 ubox
5 56 0.636828080 ubox
6 11 0.017709974 ubox
6 13 0.004523023 ubox
6 19 0.037598929 ubox
6 38 0.754421631 ubox
6 44 0.007054252 ubox
6 47 0.026631515 ubox
6 49 0.091493089 ubox
6 55 0.634780719 ubox
7 18 0.037600279 ubox
7 37 0.754368616 ubox
7 38 0.037127807 ubox
8 17 0.036868496 ubox
8 37 0.037561807 ubox
8 47 0.051016328 ubox
8 49 0.018619134 ubox
8 55 0.026384666 ubox
8 58 0.003907210 ubox
9 35 0.751431648 ubox
9 36 0.027575360 ubox
9 45 0.009833727 ubox
9 46 0.030978007 ubox
9 48 0.035167881 ubox
9 50 0.180634584 ubox
9 54 0.028806738 ubox
9 56 0.010507669 ubox
9 59 0.006776756 ubox
10 34 0.755228691 ubox
10 44 0.007040614 ubox
10 47 0.043278335 ubox
10 49 0.123640506 ubox
10 55 0.014716787 ubox
10 58 0.006478013 ubox
11 33 0.754925410 ubox
11 35 0.007735964 ubox
11 43 0.005789679 ubox
11 45 0.016625856 ubox
11 46 0.029324687 ubox
11 48 0.107270628 ubox
11 50 0.109986457 ubox
11 54 0.014769838 ubox
11 56 0.023372490 ubox
11 57 0.004497988 ubox
12 31 0.008710237 ubox
12 32 0.754477527 ubox
12 34 0.010631290 ubox
12 44 0.013191218 ubox
12 47 0.033061050 ubox
12 49 0.106917123 ubox
12 55 0.031114776 ubox
13 29 0.004588685 ubox
13 30 0.011934348 ubox
13 33 0.010658733 ubox
13 43 0.011490930 ubox
13 45 0.631544090 ubox
13 46 0.028681374 ubox
13 48 0.029467881 ubox
13 50 0.009888542 ubox
13 54 0.029915315 ubox
13 56 0.015795480 ubox
14 28 0.005719168 ubox
14 31 0.754465321 ubox
14 32 0.009995062 ubox
14 44 0.652146772 ubox
14 47 0.003643665 ubox
14 55 0.020556344 ubox
15 30 0.752809310 ubox
15 41 0.004275255 ubox
15 43 0.652246457 ubox
15 52 0.008051624 ubox
15 53 0.035960257 ubox
15 54 0.016919222 ubox
16 29 0.704510384 ubox
16 30 0.015338410 ubox
16 42 0.651572314 ubox
16 51 0.010012335 ubox
16 52 0.040591435 ubox
16 53 0.014557102 ubox
17 27 0.003292487 ubox
17 29 0.019749912 ubox
17 41 0.650631628 ubox
17 50 0.009504267 ubox
17 51 0.043122083 ubox
17 52 0.009563737 ubox
18 27 0.753405271 ubox
18 29 0.003450397 ubox
18 30 0.035323802 ubox
18 40 0.652609674 ubox
18 50 0.043852837 ubox
19 26 0.754025899 ubox
19 29 0.036809462 ubox
19 33 0.005725748 ubox
19 39 0.652621068 ubox
19 48 0.045484810 ubox
20 25 0.743646773 ubox
20 28 0.029325532 ubox
20 32 0.007027845 ubox
20 38 0.652623442 ubox
20 47 0.045354283 ubox
21 28 0.032225668 ubox
21 31 0.007148893 ubox
21 37 0.652620702 ubox
22 27 0.039240137 ubox
22 29 0.004458687 ubox
22 30 0.007064537 ubox
22 35 0.101305209 ubox
22 36 0.644690916 ubox
22 45 0.057235899 ubox
23 28 0.004533708 ubox
23 31 0.005941124 ubox
23 34 0.143174420 ubox
23 44 0.057520025 ubox
24 30 0.005961276 ubox
24 33 0.033075163 ubox
24 43 0.057493530 ubox
25 29 0.005810579 ubox
25 33 0.650892139 ubox
25 35 0.014208669 ubox
25 42 0.057326365 ubox
26 32 0.652000954 ubox
26 34 0.012988806 ubox
27 31 0.641478296 ubox
27 34 0.010638546 ubox
27 55 0.004686140 ubox
27 58 0.007591067 ubox
28 33 0.012458206 ubox
28 35 0.005763203 ubox
28 39 0.057099127 ubox
28 54 0.005080106 ubox
28 57 0.007743239 ubox
29 34 0.005824492 ubox
29 38 0.057517750 ubox
30 37 0.057519968 ubox
30 55 0.007805196 ubox
30 58 0.009437792 ubox
31 36 0.057483135 ubox
31 54 0.007804673 ubox
31 57 0.009625402 ubox
32 50 0.009265959 ubox
32 56 0.009627357 ubox
33 49 0.009335675 ubox
33 55 0.009622751 ubox
34 48 0.009320156 ubox
34 54 0.009516465 ubox
35 47 0.006609603 ubox
36 47 0.011320842 ubox
37 46 0.013638535 ubox
38 45 0.013645092 ubox
39 44 0.013609684 ubox
43 49 0.013688100 ubox
43 58 0.618667638 ubox
44 48 0.014705228 ubox
44 50 0.018948896 ubox
44 56 0.168955968 ubox
44 57 0.678472793 ubox
45 49 0.011971794 ubox
45 55 0.164640068 ubox
46 55 0.692738924 ubox
46 58 0.007557114 ubox
47 54 0.687352728 ubox
47 56 0.137844593 ubox
47 57 0.007025268 ubox
47 59 0.006707406 ubox
48 55 0.181467620 ubox
48 58 0.005847575 ubox
49 54 0.178855816 ubox
49 56 0.024789197 ubox
49 57 0.005879066 ubox
49 59 0.005776957 ubox
50 55 0.032051175 ubox
50 58 0.006009931 ubox
2 42 0.9500000 lbox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
showpage
end
%%EOF
