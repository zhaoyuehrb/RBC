%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PNPLA3)
} def

/sequence { (\
AUGGUCCGAGGGGGGCGGGGCUGACGUCGCGCUGGGAAUGCCCUGGCCGAGACACUGAGGCAGGGUAGAGAGCGCUUGCGGGCGCCGGGCGGAGCUGCUGCGGAUCAGGACCCGAGCCGAUUCCCGAUCCCGACCCAGAUCCUAACCCGCGCCCCCGCCCCGCCGCCGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.005280448 ubox
2 168 0.019338534 ubox
2 171 0.303887356 ubox
3 7 0.010363115 ubox
3 167 0.027340902 ubox
3 170 0.429741353 ubox
3 173 0.670338159 ubox
4 166 0.027350123 ubox
4 169 0.429938815 ubox
4 172 0.676240379 ubox
5 165 0.026887871 ubox
5 168 0.427046898 ubox
5 171 0.457470088 ubox
6 10 0.014280351 ubox
6 11 0.008035913 ubox
6 12 0.003971050 ubox
6 13 0.019862951 ubox
7 11 0.004301893 ubox
7 12 0.019907337 ubox
7 165 0.012775409 ubox
7 168 0.054558894 ubox
7 171 0.738420826 ubox
8 164 0.011269013 ubox
8 167 0.050721025 ubox
8 170 0.836810717 ubox
10 164 0.108940744 ubox
10 167 0.083446814 ubox
10 170 0.170851805 ubox
10 173 0.005270118 ubox
11 161 0.005938232 ubox
11 163 0.108916249 ubox
11 166 0.075133298 ubox
11 167 0.974242575 ubox
11 169 0.170142491 ubox
11 170 0.004270670 ubox
11 172 0.005116838 ubox
11 173 0.005012737 ubox
12 160 0.005146671 ubox
12 161 0.109725446 ubox
12 166 0.975125102 ubox
12 167 0.172860652 ubox
12 169 0.003881673 ubox
12 170 0.003415079 ubox
12 172 0.005077184 ubox
13 159 0.004206612 ubox
13 160 0.109880162 ubox
13 161 0.005408854 ubox
13 164 0.052024259 ubox
13 166 0.172945100 ubox
13 167 0.022727724 ubox
13 169 0.003409549 ubox
14 159 0.109964943 ubox
14 160 0.004420824 ubox
14 163 0.036850230 ubox
14 164 0.992252137 ubox
14 166 0.016067947 ubox
14 170 0.005208287 ubox
15 158 0.110049340 ubox
15 163 0.993210633 ubox
15 169 0.005216036 ubox
16 157 0.110131914 ubox
16 162 0.993877533 ubox
16 168 0.005222629 ubox
17 156 0.110108796 ubox
17 161 0.993879812 ubox
17 167 0.005221048 ubox
18 155 0.109966852 ubox
18 160 0.993896155 ubox
18 166 0.005216095 ubox
19 28 0.074024753 ubox
19 154 0.079517290 ubox
19 159 0.993873066 ubox
19 164 0.005211460 ubox
20 27 0.075111392 ubox
20 79 0.007940546 ubox
20 83 0.003747167 ubox
20 153 0.049877714 ubox
20 158 0.993701681 ubox
20 163 0.005216032 ubox
21 26 0.075546263 ubox
21 78 0.007932382 ubox
21 81 0.038438686 ubox
21 82 0.003997884 ubox
21 157 0.990359236 ubox
21 162 0.005196756 ubox
22 29 0.010477550 ubox
22 54 0.008375159 ubox
22 78 0.017374473 ubox
22 80 0.044370349 ubox
22 81 0.004071177 ubox
22 157 0.056383910 ubox
23 28 0.188558136 ubox
23 53 0.009367570 ubox
23 77 0.036533234 ubox
23 79 0.245042539 ubox
23 156 0.266232273 ubox
24 76 0.037706979 ubox
25 78 0.340012366 ubox
25 80 0.218109462 ubox
25 157 0.010030468 ubox
26 53 0.028320232 ubox
26 75 0.008088404 ubox
26 77 0.335532288 ubox
26 79 0.483662296 ubox
26 156 0.023416414 ubox
27 50 0.017380889 ubox
27 52 0.028233503 ubox
27 78 0.473254700 ubox
28 49 0.018472990 ubox
28 51 0.028045775 ubox
28 74 0.009093420 ubox
28 78 0.061234956 ubox
28 80 0.003895967 ubox
29 48 0.018781749 ubox
29 73 0.009267532 ubox
29 75 0.998035020 ubox
29 77 0.008584441 ubox
29 79 0.007359233 ubox
30 49 0.023972618 ubox
30 72 0.009246892 ubox
30 74 0.999285950 ubox
30 78 0.006928232 ubox
31 47 0.029068530 ubox
31 48 0.017036401 ubox
31 73 0.999349054 ubox
31 75 0.004903376 ubox
32 46 0.033671088 ubox
32 70 0.007890168 ubox
32 72 0.999336917 ubox
32 74 0.004901702 ubox
33 45 0.033176827 ubox
33 69 0.007374035 ubox
33 71 0.992070739 ubox
34 43 0.014470237 ubox
34 44 0.030319415 ubox
34 73 0.003164624 ubox
35 42 0.014539053 ubox
35 43 0.030411559 ubox
36 41 0.014530935 ubox
36 42 0.030341031 ubox
38 66 0.004796067 ubox
39 67 0.985100222 ubox
40 66 0.998645670 ubox
41 65 0.999414481 ubox
42 64 0.999411768 ubox
42 65 0.003855208 ubox
43 63 0.999381172 ubox
43 64 0.005238501 ubox
44 62 0.978192487 ubox
44 63 0.005854886 ubox
45 61 0.694029428 ubox
46 61 0.718977063 ubox
47 60 0.996278424 ubox
48 57 0.031452199 ubox
48 59 0.996237741 ubox
49 56 0.044189615 ubox
50 56 0.413915518 ubox
51 55 0.417254042 ubox
60 79 0.033608459 ubox
61 78 0.033638873 ubox
62 76 0.007455912 ubox
62 77 0.032763834 ubox
63 75 0.010548483 ubox
63 76 0.031877482 ubox
64 75 0.031827793 ubox
65 73 0.031349211 ubox
66 72 0.030941465 ubox
77 157 0.028713039 ubox
78 156 0.523234598 ubox
78 158 0.019221310 ubox
79 157 0.023677828 ubox
80 153 0.003865890 ubox
80 154 0.965721843 ubox
80 155 0.096245000 ubox
80 156 0.070012925 ubox
81 152 0.003188344 ubox
81 153 0.992214413 ubox
81 154 0.087725872 ubox
81 155 0.070635751 ubox
81 156 0.005244049 ubox
82 152 0.994645656 ubox
82 153 0.075255317 ubox
82 154 0.070016616 ubox
82 155 0.004878392 ubox
83 151 0.995705353 ubox
84 150 0.995492552 ubox
84 152 0.092243968 ubox
85 149 0.718696468 ubox
85 151 0.092288320 ubox
86 149 0.694959165 ubox
87 147 0.204922672 ubox
87 148 0.978452639 ubox
88 146 0.205027674 ubox
88 147 0.978701728 ubox
88 148 0.004675687 ubox
89 146 0.978178533 ubox
89 147 0.004725582 ubox
91 142 0.999005628 ubox
91 143 0.023060146 ubox
92 141 0.999644753 ubox
92 142 0.018507553 ubox
93 140 0.915571353 ubox
93 143 0.008517298 ubox
94 101 0.012348038 ubox
94 142 0.008656444 ubox
95 100 0.012362969 ubox
95 138 0.988842982 ubox
96 137 0.998276656 ubox
97 136 0.996174828 ubox
98 138 0.013496995 ubox
99 132 0.613369954 ubox
99 137 0.013762098 ubox
100 131 0.635390505 ubox
100 136 0.013808433 ubox
101 132 0.711356281 ubox
102 130 0.812546839 ubox
102 131 0.582360015 ubox
103 129 0.910626302 ubox
103 130 0.413109312 ubox
104 128 0.998622452 ubox
105 127 0.999591267 ubox
106 126 0.997870473 ubox
108 118 0.003187250 ubox
108 123 0.008873292 ubox
108 124 0.997667214 ubox
108 125 0.059625530 ubox
109 117 0.003197365 ubox
109 122 0.008971898 ubox
109 123 0.998340810 ubox
109 124 0.055311170 ubox
110 121 0.019322984 ubox
110 122 0.990592907 ubox
113 119 0.972022528 ubox
114 118 0.910908466 ubox
114 122 0.015489057 ubox
114 123 0.027043721 ubox
115 121 0.028189862 ubox
115 122 0.026721030 ubox
116 121 0.020365637 ubox
165 172 0.006412567 ubox
166 171 0.006409171 ubox
7 171 0.9500000 lbox
8 170 0.9500000 lbox
11 167 0.9500000 lbox
12 166 0.9500000 lbox
14 164 0.9500000 lbox
15 163 0.9500000 lbox
16 162 0.9500000 lbox
17 161 0.9500000 lbox
18 160 0.9500000 lbox
19 159 0.9500000 lbox
20 158 0.9500000 lbox
21 157 0.9500000 lbox
29 75 0.9500000 lbox
30 74 0.9500000 lbox
31 73 0.9500000 lbox
32 72 0.9500000 lbox
33 71 0.9500000 lbox
39 67 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
43 63 0.9500000 lbox
44 62 0.9500000 lbox
45 61 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
80 154 0.9500000 lbox
81 153 0.9500000 lbox
82 152 0.9500000 lbox
83 151 0.9500000 lbox
84 150 0.9500000 lbox
85 149 0.9500000 lbox
87 148 0.9500000 lbox
88 147 0.9500000 lbox
89 146 0.9500000 lbox
91 142 0.9500000 lbox
92 141 0.9500000 lbox
93 140 0.9500000 lbox
95 138 0.9500000 lbox
96 137 0.9500000 lbox
97 136 0.9500000 lbox
99 132 0.9500000 lbox
100 131 0.9500000 lbox
102 130 0.9500000 lbox
103 129 0.9500000 lbox
104 128 0.9500000 lbox
105 127 0.9500000 lbox
106 126 0.9500000 lbox
108 124 0.9500000 lbox
109 123 0.9500000 lbox
110 122 0.9500000 lbox
113 119 0.9500000 lbox
114 118 0.9500000 lbox
showpage
end
%%EOF
