%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCGGUCGCUUGUGCGUUCCGCUCCGGCCGCCCUUUGCGCUUGGAUCCACUUCCCCAUCUGUAACGAGGUGUUGAGACGAGGCGGAGUUGACCUGGAAACCUCUCCUUGGCCACUGUCCUUUCUAAGGAACUCAUUUCCAGAGUCCACCAGCACAGAACUGGUGGGGGAGCCUACUAGGAGCAGAGAAA\
) } def
/len { sequence length } bind def

/coor [
[66.73696899 369.26647949]
[66.64546967 353.46246338]
[77.81516266 342.28152466]
[77.56973267 327.28353882]
[77.32431030 312.28555298]
[62.68877792 308.99902344]
[56.05444717 322.45211792]
[57.69109726 340.78594971]
[42.74578476 349.97094727]
[36.33245850 363.53079224]
[29.91913033 377.09060669]
[31.79783249 393.38180542]
[18.46915627 402.93576050]
[3.64450336 395.92422485]
[2.57420421 379.56005859]
[16.35929108 370.67727661]
[22.77261734 357.11746216]
[29.18594360 343.55761719]
[25.40687752 332.05590820]
[30.65200615 320.70117188]
[42.60135651 315.81777954]
[49.23568726 302.36468506]
[54.40440750 288.28335571]
[58.04911041 273.73287964]
[61.69381332 259.18240356]
[65.33851624 244.63194275]
[68.98322296 230.08146667]
[72.02983856 215.39411926]
[74.47326660 200.59446716]
[76.91670227 185.79483032]
[68.05918884 173.87509155]
[70.32635498 158.83132935]
[82.88892365 149.62158203]
[85.33235931 134.82192993]
[87.77578735 120.02227783]
[80.92223358 106.67953491]
[67.46913910 100.04520416]
[54.01605225 93.41087341]
[40.56295776 86.77654266]
[27.10986900 80.14221191]
[18.01292801 79.14986420]
[13.49227619 73.28769684]
[0.14953485 66.43413544]
[-13.19320583 59.58057785]
[-26.53594780 52.72702026]
[-41.41680527 57.33113480]
[-54.85060883 50.19057846]
[-59.14822006 35.97558212]
[-72.49095917 29.12202454]
[-85.94405365 22.48769379]
[-99.50389099 16.07436752]
[-113.06373596 9.66104031]
[-126.62357330 3.24771428]
[-140.18341064 -3.16561198]
[-153.74325562 -9.57893848]
[-165.57693481 0.06090461]
[-180.42329407 3.60330653]
[-195.33454895 0.34492111]
[-207.35008240 -9.06729698]
[-214.08418274 -22.76454544]
[-214.19979858 -38.02722549]
[-207.67398071 -51.82492065]
[-195.80241394 -61.41808701]
[-180.94223022 -64.90200043]
[-166.04391479 -61.58491898]
[-154.06555176 -52.12545395]
[-147.38543701 -38.40179443]
[-147.32992554 -23.13877869]
[-133.77008057 -16.72545242]
[-120.21024323 -10.31212521]
[-106.65040588 -3.89879870]
[-93.09056854 2.51452780]
[-79.53072357 8.92785454]
[-74.79821014 8.18466568]
[-69.55027771 10.41780567]
[-65.63740540 15.77928257]
[-52.29466248 22.63284111]
[-38.23678589 17.84622192]
[-24.60771942 24.60663223]
[-19.68239021 39.38428116]
[-6.33964825 46.23783875]
[7.00309277 53.09139633]
[20.34583473 59.94495392]
[33.74419785 66.68912506]
[47.19728851 73.32345581]
[60.65037918 79.95778656]
[74.10346985 86.59211731]
[87.55656433 93.22644806]
[88.91341400 87.31062317]
[93.04827881 81.74588013]
[99.78546906 77.78527832]
[108.41024017 76.56493378]
[118.84188080 65.78620911]
[129.27352905 55.00748444]
[139.61662292 44.14377975]
[149.87051392 33.19581985]
[160.12440491 22.24785805]
[170.37828064 11.29989624]
[180.63217163 0.35193527]
[190.88604736 -10.59602547]
[201.13993835 -21.54398727]
[196.17720032 -37.30821991]
[199.81611633 -53.33336258]
[210.97229004 -65.27115631]
[226.53494263 -69.93138885]
[242.23379517 -66.13407135]
[252.30717468 -77.24834442]
[262.38055420 -88.36260986]
[272.45394897 -99.47687531]
[282.52731323 -110.59114075]
[292.60070801 -121.70540619]
[302.67410278 -132.81967163]
[296.88449097 -146.94210815]
[297.80429077 -162.17749023]
[305.25088501 -175.50080872]
[317.74572754 -184.26673889]
[332.80798340 -186.73477173]
[347.44702148 -182.41488647]
[358.75625610 -172.16479492]
[364.49020386 -158.01968384]
[363.51040649 -142.78804016]
[356.01141357 -129.49414062]
[343.48211670 -120.77749634]
[328.41027832 -118.36879730]
[313.78836060 -122.74629211]
[303.71496582 -111.63202667]
[293.64160156 -100.51776123]
[283.56820679 -89.40348816]
[273.49481201 -78.28922272]
[263.42144775 -67.17495728]
[253.34805298 -56.06069183]
[258.37554932 -43.35336304]
[257.42953491 -29.65407562]
[250.63787842 -17.64318466]
[239.27783203 -9.69533730]
[225.53605652 -7.41005468]
[212.08790588 -11.29010201]
[201.83401489 -0.34214130]
[191.58012390 10.60581970]
[181.32624817 21.55378151]
[171.07235718 32.50174332]
[160.81848145 43.44970322]
[150.56459045 54.39766312]
[148.28311157 61.44011688]
[140.05224609 65.43912506]
[129.62060547 76.21784973]
[119.18896484 86.99657440]
[121.99486542 101.73180389]
[135.65782166 107.92240906]
[149.32078552 114.11301422]
[162.98373413 120.30361938]
[176.64669800 126.49422455]
[190.30964661 132.68482971]
[204.32998657 125.75921631]
[219.50955200 129.51618958]
[228.68101501 142.18182373]
[227.51390076 157.77578735]
[216.55926514 168.93510437]
[200.98957825 170.39067078]
[188.15634155 161.45521545]
[184.11904907 146.34779358]
[170.45608521 140.15718079]
[156.79313660 133.96656799]
[143.13017273 127.77597046]
[129.46722412 121.58536530]
[115.80426025 115.39476013]
[102.57543945 122.46571350]
[100.13201141 137.26536560]
[97.68857574 152.06501770]
[106.62407684 164.82411194]
[103.93526459 179.79824829]
[91.71634674 188.23825073]
[89.27291870 203.03790283]
[86.82948303 217.83755493]
[100.39652252 211.43945312]
[113.93090820 217.90632629]
[117.47685242 232.48118591]
[108.42597961 244.44285583]
[93.43605804 244.99244690]
[83.53369141 233.72616577]
[79.88898468 248.27664185]
[76.24428558 262.82711792]
[72.59957886 277.37756348]
[68.95487976 291.92803955]
[82.67796326 296.11102295]
[92.32230377 312.04010010]
[92.56772614 327.03811646]
[92.81315613 342.03610229]
[104.34269714 352.84558105]
[104.76834106 368.64413452]
[93.83755493 380.05877686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 188]
[4 187]
[5 186]
[6 22]
[7 21]
[9 18]
[10 17]
[11 16]
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[28 174]
[29 173]
[30 172]
[33 169]
[34 168]
[35 167]
[36 88]
[37 87]
[38 86]
[39 85]
[40 84]
[42 83]
[43 82]
[44 81]
[45 80]
[48 77]
[49 76]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[92 147]
[93 146]
[94 145]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
[100 138]
[101 137]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[111 126]
[112 125]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
