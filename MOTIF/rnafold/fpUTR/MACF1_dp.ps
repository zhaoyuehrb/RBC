%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MACF1)
} def

/sequence { (\
AUCACUUCUCCCUGGGCUCCCAGGCCCUCCUGCAGCAGCCCCCGCCUGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 15 0.104641959 ubox
2 16 0.020393476 ubox
2 49 0.003318909 ubox
3 14 0.202177267 ubox
3 15 0.027621558 ubox
3 32 0.079874329 ubox
3 48 0.004508570 ubox
3 49 0.003907765 ubox
4 13 0.197572592 ubox
4 31 0.077981821 ubox
4 47 0.004317244 ubox
5 15 0.121409608 ubox
5 16 0.121747295 ubox
5 35 0.129770998 ubox
5 38 0.024736442 ubox
5 49 0.023943853 ubox
5 50 0.030642169 ubox
6 14 0.121005453 ubox
6 15 0.115306783 ubox
6 16 0.111848527 ubox
6 34 0.124829030 ubox
6 35 0.035163789 ubox
6 37 0.034604861 ubox
6 48 0.023581073 ubox
6 49 0.029932038 ubox
6 50 0.014745412 ubox
7 14 0.088971852 ubox
7 15 0.155997728 ubox
7 16 0.090285150 ubox
7 34 0.040872979 ubox
7 37 0.020891467 ubox
7 48 0.025751047 ubox
7 49 0.019898213 ubox
7 50 0.013280367 ubox
8 14 0.202103633 ubox
8 15 0.122282942 ubox
8 16 0.125792458 ubox
8 35 0.073526530 ubox
8 48 0.022157249 ubox
8 49 0.017400012 ubox
8 50 0.020499957 ubox
9 14 0.109828147 ubox
9 15 0.127513945 ubox
9 16 0.033517541 ubox
9 34 0.071803854 ubox
9 37 0.004197302 ubox
9 48 0.016634391 ubox
9 49 0.019503862 ubox
9 50 0.027691946 ubox
10 14 0.127296541 ubox
10 15 0.045472244 ubox
10 16 0.095313823 ubox
10 24 0.015160204 ubox
10 48 0.019580271 ubox
10 49 0.036992490 ubox
10 50 0.118271932 ubox
11 15 0.095932239 ubox
11 23 0.011438980 ubox
11 24 0.276995023 ubox
11 48 0.036942047 ubox
11 49 0.119597322 ubox
11 50 0.112469718 ubox
12 23 0.289253958 ubox
12 35 0.034104957 ubox
12 38 0.004739097 ubox
12 48 0.119319418 ubox
12 49 0.113512510 ubox
12 50 0.003636547 ubox
13 22 0.291806101 ubox
13 32 0.007326695 ubox
13 34 0.034284771 ubox
13 37 0.007973718 ubox
13 44 0.030111125 ubox
13 48 0.112954445 ubox
13 49 0.003296477 ubox
14 20 0.006585600 ubox
14 21 0.292209914 ubox
14 26 0.006593358 ubox
14 27 0.453833881 ubox
14 28 0.005287778 ubox
14 30 0.003478813 ubox
14 33 0.018038750 ubox
14 36 0.005572183 ubox
14 40 0.008444404 ubox
14 41 0.171830827 ubox
14 42 0.018286322 ubox
14 43 0.018262317 ubox
14 46 0.023592284 ubox
14 47 0.107455950 ubox
14 52 0.253431713 ubox
15 19 0.008138364 ubox
15 20 0.291191163 ubox
15 21 0.007283753 ubox
15 25 0.006548676 ubox
15 26 0.454961000 ubox
15 27 0.005087464 ubox
15 39 0.008273618 ubox
15 40 0.178739858 ubox
15 41 0.015522714 ubox
15 42 0.015947888 ubox
15 45 0.019785367 ubox
15 46 0.108876027 ubox
15 51 0.255156272 ubox
15 52 0.579579817 ubox
16 20 0.008555344 ubox
16 25 0.454987693 ubox
16 26 0.003724654 ubox
16 33 0.003318676 ubox
16 36 0.133151869 ubox
16 39 0.179744608 ubox
16 40 0.011345283 ubox
16 41 0.011836990 ubox
16 45 0.108673597 ubox
16 51 0.587552477 ubox
17 23 0.015581736 ubox
17 24 0.454612002 ubox
17 35 0.133558688 ubox
17 38 0.180235979 ubox
17 44 0.108487247 ubox
17 49 0.008660795 ubox
17 50 0.454636667 ubox
18 22 0.018992744 ubox
18 23 0.417891575 ubox
18 24 0.006008496 ubox
18 34 0.129634088 ubox
18 37 0.174772707 ubox
18 48 0.003541646 ubox
18 49 0.122690821 ubox
18 50 0.024488049 ubox
19 23 0.051041669 ubox
19 48 0.067311647 ubox
19 49 0.170088177 ubox
19 50 0.656063689 ubox
20 48 0.121090297 ubox
20 49 0.773986544 ubox
21 32 0.226074853 ubox
21 48 0.790864794 ubox
22 31 0.227251501 ubox
22 47 0.802331234 ubox
23 30 0.227386849 ubox
23 31 0.003954276 ubox
23 40 0.100028461 ubox
23 41 0.008674469 ubox
23 42 0.008106705 ubox
23 43 0.008080428 ubox
23 46 0.803034483 ubox
23 52 0.041742648 ubox
24 29 0.223714514 ubox
24 30 0.004257143 ubox
24 33 0.043148368 ubox
24 36 0.024826156 ubox
24 39 0.100261837 ubox
24 40 0.008017734 ubox
24 41 0.008116644 ubox
24 42 0.008041796 ubox
24 45 0.803033518 ubox
24 51 0.073042279 ubox
25 32 0.045645965 ubox
25 35 0.026016912 ubox
25 38 0.099884406 ubox
25 44 0.801865862 ubox
25 50 0.079528124 ubox
26 49 0.079572412 ubox
26 50 0.005545825 ubox
27 35 0.075277058 ubox
27 38 0.036544124 ubox
27 48 0.079278568 ubox
27 49 0.005642277 ubox
27 50 0.005007085 ubox
28 34 0.072827964 ubox
28 37 0.037799435 ubox
28 48 0.004420178 ubox
28 49 0.004566554 ubox
28 50 0.015445239 ubox
29 48 0.005234681 ubox
29 49 0.020447734 ubox
29 50 0.018811588 ubox
30 38 0.605599715 ubox
30 48 0.020418688 ubox
30 49 0.019006219 ubox
30 50 0.007643411 ubox
31 37 0.609492633 ubox
31 44 0.012144211 ubox
31 48 0.015746207 ubox
31 49 0.007092647 ubox
32 36 0.600319681 ubox
32 39 0.508745686 ubox
32 43 0.011693371 ubox
32 45 0.064827209 ubox
32 47 0.009950381 ubox
32 51 0.032070623 ubox
33 38 0.508844676 ubox
33 44 0.064857386 ubox
33 48 0.019572596 ubox
33 50 0.032125336 ubox
34 47 0.022952082 ubox
35 45 0.026654343 ubox
35 46 0.021299256 ubox
35 51 0.005903846 ubox
36 44 0.027992028 ubox
36 48 0.031770834 ubox
36 50 0.004879358 ubox
37 47 0.032104322 ubox
38 45 0.034635865 ubox
38 46 0.024903764 ubox
38 51 0.541923230 ubox
39 44 0.040145454 ubox
39 49 0.003564739 ubox
39 50 0.543549892 ubox
40 48 0.003718435 ubox
40 49 0.543199723 ubox
40 50 0.039073631 ubox
41 48 0.541321073 ubox
41 49 0.043924557 ubox
41 50 0.078102091 ubox
42 48 0.047878788 ubox
42 49 0.103873453 ubox
42 50 0.067979106 ubox
43 48 0.104090833 ubox
43 49 0.068544206 ubox
44 51 0.035748505 ubox
45 50 0.035703921 ubox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
showpage
end
%%EOF
