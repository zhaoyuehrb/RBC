%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGCCUCCUGUCCUCCGGAAAGGUGCCCGCCUCUUGCCUUCCGGCCCGGCGCCCGAUUUCCGCCUUCCGACCCAGCUGUGGGCUGCGCCCCACGCCAGCCCGCGCCCCGC\
) } def
/len { sequence length } bind def

/coor [
[88.05026245 138.85047913]
[81.12876129 136.00045776]
[74.84723663 131.92953491]
[69.41873169 126.77577972]
[65.02732849 120.71397400]
[61.82196426 113.94969177]
[59.91133499 106.71232605]
[59.36024475 99.24732971]
[60.18737411 91.80785370]
[62.36467743 84.64620972]
[65.81832123 78.00524902]
[54.91841125 67.70029449]
[44.01850891 57.39534378]
[25.55026245 61.78864670]
[8.23195934 54.38032913]
[-1.19686985 38.24412918]
[0.81922311 19.81231880]
[-10.90824890 10.45997143]
[-22.63572121 1.10762465]
[-34.36319351 -8.24472237]
[-46.09066391 -17.59706879]
[-57.81813812 -26.94941711]
[-69.92861176 -35.80020142]
[-82.40065765 -44.13375473]
[-94.87270355 -52.46730804]
[-107.34474945 -60.80086136]
[-119.81678772 -69.13441467]
[-132.28883362 -77.46796417]
[-150.62222290 -78.18146515]
[-157.88717651 -94.08830261]
[-170.58804321 -102.06878662]
[-183.28890991 -110.04927063]
[-196.48962402 -102.30333710]
[-211.77854919 -101.59091949]
[-225.64237976 -108.07572174]
[-234.89532471 -120.26759338]
[-237.41110229 -135.36492920]
[-232.61163330 -149.89845276]
[-221.59979248 -160.52850342]
[-206.90600586 -164.81233215]
[-191.90681458 -161.76557922]
[-180.04890442 -152.08834839]
[-174.05715942 -138.00440979]
[-175.30842590 -122.75012970]
[-162.60755920 -114.76965332]
[-149.90669250 -106.78916931]
[-137.95446777 -109.16706848]
[-127.27515411 -102.50067902]
[-123.95528412 -89.94001007]
[-111.48323822 -81.60646057]
[-99.01119232 -73.27290344]
[-86.53914642 -64.93935394]
[-74.06710815 -56.60579681]
[-61.59506226 -48.27224350]
[-57.95432663 -48.67517853]
[-53.93981552 -47.24031830]
[-50.46274185 -43.81410599]
[-48.46578979 -38.67688751]
[-36.73831940 -29.32454109]
[-25.01084709 -19.97219467]
[-13.28337479 -10.61984730]
[-1.55590212 -1.26750052]
[10.17156982 8.08484650]
[20.39602661 3.05100083]
[31.81704330 2.26148772]
[42.73529053 5.87312317]
[51.51134872 13.38494396]
[56.81182861 23.70731735]
[57.81191635 35.31988144]
[54.32346344 46.49543762]
[65.22336578 56.80039215]
[76.12326813 67.10534668]
[98.92614746 59.36746216]
[122.10591125 65.89010620]
[137.52731323 84.38406372]
[139.77799988 108.35864258]
[153.63619995 114.09889984]
[162.90885925 114.51340485]
[167.79893494 120.19938660]
[181.49067688 126.32604980]
[195.18243408 132.45271301]
[208.87417603 138.57937622]
[222.56593323 144.70603943]
[236.25767517 150.83270264]
[249.94943237 156.95936584]
[263.64117432 163.08602905]
[272.89855957 163.76043701]
[277.62725830 169.58132935]
[291.14178467 176.08958435]
[306.69851685 172.16940308]
[319.37509155 182.00219727]
[319.44714355 198.04508972]
[306.85937500 207.99134827]
[291.26806641 204.21104431]
[284.63351440 189.60411072]
[271.11898804 183.09585571]
[257.51452637 176.77778625]
[243.82276917 170.65110779]
[230.13101196 164.52444458]
[216.43927002 158.39778137]
[202.74751282 152.27111816]
[189.05577087 146.14445496]
[175.36401367 140.01779175]
[161.67227173 133.89112854]
[147.89595032 127.95709229]
[134.03775024 122.21684265]
[129.38661194 128.08172607]
[123.73889160 132.99426270]
[117.28610229 136.78787231]
[110.24708557 139.33387756]
[102.86055756 140.54594421]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 72]
[12 71]
[13 70]
[17 63]
[18 62]
[19 61]
[20 60]
[21 59]
[22 58]
[23 54]
[24 53]
[25 52]
[26 51]
[27 50]
[28 49]
[30 46]
[31 45]
[32 44]
[76 106]
[77 105]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[88 96]
[89 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
