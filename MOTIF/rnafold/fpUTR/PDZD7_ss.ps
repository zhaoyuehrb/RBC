%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGUGGGUGGGGUUUGCCGGCUGCGGCAGUAGCUCUCGCCUGCGGGUGGUUUGACAAGGCUGGCGGCGCCACACCAGCGACCAGGCCUGGAGCUCACACUUCUGAGAGGCAUCGCAAGCGAGGGCCUUCACGUUACUGAGACCCCAGCCCCGCACAGAGGCUCAUGGAGCUCGAAGCACGCAGGGCUGGCCUCUCCAGAGCUAGCAGAUUCCUUCUGGACCUGUAGGGUGCCGCCCUAGCCCAGCCGCC\
) } def
/len { sequence length } bind def

/coor [
[-93.98254395 406.65023804]
[-97.02175903 409.31658936]
[-100.37552643 410.32324219]
[-108.85485077 422.69665527]
[-117.33417511 435.07003784]
[-125.81349945 447.44345093]
[-134.29283142 459.81686401]
[-142.77214050 472.19024658]
[-151.25146484 484.56365967]
[-159.73078918 496.93704224]
[-168.21011353 509.31045532]
[-176.68943787 521.68383789]
[-185.09117126 534.11010742]
[-193.41496277 546.58862305]
[-201.73875427 559.06719971]
[-209.90571594 571.64898682]
[-217.91456604 584.33197021]
[-225.92341614 597.01495361]
[-233.93226624 609.69793701]
[-241.94111633 622.38092041]
[-242.04991150 638.77972412]
[-256.43786621 646.64855957]
[-270.30389404 637.89270020]
[-269.38378906 621.51934814]
[-254.62409973 614.37207031]
[-246.61524963 601.68908691]
[-238.60641479 589.00610352]
[-230.59756470 576.32312012]
[-222.58871460 563.64013672]
[-222.74134827 558.89019775]
[-219.92927551 553.98913574]
[-214.21731567 550.74340820]
[-205.89352417 538.26483154]
[-197.56973267 525.78631592]
[-196.47538757 518.49682617]
[-189.06285095 513.20452881]
[-180.58352661 500.83114624]
[-172.10420227 488.45773315]
[-163.62487793 476.08432007]
[-155.14555359 463.71093750]
[-146.66622925 451.33752441]
[-138.18690491 438.96411133]
[-129.70758057 426.59072876]
[-121.22825623 414.21731567]
[-112.74893188 401.84393311]
[-104.50338745 389.31350708]
[-96.49454498 376.63052368]
[-88.48569489 363.94750977]
[-80.47684479 351.26452637]
[-72.46799469 338.58154297]
[-64.45915222 325.89852905]
[-63.54760361 318.58398438]
[-56.26985550 313.10778809]
[-48.10289383 300.52603149]
[-48.53564072 297.78121948]
[-47.92144394 294.70159912]
[-46.12816238 291.67993164]
[-43.16635895 289.14932251]
[-39.19909286 287.53323364]
[-30.41272163 275.37594604]
[-21.62634659 263.21865845]
[-12.83997345 251.06135559]
[-4.20644903 238.79505920]
[4.27287483 226.42166138]
[12.75219917 214.04824829]
[21.23152351 201.67485046]
[29.71084595 189.30145264]
[38.19017029 176.92805481]
[46.66949463 164.55464172]
[55.14881897 152.18124390]
[63.62814331 139.80784607]
[53.50335693 127.30638885]
[47.51714706 112.37444305]
[46.20233536 96.34107208]
[49.67594528 80.63337708]
[36.56221771 73.35119629]
[23.44848633 66.06902313]
[10.28944111 58.86905670]
[-2.91440439 51.75157928]
[-17.98040771 56.52558136]
[-31.97074127 49.17397308]
[-36.58518982 34.05833817]
[-29.08608055 20.14651299]
[-13.92250252 15.69213581]
[-0.09073912 23.33790970]
[4.20307112 38.54773331]
[17.40691757 45.66521072]
[24.76685715 46.07146072]
[30.73066330 52.95529175]
[43.84439468 60.23746872]
[56.95812225 67.51964569]
[57.25792313 64.78826141]
[57.71439362 62.02505875]
[58.33071136 59.23852158]
[49.54433823 47.08123398]
[40.75796509 34.92394638]
[31.97159195 22.76665878]
[16.33025360 20.50302124]
[6.93785238 7.79245996]
[9.36673450 -7.82407236]
[22.17588615 -17.08156395]
[37.76586533 -14.48771095]
[46.88741684 -1.58139896]
[44.12887955 13.98028564]
[52.91525269 26.13757324]
[61.70162582 38.29486084]
[70.48799896 50.45214844]
[84.26399231 44.51733780]
[81.46434021 29.78092194]
[78.66468811 15.04450607]
[75.86503601 0.30809116]
[63.52309799 -13.37394810]
[69.98020935 -29.70363617]
[66.99633026 -44.40385437]
[64.01245880 -59.10407639]
[52.75210953 -71.02618408]
[57.70539474 -86.65938568]
[73.77680206 -89.92158508]
[84.43344116 -77.45690918]
[78.71267700 -62.08795166]
[81.69655609 -47.38772964]
[84.68042755 -32.68751144]
[94.57727051 -25.76031303]
[97.19515991 -13.55721188]
[90.60144806 -2.49156260]
[93.40110016 12.24485302]
[96.20075989 26.98126793]
[99.00041199 41.71768188]
[109.63733673 43.39748001]
[119.62429047 46.97139359]
[128.63301086 52.25854111]
[136.37930298 59.02294540]
[142.63198853 66.98348236]
[155.65353394 59.53774261]
[168.67509460 52.09200287]
[174.55227661 45.13407135]
[181.90655518 44.63573074]
[195.02029419 37.35355377]
[208.13401794 30.07137871]
[221.20191956 22.70727730]
[234.22348022 15.26153851]
[247.24504089 7.81580114]
[251.50187683 -7.16809177]
[264.81365967 -14.53363132]
[279.07226562 -10.38304138]
[292.09384155 -17.82877922]
[305.11538696 -25.27451706]
[318.13696289 -32.72025299]
[331.15850830 -40.16599274]
[344.18008423 -47.61172867]
[357.20162964 -55.05746841]
[365.34094238 -68.62441254]
[380.23019409 -68.22522736]
[393.25177002 -75.67096710]
[394.40255737 -95.66184235]
[407.33306885 -110.76065826]
[426.62551880 -114.91127014]
[444.35870361 -106.58922577]
[456.99133301 -114.67728424]
[469.62396240 -122.76535034]
[475.14556885 -130.00868225]
[482.46569824 -130.87443542]
[495.19854736 -138.80375671]
[507.93142700 -146.73307800]
[518.18035889 -160.23846436]
[533.99517822 -154.12870789]
[532.50213623 -137.24063110]
[515.86077881 -134.00021362]
[503.12786865 -126.07089233]
[490.39501953 -118.14157104]
[477.71203613 -110.13272095]
[465.07940674 -102.04466248]
[452.44677734 -93.95659637]
[454.11840820 -83.80870819]
[452.32519531 -73.64285278]
[447.24493408 -64.61287689]
[439.43008423 -57.75219345]
[429.74752808 -53.85552597]
[419.28262329 -53.38692856]
[409.21749878 -56.42464066]
[400.69750977 -62.64940643]
[387.67593384 -55.20366669]
[380.46801758 -42.16929245]
[364.64736938 -42.03590775]
[351.62582397 -34.59017181]
[338.60424805 -27.14443398]
[325.58270264 -19.69869614]
[312.56112671 -12.25295734]
[299.53958130 -4.80721998]
[286.51800537 2.63851762]
[282.86300659 17.03214073]
[269.76333618 24.76867485]
[254.69078064 20.83736038]
[241.66921997 28.28309822]
[228.64765930 35.72883606]
[224.41218567 41.76162338]
[215.41619873 43.18510818]
[202.30245972 50.46728516]
[189.18873596 57.74946213]
[176.12083435 65.11356354]
[163.09927368 72.55930328]
[150.07771301 80.00503540]
[153.76397705 95.87561035]
[152.54156494 112.12274933]
[146.52206421 127.26306152]
[158.28289795 136.57341003]
[170.04374695 145.88375854]
[181.80458069 155.19410706]
[194.66596985 154.47955322]
[204.26620483 162.45478821]
[205.81794739 174.43501282]
[217.46133423 183.89183044]
[229.10473633 193.34864807]
[245.37481689 195.40197754]
[251.48133850 210.62178040]
[241.14242554 223.35122681]
[224.99386597 220.49536133]
[219.64791870 204.99203491]
[208.00451660 195.53521729]
[196.36112976 186.07839966]
[178.89845276 184.23233032]
[172.49423218 166.95495605]
[160.73339844 157.64460754]
[148.97254944 148.33425903]
[137.21171570 139.02391052]
[118.69256592 150.57829285]
[97.11029053 153.84446716]
[76.00154114 148.28717041]
[67.52221680 160.66056824]
[59.04289627 173.03396606]
[50.56357193 185.40737915]
[42.08424759 197.78077698]
[33.60492325 210.15417480]
[25.12560081 222.52757263]
[16.64627647 234.90098572]
[8.16695309 247.27438354]
[7.28284359 253.78433228]
[3.78218508 258.21984863]
[-0.68268633 259.84774780]
[-9.46905994 272.00503540]
[-18.25543404 284.16232300]
[-27.04180717 296.31961060]
[-35.52112961 308.69299316]
[-43.68809128 321.27474976]
[-51.77615356 333.90737915]
[-59.78500366 346.59039307]
[-67.79385376 359.27337646]
[-75.80269623 371.95635986]
[-83.81154633 384.63937378]
[-91.82039642 397.32235718]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 45]
[4 44]
[5 43]
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[13 34]
[14 33]
[15 32]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[46 250]
[47 249]
[48 248]
[49 247]
[50 246]
[51 245]
[53 244]
[54 243]
[59 242]
[60 241]
[61 240]
[62 239]
[63 236]
[64 235]
[65 234]
[66 233]
[67 232]
[68 231]
[69 230]
[70 229]
[71 228]
[75 91]
[76 90]
[77 89]
[78 87]
[79 86]
[94 107]
[95 106]
[96 105]
[97 104]
[108 128]
[109 127]
[110 126]
[111 125]
[113 122]
[114 121]
[115 120]
[133 202]
[134 201]
[135 200]
[137 199]
[138 198]
[139 197]
[140 195]
[141 194]
[142 193]
[145 190]
[146 189]
[147 188]
[148 187]
[149 186]
[150 185]
[151 184]
[153 182]
[154 181]
[158 173]
[159 172]
[160 171]
[162 170]
[163 169]
[164 168]
[205 225]
[206 224]
[207 223]
[208 222]
[211 220]
[212 219]
[213 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
