%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCCACAGAUAUCAAAAGAAACCUGAAGAGCCUACAAAAAAAAAAGAGAUAAAGACAAAAUUCAAGAAAACACACACAUACAUAAUUGUGGUCACCUGGAGCCUGGGGGCCGGCCCAGCUCUCUCAGGAUUCAGCAGACAUUGGAGGUGGCAGUGAAGGAUACAGUGGUAGUCA\
) } def
/len { sequence length } bind def

/coor [
[148.96148682 203.14216614]
[142.28242493 189.71122742]
[135.60336304 176.28028870]
[128.92428589 162.84934998]
[122.24522400 149.41841125]
[115.56616211 135.98747253]
[108.88710022 122.55653381]
[93.93491364 121.35974121]
[85.20451355 133.55728149]
[76.47411346 145.75483704]
[81.21342468 160.41242981]
[76.46859741 174.88101196]
[64.25837708 183.67729187]
[49.38787460 183.59794617]
[40.65747452 195.79548645]
[39.59851074 212.16041565]
[24.77871513 219.18222046]
[11.44342613 209.63748169]
[13.31084442 193.34500122]
[28.45993042 187.06509399]
[37.19033051 174.86755371]
[32.31964493 160.81712341]
[36.70829391 146.42254639]
[48.87370682 137.26524353]
[64.27656555 137.02442932]
[73.00697327 124.82688904]
[81.73737335 112.62934113]
[68.22791290 119.14811707]
[54.71844864 125.66689301]
[41.20898438 132.18566895]
[32.15947342 144.14837646]
[21.66614914 154.86705017]
[9.89840984 164.16868591]
[-2.95377874 171.90310669]
[-16.68294334 177.94546509]
[-31.06745529 182.19819641]
[-45.87510300 184.59268188]
[-60.86684799 185.09025574]
[-75.80068207 183.68287659]
[-90.43551636 180.39328003]
[-104.53511047 175.27455139]
[-117.87185669 168.40933228]
[-130.23045349 159.90843201]
[-141.41139221 149.90911865]
[-151.23419189 138.57276917]
[-159.54028320 126.08242035]
[-166.19555664 112.63967896]
[-171.09260559 98.46156311]
[-174.15235901 83.77694702]
[-175.32542419 68.82289124]
[-174.59288025 53.84078598]
[-171.96653748 39.07249832]
[-167.48878479 24.75643158]
[-161.23193359 11.12368679]
[-153.29696655 -1.60566068]
[-143.81198120 -13.22612095]
[-132.93009949 -23.55010605]
[-120.82698822 -32.41095352]
[-107.69802094 -39.66562653]
[-93.75514221 -45.19700623]
[-79.22343445 -48.91580582]
[-64.33747864 -50.76198959]
[-49.33758545 -50.70575714]
[-34.46589279 -48.74801254]
[-19.96247673 -44.92036057]
[-6.06146574 -39.28459167]
[7.01273680 -31.93168831]
[19.04907417 -22.98034096]
[29.85324287 -12.57505703]
[39.25083160 -0.88380599]
[47.09013367 11.90467930]
[53.24459839 25.58395386]
[57.61487579 39.93319321]
[60.13154984 54.73148727]
[69.11344147 66.74504852]
[78.09532928 78.75860596]
[87.07722473 90.77217102]
[84.95448303 75.92312622]
[82.83173370 61.07408905]
[80.70899200 46.22505188]
[66.92860413 39.09199524]
[60.00284958 25.20626259]
[62.59482956 9.90720081]
[73.70787048 -0.92238784]
[89.06877899 -3.11830568]
[102.77097321 4.16382217]
[109.54568481 18.12386894]
[106.78789520 33.39391327]
[95.55802917 44.10231018]
[97.68077850 58.95134735]
[99.80352020 73.80038452]
[101.92626190 88.64942169]
[115.53024292 94.96858215]
[128.24626160 87.01226807]
[140.96228027 79.05595398]
[144.62150574 63.91502762]
[157.63069153 56.02733994]
[172.04270935 59.60916901]
[184.75872803 51.65285492]
[197.47474670 43.69654083]
[210.19076538 35.74022675]
[222.90676880 27.78391266]
[230.50163269 13.90483761]
[245.39500427 13.71320248]
[258.11102295 5.75688887]
[270.82702637 -2.19942498]
[283.54306030 -10.15573883]
[296.25906372 -18.11205292]
[308.97509766 -26.06836510]
[321.69110107 -34.02468109]
[334.40710449 -41.98099136]
[337.86569214 -47.67488098]
[342.92776489 -50.34351730]
[347.71865845 -49.98473358]
[360.70904541 -57.48473358]
[373.69940186 -64.98473358]
[384.39334106 -78.14057922]
[399.99542236 -71.50648499]
[397.93966675 -54.67763519]
[381.19940186 -51.99435043]
[368.20904541 -44.49435043]
[355.21865845 -36.99435043]
[342.36343384 -29.26497650]
[329.64739990 -21.30866241]
[316.93139648 -13.35234928]
[304.21539307 -5.39603567]
[291.49935913 2.56027794]
[278.78335571 10.51659107]
[266.06732178 18.47290421]
[253.35131836 26.42921829]
[246.66600037 39.73920441]
[230.86308289 40.49993134]
[218.14706421 48.45624161]
[205.43106079 56.41255569]
[192.71504211 64.36887360]
[179.99902344 72.32518768]
[176.91772461 86.85243988]
[164.13522339 95.10241699]
[148.91857910 91.77197266]
[136.20257568 99.72828674]
[123.48655701 107.68460083]
[123.41106415 110.36849976]
[123.02562714 113.11143494]
[122.31803131 115.87747192]
[128.99710083 129.30841064]
[135.67616272 142.73934937]
[142.35522461 156.17028809]
[149.03428650 169.60122681]
[155.71336365 183.03216553]
[162.39242554 196.46310425]
[184.22808838 201.73031616]
[194.98098755 221.13916016]
[188.04043579 241.92604065]
[196.10928345 254.57095337]
[210.05522156 262.04232788]
[210.37901306 276.93341064]
[218.44786072 289.57833862]
[233.97561646 291.42843628]
[244.64360046 302.86209106]
[245.41470337 318.48065186]
[235.92486572 330.90951538]
[220.65486145 334.28015137]
[206.81474304 327.00106812]
[200.93939209 312.50921631]
[205.80294800 297.64718628]
[197.73410034 285.00225830]
[184.36531067 278.43533325]
[183.46438599 262.63980103]
[175.39553833 249.99488831]
[167.38977051 251.21467590]
[159.34732056 250.01133728]
[151.98822021 246.47239685]
[145.97729492 240.89540100]
[141.86408997 233.76298523]
[140.03262329 225.70111084]
[140.66569519 217.42414856]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 27]
[9 26]
[10 25]
[14 21]
[15 20]
[77 92]
[78 91]
[79 90]
[80 89]
[93 141]
[94 140]
[95 139]
[98 136]
[99 135]
[100 134]
[101 133]
[102 132]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
[111 123]
[114 122]
[115 121]
[116 120]
[153 169]
[154 168]
[156 166]
[157 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
