%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DCTN6)
} def

/sequence { (\
CAACCCUGCCAGGCUCUCCAAUCGCAUGUGGAAUUAUCGCUCUACCCAGGCGGUGGUGUCGAUCUACGUUCCAAUUGGGGCCGUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.106737349 ubox
1 58 0.017005899 ubox
2 7 0.097642015 ubox
2 57 0.012137093 ubox
3 57 0.049256075 ubox
3 84 0.056155841 ubox
4 13 0.048137801 ubox
4 56 0.052143781 ubox
4 79 0.004920914 ubox
4 80 0.009464259 ubox
4 83 0.058124661 ubox
5 12 0.048593947 ubox
5 13 0.062693650 ubox
5 55 0.052152025 ubox
5 78 0.004924200 ubox
5 79 0.009496124 ubox
6 12 0.064555942 ubox
6 13 0.010563412 ubox
6 53 0.052243603 ubox
6 77 0.004899304 ubox
6 78 0.009346652 ubox
7 11 0.059112240 ubox
7 12 0.010698960 ubox
7 26 0.006672261 ubox
7 52 0.052224045 ubox
7 77 0.007930657 ubox
7 83 0.012497093 ubox
7 85 0.530124594 ubox
8 14 0.024671678 ubox
8 25 0.008157616 ubox
8 29 0.003448791 ubox
8 51 0.052289911 ubox
8 76 0.004203060 ubox
8 81 0.022707014 ubox
8 82 0.005825404 ubox
8 84 0.587502488 ubox
9 13 0.024537842 ubox
9 24 0.008151288 ubox
9 50 0.052291318 ubox
9 80 0.022807405 ubox
9 83 0.587552883 ubox
10 28 0.004969316 ubox
10 49 0.052207306 ubox
10 79 0.022472522 ubox
11 17 0.003713551 ubox
11 27 0.005379726 ubox
11 43 0.009125025 ubox
12 16 0.003903523 ubox
12 19 0.016775351 ubox
12 41 0.004119145 ubox
12 42 0.009124053 ubox
12 46 0.006025236 ubox
12 47 0.047630742 ubox
12 60 0.014128486 ubox
12 72 0.003261825 ubox
12 82 0.988399152 ubox
12 87 0.023567061 ubox
13 18 0.016525671 ubox
13 25 0.016321668 ubox
13 40 0.010076434 ubox
13 45 0.005666670 ubox
13 46 0.047268527 ubox
13 59 0.014214857 ubox
13 71 0.003203288 ubox
13 81 0.990900421 ubox
13 84 0.062830876 ubox
13 86 0.023514941 ubox
14 24 0.016493339 ubox
14 39 0.010203438 ubox
14 58 0.014221588 ubox
14 79 0.005918105 ubox
14 80 0.972737198 ubox
14 83 0.067594968 ubox
15 32 0.004238907 ubox
15 78 0.004456651 ubox
15 79 0.617530052 ubox
15 80 0.072455829 ubox
16 31 0.004340560 ubox
16 56 0.003574099 ubox
16 77 0.004876728 ubox
16 78 0.302989545 ubox
16 79 0.642349852 ubox
16 80 0.207598952 ubox
17 30 0.004149692 ubox
17 32 0.022291420 ubox
17 55 0.003321200 ubox
17 77 0.202378663 ubox
17 78 0.101671820 ubox
17 79 0.390561766 ubox
18 31 0.023429759 ubox
18 56 0.014607738 ubox
18 77 0.117614532 ubox
18 78 0.943779893 ubox
18 79 0.011842165 ubox
19 28 0.014479477 ubox
19 30 0.023443478 ubox
19 55 0.014653650 ubox
19 77 0.964925940 ubox
19 78 0.011059186 ubox
20 27 0.013349894 ubox
20 29 0.022801418 ubox
20 54 0.010411250 ubox
20 76 0.971015005 ubox
21 27 0.005362526 ubox
21 54 0.011489286 ubox
21 75 0.964099272 ubox
22 26 0.004997324 ubox
22 28 0.003672193 ubox
22 53 0.015549686 ubox
22 74 0.921431742 ubox
22 78 0.004024820 ubox
22 79 0.006914352 ubox
22 80 0.010540296 ubox
23 52 0.016422523 ubox
23 68 0.022600726 ubox
23 77 0.009498750 ubox
23 78 0.013798594 ubox
23 79 0.028120172 ubox
24 51 0.016449786 ubox
24 67 0.022205259 ubox
24 69 0.035429540 ubox
24 76 0.011032260 ubox
25 50 0.016437373 ubox
25 68 0.035449491 ubox
25 77 0.083839294 ubox
26 37 0.003897411 ubox
26 69 0.911924781 ubox
26 75 0.023089893 ubox
26 76 0.090732912 ubox
27 36 0.003926034 ubox
27 48 0.005060218 ubox
27 66 0.003594342 ubox
27 68 0.940477538 ubox
27 73 0.015146259 ubox
27 74 0.028420882 ubox
28 35 0.003829314 ubox
28 40 0.004648793 ubox
28 45 0.050761256 ubox
28 47 0.004276262 ubox
28 63 0.021092353 ubox
28 67 0.948471277 ubox
28 72 0.013491835 ubox
28 75 0.012365706 ubox
28 76 0.003687684 ubox
29 39 0.004648150 ubox
29 44 0.050960056 ubox
29 61 0.008740815 ubox
29 62 0.022181846 ubox
29 66 0.948186116 ubox
29 73 0.307405599 ubox
29 74 0.010011451 ubox
30 38 0.004613578 ubox
30 43 0.051005405 ubox
30 60 0.011801122 ubox
30 64 0.009485005 ubox
30 65 0.948027912 ubox
30 71 0.012590823 ubox
30 72 0.309957220 ubox
31 37 0.003371028 ubox
31 42 0.051030727 ubox
31 59 0.009969357 ubox
31 60 0.029042632 ubox
31 63 0.006001908 ubox
31 64 0.948115489 ubox
31 70 0.012510815 ubox
31 71 0.309992505 ubox
32 41 0.050521039 ubox
32 59 0.030578166 ubox
32 63 0.858586279 ubox
32 69 0.013298750 ubox
32 70 0.309769599 ubox
33 57 0.452360841 ubox
33 59 0.034866325 ubox
33 63 0.135433223 ubox
33 69 0.307931407 ubox
34 56 0.454221730 ubox
34 58 0.030624307 ubox
34 62 0.180641575 ubox
34 68 0.296402404 ubox
35 55 0.455598264 ubox
35 58 0.057002157 ubox
35 61 0.175792058 ubox
35 66 0.101532427 ubox
36 54 0.456864824 ubox
36 57 0.059318587 ubox
36 59 0.013948016 ubox
36 63 0.464076844 ubox
36 65 0.077634371 ubox
37 53 0.456830152 ubox
37 56 0.059364401 ubox
37 58 0.005584760 ubox
37 62 0.859597091 ubox
38 52 0.457203466 ubox
38 55 0.059323407 ubox
38 58 0.114981033 ubox
38 61 0.863460125 ubox
39 51 0.457257125 ubox
39 54 0.059237137 ubox
39 57 0.112686247 ubox
39 59 0.235955094 ubox
39 60 0.844392779 ubox
40 49 0.022298928 ubox
40 50 0.455198378 ubox
40 53 0.059228737 ubox
40 56 0.107764137 ubox
40 58 0.861596998 ubox
41 48 0.029735152 ubox
41 49 0.307118911 ubox
41 50 0.038679270 ubox
41 52 0.055691323 ubox
41 55 0.079099190 ubox
41 56 0.015960016 ubox
41 62 0.007033781 ubox
42 49 0.329312435 ubox
42 50 0.048408592 ubox
42 52 0.007887375 ubox
42 53 0.010375970 ubox
42 55 0.053494274 ubox
42 56 0.877370145 ubox
42 61 0.007084978 ubox
43 48 0.310055614 ubox
43 49 0.047789385 ubox
43 52 0.010305924 ubox
43 55 0.879262860 ubox
43 58 0.017597798 ubox
44 54 0.884371807 ubox
44 57 0.018293700 ubox
44 59 0.013382477 ubox
45 53 0.883035885 ubox
45 56 0.017764784 ubox
45 58 0.013517288 ubox
46 52 0.879884642 ubox
46 53 0.062818479 ubox
46 55 0.016959156 ubox
46 56 0.014634458 ubox
47 52 0.087208616 ubox
47 55 0.015323518 ubox
48 54 0.015669672 ubox
53 67 0.009887543 ubox
54 66 0.009900322 ubox
55 64 0.005714524 ubox
55 65 0.009629478 ubox
55 72 0.004321294 ubox
56 63 0.006530966 ubox
56 64 0.009647765 ubox
56 67 0.010395300 ubox
56 71 0.004319259 ubox
57 62 0.007941925 ubox
57 66 0.010395706 ubox
58 65 0.009641723 ubox
58 67 0.006617417 ubox
58 86 0.004100117 ubox
59 66 0.006199557 ubox
59 85 0.003841916 ubox
60 68 0.006317967 ubox
60 77 0.003663098 ubox
60 83 0.004283142 ubox
61 67 0.006588585 ubox
61 76 0.003668055 ubox
61 82 0.004301552 ubox
62 75 0.003643517 ubox
63 74 0.003470905 ubox
65 85 0.050584856 ubox
66 84 0.054102967 ubox
67 83 0.054439356 ubox
68 81 0.037617813 ubox
68 82 0.041989103 ubox
69 80 0.051107475 ubox
70 79 0.051413386 ubox
70 80 0.021302343 ubox
71 78 0.052257626 ubox
71 79 0.022859563 ubox
71 80 0.003326161 ubox
72 77 0.052277400 ubox
72 78 0.022816724 ubox
72 79 0.003331377 ubox
79 86 0.003398680 ubox
79 87 0.003898313 ubox
80 86 0.004086673 ubox
12 82 0.9500000 lbox
13 81 0.9500000 lbox
14 80 0.9500000 lbox
15 79 0.9500000 lbox
18 78 0.9500000 lbox
19 77 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
22 74 0.9500000 lbox
26 69 0.9500000 lbox
27 68 0.9500000 lbox
28 67 0.9500000 lbox
29 66 0.9500000 lbox
30 65 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
33 57 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
showpage
end
%%EOF
