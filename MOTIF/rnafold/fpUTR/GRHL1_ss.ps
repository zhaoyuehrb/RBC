%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUGCGCGCAGCCCGCGCGGAGCCGGCUCAGAGCGAGAAAAGCAAACCCAACCCGUCGGGGCCGCCGCUCCGGACCCGCAGCCGCCGCCGCCGCCUCCUCCCCCCGGAUCGGGUGUACUGUCCCAACCCGAAAGUCCAGUUCUGCGGCCCGGCAGCGGCGAGCGGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[91.28522491 270.41250610]
[84.70854187 284.46694946]
[71.11066437 291.94204712]
[55.72024155 289.96350098]
[44.45521545 279.29211426]
[41.64721680 264.03121948]
[48.37597656 250.04896545]
[62.05414963 242.72180176]
[63.96676254 227.84423828]
[65.87937164 212.96667480]
[63.60508728 205.90541077]
[67.96518707 197.83580017]
[70.14920807 182.99565125]
[72.33322144 168.15550232]
[74.51724243 153.31533813]
[76.70125580 138.47518921]
[78.88527679 123.63504028]
[70.38165283 111.27832794]
[55.74051666 108.01687622]
[41.09938049 104.75542450]
[26.45824242 101.49396515]
[13.22266197 109.70719910]
[-1.57907307 106.19105530]
[-9.32756901 93.52233887]
[-23.96870804 90.26088715]
[-38.60984421 86.99943542]
[-53.25098419 83.73798370]
[-47.72737122 97.68393707]
[-55.02368927 110.78980255]
[-69.78747559 113.44132233]
[-81.18825531 103.69338989]
[-80.86259460 88.69692230]
[-69.04964447 79.45315552]
[-83.33232880 74.87004089]
[-97.61501312 70.28693390]
[-111.89769745 65.70381927]
[-106.24651337 79.59857178]
[-111.91956329 93.48441315]
[-125.68349457 99.44713593]
[-139.69360352 94.08830261]
[-145.96484375 80.46217346]
[-140.92294312 66.33491516]
[-127.44255829 59.75841522]
[-141.13830566 53.64068604]
[-154.55368042 61.21260071]
[-169.67849731 59.45378494]
[-180.73669434 49.24691010]
[-183.62960815 34.66030502]
[-197.32534790 28.54257584]
[-211.02108765 22.42484474]
[-224.40101624 30.28342628]
[-239.84144592 28.74312782]
[-251.40524292 18.39622688]
[-254.64587402 3.22131467]
[-248.31724548 -10.94654369]
[-234.85285950 -18.65951729]
[-219.43005371 -16.95181084]
[-207.97918701 -6.48007202]
[-204.90336609 8.72910118]
[-191.20762634 14.84683228]
[-177.51187134 20.96456337]
[-164.71768188 13.38521481]
[-149.73654175 14.80981255]
[-138.33355713 24.90066147]
[-135.02056885 39.94494247]
[-121.32482910 46.06267166]
[-107.31459045 51.42113495]
[-93.03190613 56.00424576]
[-78.74922180 60.58735657]
[-64.46652985 65.17047119]
[-49.98953247 69.09683990]
[-35.34839249 72.35829163]
[-20.70725441 75.61975098]
[-6.06611681 78.88120270]
[6.32706738 70.69923401]
[21.22172356 73.79824066]
[29.71969414 86.85282898]
[44.36083221 90.11428070]
[59.00197220 93.37573242]
[73.64311218 96.63718414]
[93.66199493 77.69476318]
[115.39299011 87.53686523]
[129.75700378 83.21537781]
[144.12100220 78.89389038]
[158.48501587 74.57240295]
[172.84902954 70.25091553]
[183.83497620 58.86585617]
[198.25172424 62.60838318]
[212.61573792 58.28689957]
[226.97973633 53.96541214]
[241.26242065 49.38230133]
[255.45903015 44.53909683]
[269.65560913 39.69588852]
[283.85220337 34.85268402]
[298.04882812 30.00947762]
[302.80749512 13.79664612]
[316.15136719 3.70404458]
[332.71542358 3.54177237]
[345.98583984 13.17604637]
[360.09161377 8.07436085]
[347.12658691 0.53056878]
[343.13012695 -13.92724133]
[350.37997437 -27.05887222]
[364.74411011 -31.37998009]
[378.03570557 -24.42775917]
[382.67926025 -10.16461182]
[376.02899170 3.27951789]
[390.60812378 -0.24879742]
[405.18722534 -3.77711272]
[419.66424561 -7.70348692]
[434.02825928 -12.02497387]
[448.39224243 -16.34646034]
[462.75625610 -20.66794586]
[477.12026978 -24.98943329]
[491.48428345 -29.31091881]
[494.32846069 -44.34984207]
[503.84487915 -56.33718872]
[517.84674072 -62.51834488]
[533.11651611 -61.47293472]
[546.14526367 -53.44118500]
[553.93920898 -40.26873016]
[554.70721436 -24.98250198]
[548.27288818 -11.09516907]
[536.11480713 -1.79793608]
[521.02667236 0.77276069]
[506.47579956 -3.97380614]
[495.80575562 -14.94691086]
[481.44177246 -10.62542439]
[467.07775879 -6.30393744]
[452.71374512 -1.98245096]
[438.34973145 2.33903551]
[423.98571777 6.66052198]
[421.99710083 9.61424637]
[418.46133423 11.73614693]
[413.79238892 12.30166340]
[408.71554565 10.80201626]
[394.13641357 14.33033085]
[379.55728149 17.85864639]
[365.19329834 22.18013382]
[351.08752441 27.28181839]
[348.57968140 40.41563797]
[339.83236694 50.67139816]
[327.05487061 55.29361725]
[313.55703735 52.97096252]
[302.89202881 44.20607376]
[288.69543457 49.04927826]
[274.49884033 53.89248657]
[260.30221558 58.73569107]
[246.10563660 63.57889938]
[243.22042847 67.42681122]
[237.87208557 69.48175049]
[231.30122375 68.32942200]
[216.93722534 72.65090942]
[202.57321167 76.97239685]
[192.61466980 88.04835510]
[177.17051697 84.61492920]
[162.80650330 88.93641663]
[148.44248962 93.25789642]
[134.07849121 97.57938385]
[119.71447754 101.90087128]
[117.33073425 113.65005493]
[107.93967438 122.98289490]
[93.72542572 125.81906128]
[91.54140472 140.65921021]
[89.35739136 155.49935913]
[87.17337036 170.33950806]
[84.98935699 185.17965698]
[82.80533600 200.01982117]
[80.75693512 214.87928772]
[78.84432220 229.75685120]
[76.93171692 244.63441467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 171]
[9 170]
[10 169]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 163]
[18 80]
[19 79]
[20 78]
[21 77]
[24 74]
[25 73]
[26 72]
[27 71]
[33 70]
[34 69]
[35 68]
[36 67]
[43 66]
[44 65]
[48 61]
[49 60]
[50 59]
[82 160]
[83 159]
[84 158]
[85 157]
[86 156]
[88 154]
[89 153]
[90 152]
[91 149]
[92 148]
[93 147]
[94 146]
[95 145]
[99 140]
[100 139]
[107 138]
[108 137]
[109 136]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
