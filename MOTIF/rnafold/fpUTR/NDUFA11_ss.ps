%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAGGACUCCCUGAGCUGGGACUAGCGAAAUCUGUCUGCACUGAUCGCAGUCGUCCUCAGUUUCACCCUCUAGGAAUCGGCCUGGGGAUGCACGUGCUACUCUCUUCCUCCAGGCCGGUCCCCGGCGCGUGCGCGCGAUCCAUGUCCAUGUCCGCGCCUAUCAAUAAAGUUGCUCACUUGUUGCCGGCCCGCUAGCCCGAAAGGUUGCGCGCGCAGCCCGAGAAGUCUCGCGAUAGCCAGCCGCGGCUGCCCUU\
GCGCUUCCCGAGCUGGCGGGGUCCGUGGUGCGGGAUCGAGAUUGCGGGCU\
) } def
/len { sequence length } bind def

/coor [
[247.74459839 114.31155396]
[238.42100525 119.49217987]
[227.96348572 121.59177399]
[225.35876465 136.36389160]
[222.75404358 151.13601685]
[220.14932251 165.90812683]
[226.26356506 181.12483215]
[215.93110657 193.85952759]
[199.78109741 191.01184082]
[194.42727661 175.51123047]
[205.37719727 163.30340576]
[207.98193359 148.53128052]
[210.58665466 133.75917053]
[213.19137573 118.98705292]
[200.73095703 110.78790283]
[192.75038147 97.98374939]
[177.82937622 99.52104187]
[162.90835571 101.05833435]
[147.98733521 102.59562683]
[133.06632996 104.13291931]
[118.14530945 105.67021179]
[109.49449921 124.69233704]
[82.75325012 129.18377686]
[70.16481018 137.34043884]
[57.57637405 145.49710083]
[44.98793411 153.65376282]
[36.16131592 174.27589417]
[14.50262070 174.26998901]
[2.25966740 182.93659973]
[-9.98328686 191.60321045]
[-22.22624016 200.26982117]
[-27.38874054 207.74281311]
[-34.63966751 208.96179199]
[-46.97095490 217.50224304]
[-59.30223846 226.04270935]
[-59.78156281 241.44000244]
[-69.12615967 253.46214294]
[-83.58697510 257.62734985]
[-97.56027985 252.53964233]
[-109.89156342 261.08010864]
[-122.17884827 269.68374634]
[-134.42179871 278.35037231]
[-146.66474915 287.01696777]
[-158.90771484 295.68356323]
[-165.26661682 310.79968262]
[-181.56861877 312.58200073]
[-191.04360962 299.19708252]
[-183.94453430 284.41415405]
[-167.57431030 283.44061279]
[-155.33135986 274.77401733]
[-143.08840942 266.10739136]
[-130.84545898 257.44079590]
[-127.22003174 251.04406738]
[-118.43202209 248.74882507]
[-106.10073853 240.20835876]
[-105.94978333 225.33842468]
[-96.96546936 213.26588440]
[-82.42514038 208.74568176]
[-67.84269714 213.71142578]
[-55.51141357 205.17095947]
[-43.18013000 196.63050842]
[-30.89284706 188.02685547]
[-18.64989471 179.36026001]
[-6.40693998 170.69364929]
[5.83601332 162.02703857]
[5.48146296 154.26696777]
[8.22850418 146.90083313]
[13.70645428 141.13220215]
[21.09244156 137.93389893]
[29.23452759 137.88458252]
[36.83126831 141.06532288]
[49.41970825 132.90866089]
[62.00814819 124.75199890]
[74.59658813 116.59532928]
[74.13488007 109.10955811]
[73.21146393 94.13800812]
[72.74976349 86.65223694]
[59.25437546 80.10436249]
[45.75899124 73.55649567]
[32.26360703 67.00862122]
[18.76822472 60.46075058]
[5.27284002 53.91287994]
[-8.22254372 47.36500931]
[-21.71792793 40.81713867]
[-35.21331406 34.26926804]
[-48.70869446 27.72139740]
[-62.23751450 21.24288940]
[-75.79940796 14.83391380]
[-89.36130524 8.42493820]
[-99.91040802 19.28750038]
[-113.41612244 26.13398743]
[-128.41345215 28.22174263]
[-143.27560425 25.32430458]
[-156.39044189 17.75596237]
[-166.33535767 6.33767700]
[-172.03161621 -7.69198418]
[-172.86132812 -22.81118774]
[-168.73446655 -37.37991714]
[-160.09872437 -49.81785965]
[-147.89080811 -58.77584839]
[-133.43495178 -63.28218460]
[-118.29922485 -62.84804916]
[-104.12543488 -57.52054214]
[-92.45104218 -47.87754822]
[-84.54240417 -34.96506882]
[-81.25739288 -20.18374825]
[-82.95233154 -5.13695812]
[-69.39043427 1.27201760]
[-55.82854080 7.68099308]
[-48.47587967 7.69782257]
[-42.16082764 14.22601414]
[-28.66544151 20.77388382]
[-15.17005730 27.32175446]
[-1.67467356 33.86962509]
[11.82071018 40.41749573]
[25.31609535 46.96536636]
[38.81147766 53.51323700]
[52.30686188 60.06110764]
[65.80224609 66.60897827]
[79.29763031 73.15685272]
[105.32878876 74.08743286]
[116.60801697 90.74919891]
[131.52903748 89.21190643]
[146.45004272 87.67461395]
[161.37106323 86.13732147]
[176.29208374 84.60002899]
[191.21308899 83.06273651]
[197.84684753 66.29678345]
[211.81887817 55.02985764]
[229.44847107 52.12649155]
[246.14212036 58.26148224]
[257.59042358 71.76520538]
[272.17416382 68.25603485]
[283.78128052 57.50497437]
[297.96545410 62.05008698]
[312.54922485 58.54092026]
[327.13296509 55.03175354]
[341.71670532 51.52258682]
[356.30047607 48.01342010]
[370.88421631 44.50425339]
[385.46795654 40.99508667]
[388.43469238 37.98119354]
[391.85507202 36.21570587]
[395.29031372 35.68979645]
[398.34802246 36.25595474]
[400.72238159 37.65431595]
[415.43789673 34.74684525]
[427.47662354 24.48137474]
[441.46224976 29.60499001]
[456.17776489 26.69751740]
[463.94317627 21.98630142]
[471.05926514 23.83654785]
[485.80386353 21.08030510]
[500.54846191 18.32406235]
[515.29302979 15.56781960]
[530.03765869 12.81157684]
[544.78222656 10.05533409]
[559.52685547 7.29909182]
[574.27142334 4.54284906]
[577.34936523 -3.42617059]
[583.05047607 -9.63140869]
[590.52197266 -13.27011204]
[598.69091797 -13.91414928]
[604.82012939 -27.60477448]
[610.94927979 -41.29539871]
[617.07843018 -54.98602676]
[623.20764160 -68.67665100]
[629.33679199 -82.36727905]
[629.97814941 -91.42739868]
[635.59979248 -96.16648865]
[641.86920166 -109.79347229]
[637.67584229 -125.27879333]
[647.28405762 -138.12646484]
[663.32318115 -138.48083496]
[673.48944092 -126.07006836]
[669.98413086 -110.41464996]
[655.49621582 -103.52406311]
[649.22680664 -89.89708710]
[643.02740479 -76.23810577]
[636.89825439 -62.54747772]
[630.76904297 -48.85685349]
[624.63989258 -35.16622543]
[618.51074219 -21.47560120]
[612.38153076 -7.78497505]
[615.90954590 -3.32618356]
[618.16870117 1.89144993]
[633.13000488 2.96851969]
[648.09130859 4.04558945]
[663.06286621 4.96900320]
[678.04309082 5.73866320]
[693.02331543 6.50832319]
[708.00354004 7.27798319]
[722.98382568 8.04764366]
[737.96405029 8.81730366]
[752.94427490 9.58696365]
[767.92449951 10.35662365]
[782.90478516 11.12628365]
[797.08374023 4.10727167]
[809.39727783 12.48742485]
[824.37750244 13.25708485]
[828.93847656 10.93094349]
[833.48614502 10.58757305]
[837.27795410 11.89768219]
[839.80505371 14.28814602]
[854.75451660 15.51875877]
[866.74389648 5.57430220]
[881.88720703 7.03527832]
[891.29388428 18.52661705]
[906.24328613 19.75722885]
[921.19274902 20.98784065]
[936.14215088 22.21845436]
[951.09161377 23.44906616]
[968.96264648 14.05202198]
[984.31262207 25.85796547]
[999.28417969 26.78137970]
[1014.25573730 27.70479393]
[1029.22729492 28.62820625]
[1044.19885254 29.55162048]
[1059.17041016 30.47503471]
[1060.53173828 15.51971436]
[1075.20935059 2.50792265]
[1090.15881348 1.27731013]
[1105.10827637 0.04669768]
[1118.27429199 -9.73011971]
[1133.21484375 -2.96892905]
[1134.56030273 13.37493610]
[1120.92651367 22.48830986]
[1106.33886719 14.99613190]
[1091.38940430 16.22674561]
[1076.44006348 17.45735741]
[1075.74731445 32.44135284]
[1090.51940918 35.04607391]
[1105.29150391 37.65079880]
[1115.68334961 26.24846649]
[1130.59594727 22.29655266]
[1145.27075195 27.05609703]
[1155.02514648 39.00835037]
[1156.74633789 54.33938599]
[1149.88537598 68.15712738]
[1136.63134766 76.05239105]
[1121.21374512 75.50581360]
[1108.55212402 66.69181824]
[1102.68676758 52.42291260]
[1087.91467285 49.81819153]
[1073.14257812 47.21346664]
[1058.24694824 45.44658279]
[1043.27539062 44.52317047]
[1028.30383301 43.59975815]
[1013.33233643 42.67634201]
[998.36077881 41.75292969]
[983.38922119 40.82951736]
[976.42095947 48.21863556]
[966.32940674 50.62940598]
[956.36169434 47.03963470]
[949.86096191 38.39850235]
[934.91156006 37.16788864]
[919.96209717 35.93727493]
[905.01269531 34.70666504]
[890.06323242 33.47605133]
[878.90405273 43.27444839]
[863.72570801 42.23939133]
[853.52386475 30.46819305]
[838.57446289 29.23758125]
[823.60784912 28.23732567]
[808.62762451 27.46766663]
[795.52008057 34.54172897]
[782.13513184 26.10652542]
[767.15484619 25.33686447]
[752.17462158 24.56720543]
[737.19439697 23.79754448]
[722.21411133 23.02788544]
[707.23388672 22.25822449]
[692.25366211 21.48856354]
[677.27343750 20.71890450]
[662.29315186 19.94924355]
[658.24273682 22.39233208]
[652.62316895 22.35114098]
[647.01422119 19.00687027]
[632.05291748 17.92980003]
[617.09167480 16.85272980]
[598.19177246 30.36425018]
[577.02764893 19.28744507]
[562.28308105 22.04368782]
[547.53851318 24.79993057]
[532.79388428 27.55617332]
[518.04931641 30.31241608]
[503.30468750 33.06866074]
[488.56008911 35.82490158]
[473.81549072 38.58114624]
[459.08523560 41.41304016]
[444.36972046 44.32051086]
[433.38357544 54.37801743]
[418.34536743 49.46236420]
[403.62985229 52.36983871]
[388.97714233 55.57883453]
[374.39337158 59.08800125]
[359.80963135 62.59716797]
[345.22589111 66.10633850]
[330.64212036 69.61550140]
[316.05838013 73.12467194]
[301.47463989 76.63383484]
[290.91064453 87.13390350]
[275.68331909 82.83979034]
[261.09957886 86.34895325]
[259.64773560 96.91589355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[16 127]
[17 126]
[18 125]
[19 124]
[20 123]
[21 122]
[23 74]
[24 73]
[25 72]
[26 71]
[28 65]
[29 64]
[30 63]
[31 62]
[33 61]
[34 60]
[35 59]
[39 55]
[40 54]
[41 52]
[42 51]
[43 50]
[44 49]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
[87 109]
[88 108]
[89 107]
[132 304]
[133 303]
[135 301]
[136 300]
[137 299]
[138 298]
[139 297]
[140 296]
[141 295]
[146 294]
[147 293]
[149 291]
[150 290]
[152 289]
[153 288]
[154 287]
[155 286]
[156 285]
[157 284]
[158 283]
[159 282]
[163 184]
[164 183]
[165 182]
[166 181]
[167 180]
[168 179]
[170 178]
[171 177]
[186 280]
[187 279]
[188 278]
[189 275]
[190 274]
[191 273]
[192 272]
[193 271]
[194 270]
[195 269]
[196 268]
[197 267]
[199 265]
[200 264]
[204 263]
[205 262]
[208 259]
[209 258]
[210 257]
[211 256]
[212 255]
[214 251]
[215 250]
[216 249]
[217 248]
[218 247]
[219 246]
[221 230]
[222 229]
[223 228]
[231 245]
[232 244]
[233 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
