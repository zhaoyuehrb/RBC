%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SDHAF1)
} def

/sequence { (\
GUGGCUUUGCCCUUUGGCCUUUGCUGGCUGUGUGGCGGCUCCGCGGUUCGCAGGUCGUUCGCUGAGCGUCUCUGCUUAGCCGCGGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.011566857 ubox
1 36 0.021796581 ubox
1 39 0.162588303 ubox
1 44 0.004849816 ubox
1 86 0.003706735 ubox
2 23 0.011499404 ubox
2 26 0.020311564 ubox
2 35 0.021785461 ubox
2 38 0.162370925 ubox
2 43 0.004919282 ubox
3 11 0.018680941 ubox
3 12 0.003306206 ubox
3 19 0.034922645 ubox
3 22 0.003862553 ubox
3 25 0.070500467 ubox
3 40 0.890624297 ubox
3 41 0.028013851 ubox
3 42 0.018499960 ubox
3 87 0.010675414 ubox
4 10 0.018805156 ubox
4 18 0.034982344 ubox
4 21 0.003440519 ubox
4 24 0.073787538 ubox
4 33 0.021755248 ubox
4 36 0.161067817 ubox
4 39 0.962849645 ubox
4 40 0.010458489 ubox
4 41 0.019325422 ubox
4 86 0.008751432 ubox
5 9 0.018706252 ubox
5 17 0.034976606 ubox
5 23 0.073768985 ubox
5 32 0.021764837 ubox
5 35 0.161021900 ubox
5 38 0.961431795 ubox
5 85 0.008003384 ubox
6 16 0.034334259 ubox
6 34 0.158907552 ubox
6 37 0.786380212 ubox
6 38 0.016792081 ubox
7 16 0.003303725 ubox
7 34 0.004027066 ubox
7 35 0.006146017 ubox
7 37 0.075680173 ubox
7 38 0.130978473 ubox
8 30 0.004535046 ubox
8 32 0.134107406 ubox
8 34 0.010066012 ubox
8 37 0.476558310 ubox
9 18 0.074219177 ubox
9 28 0.041244047 ubox
9 31 0.148646903 ubox
9 33 0.038273673 ubox
9 36 0.977838674 ubox
9 39 0.075821004 ubox
10 17 0.074283377 ubox
10 27 0.041182867 ubox
10 30 0.149239738 ubox
10 32 0.039161588 ubox
10 35 0.979272607 ubox
10 38 0.075947737 ubox
11 16 0.073939224 ubox
11 17 0.004046150 ubox
11 26 0.041016452 ubox
11 27 0.009936517 ubox
11 34 0.977114163 ubox
11 35 0.040301117 ubox
11 37 0.075774111 ubox
12 16 0.004742672 ubox
12 26 0.010326861 ubox
12 27 0.005442074 ubox
12 34 0.054643939 ubox
12 35 0.074582192 ubox
13 26 0.005098930 ubox
13 34 0.073097276 ubox
13 35 0.006559368 ubox
14 27 0.010303771 ubox
14 34 0.006533712 ubox
15 26 0.012596682 ubox
15 30 0.829024816 ubox
15 32 0.030651022 ubox
16 25 0.045162260 ubox
16 29 0.982716753 ubox
16 31 0.007057571 ubox
16 40 0.012562978 ubox
17 24 0.045741597 ubox
17 28 0.995394532 ubox
17 36 0.003538807 ubox
17 39 0.013584437 ubox
18 23 0.045538396 ubox
18 27 0.995418364 ubox
18 35 0.003551258 ubox
18 38 0.013587305 ubox
19 26 0.995073222 ubox
19 27 0.005222581 ubox
19 34 0.003550673 ubox
19 37 0.013506761 ubox
20 26 0.007263058 ubox
21 35 0.008832127 ubox
21 38 0.003700611 ubox
22 34 0.008873230 ubox
22 37 0.005099083 ubox
23 31 0.003944002 ubox
23 33 0.009224109 ubox
23 36 0.011211332 ubox
23 39 0.017814232 ubox
24 30 0.003995190 ubox
24 32 0.009250563 ubox
24 35 0.011217993 ubox
24 38 0.017843549 ubox
25 34 0.011062268 ubox
25 37 0.016882493 ubox
26 33 0.009403280 ubox
26 36 0.012790527 ubox
26 40 0.072193758 ubox
27 36 0.013247721 ubox
27 39 0.080673297 ubox
28 35 0.017235753 ubox
28 38 0.080713528 ubox
29 34 0.016133851 ubox
29 37 0.080650246 ubox
30 36 0.080639638 ubox
31 35 0.075439999 ubox
37 87 0.019948580 ubox
38 86 0.019671859 ubox
39 85 0.013537515 ubox
40 84 0.005985830 ubox
40 85 0.004827347 ubox
41 84 0.007672145 ubox
41 85 0.990548620 ubox
42 84 0.999565686 ubox
43 83 0.999963283 ubox
44 82 0.999964475 ubox
45 81 0.999971240 ubox
46 80 0.999973356 ubox
47 79 0.995316325 ubox
48 78 0.896995282 ubox
49 74 0.004432123 ubox
50 73 0.004300450 ubox
50 75 0.998643163 ubox
51 74 0.999953001 ubox
52 71 0.013044115 ubox
52 73 0.999398557 ubox
53 70 0.018561837 ubox
53 71 0.100068162 ubox
53 72 0.994400380 ubox
53 73 0.003874958 ubox
54 69 0.026510749 ubox
54 70 0.879820793 ubox
54 71 0.457306510 ubox
54 72 0.007017957 ubox
55 68 0.004880015 ubox
56 68 0.998354691 ubox
57 67 0.999730312 ubox
58 65 0.008598150 ubox
58 66 0.999167095 ubox
59 64 0.009250639 ubox
59 65 0.997118464 ubox
60 64 0.989155409 ubox
60 68 0.021076267 ubox
61 67 0.021178690 ubox
62 66 0.021034103 ubox
3 40 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
9 36 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
41 85 0.9500000 lbox
42 84 0.9500000 lbox
43 83 0.9500000 lbox
44 82 0.9500000 lbox
45 81 0.9500000 lbox
46 80 0.9500000 lbox
47 79 0.9500000 lbox
48 78 0.9500000 lbox
50 75 0.9500000 lbox
51 74 0.9500000 lbox
52 73 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
56 68 0.9500000 lbox
57 67 0.9500000 lbox
58 66 0.9500000 lbox
59 65 0.9500000 lbox
60 64 0.9500000 lbox
showpage
end
%%EOF
