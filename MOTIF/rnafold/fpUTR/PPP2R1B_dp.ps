%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPP2R1B)
} def

/sequence { (\
GGCCUUCGUCCCUACUGCCUGGGCGCGGGGCGGGGCCUGGGCGCGGGGCGGGAGGCGGUGACCAGCAGCAGGAGGAGAAAGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.003894353 ubox
1 37 0.004979199 ubox
1 63 0.051948430 ubox
2 9 0.004003648 ubox
2 36 0.005168588 ubox
2 56 0.983102218 ubox
2 59 0.010982197 ubox
2 62 0.049240032 ubox
2 66 0.037120596 ubox
2 69 0.019343786 ubox
3 8 0.004053708 ubox
3 35 0.005179025 ubox
3 52 0.005160136 ubox
3 55 0.984125772 ubox
3 58 0.011745267 ubox
3 65 0.036521732 ubox
3 68 0.019135905 ubox
3 72 0.026023196 ubox
3 75 0.119580384 ubox
4 34 0.005165156 ubox
4 51 0.005112980 ubox
4 52 0.004881863 ubox
4 54 0.984235511 ubox
4 57 0.011655073 ubox
4 65 0.016914544 ubox
4 71 0.026098478 ubox
4 74 0.119965931 ubox
4 75 0.010738472 ubox
4 77 0.060266449 ubox
4 81 0.047227752 ubox
5 33 0.003663127 ubox
5 51 0.004160296 ubox
5 52 0.267421969 ubox
5 53 0.944698797 ubox
5 61 0.003656869 ubox
5 64 0.017345591 ubox
5 65 0.004258093 ubox
5 67 0.003855383 ubox
5 70 0.025446088 ubox
5 73 0.119599097 ubox
5 74 0.010743891 ubox
5 76 0.057029573 ubox
5 77 0.057464055 ubox
5 78 0.004153303 ubox
5 79 0.023475317 ubox
5 80 0.045342279 ubox
5 83 0.010793699 ubox
6 33 0.003668212 ubox
6 51 0.578731322 ubox
6 52 0.788747404 ubox
6 53 0.007069789 ubox
6 55 0.008515707 ubox
6 58 0.036978758 ubox
6 61 0.061485087 ubox
6 64 0.005209158 ubox
6 72 0.116440454 ubox
6 73 0.011155244 ubox
6 75 0.053364239 ubox
6 76 0.071779459 ubox
6 78 0.027944987 ubox
6 79 0.041014964 ubox
6 82 0.012652430 ubox
7 32 0.005170253 ubox
7 50 0.778584090 ubox
7 51 0.600829855 ubox
7 52 0.008270978 ubox
7 54 0.009104139 ubox
7 57 0.040955551 ubox
7 60 0.064171251 ubox
7 71 0.114142290 ubox
7 72 0.011620326 ubox
7 74 0.052897411 ubox
7 75 0.075701192 ubox
7 77 0.030425683 ubox
7 81 0.012829076 ubox
8 31 0.005229416 ubox
8 49 0.932068700 ubox
8 56 0.044386739 ubox
8 59 0.061885965 ubox
8 62 0.066477327 ubox
8 66 0.008196435 ubox
8 69 0.051905684 ubox
9 30 0.005201625 ubox
9 48 0.928611261 ubox
9 53 0.032063988 ubox
9 55 0.037481926 ubox
9 58 0.065904966 ubox
9 61 0.066525671 ubox
9 65 0.007701493 ubox
9 68 0.049325477 ubox
9 72 0.012088799 ubox
9 73 0.090191495 ubox
9 75 0.026050462 ubox
9 76 0.040887918 ubox
9 78 0.014342451 ubox
10 29 0.005202876 ubox
10 47 0.928936310 ubox
10 48 0.326148621 ubox
10 52 0.035104236 ubox
10 54 0.037056939 ubox
10 55 0.017706583 ubox
10 57 0.084258168 ubox
10 58 0.021309539 ubox
10 60 0.066254822 ubox
10 71 0.012203400 ubox
10 72 0.090685319 ubox
10 74 0.026785837 ubox
10 75 0.040687457 ubox
10 77 0.014687601 ubox
11 28 0.005201726 ubox
11 46 0.928914975 ubox
11 47 0.326327407 ubox
11 48 0.005076080 ubox
11 51 0.035080668 ubox
11 52 0.030809695 ubox
11 54 0.017342684 ubox
11 55 0.116998162 ubox
11 57 0.020487170 ubox
11 58 0.027737305 ubox
11 71 0.089778467 ubox
11 72 0.029835279 ubox
11 74 0.039862642 ubox
11 75 0.016284407 ubox
12 27 0.005195162 ubox
12 45 0.928310689 ubox
12 46 0.326399866 ubox
12 47 0.005320473 ubox
12 50 0.034884826 ubox
12 51 0.030341081 ubox
12 52 0.012707956 ubox
12 54 0.149728345 ubox
12 55 0.019917915 ubox
12 57 0.027339919 ubox
12 65 0.004012566 ubox
12 68 0.009200204 ubox
12 71 0.031415282 ubox
12 72 0.026328139 ubox
12 74 0.017024852 ubox
13 45 0.316063071 ubox
13 46 0.005313993 ubox
13 50 0.028092741 ubox
13 51 0.007545683 ubox
13 53 0.114789435 ubox
13 54 0.019868564 ubox
13 64 0.003757138 ubox
13 67 0.008876719 ubox
13 70 0.031458985 ubox
13 71 0.025222933 ubox
13 73 0.014151429 ubox
15 22 0.004923138 ubox
15 33 0.003542460 ubox
15 48 0.010129809 ubox
15 51 0.163603703 ubox
15 52 0.007397739 ubox
15 54 0.005517308 ubox
15 65 0.003789045 ubox
15 68 0.027634208 ubox
15 71 0.020028381 ubox
16 21 0.004618202 ubox
16 25 0.004782277 ubox
16 32 0.003554647 ubox
16 43 0.944018495 ubox
16 50 0.164348149 ubox
16 51 0.005363767 ubox
16 53 0.004828034 ubox
16 64 0.003780116 ubox
16 67 0.027655206 ubox
16 70 0.020132709 ubox
17 24 0.004970921 ubox
17 31 0.003588592 ubox
17 42 0.984374152 ubox
17 44 0.005484846 ubox
17 49 0.167077801 ubox
17 63 0.003659685 ubox
17 66 0.027475274 ubox
17 69 0.020078830 ubox
18 23 0.004955522 ubox
18 30 0.003367285 ubox
18 41 0.984501906 ubox
18 43 0.005298912 ubox
18 47 0.086126310 ubox
18 48 0.148865403 ubox
18 65 0.020467654 ubox
18 68 0.016568651 ubox
19 40 0.984489434 ubox
19 46 0.116663448 ubox
19 47 0.128071568 ubox
19 65 0.016030204 ubox
20 39 0.980606495 ubox
20 45 0.139124079 ubox
20 46 0.101372991 ubox
20 64 0.020069715 ubox
21 37 0.010084026 ubox
21 38 0.980552427 ubox
21 44 0.159594767 ubox
21 63 0.020110996 ubox
22 36 0.009980644 ubox
22 37 0.984415356 ubox
22 38 0.004763444 ubox
22 62 0.020060545 ubox
23 31 0.004434044 ubox
23 36 0.984354957 ubox
23 37 0.005812201 ubox
23 42 0.161079461 ubox
23 44 0.068424905 ubox
24 30 0.005373714 ubox
24 32 0.118086829 ubox
24 35 0.976860611 ubox
24 41 0.161084116 ubox
24 43 0.068473067 ubox
24 60 0.005593958 ubox
25 31 0.290056068 ubox
25 36 0.011912029 ubox
25 42 0.068471819 ubox
25 59 0.006083450 ubox
26 30 0.288128155 ubox
26 32 0.686137649 ubox
26 35 0.015233923 ubox
26 39 0.160952618 ubox
26 41 0.068382671 ubox
26 58 0.006009653 ubox
27 31 0.643650285 ubox
27 38 0.159965431 ubox
28 37 0.158973408 ubox
28 38 0.069687469 ubox
29 36 0.157719337 ubox
29 37 0.073384798 ubox
30 36 0.075845392 ubox
30 56 0.004875257 ubox
31 35 0.077654561 ubox
31 55 0.004885727 ubox
35 49 0.005406742 ubox
36 48 0.005075164 ubox
37 46 0.003379446 ubox
37 47 0.004717542 ubox
38 45 0.003859989 ubox
38 46 0.004290603 ubox
38 64 0.003463216 ubox
39 44 0.004308973 ubox
39 63 0.003689472 ubox
40 62 0.003664020 ubox
41 69 0.003243357 ubox
42 60 0.003629291 ubox
42 68 0.003247231 ubox
43 59 0.004414652 ubox
43 66 0.003472674 ubox
44 58 0.004425125 ubox
44 65 0.003477715 ubox
45 63 0.003313740 ubox
46 62 0.003323419 ubox
47 63 0.007162275 ubox
48 56 0.027674723 ubox
48 59 0.005073193 ubox
48 62 0.007171704 ubox
48 66 0.013070570 ubox
49 55 0.027699158 ubox
49 57 0.007953322 ubox
49 58 0.005135349 ubox
49 60 0.007035100 ubox
49 65 0.013110108 ubox
50 56 0.008227932 ubox
50 59 0.006937721 ubox
50 63 0.012792440 ubox
51 62 0.012825354 ubox
51 63 0.008079912 ubox
52 62 0.008087393 ubox
54 63 0.015400447 ubox
55 62 0.015387006 ubox
55 66 0.076750781 ubox
55 69 0.083717538 ubox
56 65 0.077703106 ubox
56 68 0.084237958 ubox
57 63 0.341836927 ubox
58 62 0.336692217 ubox
58 66 0.275919872 ubox
58 69 0.320174664 ubox
58 84 0.034116126 ubox
59 65 0.274236370 ubox
59 67 0.129739682 ubox
59 68 0.311630279 ubox
59 70 0.126285529 ubox
59 83 0.034424699 ubox
60 66 0.148973876 ubox
60 69 0.140110253 ubox
62 72 0.497752787 ubox
62 75 0.331722700 ubox
63 71 0.499740325 ubox
63 74 0.332957144 ubox
2 56 0.9500000 lbox
3 55 0.9500000 lbox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 47 0.9500000 lbox
11 46 0.9500000 lbox
12 45 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
showpage
end
%%EOF
