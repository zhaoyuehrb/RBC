%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGGGCCAAACGACGCGCGUUCUGUGGCGCGCGGCCUGGCGGGCGUGCAACGGCCGUUAGAGGAGCUGAGGGAGGGAACCACCGCUCACCGCAGACGUGGUGGCUGCAGUCAGUCUUCCCGAGUGAGGGAUUUCGCCGCCCGCUUUCAGGCCCGUUUGGCUUAAAUAACUGUGAUUG\
) } def
/len { sequence length } bind def

/coor [
[70.02675629 582.30780029]
[70.50695801 567.21899414]
[75.04135895 552.81964111]
[83.29348755 540.17822266]
[94.65097046 530.23284912]
[108.27100372 523.72155762]
[105.68052673 508.94696045]
[103.09004974 494.17233276]
[100.49957275 479.39770508]
[97.90909576 464.62307739]
[95.31861877 449.84844971]
[92.72814178 435.07385254]
[90.13766479 420.29922485]
[87.54718781 405.52459717]
[84.95671082 390.74996948]
[77.97289276 388.01568604]
[64.00526428 382.54711914]
[57.02145004 379.81283569]
[45.08820724 388.90115356]
[33.15496826 397.98950195]
[21.22172546 407.07781982]
[9.28848362 416.16613770]
[-2.64475846 425.25448608]
[-14.57800007 434.34280396]
[-20.40583420 449.67147827]
[-36.63575745 452.02130127]
[-46.57181549 438.97497559]
[-39.99264145 423.95343018]
[-23.66633034 422.40957642]
[-11.73308849 413.32122803]
[0.20015304 404.23291016]
[12.13339424 395.14459229]
[24.06663704 386.05624390]
[35.99987793 376.96792603]
[47.93312073 367.87957764]
[55.73171234 355.06625366]
[58.32218933 340.29162598]
[60.91266632 325.51699829]
[63.50314713 310.74237061]
[66.09362030 295.96774292]
[68.68409729 281.19314575]
[70.88908386 266.35607910]
[72.70706940 251.46665955]
[74.52506256 236.57723999]
[76.34304810 221.68782043]
[78.16104126 206.79840088]
[79.97903442 191.90896606]
[81.79701996 177.01954651]
[79.48044586 169.97993469]
[83.77795410 161.88832092]
[85.85409546 147.03268433]
[72.27760315 140.54194641]
[61.30363846 130.24520874]
[53.96241379 117.10910034]
[50.94310760 102.36682892]
[52.52916718 87.40235901]
[58.57169724 73.62053680]
[47.29767609 63.72627258]
[31.82178879 60.43880081]
[27.35961342 46.22830200]
[16.08559227 36.33403778]
[4.81157303 26.43977165]
[-6.46244717 16.54550743]
[-22.50062370 16.14995956]
[-32.07578659 3.27767110]
[-27.84269142 -12.19683838]
[-13.04860592 -18.40285110]
[0.95771372 -10.57964325]
[3.43181729 5.27148771]
[14.70583725 15.16575241]
[25.97985840 25.06001663]
[37.25387573 34.95428085]
[51.92337036 37.53404999]
[57.19194031 52.45225143]
[68.46595764 62.34651566]
[74.74601746 50.12759781]
[85.08119202 39.11124039]
[80.47070312 24.83736992]
[66.28905487 17.86196518]
[61.27262497 2.87493825]
[68.39757538 -11.23217392]
[83.43679810 -16.08987236]
[97.46779633 -8.81616879]
[102.16622162 6.27357483]
[94.74457550 20.22688293]
[99.35506439 34.50075531]
[114.34094238 33.85007477]
[117.69688416 19.23030663]
[116.56617737 10.13831425]
[121.24002838 4.38697720]
[124.84920502 -10.17234421]
[128.45837402 -24.73166656]
[132.06755066 -39.29098892]
[135.67672729 -53.85030746]
[139.28590393 -68.40962982]
[134.22695923 -84.00896454]
[145.40640259 -96.00698090]
[161.32376099 -92.06114960]
[165.60464478 -76.23060608]
[153.84523010 -64.80045319]
[150.23605347 -50.24113083]
[146.62687683 -35.68181229]
[143.01770020 -21.12248993]
[139.40852356 -6.56316757]
[135.79934692 7.99615383]
[132.31665039 22.58624840]
[128.96070862 37.20601654]
[134.51101685 42.25024033]
[144.46522522 31.02910995]
[154.41943359 19.80797958]
[164.37362671 8.58685017]
[167.96441650 -5.97702074]
[182.31336975 -10.34821415]
[193.41406250 -0.25987774]
[190.43078613 14.44046211]
[176.27528381 19.40331268]
[166.05406189 30.38177109]
[155.83283997 41.36022949]
[145.61160278 52.33868790]
[151.16191101 57.38291168]
[165.39523315 52.64872360]
[179.62855530 47.91453552]
[193.86187744 43.18035126]
[200.71394348 28.93869591]
[215.65687561 23.79239273]
[229.82528687 30.79465103]
[234.81332397 45.79115295]
[227.66165161 59.88474274]
[212.61325073 64.71394348]
[198.59606934 57.41367340]
[184.36274719 62.14786148]
[170.12942505 66.88204956]
[155.89610291 71.61623383]
[159.84945679 96.12699127]
[153.96978760 119.12873077]
[140.06297302 137.01402283]
[121.11933136 147.33108521]
[100.70971680 149.10882568]
[98.63358307 163.96444702]
[96.68644714 178.83753967]
[94.86845398 193.72695923]
[93.05046844 208.61637878]
[91.23247528 223.50581360]
[89.41448212 238.39523315]
[87.59649658 253.28465271]
[85.77850342 268.17407227]
[87.84663391 273.02542114]
[87.83036041 277.71212769]
[86.14630890 281.46212769]
[83.45871735 283.78359985]
[80.86824036 298.55822754]
[78.27776337 313.33285522]
[75.68728638 328.10748291]
[73.09680939 342.88211060]
[70.50633240 357.65670776]
[99.73133087 388.15948486]
[102.32180786 402.93411255]
[104.91228485 417.70874023]
[107.50276184 432.48336792]
[110.09323883 447.25799561]
[112.68371582 462.03259277]
[115.27419281 476.80722046]
[117.86466980 491.58184814]
[120.45514679 506.35647583]
[123.04562378 521.13110352]
[138.06843567 522.62036133]
[152.13192749 528.10858154]
[164.19252014 537.18847656]
[173.35520935 549.18634033]
[178.94009399 563.21173096]
[180.53271484 578.22393799]
[178.01489258 593.10888672]
[171.57347107 606.76214600]
[161.68646240 618.17047119]
[149.08752441 626.48724365]
[134.71157837 631.09539795]
[119.62543488 631.65295410]
[104.94857788 628.11846924]
[91.77012634 620.75427246]
[81.06800842 610.10687256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[50 139]
[51 138]
[57 75]
[58 74]
[60 72]
[61 71]
[62 70]
[63 69]
[77 86]
[78 85]
[87 107]
[88 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[120 133]
[121 132]
[122 131]
[123 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
