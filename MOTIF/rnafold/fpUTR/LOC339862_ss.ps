%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUGAGCACUGGGAGACUCCAAUGGGGAGAAGGGGAGGAACAAGCAAAAAGAUGGAGAAAAAGCUACCACCAGUGACCUAGGAGAACCAGGGGGCUGGCAUCCUGCAGCCAC\
) } def
/len { sequence length } bind def

/coor [
[100.00206757 193.42453003]
[99.18292999 178.44689941]
[95.62741852 171.85067749]
[98.55165863 163.05007935]
[98.14193726 148.05567932]
[97.73221588 133.06127930]
[79.37722015 122.94033051]
[71.87937927 104.96575165]
[76.81370544 87.66316986]
[66.13491821 77.12924957]
[55.45612335 66.59533691]
[44.77733231 56.06141663]
[34.09854126 45.52750015]
[23.41974831 34.99358368]
[19.59037590 36.72884369]
[15.39710712 37.66931152]
[11.00694942 37.73909378]
[6.60257530 36.89777374]
[2.37472510 35.14358521]
[-12.31153584 38.19542313]
[-26.99779701 41.24726486]
[-41.68405914 44.29910660]
[-51.64981079 56.87142944]
[-67.69257355 56.77451324]
[-77.50570679 44.08271027]
[-73.56141663 28.53207779]
[-58.88542938 22.05173492]
[-44.73590088 29.61284447]
[-30.04963875 26.56100464]
[-15.36337662 23.50916290]
[-0.67711520 20.45732307]
[-15.02865219 16.09459686]
[-29.38018990 11.73186970]
[-44.27900314 13.47122288]
[-59.11264801 11.24345970]
[-72.84328461 5.20444822]
[-84.51023865 -4.22328949]
[-93.29721832 -16.38013649]
[-98.58944702 -30.41553116]
[-100.01664734 -45.34748077]
[-97.47896576 -60.13125992]
[-91.15394592 -73.73251343]
[-81.48413086 -85.19963074]
[-69.14607239 -93.73029327]
[-55.00300598 -98.72766113]
[-40.04446030 -99.84207916]
[-25.31702042 -96.99559021]
[-11.85109997 -90.38733673]
[-0.58884883 -80.47967529]
[7.68176222 -67.96580505]
[12.38207626 -53.72126389]
[13.18323135 -38.74267197]
[10.02954960 -24.07906342]
[13.00223541 -9.37657642]
[15.97492218 5.32591105]
[20.41489220 -9.00191784]
[24.85486221 -23.32974625]
[29.09871864 -37.71688080]
[33.14567184 -52.16064072]
[25.18233490 -65.81204224]
[29.28514671 -81.07450104]
[43.01998138 -88.89305878]
[58.23820114 -84.62911224]
[65.91110992 -70.81238556]
[61.48650742 -55.64009094]
[47.58942795 -48.11368942]
[43.54247665 -33.66992950]
[44.78480530 -26.28016472]
[39.18268967 -18.88977623]
[34.74272156 -4.56194782]
[30.30275154 9.76588058]
[33.95366287 24.31479263]
[44.63245773 34.84870911]
[55.31124878 45.38262558]
[65.99004364 55.91654205]
[76.66883087 66.45046234]
[87.34762573 76.98437500]
[102.72760010 72.15045929]
[119.08636475 77.24278259]
[130.25970459 91.53940582]
[131.37625122 110.66404724]
[145.05151367 116.82742310]
[158.72677612 122.99079895]
[172.40203857 129.15417480]
[186.07730103 135.31755066]
[198.12010193 129.10647583]
[211.34248352 130.98194885]
[220.89912415 140.02838135]
[223.42034912 152.74473572]
[236.92216492 159.27935791]
[250.42396545 165.81396484]
[263.92578125 172.34858704]
[280.23315430 170.61598206]
[289.66726685 184.02976990]
[282.52313232 198.79096985]
[266.14999390 199.71455383]
[257.39117432 185.85038757]
[243.88935852 179.31578064]
[230.38754272 172.78115845]
[216.88574219 166.24655151]
[201.32351685 172.45861816]
[185.75022888 165.41470337]
[179.91392517 148.99281311]
[166.23866272 142.82943726]
[152.56340027 136.66606140]
[138.88813782 130.50268555]
[125.21286774 124.33930969]
[112.72661591 132.65155029]
[113.13633728 147.64595032]
[113.54605865 162.64036560]
[114.16054535 177.62776184]
[114.97968292 192.60539246]
[121.88196564 208.09069824]
[108.91256714 219.00999451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 112]
[2 111]
[4 110]
[5 109]
[6 108]
[9 77]
[10 76]
[11 75]
[12 74]
[13 73]
[14 72]
[19 31]
[20 30]
[21 29]
[22 28]
[55 71]
[56 70]
[57 69]
[58 67]
[59 66]
[81 107]
[82 106]
[83 105]
[84 104]
[85 103]
[89 100]
[90 99]
[91 98]
[92 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
