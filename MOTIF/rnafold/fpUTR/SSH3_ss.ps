%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAGCUCCGCGGGCCCGGCUGGGCGAGUGUCUGGCCCUUUAAGGGCCGCCCCCGAGGAGGUGCCAGGCCCGGGUGGCGCCGUCCGUCCUUCCUGGUCCUGCGGGUCCAGGACUGUCCGCGGGGUUGAGGGAAGGGGCCGUGCCCGGUGCCAGCCCAGGUGCUCGCGGCCUGGCUCC\
) } def
/len { sequence length } bind def

/coor [
[257.60031128 292.44381714]
[242.97077942 283.82119751]
[233.53924561 269.63330078]
[231.23625183 252.69715881]
[236.57118225 236.40097046]
[225.55410767 226.22137451]
[214.53703308 216.04177856]
[203.51995850 205.86218262]
[192.50289917 195.68258667]
[181.48582458 185.50300598]
[170.46875000 175.32341003]
[159.45167542 165.14381409]
[148.43461609 154.96421814]
[137.41754150 144.78462219]
[126.40046692 134.60502625]
[115.38339233 124.42543030]
[93.22440338 128.05961609]
[75.16555786 114.71397400]
[60.71717453 118.74439240]
[46.26879120 122.77481079]
[41.34218979 127.25408936]
[35.73465347 128.38114929]
[31.24236298 126.68357849]
[16.66143608 130.20445251]
[2.08050895 133.72534180]
[-12.50041771 137.24621582]
[0.67934734 144.40817261]
[7.25450993 157.89028931]
[4.78305626 172.68528748]
[-5.81711674 183.29830933]
[-20.60910797 185.78768921]
[-34.09917450 179.22886658]
[-41.27710724 166.05780029]
[-39.47702789 151.16619873]
[-29.36758614 140.08486938]
[-44.29775620 141.53056335]
[-59.22792435 142.97625732]
[-74.15809631 144.42195129]
[-89.08826447 145.86764526]
[-104.01843262 147.31333923]
[-119.20108795 154.85809326]
[-130.65397644 142.35739136]
[-121.81226349 127.89154053]
[-105.46412659 132.38316345]
[-90.53395844 130.93746948]
[-75.60379028 129.49177551]
[-60.67361832 128.04608154]
[-45.74345016 126.60039520]
[-30.81327820 125.15470123]
[-16.02129364 122.66528320]
[-1.44036758 119.14440918]
[13.14055920 115.62352753]
[27.72148705 112.10265350]
[42.23837662 108.32642365]
[56.68675995 104.29601288]
[71.13513947 100.26559448]
[67.67048645 87.93791962]
[69.90779877 73.42524719]
[61.26227188 61.16740036]
[52.61674500 48.90955353]
[43.86398315 36.72804642]
[35.00466156 24.62381363]
[26.14534187 12.51958084]
[17.28602028 0.41534898]
[8.42669868 -11.68888283]
[-0.43262222 -23.79311562]
[-9.29194355 -35.89734650]
[-24.80786514 -35.70821762]
[-37.45219421 -44.70269394]
[-42.36292267 -59.42221451]
[-37.65178299 -74.20682526]
[-25.13029671 -83.37154388]
[-9.61323547 -83.39234924]
[2.93277550 -74.26123047]
[7.68353844 -59.48930359]
[2.81228852 -44.75666809]
[11.67160988 -32.65243530]
[20.53093147 -20.54820442]
[29.39025116 -8.44397163]
[38.24957275 3.66025972]
[47.10889435 15.76449203]
[55.96821594 27.86872292]
[62.47497940 31.41956520]
[64.87459564 40.26402664]
[73.52011871 52.52187347]
[82.16564941 64.77972412]
[89.64227295 64.18799591]
[83.89611053 50.33225250]
[95.29817200 40.58581161]
[108.09091949 48.41815567]
[104.59551239 63.00455093]
[112.07213593 62.41282654]
[118.68186188 48.94762802]
[125.29158020 35.48242950]
[131.90130615 22.01723289]
[138.51103210 8.55203533]
[145.12075806 -4.91316223]
[144.25616455 -20.71072578]
[156.81002808 -28.72631454]
[163.41975403 -42.19151306]
[161.77801514 -58.50827408]
[175.24414062 -67.86752319]
[189.96533203 -60.64126968]
[190.79768372 -44.26325989]
[176.88494873 -35.58178711]
[170.27522278 -22.11659050]
[171.61259460 -7.28214645]
[158.58595276 1.69656205]
[151.97622681 15.16175938]
[145.36650085 28.62695694]
[138.75677490 42.09215546]
[132.14704895 55.55735397]
[125.53733063 69.02255249]
[133.12620544 84.94570160]
[132.61326599 100.92192078]
[125.56298828 113.40836334]
[136.58006287 123.58795929]
[147.59713745 133.76754761]
[158.61419678 143.94714355]
[169.63127136 154.12673950]
[180.64834595 164.30633545]
[191.66542053 174.48593140]
[202.68249512 184.66552734]
[213.69955444 194.84512329]
[224.71662903 205.02471924]
[235.73370361 215.20429993]
[246.75077820 225.38389587]
[258.69128418 219.65220642]
[271.83807373 218.33160400]
[284.61801147 221.55819702]
[295.50933838 228.92533875]
[303.22280884 239.53466797]
[306.85433960 252.10563660]
[305.99090576 265.13006592]
[300.75744629 277.05310059]
[311.41049194 287.61306763]
[322.06353760 298.17303467]
[332.71658325 308.73297119]
[343.36959839 319.29293823]
[354.02264404 329.85290527]
[364.67568970 340.41287231]
[379.92364502 344.63308716]
[383.51553345 359.08810425]
[394.16857910 369.64807129]
[404.82162476 380.20803833]
[415.56692505 390.67410278]
[426.40362549 401.04547119]
[437.33096313 411.32138062]
[448.34802246 421.50094604]
[459.36511230 431.68054199]
[470.38217163 441.86013794]
[481.39923096 452.03973389]
[497.17932129 451.16543579]
[508.89987183 461.76754761]
[509.60729980 477.55599976]
[498.88186646 489.16378784]
[483.08682251 489.70422363]
[471.59307861 478.85668945]
[471.21963501 463.05682373]
[460.20257568 452.87722778]
[449.18551636 442.69763184]
[438.16842651 432.51803589]
[427.15136719 422.33843994]
[420.08419800 420.10195923]
[416.03225708 411.88220215]
[405.19552612 401.51083374]
[398.16873169 399.15066528]
[394.26165771 390.86108398]
[383.60861206 380.30111694]
[372.95559692 369.74114990]
[358.46960449 366.27624512]
[354.11572266 351.06588745]
[343.46267700 340.50595093]
[332.80966187 329.94598389]
[322.15661621 319.38601685]
[311.50357056 308.82604980]
[300.85052490 298.26608276]
[290.19750977 287.70614624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 127]
[6 126]
[7 125]
[8 124]
[9 123]
[10 122]
[11 121]
[12 120]
[13 119]
[14 118]
[15 117]
[16 116]
[18 56]
[19 55]
[20 54]
[23 53]
[24 52]
[25 51]
[26 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[58 86]
[59 85]
[60 84]
[61 82]
[62 81]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[99 106]
[100 105]
[135 178]
[136 177]
[137 176]
[138 175]
[139 174]
[140 173]
[141 172]
[143 170]
[144 169]
[145 168]
[146 166]
[147 165]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
