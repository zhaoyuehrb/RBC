%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (REXO1)
} def

/sequence { (\
GGUCCGUGAGGCGCGGGCGGCGGCGACCGCGGCGCCAGUGAGGGGGCCCUGGGGCCCGGGCGGCUCCGGGCCGGGGCCCCGCCGCGGGACGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 95 0.988082353 ubox
2 18 0.007022658 ubox
2 90 0.008727522 ubox
2 94 0.999834375 ubox
3 17 0.007026862 ubox
3 89 0.008656028 ubox
3 93 0.999792286 ubox
4 16 0.007097116 ubox
4 88 0.008438324 ubox
4 92 0.999927697 ubox
5 15 0.007124570 ubox
5 86 0.003476144 ubox
5 87 0.008203579 ubox
5 91 0.999911722 ubox
6 14 0.007461453 ubox
6 85 0.004040894 ubox
6 90 0.999429152 ubox
7 13 0.007457830 ubox
7 37 0.005511802 ubox
7 84 0.004069721 ubox
7 86 0.011054607 ubox
7 89 0.985954592 ubox
8 12 0.007398690 ubox
8 14 0.004021332 ubox
8 21 0.004498391 ubox
8 24 0.004873819 ubox
8 33 0.007602084 ubox
8 36 0.009350013 ubox
8 83 0.004063945 ubox
8 85 0.022182296 ubox
8 90 0.004522095 ubox
10 36 0.623893880 ubox
10 83 0.048204997 ubox
11 18 0.025737605 ubox
11 21 0.004278787 ubox
11 24 0.027730988 ubox
11 33 0.052728335 ubox
11 35 0.624985504 ubox
11 82 0.048225267 ubox
11 85 0.076528299 ubox
12 17 0.025756278 ubox
12 20 0.004228310 ubox
12 22 0.026593479 ubox
12 23 0.021865502 ubox
12 25 0.023119904 ubox
12 31 0.057717101 ubox
12 32 0.037450167 ubox
12 34 0.625277791 ubox
12 40 0.013519478 ubox
12 81 0.046805952 ubox
12 84 0.076423456 ubox
12 86 0.769055679 ubox
13 21 0.031778210 ubox
13 24 0.023434851 ubox
13 30 0.070016756 ubox
13 33 0.624992299 ubox
13 35 0.006883962 ubox
13 39 0.041750405 ubox
13 80 0.005250965 ubox
13 82 0.041579306 ubox
13 83 0.053764048 ubox
13 85 0.769968635 ubox
14 20 0.031804408 ubox
14 22 0.014437153 ubox
14 23 0.022854657 ubox
14 29 0.070260578 ubox
14 31 0.032436997 ubox
14 32 0.623772799 ubox
14 34 0.007116548 ubox
14 38 0.043884590 ubox
14 40 0.006142849 ubox
14 81 0.058720579 ubox
14 84 0.769593173 ubox
14 86 0.011833174 ubox
15 21 0.015356339 ubox
15 28 0.071087533 ubox
15 30 0.044325275 ubox
15 33 0.006007802 ubox
15 36 0.072530743 ubox
15 39 0.004951651 ubox
15 80 0.014078872 ubox
15 83 0.708244126 ubox
15 85 0.011692497 ubox
16 27 0.070562214 ubox
16 28 0.049562076 ubox
16 35 0.072784030 ubox
16 36 0.091632930 ubox
16 79 0.009103778 ubox
16 82 0.636387745 ubox
16 83 0.301132295 ubox
17 24 0.026296534 ubox
17 27 0.049710554 ubox
17 30 0.622488363 ubox
17 33 0.204348720 ubox
17 35 0.104155698 ubox
17 39 0.353082012 ubox
17 82 0.424498595 ubox
18 23 0.026415999 ubox
18 25 0.080542807 ubox
18 29 0.622834483 ubox
18 31 0.021606608 ubox
18 32 0.204599594 ubox
18 34 0.104180727 ubox
18 38 0.363900180 ubox
18 40 0.025143517 ubox
18 81 0.518546699 ubox
19 24 0.082016981 ubox
19 28 0.622827091 ubox
19 30 0.015410407 ubox
19 33 0.097632028 ubox
19 36 0.739069805 ubox
19 39 0.006618981 ubox
19 80 0.017976758 ubox
20 27 0.620457449 ubox
20 30 0.214650240 ubox
20 33 0.036306744 ubox
20 35 0.740416492 ubox
20 39 0.009802673 ubox
20 79 0.013102037 ubox
21 29 0.215355048 ubox
21 31 0.071444261 ubox
21 32 0.049913440 ubox
21 34 0.740410977 ubox
21 38 0.010265376 ubox
22 28 0.215360826 ubox
22 30 0.063937749 ubox
22 33 0.739940857 ubox
22 36 0.016062632 ubox
22 78 0.012966007 ubox
23 27 0.211894452 ubox
23 30 0.067096527 ubox
23 33 0.021179576 ubox
23 35 0.016100466 ubox
23 77 0.012967454 ubox
24 29 0.074118704 ubox
24 31 0.738850692 ubox
24 32 0.029409439 ubox
24 34 0.016100026 ubox
24 76 0.012949520 ubox
24 91 0.003407311 ubox
25 30 0.725032837 ubox
25 33 0.015981800 ubox
25 90 0.003479492 ubox
27 52 0.012373356 ubox
27 74 0.003392729 ubox
27 87 0.042614826 ubox
28 51 0.012398908 ubox
28 73 0.003386114 ubox
28 86 0.042727044 ubox
29 50 0.012176479 ubox
29 85 0.042815425 ubox
30 84 0.042815765 ubox
31 48 0.027468855 ubox
31 49 0.003927091 ubox
31 83 0.042873156 ubox
32 39 0.015608538 ubox
32 47 0.027561749 ubox
32 48 0.003642448 ubox
32 82 0.042872402 ubox
33 38 0.016348975 ubox
33 40 0.004563070 ubox
33 46 0.027599159 ubox
33 81 0.042844824 ubox
34 39 0.006481292 ubox
34 47 0.005746429 ubox
34 80 0.026208493 ubox
34 82 0.003647877 ubox
35 43 0.034436428 ubox
35 44 0.028226613 ubox
35 46 0.005751512 ubox
35 81 0.004732674 ubox
35 87 0.033460449 ubox
35 88 0.064245138 ubox
36 42 0.057177293 ubox
36 43 0.028414302 ubox
36 45 0.005747531 ubox
36 86 0.034914227 ubox
36 87 0.067469793 ubox
38 82 0.022135516 ubox
38 85 0.627775752 ubox
39 81 0.023035272 ubox
39 84 0.628171764 ubox
39 86 0.008185710 ubox
40 80 0.007998227 ubox
40 83 0.629098164 ubox
40 85 0.010671928 ubox
41 50 0.003275476 ubox
42 49 0.003417200 ubox
42 80 0.077638029 ubox
42 83 0.006797816 ubox
43 48 0.003405987 ubox
43 79 0.071289418 ubox
43 80 0.995112276 ubox
43 82 0.005121899 ubox
44 78 0.064154203 ubox
44 79 0.996971432 ubox
44 80 0.005849986 ubox
45 77 0.056107586 ubox
45 78 0.997513451 ubox
45 79 0.004811805 ubox
46 77 0.998006771 ubox
46 78 0.003450561 ubox
47 75 0.047302736 ubox
47 76 0.998401377 ubox
48 74 0.047918251 ubox
48 75 0.998304569 ubox
48 76 0.011573484 ubox
49 73 0.048477315 ubox
49 74 0.997870950 ubox
49 75 0.016371527 ubox
50 73 0.934135759 ubox
50 74 0.019801712 ubox
50 81 0.017218523 ubox
51 67 0.003409627 ubox
51 72 0.379060281 ubox
51 80 0.025118470 ubox
52 66 0.003448413 ubox
52 71 0.251262606 ubox
52 72 0.128880961 ubox
52 79 0.025267750 ubox
53 65 0.003745654 ubox
53 71 0.121624556 ubox
53 72 0.912921683 ubox
53 78 0.025270659 ubox
54 64 0.003789105 ubox
54 71 0.959553816 ubox
54 77 0.025271027 ubox
55 63 0.003781500 ubox
55 69 0.007114463 ubox
55 70 0.999296537 ubox
55 76 0.025269529 ubox
56 62 0.003767987 ubox
56 68 0.005396396 ubox
56 69 0.999639297 ubox
56 75 0.025267716 ubox
57 68 0.999635004 ubox
57 74 0.025254149 ubox
58 65 0.003942282 ubox
58 66 0.012937066 ubox
58 67 0.999489266 ubox
59 64 0.008858167 ubox
59 65 0.017732168 ubox
59 66 0.998343586 ubox
59 67 0.011384228 ubox
59 72 0.025113454 ubox
60 64 0.139115865 ubox
60 65 0.699178279 ubox
60 66 0.015887337 ubox
60 71 0.025126228 ubox
61 70 0.025120812 ubox
82 88 0.023190370 ubox
83 87 0.023101000 ubox
86 95 0.004566708 ubox
87 94 0.004598289 ubox
1 95 0.9500000 lbox
2 94 0.9500000 lbox
3 93 0.9500000 lbox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
6 90 0.9500000 lbox
7 89 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
12 34 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
38 85 0.9500000 lbox
39 84 0.9500000 lbox
40 83 0.9500000 lbox
43 80 0.9500000 lbox
44 79 0.9500000 lbox
45 78 0.9500000 lbox
46 77 0.9500000 lbox
47 76 0.9500000 lbox
48 75 0.9500000 lbox
49 74 0.9500000 lbox
50 73 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
55 70 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
60 65 0.9500000 lbox
showpage
end
%%EOF
