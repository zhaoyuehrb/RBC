%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HHIPL2)
} def

/sequence { (\
GCAGAGCAGGGAAGCCAACCUGAGCAAACACAGCAGCCCGAGUGUUCCCAAGGCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.269910711 ubox
1 15 0.012967902 ubox
1 25 0.346225688 ubox
1 34 0.063243081 ubox
1 37 0.030988052 ubox
1 43 0.007526890 ubox
1 45 0.034254399 ubox
1 54 0.259352650 ubox
2 6 0.268517967 ubox
2 14 0.013000415 ubox
2 22 0.040209330 ubox
2 24 0.344503790 ubox
2 33 0.063179926 ubox
2 36 0.031062155 ubox
2 42 0.007823413 ubox
2 44 0.037493231 ubox
2 53 0.259944711 ubox
3 21 0.041065162 ubox
3 43 0.036494320 ubox
3 46 0.012373372 ubox
4 20 0.041030187 ubox
4 45 0.010452800 ubox
4 46 0.007710194 ubox
4 47 0.354864340 ubox
5 21 0.098873996 ubox
5 45 0.007509780 ubox
5 46 0.355724557 ubox
6 15 0.042178346 ubox
6 20 0.098203665 ubox
6 25 0.115529890 ubox
6 34 0.009562137 ubox
6 37 0.004655533 ubox
6 43 0.033359679 ubox
6 45 0.355446804 ubox
6 54 0.527084994 ubox
7 14 0.042256413 ubox
7 22 0.584682392 ubox
7 24 0.107063815 ubox
7 33 0.008790236 ubox
7 36 0.004211664 ubox
7 42 0.034991155 ubox
7 44 0.355391400 ubox
7 53 0.528008783 ubox
8 21 0.594165957 ubox
8 43 0.349844624 ubox
9 16 0.142878647 ubox
9 20 0.596003397 ubox
9 21 0.056937353 ubox
9 38 0.006976729 ubox
9 39 0.352595655 ubox
9 48 0.019120122 ubox
9 49 0.692372568 ubox
9 55 0.017592147 ubox
10 15 0.142933585 ubox
10 16 0.056963396 ubox
10 19 0.595917010 ubox
10 20 0.057851978 ubox
10 21 0.020902048 ubox
10 37 0.006911829 ubox
10 38 0.352830254 ubox
10 39 0.044716633 ubox
10 47 0.019174828 ubox
10 48 0.693508530 ubox
10 49 0.030814680 ubox
10 54 0.017173632 ubox
10 55 0.016978440 ubox
11 15 0.056448739 ubox
11 19 0.058024171 ubox
11 20 0.020962903 ubox
11 37 0.352365298 ubox
11 38 0.044566373 ubox
11 46 0.017892677 ubox
11 47 0.693427241 ubox
11 48 0.030653202 ubox
11 54 0.016432821 ubox
12 45 0.020597812 ubox
12 46 0.642962077 ubox
13 21 0.019964212 ubox
13 45 0.506929157 ubox
13 46 0.204541185 ubox
14 20 0.020773443 ubox
14 25 0.286492236 ubox
14 34 0.342334183 ubox
14 37 0.118290510 ubox
14 43 0.208151047 ubox
14 45 0.289173685 ubox
14 54 0.042538528 ubox
15 24 0.286739760 ubox
15 33 0.333471596 ubox
15 36 0.119279979 ubox
15 42 0.216634028 ubox
15 44 0.343696091 ubox
15 53 0.042910748 ubox
16 22 0.241442619 ubox
16 44 0.306315316 ubox
16 52 0.042808412 ubox
17 21 0.195742820 ubox
17 43 0.246645543 ubox
17 46 0.038253644 ubox
18 43 0.402189948 ubox
18 45 0.086719289 ubox
19 42 0.467983398 ubox
19 44 0.095958976 ubox
19 53 0.118148448 ubox
20 33 0.174944081 ubox
20 36 0.217757750 ubox
20 42 0.149903611 ubox
20 52 0.118809110 ubox
20 53 0.008429225 ubox
21 30 0.148696911 ubox
21 32 0.227981015 ubox
21 35 0.216357430 ubox
21 40 0.469018112 ubox
21 41 0.138347697 ubox
21 50 0.020815921 ubox
21 51 0.116474666 ubox
21 52 0.008580352 ubox
21 56 0.027599669 ubox
22 29 0.152907386 ubox
22 31 0.228476048 ubox
22 34 0.202454690 ubox
22 39 0.501891077 ubox
22 47 0.051722782 ubox
22 49 0.028239382 ubox
22 55 0.037275843 ubox
23 46 0.053385642 ubox
24 34 0.360036221 ubox
24 37 0.517874953 ubox
24 43 0.005645038 ubox
24 45 0.052915067 ubox
24 54 0.217088023 ubox
25 33 0.362505032 ubox
25 36 0.517901510 ubox
25 42 0.005846881 ubox
25 44 0.052776088 ubox
25 53 0.217471748 ubox
26 43 0.046375790 ubox
26 46 0.028407670 ubox
27 45 0.023970467 ubox
27 46 0.418773607 ubox
28 43 0.019889330 ubox
28 45 0.505672641 ubox
29 42 0.023156695 ubox
29 44 0.529014399 ubox
30 43 0.528949356 ubox
30 45 0.041689917 ubox
31 42 0.528519570 ubox
31 44 0.047745329 ubox
32 43 0.044185792 ubox
32 46 0.190071473 ubox
33 43 0.033818026 ubox
33 45 0.222275291 ubox
33 54 0.048681126 ubox
34 42 0.041998250 ubox
34 44 0.225833691 ubox
34 53 0.048702567 ubox
35 43 0.216606426 ubox
35 46 0.026860833 ubox
36 43 0.064146908 ubox
36 45 0.034747595 ubox
36 54 0.344173669 ubox
37 42 0.096750657 ubox
37 44 0.035867375 ubox
37 53 0.342224050 ubox
38 52 0.338606567 ubox
38 53 0.067633752 ubox
39 52 0.080870367 ubox
40 46 0.014394744 ubox
40 47 0.174588587 ubox
41 45 0.013340171 ubox
41 46 0.163728834 ubox
42 54 0.046236208 ubox
43 50 0.110093854 ubox
43 53 0.046151874 ubox
43 56 0.022400037 ubox
44 49 0.114219900 ubox
44 54 0.022295221 ubox
44 55 0.024847438 ubox
45 51 0.044875414 ubox
45 52 0.004723084 ubox
45 53 0.022035710 ubox
45 57 0.004165057 ubox
46 50 0.037682092 ubox
46 51 0.008863274 ubox
46 52 0.019665144 ubox
46 53 0.026239189 ubox
46 56 0.005585496 ubox
46 57 0.003753578 ubox
47 52 0.049293239 ubox
47 53 0.114010968 ubox
48 52 0.116260722 ubox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
showpage
end
%%EOF
