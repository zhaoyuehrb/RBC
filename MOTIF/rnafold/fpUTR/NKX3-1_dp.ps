%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:12 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NKX3-1)
} def

/sequence { (\
GCGGUGCGGGCCGGGCGGGUGCAUUCAGGCCAAGGCGGGGCCGCCGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.029553591 ubox
1 11 0.007748369 ubox
1 16 0.004940243 ubox
1 22 0.005365720 ubox
1 30 0.010677313 ubox
1 44 0.859133912 ubox
2 6 0.029362939 ubox
2 8 0.010891599 ubox
2 10 0.008428346 ubox
2 13 0.107286741 ubox
2 15 0.004511066 ubox
2 21 0.005366383 ubox
2 29 0.010910711 ubox
2 43 0.861922805 ubox
2 46 0.468537266 ubox
3 7 0.010314616 ubox
3 12 0.108669899 ubox
3 20 0.005055833 ubox
3 25 0.023532391 ubox
3 26 0.010192468 ubox
3 31 0.003321871 ubox
3 42 0.862004160 ubox
3 45 0.472992533 ubox
4 11 0.108683859 ubox
4 24 0.029526281 ubox
4 25 0.007294941 ubox
4 30 0.003316254 ubox
4 36 0.003512148 ubox
4 41 0.861877854 ubox
4 44 0.447941498 ubox
5 10 0.107408354 ubox
5 17 0.004807494 ubox
5 23 0.031673762 ubox
5 35 0.004024686 ubox
5 37 0.054809749 ubox
5 40 0.857068973 ubox
5 43 0.422485581 ubox
5 46 0.019334282 ubox
6 16 0.005441756 ubox
6 22 0.035677486 ubox
6 36 0.145257870 ubox
6 41 0.235167039 ubox
6 42 0.271666939 ubox
6 44 0.200408989 ubox
6 45 0.019807902 ubox
7 15 0.005442892 ubox
7 21 0.035616403 ubox
7 35 0.145090561 ubox
7 37 0.111530868 ubox
7 40 0.330745068 ubox
7 43 0.245269500 ubox
7 46 0.005784510 ubox
8 20 0.021260733 ubox
8 31 0.005505148 ubox
8 36 0.094963520 ubox
8 42 0.264747320 ubox
8 45 0.005673415 ubox
9 30 0.003919738 ubox
9 31 0.177841291 ubox
9 41 0.264662626 ubox
9 42 0.203301097 ubox
9 44 0.004164813 ubox
10 16 0.003580290 ubox
10 20 0.027516415 ubox
10 30 0.178256724 ubox
10 36 0.913172884 ubox
10 41 0.215870761 ubox
11 15 0.003560460 ubox
11 18 0.018808261 ubox
11 19 0.030696006 ubox
11 29 0.178300553 ubox
11 35 0.913854266 ubox
11 38 0.086186552 ubox
11 39 0.251610560 ubox
11 40 0.218279196 ubox
11 47 0.014591672 ubox
11 48 0.029123386 ubox
12 17 0.018811367 ubox
12 18 0.030700831 ubox
12 28 0.178183784 ubox
12 34 0.913436904 ubox
12 37 0.098373251 ubox
12 38 0.247191803 ubox
12 39 0.217696103 ubox
12 46 0.014683870 ubox
12 47 0.030574043 ubox
13 25 0.024002272 ubox
13 26 0.079080985 ubox
13 31 0.028175027 ubox
13 36 0.109252960 ubox
13 45 0.012330984 ubox
14 24 0.029166529 ubox
14 25 0.068643365 ubox
14 26 0.047824825 ubox
14 30 0.026242407 ubox
14 31 0.906228098 ubox
14 44 0.009342232 ubox
14 45 0.102618804 ubox
15 22 0.170244940 ubox
15 24 0.029970649 ubox
15 25 0.022156436 ubox
15 30 0.907400913 ubox
15 36 0.316751363 ubox
15 44 0.103019163 ubox
16 21 0.170329482 ubox
16 29 0.906977887 ubox
16 35 0.316605952 ubox
16 37 0.012156418 ubox
16 43 0.103321158 ubox
16 46 0.009352126 ubox
17 25 0.034483721 ubox
17 26 0.192167006 ubox
17 31 0.031679398 ubox
17 36 0.012231223 ubox
17 42 0.100835879 ubox
17 45 0.009302653 ubox
18 24 0.035425969 ubox
18 25 0.180115532 ubox
18 26 0.631963066 ubox
18 30 0.030448513 ubox
18 31 0.336720829 ubox
18 41 0.098291032 ubox
18 42 0.015339193 ubox
18 44 0.009117251 ubox
18 45 0.006684663 ubox
19 24 0.125112021 ubox
19 25 0.598977343 ubox
19 30 0.337481367 ubox
19 36 0.006443606 ubox
19 41 0.021604877 ubox
19 44 0.006897730 ubox
20 27 0.154301661 ubox
20 29 0.336800222 ubox
20 32 0.016627506 ubox
20 35 0.006399727 ubox
20 37 0.054797316 ubox
20 40 0.025366367 ubox
20 43 0.007074893 ubox
21 26 0.161196401 ubox
21 30 0.129018229 ubox
21 31 0.012905210 ubox
21 36 0.064524582 ubox
21 41 0.017102607 ubox
21 42 0.005210226 ubox
22 29 0.129849695 ubox
22 35 0.064384974 ubox
22 40 0.021826271 ubox
24 33 0.038730372 ubox
24 34 0.013442193 ubox
24 38 0.007511524 ubox
24 39 0.015612338 ubox
24 40 0.038072735 ubox
25 32 0.040883667 ubox
25 33 0.013795496 ubox
25 34 0.004028062 ubox
25 35 0.006666448 ubox
25 37 0.007328091 ubox
25 38 0.018247542 ubox
25 39 0.042042118 ubox
25 40 0.044463954 ubox
25 47 0.003629113 ubox
26 34 0.009644654 ubox
26 37 0.018334924 ubox
26 38 0.043274016 ubox
26 39 0.047218458 ubox
26 46 0.004741734 ubox
26 47 0.005823227 ubox
28 42 0.027220472 ubox
28 45 0.010178710 ubox
29 36 0.076605161 ubox
29 41 0.027757249 ubox
29 44 0.010198463 ubox
30 35 0.076621146 ubox
30 38 0.014739265 ubox
30 39 0.006063129 ubox
30 40 0.027982901 ubox
30 43 0.010189921 ubox
30 47 0.013549169 ubox
30 48 0.019969288 ubox
31 37 0.014816233 ubox
31 38 0.006636367 ubox
31 39 0.027905594 ubox
31 46 0.013568163 ubox
31 47 0.020826928 ubox
34 42 0.024493971 ubox
34 45 0.063439490 ubox
35 41 0.025064140 ubox
35 44 0.063528150 ubox
36 40 0.024888259 ubox
36 43 0.063527138 ubox
36 46 0.006014945 ubox
37 42 0.062662038 ubox
37 45 0.006787141 ubox
38 44 0.006777999 ubox
38 45 0.004322921 ubox
39 44 0.004335571 ubox
1 44 0.9500000 lbox
2 43 0.9500000 lbox
3 42 0.9500000 lbox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
12 34 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
showpage
end
%%EOF
