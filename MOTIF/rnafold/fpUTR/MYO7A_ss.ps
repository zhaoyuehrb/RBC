%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUGGGCAGGAGAGAGAGGGAGAGACAAGAGACACACACAGAGAGACGGCGAGGAAGGGAAAGACCCAGAGGGACGCCUAGAACGAGACUUGGAGCCAGACAGAGGAAGAGGGGACGUGUGUUUGCAGACUGGCUGGGCCCGUGACCCAGCUUCCUGAGUCCUCCGUGCAGGUGGCAGCUGUACCAGGCUGGCAGGUCACUGAGAGUGGGCAGCUGGGCCCCAGAACUGUGCCUGGCCCAGUGGGCAGCAGGA\
GCUCCUGACUUGGGACC\
) } def
/len { sequence length } bind def

/coor [
[50.65554810 458.63183594]
[50.64077377 442.82757568]
[61.86461639 431.70098877]
[61.69200516 416.70196533]
[61.51939392 401.70297241]
[61.34678268 386.70394897]
[61.17417145 371.70495605]
[61.00156021 356.70593262]
[60.74264908 341.70819092]
[60.39745331 326.71215820]
[60.05225372 311.71612549]
[59.70705414 296.72009277]
[59.36185455 281.72406006]
[59.01665497 266.72802734]
[52.13011551 280.05380249]
[38.25136948 285.74417114]
[23.45149040 288.18621826]
[8.48035049 287.25619507]
[-5.90350103 283.00119019]
[-18.97126961 275.63687134]
[-30.06084442 265.53631592]
[-38.61034393 253.21128845]
[-44.18658447 239.28630066]
[-46.50703812 224.46685791]
[-45.45412827 209.50386047]
[-41.08120346 195.15542603]
[-33.60982895 182.14855957]
[-23.41856384 171.14228821]
[-11.02377033 162.69425964]
[2.94653726 157.23252869]
[17.78451920 155.03382874]
[32.73836899 156.20954895]
[47.05041885 160.70011902]
[59.99550629 168.27803040]
[70.91773987 178.55931091]
[79.26371765 191.02305603]
[84.61056519 205.03773499]
[86.68740845 219.89428711]
[94.02979279 232.97441101]
[93.85718536 217.97540283]
[93.68457031 202.97639465]
[93.51196289 187.97738647]
[93.33934784 172.97837830]
[79.95380402 170.48658752]
[67.26025391 165.56155396]
[55.69689941 158.37330627]
[45.66291046 149.16999817]
[37.50465775 138.26931763]
[31.50377274 126.04755402]
[27.86741066 112.92662048]
[12.90935326 114.04756927]
[-2.04870367 115.16852570]
[-17.00676155 116.28947449]
[-23.00084305 132.41558838]
[-35.41368866 144.24752808]
[-51.70256424 149.42875671]
[-68.56002808 146.95825195]
[-82.58551025 137.38357544]
[-90.97127533 122.68033600]
[-105.89957428 124.14522552]
[-120.82787323 125.61011505]
[-132.08012390 137.04542542]
[-148.02064514 135.23463440]
[-156.42126465 121.56681061]
[-150.83770752 106.52674103]
[-135.55322266 101.65188599]
[-122.29276276 110.68181610]
[-107.36446381 109.21692657]
[-92.43616486 107.75203705]
[-88.99488831 95.26680756]
[-81.50640869 84.66149902]
[-70.83995056 77.20460510]
[-58.24640656 73.79698944]
[-45.21163559 74.86308289]
[-33.28115463 80.29816437]
[-23.87688637 89.47819519]
[-18.12771225 101.33142090]
[-3.16965508 100.21046448]
[11.78840160 99.08951569]
[26.74645805 97.96856689]
[27.25195503 91.17221069]
[28.38663292 84.45220947]
[30.14068413 77.86667633]
[32.49893570 71.47257233]
[35.44098663 65.32519531]
[38.94140244 59.47771454]
[42.96989822 53.98070526]
[47.49163818 48.88170624]
[52.46751404 44.22481918]
[57.85448837 40.05031967]
[63.60597229 36.39431763]
[69.67221832 33.28842926]
[76.00077057 30.75951385]
[82.53688049 28.82944679]
[80.47207642 13.97224045]
[78.40727997 -0.88496584]
[76.34247589 -15.74217224]
[73.18167877 -19.80383110]
[71.98911285 -24.22842026]
[72.57765198 -28.21421432]
[74.47200775 -31.14684868]
[72.92124939 -46.06647110]
[71.37049103 -60.98609543]
[59.38332748 -70.93324280]
[58.02317429 -86.08595276]
[67.58013153 -97.45257568]
[66.02937317 -112.37220001]
[64.47861481 -127.29182434]
[62.92785263 -142.21144104]
[61.37709427 -157.13107300]
[59.82633591 -172.05068970]
[47.83917618 -181.99783325]
[46.47901917 -197.15054321]
[56.03597641 -208.51716614]
[54.48521805 -223.43679810]
[52.93445969 -238.35641479]
[51.21211624 -253.25720215]
[49.31842041 -268.13720703]
[47.42472076 -283.01718140]
[38.00710297 -295.73013306]
[44.07572174 -309.33236694]
[42.18202591 -324.21234131]
[29.65491104 -329.91201782]
[21.63577461 -340.96386719]
[20.12730598 -354.42614746]
[25.41644859 -366.77996826]
[36.02722931 -374.84893799]
[34.30488586 -389.74972534]
[21.76615334 -399.37030029]
[19.78557396 -415.04998779]
[29.53819084 -427.48632812]
[45.23794937 -429.30102539]
[57.57046127 -419.41744995]
[59.21906662 -403.69940186]
[49.20567703 -391.47204590]
[50.92802048 -376.57125854]
[65.49082184 -368.95837402]
[72.70661163 -354.00973511]
[69.54576111 -337.54489136]
[57.06200790 -326.10604858]
[58.95570755 -311.22607422]
[68.23787689 -299.57742310]
[62.30470276 -284.91088867]
[64.19840240 -270.03088379]
[66.09210205 -255.15090942]
[69.22405243 -251.58981323]
[70.17581177 -246.03402710]
[67.85408020 -239.90718079]
[69.40483856 -224.98754883]
[70.95559692 -210.06793213]
[82.64591980 -200.90977478]
[84.43114471 -185.80123901]
[74.74595642 -173.60145569]
[76.29671478 -158.68182373]
[77.84747314 -143.76220703]
[79.39823914 -128.84257507]
[80.94899750 -113.92295837]
[82.49975586 -99.00333405]
[94.19007874 -89.84516907]
[95.97530365 -74.73664093]
[86.29011536 -62.53685379]
[87.84087372 -47.61722946]
[89.39163208 -32.69760895]
[91.19968414 -17.80697441]
[93.26448059 -2.94976854]
[95.32928467 11.90743828]
[97.39408875 26.76464462]
[113.91890717 28.05229568]
[129.73165894 33.02062988]
[144.02342224 41.41547394]
[156.06303406 52.80736923]
[165.23458862 66.61353302]
[171.06889343 82.12767029]
[185.91397095 79.97741699]
[193.92327881 75.66463470]
[200.94215393 77.88885498]
[215.81098938 75.90956879]
[230.67984009 73.93028259]
[245.52491760 71.78002930]
[260.34426880 69.45909119]
[275.16363525 67.13815308]
[289.98297119 64.81721497]
[304.80233765 62.49627304]
[319.62167358 60.17533112]
[327.58084106 55.77067184]
[334.62481689 57.91397095]
[349.46990967 55.76371765]
[354.84161377 52.01222992]
[360.46130371 51.57440567]
[364.68096924 53.73888016]
[379.57159424 51.93083191]
[394.46221924 50.12277985]
[404.20098877 37.96570969]
[419.32794189 36.34421539]
[430.85784912 45.70355225]
[445.74847412 43.89550018]
[460.63909912 42.08745193]
[473.41711426 31.80858803]
[488.60797119 37.98670197]
[490.58468628 54.26628494]
[477.31375122 63.90029144]
[462.44717407 56.97808456]
[447.55651855 58.78613663]
[432.66589355 60.59418488]
[423.71087646 72.44084167]
[408.63540649 74.48658752]
[396.27026367 65.01341248]
[381.37963867 66.82146454]
[366.48901367 68.62951660]
[351.62017822 70.60879517]
[336.77508545 72.75904846]
[321.94262695 74.99468231]
[307.12326050 77.31562805]
[292.30392456 79.63656616]
[277.48455811 81.95750427]
[262.66522217 84.27844238]
[247.84585571 86.59938812]
[244.37632751 89.83247375]
[238.85021973 90.94365692]
[232.65911865 88.79912567]
[217.79028320 90.77841187]
[202.92143250 92.75769043]
[188.06422424 94.82249451]
[173.21914673 96.97274780]
[170.85070801 118.71857452]
[162.16940308 138.79655457]
[147.94876099 155.41772461]
[129.45582581 167.10113525]
[108.33835602 172.80577087]
[108.51097107 187.80477905]
[108.68357849 202.80378723]
[108.85619354 217.80279541]
[109.02880096 232.80178833]
[114.02369690 246.94573975]
[123.30841827 258.72683716]
[132.59312439 270.50790405]
[141.87783813 282.28900146]
[151.29751587 293.96246338]
[160.85089111 305.52676392]
[170.40426636 317.09106445]
[179.95764160 328.65536499]
[194.70690918 337.01571655]
[190.75627136 353.50296021]
[173.81971741 354.27084351]
[168.39334106 338.20874023]
[158.83996582 326.64443970]
[149.28659058 315.08013916]
[139.73321533 303.51583862]
[135.18283081 302.17996216]
[131.40904236 297.99295044]
[130.09675598 291.57373047]
[120.81204224 279.79263306]
[111.52732849 268.01153564]
[102.24260712 256.23043823]
[95.18512726 258.76855469]
[81.07015991 263.84475708]
[74.01268005 266.38284302]
[74.35787964 281.37887573]
[74.70307922 296.37490845]
[75.04827881 311.37091064]
[75.39347839 326.36694336]
[75.73867798 341.36297607]
[79.05459595 349.83374023]
[76.00056458 356.53332520]
[76.17317963 371.53234863]
[76.34578705 386.53134155]
[76.51840210 401.53036499]
[76.69100952 416.52935791]
[76.86362457 431.52835083]
[88.34055328 442.39370728]
[88.68949127 458.19415283]
[77.70341492 469.55554199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 269]
[4 268]
[5 267]
[6 266]
[7 265]
[8 264]
[9 262]
[10 261]
[11 260]
[12 259]
[13 258]
[14 257]
[39 233]
[40 232]
[41 231]
[42 230]
[43 229]
[50 80]
[51 79]
[52 78]
[53 77]
[59 69]
[60 68]
[61 67]
[94 167]
[95 166]
[96 165]
[97 164]
[101 163]
[102 162]
[103 161]
[106 158]
[107 157]
[108 156]
[109 155]
[110 154]
[111 153]
[114 150]
[115 149]
[116 148]
[117 145]
[118 144]
[119 143]
[121 141]
[122 140]
[127 136]
[128 135]
[173 224]
[174 223]
[176 222]
[177 221]
[178 220]
[179 217]
[180 216]
[181 215]
[182 214]
[183 213]
[184 212]
[186 211]
[187 210]
[190 209]
[191 208]
[192 207]
[195 204]
[196 203]
[197 202]
[234 254]
[235 253]
[236 252]
[237 251]
[238 248]
[239 247]
[240 246]
[241 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
