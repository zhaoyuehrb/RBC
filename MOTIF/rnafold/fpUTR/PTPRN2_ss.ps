%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUUUUAUGCGUCCGCAGCCCUUUUGGGUUCUGAGCUGCGGCAAGCUUUAAGCAAGUGUUUUAAUUUUCUUUAGUUCACUUAGCUAAGUCUUCAACAGAUUAACUAACGUUCGUACCUUGGUAGAAUUAUAGCCAGAUUUUGCAAAGAGCUUGUGAAAUGACAGCCAG\
) } def
/len { sequence length } bind def

/coor [
[-13.50695896 342.01715088]
[-1.34874010 350.80224609]
[5.08470201 364.35253906]
[4.20701122 379.32684326]
[-3.76539135 392.03277588]
[-16.86667442 399.33734131]
[-31.86632729 399.43933105]
[-45.06574249 392.31365967]
[-53.21021271 379.71731567]
[-54.29169464 364.75753784]
[-61.91070557 377.67846680]
[-69.52971649 390.59942627]
[-69.13921356 406.99392700]
[-83.28093719 415.29714966]
[-97.40709686 406.96746826]
[-96.98590851 390.57373047]
[-82.45065308 382.98040771]
[-74.83164215 370.05947876]
[-67.21263123 357.13851929]
[-78.34134674 347.08111572]
[-90.42782593 355.96463013]
[-102.51429749 364.84817505]
[-114.60077667 373.73168945]
[-120.68914032 388.95877075]
[-136.95677185 391.03149414]
[-146.66893005 377.81765747]
[-139.83456421 362.91046143]
[-123.48430634 361.64523315]
[-111.39782715 352.76168823]
[-99.31135559 343.87817383]
[-87.22487640 334.99462891]
[-68.13028717 330.22048950]
[-54.81508255 337.37918091]
[-46.49585342 324.89755249]
[-38.17662811 312.41595459]
[-37.07923889 305.07821655]
[-29.58815956 299.78341675]
[-21.04103851 287.45672607]
[-12.49391747 275.13006592]
[-3.94679666 262.80340576]
[4.48673296 250.39874268]
[12.80595970 237.91714478]
[20.66105461 225.13835144]
[28.04141045 212.07962036]
[35.42176819 199.02088928]
[42.80212402 185.96217346]
[50.18247986 172.90344238]
[57.56283569 159.84471130]
[64.94319153 146.78599548]
[72.32354736 133.72726440]
[79.70390320 120.66853333]
[71.04343414 100.79817963]
[78.59613800 80.48091888]
[70.50761414 67.84858704]
[62.41909027 55.21625519]
[54.21486664 42.65876007]
[45.89564133 30.17715263]
[37.57641220 17.69554901]
[29.25718689 5.21394396]
[20.93795967 -7.26766109]
[5.69792557 -10.48932838]
[-2.56114841 -23.26596069]
[0.60413790 -37.77515030]
[-7.71508932 -50.25675583]
[-16.03431702 -62.73835754]
[-24.35354424 -75.21996307]
[-39.89783478 -78.07487488]
[-48.80168152 -91.13232422]
[-45.78258896 -106.64556885]
[-32.63172913 -115.41086578]
[-17.15127563 -112.22792053]
[-8.52550697 -98.98513031]
[-11.87193871 -83.53919220]
[-3.55271125 -71.05758667]
[4.76651573 -58.57598114]
[13.08574295 -46.09437561]
[27.69571304 -43.43273544]
[36.31039810 -30.89312363]
[33.41956329 -15.58688831]
[41.73879242 -3.10528326]
[50.05801773 9.37632179]
[58.37724686 21.85792732]
[66.69647217 34.33953094]
[73.04692841 38.17601776]
[75.05142212 47.12773132]
[83.13994598 59.76005936]
[91.22846985 72.39238739]
[100.60614014 65.89460754]
[113.20816040 63.03488541]
[118.85280609 49.13747406]
[124.49744415 35.24006271]
[130.14208984 21.34265137]
[135.78672791 7.44524050]
[130.89506531 -7.83386850]
[139.91040039 -21.10425949]
[155.91693115 -22.18602371]
[166.63583374 -10.24932480]
[163.84446716 5.54902411]
[149.68412781 13.08988094]
[144.03948975 26.98729324]
[138.39485168 40.88470459]
[132.75021362 54.78211594]
[127.10557556 68.67952728]
[130.61444092 75.30809021]
[142.23085022 65.81814575]
[153.84725952 56.32820892]
[165.46366882 46.83826828]
[177.08007812 37.34832764]
[183.44335938 23.76492691]
[195.47386169 14.80573177]
[210.31095886 12.60106373]
[224.42668152 17.67515182]
[234.46458435 28.82147217]
[238.03784180 43.38964844]
[234.29681396 57.91564941]
[224.13104248 68.94547272]
[209.95773315 73.85643768]
[195.14865112 71.48150635]
[180.76953125 75.75243378]
[166.39041138 80.02336121]
[152.01129150 84.29428864]
[137.63217163 88.56521606]
[141.14103699 95.19378662]
[155.80749512 98.33940887]
[170.47395325 101.48503876]
[185.14041138 104.63066101]
[199.80686951 107.77628326]
[214.47332764 110.92191315]
[229.13978577 114.06753540]
[243.80624390 117.21316528]
[256.03454590 107.46622467]
[271.66577148 107.91150665]
[283.31939697 118.33876801]
[285.49285889 133.82456970]
[277.15997314 147.05699158]
[262.25524902 151.78808594]
[247.81625366 145.78398132]
[240.66062927 131.87962341]
[225.99417114 128.73399353]
[211.32769775 125.58837128]
[196.66123962 122.44274902]
[181.99478149 119.29711914]
[167.32832336 116.15149689]
[152.66186523 113.00586700]
[137.99540710 109.86024475]
[125.54293823 125.11975098]
[108.66036224 131.21734619]
[92.76263428 128.04888916]
[85.38227844 141.10762024]
[78.00191498 154.16635132]
[70.62155914 167.22506714]
[63.24120712 180.28379822]
[55.86085129 193.34252930]
[48.48049164 206.40124512]
[41.10013580 219.45997620]
[33.71977997 232.51870728]
[33.92514420 236.94274902]
[32.80353165 240.80180359]
[30.70193863 243.74349976]
[28.04698753 245.56710815]
[25.28756523 246.23637390]
[16.96833801 258.71798706]
[14.79973507 267.63134766]
[8.37987041 271.35052490]
[-0.16725034 283.67718506]
[-8.71437073 296.00384521]
[-17.26149178 308.33053589]
[-25.69502258 320.73519897]
[-34.01424789 333.21679688]
[-42.33347702 345.69839478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 19]
[11 18]
[12 17]
[20 31]
[21 30]
[22 29]
[23 28]
[33 170]
[34 169]
[35 168]
[37 167]
[38 166]
[39 165]
[40 164]
[41 162]
[42 161]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[53 87]
[54 86]
[55 85]
[56 83]
[57 82]
[58 81]
[59 80]
[60 79]
[63 76]
[64 75]
[65 74]
[66 73]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
