%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCUGCCAGAAAUUUGUUGGAUUUGAGGAGUCCAGAGCGCCGACCCGCUCUGUCUGCGUGGACUUAUUUCCUUGGAUCUUCGUGGACUCUGAAGUUGCCAAGUGUGUGUGCCUGCUCCAGAAAACAAAGGAAGCCACCAUUUUUUCUCAUUCACAGUGCAGGGAGAUACCUCAGUAGAAGCAUACAGUCCAGUCUUCAACUAGGGACCCCUACCAGG\
) } def
/len { sequence length } bind def

/coor [
[85.10511780 112.33235168]
[70.22882843 114.25484467]
[55.35253906 116.17733765]
[40.47624969 118.09983063]
[25.59995842 120.02232361]
[10.72366810 121.94481659]
[2.24736643 131.66093445]
[-10.17809296 132.95909119]
[-19.83870888 125.68598175]
[-34.74093628 127.39585114]
[-49.64316177 129.10572815]
[-64.54538727 130.81559753]
[-67.59165192 145.62025452]
[-75.05462646 158.74070740]
[-86.19249725 168.89826965]
[-99.90602875 175.10748291]
[-114.84700775 176.77169800]
[-129.55084229 173.74046326]
[-142.58006287 166.32295227]
[-152.66490173 155.25651550]
[-158.82704163 141.63340759]
[-173.72926331 143.34327698]
[-188.63148499 145.05314636]
[-203.53372192 146.76301575]
[-218.43594360 148.47290039]
[-233.33816528 150.18276978]
[-248.24040222 151.89263916]
[-263.14260864 153.60250854]
[-278.04486084 155.31237793]
[-292.94708252 157.02224731]
[-307.84930420 158.73211670]
[-322.68099976 160.97279358]
[-337.42327881 163.74142456]
[-352.16555786 166.51005554]
[-366.90783691 169.27868652]
[-370.85821533 172.67034912]
[-375.27273560 174.07196045]
[-379.31729126 173.63928223]
[-382.33993530 171.83596802]
[-397.18725586 173.97068787]
[-412.03457642 176.10540771]
[-426.88189697 178.24012756]
[-439.44046021 187.86264038]
[-453.13931274 182.01538086]
[-467.98663330 184.15010071]
[-482.83398438 186.28482056]
[-490.92419434 199.66697693]
[-505.74020386 204.66905212]
[-520.28625488 198.92919922]
[-527.69421387 185.15762329]
[-524.46624756 169.85684204]
[-512.12646484 160.25140381]
[-496.50140381 160.87670898]
[-484.96868896 171.43750000]
[-470.12136841 169.30278015]
[-455.27404785 167.16806030]
[-443.77746582 157.69822693]
[-429.01660156 163.39280701]
[-414.16928101 161.25808716]
[-399.32196045 159.12336731]
[-384.47463989 156.98864746]
[-369.67645264 154.53640747]
[-354.93417358 151.76777649]
[-340.19189453 148.99914551]
[-325.44961548 146.23051453]
[-336.19613647 135.76570129]
[-334.86071777 120.82526398]
[-322.42861938 112.43223572]
[-308.07223511 116.77897644]
[-302.38366699 130.65846252]
[-309.55917358 143.82989502]
[-294.65695190 142.12002563]
[-279.75473022 140.41015625]
[-264.85250854 138.70028687]
[-249.95027161 136.99041748]
[-235.04803467 135.28053284]
[-220.14581299 133.57066345]
[-205.24359131 131.86079407]
[-190.34136963 130.15092468]
[-175.43913269 128.44105530]
[-160.53691101 126.73118591]
[-157.62051392 112.06640625]
[-150.30426025 99.00338745]
[-139.29368591 88.82756042]
[-125.65854645 82.54473114]
[-110.72891235 80.78161621]
[-95.96540833 83.72338867]
[-82.81632996 91.09428406]
[-72.57556152 102.18343353]
[-66.25525665 115.91336823]
[-51.35303116 114.20349884]
[-36.45080566 112.49362946]
[-21.54858017 110.78376007]
[-8.02938938 99.59011841]
[8.80117512 107.06852722]
[23.67746544 105.14603424]
[38.55375671 103.22354126]
[53.43004608 101.30104828]
[68.30633545 99.37855530]
[83.18262482 97.45606232]
[85.32952118 90.26437378]
[90.49761963 84.47145844]
[97.87253571 81.31722260]
[106.14689636 81.59768677]
[113.75143433 85.47757721]
[126.70597076 77.91582489]
[139.66050720 70.35408020]
[152.61503601 62.79233170]
[165.56956482 55.23058319]
[178.52410889 47.66883087]
[191.47863770 40.10708237]
[195.60147095 25.08576775]
[208.84693909 17.60161972]
[223.14205933 21.62468719]
[236.09658813 14.06293869]
[249.05113220 6.50119019]
[262.00567627 -1.06055892]
[274.96020508 -8.62230778]
[273.29388428 -25.33666229]
[284.44189453 -41.40835571]
[305.98898315 -47.30782700]
[315.81188965 -58.64406967]
[325.63482666 -69.98031616]
[335.45773315 -81.31655884]
[345.28063965 -92.65280151]
[355.10354614 -103.98904419]
[358.35519409 -112.51782990]
[365.14855957 -115.41574097]
[375.13235474 -126.61055756]
[378.54302979 -142.05975342]
[392.78863525 -146.40855408]
[402.77243042 -157.60337830]
[401.62005615 -173.36560059]
[412.01388550 -185.27124023]
[427.78741455 -186.25688171]
[439.58248901 -175.73777771]
[440.40130615 -159.95471191]
[429.75808716 -148.27151489]
[413.96725464 -147.61959839]
[403.98345947 -136.42477417]
[401.28689575 -121.77630615]
[386.32717896 -116.62677765]
[376.34338379 -105.43195343]
[366.43978882 -94.16613007]
[356.61688232 -82.82988739]
[346.79397583 -71.49364471]
[336.97106934 -60.15740204]
[327.14813232 -48.82115936]
[317.32522583 -37.48491669]
[320.19537354 -30.55581856]
[334.05355835 -36.29607010]
[347.91174316 -42.03631973]
[361.76992798 -47.77657318]
[375.62814331 -53.51682281]
[389.48641968 -59.25684738]
[395.22622681 -45.39846420]
[381.36837769 -39.65863037]
[367.51019287 -33.91838074]
[353.65200806 -28.17812920]
[339.79379272 -22.43787766]
[325.93560791 -16.69762611]
[328.80572510 -9.76852894]
[343.76751709 -8.69844151]
[358.72930908 -7.62835360]
[370.50775146 -18.16607666]
[386.28280640 -17.20534134]
[396.69540405 -5.31613493]
[395.56796265 10.44788647]
[383.56933594 20.73420906]
[367.81811523 19.44013977]
[357.65921021 7.33342838]
[342.69741821 6.26334047]
[327.73565674 5.19325256]
[301.96652222 15.77033520]
[282.52194214 4.33222628]
[269.56741333 11.89397526]
[256.61288452 19.45572472]
[243.65834045 27.01747322]
[230.70381165 34.57922363]
[227.17749023 49.00491714]
[214.14747620 56.85815048]
[199.04039001 53.06161880]
[186.08584595 60.62336731]
[173.13131714 68.18511200]
[160.17678833 75.74686432]
[147.22224426 83.30861664]
[134.26771545 90.87036133]
[121.31318665 98.43211365]
[118.02013397 113.06617737]
[126.48677826 125.44824982]
[134.95343018 137.83033752]
[143.42007446 150.21241760]
[152.06266785 162.47232056]
[160.87945557 174.60757446]
[169.69622803 186.74284363]
[185.25306702 190.66259766]
[191.75654602 205.32833862]
[184.21777344 219.48977661]
[168.41983032 222.28346252]
[156.48155212 211.56631470]
[157.56097412 195.55961609]
[148.74420166 183.42436218]
[139.92741394 171.28910828]
[135.44044495 169.67095947]
[131.91949463 165.22067261]
[131.03799438 158.67906189]
[122.57135010 146.29698181]
[114.10470581 133.91490173]
[105.63805389 121.53282166]
[113.66152191 134.20657349]
[115.15273285 149.13226318]
[109.79527283 163.14289856]
[98.72592163 173.26560974]
[84.29341888 177.35253906]
[69.56012726 174.53646851]
[57.65223312 165.41496277]
[51.09640503 151.92344666]
[51.28369522 136.92460632]
[58.17435837 123.60099030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[3 98]
[4 97]
[5 96]
[6 95]
[9 93]
[10 92]
[11 91]
[12 90]
[21 81]
[22 80]
[23 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 72]
[31 71]
[32 65]
[33 64]
[34 63]
[35 62]
[39 61]
[40 60]
[41 59]
[42 58]
[44 56]
[45 55]
[46 54]
[105 188]
[106 187]
[107 186]
[108 185]
[109 184]
[110 183]
[111 182]
[114 179]
[115 178]
[116 177]
[117 176]
[118 175]
[121 149]
[122 148]
[123 147]
[124 146]
[125 145]
[126 144]
[128 143]
[129 142]
[131 140]
[132 139]
[162 173]
[163 172]
[164 171]
[189 209]
[190 208]
[191 207]
[192 206]
[193 203]
[194 202]
[195 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
