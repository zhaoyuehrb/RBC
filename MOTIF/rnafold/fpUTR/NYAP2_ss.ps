%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUGAAGAAACACUGAGCUGAACUACAAGUCUAUUUCUUAUGGUGCUGGAUUACUCCUACAGAACUGCCCUGAGAUCAACCGUGAGAGAGGGCUCUGACAGACACAAGUCACCUUCUGGUUAUUGCACUUAGCUCUCCCUGGGGACUUAAAUUUUGGCAGUGUUCCUCUUUAC\
) } def
/len { sequence length } bind def

/coor [
[87.95008850 742.77667236]
[72.16844940 741.93078613]
[61.66960144 730.11767578]
[62.68232346 714.34582520]
[74.60578156 703.97247314]
[75.40864563 688.99395752]
[76.21150970 674.01550293]
[77.01437378 659.03698730]
[77.81723785 644.05847168]
[78.62010193 629.08001709]
[79.15548706 614.08953857]
[79.42321777 599.09191895]
[79.69095612 584.09429932]
[79.95869446 569.09674072]
[80.22642517 554.09912109]
[80.49416351 539.10150146]
[77.85849762 535.08349609]
[77.74108124 529.36090088]
[81.04866028 523.57592773]
[81.85152435 508.59744263]
[82.65438843 493.61892700]
[83.45725250 478.64044189]
[84.26011658 463.66192627]
[85.06298065 448.68344116]
[72.50652313 440.67086792]
[65.60065460 427.36053467]
[66.28893280 412.28100586]
[74.48653412 399.48663330]
[88.07621765 392.46752930]
[88.87908173 377.48901367]
[89.68194580 362.51052856]
[90.48480988 347.53204346]
[91.28767395 332.55352783]
[92.09053802 317.57504272]
[75.79139709 312.25341797]
[61.61027145 302.59310913]
[50.67480850 289.35351562]
[43.85699081 273.57907104]
[41.70363617 256.51672363]
[44.39251328 239.51741028]
[51.71771622 223.92915344]
[63.10538864 210.99006653]
[77.65869904 201.73010254]
[94.22845459 196.88905334]
[93.96071625 181.89143372]
[93.69298553 166.89382935]
[93.42524719 151.89620972]
[93.15751648 136.89860535]
[69.17398834 121.40288544]
[63.03665924 93.51632690]
[49.07821655 88.02434540]
[35.11977386 82.53236389]
[18.99073792 85.49652863]
[8.56663895 72.83674622]
[14.57089329 57.57630539]
[30.82683945 55.41384506]
[40.61175537 68.57392120]
[54.57019806 74.06590271]
[68.52864075 79.55788422]
[72.57514191 74.38352203]
[77.46188354 69.99400330]
[83.03914642 66.52379608]
[79.07071686 52.05826950]
[75.10229492 37.59273529]
[71.13386536 23.12720490]
[67.37129974 19.41641235]
[65.60709381 15.06484795]
[65.74782562 10.94951534]
[67.36246490 7.78067064]
[64.17398071 -6.87653208]
[60.98550415 -21.53373528]
[57.79702377 -36.19093704]
[54.60854340 -50.84814072]
[41.59608078 -55.44935989]
[32.63383102 -65.80282593]
[29.98713684 -79.12782288]
[34.24379730 -91.91489410]
[44.18770599 -100.85011292]
[41.26135254 -115.56188965]
[38.33499908 -130.27366638]
[27.12136650 -142.23973083]
[32.13576126 -157.85343933]
[48.21980286 -161.05274963]
[58.82761002 -148.54649353]
[53.04677582 -133.20002747]
[55.97313309 -118.48825073]
[58.89948654 -103.77646637]
[74.00890350 -97.39705658]
[82.43302917 -83.13178253]
[80.68887329 -66.48999023]
[69.26574707 -54.03662109]
[72.45422363 -39.37941742]
[75.64270782 -24.72221375]
[78.83118439 -10.06501198]
[82.01966858 4.59219170]
[85.59940338 19.15877914]
[89.56782532 33.62430954]
[93.53624725 48.08984375]
[97.50467682 62.55537415]
[101.36283875 60.96957779]
[105.51598358 59.79589081]
[109.91873169 59.07762527]
[114.51998138 58.85296249]
[124.13898468 47.34319687]
[133.75799561 35.83343124]
[136.03906250 19.59370041]
[151.34291077 13.70100021]
[163.92626953 24.21723175]
[160.84445190 40.32419968]
[145.26776123 45.45243454]
[135.64875793 56.96220016]
[126.02974701 68.47196960]
[135.64875793 79.98173523]
[148.68353271 72.55915833]
[161.71830750 65.13658905]
[169.53074646 50.71792603]
[185.92898560 50.54491043]
[194.04391479 64.79552460]
[185.52758789 78.80995941]
[169.14088440 78.17136383]
[156.10610962 85.59393311]
[143.07133484 93.01651001]
[141.98715210 105.99214935]
[137.19300842 117.70333099]
[129.33415222 127.14993286]
[119.30575562 133.59710693]
[108.15512085 136.63087463]
[108.42285919 151.62847900]
[108.69059753 166.62608337]
[108.95832825 181.62370300]
[109.22606659 196.62130737]
[121.90637970 199.36628723]
[133.71928406 204.71421814]
[144.13740540 212.42312622]
[152.69635010 222.14575195]
[159.01530457 233.44509888]
[162.81410217 245.81414795]
[163.92556763 258.69860840]
[162.30287170 271.52169800]
[158.02153015 283.71002197]
[151.27586365 294.71917725]
[142.37020874 304.05810547]
[131.70515442 311.31094360]
[119.75955963 316.15554810]
[107.06903839 318.37789917]
[106.26617432 333.35638428]
[105.46331024 348.33489990]
[104.66044617 363.31338501]
[103.85757446 378.29190063]
[103.05471039 393.27038574]
[115.81622314 401.70193481]
[122.59920502 415.29928589]
[121.67160034 430.36602783]
[113.38249207 442.86187744]
[100.04148102 449.48629761]
[99.23861694 464.46478271]
[98.43575287 479.44329834]
[97.63288879 494.42178345]
[96.83002472 509.40029907]
[96.02716064 524.37878418]
[95.49177551 539.36926270]
[95.22403717 554.36682129]
[94.95629883 569.36444092]
[94.68856812 584.36206055]
[94.42082977 599.35968018]
[94.15309906 614.35729980]
[97.03955841 620.36346436]
[96.51419067 626.06311035]
[93.59860229 629.88287354]
[92.79573822 644.86132812]
[91.99287415 659.83984375]
[91.19000244 674.81835938]
[90.38713837 689.79687500]
[89.58427429 704.77532959]
[100.33055115 716.36383057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 174]
[6 173]
[7 172]
[8 171]
[9 170]
[10 169]
[11 166]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[19 160]
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[29 150]
[30 149]
[31 148]
[32 147]
[33 146]
[34 145]
[44 131]
[45 130]
[46 129]
[47 128]
[48 127]
[50 59]
[51 58]
[52 57]
[62 99]
[63 98]
[64 97]
[65 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[78 87]
[79 86]
[80 85]
[103 112]
[104 111]
[105 110]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
