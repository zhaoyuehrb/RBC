%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LRRC52)
} def

/sequence { (\
GAUCAGAGGACAGAGCCCGCAGGAAGGUGAAAGGAGGGUGGUUGUGGCUUCUUACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.004317600 ubox
1 51 0.021546926 ubox
1 53 0.043710548 ubox
2 42 0.004571263 ubox
2 50 0.020450968 ubox
2 52 0.029863028 ubox
3 10 0.018676173 ubox
3 14 0.010769480 ubox
3 23 0.004773498 ubox
3 24 0.015865358 ubox
3 30 0.005902753 ubox
3 41 0.004590811 ubox
3 47 0.009883736 ubox
4 8 0.004540835 ubox
4 9 0.020650231 ubox
4 13 0.011627048 ubox
4 22 0.007346749 ubox
4 23 0.016936711 ubox
4 29 0.006306488 ubox
4 40 0.004610149 ubox
4 46 0.012472776 ubox
5 28 0.005784820 ubox
5 39 0.004336147 ubox
5 45 0.012056233 ubox
5 49 0.017020775 ubox
5 50 0.005304461 ubox
5 52 0.918719403 ubox
5 53 0.050182251 ubox
5 56 0.045607732 ubox
6 48 0.017928369 ubox
6 49 0.005429829 ubox
6 50 0.068212815 ubox
6 51 0.983623581 ubox
6 52 0.007876024 ubox
6 53 0.077321300 ubox
6 55 0.050164700 ubox
7 43 0.009782747 ubox
7 49 0.083323736 ubox
7 50 0.982546698 ubox
7 52 0.080351839 ubox
7 53 0.066398000 ubox
7 56 0.054039007 ubox
8 17 0.025023509 ubox
8 18 0.021796657 ubox
8 42 0.008879792 ubox
8 48 0.092969126 ubox
8 49 0.980172010 ubox
8 51 0.080623037 ubox
8 52 0.069843483 ubox
8 53 0.006278560 ubox
8 55 0.059045175 ubox
8 56 0.041012534 ubox
9 16 0.025071375 ubox
9 17 0.021764939 ubox
9 43 0.013860647 ubox
9 48 0.965390440 ubox
9 49 0.004956396 ubox
9 50 0.074168888 ubox
9 51 0.070379262 ubox
9 52 0.005475875 ubox
9 53 0.011699497 ubox
9 55 0.045482501 ubox
10 28 0.008874784 ubox
10 42 0.018879033 ubox
10 45 0.441056358 ubox
10 49 0.059662367 ubox
10 50 0.061225870 ubox
10 52 0.010747963 ubox
11 27 0.009178491 ubox
11 29 0.008798049 ubox
11 40 0.004755581 ubox
11 41 0.018938554 ubox
11 44 0.470352644 ubox
11 46 0.858011065 ubox
12 28 0.008530214 ubox
12 39 0.003761676 ubox
12 43 0.467000430 ubox
12 45 0.865989958 ubox
12 49 0.010428382 ubox
12 50 0.003605462 ubox
12 52 0.082359085 ubox
12 53 0.004026859 ubox
13 42 0.421381326 ubox
13 43 0.053155778 ubox
13 48 0.010568273 ubox
13 49 0.004588709 ubox
13 50 0.066667128 ubox
13 51 0.085960783 ubox
13 53 0.005936401 ubox
14 42 0.054295896 ubox
14 43 0.827682053 ubox
14 49 0.096315241 ubox
14 50 0.078701840 ubox
14 52 0.006144743 ubox
15 28 0.019393874 ubox
15 39 0.558135692 ubox
15 42 0.813313334 ubox
15 45 0.009225471 ubox
15 48 0.104212891 ubox
15 49 0.065623211 ubox
15 51 0.006152678 ubox
16 23 0.015855429 ubox
16 27 0.020318746 ubox
16 34 0.007673123 ubox
16 37 0.009714681 ubox
16 38 0.563493143 ubox
16 41 0.742784601 ubox
16 44 0.009346988 ubox
16 47 0.086143007 ubox
17 22 0.015835803 ubox
17 23 0.008443823 ubox
17 26 0.020242549 ubox
17 27 0.025010860 ubox
17 33 0.008515310 ubox
17 34 0.032998122 ubox
17 36 0.010403354 ubox
17 37 0.565537411 ubox
17 38 0.072534968 ubox
17 40 0.659786437 ubox
17 41 0.334187206 ubox
17 46 0.062402217 ubox
17 47 0.094009844 ubox
18 22 0.009543431 ubox
18 26 0.033715804 ubox
18 29 0.532849764 ubox
18 33 0.046377613 ubox
18 36 0.565917363 ubox
18 37 0.101889588 ubox
18 40 0.467215793 ubox
18 44 0.012250353 ubox
18 46 0.110956131 ubox
19 28 0.550369406 ubox
19 39 0.569363994 ubox
19 42 0.007396926 ubox
19 43 0.009212211 ubox
19 45 0.125587306 ubox
20 27 0.550347232 ubox
20 29 0.129999854 ubox
20 38 0.570617934 ubox
20 40 0.009847851 ubox
20 41 0.009011985 ubox
20 44 0.125902812 ubox
21 28 0.129717822 ubox
21 39 0.015302689 ubox
21 43 0.124781955 ubox
21 53 0.005759646 ubox
22 42 0.117808228 ubox
22 52 0.006615234 ubox
23 42 0.003650591 ubox
23 51 0.006732410 ubox
24 50 0.006690509 ubox
25 42 0.003352968 ubox
25 49 0.006646279 ubox
26 42 0.004612129 ubox
26 48 0.006580696 ubox
26 56 0.020440718 ubox
27 39 0.014575717 ubox
27 55 0.022727741 ubox
28 38 0.014219300 ubox
28 40 0.004360658 ubox
28 41 0.003189429 ubox
28 46 0.005444111 ubox
28 54 0.022646592 ubox
29 39 0.004507683 ubox
29 45 0.003509706 ubox
29 53 0.019210313 ubox
30 52 0.011805239 ubox
31 43 0.004339686 ubox
31 53 0.014486597 ubox
32 42 0.004465220 ubox
32 43 0.003958382 ubox
32 52 0.016470243 ubox
32 53 0.037104561 ubox
32 56 0.003240136 ubox
33 42 0.004637353 ubox
33 51 0.017085417 ubox
33 52 0.043296657 ubox
33 55 0.003556000 ubox
34 43 0.003702078 ubox
34 50 0.016839698 ubox
34 51 0.045225107 ubox
35 42 0.004297765 ubox
35 49 0.016747969 ubox
35 50 0.045257360 ubox
36 48 0.016553501 ubox
36 49 0.045123289 ubox
36 52 0.003267363 ubox
36 53 0.003213715 ubox
37 48 0.045091167 ubox
37 49 0.004698961 ubox
37 51 0.003271561 ubox
37 52 0.003634684 ubox
38 48 0.006228298 ubox
38 51 0.003691841 ubox
39 46 0.041339966 ubox
39 47 0.007077040 ubox
40 45 0.033781941 ubox
40 49 0.005438577 ubox
41 48 0.005808827 ubox
42 47 0.005542836 ubox
44 55 0.006161198 ubox
45 54 0.006183388 ubox
46 53 0.006044140 ubox
47 52 0.004279076 ubox
5 52 0.9500000 lbox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
11 46 0.9500000 lbox
12 45 0.9500000 lbox
14 43 0.9500000 lbox
15 42 0.9500000 lbox
16 41 0.9500000 lbox
17 40 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
showpage
end
%%EOF
