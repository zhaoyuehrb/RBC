%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAUAGGAGCGCGCAGGCGCGACGUGCGGCUCGCAGAACGGCGAGUAGCGGAGCGGGACCCGCUGUGAGUGUGGCGGCCGCGCUGGGUUCCUAGCUGGGGAAACGUGAUCCAGGCGAAGCGCCCCAGGAAGGAUUGGGGAUGCUCACCCCAUUUAGAGAAAGAAAUCCACCUCCCCAACCCCAAUCAAGAACCUGCUAUUGUAUAUCAUCAUAGAGCCAGAUUACCUAGGGAAUCAUCAUCCAGGGACGUGCC\
AGAAACCACAAGAAAAC\
) } def
/len { sequence length } bind def

/coor [
[201.58786011 289.80908203]
[187.03109741 293.42855835]
[172.04577637 294.09222412]
[157.22604370 291.77374268]
[143.15943909 286.56503296]
[130.40365601 278.67263794]
[119.46442413 268.40942383]
[110.77545166 256.18234253]
[104.68122864 242.47612000]
[101.42337036 227.83418274]
[101.13118744 212.83531189]
[95.57082367 226.76664734]
[90.01045227 240.69799805]
[84.45008850 254.62933350]
[87.33512878 270.77270508]
[74.62437439 281.13461304]
[59.39356613 275.05560303]
[57.31084824 258.78924561]
[70.51874542 249.06896973]
[76.07910919 235.13763428]
[81.63948059 221.20628357]
[87.19984436 207.27493286]
[85.57085419 203.30804443]
[85.55670929 198.58529663]
[87.46573639 193.79116821]
[91.31268311 189.72160339]
[92.51967621 174.77023315]
[93.72667694 159.81887817]
[94.93367767 144.86752319]
[96.14067078 129.91616821]
[82.93993378 122.79293823]
[71.10561371 132.00970459]
[59.27129745 141.22648621]
[47.43697739 150.44326782]
[35.60266113 159.66003418]
[23.76834488 168.87681580]
[22.06718254 184.58927917]
[9.70168591 194.43153381]
[-5.99191666 192.56434631]
[-15.70288849 180.09547424]
[-13.66988182 164.42250061]
[-1.09904420 154.84390259]
[14.55156994 157.04249573]
[26.38588715 147.82571411]
[38.22020340 138.60894775]
[50.05451965 129.39216614]
[61.88883972 120.17539215]
[73.72315216 110.95861816]
[70.62539673 104.12825012]
[64.42987823 90.46752167]
[61.33211899 83.63716125]
[46.60170364 86.46822357]
[34.50987625 96.67107391]
[20.55102348 91.47494507]
[5.82061005 94.30601501]
[-8.90980339 97.13707733]
[-23.64021683 99.96813965]
[-38.37062836 102.79920197]
[-52.78392410 111.72631836]
[-65.35215759 100.34757233]
[-57.89733124 85.12055969]
[-41.20169449 88.06878662]
[-26.47128105 85.23772430]
[-11.74086666 82.40666199]
[2.98954630 79.57559967]
[17.71995926 76.74453735]
[28.75817108 66.74417877]
[43.77064133 71.73780823]
[58.50105286 68.90674591]
[58.75996399 53.90897751]
[44.13604355 50.57116699]
[29.51212692 47.23335266]
[14.88820744 43.89553833]
[0.26428908 40.55772400]
[-14.35962963 37.21990967]
[-28.98354912 33.88209534]
[-45.77099609 36.25230026]
[-52.69580460 20.77705193]
[-39.74230957 9.83889294]
[-25.64573479 19.25817680]
[-11.02181530 22.59599113]
[3.60210299 25.93380547]
[18.22602272 29.27161789]
[32.84994125 32.60943222]
[47.47385788 35.94724655]
[62.09777832 39.28506088]
[74.34366608 30.62259674]
[76.06600952 15.72180748]
[77.78835297 0.82101786]
[79.51068878 -14.07977200]
[81.23303223 -28.98056221]
[82.95537567 -43.88135147]
[79.78606415 -58.54271317]
[72.06296539 -71.40170288]
[56.99127960 -75.33643341]
[49.34213257 -88.48729706]
[53.18618011 -102.83159637]
[45.46307373 -115.69058990]
[37.73997116 -128.54957581]
[30.01686478 -141.40856934]
[22.29376030 -154.26756287]
[14.57065487 -167.12655640]
[-3.56020284 -168.19035339]
[-17.28377342 -179.84445190]
[-21.20172501 -197.25559998]
[-13.92293453 -213.37739563]
[-21.93992233 -226.05525208]
[-29.95690918 -238.73309326]
[-45.47695541 -240.64678955]
[-56.09801483 -252.12403870]
[-56.80514908 -267.74563599]
[-47.26446915 -280.13552856]
[-31.98079681 -283.44360352]
[-18.17061043 -276.10787964]
[-12.35466003 -261.59207153]
[-17.27905846 -246.75009155]
[-9.26207066 -234.07223511]
[-1.24508309 -221.39437866]
[10.80972385 -222.41914368]
[22.22897339 -218.20993042]
[30.83603096 -209.50395203]
[34.96278381 -197.90161133]
[33.77271271 -185.57247925]
[27.42964554 -174.84965515]
[35.15275192 -161.99066162]
[42.87585449 -149.13166809]
[50.59896088 -136.27268982]
[58.32206726 -123.41368866]
[66.04517365 -110.55470276]
[80.51382446 -107.20899963]
[88.52932739 -94.27817535]
[84.92195129 -79.12480927]
[92.64505768 -66.26581573]
[107.64406586 -66.09320831]
[115.66104889 -78.77105713]
[123.67803955 -91.44890594]
[131.69502258 -104.12676239]
[139.71202087 -116.80461121]
[147.72900391 -129.48246765]
[155.74598694 -142.16030884]
[163.76296997 -154.83816528]
[164.59921265 -170.63725281]
[177.94099426 -177.25889587]
[185.95797729 -189.93675232]
[192.69853210 -203.33692932]
[198.09822083 -217.33134460]
[203.49789429 -231.32574463]
[193.79054260 -243.22796631]
[191.35067749 -258.39181519]
[196.83460999 -272.73831177]
[208.76719666 -282.40832520]
[223.93862915 -284.80065918]
[238.26786804 -279.27175903]
[247.90042114 -267.30892944]
[250.24517822 -252.13008118]
[244.67141724 -237.81823730]
[232.67843628 -228.22322083]
[217.49230957 -225.92605591]
[212.09262085 -211.93165588]
[206.69293213 -197.93724060]
[217.71826172 -208.10789490]
[231.42799377 -214.19421387]
[246.36660767 -215.54998779]
[260.94805908 -212.03131104]
[273.62426758 -204.01173401]
[283.04943848 -192.34268188]
[288.22286987 -178.26307678]
[288.59530640 -163.26770020]
[284.12725830 -148.94860840]
[275.29306030 -136.82603455]
[263.03060913 -128.18701172]
[248.64183044 -123.94876099]
[233.65434265 -124.56122589]
[219.65934753 -129.95939636]
[208.14268494 -139.57014465]
[200.32705688 -152.37310791]
[197.04225159 -167.00903320]
[198.63583374 -181.91975403]
[190.61883545 -169.24191284]
[190.35603333 -154.34962463]
[176.44082642 -146.82118225]
[168.42384338 -134.14332581]
[160.40686035 -121.46547699]
[152.38986206 -108.78762054]
[144.37287903 -96.10977173]
[136.35589600 -83.43192291]
[128.33889771 -70.75406647]
[120.32191467 -58.07621765]
[114.56444550 -48.60797501]
[106.35753632 -43.22542191]
[97.85616302 -42.15900803]
[96.13382721 -27.25821877]
[94.41148376 -12.35742950]
[92.68914032 2.54336047]
[90.96679688 17.44415092]
[89.24445343 32.34494019]
[162.54330444 66.96660614]
[177.50135803 68.08755493]
[192.45942688 69.20850372]
[201.21351624 66.73567963]
[207.58283997 70.42938995]
[222.52700806 71.72239685]
[237.47116089 73.01540375]
[252.41532898 74.30841064]
[262.48211670 62.49995804]
[277.57501221 58.89656448]
[291.89047241 64.88380432]
[299.92391968 78.15946960]
[298.58633423 93.61878204]
[288.39205933 105.31733704]
[273.26098633 108.75679016]
[259.01129150 102.61460876]
[251.12232971 89.25257874]
[236.17816162 87.95957184]
[221.23399353 86.66656494]
[206.28982544 85.37355804]
[191.33847046 84.16656494]
[176.38041687 83.04560852]
[161.42234802 81.92465973]
[158.40339661 88.79022217]
[172.13452148 94.82812500]
[187.05938721 96.32756042]
[190.24520874 110.98533630]
[177.28919983 118.54457092]
[166.09661865 108.55924988]
[152.36549377 102.52133942]
[149.34654236 109.38690186]
[160.28343201 119.65258789]
[171.22032166 129.91827393]
[184.08909607 130.28532410]
[192.98439026 139.02983093]
[193.53387451 151.09069824]
[204.35191345 161.48156738]
[215.16993713 171.87243652]
[230.69697571 170.01632690]
[243.75608826 178.61827087]
[248.18116760 193.61669922]
[241.88282776 207.92979431]
[227.83494568 214.79937744]
[212.67050171 210.98181152]
[203.54969788 198.27964783]
[204.77908325 182.69046021]
[193.96104431 172.29960632]
[183.14300537 161.90873718]
[165.89028931 158.61320496]
[160.95463562 140.85517883]
[150.01774597 130.58947754]
[139.08084106 120.32379150]
[132.08364868 123.02363586]
[111.09203339 131.12315369]
[109.88503265 146.07452393]
[108.67803955 161.02587891]
[107.47103882 175.97723389]
[106.26403809 190.92860413]
[113.18771362 177.62210083]
[122.61048889 165.95114136]
[134.15879822 156.37844849]
[147.37478638 149.28353882]
[161.73446655 144.94769287]
[176.66853333 143.54283142]
[191.58489990 145.12463379]
[205.89216614 149.63041687]
[219.02310181 156.88150024]
[230.45712280 166.59043884]
[239.74087524 178.37228394]
[246.50630188 191.75991821]
[250.48518372 206.22257996]
[251.51976013 221.18685913]
[249.56901550 236.05947876]
[244.71029663 250.25076294]
[237.13623047 263.19808960]
[227.14709473 274.38815308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 22]
[12 21]
[13 20]
[14 19]
[26 254]
[27 253]
[28 252]
[29 251]
[30 250]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[51 69]
[52 68]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[87 196]
[88 195]
[89 194]
[90 193]
[91 192]
[92 191]
[93 133]
[94 132]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[102 124]
[106 118]
[107 117]
[108 116]
[134 188]
[135 187]
[136 186]
[137 185]
[138 184]
[139 183]
[140 182]
[141 181]
[143 179]
[144 178]
[145 160]
[146 159]
[147 158]
[197 219]
[198 218]
[199 217]
[201 216]
[202 215]
[203 214]
[204 213]
[227 248]
[228 247]
[229 246]
[232 244]
[233 243]
[234 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
