%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KCNK9)
} def

/sequence { (\
GUGGGACGCGCGCGGCUGUGAGCCUGCGGGACAUGCCCCCCGCGCCGGCUCCUUGCUGGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.151515629 ubox
1 9 0.125741866 ubox
1 11 0.183415682 ubox
1 13 0.086270640 ubox
1 27 0.032775852 ubox
1 34 0.008932717 ubox
1 36 0.004929314 ubox
1 43 0.473556937 ubox
1 63 0.042943905 ubox
2 6 0.136641481 ubox
2 8 0.127068555 ubox
2 10 0.183683556 ubox
2 12 0.086284511 ubox
2 26 0.032839371 ubox
2 33 0.009318574 ubox
2 35 0.004907501 ubox
2 42 0.486224489 ubox
2 62 0.042648281 ubox
3 7 0.124522508 ubox
3 9 0.184611119 ubox
3 11 0.086337163 ubox
3 24 0.037794577 ubox
3 25 0.036222215 ubox
3 32 0.009443482 ubox
3 34 0.004449986 ubox
3 37 0.005519103 ubox
3 38 0.056170403 ubox
3 39 0.041311739 ubox
3 40 0.045116439 ubox
3 41 0.506501457 ubox
3 64 0.150874036 ubox
4 23 0.037851089 ubox
4 24 0.036715700 ubox
4 25 0.004495366 ubox
4 36 0.005539241 ubox
4 37 0.056440536 ubox
4 38 0.041449479 ubox
4 39 0.046911434 ubox
4 40 0.506379379 ubox
4 41 0.014039348 ubox
4 46 0.006213787 ubox
4 63 0.150425795 ubox
4 64 0.374837781 ubox
5 23 0.036064321 ubox
5 24 0.004744936 ubox
5 36 0.056499387 ubox
5 37 0.041318760 ubox
5 38 0.048208074 ubox
5 39 0.503972574 ubox
5 40 0.014154978 ubox
5 45 0.006214448 ubox
5 63 0.376764201 ubox
6 19 0.015847825 ubox
7 14 0.004769687 ubox
7 18 0.016173440 ubox
7 20 0.048575039 ubox
7 26 0.004071985 ubox
7 28 0.064642123 ubox
7 35 0.063818816 ubox
7 44 0.006332152 ubox
7 61 0.223732172 ubox
8 13 0.006993602 ubox
8 16 0.018195777 ubox
8 17 0.007332070 ubox
8 19 0.048803268 ubox
8 23 0.028738043 ubox
8 25 0.003391385 ubox
8 27 0.098696174 ubox
8 34 0.060881878 ubox
8 36 0.298647034 ubox
8 43 0.007673350 ubox
8 45 0.003249424 ubox
8 60 0.224394837 ubox
8 63 0.535519971 ubox
9 15 0.018466816 ubox
9 18 0.048835687 ubox
9 20 0.019391270 ubox
9 22 0.029367160 ubox
9 26 0.098706836 ubox
9 28 0.227873323 ubox
9 35 0.298791372 ubox
9 42 0.007775888 ubox
9 44 0.003369138 ubox
9 58 0.003439169 ubox
9 59 0.223921943 ubox
9 61 0.622312370 ubox
9 62 0.471459963 ubox
10 16 0.035924333 ubox
10 17 0.026287029 ubox
10 19 0.020118993 ubox
10 23 0.009032996 ubox
10 25 0.094826498 ubox
10 27 0.374322319 ubox
10 34 0.291616766 ubox
10 36 0.006217883 ubox
10 41 0.006493761 ubox
10 43 0.004913116 ubox
10 56 0.006202907 ubox
10 57 0.004096573 ubox
10 60 0.684491184 ubox
10 63 0.072968295 ubox
11 15 0.036452075 ubox
11 18 0.020151382 ubox
11 20 0.033522327 ubox
11 22 0.009095089 ubox
11 26 0.374610898 ubox
11 28 0.315169673 ubox
11 35 0.005925099 ubox
11 42 0.005026457 ubox
11 55 0.006234650 ubox
11 58 0.050397126 ubox
11 59 0.684424588 ubox
11 61 0.394758839 ubox
11 62 0.059938388 ubox
12 17 0.013671970 ubox
12 19 0.034200248 ubox
12 23 0.059330132 ubox
12 25 0.367695599 ubox
12 27 0.341854102 ubox
12 34 0.003720480 ubox
12 41 0.004609387 ubox
12 43 0.003351037 ubox
12 54 0.005964408 ubox
12 56 0.091146912 ubox
12 57 0.022600887 ubox
12 60 0.399696437 ubox
12 63 0.134742998 ubox
13 18 0.034208294 ubox
13 20 0.009503018 ubox
13 22 0.059357496 ubox
13 26 0.341825419 ubox
13 42 0.003380211 ubox
13 55 0.091222774 ubox
13 58 0.762069973 ubox
13 59 0.299109258 ubox
13 61 0.020475491 ubox
13 62 0.134835743 ubox
14 19 0.008645725 ubox
14 24 0.529241777 ubox
14 25 0.084434939 ubox
14 37 0.011392785 ubox
14 52 0.006356862 ubox
14 53 0.024607177 ubox
14 54 0.085337189 ubox
14 57 0.810601290 ubox
14 60 0.003943042 ubox
14 64 0.101999690 ubox
15 23 0.532417277 ubox
15 24 0.063569771 ubox
15 36 0.011493803 ubox
15 51 0.005265168 ubox
15 52 0.034873107 ubox
15 53 0.069939528 ubox
15 56 0.823540901 ubox
15 60 0.080454737 ubox
15 63 0.102753606 ubox
16 22 0.535168724 ubox
16 29 0.009580257 ubox
16 35 0.011475934 ubox
16 55 0.823136908 ubox
16 59 0.080499954 ubox
16 62 0.102754462 ubox
17 21 0.482126060 ubox
17 28 0.009595023 ubox
17 33 0.006968664 ubox
17 55 0.008919126 ubox
17 58 0.075644449 ubox
17 61 0.102328611 ubox
18 27 0.009953536 ubox
18 32 0.007125997 ubox
18 34 0.008691311 ubox
18 54 0.062271163 ubox
18 56 0.076908205 ubox
18 57 0.016515336 ubox
18 60 0.099207512 ubox
19 26 0.009786109 ubox
19 31 0.007032408 ubox
19 33 0.009243948 ubox
19 55 0.076443204 ubox
19 58 0.005246553 ubox
19 59 0.097889598 ubox
20 25 0.006162587 ubox
20 32 0.009248027 ubox
20 51 0.836544993 ubox
20 54 0.007750899 ubox
21 50 0.838112044 ubox
21 53 0.005145894 ubox
21 57 0.010882861 ubox
22 45 0.004463302 ubox
22 49 0.838379653 ubox
22 56 0.009955866 ubox
22 63 0.033346046 ubox
23 29 0.006502582 ubox
23 30 0.010437583 ubox
23 44 0.004443995 ubox
23 48 0.838382639 ubox
23 55 0.009658610 ubox
23 62 0.033432477 ubox
24 28 0.006461036 ubox
24 29 0.010466658 ubox
24 47 0.836129211 ubox
24 48 0.004928634 ubox
24 61 0.033398312 ubox
25 42 0.008681265 ubox
25 44 0.678165398 ubox
25 47 0.005160345 ubox
26 36 0.004811755 ubox
26 41 0.012310650 ubox
26 43 0.850589897 ubox
26 45 0.066107266 ubox
26 46 0.005250807 ubox
26 63 0.004661152 ubox
27 35 0.004831398 ubox
27 42 0.852082190 ubox
27 44 0.064644007 ubox
27 62 0.004623853 ubox
28 34 0.005011254 ubox
28 37 0.058953042 ubox
28 38 0.319419850 ubox
28 39 0.058114885 ubox
28 40 0.039377219 ubox
28 41 0.853589122 ubox
28 43 0.050827512 ubox
29 36 0.063957432 ubox
29 37 0.346644494 ubox
29 38 0.207515546 ubox
29 39 0.048728603 ubox
29 40 0.853329392 ubox
29 41 0.047164144 ubox
30 36 0.346151847 ubox
30 37 0.207609539 ubox
30 38 0.055717658 ubox
30 39 0.852521059 ubox
30 40 0.046926361 ubox
35 63 0.004666659 ubox
36 62 0.004671255 ubox
37 61 0.004199636 ubox
39 62 0.004733031 ubox
40 61 0.004323172 ubox
40 62 0.010175630 ubox
41 61 0.009547978 ubox
42 60 0.005316740 ubox
42 63 0.110448563 ubox
43 59 0.003971641 ubox
43 61 0.200867395 ubox
43 62 0.078473708 ubox
44 60 0.543670969 ubox
44 63 0.018421992 ubox
45 59 0.544370831 ubox
45 62 0.018386108 ubox
46 58 0.544499114 ubox
46 61 0.018289731 ubox
47 57 0.544136630 ubox
47 60 0.016362105 ubox
47 64 0.011742117 ubox
48 56 0.544650814 ubox
48 60 0.005828843 ubox
48 63 0.011840244 ubox
49 55 0.544523880 ubox
49 59 0.008171323 ubox
49 62 0.011839709 ubox
50 58 0.007318611 ubox
50 61 0.011603135 ubox
51 59 0.014942765 ubox
52 58 0.019945013 ubox
52 59 0.005994424 ubox
53 58 0.006317199 ubox
9 61 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
13 58 0.9500000 lbox
14 57 0.9500000 lbox
15 56 0.9500000 lbox
16 55 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
showpage
end
%%EOF
