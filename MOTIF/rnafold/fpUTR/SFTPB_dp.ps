%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SFTPB)
} def

/sequence { (\
UGUAAAUGCUCUUCUGACUAAUGCAAACCAUGUGUCCAUAGAACCAGAAGAUUUUUCCAGGGGAAAAGAGCCCCCACGCCCCGCCCAGCUAUAAGGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.014143888 ubox
1 59 0.451663241 ubox
1 76 0.019410805 ubox
1 78 0.007818695 ubox
2 7 0.013339358 ubox
2 9 0.219517630 ubox
2 52 0.008695674 ubox
2 58 0.500282416 ubox
2 71 0.004841160 ubox
2 75 0.021713559 ubox
2 77 0.109759375 ubox
2 79 0.003387314 ubox
2 99 0.003225684 ubox
3 8 0.210792280 ubox
3 51 0.006612686 ubox
3 70 0.004747015 ubox
3 76 0.104768992 ubox
3 78 0.003313190 ubox
4 53 0.029524992 ubox
4 54 0.119856754 ubox
4 55 0.211510436 ubox
4 56 0.417584537 ubox
5 52 0.033307471 ubox
5 53 0.133046554 ubox
5 54 0.225727045 ubox
5 55 0.449548004 ubox
5 56 0.172586437 ubox
6 52 0.134247780 ubox
6 53 0.224087499 ubox
6 54 0.427765013 ubox
6 55 0.185657037 ubox
7 46 0.016149281 ubox
7 51 0.073492744 ubox
7 59 0.036824281 ubox
7 76 0.015106027 ubox
8 45 0.017752499 ubox
8 58 0.040742931 ubox
8 71 0.041597259 ubox
8 75 0.016399403 ubox
8 77 0.030201069 ubox
8 79 0.015332199 ubox
8 99 0.006025553 ubox
9 47 0.010594308 ubox
9 50 0.038114812 ubox
9 70 0.041673813 ubox
9 78 0.015463797 ubox
9 98 0.005595267 ubox
10 42 0.036461682 ubox
10 46 0.010138981 ubox
10 48 0.046552532 ubox
10 49 0.029605147 ubox
10 51 0.941696787 ubox
10 69 0.036235061 ubox
11 41 0.038182692 ubox
11 47 0.050738479 ubox
11 50 0.996377703 ubox
11 68 0.029691415 ubox
12 40 0.037739867 ubox
12 43 0.033721235 ubox
12 46 0.043907885 ubox
12 49 0.996450712 ubox
12 67 0.018985613 ubox
13 42 0.057323148 ubox
13 48 0.997088455 ubox
13 64 0.003786966 ubox
13 66 0.009142363 ubox
14 41 0.057873566 ubox
14 47 0.997467739 ubox
14 63 0.004145664 ubox
15 38 0.014287172 ubox
15 40 0.056972211 ubox
15 46 0.996839715 ubox
15 62 0.003706927 ubox
16 36 0.175136656 ubox
16 37 0.013573492 ubox
16 39 0.018334469 ubox
16 45 0.982881503 ubox
17 33 0.017185533 ubox
17 35 0.216584454 ubox
18 32 0.017387134 ubox
18 34 0.217600638 ubox
18 41 0.961067749 ubox
19 32 0.009789071 ubox
19 34 0.003900408 ubox
19 40 0.960299955 ubox
20 31 0.007944199 ubox
20 33 0.007152158 ubox
20 39 0.908617676 ubox
21 31 0.220829649 ubox
21 33 0.010238033 ubox
21 35 0.801047267 ubox
21 39 0.285777056 ubox
22 30 0.221729752 ubox
22 32 0.009935458 ubox
22 34 0.806893741 ubox
22 38 0.388971893 ubox
22 40 0.020774040 ubox
23 29 0.220755891 ubox
23 31 0.006825201 ubox
23 33 0.821396284 ubox
23 35 0.320248609 ubox
23 37 0.383194013 ubox
23 39 0.017190852 ubox
24 32 0.825917956 ubox
24 34 0.341085282 ubox
25 31 0.772671021 ubox
25 33 0.321059948 ubox
27 33 0.318665726 ubox
27 35 0.162325411 ubox
28 32 0.318602522 ubox
28 34 0.163675357 ubox
30 39 0.019322746 ubox
31 38 0.027815701 ubox
31 40 0.006848497 ubox
32 37 0.028230228 ubox
32 39 0.007624618 ubox
32 44 0.018810653 ubox
33 38 0.007537684 ubox
33 43 0.018727370 ubox
34 44 0.018273868 ubox
35 42 0.033348159 ubox
35 43 0.015211104 ubox
36 41 0.042019220 ubox
44 61 0.005775409 ubox
44 62 0.005740998 ubox
44 63 0.003544469 ubox
45 60 0.005792166 ubox
45 61 0.005754947 ubox
45 62 0.003555358 ubox
46 56 0.003755233 ubox
47 54 0.003570036 ubox
47 55 0.004596322 ubox
47 56 0.004512275 ubox
47 57 0.023859954 ubox
48 53 0.003411507 ubox
48 54 0.004647199 ubox
48 55 0.004836616 ubox
48 56 0.023842743 ubox
49 53 0.003590471 ubox
49 54 0.004374270 ubox
49 55 0.022956541 ubox
50 54 0.015602048 ubox
50 57 0.021212495 ubox
51 55 0.003239918 ubox
51 56 0.022967888 ubox
52 66 0.003574187 ubox
52 67 0.008711705 ubox
52 68 0.042148391 ubox
52 69 0.008666543 ubox
53 59 0.013277770 ubox
53 65 0.004134715 ubox
53 66 0.010093839 ubox
53 67 0.065136777 ubox
53 68 0.008554649 ubox
54 59 0.014487408 ubox
54 64 0.004214548 ubox
54 65 0.010209155 ubox
54 66 0.070783452 ubox
54 67 0.007596462 ubox
55 59 0.010602595 ubox
55 63 0.004212949 ubox
55 64 0.010022160 ubox
55 65 0.072446712 ubox
55 66 0.006247094 ubox
56 62 0.004177645 ubox
56 63 0.009726069 ubox
56 64 0.073074728 ubox
56 65 0.004474473 ubox
57 61 0.004057754 ubox
57 62 0.009591743 ubox
57 63 0.073315803 ubox
58 62 0.072783487 ubox
60 73 0.075180514 ubox
60 74 0.351697652 ubox
60 75 0.928264491 ubox
60 82 0.010313541 ubox
61 72 0.075432907 ubox
61 73 0.353330891 ubox
61 74 0.928927712 ubox
61 75 0.028671215 ubox
61 81 0.010325655 ubox
62 71 0.075498684 ubox
62 72 0.354136202 ubox
62 73 0.928621691 ubox
62 74 0.028613402 ubox
62 80 0.010324957 ubox
63 71 0.354356892 ubox
63 72 0.927886726 ubox
63 73 0.028471141 ubox
63 79 0.010272132 ubox
70 99 0.038333792 ubox
71 98 0.038395131 ubox
72 97 0.038366695 ubox
73 96 0.038336425 ubox
74 95 0.038240309 ubox
74 96 0.003250756 ubox
75 95 0.003576143 ubox
78 82 0.003398406 ubox
78 89 0.036258293 ubox
78 99 0.996024006 ubox
79 88 0.036293900 ubox
79 98 0.998043172 ubox
80 97 0.998050846 ubox
80 98 0.004609198 ubox
81 96 0.998029974 ubox
81 97 0.005574351 ubox
82 95 0.997795924 ubox
82 96 0.006349893 ubox
83 89 0.264870245 ubox
83 99 0.047252341 ubox
84 88 0.263031386 ubox
84 97 0.011679102 ubox
84 98 0.047127881 ubox
85 95 0.003287874 ubox
85 96 0.013542779 ubox
85 97 0.046904349 ubox
86 95 0.015143782 ubox
86 96 0.046604593 ubox
89 95 0.013874938 ubox
90 94 0.013995628 ubox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
15 46 0.9500000 lbox
16 45 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 35 0.9500000 lbox
22 34 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
60 75 0.9500000 lbox
61 74 0.9500000 lbox
62 73 0.9500000 lbox
63 72 0.9500000 lbox
78 99 0.9500000 lbox
79 98 0.9500000 lbox
80 97 0.9500000 lbox
81 96 0.9500000 lbox
82 95 0.9500000 lbox
showpage
end
%%EOF
