%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SYF2)
} def

/sequence { (\
GGUUGACGGAAGUGCUCUAUCUUGUUGCCGGAAGUGGGAAGAGAGAAAGGUUGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.150374294 ubox
1 17 0.036934062 ubox
1 18 0.088978038 ubox
1 21 0.030748292 ubox
1 29 0.028956462 ubox
1 52 0.006474506 ubox
2 13 0.019915076 ubox
2 15 0.206652772 ubox
2 16 0.024212917 ubox
2 17 0.094298032 ubox
2 20 0.031931996 ubox
2 28 0.028978663 ubox
2 35 0.003402201 ubox
2 51 0.005166456 ubox
2 54 0.008595093 ubox
3 9 0.012083090 ubox
3 10 0.053785035 ubox
3 11 0.049447786 ubox
3 12 0.045479107 ubox
3 14 0.200853809 ubox
3 19 0.031774028 ubox
3 27 0.023488097 ubox
3 34 0.008287334 ubox
3 47 0.003423431 ubox
3 48 0.004524326 ubox
3 49 0.003788438 ubox
3 50 0.003496032 ubox
3 53 0.006605284 ubox
4 8 0.011401456 ubox
4 9 0.057364488 ubox
4 10 0.057040215 ubox
4 11 0.059686409 ubox
4 14 0.031027937 ubox
4 19 0.007137976 ubox
4 27 0.016689974 ubox
4 33 0.010585811 ubox
4 46 0.003503433 ubox
4 47 0.004944478 ubox
4 48 0.004340386 ubox
4 49 0.003512911 ubox
4 53 0.087747834 ubox
4 55 0.029629961 ubox
5 13 0.023945418 ubox
5 17 0.050868487 ubox
5 18 0.004902629 ubox
5 21 0.034037410 ubox
5 26 0.024581414 ubox
5 52 0.157572839 ubox
5 54 0.028355988 ubox
6 13 0.439874727 ubox
6 16 0.050659766 ubox
6 20 0.033978620 ubox
6 25 0.028359560 ubox
6 51 0.163174274 ubox
6 54 0.570994453 ubox
7 12 0.453169344 ubox
7 14 0.101150838 ubox
7 24 0.028499897 ubox
7 30 0.013208665 ubox
7 50 0.163510672 ubox
7 53 0.586645436 ubox
7 55 0.261272677 ubox
8 13 0.091799924 ubox
8 16 0.040732737 ubox
8 17 0.022280366 ubox
8 18 0.075701822 ubox
8 21 0.008791504 ubox
8 22 0.021567417 ubox
8 23 0.020972145 ubox
8 29 0.013257162 ubox
8 52 0.577351568 ubox
8 54 0.268855436 ubox
9 15 0.047870511 ubox
9 16 0.019159909 ubox
9 17 0.079352522 ubox
9 20 0.008624667 ubox
9 21 0.028728036 ubox
9 22 0.009304128 ubox
9 28 0.013246438 ubox
9 51 0.522074819 ubox
9 52 0.056118822 ubox
10 16 0.077090685 ubox
10 20 0.028426368 ubox
10 23 0.007847368 ubox
10 51 0.067601592 ubox
10 52 0.258909723 ubox
11 18 0.042723191 ubox
11 22 0.010115136 ubox
11 51 0.238001589 ubox
11 52 0.045313535 ubox
12 17 0.043709301 ubox
12 20 0.004529972 ubox
12 21 0.010633915 ubox
12 51 0.039040916 ubox
12 54 0.036826336 ubox
13 19 0.005561725 ubox
13 50 0.035169989 ubox
13 53 0.048476231 ubox
13 55 0.081582968 ubox
14 18 0.004837420 ubox
14 25 0.012502254 ubox
14 51 0.474017917 ubox
14 52 0.084638166 ubox
14 54 0.220589001 ubox
15 24 0.012648904 ubox
15 41 0.005307831 ubox
15 43 0.121360443 ubox
15 45 0.541970742 ubox
15 49 0.152661378 ubox
15 50 0.498682118 ubox
15 53 0.226094848 ubox
16 38 0.003891148 ubox
16 39 0.005315959 ubox
16 40 0.003893292 ubox
16 42 0.121535426 ubox
16 44 0.542062401 ubox
16 46 0.303611089 ubox
16 48 0.147140129 ubox
16 49 0.223425874 ubox
16 50 0.413202743 ubox
17 37 0.005405810 ubox
17 38 0.006488804 ubox
17 41 0.121551173 ubox
17 43 0.540513753 ubox
17 45 0.317994828 ubox
17 49 0.682523183 ubox
17 50 0.072864139 ubox
18 36 0.005681205 ubox
18 37 0.006436811 ubox
18 40 0.118989062 ubox
18 42 0.371576377 ubox
18 44 0.284455117 ubox
18 48 0.673325348 ubox
18 49 0.069276418 ubox
18 53 0.005080236 ubox
19 35 0.006151840 ubox
19 51 0.016027968 ubox
19 52 0.005565504 ubox
20 37 0.010370345 ubox
20 38 0.044584424 ubox
20 39 0.243170221 ubox
20 42 0.472516504 ubox
20 44 0.288093528 ubox
20 46 0.697054064 ubox
20 50 0.016650949 ubox
21 34 0.017614840 ubox
21 36 0.010377659 ubox
21 37 0.047109964 ubox
21 38 0.245006004 ubox
21 41 0.571420795 ubox
21 43 0.296412296 ubox
21 45 0.707116643 ubox
21 49 0.017156390 ubox
22 33 0.018020162 ubox
22 34 0.003181425 ubox
22 36 0.045595754 ubox
22 37 0.241416319 ubox
22 38 0.005708412 ubox
22 39 0.011362704 ubox
22 40 0.568874322 ubox
22 41 0.024442494 ubox
22 42 0.288186848 ubox
22 43 0.212424082 ubox
22 44 0.674926791 ubox
22 45 0.004933932 ubox
22 48 0.015920771 ubox
23 30 0.006989130 ubox
23 31 0.003405578 ubox
23 32 0.018943133 ubox
23 33 0.005565990 ubox
23 36 0.232574677 ubox
23 37 0.005609358 ubox
23 38 0.012787888 ubox
23 39 0.554796316 ubox
23 40 0.023365458 ubox
23 41 0.268623704 ubox
23 42 0.349062028 ubox
23 43 0.614697419 ubox
23 44 0.011435677 ubox
23 47 0.008092924 ubox
24 29 0.007917287 ubox
24 35 0.176751163 ubox
25 31 0.006058602 ubox
25 32 0.042888530 ubox
25 33 0.097947825 ubox
25 34 0.192881118 ubox
25 37 0.547864781 ubox
25 38 0.020310871 ubox
25 39 0.055058581 ubox
25 40 0.678526248 ubox
25 41 0.097914921 ubox
25 42 0.029211015 ubox
26 30 0.004871103 ubox
26 31 0.043799975 ubox
26 32 0.098953152 ubox
26 33 0.201671702 ubox
26 36 0.542441627 ubox
26 37 0.005984408 ubox
26 38 0.054630836 ubox
26 39 0.724156282 ubox
26 40 0.103869885 ubox
26 41 0.029934270 ubox
27 35 0.552572867 ubox
27 51 0.003915942 ubox
28 34 0.553214495 ubox
28 37 0.770913408 ubox
28 38 0.192419126 ubox
28 50 0.004164489 ubox
29 36 0.771230844 ubox
29 37 0.192040492 ubox
29 49 0.004166314 ubox
30 35 0.683699703 ubox
42 51 0.003298313 ubox
43 52 0.004902849 ubox
44 51 0.005883056 ubox
44 52 0.003855696 ubox
45 51 0.003916275 ubox
45 52 0.005904767 ubox
46 51 0.006267969 ubox
46 52 0.008203528 ubox
47 51 0.006938049 ubox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
showpage
end
%%EOF
