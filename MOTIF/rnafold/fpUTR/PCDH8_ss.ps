%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUCUGUAAGAGACGGAGAGGCGCAGAGUGAGGGCGGGUCCGCGCGUCCUCAGAGCCCGCUGGAGGCUCGGAGCUGCUACCCGCAGACUUCUCCCGCACAGGGCUCGCAAAGAGCGUGAUUCCGAGAGCCUGAGACUGACGCCCGACCUGGAAACCAGAGAAGACUUCCUUAGCCUUUCGGAUCGCACUUGAGGCUGGAGGC\
) } def
/len { sequence length } bind def

/coor [
[96.13804626 132.88571167]
[100.35280609 118.49248505]
[94.53300476 132.31745911]
[88.71321106 146.14244080]
[82.89341736 159.96740723]
[77.07361603 173.79238892]
[71.25382233 187.61737061]
[81.03401947 199.39048767]
[84.21137238 214.36254883]
[80.05574799 229.09310913]
[69.52207184 240.19718933]
[55.03091431 245.12312317]
[39.91223145 242.73899841]
[27.64019012 233.59265137]
[21.03481102 219.78585815]
[21.61396599 204.49131775]
[29.24456787 191.22358704]
[42.17315674 183.03150940]
[57.42884445 181.79756165]
[63.24864197 167.97259521]
[69.06843567 154.14761353]
[74.88823700 140.32263184]
[80.70803070 126.49766541]
[86.52782440 112.67268372]
[81.58093262 107.03546906]
[70.30649567 116.92925262]
[59.03190231 126.82286835]
[49.13846588 115.54811859]
[60.41270828 105.65481567]
[71.68714905 95.76102448]
[66.74025726 90.12380981]
[52.27645111 94.09853363]
[37.81264877 98.07324982]
[23.34884644 102.04797363]
[8.88504410 106.02269745]
[-5.57875872 109.99742126]
[-20.04256058 113.97214508]
[-34.50636292 117.94686890]
[-39.84833908 132.51542664]
[-52.75200272 141.13372803]
[-68.25563049 140.48785400]
[-80.39775848 130.82617188]
[-84.50949860 115.86376953]
[-79.00979614 101.35401917]
[-66.01340485 92.87620544]
[-50.51769257 93.69022369]
[-38.48108673 103.48306274]
[-24.01728439 99.50833893]
[-9.55348110 95.53361511]
[4.91032124 91.55889893]
[19.37412453 87.58417511]
[33.83792496 83.60945129]
[48.30172729 79.63472748]
[62.76552963 75.66000366]
[67.61885834 61.46686554]
[58.61714935 49.46814346]
[49.61544037 37.46942520]
[40.61373520 25.47070694]
[31.61202621 13.47198677]
[22.61031914 1.47326720]
[7.21446514 -0.89431053]
[-1.74361956 -13.19095135]
[0.60838342 -27.85395432]
[-8.39332390 -39.85267258]
[-23.78917885 -42.22025299]
[-32.74726105 -54.51689148]
[-30.39525986 -69.17989349]
[-39.39696503 -81.17861176]
[-50.24159622 -82.09140015]
[-58.61948013 -88.68820953]
[-61.91174316 -98.59941864]
[-59.25966644 -108.47354126]
[-67.88945007 -120.74248505]
[-76.51922607 -133.01142883]
[-85.14900970 -145.28036499]
[-93.87254333 -157.48281860]
[-102.68932343 -169.61807251]
[-111.50610352 -181.75332642]
[-120.32287598 -193.88858032]
[-135.87971497 -197.80833435]
[-142.38319397 -212.47409058]
[-134.84442139 -226.63552856]
[-119.04647827 -229.42921448]
[-107.10820770 -218.71206665]
[-108.18762207 -202.70536804]
[-99.37084198 -190.57011414]
[-90.55406952 -178.43486023]
[-81.73728943 -166.29959106]
[-75.25936127 -162.73429871]
[-72.88006592 -153.91014099]
[-64.25028992 -141.64120483]
[-55.62050629 -129.37226868]
[-46.99072647 -117.10332489]
[-28.90160370 -110.27951050]
[-27.39824677 -90.18032074]
[-18.39653969 -78.18160248]
[-3.66097093 -76.33807373]
[5.63896656 -64.29790497]
[3.60539579 -48.85438156]
[12.60710335 -36.85566330]
[27.34267235 -35.01213455]
[36.64260864 -22.97196198]
[34.60903931 -7.52844000]
[43.61074448 4.47027969]
[52.61245346 16.46899986]
[61.61415863 28.46771812]
[70.61586761 40.46643829]
[79.61757660 52.46515656]
[118.60764313 90.83531189]
[133.60368347 90.49053192]
[142.47729492 77.89826965]
[156.89561462 73.00281525]
[171.26193237 77.48310089]
[180.12916565 89.42085266]
[195.12521362 89.07607269]
[210.12124634 88.73129272]
[223.73992920 80.67884064]
[236.64167786 88.12155914]
[251.63772583 87.77677917]
[266.63375854 87.43199921]
[281.62979126 87.08721924]
[296.62582397 86.74243927]
[305.13800049 83.41529846]
[311.85391235 86.50905609]
[326.85348511 86.39411926]
[341.85302734 86.27918243]
[356.85260010 86.16425323]
[371.85214233 86.04931641]
[386.85171509 85.93437958]
[401.85125732 85.81944275]
[415.59176636 77.97663116]
[428.37792969 85.61618042]
[443.37750244 85.50124359]
[458.37704468 85.38631439]
[473.37661743 85.27137756]
[488.37615967 85.15644073]
[492.88363647 82.50518799]
[497.49581909 81.91074371]
[501.41064453 83.06787109]
[504.06390381 85.39687347]
[519.05285645 85.97141266]
[524.31347656 71.80160522]
[533.68359375 59.96759796]
[546.23565674 51.62051773]
[560.73352051 47.56734467]
[575.75384521 48.19289398]
[589.82629395 53.42333221]
[601.57702637 62.73463440]
[609.86309814 75.20505524]
[613.88348389 89.60635376]
[628.87249756 90.18089294]
[643.86145020 90.75543213]
[658.85046387 91.32997131]
[674.90954590 85.89475250]
[684.57794189 99.82164001]
[673.87182617 112.96755219]
[658.27593994 106.31896973]
[643.28692627 105.74442291]
[628.29791260 105.16988373]
[613.30895996 104.59534454]
[608.19793701 118.64662933]
[598.98156738 130.44616699]
[586.55255127 138.83062744]
[572.12103271 142.96849060]
[557.09686279 142.44241333]
[542.95184326 137.29133606]
[531.07556152 128.00788879]
[522.63885498 115.49133301]
[518.47833252 100.96040344]
[503.48934937 100.38586426]
[488.49111938 100.15599823]
[473.49154663 100.27093506]
[458.49200439 100.38587189]
[443.49243164 100.50080872]
[428.49285889 100.61574554]
[415.82525635 108.45033264]
[401.96621704 100.81900787]
[386.96664429 100.93393707]
[371.96707153 101.04887390]
[356.96752930 101.16381073]
[341.96795654 101.27874756]
[326.96841431 101.39367676]
[311.96884155 101.50861359]
[296.97061157 101.73847961]
[281.97457886 102.08325958]
[266.97854614 102.42803955]
[251.98249817 102.77281189]
[236.98646545 103.11759186]
[224.44039917 111.14538574]
[210.46601868 103.72733307]
[195.46998596 104.07211304]
[180.47395325 104.41689301]
[172.16471863 116.74955750]
[158.01948547 121.88535309]
[143.39141846 117.65771484]
[133.94845581 105.48657227]
[118.95242310 105.83135223]
[133.89085388 107.18905640]
[145.95960999 116.09664154]
[151.65951538 129.97146606]
[149.33796692 144.79072571]
[139.66806030 156.25776672]
[125.45345306 161.04786682]
[110.81549072 157.77220154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[31 54]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[38 47]
[55 108]
[56 107]
[57 106]
[58 105]
[59 104]
[60 103]
[63 100]
[64 99]
[67 96]
[68 95]
[72 93]
[73 92]
[74 91]
[75 90]
[76 88]
[77 87]
[78 86]
[79 85]
[109 197]
[110 196]
[114 192]
[115 191]
[116 190]
[118 188]
[119 187]
[120 186]
[121 185]
[122 184]
[124 183]
[125 182]
[126 181]
[127 180]
[128 179]
[129 178]
[130 177]
[132 175]
[133 174]
[134 173]
[135 172]
[136 171]
[140 170]
[141 169]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
