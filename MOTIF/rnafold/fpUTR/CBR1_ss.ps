%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUAGGGAUGGUUCAGCCCCGCCCCGCUAGGGCGGGGCCUGCGCCUGCGCGCUCAGCGGCCGGGCGUGUAACCCACGGGUGCGCGCCCACGACCGCCAGACUCGAGCAGUCUCUGGAACACGCUGCGGGGCUCCCGGGCCUGAGCCAGGUCUGUUCUCCACGCAGGUGUUCCGCGCGCCCCGUUCAGCC\
) } def
/len { sequence length } bind def

/coor [
[-3.42019439 329.51263428]
[-6.68221140 330.88836670]
[-13.71949387 344.13510132]
[-20.75677490 357.38186646]
[-27.79405785 370.62863159]
[-34.83134079 383.87539673]
[-34.47277832 399.69253540]
[-47.27674866 407.30224609]
[-54.31402969 420.54901123]
[-61.35131073 433.79577637]
[-60.99274826 449.61291504]
[-73.79672241 457.22259521]
[-80.83399963 470.46936035]
[-82.92533875 487.29382324]
[-99.67123413 489.94171143]
[-106.85134888 474.58325195]
[-94.08076477 463.43209839]
[-87.04347992 450.18533325]
[-87.90539551 435.31567383]
[-74.59807587 426.75848389]
[-67.56079102 413.51171875]
[-60.52350616 400.26495361]
[-61.38542557 385.39532471]
[-48.07810211 376.83810425]
[-41.04081726 363.59133911]
[-34.00353622 350.34460449]
[-26.96625328 337.09783936]
[-19.92897224 323.85107422]
[-13.21719456 310.43646240]
[-6.83492422 296.86196899]
[-0.45265383 283.28747559]
[-0.45176655 275.88540649]
[6.14556694 269.54528809]
[12.74794292 256.07647705]
[19.35031891 242.60768127]
[25.95269585 229.13888550]
[32.55507278 215.67007446]
[39.15744781 202.20127869]
[45.75982666 188.73246765]
[52.36220169 175.26367188]
[58.96457672 161.79487610]
[58.28800964 157.05322266]
[60.59354019 151.83796692]
[66.00735474 148.00041199]
[73.04463196 134.75364685]
[80.08191681 121.50688934]
[87.11920166 108.26013184]
[86.75299072 93.26460266]
[79.07746887 80.37715149]
[71.40195465 67.48970032]
[63.72644043 54.60224152]
[50.01727295 46.70482254]
[50.15232086 31.81082916]
[42.47680283 18.92337608]
[26.20510101 10.31784344]
[26.63444519 -7.21943617]
[18.75017738 -19.98024940]
[2.34055853 -28.31978607]
[2.48439312 -45.86173248]
[-5.60653687 -58.49252319]
[-13.69746685 -71.12331390]
[-21.78839684 -83.75410461]
[-40.42584991 -87.08764648]
[-50.54813766 -102.70905304]
[-46.12977982 -120.46272278]
[-54.62754822 -132.82347107]
[-63.12532043 -145.18420410]
[-71.62309265 -157.54495239]
[-80.12085724 -169.90568542]
[-88.61862946 -182.26643372]
[-97.11640167 -194.62716675]
[-105.61417389 -206.98789978]
[-114.11193848 -219.34864807]
[-121.56410980 -224.65779114]
[-122.64550781 -231.98045349]
[-130.94096375 -244.47787476]
[-145.85949707 -251.28736877]
[-147.15202332 -267.63549805]
[-133.48889160 -276.70471191]
[-118.92556000 -269.16540527]
[-118.44354248 -252.77333069]
[-110.14808655 -240.27590942]
[-101.75120544 -227.84642029]
[-93.25343323 -215.48567200]
[-84.75566101 -203.12493896]
[-76.25788879 -190.76419067]
[-67.76012421 -178.40345764]
[-59.26235199 -166.04270935]
[-50.76457977 -153.68197632]
[-42.26681137 -141.32124329]
[-33.76903915 -128.96049500]
[-22.34935951 -129.36198425]
[-12.05053043 -124.14083099]
[-5.48954296 -114.49384308]
[-4.39600229 -102.75804901]
[-9.15760803 -91.84503174]
[-1.06667757 -79.21424103]
[7.02425241 -66.58345032]
[15.11518288 -53.95266342]
[26.86898804 -51.05357361]
[33.71077347 -40.58378220]
[31.51099014 -27.86451530]
[39.39525604 -15.10370350]
[51.10031891 -12.01368523]
[57.77077866 -1.43391442]
[55.36425781 11.24785995]
[63.03977203 24.13531303]
[76.19993591 31.11093712]
[76.61389160 46.92672729]
[84.28941345 59.81418228]
[91.96492767 72.70163727]
[99.64044189 85.58908844]
[97.02986145 70.81800842]
[106.80590820 59.44132614]
[121.80163574 59.79945374]
[131.02345276 71.62983704]
[127.71073151 86.25946045]
[114.29107666 92.96315765]
[129.26673889 93.81727600]
[144.24240112 94.67139435]
[159.21806335 95.52550507]
[174.19372559 96.37962341]
[189.16938782 97.23374176]
[204.14505005 98.08785248]
[212.90629578 95.44921875]
[219.35691833 99.07971191]
[234.31669617 100.17747498]
[249.27647400 101.27523804]
[264.23623657 102.37299347]
[279.19601440 103.47075653]
[294.16424561 104.44673157]
[309.13989258 105.30084229]
[324.11557007 106.15496063]
[332.02719116 94.85745239]
[344.39157104 88.99455261]
[357.92980957 90.00259399]
[369.10977173 97.51123047]
[375.06774902 109.46818542]
[390.02752686 110.56594849]
[404.98730469 111.66370392]
[419.94708252 112.76146698]
[434.90686035 113.85923004]
[449.86663818 114.95699310]
[464.82641602 116.05474854]
[479.78619385 117.15251160]
[496.02532959 112.28156281]
[505.20138550 126.53766632]
[494.04257202 139.30158997]
[478.68841553 132.11228943]
[463.72863770 131.01452637]
[448.76885986 129.91676331]
[433.80908203 128.81900024]
[418.84930420 127.72124481]
[403.88952637 126.62348175]
[388.92974854 125.52572632]
[373.96997070 124.42796326]
[363.78890991 137.29634094]
[347.78488159 141.60908508]
[332.20727539 135.47717285]
[323.26144409 121.13062286]
[308.28579712 120.27651215]
[293.31011963 119.42239380]
[286.44268799 122.18450928]
[278.09826660 118.43053436]
[263.13848877 117.33277130]
[248.17871094 116.23501587]
[233.21893311 115.13725281]
[218.25915527 114.03948975]
[203.29093933 113.06352234]
[188.31527710 112.20940399]
[173.33961487 111.35528564]
[158.36395264 110.50116730]
[143.38829041 109.64705658]
[128.41262817 108.79293823]
[113.43696594 107.93881989]
[100.36595917 115.29741669]
[93.32867432 128.54417419]
[86.29139709 141.79093933]
[79.25411224 155.03768921]
[72.43338013 168.39724731]
[65.83100128 181.86604309]
[59.22862625 195.33485413]
[52.62625122 208.80364990]
[46.02387619 222.27246094]
[39.42149734 235.74125671]
[32.81912231 249.21005249]
[26.21674538 262.67886353]
[19.61436844 276.14767456]
[13.12182999 289.66973877]
[6.73956013 303.24423218]
[0.35728946 316.81872559]
[0.80164707 322.05004883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[5 25]
[6 24]
[8 22]
[9 21]
[10 20]
[12 18]
[13 17]
[29 191]
[30 190]
[31 189]
[33 188]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 181]
[41 180]
[44 179]
[45 178]
[46 177]
[47 176]
[48 112]
[49 111]
[50 110]
[51 109]
[53 107]
[54 106]
[56 103]
[57 102]
[59 99]
[60 98]
[61 97]
[62 96]
[65 91]
[66 90]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[73 83]
[75 82]
[76 81]
[118 175]
[119 174]
[120 173]
[121 172]
[122 171]
[123 170]
[124 169]
[126 168]
[127 167]
[128 166]
[129 165]
[130 164]
[131 162]
[132 161]
[133 160]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
