%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ERMP1)
} def

/sequence { (\
GGCCGGGGCUGUCGCGGGUUGGGGCGGUUGGGCUGGCAGCUGAGGCUCGUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.080200892 ubox
1 34 0.082497289 ubox
1 47 0.038567693 ubox
1 48 0.025875491 ubox
1 54 0.977843033 ubox
2 9 0.084924265 ubox
2 33 0.087370840 ubox
2 37 0.044135733 ubox
2 46 0.051246031 ubox
2 53 0.989478581 ubox
3 8 0.084670312 ubox
3 31 0.003587555 ubox
3 32 0.087376068 ubox
3 36 0.044192865 ubox
3 45 0.051351455 ubox
3 52 0.989530083 ubox
4 30 0.004237934 ubox
4 31 0.087320292 ubox
4 35 0.044193800 ubox
4 44 0.051314856 ubox
4 49 0.022632662 ubox
4 51 0.989122779 ubox
5 13 0.004374684 ubox
5 29 0.003517003 ubox
5 34 0.043947334 ubox
5 47 0.003386363 ubox
5 48 0.051706471 ubox
5 50 0.897382166 ubox
6 12 0.004188169 ubox
6 13 0.005704247 ubox
6 29 0.057770600 ubox
6 33 0.043817152 ubox
6 46 0.004016956 ubox
6 47 0.055943330 ubox
6 48 0.883983848 ubox
7 12 0.005169464 ubox
7 13 0.003843375 ubox
7 28 0.041056061 ubox
7 29 0.081135669 ubox
7 33 0.003637782 ubox
7 41 0.051356118 ubox
7 46 0.057758129 ubox
7 47 0.890545256 ubox
7 48 0.421438097 ubox
7 54 0.014977426 ubox
8 15 0.004759039 ubox
8 28 0.105226220 ubox
8 33 0.004178338 ubox
8 40 0.054330060 ubox
8 46 0.957264089 ubox
8 47 0.195292586 ubox
8 50 0.009381551 ubox
8 53 0.015110734 ubox
9 14 0.004786802 ubox
9 27 0.116265132 ubox
9 31 0.004628046 ubox
9 32 0.004242691 ubox
9 39 0.054413216 ubox
9 44 0.074061991 ubox
9 45 0.956693629 ubox
9 49 0.010192123 ubox
9 52 0.015029108 ubox
10 16 0.003536950 ubox
10 17 0.003173473 ubox
10 26 0.119354412 ubox
10 30 0.004531045 ubox
10 31 0.004177962 ubox
10 38 0.054476439 ubox
10 42 0.023540956 ubox
10 43 0.081498214 ubox
10 44 0.918064648 ubox
10 51 0.009388143 ubox
11 15 0.004969377 ubox
11 25 0.147759640 ubox
11 28 0.014537361 ubox
11 37 0.053211226 ubox
11 40 0.625466911 ubox
11 41 0.016532365 ubox
11 46 0.229515188 ubox
11 53 0.090593753 ubox
12 22 0.004816668 ubox
12 23 0.009470425 ubox
12 24 0.149496642 ubox
12 27 0.049329685 ubox
12 36 0.052668705 ubox
12 39 0.622119009 ubox
12 43 0.458947119 ubox
12 45 0.230369449 ubox
12 52 0.090845786 ubox
13 21 0.006163578 ubox
13 22 0.012169528 ubox
13 23 0.150975212 ubox
13 26 0.074471639 ubox
13 35 0.051525103 ubox
13 42 0.487746854 ubox
13 44 0.238574114 ubox
13 51 0.091873609 ubox
14 20 0.005051458 ubox
14 25 0.082782889 ubox
14 33 0.022132354 ubox
14 34 0.023131952 ubox
14 37 0.675053243 ubox
14 40 0.231722388 ubox
14 41 0.219378055 ubox
14 46 0.009947281 ubox
14 50 0.093110831 ubox
15 21 0.149360635 ubox
15 24 0.082945551 ubox
15 26 0.007003753 ubox
15 32 0.022620382 ubox
15 35 0.011641237 ubox
15 36 0.675902626 ubox
15 39 0.233759772 ubox
15 42 0.193409220 ubox
15 45 0.009936234 ubox
15 49 0.093286356 ubox
16 20 0.092213502 ubox
16 25 0.007467945 ubox
16 34 0.015878243 ubox
16 41 0.169475402 ubox
16 48 0.093305373 ubox
17 29 0.006435889 ubox
17 33 0.016767077 ubox
17 34 0.674788987 ubox
17 40 0.132413735 ubox
17 41 0.602188676 ubox
17 47 0.093252896 ubox
18 25 0.009221507 ubox
18 28 0.006280470 ubox
18 33 0.677346484 ubox
18 37 0.228322012 ubox
18 40 0.652964999 ubox
18 46 0.093308128 ubox
19 24 0.008794040 ubox
19 27 0.009062250 ubox
19 31 0.020309805 ubox
19 32 0.676786722 ubox
19 36 0.226533477 ubox
19 39 0.661805029 ubox
19 44 0.004009403 ubox
19 45 0.092713241 ubox
20 26 0.010705072 ubox
20 30 0.023373112 ubox
20 31 0.672145434 ubox
20 35 0.190202666 ubox
20 38 0.663034586 ubox
20 43 0.005400636 ubox
20 44 0.076889554 ubox
21 25 0.010756819 ubox
21 29 0.027803650 ubox
21 34 0.075670623 ubox
21 37 0.662507289 ubox
21 41 0.005177349 ubox
22 28 0.037092500 ubox
22 29 0.663318666 ubox
22 33 0.066432194 ubox
22 34 0.027692437 ubox
22 40 0.005348876 ubox
22 41 0.004020509 ubox
22 48 0.003241525 ubox
23 28 0.601278164 ubox
23 29 0.021856987 ubox
23 33 0.022519362 ubox
23 34 0.686607497 ubox
23 40 0.003629781 ubox
23 41 0.065140040 ubox
23 47 0.003438512 ubox
24 28 0.017487736 ubox
24 33 0.700601819 ubox
24 37 0.008233979 ubox
24 40 0.065788499 ubox
24 46 0.003521178 ubox
25 32 0.701067627 ubox
25 35 0.073271949 ubox
25 36 0.006881967 ubox
25 39 0.065537289 ubox
25 42 0.073061122 ubox
25 45 0.003448532 ubox
26 34 0.075305898 ubox
26 41 0.112626357 ubox
27 33 0.075499526 ubox
27 37 0.062820789 ubox
27 40 0.121688218 ubox
27 46 0.004024648 ubox
28 32 0.070631868 ubox
28 36 0.062748927 ubox
28 39 0.121698175 ubox
28 43 0.008500238 ubox
28 44 0.039557015 ubox
28 45 0.003724918 ubox
29 35 0.057598014 ubox
29 38 0.122202375 ubox
29 42 0.008461527 ubox
29 43 0.076496664 ubox
29 44 0.003930653 ubox
29 49 0.021571799 ubox
30 34 0.027135993 ubox
30 37 0.122284754 ubox
30 41 0.008444880 ubox
30 47 0.016390209 ubox
30 48 0.045517331 ubox
31 40 0.007731219 ubox
31 41 0.083236908 ubox
31 46 0.017961881 ubox
31 47 0.047773802 ubox
31 54 0.004893603 ubox
32 40 0.084184652 ubox
32 46 0.048134169 ubox
32 53 0.005706054 ubox
33 39 0.084244063 ubox
33 44 0.019397513 ubox
33 45 0.047622336 ubox
33 49 0.003212441 ubox
33 52 0.005723662 ubox
34 38 0.075894600 ubox
34 43 0.020565959 ubox
34 44 0.046230613 ubox
34 51 0.005418267 ubox
35 41 0.014290465 ubox
35 47 0.007393631 ubox
35 50 0.005058736 ubox
35 54 0.079166156 ubox
36 40 0.014708084 ubox
36 46 0.008245461 ubox
36 50 0.012051561 ubox
36 53 0.080080782 ubox
37 45 0.008246825 ubox
37 49 0.012635548 ubox
37 51 0.004815264 ubox
37 52 0.079610524 ubox
38 47 0.043424350 ubox
38 50 0.005268154 ubox
39 46 0.044280080 ubox
39 50 0.064238541 ubox
39 53 0.009008723 ubox
40 45 0.044142425 ubox
40 49 0.067441590 ubox
40 52 0.009029479 ubox
41 49 0.011897911 ubox
41 51 0.008568789 ubox
42 48 0.037826946 ubox
42 50 0.005786147 ubox
43 47 0.032937804 ubox
44 54 0.052730138 ubox
45 53 0.053185159 ubox
46 52 0.053172922 ubox
47 51 0.047903546 ubox
1 54 0.9500000 lbox
2 53 0.9500000 lbox
3 52 0.9500000 lbox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 48 0.9500000 lbox
7 47 0.9500000 lbox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
17 34 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
showpage
end
%%EOF
