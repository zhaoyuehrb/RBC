%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCGGUUGAGAGGCUUGGGGUCUUGCGUUUCGCCCACCAUCUCCUGGGGACAGGGUGGAGUCGAUAUCCGGGACGGGGGGGAGGUUGCGGUGCCCCUCAGGGCUACCUCUCAAGAGUGCUAUCAUUUCCGCAGGCCAGAUCAGAAAAGGGAGCUCAGGUACCUUCCAGAGAGUGAGACCCAGCGCCCUUGUCUCGCACCCAGUAGGCUUUCAUCCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[87.44786072 406.82199097]
[76.00305939 396.65954590]
[70.60276794 382.33840942]
[72.48793030 367.14944458]
[81.22534943 354.58297729]
[94.80722809 347.52667236]
[94.80722809 332.52667236]
[87.06992340 319.79940796]
[94.80722809 305.99923706]
[94.80722809 290.99923706]
[94.80722809 275.99923706]
[94.80722809 260.99923706]
[94.80722809 245.99923706]
[94.80722809 230.99923706]
[87.06992340 218.27197266]
[94.80722809 204.47178650]
[94.80722809 189.47178650]
[94.59591675 174.47328186]
[94.17333221 159.47923279]
[93.75075531 144.48518372]
[93.32817841 129.49113464]
[81.05091095 125.10237122]
[71.33327484 115.66287231]
[66.21594238 102.57024384]
[67.00935364 88.02497101]
[73.99002075 74.66162872]
[86.27757263 65.07196045]
[71.32257843 63.91087341]
[56.36758041 62.74979019]
[39.93916321 71.07669830]
[25.86725044 60.58486176]
[10.89738369 59.63456726]
[-4.07248449 58.68427277]
[-18.33511543 65.53175354]
[-30.54664040 57.00368500]
[-45.51650620 56.05339050]
[-60.48637390 55.10309601]
[-69.24018860 57.68090057]
[-75.65997314 54.03250885]
[-90.61496735 52.87142181]
[-98.44727325 60.40295029]
[-108.91503906 62.34552002]
[-118.52352905 58.29584122]
[-124.19859314 49.81125259]
[-139.11494446 48.22931290]
[-154.03129578 46.64737701]
[-168.94763184 45.06544113]
[-183.86398315 43.48350525]
[-198.78033447 41.90156555]
[-213.69668579 40.31962967]
[-228.65168762 39.15854263]
[-243.63345337 38.41923141]
[-258.61523438 37.67991638]
[-268.23831177 49.85267258]
[-283.18756104 54.01191330]
[-297.71469116 48.55831909]
[-306.23376465 35.58891296]
[-305.46896362 20.09069824]
[-295.71438599 8.02305031]
[-280.72088623 4.02622843]
[-266.25375366 9.63709164]
[-257.87591553 22.69814873]
[-242.89413452 23.43746185]
[-227.91236877 24.17677498]
[-225.75006104 22.40585709]
[-222.75900269 21.38090897]
[-219.21844482 21.42074203]
[-215.51739502 22.73779678]
[-212.11474609 25.40328026]
[-197.19839478 26.98521805]
[-182.28204346 28.56715393]
[-167.36570740 30.14909172]
[-152.44935608 31.73102760]
[-137.53300476 33.31296539]
[-122.61665344 34.89490128]
[-105.55739594 25.78098679]
[-89.45388031 37.91642761]
[-74.49888611 39.07751083]
[-59.53608322 40.13322830]
[-44.56621552 41.08352280]
[-29.59634590 42.03381729]
[-16.40446091 35.11836624]
[-3.12219071 43.71440506]
[11.84767723 44.66469955]
[26.81754494 45.61499405]
[36.09479523 37.86086655]
[48.56889725 38.52453613]
[57.52866364 47.79479218]
[72.48365784 48.95587921]
[87.43865204 50.11696625]
[96.66062164 38.28669357]
[91.88491058 24.06724739]
[87.10919952 9.84780407]
[82.23345184 -4.33764839]
[77.25789642 -18.48840332]
[72.28234863 -32.63916016]
[67.30679321 -46.78991699]
[54.51502609 -57.05162430]
[57.27314377 -73.21717072]
[72.74383545 -78.65682220]
[85.01217651 -67.77473450]
[81.45755005 -51.76546860]
[86.43310547 -37.61471176]
[91.40865326 -23.46395493]
[96.38420868 -9.31319904]
[101.56366730 -4.05035353]
[101.32864380 5.07209396]
[106.10435486 19.29153824]
[110.88006592 33.51098251]
[125.37349701 37.37625504]
[136.59576416 27.42333412]
[147.81803894 17.47041130]
[159.04031372 7.51748943]
[170.04977417 -2.67033935]
[180.84149170 -13.08852577]
[191.63322449 -23.50671196]
[195.62901306 -31.71085739]
[202.65112305 -33.99431992]
[213.58854675 -44.25944519]
[224.52597046 -54.52457047]
[235.46339417 -64.78969574]
[246.40081787 -75.05481720]
[243.01235962 -89.97010040]
[247.51481628 -104.48301697]
[258.60333252 -114.72561646]
[273.23202515 -118.02066803]
[287.45013428 -113.58093262]
[298.38754272 -123.84606171]
[309.32498169 -134.11119080]
[320.26239014 -144.37631226]
[331.19982910 -154.64143372]
[324.74600220 -168.32366943]
[322.83810425 -183.33082581]
[325.66305542 -198.19268799]
[332.94406128 -211.45323181]
[343.96786499 -221.81330872]
[357.65441895 -228.25796509]
[372.66284180 -230.15580750]
[387.52282715 -227.32090759]
[400.77847290 -220.03099060]
[411.13116455 -209.00027466]
[417.56665039 -195.30940247]
[419.45443726 -180.29969788]
[416.60955811 -165.44163513]
[409.31079102 -152.19087219]
[398.27313232 -141.84556580]
[384.57794189 -135.41926575]
[369.56698608 -133.54153442]
[354.71081543 -136.39634705]
[341.46493530 -143.70401001]
[330.52752686 -133.43888855]
[319.59011841 -123.17376709]
[308.65267944 -112.90863800]
[297.71527100 -102.64351654]
[301.24533081 -88.17270660]
[297.03012085 -73.78215027]
[286.10559082 -63.36479568]
[271.33657837 -59.79082108]
[256.66595459 -64.11740112]
[245.72851562 -53.85227203]
[234.79109192 -43.58714676]
[223.85368347 -33.32202148]
[212.91625977 -23.05689621]
[202.05140686 -12.71498394]
[191.25967407 -2.29679775]
[180.46795654 8.12138844]
[180.03797913 11.61272717]
[177.90087891 15.07056808]
[174.09016418 17.69721985]
[168.99322510 18.73975945]
[157.77096558 28.69268227]
[146.54869080 38.64560318]
[135.32641602 48.59852600]
[136.80325317 63.52564621]
[149.75827026 71.08657074]
[162.71328735 78.64748383]
[175.66830444 86.20840454]
[188.62332153 93.76932526]
[201.57833862 101.33024597]
[214.53335571 108.89116669]
[227.47375488 100.71773529]
[242.73120117 99.50577545]
[256.79965210 105.53379822]
[266.44628906 117.41659546]
[269.45440674 132.42358398]
[265.13272095 147.10629272]
[254.47433472 158.09071350]
[239.92848206 162.85272217]
[224.83767700 160.29803467]
[212.66969299 151.01371765]
[206.22062683 137.13320923]
[206.97244263 121.84618378]
[194.01742554 114.28526306]
[181.06240845 106.72434235]
[168.10739136 99.16342163]
[155.15237427 91.60250092]
[142.19735718 84.04158783]
[129.24232483 76.48066711]
[132.29441833 110.24885559]
[108.32221985 129.06855774]
[108.74480438 144.06260681]
[109.16738129 159.05665588]
[109.58996582 174.05070496]
[112.71803284 179.85934448]
[112.48464203 185.52658081]
[109.80722809 189.47178650]
[109.80722809 204.47178650]
[117.54452515 218.27197266]
[109.80722809 230.99923706]
[109.80722809 245.99923706]
[109.80722809 260.99923706]
[109.80722809 275.99923706]
[109.80722809 290.99923706]
[109.80722809 305.99923706]
[117.54452515 319.79940796]
[109.80722809 332.52667236]
[109.80722809 347.52667236]
[123.38910675 354.58297729]
[132.12652588 367.14944458]
[134.01168823 382.33840942]
[128.61138916 396.65954590]
[117.16659546 406.82199097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 217]
[7 216]
[9 214]
[10 213]
[11 212]
[12 211]
[13 210]
[14 209]
[16 207]
[17 206]
[18 203]
[19 202]
[20 201]
[21 200]
[27 90]
[28 89]
[29 88]
[31 85]
[32 84]
[33 83]
[35 81]
[36 80]
[37 79]
[39 78]
[40 77]
[44 75]
[45 74]
[46 73]
[47 72]
[48 71]
[49 70]
[50 69]
[51 64]
[52 63]
[53 62]
[91 109]
[92 108]
[93 107]
[94 105]
[95 104]
[96 103]
[97 102]
[110 173]
[111 172]
[112 171]
[113 170]
[114 166]
[115 165]
[116 164]
[118 163]
[119 162]
[120 161]
[121 160]
[122 159]
[127 154]
[128 153]
[129 152]
[130 151]
[131 150]
[174 198]
[175 197]
[176 196]
[177 195]
[178 194]
[179 193]
[180 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
