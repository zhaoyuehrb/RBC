%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACUGUCAGGCACCGCGGGGACGCCUUUCCGAGCGCCCGGCUCGGCGCGGCGCGGGGGCGCGCACGCCGCCCAGCUUCGGGGCCGCAGAGGGGGCGGGGCGGGACGUCCGGGGAGUGCGCACGCAUCCUGCCCGCGGCGCGCGCGCAGGUCGGUGCGUCUGUCGGGGGCGCGCUCGGGUACCUGUACCCCACGUAGUCGCCGGUUACCGAUCGGACUAAGUUCCAGUGGUGAUUUACAAGUCAAGUUAAA\
) } def
/len { sequence length } bind def

/coor [
[107.84238434 430.06802368]
[120.47251892 421.32873535]
[119.17034149 406.38537598]
[107.63408661 397.03387451]
[106.10061646 381.89770508]
[115.98754883 369.86083984]
[114.68537140 354.91748047]
[113.38318634 339.97409058]
[99.82857513 333.79849243]
[91.12715149 321.58615112]
[89.69735718 306.55877686]
[96.02287292 292.74267578]
[108.49595642 283.89001465]
[107.19377899 268.94665527]
[105.89159393 254.00328064]
[104.58941650 239.05992126]
[103.28723145 224.11654663]
[101.98504639 209.17317200]
[93.17208099 197.16564941]
[99.68214417 182.74588013]
[98.37996674 167.80250549]
[97.07778168 152.85914612]
[95.77559662 137.91577148]
[94.47341919 122.97239685]
[71.10047913 93.08080292]
[108.29889679 65.17030334]
[93.36389923 66.56523895]
[78.42890167 67.96016693]
[63.49390411 69.35510254]
[48.55890656 70.75003815]
[35.53807449 79.73716736]
[22.14641953 73.21697998]
[7.21142101 74.61190796]
[-1.01584268 78.51654053]
[-7.91750526 75.93025970]
[-22.86867332 77.13964081]
[-31.14378548 80.94181061]
[-38.01280212 78.27003479]
[-52.97783279 79.29367065]
[-67.94286346 80.31730652]
[-82.90789795 81.34094238]
[-97.85906219 82.55032349]
[-112.79405975 83.94525909]
[-127.72905731 85.34019470]
[-140.74989319 94.32731628]
[-154.14155579 87.80712891]
[-169.07655334 89.20206451]
[-184.01155090 90.59700012]
[-198.94654846 91.99193573]
[-213.87258911 93.47956848]
[-228.78912354 95.05984497]
[-243.69554138 96.73269653]
[-258.59130859 98.49806976]
[-273.48706055 100.26344299]
[-288.38281250 102.02881622]
[-303.27856445 103.79418945]
[-316.08593750 114.03639984]
[-331.25906372 107.81477356]
[-333.18911743 91.52960205]
[-319.89059448 81.93366241]
[-305.04391479 88.89843750]
[-290.14816284 87.13306427]
[-275.25241089 85.36769104]
[-260.35665894 83.60231781]
[-245.46092224 81.83694458]
[-239.20547485 77.93933868]
[-230.36938477 80.14331818]
[-215.45286560 78.56304169]
[-209.14952087 74.74340820]
[-200.34147644 77.05693817]
[-185.40647888 75.66200256]
[-170.47148132 74.26706696]
[-155.53648376 72.87213135]
[-143.58389282 63.98477936]
[-129.12399292 70.40519714]
[-114.18899536 69.01026154]
[-99.25399780 67.61532593]
[-95.58475494 64.59663391]
[-89.98740387 63.83333206]
[-83.93153381 66.37590790]
[-68.96649933 65.35227203]
[-54.00147247 64.32863617]
[-39.03643799 63.30500412]
[-24.07805061 62.18847275]
[-9.12688446 60.97909546]
[5.81648636 59.67691422]
[20.75148392 58.28197861]
[32.70406723 49.39462662]
[47.16397095 55.81504059]
[62.09896851 54.42010880]
[77.03396606 53.02517319]
[91.96896362 51.63023758]
[106.90396118 50.23530197]
[118.17900085 40.34219742]
[121.50384521 25.71532440]
[124.82868195 11.08845139]
[128.15353394 -3.53842187]
[131.47836304 -18.16529465]
[129.15945435 -32.98496628]
[121.52543640 -45.89704514]
[113.89141846 -58.80912399]
[106.25740051 -71.72119904]
[98.62338257 -84.63327789]
[85.35757446 -95.19049835]
[91.82987213 -110.86039734]
[108.67910004 -108.97889709]
[111.53546143 -92.26729584]
[119.16947937 -79.35521698]
[126.80349731 -66.44313812]
[134.43751526 -53.53106308]
[142.07153320 -40.61898422]
[149.18403625 -42.99852371]
[170.52156067 -50.13714218]
[168.84870911 -65.04357147]
[167.17585754 -79.94999695]
[165.50299072 -94.85642242]
[161.44581604 -103.00953674]
[163.90310669 -109.95816803]
[162.41546631 -124.88421631]
[160.92782593 -139.81027222]
[150.92593384 -152.80619812]
[157.42907715 -167.86080933]
[173.74737549 -169.48719788]
[183.09396362 -156.01228333]
[175.85388184 -141.29789734]
[177.34150696 -126.37184906]
[178.82914734 -111.44580078]
[180.40942383 -96.52928162]
[182.08227539 -81.62284851]
[183.75514221 -66.71642303]
[185.42799377 -51.80999756]
[199.94462585 -48.03276443]
[208.67074585 -60.23336792]
[217.39686584 -72.43397522]
[226.12298584 -84.63458252]
[227.85780334 -100.36038971]
[241.55509949 -106.21131134]
[250.28121948 -118.41191101]
[259.00735474 -130.61251831]
[267.73345947 -142.81312561]
[276.45959473 -155.01373291]
[278.19439697 -170.73953247]
[291.89169312 -176.59045410]
[300.61782837 -188.79106140]
[309.34396362 -200.99166870]
[318.07006836 -213.19227600]
[326.79620361 -225.39288330]
[335.52230835 -237.59349060]
[332.68682861 -253.14134216]
[341.74441528 -266.09262085]
[357.32138062 -268.76358032]
[370.17617798 -259.56954956]
[372.68228149 -243.96522522]
[363.35287476 -231.20835876]
[347.72293091 -228.86737061]
[338.99679565 -216.66676331]
[330.27069092 -204.46615601]
[321.54455566 -192.26554871]
[312.81842041 -180.06494141]
[304.09231567 -167.86433411]
[302.98165894 -153.01119995]
[288.66018677 -146.28761292]
[279.93408203 -134.08700562]
[271.20794678 -121.88639832]
[262.48184204 -109.68579102]
[253.75570679 -97.48518372]
[252.64505005 -82.63204956]
[238.32359314 -75.90846252]
[229.59747314 -63.70785522]
[220.87135315 -51.50724792]
[212.14523315 -39.30664062]
[177.91088867 -6.39863539]
[146.10523987 -14.84045315]
[142.78039551 -0.21358000]
[139.45555115 14.41329384]
[136.13072205 29.04016685]
[132.80587769 43.66704178]
[142.90725708 54.75586319]
[157.77993774 52.80566406]
[172.65263367 50.85546875]
[187.52531433 48.90526962]
[202.39799500 46.95507050]
[215.07722473 36.55462646]
[230.32641602 42.58736038]
[232.45852661 58.84731674]
[219.28021240 68.60764313]
[204.34819031 61.82775497]
[189.47550964 63.77795410]
[174.60282898 65.72814941]
[159.73014832 67.67835236]
[144.85745239 69.62854767]
[143.65202332 77.03104401]
[158.45697021 79.44216919]
[156.04559326 94.24707794]
[141.24113464 91.83602905]
[140.03569031 99.23852539]
[153.52122498 105.80664825]
[167.00675964 112.37477112]
[180.49230957 118.94290161]
[187.05975342 118.86037445]
[191.96089172 121.66963196]
[194.22808838 125.84523010]
[207.54637146 132.74620056]
[220.86465454 139.64718628]
[234.18293762 146.54815674]
[247.50120544 153.44912720]
[260.81948853 160.35011292]
[277.66452026 162.26867676]
[280.48410034 178.98652649]
[265.20013428 186.32386780]
[253.91851807 173.66838074]
[240.60023499 166.76741028]
[227.28195190 159.86643982]
[213.96368408 152.96545410]
[200.64540100 146.06448364]
[187.32711792 139.16351318]
[173.92417908 132.42843628]
[160.43864441 125.86031342]
[146.95310974 119.29218292]
[133.46755981 112.72406006]
[121.49661255 120.51714325]
[109.41678619 121.67021942]
[110.71897125 136.61358643]
[112.02114868 151.55696106]
[113.32333374 166.50033569]
[114.62551880 181.44369507]
[123.53163147 194.52008057]
[116.92842102 207.87098694]
[118.23059845 222.81436157]
[119.53278351 237.75773621]
[120.83496857 252.70111084]
[122.13714600 267.64447021]
[123.43933105 282.58786011]
[137.25564575 289.14962769]
[145.87556458 301.66336060]
[147.06658936 316.71154785]
[140.60867310 330.24487305]
[128.32655334 338.67190552]
[129.62873840 353.61529541]
[130.93092346 368.55865479]
[142.75083923 378.70397949]
[143.85855103 393.87722778]
[134.11370850 405.08319092]
[135.41589355 420.02655029]
[149.36727905 426.44949341]
[158.22496033 438.99691772]
[159.60624695 454.29354858]
[153.13960266 468.22473145]
[140.56449890 477.04306030]
[125.26358795 478.37637329]
[111.35273743 471.86608887]
[102.57389832 459.26342773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 244]
[3 243]
[6 240]
[7 239]
[8 238]
[13 233]
[14 232]
[15 231]
[16 230]
[17 229]
[18 228]
[20 226]
[21 225]
[22 224]
[23 223]
[24 222]
[26 93]
[27 92]
[28 91]
[29 90]
[30 89]
[32 87]
[33 86]
[35 85]
[36 84]
[38 83]
[39 82]
[40 81]
[41 80]
[42 77]
[43 76]
[44 75]
[46 73]
[47 72]
[48 71]
[49 70]
[50 68]
[51 67]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[94 177]
[95 176]
[96 175]
[97 174]
[98 173]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[113 131]
[114 130]
[115 129]
[116 128]
[118 127]
[119 126]
[120 125]
[132 171]
[133 170]
[134 169]
[135 168]
[137 166]
[138 165]
[139 164]
[140 163]
[141 162]
[143 160]
[144 159]
[145 158]
[146 157]
[147 156]
[148 155]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
[196 220]
[197 219]
[198 218]
[199 217]
[202 216]
[203 215]
[204 214]
[205 213]
[206 212]
[207 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
