%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYTIP)
} def

/sequence { (\
GUUGUACUUUUAGCUUCCCCCAUCCUGCAAGGCCACUCAACCAUGUGCUAGCUGGAGUGAUCUUUAUUCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.064024515 ubox
1 14 0.884214419 ubox
1 36 0.006986356 ubox
1 41 0.004539596 ubox
1 52 0.010504167 ubox
1 61 0.007374028 ubox
1 71 0.013781431 ubox
2 6 0.057816468 ubox
2 13 0.884975585 ubox
2 30 0.006465191 ubox
2 35 0.006193209 ubox
2 40 0.004899733 ubox
2 51 0.010496414 ubox
2 60 0.008034168 ubox
2 70 0.012401316 ubox
3 12 0.883312793 ubox
3 22 0.022172191 ubox
3 29 0.007995696 ubox
3 35 0.005945732 ubox
3 39 0.005035683 ubox
3 50 0.009700633 ubox
3 59 0.006510646 ubox
3 70 0.007535100 ubox
3 72 0.015260347 ubox
4 11 0.862011904 ubox
4 14 0.098669824 ubox
4 21 0.024510549 ubox
4 28 0.008514214 ubox
4 33 0.005751365 ubox
4 34 0.007212905 ubox
4 38 0.005035846 ubox
4 48 0.010539189 ubox
4 61 0.008289241 ubox
4 67 0.008373744 ubox
4 69 0.009538970 ubox
4 71 0.019155985 ubox
5 12 0.028498432 ubox
5 13 0.096797303 ubox
5 27 0.008472063 ubox
5 32 0.005409837 ubox
5 47 0.010536033 ubox
5 59 0.049813497 ubox
5 60 0.008692322 ubox
5 66 0.008497030 ubox
5 70 0.018344465 ubox
6 11 0.030447604 ubox
6 26 0.007740240 ubox
6 46 0.010519218 ubox
6 58 0.056451331 ubox
6 65 0.008057670 ubox
7 13 0.051815534 ubox
7 31 0.010291740 ubox
7 32 0.006181770 ubox
7 45 0.010495105 ubox
7 55 0.009015312 ubox
7 57 0.057249411 ubox
8 12 0.047103533 ubox
8 30 0.010302417 ubox
8 31 0.006185227 ubox
8 54 0.008633762 ubox
8 56 0.051158025 ubox
8 57 0.017195741 ubox
9 29 0.009933854 ubox
9 30 0.006149862 ubox
9 31 0.003960762 ubox
9 55 0.042085280 ubox
9 56 0.135505834 ubox
10 29 0.005402094 ubox
10 30 0.004818765 ubox
10 51 0.012296680 ubox
10 54 0.029662017 ubox
10 55 0.145632882 ubox
10 56 0.006004030 ubox
11 27 0.008359634 ubox
11 29 0.005108719 ubox
11 30 0.003446621 ubox
11 50 0.014992281 ubox
11 54 0.152174385 ubox
11 55 0.004596698 ubox
11 66 0.005982901 ubox
12 26 0.008633812 ubox
12 49 0.015239410 ubox
12 53 0.155949506 ubox
12 63 0.017324142 ubox
12 64 0.004505075 ubox
12 65 0.006095413 ubox
13 25 0.008588357 ubox
13 28 0.021488849 ubox
13 33 0.006514785 ubox
13 48 0.015266994 ubox
13 52 0.156342014 ubox
13 58 0.009597575 ubox
13 62 0.017776510 ubox
13 63 0.004734514 ubox
13 64 0.005198853 ubox
14 27 0.021508265 ubox
14 32 0.006523375 ubox
14 47 0.015219815 ubox
14 51 0.156316117 ubox
14 57 0.009992044 ubox
15 31 0.006446794 ubox
15 50 0.152944042 ubox
15 56 0.009014684 ubox
15 57 0.004340760 ubox
15 60 0.006438029 ubox
16 30 0.005806345 ubox
16 50 0.007097345 ubox
16 55 0.005324189 ubox
16 56 0.034092260 ubox
16 59 0.005674518 ubox
16 60 0.028334615 ubox
17 31 0.003273622 ubox
17 32 0.008879812 ubox
17 54 0.005083051 ubox
17 55 0.035608615 ubox
17 59 0.029503312 ubox
18 31 0.009123286 ubox
18 32 0.011933139 ubox
18 54 0.035316143 ubox
18 55 0.015964567 ubox
19 31 0.012187917 ubox
19 32 0.010834152 ubox
19 54 0.016083099 ubox
19 55 0.019390479 ubox
20 31 0.011039319 ubox
20 32 0.017094331 ubox
20 54 0.018469533 ubox
20 55 0.129632127 ubox
21 27 0.020529631 ubox
21 31 0.017452042 ubox
21 45 0.034889396 ubox
21 47 0.022802740 ubox
21 54 0.130137667 ubox
21 59 0.113935064 ubox
22 26 0.016805542 ubox
22 44 0.034880928 ubox
22 46 0.019853735 ubox
22 53 0.127544150 ubox
22 58 0.109643921 ubox
22 61 0.025018795 ubox
23 32 0.003537854 ubox
23 43 0.033271706 ubox
23 45 0.017567764 ubox
23 55 0.008312917 ubox
23 56 0.911213437 ubox
23 57 0.058128515 ubox
23 60 0.026993079 ubox
24 31 0.006372843 ubox
24 32 0.041914420 ubox
24 54 0.013538056 ubox
24 55 0.975061316 ubox
24 59 0.027364346 ubox
25 31 0.042974046 ubox
25 32 0.007486717 ubox
25 51 0.063244078 ubox
25 54 0.972730549 ubox
25 55 0.031241242 ubox
25 57 0.028191541 ubox
26 30 0.038780420 ubox
26 31 0.007531210 ubox
26 39 0.018861105 ubox
26 43 0.008641149 ubox
26 47 0.050122760 ubox
26 50 0.062387404 ubox
26 54 0.029693396 ubox
26 56 0.029456426 ubox
26 66 0.008169284 ubox
26 70 0.004621654 ubox
27 33 0.013106976 ubox
27 38 0.019496054 ubox
27 42 0.009080048 ubox
27 46 0.077494557 ubox
27 48 0.090940488 ubox
27 49 0.017935825 ubox
27 52 0.975973577 ubox
27 53 0.011545793 ubox
27 65 0.008801500 ubox
27 69 0.005196056 ubox
28 32 0.013091862 ubox
28 45 0.079199080 ubox
28 47 0.091597833 ubox
28 51 0.977150549 ubox
28 54 0.029869565 ubox
29 44 0.078767347 ubox
29 46 0.090229667 ubox
29 53 0.028254173 ubox
29 64 0.028035017 ubox
29 65 0.006672253 ubox
30 37 0.033667402 ubox
30 49 0.438942744 ubox
30 53 0.008189555 ubox
30 63 0.031471965 ubox
30 64 0.007044797 ubox
31 36 0.035215424 ubox
31 37 0.004304900 ubox
31 38 0.005912804 ubox
31 42 0.120537847 ubox
31 48 0.410686713 ubox
31 49 0.851123522 ubox
31 52 0.009012902 ubox
31 53 0.030017043 ubox
31 62 0.031961365 ubox
31 63 0.007063574 ubox
32 36 0.004467172 ubox
32 37 0.004203268 ubox
32 41 0.120612712 ubox
32 46 0.021542372 ubox
32 48 0.892951570 ubox
32 52 0.031947330 ubox
32 61 0.029914632 ubox
32 62 0.007080673 ubox
33 45 0.021378504 ubox
33 47 0.679203168 ubox
33 51 0.032037228 ubox
33 55 0.004368677 ubox
34 45 0.340137026 ubox
34 47 0.699563075 ubox
34 54 0.004387794 ubox
34 59 0.034440246 ubox
35 44 0.330023665 ubox
35 46 0.925613292 ubox
35 53 0.004333724 ubox
35 58 0.034471551 ubox
36 45 0.927777388 ubox
36 51 0.004157264 ubox
36 57 0.034479806 ubox
37 50 0.003950745 ubox
37 56 0.034224229 ubox
38 45 0.031822416 ubox
38 47 0.006487612 ubox
38 55 0.023913856 ubox
39 44 0.031090251 ubox
39 46 0.006460082 ubox
40 46 0.009856261 ubox
41 45 0.009987273 ubox
41 55 0.028373063 ubox
42 54 0.033504715 ubox
43 53 0.032730286 ubox
44 50 0.004794262 ubox
45 49 0.004065120 ubox
45 52 0.034997486 ubox
45 71 0.003632499 ubox
46 51 0.034445347 ubox
46 70 0.003632855 ubox
47 69 0.003614861 ubox
53 66 0.005972439 ubox
53 72 0.012331228 ubox
54 63 0.003716766 ubox
54 65 0.006563117 ubox
54 71 0.016786429 ubox
55 62 0.004077210 ubox
55 64 0.007054551 ubox
55 69 0.029753523 ubox
56 61 0.004064211 ubox
56 63 0.009250915 ubox
56 68 0.031121957 ubox
57 62 0.010722360 ubox
57 67 0.034364177 ubox
57 71 0.985559840 ubox
58 66 0.034664664 ubox
58 70 0.986862823 ubox
58 72 0.003250271 ubox
59 65 0.034360850 ubox
59 68 0.012582770 ubox
59 69 0.987520038 ubox
59 71 0.004167695 ubox
60 64 0.029395886 ubox
60 67 0.065715465 ubox
60 68 0.977029338 ubox
61 66 0.081775605 ubox
1 14 0.9500000 lbox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
23 56 0.9500000 lbox
24 55 0.9500000 lbox
25 54 0.9500000 lbox
27 52 0.9500000 lbox
28 51 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
57 71 0.9500000 lbox
58 70 0.9500000 lbox
59 69 0.9500000 lbox
60 68 0.9500000 lbox
showpage
end
%%EOF
