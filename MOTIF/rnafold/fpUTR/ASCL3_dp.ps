%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ASCL3)
} def

/sequence { (\
UUAAGUCCAACUCAGCCCAAAAUACAGCAUCCUGACGACAAAACUCAGGUUAAAGAGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.025950940 ubox
1 15 0.049835306 ubox
1 20 0.024913825 ubox
1 21 0.010046882 ubox
1 22 0.006339519 ubox
1 38 0.004416615 ubox
1 41 0.019037184 ubox
1 42 0.019630448 ubox
1 43 0.032262112 ubox
1 53 0.032409470 ubox
1 54 0.006820869 ubox
1 55 0.005156302 ubox
1 56 0.008328630 ubox
1 57 0.005591509 ubox
1 58 0.006000536 ubox
1 59 0.015768834 ubox
1 60 0.009823748 ubox
2 9 0.029633644 ubox
2 14 0.066539078 ubox
2 19 0.027733587 ubox
2 20 0.010591030 ubox
2 21 0.007122075 ubox
2 24 0.006456339 ubox
2 26 0.003595395 ubox
2 37 0.004572151 ubox
2 40 0.019096440 ubox
2 41 0.021166942 ubox
2 42 0.038407706 ubox
2 52 0.037181286 ubox
2 53 0.007177725 ubox
2 54 0.005656553 ubox
2 55 0.008651160 ubox
2 56 0.006246061 ubox
2 57 0.005696058 ubox
2 58 0.016408792 ubox
2 59 0.009619323 ubox
3 23 0.006649947 ubox
3 51 0.037097217 ubox
4 12 0.188181087 ubox
4 45 0.007273383 ubox
4 50 0.031650519 ubox
4 51 0.005593300 ubox
5 11 0.198589875 ubox
5 16 0.102079908 ubox
5 23 0.008645488 ubox
5 25 0.026928593 ubox
5 28 0.035814437 ubox
5 30 0.005136051 ubox
5 36 0.062928245 ubox
5 39 0.263761774 ubox
5 44 0.007696446 ubox
5 50 0.005244360 ubox
6 10 0.179030690 ubox
6 15 0.101538880 ubox
6 22 0.008616952 ubox
6 24 0.025225971 ubox
6 27 0.034735741 ubox
6 29 0.005278633 ubox
6 35 0.062882182 ubox
6 38 0.264079196 ubox
6 43 0.007509040 ubox
6 56 0.026329165 ubox
6 58 0.015296383 ubox
6 59 0.548933542 ubox
7 34 0.060283826 ubox
7 37 0.263448805 ubox
7 49 0.006517837 ubox
7 55 0.027999651 ubox
7 57 0.017409657 ubox
7 58 0.586776413 ubox
8 34 0.044866219 ubox
8 48 0.006468543 ubox
8 57 0.577309394 ubox
9 33 0.046356131 ubox
9 51 0.050071744 ubox
10 50 0.050793039 ubox
11 27 0.051890211 ubox
11 48 0.016636310 ubox
11 49 0.048731637 ubox
11 55 0.176734180 ubox
11 57 0.534258681 ubox
11 58 0.027874493 ubox
12 26 0.049316163 ubox
12 35 0.254628299 ubox
12 38 0.004950263 ubox
12 47 0.017558851 ubox
12 48 0.043229963 ubox
12 54 0.169327183 ubox
12 56 0.565214759 ubox
12 57 0.020968883 ubox
12 58 0.018785333 ubox
12 59 0.047426248 ubox
13 34 0.263306258 ubox
13 37 0.005343428 ubox
13 48 0.007820198 ubox
13 55 0.565130889 ubox
13 57 0.023693119 ubox
13 58 0.049924655 ubox
14 33 0.262882025 ubox
14 45 0.036119086 ubox
14 51 0.192271418 ubox
15 28 0.735973850 ubox
15 32 0.255551349 ubox
15 44 0.037056782 ubox
15 50 0.210627841 ubox
16 27 0.735962471 ubox
16 49 0.207604048 ubox
16 58 0.087389684 ubox
17 48 0.204573474 ubox
17 49 0.027212512 ubox
17 57 0.087383151 ubox
17 58 0.118629650 ubox
18 34 0.024321817 ubox
18 48 0.030149372 ubox
18 57 0.118741904 ubox
19 33 0.023385075 ubox
19 51 0.027526455 ubox
20 50 0.028810022 ubox
20 51 0.020635280 ubox
21 50 0.021646115 ubox
21 51 0.018867065 ubox
22 30 0.049227036 ubox
22 50 0.019825538 ubox
23 29 0.050542753 ubox
23 34 0.004495080 ubox
23 49 0.004501089 ubox
23 52 0.036460686 ubox
24 33 0.005078176 ubox
24 50 0.025645921 ubox
24 51 0.035281770 ubox
25 34 0.190582810 ubox
25 49 0.014214911 ubox
26 33 0.191172282 ubox
26 45 0.009246658 ubox
26 51 0.043196399 ubox
27 32 0.188318354 ubox
27 44 0.009544956 ubox
27 50 0.048273788 ubox
28 34 0.042528248 ubox
28 49 0.030170935 ubox
29 33 0.034542992 ubox
29 50 0.141681445 ubox
30 38 0.039716701 ubox
30 49 0.025334559 ubox
30 56 0.022340979 ubox
30 58 0.006333950 ubox
30 59 0.253039583 ubox
31 37 0.041134827 ubox
31 48 0.018869334 ubox
31 49 0.876450970 ubox
31 55 0.021395811 ubox
31 57 0.008700706 ubox
31 58 0.270474979 ubox
32 48 0.884096781 ubox
32 49 0.005070072 ubox
32 55 0.016514365 ubox
32 57 0.270491686 ubox
32 58 0.004682783 ubox
33 40 0.022486945 ubox
33 47 0.885743903 ubox
33 48 0.003862487 ubox
33 52 0.082469259 ubox
33 54 0.015904182 ubox
33 56 0.259577446 ubox
33 57 0.004386765 ubox
34 39 0.025024278 ubox
34 46 0.885685827 ubox
34 51 0.141600155 ubox
35 45 0.836324085 ubox
35 50 0.142949483 ubox
36 49 0.143075109 ubox
37 46 0.149784719 ubox
37 51 0.204694999 ubox
38 45 0.141025615 ubox
38 50 0.212120887 ubox
39 49 0.212368535 ubox
40 51 0.011321199 ubox
41 50 0.010878229 ubox
41 51 0.009557964 ubox
42 50 0.007846303 ubox
42 51 0.094332396 ubox
43 50 0.101575938 ubox
44 49 0.102467980 ubox
44 55 0.015282805 ubox
44 57 0.291372375 ubox
44 58 0.010823388 ubox
45 54 0.015193422 ubox
45 56 0.292916802 ubox
45 57 0.005875392 ubox
45 58 0.004682799 ubox
45 59 0.008374563 ubox
46 55 0.293092790 ubox
46 57 0.005831007 ubox
46 58 0.008779194 ubox
50 56 0.043713866 ubox
50 57 0.016601256 ubox
50 58 0.012865607 ubox
50 59 0.032312766 ubox
50 60 0.008263145 ubox
51 55 0.042665516 ubox
51 56 0.034508468 ubox
51 57 0.015426135 ubox
51 58 0.034087464 ubox
51 59 0.010853866 ubox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
showpage
end
%%EOF
