%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:31 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCDC69)
} def

/sequence { (\
CAGUUUCAGGGUCUCGCCGGCAGCCCCAGCCGGCGGGCGCGGAGCGGGCAGCGGGGCCCGGAUCGCAGGCUCCUCUGGGGGCCCCGGAGUUGGGAAGCGGCGUCCGGGAGCCCCCGGAGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 14 0.005322155 ubox
2 71 0.020144803 ubox
3 12 0.005799288 ubox
3 13 0.006408209 ubox
3 38 0.016901351 ubox
3 45 0.019997756 ubox
3 63 0.029632532 ubox
3 66 0.199733350 ubox
3 70 0.031976412 ubox
4 10 0.020916269 ubox
4 11 0.009265311 ubox
4 37 0.010390805 ubox
4 44 0.020702651 ubox
4 62 0.029050801 ubox
4 65 0.197590692 ubox
4 68 0.013121721 ubox
4 69 0.036058977 ubox
4 123 0.008917785 ubox
5 9 0.019546679 ubox
5 10 0.019543713 ubox
5 11 0.006157710 ubox
5 36 0.005611422 ubox
5 43 0.021147588 ubox
5 44 0.017214120 ubox
5 61 0.026920197 ubox
5 62 0.094499035 ubox
5 67 0.013672411 ubox
5 68 0.036720670 ubox
5 69 0.011821871 ubox
5 123 0.008829314 ubox
6 10 0.012926581 ubox
6 42 0.021039540 ubox
6 43 0.022053149 ubox
6 60 0.019379838 ubox
6 61 0.101390491 ubox
6 62 0.206477143 ubox
6 67 0.031264520 ubox
6 68 0.012482459 ubox
6 69 0.061375624 ubox
6 123 0.011697937 ubox
7 41 0.020830038 ubox
7 42 0.022625189 ubox
7 60 0.101901132 ubox
7 61 0.209262324 ubox
7 68 0.080218698 ubox
7 122 0.012646800 ubox
9 13 0.003674306 ubox
9 59 0.246518064 ubox
9 70 0.003780463 ubox
9 72 0.003195555 ubox
10 58 0.247242118 ubox
10 64 0.003195933 ubox
10 70 0.003941347 ubox
10 71 0.007456229 ubox
11 38 0.912073792 ubox
11 40 0.015917333 ubox
11 57 0.247244393 ubox
11 63 0.003168549 ubox
11 70 0.010691008 ubox
12 37 0.723408529 ubox
12 39 0.015877459 ubox
12 56 0.247162052 ubox
12 62 0.003170803 ubox
12 69 0.011864163 ubox
12 123 0.003165047 ubox
13 36 0.719885137 ubox
13 37 0.639605968 ubox
13 55 0.247222153 ubox
13 68 0.011908079 ubox
14 35 0.119185131 ubox
14 36 0.646182886 ubox
14 54 0.247042032 ubox
14 67 0.009932167 ubox
15 35 0.961246007 ubox
15 36 0.003224567 ubox
15 53 0.247082766 ubox
16 34 0.968994079 ubox
16 49 0.010016552 ubox
16 52 0.246734247 ubox
17 33 0.969021052 ubox
17 48 0.010954148 ubox
17 51 0.246586692 ubox
18 32 0.969010226 ubox
18 47 0.011950883 ubox
19 31 0.969010103 ubox
20 30 0.969012379 ubox
20 45 0.012086830 ubox
20 49 0.244708180 ubox
21 29 0.968475949 ubox
21 44 0.012086411 ubox
21 48 0.244492986 ubox
23 30 0.004766540 ubox
23 40 0.004894231 ubox
23 45 0.245986332 ubox
23 49 0.012940060 ubox
24 29 0.006358369 ubox
24 39 0.004895558 ubox
24 42 0.008184064 ubox
24 44 0.245961509 ubox
24 47 0.004246971 ubox
24 48 0.012981060 ubox
25 37 0.004748201 ubox
25 41 0.008252051 ubox
25 42 0.159665630 ubox
25 46 0.004261603 ubox
25 47 0.013010563 ubox
26 36 0.004750169 ubox
26 41 0.159079327 ubox
26 42 0.187318227 ubox
26 46 0.012829082 ubox
27 35 0.004748565 ubox
27 41 0.187381717 ubox
29 38 0.246409063 ubox
29 40 0.005677080 ubox
30 37 0.246475718 ubox
30 39 0.004913195 ubox
30 42 0.012154904 ubox
31 36 0.246389060 ubox
31 39 0.003194368 ubox
31 41 0.012156480 ubox
32 38 0.004156362 ubox
32 40 0.010886872 ubox
33 40 0.005584475 ubox
34 39 0.007741982 ubox
35 52 0.003215712 ubox
36 71 0.003900822 ubox
37 45 0.003814919 ubox
37 49 0.010422631 ubox
37 52 0.005473661 ubox
37 66 0.006604922 ubox
37 70 0.008485966 ubox
38 44 0.003861871 ubox
38 48 0.010433131 ubox
38 51 0.005475852 ubox
38 65 0.006739502 ubox
38 69 0.025662978 ubox
39 45 0.003403853 ubox
39 49 0.005576805 ubox
39 64 0.006612538 ubox
39 66 0.967188037 ubox
40 44 0.003389290 ubox
40 46 0.010412097 ubox
40 48 0.005593340 ubox
40 65 0.968182213 ubox
41 45 0.009745594 ubox
41 64 0.966487550 ubox
42 63 0.919230207 ubox
42 64 0.048625878 ubox
43 63 0.066570118 ubox
45 60 0.967921980 ubox
46 59 0.968921031 ubox
47 58 0.968940039 ubox
48 57 0.968937702 ubox
49 56 0.967924782 ubox
63 69 0.006914903 ubox
64 68 0.009157530 ubox
70 122 0.994894106 ubox
70 123 0.019176748 ubox
71 121 0.999128528 ubox
71 122 0.008543955 ubox
72 120 0.999982059 ubox
73 119 0.999988198 ubox
74 118 0.999849338 ubox
75 117 0.999982118 ubox
76 116 0.999238261 ubox
77 115 0.999963641 ubox
78 114 0.999994606 ubox
79 113 0.999994516 ubox
80 112 0.999994457 ubox
81 111 0.999994963 ubox
82 110 0.999890321 ubox
83 108 0.999857535 ubox
84 107 0.999980300 ubox
84 108 0.005260425 ubox
85 106 0.999971270 ubox
85 107 0.003734865 ubox
86 104 0.007080851 ubox
86 105 0.999952315 ubox
87 103 0.009761811 ubox
87 104 0.999880575 ubox
88 103 0.974104297 ubox
89 98 0.030682580 ubox
89 101 0.996833885 ubox
90 97 0.030659699 ubox
90 100 0.998150546 ubox
90 102 0.003922470 ubox
91 96 0.030079990 ubox
91 99 0.995440011 ubox
91 102 0.018804122 ubox
92 98 0.997391876 ubox
92 101 0.022045107 ubox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
39 66 0.9500000 lbox
40 65 0.9500000 lbox
41 64 0.9500000 lbox
42 63 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
70 122 0.9500000 lbox
71 121 0.9500000 lbox
72 120 0.9500000 lbox
73 119 0.9500000 lbox
74 118 0.9500000 lbox
75 117 0.9500000 lbox
76 116 0.9500000 lbox
77 115 0.9500000 lbox
78 114 0.9500000 lbox
79 113 0.9500000 lbox
80 112 0.9500000 lbox
81 111 0.9500000 lbox
82 110 0.9500000 lbox
83 108 0.9500000 lbox
84 107 0.9500000 lbox
85 106 0.9500000 lbox
86 105 0.9500000 lbox
87 104 0.9500000 lbox
88 103 0.9500000 lbox
89 101 0.9500000 lbox
90 100 0.9500000 lbox
91 99 0.9500000 lbox
92 98 0.9500000 lbox
showpage
end
%%EOF
