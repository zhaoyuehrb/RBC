%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FRG2B)
} def

/sequence { (\
CACACUCUGCCUUUGGACGUGAGAGAGAGCGCACCUUUCACUUGAGCUUCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.058747929 ubox
1 15 0.035728029 ubox
1 21 0.142940616 ubox
1 44 0.031333122 ubox
2 8 0.055369867 ubox
2 14 0.033049790 ubox
2 20 0.143997761 ubox
2 43 0.027887472 ubox
3 9 0.086414948 ubox
3 15 0.050860554 ubox
3 19 0.143722358 ubox
3 21 0.380703860 ubox
3 44 0.025330486 ubox
4 8 0.070449437 ubox
4 14 0.046581764 ubox
4 20 0.383868571 ubox
4 43 0.022619366 ubox
5 16 0.062155523 ubox
5 19 0.384218127 ubox
5 23 0.211514056 ubox
5 25 0.167885710 ubox
5 27 0.047546352 ubox
5 29 0.135718151 ubox
5 46 0.233202625 ubox
6 15 0.056388404 ubox
6 16 0.081860703 ubox
6 17 0.496945618 ubox
6 22 0.213860621 ubox
6 24 0.170478261 ubox
6 26 0.050147817 ubox
6 28 0.137230956 ubox
6 45 0.234472008 ubox
7 15 0.101998087 ubox
7 16 0.513184610 ubox
7 21 0.213991747 ubox
7 23 0.170745154 ubox
7 25 0.050392451 ubox
7 27 0.137985708 ubox
7 29 0.005597606 ubox
7 44 0.234150008 ubox
7 46 0.014168643 ubox
8 15 0.497264802 ubox
8 19 0.182613791 ubox
8 21 0.046224604 ubox
8 22 0.161282470 ubox
8 24 0.047761933 ubox
8 26 0.137292754 ubox
8 28 0.005762953 ubox
8 31 0.024881649 ubox
8 33 0.038356842 ubox
8 40 0.006512959 ubox
8 44 0.003263231 ubox
8 45 0.013748581 ubox
8 51 0.195056710 ubox
9 14 0.261546904 ubox
9 18 0.281073846 ubox
9 20 0.148978359 ubox
9 30 0.033690288 ubox
9 32 0.042208363 ubox
9 39 0.006649555 ubox
9 43 0.011810507 ubox
9 47 0.309162256 ubox
9 50 0.209934428 ubox
10 16 0.370584178 ubox
10 19 0.153667579 ubox
10 29 0.033650714 ubox
10 31 0.042209593 ubox
10 46 0.280847221 ubox
11 15 0.368521438 ubox
11 23 0.139822485 ubox
11 25 0.043404683 ubox
11 27 0.034132632 ubox
11 29 0.041596858 ubox
11 46 0.197983314 ubox
12 22 0.139440535 ubox
12 23 0.010964801 ubox
12 24 0.043718087 ubox
12 25 0.003889911 ubox
12 26 0.034096965 ubox
12 28 0.041595106 ubox
12 45 0.233475254 ubox
12 46 0.059233243 ubox
12 52 0.024495024 ubox
13 21 0.137699858 ubox
13 22 0.016523208 ubox
13 23 0.043657581 ubox
13 24 0.005440865 ubox
13 25 0.033919732 ubox
13 27 0.041421476 ubox
13 44 0.224839052 ubox
13 45 0.106764852 ubox
13 46 0.240167143 ubox
13 51 0.021613685 ubox
13 52 0.330806268 ubox
14 21 0.019640015 ubox
14 22 0.043212974 ubox
14 23 0.006093236 ubox
14 24 0.033359698 ubox
14 25 0.003325491 ubox
14 26 0.040725108 ubox
14 40 0.008911938 ubox
14 44 0.110951267 ubox
14 45 0.348881160 ubox
14 51 0.388289873 ubox
15 20 0.018778889 ubox
15 35 0.034414811 ubox
15 36 0.027512059 ubox
15 39 0.009321037 ubox
15 42 0.065125724 ubox
15 43 0.106310063 ubox
15 48 0.037709769 ubox
15 49 0.005259508 ubox
15 50 0.397182020 ubox
16 34 0.034393930 ubox
16 35 0.027989933 ubox
16 38 0.009127452 ubox
16 41 0.045334753 ubox
16 42 0.084598786 ubox
16 43 0.414014958 ubox
16 47 0.042074388 ubox
16 48 0.007399836 ubox
16 49 0.394833949 ubox
16 50 0.080743800 ubox
17 36 0.003490883 ubox
17 37 0.008766031 ubox
17 42 0.418750389 ubox
17 48 0.387793079 ubox
17 49 0.081844978 ubox
18 31 0.032069334 ubox
18 44 0.073052823 ubox
19 30 0.032280487 ubox
19 32 0.032690913 ubox
19 34 0.008660414 ubox
19 41 0.754033211 ubox
19 43 0.024355736 ubox
19 47 0.361816818 ubox
19 53 0.004806122 ubox
20 29 0.032206238 ubox
20 31 0.032700783 ubox
20 33 0.008704721 ubox
20 40 0.756794432 ubox
20 44 0.103439181 ubox
20 46 0.355228888 ubox
20 51 0.008048987 ubox
20 52 0.004365299 ubox
21 30 0.032657841 ubox
21 32 0.008686022 ubox
21 39 0.757501755 ubox
21 43 0.278822970 ubox
21 50 0.009683984 ubox
22 38 0.756984573 ubox
22 42 0.318331840 ubox
22 43 0.023006149 ubox
22 48 0.007936596 ubox
22 49 0.008927977 ubox
23 35 0.003487628 ubox
23 37 0.755810916 ubox
23 39 0.254946617 ubox
23 41 0.323343371 ubox
23 42 0.016944313 ubox
23 43 0.251889805 ubox
23 47 0.008439214 ubox
23 48 0.004256640 ubox
23 49 0.005448745 ubox
23 50 0.049192350 ubox
24 36 0.756040842 ubox
24 37 0.004419501 ubox
24 38 0.255689783 ubox
24 42 0.246770066 ubox
24 43 0.006915283 ubox
24 48 0.006033788 ubox
24 49 0.043266823 ubox
25 35 0.754382680 ubox
25 36 0.003718183 ubox
25 37 0.257664696 ubox
25 38 0.003685382 ubox
25 39 0.409418842 ubox
25 41 0.215616622 ubox
25 43 0.005167236 ubox
25 47 0.005843953 ubox
25 48 0.018036202 ubox
25 49 0.017900300 ubox
25 50 0.186579162 ubox
26 36 0.259116588 ubox
26 37 0.006539237 ubox
26 38 0.420662852 ubox
26 42 0.005438409 ubox
26 48 0.021661044 ubox
26 49 0.165089898 ubox
27 35 0.259185056 ubox
27 36 0.006491452 ubox
27 37 0.426896935 ubox
27 38 0.023340294 ubox
27 39 0.176246319 ubox
27 41 0.005379669 ubox
27 43 0.009373680 ubox
27 47 0.023299454 ubox
27 48 0.101250292 ubox
27 49 0.256292326 ubox
27 50 0.117620538 ubox
28 36 0.427408155 ubox
28 37 0.027795163 ubox
28 38 0.174228662 ubox
28 42 0.009709508 ubox
28 48 0.314276865 ubox
28 49 0.088565019 ubox
29 35 0.424696301 ubox
29 36 0.025285110 ubox
29 37 0.151004800 ubox
29 41 0.009717395 ubox
29 47 0.342184991 ubox
29 48 0.042153557 ubox
30 44 0.022942834 ubox
30 46 0.341874904 ubox
31 43 0.018261406 ubox
31 47 0.070898374 ubox
32 44 0.297033481 ubox
32 46 0.070279402 ubox
33 43 0.272206519 ubox
35 46 0.059012133 ubox
36 45 0.063447175 ubox
36 46 0.005184717 ubox
37 44 0.062565810 ubox
37 45 0.009064147 ubox
37 46 0.038256633 ubox
38 44 0.008246282 ubox
38 45 0.063417095 ubox
39 44 0.064326422 ubox
42 52 0.390063435 ubox
43 51 0.461610997 ubox
44 50 0.473016365 ubox
45 49 0.411557158 ubox
19 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
24 36 0.9500000 lbox
25 35 0.9500000 lbox
showpage
end
%%EOF
