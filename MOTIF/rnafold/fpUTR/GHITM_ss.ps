%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGUGGCCGCUUUUCCGACAGAGGCCUGCCCGUGAUUGGCUGCUCGUACUAUUUACGUCCUUUCGAUGUUGCGUCAUGCAGUGCGCCGGAGGAACUGUGCUCUUUGAGGCCGACGCUAGGGGCCCGGAAGGGAAACUGCGAGGCGAAGGUGACCGGGGACCGAGCAUUUCAGAUCUGCUCGGUAGACCUGGUGCACCACCACC\
) } def
/len { sequence length } bind def

/coor [
[96.67119598 208.57405090]
[82.47038269 201.10971069]
[79.59381866 185.32664490]
[90.24816132 173.33229065]
[90.70783234 158.33934021]
[91.16750336 143.34637451]
[91.62718201 128.35342407]
[72.84072876 111.67881775]
[73.66110229 86.57303619]
[62.46280670 76.59314728]
[51.26450729 66.61326599]
[33.15335083 63.29865646]
[28.29483032 46.43773651]
[16.94491386 36.63062668]
[5.59499598 26.82351875]
[-5.75492144 17.01641083]
[-17.10483932 7.20930195]
[-30.69460106 13.96163845]
[-45.79352951 14.99380207]
[-60.09866714 10.17957592]
[-71.44006348 0.28208402]
[-78.10993958 -13.16698742]
[-79.11981964 -28.10437584]
[-74.34687805 -42.25175476]
[-85.69680023 -52.05886078]
[-97.04671478 -61.86597061]
[-108.39663696 -71.67308044]
[-119.74655151 -81.48018646]
[-132.89952087 -77.34925842]
[-146.26976013 -80.23517609]
[-156.38633728 -89.27931976]
[-160.67721558 -102.03878021]
[-158.12260437 -115.14550781]
[-169.32090759 -125.12538910]
[-180.51919556 -135.10527039]
[-189.01226807 -138.48086548]
[-191.81114197 -145.32492065]
[-202.85517883 -155.47523499]
[-213.89923096 -165.62556458]
[-224.94328308 -175.77587891]
[-235.98733521 -185.92619324]
[-242.35337830 -187.73910522]
[-246.25885010 -191.87582397]
[-247.20822144 -196.56080627]
[-257.93603516 -207.04479980]
[-268.66381836 -217.52880859]
[-279.39163208 -228.01280212]
[-291.46295166 -222.62577820]
[-304.61480713 -221.66534424]
[-317.27917480 -225.22422791]
[-327.95358276 -232.85766602]
[-335.37936401 -243.63882446]
[-338.68991089 -256.27133179]
[-337.51199341 -269.24511719]
[-332.00747681 -281.01693726]
[-342.40896606 -291.82476807]
[-352.81045532 -302.63256836]
[-363.29446411 -313.36038208]
[-373.86035156 -324.00753784]
[-389.07308960 -328.35296631]
[-392.54608154 -342.83700562]
[-403.11196899 -353.48416138]
[-413.67785645 -364.13131714]
[-424.24374390 -374.77847290]
[-434.80963135 -385.42565918]
[-445.37551880 -396.07281494]
[-460.58828735 -400.41821289]
[-464.06124878 -414.90228271]
[-474.62713623 -425.54943848]
[-485.19302368 -436.19659424]
[-495.92083740 -446.68057251]
[-506.80804443 -456.99896240]
[-517.69525146 -467.31732178]
[-533.70654297 -468.32620239]
[-542.78222656 -481.55541992]
[-537.96014404 -496.85662842]
[-522.93945312 -502.49209595]
[-509.24270630 -494.13870239]
[-507.37689209 -478.20452881]
[-496.48968506 -467.88616943]
[-485.60247803 -457.56777954]
[-480.88455200 -456.79858398]
[-476.60128784 -453.05441284]
[-474.54586792 -446.76248169]
[-463.97998047 -436.11532593]
[-453.41409302 -425.46817017]
[-438.95709229 -421.88430786]
[-434.72836304 -406.63870239]
[-424.16247559 -395.99154663]
[-413.59658813 -385.34436035]
[-403.03070068 -374.69720459]
[-392.46481323 -364.05004883]
[-381.89892578 -353.40289307]
[-367.44189453 -349.81903076]
[-363.21319580 -334.57342529]
[-352.64730835 -323.92626953]
[-345.70104980 -321.39160156]
[-342.00262451 -313.03405762]
[-331.60113525 -302.22625732]
[-321.19967651 -291.41842651]
[-305.31195068 -297.15472412]
[-288.45974731 -295.36578369]
[-274.03652954 -286.36315918]
[-264.96795654 -271.91595459]
[-263.11834717 -254.90330505]
[-268.90765381 -238.74060059]
[-258.17984009 -228.25660706]
[-247.45202637 -217.77261353]
[-236.72421265 -207.28862000]
[-225.83702087 -196.97024536]
[-214.79296875 -186.81993103]
[-203.74891663 -176.66961670]
[-192.70486450 -166.51928711]
[-181.66081238 -156.36897278]
[-170.53932190 -146.30357361]
[-159.34101868 -136.32368469]
[-148.14271545 -126.34380341]
[-132.22586060 -130.35122681]
[-116.90258789 -124.01987457]
[-108.28555298 -109.66114807]
[-109.93944550 -92.83010101]
[-98.58952332 -83.02299500]
[-87.23960876 -73.21588898]
[-75.88969421 -63.40877914]
[-64.53977203 -53.60166931]
[-51.23448181 -60.37651062]
[-36.30860901 -61.54431534]
[-22.03420067 -56.89608002]
[-10.59609127 -47.11051559]
[-3.75751567 -33.65512466]
[-2.58832431 -18.56618881]
[-7.29773092 -4.14061546]
[4.05218649 5.66649294]
[15.40210438 15.47360134]
[26.75202179 25.28070831]
[38.10194016 35.08781815]
[50.18822861 34.52177429]
[59.72478104 42.60348892]
[61.24439240 55.41496658]
[72.44269562 65.39485168]
[83.64099121 75.37473297]
[92.02543640 71.53199768]
[101.18601227 70.45995331]
[110.23116302 72.26294708]
[118.28054810 76.76549530]
[124.55075073 83.52937317]
[128.43150330 91.89629364]
[129.54512024 101.05191040]
[127.78321075 110.10515594]
[140.11791992 118.64067078]
[152.45262146 127.17618561]
[164.78732300 135.71170044]
[177.18707275 144.15246582]
[189.65112305 152.49795532]
[202.11517334 160.84344482]
[214.57923889 169.18894958]
[227.04328918 177.53443909]
[239.50735474 185.87994385]
[259.65823364 186.30358887]
[267.44201660 204.00086975]
[280.15594482 211.96047974]
[292.86990356 219.92010498]
[305.58386230 227.87971497]
[318.29779053 235.83932495]
[331.01174927 243.79895020]
[343.72570801 251.75856018]
[356.43966675 259.71817017]
[370.35186768 253.05081177]
[385.65737915 254.98605347]
[397.47222900 264.90637207]
[402.02636719 279.64624023]
[397.86654663 294.50219727]
[386.32022095 304.73379517]
[371.07168579 307.07611084]
[356.98678589 300.78179932]
[348.55990601 287.85928345]
[348.48004150 272.43212891]
[335.76608276 264.47250366]
[323.05212402 256.51290894]
[310.33819580 248.55328369]
[297.62423706 240.59365845]
[284.91027832 232.63404846]
[272.19635010 224.67443848]
[259.48239136 216.71481323]
[249.76464844 219.89244080]
[239.69119263 217.13626099]
[232.65472412 209.12408447]
[231.16184998 198.34399414]
[218.69779968 189.99850464]
[206.23373413 181.65299988]
[193.76968384 173.30751038]
[181.30563354 164.96200562]
[168.84156799 156.61651611]
[161.53108215 155.50669861]
[156.25180054 148.04641724]
[143.91709900 139.51089478]
[131.58239746 130.97537231]
[119.24768829 122.43985748]
[113.32068634 126.39280701]
[106.62013245 128.81309509]
[106.16046143 143.80604553]
[105.70079041 158.79901123]
[105.24111176 173.79196167]
[115.14065552 186.41648865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[9 141]
[10 140]
[11 139]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[24 125]
[25 124]
[26 123]
[27 122]
[28 121]
[33 117]
[34 116]
[35 115]
[37 114]
[38 113]
[39 112]
[40 111]
[41 110]
[44 109]
[45 108]
[46 107]
[47 106]
[55 100]
[56 99]
[57 98]
[58 96]
[59 95]
[61 93]
[62 92]
[63 91]
[64 90]
[65 89]
[66 88]
[68 86]
[69 85]
[70 84]
[71 81]
[72 80]
[73 79]
[149 198]
[150 197]
[151 196]
[152 195]
[153 193]
[154 192]
[155 191]
[156 190]
[157 189]
[158 188]
[160 184]
[161 183]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
