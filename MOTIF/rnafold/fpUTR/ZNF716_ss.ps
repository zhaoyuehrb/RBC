%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUUGCUUCUCUGCGCCCAGAGCUCCAGUCCUUCUCUUCACUGCUCUGCGUCCUCUGCUCCUGGAGGCCAAGCCUCUGUGGCCUUGUGUCCUGCAAGUAUUCGCAGAUUU\
) } def
/len { sequence length } bind def

/coor [
[83.41197205 247.58447266]
[71.82519531 257.38809204]
[57.47809601 262.34039307]
[42.31099701 261.77157593]
[28.37512398 255.75860596]
[17.55519104 245.11465454]
[11.31450367 231.27926636]
[10.49706459 216.12353516]
[15.21342468 201.69714355]
[24.82573700 189.95117188]
[38.03401184 182.47415161]
[53.05194092 180.27728271]
[56.36071014 165.64677429]
[59.66947556 151.01625061]
[62.97824097 136.38572693]
[66.28701019 121.75521088]
[89.10856628 91.55278778]
[84.19657898 77.37984467]
[79.28458405 63.20690155]
[74.17606354 49.10360336]
[68.87198639 35.07268143]
[63.56791687 21.04175949]
[58.26384354 7.01083517]
[52.95977020 -7.02008820]
[48.92123795 7.42602825]
[41.06613922 20.20481491]
[30.00004959 30.33110046]
[16.57610321 37.02420807]
[1.82921076 39.76813889]
[-13.10372925 38.35134888]
[-27.07147408 32.88306808]
[-38.99718857 23.78486252]
[-47.96147537 11.75815964]
[-53.27323151 -2.26985645]
[-54.52295685 -17.21770477]
[-51.61430359 -31.93299484]
[-44.77151108 -45.28126144]
[-34.52212143 -56.23342896]
[-21.65629959 -63.94514847]
[-7.16592932 -67.82189941]
[7.83186722 -67.56478882]
[22.18084526 -63.19365692]
[34.77478409 -55.04548645]
[44.64276123 -43.74844742]
[51.02422333 -30.17280579]
[53.92501068 -44.88964844]
[56.82579803 -59.60648727]
[48.28989410 -72.63630676]
[51.44134903 -87.51995087]
[63.91588974 -95.57733154]
[66.81668091 -110.29417419]
[61.89419556 -125.33012390]
[71.94670868 -136.32086182]
[74.84749603 -151.03770447]
[77.74828339 -165.75454712]
[66.55689240 -176.37321472]
[62.90518951 -191.36216736]
[67.95841217 -205.93846130]
[80.10409546 -215.45086670]
[95.46660614 -216.86401367]
[109.14380646 -209.72695923]
[116.77136993 -196.31710815]
[115.91535187 -180.91351318]
[106.84891510 -168.43139648]
[92.46512604 -162.85375977]
[89.56433868 -148.13691711]
[86.66355133 -133.42007446]
[91.79351807 -119.43676758]
[81.53352356 -107.39338684]
[78.63273621 -92.67654419]
[87.11668396 -80.48810577]
[84.38452148 -65.52181244]
[71.54264069 -56.70570374]
[68.64185333 -41.98886108]
[65.74106598 -27.27201843]
[66.99069214 -12.32416153]
[72.29476929 1.70676208]
[77.59883881 15.73768520]
[82.90291595 29.76860809]
[88.20698547 43.79953384]
[93.59149933 49.01674652]
[93.45753479 58.29491043]
[98.36952209 72.46785736]
[103.28150940 86.64080048]
[113.51318359 97.60952759]
[127.31077576 103.49394226]
[141.10836792 109.37835693]
[154.90596008 115.26277924]
[168.70356750 121.14719391]
[184.06507874 116.52081299]
[197.17738342 125.76456451]
[197.98184204 141.78742981]
[185.86134338 152.29804993]
[170.11369324 149.23356628]
[162.81913757 134.94479370]
[149.02154541 129.06037903]
[135.22395325 123.17595673]
[121.42636108 117.29153442]
[107.62876129 111.40711975]
[100.95095825 114.82133484]
[111.57227325 125.41320038]
[104.78096008 138.78773499]
[89.96239471 136.46173096]
[87.59533691 121.64976501]
[80.91752625 125.06398010]
[77.60875702 139.69450378]
[74.29999542 154.32501221]
[70.99122620 168.95553589]
[67.68245697 183.58605957]
[80.29360199 192.03137207]
[88.99913788 204.46432495]
[92.62171173 219.20343018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 109]
[13 108]
[14 107]
[15 106]
[16 105]
[17 84]
[18 83]
[19 82]
[20 80]
[21 79]
[22 78]
[23 77]
[24 76]
[45 75]
[46 74]
[47 73]
[50 70]
[51 69]
[53 67]
[54 66]
[55 65]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
