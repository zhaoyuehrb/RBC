%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGGAAGCUCGCGCCGCCGUCGCCGCCGCCGCUCAGCUUCCCCGGGCGCGUCCAGGACCCGCUGCGCCAGGCGCGCCGUCCCCGGACCCGGCGUGCGUCCCUACGAGGAAAGGGACCCCGCCGCUCGAGCCGCCUCCGCCAGCCCCACUGCGAGGGGUCCCAGAGCCAGCCGCGCCCGCCCUCGCCCCCGGCCCCGCAGCCUUCCCGCCCUGCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[67.91597748 258.20547485]
[54.75495148 265.40182495]
[43.84385681 255.10871887]
[50.26139450 241.55096436]
[42.82269287 240.59403992]
[33.36356735 252.23556519]
[23.90444183 263.87707520]
[14.44531536 275.51858521]
[4.98618984 287.16012573]
[-4.47293615 298.80163574]
[-13.93206215 310.44314575]
[-16.42367172 328.69140625]
[-33.05491257 334.30197144]
[-42.34759903 346.07675171]
[-51.64028931 357.85156250]
[-54.11598969 373.47787476]
[-68.07437134 378.67526245]
[-77.36705780 390.45007324]
[-79.84275818 406.07635498]
[-93.80113983 411.27374268]
[-103.09382629 423.04855347]
[-104.91890717 439.34582520]
[-120.05162048 445.66506958]
[-132.92474365 435.50561523]
[-130.29548645 419.31860352]
[-114.86862946 413.75585938]
[-105.57594299 401.98107910]
[-103.76491547 387.19696045]
[-89.14186096 381.15737915]
[-79.84917450 369.38256836]
[-78.03814697 354.59848022]
[-63.41508865 348.55886841]
[-54.12240219 336.78408813]
[-44.82971573 325.00927734]
[-45.93408966 312.96786499]
[-38.29492569 303.08306885]
[-25.57357979 300.98403931]
[-16.11445427 289.34249878]
[-6.65532827 277.70098877]
[2.80379772 266.05947876]
[12.26292324 254.41795349]
[21.72204971 242.77644348]
[31.18117523 231.13491821]
[48.85431290 214.88485718]
[67.12391663 215.24760437]
[67.97637939 200.27185059]
[68.82884216 185.29609680]
[69.68130493 170.32032776]
[70.53376007 155.34457397]
[71.38622284 140.36882019]
[72.23868561 125.39306641]
[64.52428436 112.52884674]
[50.91220093 106.22717285]
[37.30011368 99.92549896]
[23.68802643 93.62382507]
[5.38806772 95.70183563]
[-4.14457178 80.96394348]
[-17.84486008 74.85639954]
[-31.54515076 68.74885559]
[-45.24544144 62.64131546]
[-57.54148865 66.52020264]
[-68.82422638 61.15682602]
[-73.28294373 49.91695404]
[-86.89503479 43.61528015]
[-95.98989868 42.85128784]
[-100.65484619 37.12606430]
[-114.17597961 30.63153458]
[-127.69711304 24.13700294]
[-141.21824646 17.64247322]
[-158.11366272 16.23484993]
[-161.43815613 -0.38995197]
[-146.38337708 -8.18673420]
[-134.72372437 4.12133884]
[-121.20258331 10.61586857]
[-107.68144989 17.11039925]
[-94.16031647 23.60492897]
[-80.59336090 30.00319290]
[-66.98127747 36.30486679]
[-49.61018753 33.79052353]
[-39.13789749 48.94102478]
[-25.43760872 55.04856873]
[-11.73731899 61.15610886]
[1.96297061 67.26364899]
[13.36178398 63.22855377]
[24.82313156 68.19881439]
[29.98969841 80.01174164]
[43.60178757 86.31341553]
[57.21387482 92.61508942]
[70.82595825 98.91675568]
[73.28239441 86.22209930]
[81.14353943 75.48550415]
[93.16485596 68.94882202]
[92.09960175 53.98669434]
[91.03434753 39.02456665]
[89.96909332 24.06243896]
[78.84783173 16.47209930]
[74.19442749 4.04469061]
[77.49705505 -8.60686302]
[87.33394623 -16.92280579]
[86.48148346 -31.89856148]
[85.62902069 -46.87432098]
[84.77656555 -61.85007858]
[83.92410278 -76.82583618]
[83.07164001 -91.80158997]
[69.94766998 -100.08054352]
[64.22768402 -114.50487518]
[68.11113739 -129.52813721]
[80.10475159 -139.37358093]
[95.59674835 -140.25543213]
[108.63013458 -131.83459473]
[114.19330597 -117.34906006]
[110.14710999 -102.36880493]
[98.04739380 -92.65405273]
[98.89985657 -77.67829895]
[99.75231934 -62.70253754]
[100.60478210 -47.72677994]
[101.45724487 -32.75102234]
[102.30970001 -17.77526665]
[115.32644653 -7.12094212]
[116.63215637 9.98832703]
[104.93122101 22.99718475]
[105.99647522 37.95931244]
[107.06172943 52.92144012]
[108.12698364 67.88356781]
[121.45803833 74.75983429]
[134.26708984 66.95420074]
[147.07615662 59.14855957]
[159.88522339 51.34292221]
[163.65386963 32.77068710]
[179.53259277 23.02469826]
[197.18244934 27.90243530]
[209.76445007 19.73583031]
[222.34643555 11.56922531]
[227.83580017 4.27763653]
[235.16583252 3.37743878]
[247.86264038 -4.60948944]
[260.55944824 -12.59641743]
[273.25625610 -20.58334541]
[278.84872437 -27.79616737]
[286.19082642 -28.59207916]
[298.99987793 -36.39771652]
[304.69427490 -43.53031158]
[312.04696655 -44.22177887]
[324.96566772 -51.84454727]
[330.34710693 -66.95810699]
[345.56484985 -72.03742218]
[358.94519043 -63.18606949]
[360.22384644 -47.19405365]
[348.41995239 -36.32907867]
[332.58843994 -38.92582321]
[319.66973877 -31.30305481]
[306.80551147 -23.58865547]
[293.99645996 -15.78301907]
[281.24319458 -7.88653612]
[268.54638672 0.10039201]
[255.84957886 8.08732033]
[243.15275574 16.07424927]
[230.51304626 24.15121841]
[217.93104553 32.31782532]
[205.34906006 40.48442841]
[205.45054626 51.88442993]
[199.98263550 62.02438736]
[190.20048523 68.33320618]
[178.46885681 69.14824677]
[167.69085693 64.15198517]
[154.88179016 71.95761871]
[142.07273865 79.76325989]
[129.26367188 87.56889343]
[131.36106873 100.08164978]
[128.40251160 112.24025726]
[120.99913025 122.11203766]
[110.45699310 128.18354797]
[98.54840088 129.59196472]
[87.21444702 126.24552155]
[86.36198425 141.22128296]
[85.50952148 156.19703674]
[84.65705872 171.17279053]
[83.80459595 186.14855957]
[82.95213318 201.12431335]
[82.09967804 216.10006714]
[87.94580078 202.28620911]
[99.36377716 192.55842590]
[113.93088531 188.98080444]
[128.55619812 192.31246948]
[140.13645935 201.84649658]
[146.21450806 215.55990601]
[145.50065613 230.54290771]
[138.14640808 243.61634827]
[125.71218109 252.00622559]
[110.83636475 253.93235779]
[96.67536163 248.98603821]
[86.23403931 238.21696472]
[92.43880463 251.87348938]
[98.64356995 265.53002930]
[110.41947174 270.78042603]
[115.30814362 282.27682495]
[111.19213104 293.64666748]
[117.20214081 307.39001465]
[123.21215057 321.13336182]
[129.22216797 334.87670898]
[135.23217773 348.62008667]
[150.50465393 350.24703979]
[162.90806580 359.30523682]
[169.10594177 373.35806274]
[167.43110657 388.62536621]
[158.33407593 401.00033569]
[144.26190186 407.15414429]
[128.99992371 405.43145752]
[116.65354156 396.29565430]
[110.54387665 382.20425415]
[112.31438446 366.94775391]
[121.48882294 354.63009644]
[115.47881317 340.88671875]
[109.46879578 327.14337158]
[103.45878601 313.40002441]
[97.44877625 299.65667725]
[82.77901459 290.01953125]
[84.98703003 271.73480225]
[78.78227234 258.07824707]
[72.57750702 244.42172241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 43]
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[13 34]
[14 33]
[15 32]
[17 30]
[18 29]
[20 27]
[21 26]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[52 89]
[53 88]
[54 87]
[55 86]
[57 83]
[58 82]
[59 81]
[60 80]
[63 78]
[64 77]
[66 76]
[67 75]
[68 74]
[69 73]
[92 124]
[93 123]
[94 122]
[95 121]
[99 118]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[125 168]
[126 167]
[127 166]
[128 165]
[131 160]
[132 159]
[133 158]
[135 157]
[136 156]
[137 155]
[138 154]
[140 153]
[141 152]
[143 151]
[144 150]
[192 220]
[193 219]
[194 218]
[197 216]
[198 215]
[199 214]
[200 213]
[201 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
