%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:00:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUAGUGCUGAGCACAUCCAGUGGGUAAAGUUCCUUAAAAUGCUCUGCAAAGAAAUUGGGACUUUUCAUUAAAUCAGAAAUUUUACUUUUUUCCCCUCCUGGGAGCUAAAGAUAUUUUAGAGAAGAAUUAACCUUUUGCUUCUCCAGUUGAACAUUUGUAGCAAUAAGUC\
) } def
/len { sequence length } bind def

/coor [
[77.59980011 268.16253662]
[77.32584381 253.16502380]
[77.05187988 238.16752625]
[76.77791595 223.17002869]
[76.50395966 208.17253113]
[68.53549957 195.58869934]
[76.01946259 181.64952087]
[75.74549866 166.65202332]
[75.47153473 151.65452576]
[75.19757843 136.65701294]
[74.92361450 121.65952301]
[67.94343567 108.38258362]
[55.74409103 99.65470123]
[43.54474640 90.92681122]
[32.88908005 93.33053589]
[22.88264084 89.53139496]
[16.76432991 81.01866150]
[16.37035179 70.76291656]
[4.49790478 61.59531403]
[-7.37454271 52.42770767]
[-19.24699020 43.26010132]
[-31.11943817 34.09249496]
[-49.40560532 32.07514954]
[-55.46739960 15.62308121]
[-67.50530243 6.67384386]
[-79.54321289 -2.27539372]
[-93.34025574 9.50879192]
[-117.21958923 6.73278856]
[-132.05973816 4.54877090]
[-146.89988708 2.36475348]
[-161.74003601 0.18073586]
[-176.58018494 -2.00328159]
[-191.42033386 -4.18729925]
[-206.26049805 -6.37131691]
[-221.10064697 -8.55533409]
[-229.51087952 6.03351021]
[-242.84071350 16.26330757]
[-259.03775024 20.59440804]
[-275.62164307 18.39266396]
[-290.06402588 10.02210999]
[-300.17379761 -3.21487617]
[-304.42971802 -19.28013802]
[-319.33972168 -20.92070580]
[-334.24975586 -22.56127548]
[-350.65515137 -18.28355217]
[-359.30715942 -32.86363983]
[-347.69198608 -45.21370316]
[-332.60916138 -37.47129059]
[-317.69915771 -35.83072281]
[-302.78915405 -34.19015503]
[-297.14193726 -46.22851562]
[-288.03698730 -55.95068359]
[-276.35437012 -62.39628983]
[-263.22973633 -64.92267609]
[-249.94384766 -63.26894760]
[-237.79769897 -57.58282471]
[-227.98501587 -48.40758514]
[-221.47500610 -36.63017654]
[-218.91662598 -23.39548492]
[-204.07647705 -21.21146774]
[-189.23632812 -19.02745056]
[-174.39617920 -16.84343147]
[-159.55601501 -14.65941429]
[-144.71586609 -12.47539711]
[-129.87571716 -10.29137993]
[-115.03556824 -8.10736179]
[-109.35929871 -13.00939941]
[-121.33568573 -22.04080200]
[-133.31207275 -31.07220459]
[-146.72456360 -37.78823471]
[-151.45086670 -52.02417755]
[-144.71824646 -65.42834473]
[-130.47645569 -70.13702393]
[-117.08063507 -63.38781357]
[-112.38952637 -49.14094925]
[-105.19814301 -35.97721100]
[-98.00675964 -22.81347275]
[-92.33049011 -27.71550941]
[-92.33049011 -42.71551132]
[-92.33049011 -57.71551132]
[-92.33049011 -72.71550751]
[-105.36412048 -80.96948242]
[-111.84554291 -94.96929169]
[-109.70656586 -110.24765778]
[-99.62971497 -121.92929840]
[-84.83049011 -126.28664398]
[-70.03127289 -121.92929840]
[-59.95442200 -110.24765778]
[-57.81544113 -94.96929169]
[-64.29686737 -80.96948242]
[-77.33049011 -72.71550751]
[-77.33049011 -57.71551132]
[-77.33049011 -42.71551132]
[-77.33049011 -27.71550941]
[-70.59397125 -14.31329823]
[-58.55606842 -5.36406088]
[-46.51816177 3.58517647]
[-34.48517227 2.13839006]
[-24.37688637 9.52736092]
[-21.95183182 22.22004890]
[-10.07938480 31.38765335]
[1.79306293 40.55525970]
[13.66551018 49.72286606]
[25.53795815 58.89047241]
[44.81944275 60.02350235]
[52.27262878 78.72747040]
[64.47197723 87.45535278]
[76.67132568 96.18323517]
[70.14975739 82.67511749]
[63.42833328 69.26533508]
[62.14804459 54.32006836]
[66.49077606 39.96246719]
[75.83959198 28.23218155]
[88.86639404 20.79561996]
[103.72058105 18.70923042]
[118.29196167 22.26940536]
[130.51051331 30.97038269]
[138.64045715 43.57609558]
[141.52685547 58.29576874]
[138.75994873 73.03754425]
[124.68941498 78.23563385]
[139.52957153 80.41965485]
[154.36972046 82.60366821]
[169.20986938 84.78768921]
[184.05001831 86.97170258]
[198.89016724 89.15572357]
[213.74964905 91.20412445]
[228.62721252 93.11673737]
[239.17578125 81.73661041]
[254.40530396 78.76322174]
[268.45974731 85.33990479]
[275.93484497 98.93778229]
[273.95629883 114.32820129]
[263.28488159 125.59323120]
[248.02400208 128.40122986]
[234.04174805 121.67247009]
[226.71459961 107.99430084]
[211.83703613 106.08168793]
[204.77577209 108.35597229]
[196.70614624 103.99587250]
[181.86599731 101.81185150]
[167.02584839 99.62783813]
[152.18569946 97.44381714]
[137.34555054 95.25980377]
[122.50539398 93.07578278]
[115.28388977 106.22302246]
[125.08796692 117.57556152]
[134.89204407 128.92810059]
[150.34249878 127.49176025]
[163.66921997 135.44021606]
[169.74781799 149.71713257]
[166.24095154 164.83273315]
[154.49707031 174.97476196]
[139.03195190 176.24342346]
[125.79222870 168.15086365]
[119.86886597 153.80885315]
[123.53950500 138.73217773]
[113.73542786 127.37963867]
[103.93135834 116.02709961]
[89.92111206 121.38555908]
[90.19507599 136.38305664]
[90.46903229 151.38055420]
[90.74299622 166.37805176]
[91.01696014 181.37554932]
[99.00501251 195.03210449]
[91.50145721 207.89857483]
[91.77541351 222.89607239]
[92.04937744 237.89356995]
[92.32334137 252.89106750]
[92.59729767 267.88854980]
[95.13949585 287.10281372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[3 168]
[4 167]
[5 166]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 108]
[13 107]
[14 106]
[18 104]
[19 103]
[20 102]
[21 101]
[22 100]
[24 97]
[25 96]
[26 95]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[35 59]
[42 50]
[43 49]
[44 48]
[78 94]
[79 93]
[80 92]
[81 91]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
[127 138]
[128 137]
[146 159]
[147 158]
[148 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
