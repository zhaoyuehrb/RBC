%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUCAUCGGAGGCGUGGUCGUCCCCAAAAUUAGGGAGGAAGAGGAAAAAAAAAAGCCAGAAAAAGUUUUCUUUUCUGGAGUCCCAAACGAGGUGCGGGACGGAAGAGGGGGUGAAGGCCAGAGGCUCGGGGCUUCAAGACCGCUGUCUGGAGUCCCCCUUUCCAGGCC\
) } def
/len { sequence length } bind def

/coor [
[74.90013885 311.03479004]
[76.35403442 326.19415283]
[71.51021576 340.63220215]
[61.20789337 351.84744263]
[47.23202133 357.89682007]
[32.00399399 357.73220825]
[18.16216278 351.38211060]
[8.10470867 339.94674683]
[3.57414460 325.40734863]
[5.35541964 310.28298950]
[13.13991642 297.19400024]
[25.57892418 288.40814209]
[40.51731110 285.44766235]
[43.79752731 270.81069946]
[47.07774353 256.17376709]
[42.31092453 242.06254578]
[52.87879181 230.28839111]
[56.15900803 215.65144348]
[59.43922424 201.01449585]
[47.68724823 191.69296265]
[34.18126678 198.21894836]
[25.12184334 211.18957520]
[10.29598999 209.76011658]
[-3.20999050 216.28610229]
[-16.71597099 222.81208801]
[-30.22195244 229.33807373]
[-32.83995819 244.63270569]
[-43.97140884 255.44337463]
[-59.33603287 257.61315918]
[-73.02581787 250.30770874]
[-79.77677155 236.33616638]
[-76.99299622 221.07083130]
[-65.74492645 210.38156128]
[-50.35766983 208.37858582]
[-36.74793625 215.83209229]
[-23.24195671 209.30610657]
[-9.73597527 202.78012085]
[3.77000499 196.25413513]
[11.86339092 183.75028992]
[27.65528107 184.71296692]
[41.16126251 178.18698120]
[52.65192795 168.54516602]
[61.42406082 156.37759399]
[70.19618988 144.21002197]
[78.96831512 132.04244995]
[87.74044800 119.87488556]
[74.20874023 126.34735107]
[64.10855103 137.43727112]
[50.61226654 143.98327637]
[35.65018463 145.04913330]
[21.36225700 140.48237610]
[9.79202366 130.93618774]
[2.59431601 117.77590942]
[0.79858869 102.88378906]
[4.66167545 88.38977051]
[13.63105774 76.36686707]
[26.42642975 68.53370667]
[39.83695221 75.25366211]
[31.28983116 62.92699814]
[22.74271011 50.60033035]
[14.19558907 38.27366257]
[5.64846849 25.94699478]
[-2.89865208 13.62032890]
[-11.44577312 1.29366124]
[-19.99289322 -11.03300571]
[-35.58010101 -12.28718185]
[-46.67807007 -23.30394936]
[-48.04667282 -38.88152695]
[-39.03969955 -51.66466141]
[-23.90997124 -55.61754227]
[-9.80127811 -48.87374496]
[-3.37531590 -34.61748505]
[-7.66622686 -19.58012772]
[0.88089418 -7.25345945]
[9.42801476 5.07320786]
[17.97513580 17.39987564]
[26.52225685 29.72654152]
[35.06937790 42.05321121]
[43.61649704 54.37987518]
[52.16362000 66.70654297]
[66.91184235 63.96610641]
[81.65875244 61.22592926]
[85.20730591 46.65171432]
[88.75586700 32.07749939]
[92.30442047 17.50328445]
[95.85297394 2.92906928]
[87.90144348 -10.46536350]
[91.70779419 -25.19513893]
[104.52634430 -32.69316864]
[108.07489777 -47.26738358]
[105.94725800 -64.08729553]
[121.52085114 -70.78800201]
[132.27088928 -57.67797089]
[122.64911652 -43.71882629]
[119.10055542 -29.14461327]
[127.03739166 -16.59302711]
[123.64626312 -1.76214969]
[110.42719269 6.47762537]
[106.87863922 21.05183983]
[103.33007812 35.62605667]
[99.78152466 50.20027161]
[96.23297119 64.77448273]
[101.88877106 69.70012665]
[111.74021912 58.38867950]
[123.05151367 68.24031067]
[113.20036316 79.55140686]
[118.85616302 84.47705078]
[132.80484009 78.96030426]
[146.75350952 73.44355774]
[153.69982910 54.62855911]
[171.93962097 47.04725647]
[189.62374878 55.14247131]
[203.24732971 48.86570358]
[216.87092590 42.58893585]
[225.89172363 28.89378929]
[242.24433899 30.12844467]
[249.10658264 45.02279282]
[239.41917419 58.25481033]
[223.14768982 56.21252441]
[209.52409363 62.48929214]
[195.90051270 68.76605988]
[195.06042480 79.06216431]
[189.96520996 88.14146423]
[181.48361206 94.31802368]
[171.11997986 96.41284180]
[160.74763489 93.97842407]
[152.27026367 87.39223480]
[138.32157898 92.90898132]
[124.37290955 98.42572021]
[122.85980988 113.34921265]
[135.41729736 121.55343628]
[147.97480774 129.75765991]
[160.53230286 137.96188354]
[173.08979797 146.16610718]
[185.64729309 154.37031555]
[198.20478821 162.57453918]
[210.76228333 170.77876282]
[223.31977844 178.98298645]
[232.25270081 181.06962585]
[236.03070068 187.45504761]
[248.43534851 195.88858032]
[260.84002686 204.32211304]
[277.22573853 204.98588562]
[284.60308838 219.63192749]
[275.38290405 233.19364929]
[259.05010986 231.71990967]
[252.40647888 216.72677612]
[240.00183105 208.29324341]
[227.59716797 199.85971069]
[215.11555481 191.54048157]
[202.55805969 183.33625793]
[190.00056458 175.13204956]
[177.44306946 166.92782593]
[164.88557434 158.72360229]
[152.32807922 150.51937866]
[139.77058411 142.31515503]
[127.21308136 134.11093140]
[114.65558624 125.90670776]
[99.90802002 128.64701843]
[91.13588715 140.81459045]
[82.36375427 152.98214722]
[73.59162903 165.14971924]
[64.81949615 177.31729126]
[74.07617188 204.29470825]
[70.79595184 218.93165588]
[67.51573944 233.56860352]
[72.04792786 248.72676086]
[61.71468735 259.45397949]
[58.43447113 274.09094238]
[55.15425491 288.72787476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 170]
[14 169]
[15 168]
[17 166]
[18 165]
[19 164]
[20 41]
[21 40]
[23 38]
[24 37]
[25 36]
[26 35]
[42 163]
[43 162]
[44 161]
[45 160]
[46 159]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
[89 95]
[90 94]
[107 129]
[108 128]
[109 127]
[112 121]
[113 120]
[114 119]
[130 158]
[131 157]
[132 156]
[133 155]
[134 154]
[135 153]
[136 152]
[137 151]
[138 150]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
