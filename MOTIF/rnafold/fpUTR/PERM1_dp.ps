%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PERM1)
} def

/sequence { (\
AUGCCGACCCAGGACGGGCAGCUCAGACGCCCAGCUCGGCCGCCGGGACCCAGUGCCUCUGCUGACUCCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 11 0.037980337 ubox
2 16 0.122436291 ubox
2 20 0.072412175 ubox
2 42 0.058422213 ubox
2 45 0.089754034 ubox
2 52 0.004160068 ubox
2 70 0.036005867 ubox
3 10 0.041857434 ubox
3 15 0.485650598 ubox
3 19 0.086309279 ubox
3 22 0.035441188 ubox
3 40 0.514994930 ubox
3 41 0.058575822 ubox
3 43 0.094345156 ubox
3 44 0.126166290 ubox
3 51 0.004854423 ubox
3 62 0.010883425 ubox
3 69 0.040410757 ubox
4 13 0.739515252 ubox
4 17 0.112205744 ubox
4 18 0.084644424 ubox
4 21 0.035442298 ubox
4 39 0.520010963 ubox
4 42 0.077234130 ubox
4 46 0.056601089 ubox
4 47 0.011123859 ubox
4 61 0.010835808 ubox
5 12 0.740754601 ubox
5 16 0.117752818 ubox
5 17 0.081576269 ubox
5 38 0.520018098 ubox
5 42 0.153877291 ubox
5 45 0.087103322 ubox
5 46 0.011062028 ubox
5 64 0.005353496 ubox
6 15 0.120278603 ubox
6 24 0.003653319 ubox
6 37 0.519636731 ubox
6 41 0.164407617 ubox
6 44 0.087071421 ubox
6 59 0.010375113 ubox
6 63 0.004971787 ubox
6 68 0.095026083 ubox
7 23 0.003645686 ubox
7 36 0.415664561 ubox
7 58 0.009675661 ubox
7 67 0.094419444 ubox
8 17 0.025287360 ubox
8 18 0.198594377 ubox
8 39 0.145595358 ubox
8 46 0.025630400 ubox
8 47 0.094078848 ubox
9 16 0.026248402 ubox
9 17 0.200009218 ubox
9 18 0.011561371 ubox
9 38 0.144625343 ubox
9 39 0.108821002 ubox
9 45 0.035987895 ubox
9 46 0.095149938 ubox
9 47 0.009732013 ubox
10 16 0.200000482 ubox
10 17 0.011719191 ubox
10 38 0.110277109 ubox
10 45 0.096089110 ubox
10 46 0.009747132 ubox
10 55 0.003792402 ubox
10 61 0.010215928 ubox
10 64 0.112395465 ubox
11 36 0.155090602 ubox
11 54 0.003410095 ubox
11 58 0.004970478 ubox
11 60 0.010285939 ubox
11 63 0.112500062 ubox
11 67 0.003668050 ubox
12 31 0.069498918 ubox
12 32 0.046552060 ubox
12 35 0.206925644 ubox
12 36 0.317940231 ubox
12 37 0.020832879 ubox
12 41 0.144519232 ubox
12 44 0.054677643 ubox
12 50 0.004629556 ubox
12 57 0.006445795 ubox
12 59 0.010236201 ubox
12 60 0.003735181 ubox
12 62 0.112381299 ubox
12 63 0.003625712 ubox
12 66 0.003932336 ubox
12 68 0.003939869 ubox
12 69 0.159326304 ubox
13 30 0.069645516 ubox
13 31 0.046305623 ubox
13 35 0.485794817 ubox
13 36 0.009073013 ubox
13 37 0.014297372 ubox
13 40 0.141968823 ubox
13 43 0.054668892 ubox
13 49 0.004629271 ubox
13 56 0.006446388 ubox
13 58 0.005883984 ubox
13 59 0.006756740 ubox
13 62 0.004626330 ubox
13 66 0.003235350 ubox
13 68 0.158940322 ubox
14 36 0.014762462 ubox
14 54 0.004310261 ubox
14 58 0.005404446 ubox
14 67 0.142656076 ubox
15 29 0.082752452 ubox
15 38 0.147590599 ubox
15 42 0.052019047 ubox
15 45 0.065483143 ubox
15 53 0.004324835 ubox
15 55 0.003279146 ubox
15 61 0.006235409 ubox
15 64 0.014583841 ubox
16 23 0.004694550 ubox
16 24 0.008950334 ubox
16 28 0.082556846 ubox
16 31 0.004395459 ubox
16 32 0.549998735 ubox
16 37 0.149964012 ubox
16 41 0.049057560 ubox
16 44 0.055318043 ubox
16 51 0.003520741 ubox
16 58 0.109139274 ubox
16 59 0.012838426 ubox
16 60 0.003707209 ubox
16 63 0.012129820 ubox
16 67 0.083537457 ubox
16 68 0.544460826 ubox
16 69 0.456591566 ubox
17 22 0.007585807 ubox
17 23 0.010527048 ubox
17 24 0.011404989 ubox
17 30 0.004033191 ubox
17 31 0.551119680 ubox
17 32 0.006328331 ubox
17 36 0.150008490 ubox
17 40 0.045804752 ubox
17 41 0.025482397 ubox
17 43 0.040840851 ubox
17 44 0.180267579 ubox
17 50 0.003550438 ubox
17 57 0.113613984 ubox
17 62 0.009381389 ubox
17 63 0.050700878 ubox
17 66 0.110264060 ubox
17 67 0.553807084 ubox
17 68 0.455820616 ubox
17 69 0.083385227 ubox
18 22 0.010461688 ubox
18 23 0.008029000 ubox
18 30 0.551127170 ubox
18 31 0.006259139 ubox
18 35 0.151084192 ubox
18 40 0.031426503 ubox
18 43 0.184581181 ubox
18 49 0.003540594 ubox
18 56 0.113652271 ubox
18 62 0.052731483 ubox
18 66 0.683900209 ubox
18 67 0.192527329 ubox
18 68 0.083674795 ubox
19 29 0.550691773 ubox
19 34 0.151175525 ubox
19 39 0.035740052 ubox
19 42 0.188053407 ubox
19 55 0.113528319 ubox
19 61 0.053242791 ubox
19 64 0.769279632 ubox
20 36 0.063641199 ubox
20 54 0.096383088 ubox
20 60 0.052992169 ubox
20 63 0.770719627 ubox
20 67 0.055011338 ubox
21 30 0.161973017 ubox
21 35 0.076369530 ubox
21 40 0.188906865 ubox
21 43 0.004921022 ubox
21 54 0.058430623 ubox
21 56 0.009743146 ubox
21 59 0.051887379 ubox
21 62 0.770098134 ubox
21 66 0.058232101 ubox
22 29 0.162027689 ubox
22 34 0.076410598 ubox
22 39 0.188858002 ubox
22 42 0.004923630 ubox
22 47 0.004762800 ubox
22 53 0.099708849 ubox
22 55 0.010839311 ubox
22 61 0.722869306 ubox
23 33 0.072753468 ubox
23 38 0.173972065 ubox
23 39 0.006963826 ubox
23 46 0.004795707 ubox
23 52 0.096380411 ubox
23 65 0.067050387 ubox
24 38 0.057260232 ubox
24 45 0.006239511 ubox
24 55 0.018252884 ubox
24 61 0.271626579 ubox
24 64 0.068745199 ubox
25 36 0.147033831 ubox
25 54 0.018165061 ubox
25 58 0.467113372 ubox
25 60 0.571952109 ubox
25 63 0.068582223 ubox
26 35 0.149074374 ubox
26 37 0.113024433 ubox
26 57 0.471331434 ubox
26 59 0.607821931 ubox
26 62 0.068359957 ubox
26 68 0.006939113 ubox
27 36 0.112922759 ubox
27 54 0.032189552 ubox
27 58 0.602342001 ubox
27 67 0.006816534 ubox
28 42 0.013758561 ubox
28 53 0.033637761 ubox
28 55 0.466633341 ubox
28 61 0.037591644 ubox
29 35 0.113210788 ubox
29 40 0.030110044 ubox
29 41 0.011459970 ubox
29 43 0.003565660 ubox
29 54 0.468792023 ubox
29 56 0.611080717 ubox
29 60 0.033168213 ubox
30 34 0.112502761 ubox
30 39 0.031235864 ubox
30 42 0.003803334 ubox
30 46 0.003353564 ubox
30 47 0.120028188 ubox
30 53 0.467336877 ubox
30 55 0.610956853 ubox
31 38 0.031157310 ubox
31 39 0.010232557 ubox
31 45 0.003343320 ubox
31 46 0.122004480 ubox
31 47 0.018450055 ubox
32 38 0.010398318 ubox
32 45 0.121926589 ubox
32 46 0.018390261 ubox
32 55 0.032143810 ubox
32 61 0.010324041 ubox
32 64 0.059558517 ubox
33 54 0.040630381 ubox
33 60 0.010740249 ubox
33 63 0.067670447 ubox
33 67 0.045276175 ubox
34 40 0.007335086 ubox
34 43 0.124472373 ubox
34 54 0.606147287 ubox
34 56 0.007412316 ubox
34 59 0.010739246 ubox
34 62 0.068502440 ubox
34 66 0.048890175 ubox
35 39 0.007302713 ubox
35 42 0.124396776 ubox
35 46 0.012035049 ubox
35 47 0.478287685 ubox
35 53 0.611924097 ubox
35 55 0.007448071 ubox
35 61 0.068444022 ubox
36 46 0.478521043 ubox
36 47 0.003496554 ubox
36 52 0.604941920 ubox
36 65 0.060358965 ubox
37 45 0.482623749 ubox
37 46 0.003584818 ubox
37 64 0.062415606 ubox
38 44 0.482691300 ubox
38 50 0.609428037 ubox
38 51 0.061701234 ubox
38 57 0.060891710 ubox
38 58 0.034864937 ubox
38 59 0.004269317 ubox
38 63 0.062401166 ubox
39 43 0.474900364 ubox
39 49 0.610118754 ubox
39 50 0.058572451 ubox
39 56 0.061141854 ubox
39 57 0.035321612 ubox
39 62 0.062465379 ubox
40 46 0.016833749 ubox
40 47 0.613009885 ubox
40 55 0.043736597 ubox
40 61 0.061322547 ubox
41 45 0.027573001 ubox
41 46 0.612935181 ubox
41 55 0.059791506 ubox
41 61 0.012306632 ubox
41 64 0.017078317 ubox
42 54 0.073722763 ubox
42 56 0.004798449 ubox
42 60 0.015414539 ubox
42 62 0.051219809 ubox
42 63 0.005452622 ubox
43 53 0.073987916 ubox
43 55 0.004760386 ubox
43 61 0.051315671 ubox
44 61 0.004977739 ubox
44 64 0.005139572 ubox
45 51 0.074108101 ubox
45 57 0.073307253 ubox
45 58 0.029878985 ubox
45 59 0.026537037 ubox
45 60 0.004730860 ubox
45 63 0.005129062 ubox
45 67 0.003829377 ubox
45 68 0.046257169 ubox
45 69 0.097761774 ubox
46 50 0.072979130 ubox
46 56 0.073405573 ubox
46 57 0.036617942 ubox
46 58 0.017978403 ubox
46 59 0.004619885 ubox
46 62 0.005112313 ubox
46 66 0.004235582 ubox
46 67 0.046797671 ubox
46 68 0.093687210 ubox
46 69 0.582900403 ubox
47 56 0.036647687 ubox
47 57 0.017949143 ubox
47 58 0.003703625 ubox
47 66 0.057657937 ubox
47 67 0.074768166 ubox
47 68 0.586442933 ubox
48 54 0.076315567 ubox
48 67 0.584086023 ubox
49 53 0.075812749 ubox
51 61 0.027482404 ubox
51 64 0.606020916 ubox
52 60 0.027861118 ubox
52 63 0.606459171 ubox
52 67 0.008626221 ubox
53 59 0.027891934 ubox
53 62 0.606375723 ubox
53 66 0.009814947 ubox
53 71 0.009039775 ubox
54 61 0.594481494 ubox
54 65 0.009324612 ubox
54 70 0.009150350 ubox
55 60 0.311910861 ubox
55 62 0.023957369 ubox
55 69 0.009166281 ubox
56 61 0.025475044 ubox
58 65 0.014588804 ubox
59 64 0.015749408 ubox
63 70 0.018258819 ubox
64 69 0.021230968 ubox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
16 68 0.9500000 lbox
17 67 0.9500000 lbox
18 66 0.9500000 lbox
19 64 0.9500000 lbox
20 63 0.9500000 lbox
21 62 0.9500000 lbox
22 61 0.9500000 lbox
25 60 0.9500000 lbox
26 59 0.9500000 lbox
27 58 0.9500000 lbox
29 56 0.9500000 lbox
30 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
