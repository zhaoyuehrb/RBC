%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UCK1)
} def

/sequence { (\
AGUGAUCGCUCCGGUUGCCUCCGACCUCGGCGCUGGGCGGGCGCGCCGGGCCUGGGGAAGGGGCGGGCGCGGGGACCCGAUGCGCGGGAGCGGAGGCCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.033415060 ubox
2 9 0.038553746 ubox
2 18 0.013720899 ubox
2 83 0.007581181 ubox
2 85 0.028172230 ubox
2 97 0.901325361 ubox
3 8 0.037002397 ubox
3 13 0.005369827 ubox
3 17 0.016384277 ubox
3 82 0.007393642 ubox
3 84 0.028292673 ubox
3 96 0.900113111 ubox
3 99 0.035335256 ubox
4 11 0.015602089 ubox
4 12 0.006944186 ubox
4 16 0.167233794 ubox
4 83 0.028251188 ubox
4 98 0.045744050 ubox
5 10 0.014359063 ubox
5 15 0.175803681 ubox
5 81 0.030992717 ubox
6 14 0.176577033 ubox
6 72 0.005990264 ubox
6 75 0.035920369 ubox
6 80 0.031435759 ubox
6 93 0.862907156 ubox
6 94 0.090002304 ubox
6 96 0.011043280 ubox
6 100 0.072601976 ubox
7 13 0.177315008 ubox
7 71 0.008111493 ubox
7 74 0.039278731 ubox
7 79 0.031471614 ubox
7 92 0.967304320 ubox
7 93 0.065364303 ubox
7 95 0.007447387 ubox
7 99 0.077569327 ubox
8 12 0.165910373 ubox
8 15 0.043709008 ubox
8 70 0.008156991 ubox
8 78 0.031354057 ubox
8 91 0.971395787 ubox
8 97 0.032811212 ubox
8 98 0.071620718 ubox
9 14 0.046450731 ubox
9 69 0.008032918 ubox
9 72 0.033274243 ubox
9 73 0.026747419 ubox
9 74 0.052029197 ubox
9 90 0.971415912 ubox
9 95 0.063713567 ubox
9 96 0.031005913 ubox
9 101 0.059979311 ubox
10 71 0.031855634 ubox
10 72 0.026850033 ubox
10 73 0.053096026 ubox
10 74 0.003494964 ubox
10 88 0.022763771 ubox
10 89 0.970919733 ubox
10 94 0.070015997 ubox
10 95 0.013556711 ubox
10 100 0.061568492 ubox
11 67 0.006915996 ubox
11 71 0.028445940 ubox
11 72 0.056899106 ubox
11 73 0.006558839 ubox
11 87 0.052582956 ubox
11 88 0.969684827 ubox
11 93 0.071343969 ubox
11 99 0.048997366 ubox
12 66 0.006956860 ubox
12 69 0.044706937 ubox
12 71 0.056882676 ubox
12 72 0.006451008 ubox
12 86 0.070660768 ubox
12 87 0.967919332 ubox
12 92 0.071294324 ubox
12 99 0.076820973 ubox
13 19 0.030899556 ubox
13 20 0.004323550 ubox
13 26 0.005753743 ubox
13 68 0.077792665 ubox
13 70 0.056363623 ubox
13 85 0.075778069 ubox
13 91 0.069800223 ubox
13 98 0.085888114 ubox
14 18 0.031470939 ubox
14 19 0.005166801 ubox
14 25 0.005770031 ubox
14 64 0.004079359 ubox
14 68 0.056774881 ubox
14 70 0.006472618 ubox
14 83 0.007698638 ubox
14 85 0.809687736 ubox
14 91 0.011034748 ubox
14 97 0.060116137 ubox
15 24 0.005773467 ubox
15 66 0.360374946 ubox
15 67 0.047644767 ubox
15 69 0.005619232 ubox
15 82 0.007012725 ubox
15 84 0.742877519 ubox
15 89 0.064898620 ubox
15 90 0.015510179 ubox
15 96 0.020282930 ubox
15 100 0.022588823 ubox
15 101 0.003418160 ubox
16 23 0.005753885 ubox
16 65 0.750185228 ubox
16 66 0.048281934 ubox
16 69 0.013264846 ubox
16 82 0.004100402 ubox
16 84 0.061639119 ubox
16 86 0.009839040 ubox
16 87 0.003641107 ubox
16 88 0.060980650 ubox
16 89 0.015540592 ubox
16 95 0.004182763 ubox
16 99 0.026411890 ubox
16 100 0.005577956 ubox
17 22 0.005556336 ubox
17 64 0.955171233 ubox
17 68 0.018697497 ubox
17 83 0.080755861 ubox
17 85 0.007778721 ubox
17 97 0.204571461 ubox
17 98 0.024188426 ubox
18 62 0.003752157 ubox
18 63 0.957541941 ubox
18 66 0.015470883 ubox
18 67 0.018703954 ubox
18 82 0.080382979 ubox
18 84 0.007786971 ubox
18 87 0.015511125 ubox
18 88 0.005740879 ubox
18 96 0.214368450 ubox
19 61 0.003612627 ubox
19 62 0.954005320 ubox
19 63 0.183710021 ubox
19 65 0.014552453 ubox
19 66 0.018091011 ubox
19 86 0.009089309 ubox
19 87 0.005437520 ubox
19 95 0.215710962 ubox
20 61 0.205046660 ubox
20 62 0.204737480 ubox
20 63 0.009052181 ubox
20 65 0.015539033 ubox
20 94 0.215716626 ubox
21 60 0.185993921 ubox
21 61 0.954367562 ubox
21 62 0.011023311 ubox
21 63 0.008726069 ubox
21 93 0.215748382 ubox
22 60 0.957918278 ubox
22 61 0.010863120 ubox
22 62 0.008707217 ubox
22 92 0.215744937 ubox
23 91 0.215555996 ubox
25 56 0.035187914 ubox
25 57 0.975415953 ubox
25 87 0.003290725 ubox
25 88 0.023492749 ubox
26 55 0.035110624 ubox
26 56 0.975790986 ubox
26 86 0.003293191 ubox
26 87 0.023469568 ubox
26 88 0.210881720 ubox
26 90 0.032429418 ubox
27 54 0.010176581 ubox
27 55 0.975170486 ubox
27 86 0.017576606 ubox
27 87 0.206126006 ubox
27 88 0.014173615 ubox
27 89 0.032374577 ubox
28 54 0.976165721 ubox
28 86 0.205232435 ubox
28 87 0.049168938 ubox
28 88 0.030576742 ubox
29 52 0.030182108 ubox
29 53 0.975171220 ubox
29 85 0.160654369 ubox
30 51 0.030422832 ubox
30 52 0.975627360 ubox
30 83 0.097899320 ubox
30 85 0.143464488 ubox
31 50 0.030638603 ubox
31 82 0.097968066 ubox
31 84 0.191939419 ubox
32 51 0.975768720 ubox
32 81 0.096219189 ubox
32 83 0.192212964 ubox
33 49 0.031577016 ubox
33 50 0.975858786 ubox
33 82 0.191931248 ubox
34 48 0.030964191 ubox
34 49 0.972699176 ubox
34 79 0.147354296 ubox
35 47 0.027503004 ubox
35 78 0.168882623 ubox
35 81 0.017705612 ubox
36 46 0.023092531 ubox
36 47 0.975966859 ubox
36 77 0.168943686 ubox
36 78 0.005657153 ubox
37 44 0.017529904 ubox
37 46 0.976166454 ubox
37 76 0.168659658 ubox
37 77 0.005640417 ubox
38 43 0.017525487 ubox
38 45 0.976259566 ubox
38 71 0.019766689 ubox
38 79 0.133819089 ubox
39 44 0.971891723 ubox
39 70 0.019813720 ubox
39 78 0.134056701 ubox
40 77 0.134057646 ubox
41 68 0.019819461 ubox
41 70 0.007058582 ubox
41 76 0.133965856 ubox
42 67 0.019819531 ubox
42 69 0.007077943 ubox
42 71 0.212646914 ubox
43 68 0.007076772 ubox
43 70 0.213059385 ubox
44 65 0.019816839 ubox
44 67 0.007069848 ubox
44 69 0.213060504 ubox
45 64 0.019823823 ubox
45 68 0.213058668 ubox
46 63 0.019812862 ubox
46 66 0.013399256 ubox
46 67 0.212758137 ubox
46 72 0.026719196 ubox
47 62 0.019773779 ubox
47 65 0.017561425 ubox
47 66 0.212324045 ubox
47 71 0.026739022 ubox
48 64 0.020329420 ubox
48 70 0.026746597 ubox
50 64 0.205052065 ubox
50 68 0.026753951 ubox
51 57 0.008038666 ubox
51 61 0.040138788 ubox
51 62 0.047264320 ubox
51 63 0.204739573 ubox
51 67 0.026756727 ubox
52 56 0.007983475 ubox
52 60 0.040337752 ubox
52 61 0.048977478 ubox
52 62 0.204298217 ubox
52 66 0.026756538 ubox
53 59 0.040505011 ubox
53 60 0.049789342 ubox
53 61 0.202364415 ubox
53 65 0.026733152 ubox
54 64 0.026707890 ubox
63 85 0.006323522 ubox
64 79 0.081480582 ubox
64 84 0.006549593 ubox
64 86 0.175424771 ubox
65 77 0.003235612 ubox
65 78 0.091756634 ubox
65 83 0.013469160 ubox
65 85 0.386600939 ubox
66 76 0.003280861 ubox
66 77 0.091813811 ubox
67 76 0.091733038 ubox
67 83 0.906514261 ubox
67 85 0.326609392 ubox
68 79 0.009306317 ubox
68 82 0.907152647 ubox
68 84 0.328204531 ubox
68 86 0.047415172 ubox
69 78 0.009806041 ubox
69 81 0.897887617 ubox
69 83 0.328905234 ubox
69 85 0.065642488 ubox
70 79 0.908789792 ubox
70 82 0.320541765 ubox
70 84 0.065618822 ubox
71 77 0.047083023 ubox
71 78 0.923946542 ubox
71 81 0.234765847 ubox
71 83 0.065135655 ubox
72 76 0.048987089 ubox
72 77 0.921054896 ubox
72 78 0.218438003 ubox
73 77 0.215925959 ubox
73 98 0.007666018 ubox
74 97 0.007704303 ubox
76 87 0.003348617 ubox
76 88 0.063364664 ubox
76 96 0.007919523 ubox
77 86 0.003461517 ubox
77 87 0.063977641 ubox
77 95 0.007789706 ubox
77 96 0.012684246 ubox
78 84 0.003382264 ubox
78 86 0.064132057 ubox
78 95 0.012862350 ubox
79 83 0.004854424 ubox
79 85 0.063618091 ubox
81 92 0.010136192 ubox
82 91 0.010914690 ubox
83 90 0.010924833 ubox
83 92 0.015464443 ubox
84 91 0.017684394 ubox
85 90 0.017821754 ubox
85 99 0.008216365 ubox
86 98 0.012137254 ubox
87 97 0.011934310 ubox
87 98 0.009982592 ubox
88 97 0.009712080 ubox
90 97 0.040824055 ubox
91 96 0.041016052 ubox
91 99 0.046213111 ubox
92 98 0.052715466 ubox
93 97 0.052419537 ubox
2 97 0.9500000 lbox
3 96 0.9500000 lbox
6 93 0.9500000 lbox
7 92 0.9500000 lbox
8 91 0.9500000 lbox
9 90 0.9500000 lbox
10 89 0.9500000 lbox
11 88 0.9500000 lbox
12 87 0.9500000 lbox
14 85 0.9500000 lbox
15 84 0.9500000 lbox
16 65 0.9500000 lbox
17 64 0.9500000 lbox
18 63 0.9500000 lbox
19 62 0.9500000 lbox
21 61 0.9500000 lbox
22 60 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
32 51 0.9500000 lbox
33 50 0.9500000 lbox
34 49 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
67 83 0.9500000 lbox
68 82 0.9500000 lbox
69 81 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
72 77 0.9500000 lbox
showpage
end
%%EOF
