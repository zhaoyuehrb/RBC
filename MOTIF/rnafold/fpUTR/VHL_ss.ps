%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGCCUCCGUUACAACGGCCUACGGUGCUGGAGGAUCCUUCUGCGCACGCGCACAGCCUCCGGCCGGCUAUUUCCGCGAGCGCGUUCCAUCCUCUACCGAGCGCGCGCGAAGACUACGGAGGUCGACUCGGGAGCGCGCACGCAGCUCCGCCCCGCGUCCGACCCGCGGAUCCCGCGGCGUCCGGCCCGGGUGGUCUGGAUCGCGGAGGGA\
) } def
/len { sequence length } bind def

/coor [
[46.78855515 364.61761475]
[33.54733658 354.02957153]
[40.05605316 338.37475586]
[40.49639893 323.38122559]
[37.55134583 316.60458374]
[41.05486679 308.17126465]
[41.71527100 293.18582153]
[42.37567139 278.20037842]
[43.03607178 263.21490479]
[43.69647598 248.22946167]
[44.35687637 233.24400330]
[45.01727676 218.25854492]
[31.45355797 212.01716614]
[21.28521919 201.02853394]
[16.08461189 186.94596863]
[16.67344284 171.90466309]
[22.99309731 158.19789124]
[34.10884094 147.92738342]
[48.34794235 142.68107605]
[49.00834274 127.69561768]
[49.66874313 112.71016693]
[50.32914734 97.72470856]
[44.68732452 92.78306580]
[41.77005768 107.49665070]
[27.56911850 112.32710266]
[16.28529167 102.44403076]
[19.20228386 87.73039246]
[33.40367889 82.89978027]
[27.76185608 77.95813751]
[12.99400806 80.58695221]
[-1.77383947 83.21576691]
[-16.54168701 85.84458160]
[-31.30953598 88.47339630]
[-46.07738495 91.10221100]
[-60.84523010 93.73102570]
[-75.61308289 96.35984039]
[-63.95414734 105.79749298]
[-62.24831009 120.70018005]
[-71.47305298 132.52828979]
[-86.34236908 134.50401306]
[-98.33576202 125.49520874]
[-100.58071136 110.66415405]
[-91.79164124 98.50992584]
[-106.73348999 99.82944489]
[-121.67533875 101.14897156]
[-134.74137878 110.07025146]
[-148.09994507 103.48254395]
[-163.04179382 104.80206299]
[-176.14949036 114.65703583]
[-191.12992859 107.98484039]
[-192.57254028 91.64926910]
[-178.99327087 82.45494843]
[-164.36131287 89.86021423]
[-149.41946411 88.54069519]
[-137.42216492 79.71379089]
[-122.99485779 86.20712280]
[-108.05300903 84.88759613]
[-93.11116028 83.56807709]
[-78.24189758 81.59199524]
[-63.47404480 78.96318054]
[-48.70619965 76.33436584]
[-33.93835068 73.70555115]
[-19.17050171 71.07673645]
[-4.40265417 68.44792175]
[10.36519337 65.81910706]
[25.13304138 63.19028854]
[32.97990417 50.40644073]
[28.63880730 36.04834747]
[24.29771042 21.69025421]
[19.95661163 7.33216047]
[15.61551285 -7.02593374]
[11.81125641 -10.59347057]
[9.94130039 -14.83870411]
[9.94005394 -18.91193962]
[11.41441250 -22.11248207]
[7.70966434 -36.64777756]
[4.00491619 -51.18307495]
[0.30016807 -65.71836853]
[-4.14620304 -80.04421234]
[-9.32246113 -94.12279510]
[-21.34669113 -104.40522766]
[-18.47665405 -119.02070618]
[-23.65291214 -133.09928894]
[-28.82917023 -147.17785645]
[-34.00542831 -161.25643921]
[-39.18168640 -175.33502197]
[-44.35794449 -189.41358948]
[-49.53420258 -203.49217224]
[-54.71046066 -217.57075500]
[-69.89304352 -219.50669861]
[-82.43022156 -228.28608704]
[-89.44104767 -241.89147949]
[-89.31448364 -257.19647217]
[-82.07962036 -270.68408203]
[-69.39896393 -279.25491333]
[-54.18644714 -280.93951416]
[-39.93778610 -275.35076904]
[-29.92722702 -263.77288818]
[-26.45511818 -248.86640930]
[-30.31932640 -234.05673218]
[-40.63188171 -222.74700928]
[-35.45562363 -208.66842651]
[-30.27936745 -194.58985901]
[-25.10310936 -180.51127625]
[-19.92685127 -166.43269348]
[-14.75059319 -152.35412598]
[-9.57433510 -138.27554321]
[-4.39807653 -124.19696045]
[7.25591183 -114.92152405]
[4.75611639 -99.29904938]
[9.93237495 -85.22047424]
[16.13206673 -98.87931061]
[29.60707474 -105.46900940]
[44.19465256 -101.97579956]
[53.22322845 -89.99728394]
[52.56361008 -75.01179504]
[42.51747513 -63.87288666]
[27.67938614 -61.67490768]
[14.83546448 -69.42311859]
[18.54021263 -54.88782501]
[22.24496078 -40.35252762]
[25.94970894 -25.81723022]
[29.97360802 -11.36703205]
[34.31470490 2.99106216]
[38.65580368 17.34915543]
[42.99690247 31.70725060]
[47.33800125 46.06534576]
[54.33853531 48.75653076]
[55.13093185 33.77747345]
[69.62172699 29.90232658]
[77.78509521 42.48641968]
[68.33961487 54.13890076]
[75.34014893 56.83008575]
[88.18124390 49.07727051]
[101.02234650 41.32445145]
[113.86344147 33.57163239]
[126.70454407 25.81881523]
[139.48838806 17.97195053]
[152.21429443 10.03146362]
[159.44088745 -4.68955278]
[175.81892395 -5.52152538]
[184.50007629 8.39140701]
[176.55390930 22.73681259]
[160.15478516 22.75736809]
[147.42887878 30.69785500]
[143.41908264 36.90414047]
[134.45736694 38.65991211]
[121.61626434 46.41273117]
[108.77516174 54.16555023]
[95.93406677 61.91836929]
[83.09296417 69.67118835]
[107.53550720 67.60268402]
[126.15340424 81.90793610]
[130.07691956 103.99046326]
[143.99746704 109.57778931]
[157.91802979 115.16511536]
[171.83857727 120.75244141]
[187.52769470 118.71234131]
[196.45703125 130.63360596]
[210.37757874 136.22093201]
[224.29812622 141.80825806]
[239.98725891 139.76815796]
[248.91658020 151.68940735]
[262.83712769 157.27673340]
[276.75769043 162.86405945]
[290.71887207 168.34906006]
[304.71994019 173.73143005]
[318.72100830 179.11380005]
[332.72210693 184.49617004]
[346.72317505 189.87854004]
[360.72424316 195.26091003]
[377.67816162 195.30070496]
[382.33322144 211.60305786]
[367.95663452 220.58914185]
[355.34188843 209.26199341]
[341.34078979 203.87962341]
[327.33972168 198.49723816]
[313.33865356 193.11486816]
[299.33758545 187.73249817]
[285.33651733 182.35012817]
[277.96688843 182.88400269]
[271.17034912 176.78462219]
[257.24981689 171.19729614]
[243.32925415 165.60997009]
[228.63581848 168.04971313]
[218.71080017 155.72880554]
[204.79025269 150.14147949]
[190.86970520 144.55415344]
[176.17626953 146.99389648]
[166.25125122 134.67298889]
[152.33070374 129.08566284]
[138.41014099 123.49834442]
[124.48959351 117.91101837]
[89.18180847 130.68028259]
[65.31459808 98.38510895]
[64.65419769 113.37056732]
[63.99379730 128.35601807]
[63.33339691 143.34147644]
[77.05578613 149.82003784]
[87.22496033 161.02854919]
[92.31435394 175.23811340]
[91.57774353 190.27291870]
[85.15848541 203.84338379]
[74.06291199 213.89494324]
[60.00273514 218.91894531]
[59.34233093 233.90440369]
[58.68193054 248.88986206]
[58.02152634 263.87530518]
[57.36112595 278.86077881]
[56.70072556 293.84622192]
[56.04032135 308.83166504]
[55.48993301 323.82159424]
[55.04958725 338.81512451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 213]
[4 212]
[6 211]
[7 210]
[8 209]
[9 208]
[10 207]
[11 206]
[12 205]
[19 198]
[20 197]
[21 196]
[22 195]
[29 66]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[35 60]
[36 59]
[43 58]
[44 57]
[45 56]
[47 54]
[48 53]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[75 122]
[76 121]
[77 120]
[78 119]
[79 111]
[80 110]
[82 108]
[83 107]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[133 151]
[134 150]
[135 149]
[136 148]
[137 147]
[138 145]
[139 144]
[154 193]
[155 192]
[156 191]
[157 190]
[159 188]
[160 187]
[161 186]
[163 184]
[164 183]
[165 182]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
