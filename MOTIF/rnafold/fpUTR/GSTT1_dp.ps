%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:53:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GSTT1)
} def

/sequence { (\
UCUGAGGUCCGAGACCCGAGUCCUGGCACUGGAGUUUGCUGACUCCCUCUGGUUUCCGGUCAGGUCGGUCGGUCCCCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 64 0.006654449 ubox
2 63 0.010545928 ubox
2 72 0.011150840 ubox
3 62 0.010620264 ubox
3 71 0.011275586 ubox
3 78 0.822744343 ubox
4 61 0.010624616 ubox
4 70 0.011378474 ubox
4 74 0.005299913 ubox
4 77 0.927181746 ubox
5 60 0.010483323 ubox
5 69 0.011255072 ubox
5 73 0.005266112 ubox
5 80 0.007109562 ubox
6 16 0.003536463 ubox
6 70 0.003950181 ubox
6 74 0.020651390 ubox
6 75 0.983947449 ubox
6 76 0.161228648 ubox
6 77 0.052704246 ubox
6 79 0.004817452 ubox
6 80 0.005756859 ubox
7 15 0.003807962 ubox
7 69 0.003904722 ubox
7 73 0.020401460 ubox
7 74 0.985064674 ubox
7 75 0.156419602 ubox
7 76 0.052357424 ubox
7 79 0.006390531 ubox
8 14 0.003809870 ubox
8 59 0.003215645 ubox
8 72 0.006171822 ubox
8 78 0.006331103 ubox
9 13 0.003778589 ubox
9 26 0.003784525 ubox
9 58 0.003645608 ubox
9 59 0.010166262 ubox
9 64 0.007548727 ubox
9 68 0.010400797 ubox
9 71 0.005764702 ubox
9 72 0.998984477 ubox
10 25 0.003788416 ubox
10 58 0.010170969 ubox
10 63 0.007552029 ubox
10 67 0.010430729 ubox
10 71 0.999504175 ubox
11 24 0.003664982 ubox
11 56 0.008360729 ubox
11 57 0.007252152 ubox
11 66 0.010452514 ubox
11 70 0.989748984 ubox
11 74 0.003998016 ubox
12 37 0.005362398 ubox
12 55 0.011388235 ubox
12 65 0.010371693 ubox
12 69 0.974627997 ubox
12 73 0.003871517 ubox
13 22 0.006162660 ubox
13 36 0.006054261 ubox
13 54 0.012559856 ubox
13 61 0.039777408 ubox
13 66 0.233928764 ubox
13 70 0.138866832 ubox
13 74 0.007114569 ubox
14 21 0.006217579 ubox
14 35 0.006138307 ubox
14 53 0.012706721 ubox
14 60 0.039806885 ubox
14 65 0.235035918 ubox
14 69 0.166794420 ubox
14 73 0.007133544 ubox
15 20 0.006197994 ubox
15 34 0.006149786 ubox
15 52 0.012730163 ubox
15 59 0.039796477 ubox
15 64 0.234939325 ubox
15 68 0.167022468 ubox
15 72 0.006248171 ubox
16 32 0.006151500 ubox
16 51 0.012715803 ubox
16 58 0.039746578 ubox
16 59 0.008057372 ubox
16 63 0.234454245 ubox
16 64 0.014609776 ubox
16 67 0.123734163 ubox
16 68 0.955704622 ubox
16 71 0.004505659 ubox
16 72 0.004319621 ubox
17 31 0.006152119 ubox
17 58 0.011367442 ubox
17 63 0.017806664 ubox
17 67 0.962886973 ubox
17 71 0.005757919 ubox
18 30 0.003281064 ubox
18 45 0.017825050 ubox
18 49 0.012447043 ubox
18 56 0.040268329 ubox
18 57 0.009475172 ubox
18 61 0.229198081 ubox
18 66 0.968881014 ubox
18 70 0.006727676 ubox
19 30 0.009973418 ubox
19 35 0.003258098 ubox
19 44 0.017970994 ubox
19 48 0.012455709 ubox
19 55 0.040690663 ubox
19 60 0.224771623 ubox
19 65 0.917882225 ubox
19 69 0.006702577 ubox
20 27 0.007619437 ubox
20 29 0.011242523 ubox
20 43 0.018082535 ubox
20 47 0.012416401 ubox
20 53 0.003460513 ubox
20 54 0.031746887 ubox
20 60 0.017716733 ubox
20 65 0.104479588 ubox
21 26 0.007264356 ubox
21 28 0.010623888 ubox
21 33 0.003919266 ubox
21 42 0.018079246 ubox
21 59 0.019791820 ubox
21 64 0.037747270 ubox
22 32 0.003999056 ubox
22 41 0.017955827 ubox
22 52 0.038316384 ubox
22 58 0.020501676 ubox
22 59 0.128160196 ubox
22 63 0.034680635 ubox
22 64 0.965006425 ubox
23 31 0.004022152 ubox
23 51 0.038236108 ubox
23 52 0.018747255 ubox
23 58 0.127784953 ubox
23 59 0.200486506 ubox
23 63 0.968565093 ubox
23 68 0.004858887 ubox
24 51 0.018807027 ubox
24 58 0.201230763 ubox
24 62 0.968619984 ubox
24 67 0.004887793 ubox
25 40 0.016742136 ubox
25 48 0.016057726 ubox
25 49 0.024091431 ubox
25 50 0.026513838 ubox
25 54 0.034608097 ubox
25 55 0.005489082 ubox
25 56 0.096769070 ubox
25 57 0.217647525 ubox
25 61 0.968538138 ubox
25 66 0.004960093 ubox
26 39 0.018096852 ubox
26 47 0.020120368 ubox
26 48 0.020737906 ubox
26 49 0.027508371 ubox
26 53 0.039081923 ubox
26 54 0.006976059 ubox
26 55 0.092498618 ubox
26 56 0.217258958 ubox
26 60 0.947518132 ubox
26 65 0.004960900 ubox
27 38 0.018096943 ubox
27 51 0.049474792 ubox
27 52 0.042449219 ubox
27 59 0.933079917 ubox
27 64 0.004960264 ubox
28 37 0.017471537 ubox
28 50 0.055474269 ubox
28 53 0.660277948 ubox
28 60 0.139141229 ubox
29 34 0.003344427 ubox
29 52 0.665189348 ubox
29 59 0.167858132 ubox
29 63 0.004071663 ubox
30 51 0.658772502 ubox
30 58 0.199506804 ubox
30 62 0.003994919 ubox
31 46 0.959240011 ubox
31 47 0.090718730 ubox
31 48 0.005948290 ubox
31 49 0.015324323 ubox
31 50 0.149176983 ubox
31 54 0.004353981 ubox
31 55 0.004546172 ubox
31 56 0.007468086 ubox
31 57 0.211211680 ubox
32 45 0.964184246 ubox
32 46 0.064387942 ubox
32 47 0.004325945 ubox
32 48 0.003259041 ubox
32 49 0.145672104 ubox
32 55 0.004612693 ubox
32 56 0.210856881 ubox
33 40 0.003883826 ubox
33 44 0.966804458 ubox
33 48 0.142981045 ubox
33 54 0.006436758 ubox
33 55 0.208668167 ubox
34 39 0.004871874 ubox
34 43 0.967884600 ubox
34 47 0.138025186 ubox
34 53 0.004347656 ubox
34 54 0.192892252 ubox
35 42 0.965508113 ubox
35 52 0.003737436 ubox
36 41 0.940601939 ubox
36 42 0.020432517 ubox
36 51 0.005801548 ubox
36 52 0.043966173 ubox
37 41 0.024799155 ubox
37 51 0.040369708 ubox
38 50 0.024139160 ubox
38 53 0.182082909 ubox
38 69 0.006445539 ubox
39 52 0.183261266 ubox
39 68 0.007400100 ubox
40 51 0.177341583 ubox
40 67 0.007405859 ubox
41 49 0.130655243 ubox
41 50 0.125182272 ubox
41 54 0.053095907 ubox
41 66 0.007452390 ubox
42 48 0.125022380 ubox
42 53 0.061343777 ubox
42 65 0.007450825 ubox
43 52 0.061392486 ubox
43 64 0.007410534 ubox
44 51 0.056600768 ubox
44 63 0.006737908 ubox
45 51 0.011108663 ubox
45 52 0.024012359 ubox
46 51 0.024380472 ubox
46 52 0.026236180 ubox
46 64 0.007544735 ubox
47 51 0.035195708 ubox
47 58 0.039379909 ubox
47 59 0.008032813 ubox
47 63 0.007996797 ubox
48 58 0.013183710 ubox
48 59 0.010568734 ubox
48 62 0.007485211 ubox
49 58 0.130256710 ubox
49 59 0.194410137 ubox
49 63 0.003604840 ubox
50 58 0.516250635 ubox
50 62 0.003768732 ubox
51 57 0.632324266 ubox
51 61 0.003801947 ubox
52 56 0.622328580 ubox
52 60 0.003325322 ubox
54 58 0.008816391 ubox
56 68 0.006202504 ubox
57 67 0.006306784 ubox
58 66 0.006298275 ubox
59 65 0.005154473 ubox
64 79 0.005733633 ubox
65 78 0.005702586 ubox
67 75 0.004810303 ubox
67 76 0.006218112 ubox
67 77 0.003629115 ubox
67 80 0.004683464 ubox
68 74 0.004828877 ubox
68 75 0.006193049 ubox
68 76 0.003611739 ubox
68 79 0.005226585 ubox
69 78 0.005201457 ubox
71 77 0.006303890 ubox
72 76 0.006206096 ubox
3 78 0.9500000 lbox
4 77 0.9500000 lbox
6 75 0.9500000 lbox
7 74 0.9500000 lbox
9 72 0.9500000 lbox
10 71 0.9500000 lbox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
16 68 0.9500000 lbox
17 67 0.9500000 lbox
18 66 0.9500000 lbox
19 65 0.9500000 lbox
22 64 0.9500000 lbox
23 63 0.9500000 lbox
24 62 0.9500000 lbox
25 61 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
