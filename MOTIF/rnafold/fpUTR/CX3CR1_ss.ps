%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUUGUCCUGUGGCCUUCUGGCCAAAGGCAGGGAAAGGUGGCCAAACACUGAGACCAAGAACAAAGAAAGAAAACUGCUGGUGGACUUCUUCCACCAUGAGCAGGCCACCAAGCCCGCAGCACUGCACUGCAGCCCCCAGCUCUGUCCUGGGGUUGGGGGAGGUGAGGAGGGGCAAGGUGGGGAGCACACAGAGCACCCGCUGUCCUCGGAACACCACAGCGACUAGAGGCCUUCACC\
) } def
/len { sequence length } bind def

/coor [
[128.15251160 337.64135742]
[126.78565979 322.70376587]
[125.41881561 307.76617432]
[124.05197144 292.82858276]
[122.68512726 277.89096069]
[121.31828308 262.95336914]
[119.85410309 248.02500916]
[118.29265594 233.10650635]
[116.73121643 218.18798828]
[115.07257080 203.27998352]
[113.31678772 188.38308716]
[111.56101227 173.48620605]
[109.80522919 158.58932495]
[95.09107208 155.67495728]
[87.78948975 168.77789307]
[80.48791504 181.88082886]
[73.18633270 194.98376465]
[73.97661591 211.36386108]
[60.04162979 220.00956726]
[45.71649551 212.02691650]
[45.73768616 195.62777710]
[60.08339691 187.68217468]
[67.38497925 174.57923889]
[74.68655396 161.47630310]
[81.98813629 148.37336731]
[70.31783295 139.84330750]
[61.89119720 128.77198792]
[57.16659546 116.26268768]
[56.25393677 103.46453094]
[58.92733765 91.46878815]
[45.02283859 85.84162903]
[35.91458893 85.52598572]
[30.97453880 80.04943848]
[17.14457130 74.24150848]
[3.31460500 68.43357849]
[-9.92694759 76.30552673]
[-25.08751488 74.88757324]
[-36.37263870 64.93217468]
[-39.59313202 50.41437912]
[-53.42309952 44.60645294]
[-67.25306702 38.79852676]
[-81.08303070 32.99059677]
[-94.91300201 27.18267250]
[-108.74296570 21.37474632]
[-122.57293701 15.56681919]
[-117.25844574 29.59379959]
[-124.03008270 42.97830200]
[-138.47914124 47.00628281]
[-151.19850159 39.05530930]
[-153.90715027 24.30189705]
[-144.84201050 12.35153961]
[-159.75003052 14.01018620]
[-168.26423645 27.12667465]
[-183.23266602 31.65220261]
[-197.58766174 25.44995308]
[-204.55125427 11.44843769]
[-200.83543396 -3.74125385]
[-188.19471741 -12.94701481]
[-172.59764099 -11.82216644]
[-161.40867615 -0.89782792]
[-146.50065613 -2.55647492]
[-143.91510010 -9.59670925]
[-157.99557495 -14.76782131]
[-172.07604980 -19.93893433]
[-186.15650940 -25.11004639]
[-200.23698425 -30.28115845]
[-214.31744385 -35.45227051]
[-228.39791870 -40.62338257]
[-242.47830200 -45.79472733]
[-237.30671692 -59.87502670]
[-223.22680664 -54.70384979]
[-209.14633179 -49.53273773]
[-195.06587219 -44.36162567]
[-180.98539734 -39.19051361]
[-166.90493774 -34.01940155]
[-152.82446289 -28.84828949]
[-138.74398804 -23.67717743]
[-136.15843201 -30.71741295]
[-146.44943237 -41.63050079]
[-156.74041748 -52.54359055]
[-167.03141785 -63.45668030]
[-177.53381348 -74.16647339]
[-188.24360657 -84.66886902]
[-198.95338440 -95.17126465]
[-209.66317749 -105.67366791]
[-220.37297058 -116.17606354]
[-231.08276367 -126.67846680]
[-247.07453918 -127.96005249]
[-255.92344666 -141.34199524]
[-250.84133911 -156.55882263]
[-235.72679138 -161.93748474]
[-222.17437744 -153.35192871]
[-220.58036804 -137.38825989]
[-209.87057495 -126.88585663]
[-199.16078186 -116.38346100]
[-188.45098877 -105.88105774]
[-177.74119568 -95.37866211]
[-167.03141785 -84.87625885]
[-163.54081726 -84.53826141]
[-160.03784180 -82.50507355]
[-157.31190491 -78.78791046]
[-156.11831665 -73.74767303]
[-145.82733154 -62.83457947]
[-135.53634644 -51.92149353]
[-125.24534607 -41.00840378]
[-116.76500702 1.73685181]
[-102.93504333 7.54477835]
[-89.10507202 13.35270500]
[-75.27510834 19.16063118]
[-61.44514084 24.96855736]
[-47.61517334 30.77648544]
[-33.78520584 36.58441162]
[-21.16484261 28.71901894]
[-6.15543413 29.80607033]
[5.47178364 39.63771439]
[9.12253189 54.60361481]
[22.95249939 60.41154099]
[36.78246689 66.21946716]
[50.64999390 71.93713379]
[64.55449677 77.56428528]
[69.04085541 70.10491180]
[75.11180878 63.56417847]
[82.57421112 58.28063583]
[91.16243744 54.55113220]
[100.54756165 52.61532974]
[104.22485352 38.07306671]
[107.90215302 23.53079796]
[111.57944489 8.98853207]
[109.60062408 -7.84953737]
[125.23286438 -14.41226864]
[135.86654663 -1.20768797]
[126.12171173 12.66582584]
[122.44441986 27.20809174]
[118.76712036 41.75035858]
[115.08982849 56.29262543]
[128.28683472 63.42278290]
[138.43469238 52.37647629]
[148.58255005 41.33016586]
[158.73040771 30.28385925]
[168.87828064 19.23755074]
[179.02613831 8.19124317]
[189.17399597 -2.85506439]
[199.32185364 -13.90137196]
[209.46971130 -24.94767952]
[219.61758423 -35.99398804]
[229.76544189 -47.04029465]
[230.52528381 -63.06534576]
[243.61180115 -72.34557343]
[258.98614502 -67.76198578]
[264.85443115 -52.83071518]
[256.71499634 -39.00575638]
[240.81175232 -36.89243698]
[230.66387939 -25.84612656]
[220.51602173 -14.79981899]
[210.36816406 -3.75351143]
[200.22030640 7.29279661]
[190.07244873 18.33910370]
[179.92457581 29.38541222]
[169.77671814 40.43172073]
[159.62886047 51.47802734]
[149.48100281 62.52433777]
[139.33314514 73.57064819]
[149.45106506 102.26425934]
[140.03413391 132.58340454]
[154.50172424 136.54432678]
[168.96931458 140.50524902]
[183.43688965 144.46618652]
[194.38287354 133.78289795]
[209.10937500 130.03761292]
[223.63671875 134.13914490]
[234.09062195 144.88958740]
[237.73530579 159.33195496]
[252.20289612 163.29287720]
[266.67047119 167.25379944]
[281.13806152 171.21473694]
[291.98211670 163.24638367]
[305.24179077 162.97587585]
[316.07916260 170.27807617]
[320.66885376 182.30560303]
[335.08355713 186.45478821]
[349.49829102 190.60395813]
[363.91302490 194.75314331]
[378.32775879 198.90231323]
[392.74246216 203.05149841]
[404.37365723 197.50743103]
[416.28524780 201.24560547]
[422.26562500 211.74583435]
[436.62503052 216.08255005]
[449.61080933 207.37028503]
[465.15301514 209.09480286]
[475.91308594 220.44181824]
[476.81045532 236.05363464]
[467.42141724 248.55882263]
[452.17916870 252.05281067]
[438.28063965 244.88586426]
[432.28829956 230.44197083]
[417.92889404 226.10523987]
[401.07299805 231.01918030]
[388.59329224 217.46621704]
[374.17855835 213.31704712]
[359.76385498 209.16786194]
[345.34912109 205.01869202]
[330.93438721 200.86950684]
[316.51965332 196.72033691]
[302.15249634 205.47985840]
[285.57131958 201.04119873]
[277.17712402 185.68231201]
[262.70956421 181.72138977]
[248.24195862 177.76046753]
[233.77438354 173.79954529]
[223.28134155 184.37129211]
[208.80928040 188.29753113]
[194.21864319 184.42716980]
[183.45362854 173.70283508]
[179.47596741 158.93376160]
[165.00839233 154.97283936]
[150.54080200 151.01191711]
[136.07321167 147.05099487]
[124.70211792 156.83354187]
[126.45789337 171.73042297]
[128.21366882 186.62731934]
[129.96945190 201.52420044]
[134.07441711 209.66110229]
[131.64971924 216.62655640]
[133.21116638 231.54505920]
[134.77261353 246.46356201]
[138.77116394 254.65327454]
[136.25587463 261.58654785]
[137.62272644 276.52413940]
[138.98956299 291.46173096]
[140.35641479 306.39932251]
[141.72325134 321.33691406]
[143.09010315 336.27450562]
[156.49095154 344.09735107]
[162.70347595 358.31649780]
[159.33885193 373.46438599]
[147.69082642 383.71636963]
[132.23829651 385.13034058]
[118.92310333 377.16256714]
[112.86518860 362.87689209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 233]
[2 232]
[3 231]
[4 230]
[5 229]
[6 228]
[7 226]
[8 225]
[9 224]
[10 222]
[11 221]
[12 220]
[13 219]
[14 25]
[15 24]
[16 23]
[17 22]
[30 120]
[31 119]
[33 118]
[34 117]
[35 116]
[39 112]
[40 111]
[41 110]
[42 109]
[43 108]
[44 107]
[45 106]
[51 61]
[52 60]
[78 105]
[79 104]
[80 103]
[81 102]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[125 135]
[126 134]
[127 133]
[128 132]
[136 162]
[137 161]
[138 160]
[139 159]
[140 158]
[141 157]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
[164 218]
[165 217]
[166 216]
[167 215]
[172 210]
[173 209]
[174 208]
[175 207]
[179 204]
[180 203]
[181 202]
[182 201]
[183 200]
[184 199]
[187 197]
[188 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
