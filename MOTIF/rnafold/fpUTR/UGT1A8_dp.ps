%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UGT1A8)
} def

/sequence { (\
CUUCCGCCUACUGUAUCAUAGCAGCUUAGAAUCCCAGCUGCUGGCUCGGGCUGCAGUUCUCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.009816156 ubox
1 49 0.010817583 ubox
1 50 0.021136886 ubox
1 56 0.213584862 ubox
2 20 0.004608202 ubox
2 28 0.009613177 ubox
2 29 0.004227673 ubox
2 30 0.003644948 ubox
2 31 0.032297463 ubox
2 48 0.010348492 ubox
2 49 0.021205824 ubox
2 50 0.009277726 ubox
2 55 0.209961718 ubox
2 56 0.065487487 ubox
3 28 0.004995271 ubox
3 29 0.003386843 ubox
3 30 0.037096242 ubox
3 48 0.019795737 ubox
3 49 0.011566173 ubox
3 50 0.072752373 ubox
3 55 0.074651267 ubox
4 29 0.037366841 ubox
4 48 0.012749291 ubox
4 49 0.095863204 ubox
4 50 0.016014205 ubox
5 13 0.037822754 ubox
5 48 0.095681183 ubox
5 49 0.016120983 ubox
5 53 0.142743335 ubox
6 12 0.031160018 ubox
6 14 0.069156441 ubox
6 22 0.011420474 ubox
6 25 0.042443056 ubox
6 45 0.121941174 ubox
6 47 0.060268730 ubox
6 51 0.666383144 ubox
6 52 0.033707036 ubox
6 54 0.419446774 ubox
6 57 0.017003780 ubox
7 13 0.071214666 ubox
7 21 0.009189216 ubox
7 24 0.037034560 ubox
7 44 0.126524996 ubox
7 49 0.012285407 ubox
7 50 0.667779550 ubox
7 53 0.419347770 ubox
7 56 0.017169421 ubox
8 21 0.017510592 ubox
8 24 0.025026181 ubox
8 29 0.101934686 ubox
8 43 0.125054042 ubox
8 44 0.017682487 ubox
8 48 0.014211693 ubox
8 49 0.664036268 ubox
8 50 0.024282461 ubox
8 56 0.019436474 ubox
9 15 0.014815784 ubox
9 20 0.030775874 ubox
9 23 0.030757888 ubox
9 28 0.102209347 ubox
9 43 0.015774984 ubox
9 48 0.617163621 ubox
9 49 0.022016654 ubox
9 53 0.006718657 ubox
9 55 0.019347362 ubox
10 14 0.014146300 ubox
10 19 0.031395957 ubox
10 27 0.093630217 ubox
10 42 0.010309016 ubox
10 52 0.010098504 ubox
10 57 0.387782916 ubox
11 21 0.043296070 ubox
11 24 0.144280855 ubox
11 44 0.089585888 ubox
11 49 0.428311660 ubox
11 50 0.037983006 ubox
11 56 0.419060449 ubox
12 18 0.046816568 ubox
12 20 0.056610768 ubox
12 23 0.146160983 ubox
12 43 0.076412624 ubox
12 48 0.445065564 ubox
12 49 0.037481856 ubox
12 55 0.419270067 ubox
13 17 0.050799082 ubox
13 19 0.058144500 ubox
13 22 0.146343017 ubox
13 25 0.003739209 ubox
13 42 0.015997930 ubox
13 45 0.563276391 ubox
13 47 0.493381973 ubox
13 51 0.017865416 ubox
13 54 0.415653752 ubox
14 18 0.054030930 ubox
14 20 0.015448721 ubox
14 21 0.143396492 ubox
14 24 0.003681264 ubox
14 43 0.034936410 ubox
14 44 0.560319702 ubox
14 50 0.018461666 ubox
14 53 0.412626313 ubox
15 19 0.016187420 ubox
15 42 0.019227419 ubox
15 52 0.379972158 ubox
15 57 0.009185582 ubox
16 30 0.005676902 ubox
16 44 0.205099523 ubox
16 49 0.125131709 ubox
16 50 0.254717397 ubox
16 56 0.009308026 ubox
17 29 0.006062245 ubox
17 43 0.217317214 ubox
17 48 0.135064416 ubox
17 49 0.252188698 ubox
17 53 0.007749280 ubox
18 42 0.148085258 ubox
18 52 0.008181931 ubox
18 57 0.068598835 ubox
19 28 0.004674360 ubox
19 43 0.824599734 ubox
19 56 0.065006399 ubox
20 26 0.003763021 ubox
20 27 0.004652904 ubox
20 39 0.003266036 ubox
20 42 0.881594265 ubox
20 46 0.091347390 ubox
20 52 0.005431387 ubox
20 58 0.005888204 ubox
20 60 0.009699347 ubox
20 62 0.003571583 ubox
21 25 0.003796353 ubox
21 26 0.003421273 ubox
21 38 0.003278416 ubox
21 41 0.900278180 ubox
21 45 0.092231967 ubox
21 51 0.006219339 ubox
21 54 0.393233156 ubox
21 59 0.010030726 ubox
21 61 0.003351989 ubox
22 37 0.003275465 ubox
22 40 0.900407870 ubox
22 43 0.065608992 ubox
22 44 0.067122933 ubox
22 50 0.005972232 ubox
22 53 0.395093291 ubox
23 39 0.900288971 ubox
23 42 0.090867753 ubox
23 46 0.004714873 ubox
23 52 0.395415062 ubox
23 58 0.013958982 ubox
23 62 0.003350206 ubox
24 38 0.900501402 ubox
24 41 0.092754784 ubox
24 45 0.004833701 ubox
24 51 0.395664250 ubox
24 54 0.003648926 ubox
24 57 0.016105746 ubox
24 61 0.003674857 ubox
25 37 0.900249081 ubox
25 40 0.092406823 ubox
25 44 0.004830460 ubox
25 49 0.007568067 ubox
25 50 0.394973488 ubox
25 53 0.003671002 ubox
25 56 0.019423560 ubox
26 36 0.852314398 ubox
26 37 0.015434434 ubox
26 43 0.004415994 ubox
26 48 0.010113780 ubox
26 49 0.386008603 ubox
26 50 0.003668243 ubox
26 55 0.019280455 ubox
27 36 0.096664220 ubox
27 40 0.009813808 ubox
27 48 0.281909672 ubox
27 49 0.021854812 ubox
27 53 0.020160945 ubox
28 39 0.048403361 ubox
28 46 0.095601860 ubox
28 52 0.021106467 ubox
28 60 0.072330407 ubox
28 62 0.019901141 ubox
29 38 0.052080049 ubox
29 45 0.096789668 ubox
29 47 0.374400574 ubox
29 51 0.021200702 ubox
29 59 0.078250947 ubox
29 61 0.021506583 ubox
29 63 0.008988316 ubox
30 46 0.371822325 ubox
30 58 0.078118592 ubox
30 60 0.021096146 ubox
30 62 0.009081254 ubox
31 57 0.076369777 ubox
32 44 0.008005192 ubox
32 50 0.010471936 ubox
32 56 0.075227805 ubox
33 43 0.006982208 ubox
33 44 0.035919941 ubox
33 48 0.004514545 ubox
33 49 0.039433965 ubox
33 50 0.057379233 ubox
34 43 0.030492707 ubox
34 44 0.390221406 ubox
34 48 0.040519173 ubox
34 49 0.061839663 ubox
35 43 0.390940196 ubox
35 48 0.062106773 ubox
35 53 0.061917652 ubox
36 42 0.390450381 ubox
36 46 0.075042672 ubox
36 52 0.061997692 ubox
36 58 0.105728417 ubox
36 60 0.005733441 ubox
37 41 0.381899972 ubox
37 45 0.076536127 ubox
37 51 0.062004594 ubox
37 54 0.008229590 ubox
37 57 0.127661643 ubox
37 59 0.005224521 ubox
38 44 0.076518134 ubox
38 49 0.011235831 ubox
38 50 0.060955488 ubox
38 53 0.008221734 ubox
38 56 0.129416813 ubox
39 43 0.068934035 ubox
39 48 0.015854060 ubox
39 49 0.056749621 ubox
39 55 0.129432809 ubox
40 47 0.018947946 ubox
40 51 0.008487430 ubox
40 54 0.129464652 ubox
41 49 0.017327382 ubox
41 50 0.008560276 ubox
41 53 0.128549436 ubox
42 48 0.019270289 ubox
42 49 0.008648835 ubox
42 53 0.015961438 ubox
43 47 0.020638714 ubox
43 52 0.161691178 ubox
43 58 0.005221268 ubox
43 62 0.003588104 ubox
44 51 0.240368751 ubox
44 54 0.020695163 ubox
44 57 0.010133163 ubox
44 61 0.004737893 ubox
45 50 0.239887794 ubox
45 53 0.020846737 ubox
45 56 0.010531042 ubox
46 55 0.010474638 ubox
47 53 0.008063613 ubox
48 52 0.005081296 ubox
48 59 0.086571205 ubox
48 60 0.009607508 ubox
48 61 0.030690409 ubox
48 62 0.005582228 ubox
48 63 0.005708523 ubox
49 58 0.086910414 ubox
49 59 0.010813927 ubox
49 60 0.030577056 ubox
49 61 0.006028345 ubox
49 62 0.005825148 ubox
50 57 0.089419358 ubox
50 58 0.008472974 ubox
50 59 0.030677077 ubox
50 60 0.004386934 ubox
50 61 0.005957192 ubox
51 56 0.089826924 ubox
55 62 0.193606844 ubox
56 61 0.206232004 ubox
6 51 0.9500000 lbox
7 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
showpage
end
%%EOF
