%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUAACAGAGCUGGGAGCCUGGCUGCCAGGGGCGUGUUAUCGCGGGGGCAGCCUGGGAGCGCUGCUGCGCCGCGGCAGGAGAAACAGCCGAGGACACCCUGGAAGAGCAGGAGCACGUGGGCCUGCGAGAAUGGCGCCAACACCAGCCCUGCAAAGCCACAUUCCAAAGCCGGGCCAAGGACAGCCACCGUUGCCCCGCAGGCCUCAAGG\
) } def
/len { sequence length } bind def

/coor [
[-101.54901886 683.21179199]
[-101.65314484 698.21142578]
[-106.56010437 712.38610840]
[-115.75198364 724.23974609]
[-128.25862122 732.52130127]
[-142.76000977 736.35662842]
[-157.72558594 735.34100342]
[-171.57580566 729.58154297]
[-182.84883118 719.68615723]
[-190.35487366 706.69921875]
[-193.30168152 691.99151611]
[-191.37814331 677.11505127]
[-200.12283325 689.30236816]
[-208.86752319 701.48962402]
[-217.61221313 713.67694092]
[-219.37098694 729.40008545]
[-233.07717896 735.23016357]
[-241.82186890 747.41748047]
[-250.56655884 759.60473633]
[-254.88787842 775.99871826]
[-271.83743286 776.38458252]
[-276.90032959 760.20428467]
[-262.75387573 750.86004639]
[-254.00917053 738.67272949]
[-245.26448059 726.48547363]
[-244.13119507 711.63403320]
[-229.79951477 704.93225098]
[-221.05482483 692.74493408]
[-212.31013489 680.55767822]
[-203.56544495 668.37036133]
[-196.42109680 655.18103027]
[-190.99028015 641.19866943]
[-185.55946350 627.21630859]
[-180.12864685 613.23394775]
[-182.73306274 598.56884766]
[-170.52426147 588.50622559]
[-165.09344482 574.52386475]
[-159.66264343 560.54150391]
[-173.35194397 566.67358398]
[-187.81387329 562.69207764]
[-196.43562317 550.41748047]
[-195.27485657 535.46246338]
[-184.86231995 524.66528320]
[-169.95922852 522.96301270]
[-157.38008118 531.13403320]
[-152.87673950 545.44085693]
[-146.02729797 532.09600830]
[-139.17787170 518.75115967]
[-132.32843018 505.40631104]
[-125.47898865 492.06146240]
[-118.62954712 478.71661377]
[-111.78011322 465.37173462]
[-104.93067169 452.02688599]
[-105.51401520 447.28747559]
[-103.12680817 442.13116455]
[-97.67540741 438.39254761]
[-90.43352509 425.25653076]
[-95.90333557 415.24517822]
[-95.86106110 403.71725464]
[-90.20154572 393.53674316]
[-80.22951508 387.28869629]
[-68.36056519 386.62313843]
[-60.73260117 373.70745850]
[-53.10463333 360.79180908]
[-45.47666931 347.87615967]
[-37.94460678 334.90435791]
[-30.50886536 321.87707520]
[-35.63085175 305.85784912]
[-27.42022896 290.79421997]
[-10.52915955 286.24188232]
[-3.28727674 273.10586548]
[3.95460629 259.96981812]
[4.43101931 252.59512329]
[11.40237427 246.69396973]
[18.83811569 233.66668701]
[26.27385712 220.63941956]
[33.70959854 207.61215210]
[32.20072174 188.33451843]
[49.76407623 178.43949890]
[56.81050873 165.19760132]
[63.85694504 151.95571899]
[51.51786804 140.68414307]
[42.55923843 126.57584381]
[37.60570145 110.61452484]
[37.00264740 93.91310883]
[40.79212570 77.63610077]
[48.70990753 62.91842651]
[60.20392609 50.78629303]
[74.47274780 42.08561707]
[70.09189606 27.73960114]
[64.59300995 20.44674873]
[65.75411987 13.14845562]
[61.58633041 -1.26090026]
[57.41854477 -15.67025661]
[45.22722244 -26.63856125]
[48.89461899 -42.62237167]
[64.64802551 -47.17891693]
[76.28170013 -35.62081146]
[71.82790375 -19.83804321]
[75.99568939 -5.42868757]
[80.16347504 8.98066902]
[84.43791199 23.35874939]
[88.81876373 37.70476532]
[98.69574738 36.72270966]
[108.60480499 37.29693985]
[118.30223083 39.41332626]
[127.54951477 43.01982117]
[136.11923218 48.02772522]
[146.07887268 36.81140900]
[156.03849792 25.59509468]
[165.99812317 14.37877846]
[175.95776367 3.16246319]
[179.31536865 -5.33164883]
[186.14904785 -8.14486313]
[196.27378845 -19.21236229]
[195.75009155 -34.78039169]
[206.17568970 -45.86017609]
[221.02064514 -46.26350021]
[231.14540100 -57.33099747]
[241.27014160 -68.39849854]
[251.22976685 -79.61481476]
[261.02209473 -90.97747803]
[270.81442261 -102.34014893]
[272.42089844 -108.75219727]
[276.42327881 -112.78544617]
[281.06924438 -113.88887787]
[291.19396973 -124.95637512]
[288.96087646 -140.43368530]
[297.24273682 -153.69810486]
[312.12911987 -158.48657227]
[326.59115601 -152.53811646]
[333.80026245 -138.66143799]
[330.35256958 -123.40864563]
[317.87594604 -113.98167419]
[302.26147461 -114.83163452]
[292.13674927 -103.76413727]
[282.17709351 -92.54782104]
[272.38476562 -81.18515015]
[262.59243774 -69.82247925]
[262.04623413 -65.07863617]
[258.51467896 -60.62732697]
[252.33763123 -58.27375412]
[242.21289062 -47.20625305]
[232.08815002 -36.13875580]
[233.00459290 -21.31661797]
[222.89431763 -9.94836903]
[207.34129333 -9.08761692]
[197.21653748 1.97988212]
[187.17407227 13.12209511]
[177.21444702 24.33841133]
[167.25480652 35.55472565]
[157.29518127 46.77104187]
[147.33555603 57.98735809]
[156.03753662 70.58042145]
[161.46165466 84.89434052]
[163.29066467 100.09185791]
[161.41755676 115.28399658]
[155.95190430 129.58212280]
[147.21339417 142.14987183]
[135.71321106 152.25210571]
[122.12402344 159.29792786]
[107.24071503 162.87518311]
[91.93386841 162.77462769]
[77.09883881 159.00215149]
[70.05240631 172.24403381]
[63.00597000 185.48593140]
[66.77832031 195.68676758]
[64.36402130 206.06611633]
[56.79518509 213.25230408]
[46.73686981 215.04789734]
[39.30112839 228.07516479]
[31.86538506 241.10243225]
[24.42964363 254.12969971]
[17.09062958 267.21170044]
[9.84874725 280.34774780]
[2.60686421 293.48376465]
[7.81370974 305.90515137]
[4.95779467 318.86825562]
[-4.69952154 327.68905640]
[-17.48159599 329.31280518]
[-24.91733742 342.34008789]
[-26.45334053 351.34365845]
[-32.56101227 355.50411987]
[-40.18898010 368.41979980]
[-47.81694794 381.33544922]
[-55.44491196 394.25109863]
[-50.02636337 412.40533447]
[-59.43746185 428.47906494]
[-77.29750061 432.49841309]
[-84.53938293 445.63442993]
[-91.58581543 458.87631226]
[-98.43525696 472.22119141]
[-105.28469086 485.56604004]
[-112.13413239 498.91088867]
[-118.98357391 512.25573730]
[-125.83300781 525.60058594]
[-132.68244934 538.94543457]
[-139.53189087 552.29034424]
[-145.68028259 565.97235107]
[-151.11109924 579.95465088]
[-156.54191589 593.93701172]
[-154.32594299 609.60229492]
[-166.14628601 618.66479492]
[-171.57710266 632.64715576]
[-177.00791931 646.62945557]
[-182.43873596 660.61181641]
[-171.02940369 650.87390137]
[-157.10055542 645.30731201]
[-142.12232971 644.49951172]
[-127.67558289 648.53582764]
[-115.28512573 656.99017334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 30]
[13 29]
[14 28]
[15 27]
[17 25]
[18 24]
[19 23]
[31 206]
[32 205]
[33 204]
[34 203]
[36 201]
[37 200]
[38 199]
[46 198]
[47 197]
[48 196]
[49 195]
[50 194]
[51 193]
[52 192]
[53 191]
[56 190]
[57 189]
[62 186]
[63 185]
[64 184]
[65 183]
[66 181]
[67 180]
[70 176]
[71 175]
[72 174]
[74 173]
[75 172]
[76 171]
[77 170]
[79 166]
[80 165]
[81 164]
[89 103]
[90 102]
[92 101]
[93 100]
[94 99]
[108 153]
[109 152]
[110 151]
[111 150]
[112 149]
[114 148]
[115 147]
[118 144]
[119 143]
[120 142]
[121 139]
[122 138]
[123 137]
[126 136]
[127 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
