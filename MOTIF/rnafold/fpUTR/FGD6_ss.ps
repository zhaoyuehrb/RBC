%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:53:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCUCGCCCGCCCGACCCCGGCGGCUCGCGCCCGGGAGCGCCGCAGGGUCGCUAGAGUCGGCCGCGUCCUUUGUGUGGCGCUCAGGCUGCGCCGCGGGGCGGCGGGACGGAAUGUGGGCGCUGCGGGGGCUUUUCUCUCCUACCCGAACUGUGGGAACAAUGGACUGAAAGGGGAAGAUGGAUUGAGGGGCCGAGCGGGGAAGCGAGCUGCACCGGGGAAUC\
) } def
/len { sequence length } bind def

/coor [
[10.19828224 98.64385986]
[-4.57383394 96.03913879]
[-19.34595108 93.43441010]
[-34.11806488 90.82968903]
[-48.89018250 88.22496796]
[-63.66230011 85.62024689]
[-78.43441772 83.01552582]
[-93.20653534 80.41079712]
[-107.97864532 77.80607605]
[-122.80207062 75.51129150]
[-137.67030334 73.52744293]
[-152.53854370 71.54360199]
[-167.42025757 69.66359711]
[-182.31474304 67.88754272]
[-197.20922852 66.11148071]
[-212.10371399 64.33541870]
[-230.26509094 73.09852600]
[-245.21923828 60.83127594]
[-260.15750122 59.47178650]
[-275.09576416 58.11229706]
[-290.03402710 56.75280762]
[-304.97232056 55.39331818]
[-313.79196167 57.73044968]
[-320.10916138 53.90913773]
[-335.02697754 52.34121323]
[-349.94482422 50.77328491]
[-364.86264038 49.20535660]
[-379.39599609 55.45775986]
[-391.24475098 46.43248367]
[-406.16259766 44.86455917]
[-415.01403809 47.07831955]
[-421.27725220 43.16917801]
[-436.17172241 41.39311981]
[-451.06622314 39.61705780]
[-459.20068359 46.81856537]
[-469.73776245 48.32899094]
[-479.17047119 43.88919067]
[-484.49237061 35.18069839]
[-499.33145142 32.98945236]
[-514.17053223 30.79820824]
[-529.00964355 28.60696220]
[-543.84869385 26.41571617]
[-558.68780518 24.22447205]
[-573.52691650 22.03322601]
[-588.36596680 19.84197998]
[-603.20507812 17.65073586]
[-618.04412842 15.45948982]
[-632.92584229 13.57949162]
[-647.84368896 12.01156425]
[-662.76153564 10.44363785]
[-677.29486084 16.69604111]
[-689.14361572 7.67076445]
[-704.06146240 6.10283756]
[-718.97930908 4.53491068]
[-727.41662598 17.30480194]
[-740.82757568 24.68080139]
[-756.13037109 24.96795464]
[-769.80859375 18.10027885]
[-778.71905518 5.65591574]
[-780.81420898 -9.50551224]
[-775.61260986 -23.90002060]
[-764.30950928 -34.21985626]
[-749.50231934 -38.09359360]
[-734.59362793 -34.63108063]
[-723.00933838 -24.62797546]
[-717.41137695 -10.38291740]
[-702.49353027 -8.81499100]
[-687.57574463 -7.24706411]
[-674.10937500 -13.61161613]
[-661.19360352 -4.47419071]
[-646.27575684 -2.90626407]
[-631.35791016 -1.33833706]
[-628.40808105 -3.25241947]
[-624.38739014 -3.83848739]
[-619.92742920 -2.60996699]
[-615.85290527 0.62040490]
[-601.01379395 2.81165028]
[-586.17474365 5.00289583]
[-571.33563232 7.19414139]
[-556.49658203 9.38538647]
[-541.65747070 11.57663250]
[-526.81835938 13.76787758]
[-511.97930908 15.95912266]
[-497.14022827 18.15036774]
[-482.30114746 20.34161377]
[-464.88174438 11.93467140]
[-449.29016113 24.72257614]
[-434.39566040 26.49863625]
[-419.50119019 28.27469635]
[-404.59466553 29.94672966]
[-389.67684937 31.51465607]
[-376.21051025 25.15010452]
[-363.29470825 34.28752899]
[-348.37689209 35.85545731]
[-333.45904541 37.42338181]
[-318.54122925 38.99131012]
[-303.61282349 40.45505524]
[-288.67456055 41.81454086]
[-273.73629761 43.17403030]
[-258.79803467 44.53351974]
[-243.85975647 45.89300919]
[-236.63934326 38.68009567]
[-226.42713928 36.58281326]
[-216.54066467 40.52859497]
[-210.32765198 49.44094086]
[-195.43316650 51.21699905]
[-180.53868103 52.99305725]
[-165.64419556 54.76911926]
[-158.63740540 52.44232941]
[-150.55468750 56.67536545]
[-135.68646240 58.65921021]
[-120.81822968 60.64305878]
[-117.81609344 58.81208420]
[-113.78057861 58.33851242]
[-109.35668945 59.69108200]
[-105.37392426 63.03396225]
[-90.60180664 65.63868713]
[-75.82968903 68.24340820]
[-61.05757523 70.84812927]
[-46.28546143 73.45285034]
[-31.51334381 76.05757141]
[-16.74122810 78.66230011]
[-1.96911120 81.26702118]
[12.80300522 83.87174225]
[33.90999985 73.12113190]
[52.58171463 88.82919312]
[67.53750610 89.97998047]
[82.49329376 91.13076019]
[98.90449524 80.40541077]
[116.40895844 89.23458099]
[131.14326477 86.42386627]
[145.87757874 83.61314392]
[160.61187744 80.80242157]
[175.34619141 77.99170685]
[190.08050537 75.18098450]
[204.81480408 72.37026215]
[219.54911804 69.55954742]
[228.44360352 56.77182388]
[243.42633057 54.13125229]
[255.56265259 62.68959427]
[270.29696655 59.87887573]
[285.03128052 57.06815720]
[295.71624756 38.94627380]
[316.01699829 34.68653488]
[332.60708618 46.64065552]
[347.16152954 43.01182556]
[361.71597290 39.38299942]
[364.88668823 24.49313927]
[374.17001343 12.50536156]
[387.68231201 5.76457262]
[402.71957397 5.55983973]
[416.29852295 11.87821388]
[425.74841309 23.41791725]
[440.30285645 19.78908730]
[443.86376953 4.90357971]
[453.94320679 -6.61440182]
[468.22494507 -12.11810970]
[483.42712402 -10.34283161]
[496.05645752 -1.69651306]
[503.21078491 11.83398438]
[503.24606323 27.13945198]
[496.15423584 40.70280457]
[483.56494141 49.40728378]
[468.37109375 51.25266647]
[454.06411743 45.81489182]
[443.93167114 34.34352493]
[429.37725830 37.97235107]
[426.45101929 52.59776688]
[417.42782593 64.55148315]
[404.05462646 71.43028259]
[388.95935059 71.82215118]
[375.13473511 65.59583282]
[365.34478760 53.93743515]
[350.79037476 57.56626129]
[336.23593140 61.19509125]
[334.12542725 70.28554535]
[328.82089233 78.03380585]
[321.01397705 83.35507202]
[311.75012207 85.48591614]
[302.28839111 84.09353638]
[293.93057251 79.32700348]
[287.84197998 71.80246735]
[273.10769653 74.61318207]
[258.37338257 77.42390442]
[250.23983765 89.84893036]
[235.33720398 92.90929413]
[222.35983276 84.29385376]
[207.62553406 87.10457611]
[192.89122009 89.91529083]
[178.15690613 92.72601318]
[163.42260742 95.53673553]
[148.68829346 98.34745026]
[133.95397949 101.15817261]
[119.21967316 103.96889496]
[118.48545837 106.59057617]
[117.39549255 109.08542633]
[115.97073364 111.40541840]
[123.91952515 124.12614441]
[131.86831665 136.84686279]
[139.81710815 149.56758118]
[155.24418640 149.66058350]
[168.15951538 158.09846497]
[174.44184875 172.18873596]
[172.08653259 187.43524170]
[161.84512329 198.97288513]
[146.98562622 203.12002563]
[132.24964905 198.55334473]
[122.33938599 186.73005676]
[120.41717529 171.42291260]
[127.09638214 157.51637268]
[119.14759064 144.79565430]
[111.19880676 132.07493591]
[103.25001526 119.35420990]
[89.83362579 116.78668213]
[81.34251404 106.08655548]
[66.38671875 104.93576813]
[51.43093109 103.78498077]
[47.98469162 109.02808380]
[43.24686432 113.07971191]
[37.60583496 115.63719177]
[31.51595879 116.51912689]
[25.46097374 115.67810822]
[19.91558075 113.20268250]
[15.30822372 109.30863190]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 124]
[2 123]
[3 122]
[4 121]
[5 120]
[6 119]
[7 118]
[8 117]
[9 116]
[10 112]
[11 111]
[12 110]
[13 108]
[14 107]
[15 106]
[16 105]
[18 101]
[19 100]
[20 99]
[21 98]
[22 97]
[24 96]
[25 95]
[26 94]
[27 93]
[29 91]
[30 90]
[32 89]
[33 88]
[34 87]
[38 85]
[39 84]
[40 83]
[41 82]
[42 81]
[43 80]
[44 79]
[45 78]
[46 77]
[47 76]
[48 72]
[49 71]
[50 70]
[52 68]
[53 67]
[54 66]
[126 217]
[127 216]
[128 215]
[130 194]
[131 193]
[132 192]
[133 191]
[134 190]
[135 189]
[136 188]
[137 187]
[140 184]
[141 183]
[142 182]
[145 175]
[146 174]
[147 173]
[153 167]
[154 166]
[197 213]
[198 212]
[199 211]
[200 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
