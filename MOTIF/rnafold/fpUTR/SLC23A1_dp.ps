%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC23A1)
} def

/sequence { (\
AAACAAUGCCUGAUAUGUGGAGUAAAGUCCUCCUCCUUGGCCUUUGUCAAGUCAUCCCCUCUUCUCCUCAGGAACUGCUCAAACCUGUGCCCCAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 18 0.024142597 ubox
3 47 0.036801420 ubox
3 88 0.045794905 ubox
4 12 0.016436927 ubox
4 17 0.024906150 ubox
4 46 0.038969881 ubox
4 77 0.297224705 ubox
4 87 0.047158094 ubox
4 89 0.021279807 ubox
5 11 0.015722567 ubox
5 16 0.023181132 ubox
5 44 0.004807489 ubox
5 45 0.038692722 ubox
5 76 0.301261642 ubox
5 86 0.045132333 ubox
5 88 0.019763651 ubox
6 14 0.019586666 ubox
6 16 0.008332377 ubox
6 43 0.006284521 ubox
6 44 0.037790641 ubox
6 55 0.007040058 ubox
6 88 0.004957101 ubox
7 13 0.020034415 ubox
7 15 0.010677517 ubox
7 54 0.007542147 ubox
7 77 0.005208508 ubox
7 81 0.019066787 ubox
7 87 0.005116417 ubox
7 94 0.054297513 ubox
8 14 0.010014607 ubox
8 18 0.005916670 ubox
8 41 0.040777139 ubox
8 52 0.003516796 ubox
8 53 0.007611115 ubox
8 76 0.020861928 ubox
8 78 0.046347265 ubox
8 80 0.020683184 ubox
8 86 0.004376650 ubox
8 90 0.017749723 ubox
8 93 0.059766300 ubox
9 17 0.006107106 ubox
9 20 0.004190658 ubox
9 40 0.040799193 ubox
9 51 0.006491608 ubox
9 72 0.990752767 ubox
9 77 0.045225504 ubox
9 89 0.016901742 ubox
10 19 0.004547348 ubox
10 39 0.040756181 ubox
10 51 0.004798308 ubox
10 71 0.993826316 ubox
10 72 0.012053992 ubox
10 97 0.005980878 ubox
11 49 0.007622753 ubox
11 50 0.003436633 ubox
11 54 0.007608349 ubox
11 70 0.993296447 ubox
11 71 0.011466192 ubox
11 81 0.010931037 ubox
11 94 0.011666053 ubox
11 96 0.005899787 ubox
12 35 0.013127643 ubox
12 38 0.009777656 ubox
12 48 0.008431608 ubox
12 53 0.008456897 ubox
12 56 0.004917468 ubox
12 69 0.993089251 ubox
12 80 0.011545089 ubox
12 93 0.012589082 ubox
13 34 0.013067814 ubox
13 37 0.010134173 ubox
13 47 0.008432269 ubox
13 52 0.008109862 ubox
13 55 0.004962518 ubox
13 68 0.986251496 ubox
13 79 0.011228428 ubox
13 88 0.020468506 ubox
14 46 0.008375357 ubox
14 51 0.005920671 ubox
14 54 0.004942112 ubox
14 77 0.005039512 ubox
14 87 0.020726020 ubox
15 45 0.008057749 ubox
15 55 0.013186008 ubox
15 76 0.005012338 ubox
15 86 0.020303997 ubox
16 54 0.014102224 ubox
16 70 0.081159326 ubox
16 94 0.006504121 ubox
17 41 0.006838667 ubox
17 53 0.014096636 ubox
17 55 0.004059947 ubox
17 69 0.090894966 ubox
17 75 0.008460730 ubox
17 84 0.021348952 ubox
17 90 0.004156787 ubox
17 93 0.007196471 ubox
18 40 0.006815876 ubox
18 49 0.004738773 ubox
18 54 0.004183963 ubox
18 74 0.008213524 ubox
18 83 0.021174224 ubox
18 89 0.004037630 ubox
18 94 0.006310994 ubox
19 30 0.073493479 ubox
19 33 0.209065083 ubox
19 36 0.022769367 ubox
19 48 0.004770178 ubox
19 53 0.003764508 ubox
19 57 0.003389933 ubox
19 62 0.107131396 ubox
19 64 0.038930817 ubox
19 65 0.010770086 ubox
19 67 0.967063112 ubox
19 92 0.004431054 ubox
19 93 0.007205219 ubox
20 29 0.073618368 ubox
20 32 0.209452933 ubox
20 35 0.024277266 ubox
20 38 0.004944068 ubox
20 47 0.004096314 ubox
20 48 0.009431274 ubox
20 56 0.003406082 ubox
20 61 0.108652153 ubox
20 63 0.038948499 ubox
20 64 0.011214725 ubox
20 66 0.967354107 ubox
20 80 0.023427041 ubox
20 91 0.004410479 ubox
20 92 0.007155959 ubox
21 28 0.072434142 ubox
21 31 0.209377925 ubox
21 34 0.024297800 ubox
21 37 0.004963018 ubox
21 47 0.009506709 ubox
21 55 0.003373394 ubox
21 60 0.108608682 ubox
21 62 0.039030651 ubox
21 63 0.010939127 ubox
21 65 0.967144158 ubox
21 79 0.023555645 ubox
22 30 0.208610405 ubox
22 33 0.024190933 ubox
22 36 0.004951072 ubox
22 47 0.005473088 ubox
22 59 0.108252560 ubox
22 61 0.039046970 ubox
22 62 0.009698384 ubox
22 64 0.964075903 ubox
22 78 0.023572971 ubox
22 90 0.007452580 ubox
23 27 0.007885961 ubox
23 46 0.110727850 ubox
23 77 0.023228082 ubox
23 89 0.007404918 ubox
24 45 0.113970546 ubox
24 63 0.324110369 ubox
24 76 0.015680468 ubox
24 88 0.006581649 ubox
25 38 0.005318945 ubox
25 44 0.115263034 ubox
25 62 0.296240342 ubox
25 63 0.512680955 ubox
26 34 0.039250262 ubox
26 37 0.006485920 ubox
26 43 0.115676118 ubox
26 60 0.501135312 ubox
26 62 0.609717566 ubox
26 63 0.015072268 ubox
26 76 0.014991040 ubox
26 86 0.004257956 ubox
27 33 0.041394675 ubox
27 36 0.006894252 ubox
27 41 0.007602149 ubox
27 42 0.115389102 ubox
27 52 0.003590915 ubox
27 55 0.012813172 ubox
27 59 0.513851236 ubox
27 61 0.624372978 ubox
27 62 0.011974015 ubox
27 75 0.018096484 ubox
27 85 0.004303796 ubox
28 40 0.003881302 ubox
28 54 0.012990919 ubox
28 73 0.014891658 ubox
28 74 0.015171044 ubox
29 39 0.003711637 ubox
29 40 0.115565233 ubox
29 72 0.017614875 ubox
30 39 0.115702418 ubox
30 51 0.005986691 ubox
30 71 0.017604379 ubox
31 50 0.005264187 ubox
31 70 0.016862660 ubox
31 73 0.011665715 ubox
32 40 0.008350318 ubox
32 72 0.012063924 ubox
33 39 0.008408489 ubox
33 51 0.010495258 ubox
33 71 0.012059208 ubox
34 50 0.009128178 ubox
34 70 0.011557008 ubox
36 51 0.986479523 ubox
37 50 0.990513538 ubox
37 51 0.006048113 ubox
38 49 0.991508191 ubox
38 50 0.004959584 ubox
38 54 0.016408204 ubox
39 48 0.992095012 ubox
39 53 0.017487945 ubox
39 59 0.004446469 ubox
40 47 0.989115548 ubox
40 52 0.017458995 ubox
40 58 0.004448251 ubox
41 46 0.985666971 ubox
41 51 0.015658432 ubox
42 51 0.009130274 ubox
42 97 0.007846481 ubox
43 50 0.011784467 ubox
43 83 0.005993512 ubox
43 96 0.008018945 ubox
44 49 0.010104372 ubox
44 82 0.006950121 ubox
44 95 0.008052767 ubox
45 50 0.003187431 ubox
45 54 0.012534310 ubox
45 81 0.007190117 ubox
45 94 0.008059680 ubox
46 53 0.016840643 ubox
46 55 0.003211921 ubox
46 80 0.007230225 ubox
46 93 0.008018867 ubox
47 54 0.003723873 ubox
49 63 0.023014135 ubox
50 60 0.011328842 ubox
50 62 0.026330208 ubox
50 65 0.004516608 ubox
50 76 0.018865355 ubox
50 79 0.006413348 ubox
51 59 0.012291612 ubox
51 61 0.026863261 ubox
51 64 0.005351519 ubox
51 75 0.019497654 ubox
51 78 0.006775325 ubox
52 74 0.018655003 ubox
52 77 0.005129237 ubox
53 77 0.004898812 ubox
54 76 0.004854375 ubox
55 73 0.021486102 ubox
56 72 0.022396554 ubox
57 71 0.022312317 ubox
57 72 0.005509811 ubox
58 71 0.005557557 ubox
58 72 0.017968664 ubox
59 71 0.018041954 ubox
59 97 0.007072752 ubox
60 70 0.017225806 ubox
60 73 0.015630700 ubox
60 96 0.006937569 ubox
61 71 0.003211462 ubox
61 72 0.016367161 ubox
61 97 0.006349880 ubox
62 70 0.003236838 ubox
62 71 0.016283906 ubox
62 73 0.010500239 ubox
62 74 0.011435252 ubox
62 96 0.006481708 ubox
63 70 0.013935471 ubox
63 72 0.011089878 ubox
63 73 0.013597962 ubox
63 95 0.006019066 ubox
64 71 0.011420618 ubox
64 72 0.013787152 ubox
65 70 0.010488026 ubox
65 71 0.012911988 ubox
65 73 0.020355082 ubox
66 71 0.003619666 ubox
66 72 0.021357494 ubox
67 71 0.021208988 ubox
67 97 0.007041268 ubox
68 96 0.007463057 ubox
69 77 0.003553530 ubox
69 87 0.042017244 ubox
70 76 0.004110631 ubox
70 79 0.003379078 ubox
70 86 0.042710337 ubox
71 75 0.004185672 ubox
71 78 0.004149356 ubox
71 80 0.003298223 ubox
71 85 0.042981535 ubox
71 91 0.024763546 ubox
71 92 0.037730609 ubox
71 93 0.048025225 ubox
72 80 0.009280893 ubox
72 84 0.042823043 ubox
72 90 0.024935043 ubox
72 91 0.038201740 ubox
72 92 0.048105089 ubox
73 79 0.010589997 ubox
74 88 0.070929443 ubox
75 87 0.073545518 ubox
75 97 0.100811862 ubox
76 87 0.004351955 ubox
76 89 0.118268652 ubox
76 94 0.050426184 ubox
76 96 0.101735175 ubox
77 86 0.008143883 ubox
77 88 0.201684031 ubox
77 90 0.877870755 ubox
77 93 0.040297225 ubox
78 87 0.210265281 ubox
78 89 0.882767296 ubox
78 97 0.011828235 ubox
79 96 0.011673373 ubox
80 87 0.855319668 ubox
80 89 0.061963526 ubox
81 86 0.772119999 ubox
81 88 0.057885762 ubox
85 97 0.066092278 ubox
86 94 0.069260045 ubox
86 96 0.066307390 ubox
87 93 0.074719842 ubox
88 94 0.054590580 ubox
89 93 0.057947718 ubox
9 72 0.9500000 lbox
10 71 0.9500000 lbox
11 70 0.9500000 lbox
12 69 0.9500000 lbox
13 68 0.9500000 lbox
19 67 0.9500000 lbox
20 66 0.9500000 lbox
21 65 0.9500000 lbox
22 64 0.9500000 lbox
25 63 0.9500000 lbox
26 62 0.9500000 lbox
27 61 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
77 90 0.9500000 lbox
78 89 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
