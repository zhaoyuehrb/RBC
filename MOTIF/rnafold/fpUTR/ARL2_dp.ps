%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ARL2)
} def

/sequence { (\
GACUAUGCCGUCGGCGAGCGUGAUAGCCAACAGGAACCGGGAGCGGGGUCCCGGGACUGGGAAGAAACGGCGGCCGGGAGGGGGCUCCGGGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.704591303 ubox
1 87 0.003260001 ubox
2 11 0.705167559 ubox
2 21 0.033291723 ubox
2 86 0.003237603 ubox
3 10 0.704321119 ubox
3 18 0.110392706 ubox
3 20 0.033859215 ubox
3 26 0.276882742 ubox
3 33 0.012460663 ubox
3 34 0.004808667 ubox
3 73 0.072374208 ubox
3 90 0.009960148 ubox
3 91 0.015207551 ubox
3 92 0.022315391 ubox
4 17 0.113041200 ubox
4 22 0.279928507 ubox
4 25 0.277550392 ubox
4 32 0.012940607 ubox
4 33 0.004608798 ubox
4 72 0.059747666 ubox
4 76 0.004219905 ubox
4 89 0.009400759 ubox
4 90 0.013456324 ubox
4 91 0.019286191 ubox
5 11 0.003377134 ubox
5 21 0.301671692 ubox
5 24 0.275070911 ubox
6 10 0.003408300 ubox
6 16 0.148588668 ubox
6 20 0.305014484 ubox
6 22 0.012525997 ubox
6 23 0.271614730 ubox
6 29 0.022017102 ubox
6 32 0.011836510 ubox
6 72 0.220492617 ubox
6 76 0.005873223 ubox
7 12 0.005939581 ubox
7 15 0.207440125 ubox
7 19 0.310593044 ubox
7 21 0.029444673 ubox
7 27 0.091091489 ubox
7 28 0.017532630 ubox
7 31 0.011752907 ubox
7 71 0.365582183 ubox
7 74 0.153101121 ubox
7 75 0.005877862 ubox
7 85 0.013634540 ubox
8 14 0.207545461 ubox
8 18 0.310566620 ubox
8 20 0.026837139 ubox
8 26 0.092887943 ubox
8 34 0.148340972 ubox
8 70 0.365849288 ubox
8 73 0.218526036 ubox
8 81 0.007101977 ubox
8 82 0.003425181 ubox
8 84 0.013632517 ubox
8 90 0.029065286 ubox
8 91 0.029361957 ubox
8 92 0.027976590 ubox
9 13 0.206043370 ubox
9 16 0.308653041 ubox
9 20 0.266540660 ubox
9 22 0.016947565 ubox
9 33 0.149140425 ubox
9 69 0.365841875 ubox
9 72 0.219029852 ubox
9 80 0.007155723 ubox
9 81 0.003444639 ubox
9 83 0.013600966 ubox
9 89 0.029148387 ubox
9 90 0.029414542 ubox
9 91 0.027983189 ubox
10 15 0.300824992 ubox
10 19 0.267074152 ubox
10 21 0.016625807 ubox
10 24 0.091150065 ubox
10 31 0.282458359 ubox
10 68 0.364789600 ubox
10 71 0.219041205 ubox
10 74 0.003347115 ubox
10 88 0.008935679 ubox
10 94 0.030081840 ubox
11 17 0.061067778 ubox
11 18 0.253681142 ubox
11 23 0.093320354 ubox
11 30 0.281178598 ubox
11 61 0.010952842 ubox
11 62 0.031351305 ubox
11 65 0.071672707 ubox
11 67 0.336316294 ubox
11 70 0.218917459 ubox
11 73 0.003895743 ubox
11 77 0.011438733 ubox
11 81 0.011937025 ubox
11 90 0.003820573 ubox
11 93 0.030137719 ubox
12 16 0.069411099 ubox
12 20 0.029168795 ubox
12 22 0.093293304 ubox
12 60 0.022262666 ubox
12 61 0.041142265 ubox
12 64 0.096015130 ubox
12 69 0.218132467 ubox
12 72 0.004313582 ubox
12 76 0.065117157 ubox
12 80 0.007146623 ubox
12 89 0.003495720 ubox
12 92 0.029973682 ubox
13 19 0.031686047 ubox
13 21 0.079042021 ubox
13 28 0.858579337 ubox
13 68 0.152555844 ubox
13 71 0.004757958 ubox
13 75 0.075560627 ubox
13 95 0.004787718 ubox
14 21 0.052975626 ubox
14 27 0.861170471 ubox
14 71 0.009344775 ubox
14 74 0.075737008 ubox
14 94 0.004789574 ubox
15 20 0.069438617 ubox
15 22 0.015083871 ubox
15 26 0.860972913 ubox
15 69 0.004892494 ubox
15 70 0.009389234 ubox
15 72 0.017634809 ubox
15 73 0.075308677 ubox
16 21 0.016673080 ubox
16 68 0.004853327 ubox
16 71 0.020420991 ubox
18 27 0.220734636 ubox
18 71 0.034163473 ubox
19 26 0.222174005 ubox
19 69 0.079350052 ubox
19 70 0.025588972 ubox
19 72 0.007951196 ubox
20 27 0.046566512 ubox
20 31 0.082643241 ubox
20 68 0.083183207 ubox
20 71 0.008122110 ubox
21 26 0.045938142 ubox
21 29 0.032207959 ubox
21 30 0.080919512 ubox
21 32 0.020779464 ubox
21 67 0.082918256 ubox
21 69 0.004915052 ubox
21 70 0.007904236 ubox
22 28 0.040745258 ubox
22 31 0.025242588 ubox
22 68 0.005742777 ubox
26 71 0.019402069 ubox
27 34 0.089525624 ubox
27 60 0.015224748 ubox
27 61 0.093115557 ubox
27 70 0.019443520 ubox
27 92 0.003766690 ubox
28 33 0.090088878 ubox
28 59 0.015133017 ubox
28 60 0.093827826 ubox
28 69 0.019410583 ubox
28 91 0.003652763 ubox
29 58 0.010939999 ubox
31 59 0.431125247 ubox
32 58 0.431716809 ubox
33 57 0.430379276 ubox
33 58 0.044606924 ubox
33 95 0.866038928 ubox
34 57 0.059568622 ubox
34 94 0.873457366 ubox
37 46 0.009240053 ubox
37 54 0.435317420 ubox
37 55 0.005244685 ubox
37 60 0.003522647 ubox
37 90 0.052929632 ubox
37 91 0.898132372 ubox
37 92 0.023204823 ubox
38 45 0.009264074 ubox
38 53 0.435415445 ubox
38 54 0.003741220 ubox
38 59 0.003530275 ubox
38 89 0.053483895 ubox
38 90 0.897851969 ubox
38 91 0.021981281 ubox
39 44 0.009230274 ubox
39 52 0.435432145 ubox
39 58 0.003527846 ubox
39 88 0.044918851 ubox
40 51 0.435439246 ubox
40 57 0.003528478 ubox
40 87 0.033420289 ubox
40 88 0.898612926 ubox
41 50 0.435430537 ubox
41 86 0.014468772 ubox
41 87 0.899526285 ubox
42 49 0.427485929 ubox
42 86 0.899898270 ubox
43 49 0.029419421 ubox
43 85 0.900142677 ubox
44 48 0.055932002 ubox
44 53 0.003559737 ubox
44 84 0.899893535 ubox
44 89 0.003381519 ubox
45 52 0.003563914 ubox
45 88 0.003394663 ubox
46 51 0.003551532 ubox
46 87 0.003395434 ubox
47 75 0.005612692 ubox
47 86 0.003399350 ubox
47 95 0.006349911 ubox
48 74 0.005616284 ubox
48 85 0.003409890 ubox
48 94 0.006425493 ubox
49 62 0.006155823 ubox
49 73 0.005615044 ubox
49 79 0.896042792 ubox
49 81 0.007067175 ubox
49 84 0.003400492 ubox
49 93 0.006416846 ubox
50 61 0.006670982 ubox
50 72 0.005613309 ubox
50 78 0.900089338 ubox
50 80 0.005733652 ubox
50 83 0.003579628 ubox
50 92 0.006395267 ubox
51 60 0.006682821 ubox
51 70 0.005619199 ubox
51 77 0.900104866 ubox
51 78 0.006071815 ubox
51 82 0.003576162 ubox
51 91 0.006371070 ubox
52 59 0.006682161 ubox
52 69 0.005620495 ubox
52 76 0.900078808 ubox
52 77 0.006265580 ubox
52 81 0.003571439 ubox
52 90 0.006340981 ubox
53 58 0.005091187 ubox
53 68 0.005615678 ubox
53 75 0.898532299 ubox
54 74 0.896341982 ubox
54 75 0.053179807 ubox
54 88 0.006128571 ubox
55 74 0.074800106 ubox
55 87 0.006122208 ubox
56 86 0.004178367 ubox
57 64 0.021997792 ubox
57 70 0.878145185 ubox
57 73 0.150281910 ubox
57 77 0.004315481 ubox
58 63 0.021986301 ubox
58 69 0.883895547 ubox
58 72 0.151556444 ubox
58 76 0.004316468 ubox
59 68 0.885685222 ubox
59 71 0.151774695 ubox
59 75 0.004329051 ubox
60 74 0.004327463 ubox
68 89 0.009707451 ubox
69 88 0.009800556 ubox
69 95 0.013871130 ubox
70 87 0.009793419 ubox
70 94 0.014211977 ubox
72 86 0.011034544 ubox
72 95 0.184575671 ubox
73 85 0.012104121 ubox
73 94 0.186749626 ubox
74 84 0.012077530 ubox
74 90 0.068791441 ubox
74 91 0.368621016 ubox
74 92 0.136820442 ubox
75 83 0.012042290 ubox
75 89 0.074154628 ubox
75 90 0.397915161 ubox
75 91 0.130489553 ubox
76 88 0.062685416 ubox
77 87 0.048122865 ubox
77 88 0.430193153 ubox
78 85 0.008710825 ubox
78 86 0.023857714 ubox
78 87 0.432383214 ubox
79 86 0.434124356 ubox
80 85 0.433986417 ubox
80 88 0.003280707 ubox
81 85 0.004852775 ubox
81 87 0.003282681 ubox
82 95 0.003384172 ubox
83 94 0.003420737 ubox
83 95 0.004295437 ubox
84 94 0.004356094 ubox
85 92 0.004164816 ubox
86 91 0.003859302 ubox
86 93 0.003325156 ubox
87 92 0.003419690 ubox
89 95 0.017225008 ubox
90 94 0.017089630 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
33 95 0.9500000 lbox
34 94 0.9500000 lbox
37 91 0.9500000 lbox
38 90 0.9500000 lbox
40 88 0.9500000 lbox
41 87 0.9500000 lbox
42 86 0.9500000 lbox
43 85 0.9500000 lbox
44 84 0.9500000 lbox
49 79 0.9500000 lbox
50 78 0.9500000 lbox
51 77 0.9500000 lbox
52 76 0.9500000 lbox
53 75 0.9500000 lbox
54 74 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
showpage
end
%%EOF
