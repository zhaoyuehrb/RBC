%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGUAGACGGCCGAGCAGUGGAGCGAGGCCGCCUAAAGGAGAGCCGCGCUGUCGAUGAGUCCCAGUGGGCCACCUGGAGCGGAAGUGGAGGAGCGGCCGGAAGUAGCCGGAAUCUCUGAAAGACUGACCGACUGACUCUGACAGGAUCCGGGGCUGAGGGAAGGAGGCGGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[119.41309357 200.38809204]
[125.45943451 184.54895020]
[125.45943451 169.54895020]
[125.45943451 154.54895020]
[125.45943451 139.54895020]
[125.45943451 124.54895020]
[118.49295807 121.77079773]
[112.93640900 135.70365906]
[99.00363159 130.14689636]
[104.55999756 116.21448517]
[97.59351349 113.43632507]
[87.27139282 124.31997681]
[76.94927979 135.20362854]
[66.62715912 146.08728027]
[66.87083435 161.66221619]
[56.24769974 172.55273438]
[41.39788437 172.68907166]
[31.07576561 183.57272339]
[31.74461365 199.36283875]
[20.99087715 210.94441223]
[5.19455957 211.44628906]
[-6.27266645 200.57069397]
[-6.60749769 184.76995850]
[4.38871479 173.41835022]
[20.19211388 173.25059509]
[30.51423073 162.36694336]
[29.86445808 147.53073120]
[40.17751312 136.34611511]
[55.74350739 135.76516724]
[66.06562805 124.88151550]
[76.38774109 113.99786377]
[86.70986176 103.11421204]
[95.18048096 90.73484802]
[101.58632660 77.17147827]
[107.99217987 63.60810089]
[114.39802551 50.04472733]
[102.55516052 38.39529037]
[95.41715240 23.42327499]
[93.82761383 6.93884182]
[97.96048737 -9.07161331]
[107.30123901 -22.68481445]
[120.71080017 -32.27164459]
[136.56448364 -36.69209290]
[152.94880676 -35.43080902]
[158.87199402 -49.21180725]
[164.79518127 -62.99280167]
[170.71836853 -76.77380371]
[169.05924988 -92.50777435]
[181.19349670 -101.14543915]
[187.11668396 -114.92643738]
[192.54981995 -128.90788269]
[197.48616028 -143.07237244]
[202.42250061 -157.23686218]
[207.35882568 -171.40133667]
[212.29516602 -185.56582642]
[217.23149109 -199.73031616]
[216.36479187 -206.33390808]
[218.64079285 -211.58271790]
[222.60006714 -214.30227661]
[228.03321838 -228.28373718]
[233.46635437 -242.26518250]
[238.89950562 -256.24664307]
[244.33264160 -270.22808838]
[242.48417664 -285.11373901]
[233.79638672 -297.34170532]
[225.10861206 -309.56964111]
[216.42083740 -321.79757690]
[200.90379333 -321.82720947]
[188.38752747 -330.99908447]
[183.68482971 -345.78637695]
[188.60395813 -360.50308228]
[201.25340271 -369.49035645]
[216.76922607 -369.29238892]
[229.18524170 -359.98529053]
[233.72726440 -345.14782715]
[228.64877319 -330.48535156]
[237.33654785 -318.25741577]
[246.02433777 -306.02947998]
[254.71211243 -293.80154419]
[269.70977783 -293.53680420]
[278.82366943 -305.45053101]
[287.83209229 -317.44421387]
[296.73434448 -329.51690674]
[305.63656616 -341.58963013]
[307.25128174 -359.91885376]
[323.57043457 -366.33773804]
[332.25820923 -378.56567383]
[340.94598389 -390.79360962]
[334.64617920 -407.76904297]
[339.73037720 -424.98379517]
[353.99050903 -435.62515259]
[371.62661743 -435.59948730]
[379.87744141 -448.12643433]
[388.12826538 -460.65335083]
[396.37908936 -473.18026733]
[391.07492065 -487.64306641]
[395.25512695 -502.28475952]
[407.11505127 -511.54791260]
[421.97744751 -512.04528809]
[430.22827148 -524.57220459]
[438.47909546 -537.09918213]
[446.72991943 -549.62609863]
[443.29904175 -565.05346680]
[451.85223389 -578.34326172]
[467.31503296 -581.61083984]
[480.51364136 -572.91760254]
[483.61755371 -557.42114258]
[474.78527832 -544.31518555]
[459.25683594 -541.37524414]
[451.00601196 -528.84832764]
[442.75518799 -516.32141113]
[434.50436401 -503.79446411]
[439.91625977 -489.94351196]
[436.08911133 -475.38955688]
[424.28796387 -465.76739502]
[408.90600586 -464.92944336]
[400.65518188 -452.40252686]
[392.40435791 -439.87561035]
[384.15353394 -427.34866333]
[390.08038330 -416.71520996]
[390.91693115 -404.49783325]
[386.44223022 -393.02105713]
[377.45184326 -384.49472046]
[365.61691284 -380.58865356]
[353.17391968 -382.10583496]
[344.48614502 -369.87789917]
[335.79837036 -357.64996338]
[337.50466919 -345.65527344]
[330.34100342 -335.39135742]
[317.70925903 -332.68737793]
[308.80703735 -320.61468506]
[299.90481567 -308.54196167]
[298.46139526 -301.27044678]
[290.73739624 -296.33660889]
[281.62350464 -284.42288208]
[258.31408691 -264.79495239]
[252.88095093 -250.81349182]
[247.44781494 -236.83203125]
[242.01466370 -222.85058594]
[236.58152771 -208.86914062]
[231.39598083 -194.79397583]
[226.45964050 -180.62950134]
[221.52331543 -166.46501160]
[216.58697510 -152.30052185]
[211.65065002 -138.13604736]
[206.71430969 -123.97155762]
[207.83796692 -121.37212372]
[207.98373413 -118.16454315]
[206.91232300 -114.72489929]
[204.52702332 -111.50969696]
[200.89767456 -109.00325775]
[194.97450256 -95.22225952]
[197.05728149 -80.47399139]
[184.49935913 -70.85061646]
[178.57618713 -57.06961823]
[172.65299988 -43.28862000]
[166.72981262 -29.50762367]
[177.02151489 -20.77211380]
[184.43928528 -9.47345066]
[188.37231445 3.47529054]
[188.49186707 17.02447319]
[184.77870178 30.07298279]
[177.52546692 41.55771637]
[167.31364441 50.54018021]
[154.96690369 56.28320694]
[141.48471069 58.31141663]
[127.96139526 56.45057297]
[121.55554962 70.01394653]
[115.14970398 83.57732391]
[108.74385834 97.14069366]
[128.07646179 103.23350525]
[140.45944214 124.54895020]
[140.45944214 139.54895020]
[140.45944214 154.54895020]
[140.45944214 169.54895020]
[140.45944214 184.54895020]
[146.50576782 200.38809204]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[11 32]
[12 31]
[13 30]
[14 29]
[17 26]
[18 25]
[33 170]
[34 169]
[35 168]
[36 167]
[44 157]
[45 156]
[46 155]
[47 154]
[49 152]
[50 151]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[56 141]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 79]
[65 78]
[66 77]
[67 76]
[80 135]
[81 134]
[82 132]
[83 131]
[84 130]
[86 127]
[87 126]
[88 125]
[92 119]
[93 118]
[94 117]
[95 116]
[99 112]
[100 111]
[101 110]
[102 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
