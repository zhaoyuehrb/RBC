%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HLA-C)
} def

/sequence { (\
UCCGCAGUCCCGGUUCUAAAGUCCCCAGUCACCCACCCGGACUCACAUUCUCCCCAGAGGCCGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.089031743 ubox
1 58 0.003749089 ubox
1 60 0.004029941 ubox
1 64 0.503440316 ubox
2 12 0.003415463 ubox
2 13 0.182241001 ubox
2 40 0.098827175 ubox
2 57 0.003985145 ubox
2 59 0.004741544 ubox
2 60 0.034399343 ubox
2 63 0.537029690 ubox
3 12 0.183900536 ubox
3 39 0.098867190 ubox
3 59 0.034356523 ubox
3 63 0.170937234 ubox
4 11 0.178463374 ubox
4 14 0.008943366 ubox
4 38 0.098237207 ubox
4 61 0.578829697 ubox
4 62 0.144025439 ubox
5 13 0.009375761 ubox
5 60 0.585116587 ubox
6 17 0.026307332 ubox
6 43 0.802034653 ubox
7 16 0.027609774 ubox
7 32 0.006611762 ubox
7 36 0.093149147 ubox
7 42 0.862364995 ubox
7 46 0.007849199 ubox
7 61 0.017602314 ubox
8 31 0.006438140 ubox
8 35 0.092454266 ubox
8 41 0.863754522 ubox
8 45 0.007177970 ubox
8 58 0.083409108 ubox
8 60 0.016561693 ubox
8 64 0.020792212 ubox
9 40 0.855400083 ubox
9 57 0.083854020 ubox
9 59 0.015943490 ubox
9 60 0.007247166 ubox
9 63 0.018678049 ubox
10 39 0.846083910 ubox
10 40 0.142203250 ubox
10 59 0.007280654 ubox
10 60 0.005594195 ubox
11 39 0.187915253 ubox
11 59 0.005675102 ubox
11 63 0.426568607 ubox
12 23 0.003725033 ubox
12 24 0.021583801 ubox
12 25 0.011649121 ubox
12 26 0.014374350 ubox
12 30 0.004902090 ubox
12 33 0.129542328 ubox
12 34 0.027909204 ubox
12 37 0.833466166 ubox
12 38 0.221715336 ubox
12 43 0.004937363 ubox
12 44 0.003254949 ubox
12 49 0.003771868 ubox
12 50 0.006699722 ubox
12 51 0.019770209 ubox
12 52 0.010647200 ubox
12 53 0.084711187 ubox
12 54 0.060298912 ubox
12 55 0.022122343 ubox
12 62 0.431284071 ubox
13 22 0.003565198 ubox
13 23 0.021665301 ubox
13 24 0.011632099 ubox
13 25 0.014338587 ubox
13 29 0.004194070 ubox
13 32 0.130095902 ubox
13 33 0.027127460 ubox
13 36 0.834235410 ubox
13 37 0.218297661 ubox
13 42 0.005386500 ubox
13 46 0.008590225 ubox
13 48 0.005147021 ubox
13 49 0.006754233 ubox
13 50 0.021982512 ubox
13 51 0.007259079 ubox
13 52 0.085074275 ubox
13 53 0.059803463 ubox
13 54 0.022030485 ubox
13 61 0.431078307 ubox
14 20 0.010761129 ubox
14 21 0.015108205 ubox
14 28 0.008475455 ubox
14 31 0.128017701 ubox
14 35 0.790065053 ubox
14 41 0.005446010 ubox
14 45 0.008587749 ubox
14 47 0.006853238 ubox
14 59 0.129206063 ubox
14 60 0.381866883 ubox
14 65 0.018516069 ubox
15 19 0.017493325 ubox
15 20 0.023129754 ubox
15 27 0.015329741 ubox
15 40 0.005429406 ubox
15 58 0.183506427 ubox
15 59 0.139186515 ubox
15 60 0.071629846 ubox
15 64 0.028568627 ubox
16 28 0.150004113 ubox
16 39 0.005412244 ubox
16 57 0.193478990 ubox
16 59 0.099505403 ubox
16 60 0.011748810 ubox
16 63 0.029384151 ubox
16 65 0.006937913 ubox
17 27 0.144965460 ubox
17 56 0.186132020 ubox
17 58 0.093484981 ubox
17 59 0.009461211 ubox
17 64 0.006915686 ubox
18 49 0.046829726 ubox
19 48 0.048028592 ubox
19 49 0.011359245 ubox
20 43 0.444805090 ubox
20 48 0.007825646 ubox
20 49 0.011918230 ubox
20 51 0.062368487 ubox
21 29 0.057056681 ubox
21 32 0.243996585 ubox
21 36 0.025541365 ubox
21 42 0.469772035 ubox
21 46 0.015305923 ubox
21 48 0.013562724 ubox
21 50 0.064117660 ubox
22 28 0.066085993 ubox
22 31 0.241410601 ubox
22 35 0.024504166 ubox
22 41 0.470038566 ubox
22 45 0.014735163 ubox
22 47 0.013502047 ubox
23 40 0.468269276 ubox
24 39 0.465555096 ubox
24 40 0.043909425 ubox
25 39 0.060220427 ubox
25 40 0.013569712 ubox
26 39 0.014528693 ubox
27 43 0.082596686 ubox
28 36 0.315844402 ubox
28 42 0.086336022 ubox
28 46 0.012741475 ubox
29 35 0.303998596 ubox
29 40 0.006028010 ubox
29 41 0.085952235 ubox
29 45 0.012445165 ubox
30 39 0.010837975 ubox
30 40 0.082186600 ubox
32 40 0.023308984 ubox
33 39 0.026004344 ubox
33 40 0.038324261 ubox
34 39 0.040367534 ubox
38 63 0.086915455 ubox
39 53 0.006989525 ubox
39 62 0.087809393 ubox
40 52 0.007015720 ubox
40 61 0.086247041 ubox
41 51 0.006636601 ubox
42 59 0.089664540 ubox
42 60 0.011266651 ubox
42 65 0.119672141 ubox
43 58 0.092007583 ubox
43 59 0.008915106 ubox
43 60 0.003980212 ubox
43 64 0.157210948 ubox
44 57 0.093308522 ubox
44 59 0.017403479 ubox
44 63 0.181411106 ubox
48 57 0.007291242 ubox
48 58 0.012841301 ubox
48 59 0.242486969 ubox
48 60 0.020163023 ubox
48 64 0.038493770 ubox
48 65 0.152828058 ubox
49 56 0.009968812 ubox
49 57 0.010523784 ubox
49 58 0.316045697 ubox
49 59 0.007109181 ubox
49 60 0.431834182 ubox
49 63 0.037252606 ubox
49 64 0.225021126 ubox
50 57 0.324896575 ubox
50 59 0.830519184 ubox
50 60 0.012825834 ubox
50 63 0.230986079 ubox
50 65 0.206005335 ubox
51 56 0.296983787 ubox
51 58 0.833091097 ubox
51 59 0.010132858 ubox
51 60 0.016858866 ubox
51 64 0.212363807 ubox
52 57 0.830440702 ubox
52 59 0.028333501 ubox
52 60 0.107085251 ubox
52 63 0.211603852 ubox
53 59 0.108490746 ubox
53 60 0.279028477 ubox
54 59 0.279335980 ubox
54 60 0.124042449 ubox
55 59 0.123916745 ubox
1 64 0.9500000 lbox
2 63 0.9500000 lbox
4 61 0.9500000 lbox
5 60 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
10 39 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
52 57 0.9500000 lbox
showpage
end
%%EOF
