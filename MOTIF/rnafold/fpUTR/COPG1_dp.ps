%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COPG1)
} def

/sequence { (\
GGGGCCCGGAAGUGGUCCCUGUAGAACCACUGUGGCACCGCUACUCCGUGCCGCGCCCGUCGAGCAUUGCGUUGCUGCAUUGCGCCCCACCGACUCCACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.007535029 ubox
1 39 0.003579857 ubox
1 57 0.006311811 ubox
1 58 0.016872010 ubox
1 87 0.020630328 ubox
1 88 0.991436531 ubox
1 91 0.046162772 ubox
1 95 0.003162993 ubox
1 96 0.004298476 ubox
1 97 0.075870989 ubox
1 100 0.003406780 ubox
2 18 0.007548394 ubox
2 38 0.003563012 ubox
2 39 0.003508630 ubox
2 52 0.003202795 ubox
2 56 0.006355399 ubox
2 57 0.016547051 ubox
2 58 0.066387616 ubox
2 86 0.020683117 ubox
2 87 0.992191645 ubox
2 88 0.005944459 ubox
2 90 0.045807192 ubox
2 91 0.003375151 ubox
2 94 0.003748160 ubox
2 95 0.003351808 ubox
2 96 0.075735533 ubox
2 97 0.011244884 ubox
2 99 0.003963947 ubox
3 17 0.007548766 ubox
3 38 0.003517033 ubox
3 52 0.091574333 ubox
3 56 0.013709152 ubox
3 57 0.066586320 ubox
3 85 0.003698445 ubox
3 86 0.991331287 ubox
3 87 0.004963982 ubox
3 88 0.003737182 ubox
3 94 0.003710394 ubox
3 95 0.062197581 ubox
3 96 0.011033364 ubox
4 16 0.007542971 ubox
4 36 0.004882180 ubox
4 51 0.095745788 ubox
4 54 0.008667594 ubox
4 56 0.066670376 ubox
4 85 0.990971909 ubox
4 86 0.004035532 ubox
4 87 0.003507050 ubox
4 94 0.061974353 ubox
4 95 0.010256616 ubox
5 15 0.007312993 ubox
5 35 0.004853204 ubox
5 50 0.095741362 ubox
5 53 0.008641834 ubox
5 55 0.066614463 ubox
5 84 0.988950480 ubox
6 14 0.007041715 ubox
6 15 0.010501457 ubox
6 34 0.004792518 ubox
6 35 0.003250893 ubox
7 14 0.010729683 ubox
7 32 0.003675029 ubox
7 34 0.003834304 ubox
7 48 0.112368474 ubox
7 53 0.020103575 ubox
7 55 0.006584559 ubox
7 59 0.820829501 ubox
7 62 0.139132514 ubox
7 82 0.086215367 ubox
7 84 0.007475216 ubox
7 92 0.061592729 ubox
8 13 0.009679960 ubox
8 18 0.010173671 ubox
8 19 0.005689277 ubox
8 31 0.005004074 ubox
8 33 0.004482622 ubox
8 45 0.003929274 ubox
8 47 0.114487519 ubox
8 52 0.019968263 ubox
8 57 0.113456693 ubox
8 58 0.839032194 ubox
8 61 0.138697770 ubox
8 81 0.073017941 ubox
8 83 0.013644139 ubox
8 88 0.004727013 ubox
8 91 0.061939896 ubox
8 97 0.003599579 ubox
9 17 0.010212841 ubox
9 18 0.005664929 ubox
9 30 0.003723745 ubox
9 44 0.004506817 ubox
9 46 0.114490391 ubox
9 51 0.019882131 ubox
9 56 0.117960277 ubox
9 57 0.836505055 ubox
9 60 0.108707957 ubox
9 61 0.038670078 ubox
9 80 0.044741702 ubox
9 81 0.010473072 ubox
9 87 0.004738760 ubox
9 90 0.061542060 ubox
9 96 0.003602614 ubox
10 16 0.009810587 ubox
10 45 0.110360736 ubox
10 60 0.037658262 ubox
10 80 0.011375595 ubox
10 81 0.011660512 ubox
10 95 0.003428717 ubox
11 31 0.932785834 ubox
11 42 0.096352331 ubox
11 45 0.003476728 ubox
11 80 0.005781700 ubox
12 30 0.994024244 ubox
12 41 0.101720302 ubox
12 44 0.004705799 ubox
12 54 0.011552978 ubox
12 56 0.003548575 ubox
13 29 0.994233552 ubox
13 40 0.101691691 ubox
13 43 0.004618620 ubox
13 53 0.011543374 ubox
14 28 0.994559299 ubox
14 39 0.101743679 ubox
14 42 0.004313675 ubox
14 52 0.011530297 ubox
15 27 0.994408892 ubox
15 38 0.101744388 ubox
15 41 0.004307088 ubox
15 51 0.011528211 ubox
16 21 0.003184272 ubox
16 25 0.620753885 ubox
16 26 0.763963297 ubox
16 37 0.100084602 ubox
16 40 0.004224279 ubox
16 50 0.010853256 ubox
17 24 0.877135328 ubox
17 35 0.042839014 ubox
18 34 0.042639514 ubox
18 35 0.091031291 ubox
19 34 0.091086751 ubox
19 35 0.014614824 ubox
20 29 0.010656080 ubox
20 32 0.010985545 ubox
20 34 0.014850579 ubox
21 27 0.003615108 ubox
21 28 0.010958030 ubox
21 30 0.032164384 ubox
21 31 0.004519959 ubox
21 33 0.027819744 ubox
21 44 0.010225197 ubox
22 26 0.003838652 ubox
22 29 0.030947768 ubox
22 32 0.087535448 ubox
22 43 0.010236464 ubox
23 31 0.089948189 ubox
23 42 0.010235843 ubox
24 30 0.089934800 ubox
24 41 0.010222972 ubox
24 61 0.009114969 ubox
25 60 0.008163230 ubox
26 33 0.004487708 ubox
26 60 0.006406468 ubox
27 32 0.004507852 ubox
27 35 0.010246985 ubox
27 59 0.007727463 ubox
28 34 0.010264874 ubox
28 50 0.003271881 ubox
29 33 0.008322053 ubox
29 49 0.003786227 ubox
30 48 0.003785637 ubox
31 55 0.251889997 ubox
31 79 0.011539938 ubox
32 41 0.003529364 ubox
32 44 0.059153647 ubox
32 54 0.989907897 ubox
32 56 0.013850541 ubox
32 58 0.006571745 ubox
32 78 0.025082446 ubox
33 40 0.003540388 ubox
33 43 0.059269790 ubox
33 53 0.990446681 ubox
33 55 0.012542677 ubox
33 77 0.025047903 ubox
34 39 0.003514885 ubox
34 42 0.059303587 ubox
34 52 0.992543435 ubox
34 54 0.004082301 ubox
34 57 0.008077995 ubox
34 76 0.025057895 ubox
35 41 0.059332659 ubox
35 51 0.992588353 ubox
35 56 0.008158284 ubox
35 75 0.025165290 ubox
36 40 0.058901568 ubox
36 50 0.992549650 ubox
36 55 0.008175955 ubox
36 74 0.025165509 ubox
37 49 0.990756497 ubox
37 73 0.024882490 ubox
38 48 0.892736475 ubox
39 48 0.428545179 ubox
39 50 0.008546769 ubox
39 53 0.003555106 ubox
39 71 0.025075030 ubox
40 47 0.586543698 ubox
40 49 0.027606714 ubox
40 51 0.007539246 ubox
40 70 0.025152500 ubox
41 48 0.033614300 ubox
41 50 0.007754058 ubox
41 69 0.025063338 ubox
43 49 0.004761234 ubox
43 68 0.009347150 ubox
44 48 0.005288667 ubox
44 64 0.018096073 ubox
45 63 0.018537258 ubox
45 93 0.007258236 ubox
46 62 0.018286207 ubox
46 92 0.007857585 ubox
47 55 0.007029023 ubox
47 59 0.018761256 ubox
47 62 0.004914841 ubox
48 54 0.007604134 ubox
48 56 0.009526967 ubox
48 58 0.019540049 ubox
48 61 0.005719911 ubox
48 67 0.018931129 ubox
48 78 0.003248834 ubox
48 80 0.010408471 ubox
48 90 0.011254803 ubox
49 53 0.007132569 ubox
49 55 0.009736393 ubox
49 59 0.003371673 ubox
49 62 0.017452504 ubox
49 66 0.022597234 ubox
49 77 0.003163102 ubox
49 79 0.014891111 ubox
49 89 0.011898346 ubox
50 54 0.009500783 ubox
50 56 0.026346197 ubox
50 58 0.003881932 ubox
50 60 0.008334834 ubox
50 61 0.022775122 ubox
50 65 0.023552913 ubox
50 75 0.012020275 ubox
50 78 0.016069126 ubox
50 83 0.004525920 ubox
50 88 0.012047685 ubox
51 55 0.026210937 ubox
51 59 0.008939020 ubox
51 64 0.023564244 ubox
51 74 0.012036107 ubox
51 77 0.016049845 ubox
51 82 0.004521259 ubox
52 59 0.026534214 ubox
52 62 0.038972952 ubox
53 58 0.025796200 ubox
53 60 0.020752870 ubox
53 61 0.038527172 ubox
53 65 0.003791246 ubox
53 70 0.003294834 ubox
53 72 0.012992181 ubox
53 75 0.015755441 ubox
53 78 0.005112228 ubox
53 83 0.009094917 ubox
53 85 0.100661490 ubox
54 59 0.041424656 ubox
54 62 0.022526607 ubox
54 64 0.003808304 ubox
54 69 0.003293444 ubox
54 71 0.013253172 ubox
54 74 0.015755813 ubox
54 77 0.005115067 ubox
54 82 0.009105030 ubox
54 84 0.100941691 ubox
55 61 0.051588878 ubox
55 65 0.028538906 ubox
55 70 0.014076741 ubox
55 72 0.005108257 ubox
55 73 0.013983229 ubox
55 75 0.014024246 ubox
55 78 0.031685894 ubox
55 81 0.008488402 ubox
55 83 0.153210376 ubox
55 85 0.020777587 ubox
56 64 0.028610152 ubox
56 69 0.014034888 ubox
56 71 0.006504293 ubox
56 74 0.014055951 ubox
56 77 0.031680469 ubox
56 82 0.153062324 ubox
56 84 0.020813433 ubox
58 69 0.006490529 ubox
58 71 0.023575706 ubox
58 74 0.003197319 ubox
58 77 0.004307581 ubox
58 82 0.020464982 ubox
58 84 0.006248152 ubox
59 65 0.012287505 ubox
59 67 0.003688893 ubox
59 68 0.006699017 ubox
59 70 0.023898165 ubox
59 75 0.009994943 ubox
59 76 0.003704768 ubox
59 78 0.068019369 ubox
59 80 0.107933443 ubox
59 81 0.021190672 ubox
59 83 0.017426138 ubox
59 85 0.013788092 ubox
59 90 0.005872975 ubox
59 94 0.068253104 ubox
59 99 0.005401861 ubox
60 64 0.011554261 ubox
60 66 0.003734547 ubox
60 69 0.018996427 ubox
60 74 0.007258353 ubox
60 77 0.057989002 ubox
60 79 0.111694044 ubox
60 82 0.014309008 ubox
60 84 0.013431840 ubox
60 89 0.005869508 ubox
60 93 0.068375725 ubox
60 98 0.005336335 ubox
61 69 0.014513324 ubox
61 71 0.005959361 ubox
61 74 0.009541009 ubox
61 77 0.062846786 ubox
61 82 0.014101886 ubox
61 84 0.005217935 ubox
61 92 0.068398961 ubox
62 68 0.014081834 ubox
62 70 0.005975567 ubox
62 73 0.009892261 ubox
62 76 0.031334482 ubox
62 81 0.014550908 ubox
62 83 0.008260171 ubox
62 91 0.066232594 ubox
62 96 0.005632312 ubox
63 67 0.012037786 ubox
63 72 0.009597125 ubox
63 73 0.011253435 ubox
63 76 0.194656290 ubox
63 80 0.013784469 ubox
63 95 0.005628138 ubox
64 70 0.014697755 ubox
64 72 0.012234810 ubox
64 75 0.200078632 ubox
64 78 0.018352629 ubox
64 83 0.976278432 ubox
64 85 0.004911839 ubox
64 94 0.004747950 ubox
65 69 0.014610643 ubox
65 71 0.012383795 ubox
65 74 0.200087458 ubox
65 77 0.018371966 ubox
65 82 0.977498910 ubox
65 84 0.004833723 ubox
66 72 0.007618057 ubox
66 73 0.195521119 ubox
66 76 0.017049155 ubox
66 80 0.018730471 ubox
66 81 0.964115779 ubox
67 71 0.009984614 ubox
67 79 0.018629165 ubox
67 93 0.003290225 ubox
68 74 0.003285871 ubox
68 79 0.964600969 ubox
68 84 0.005399366 ubox
68 92 0.003589250 ubox
69 75 0.017668745 ubox
69 78 0.978126068 ubox
69 83 0.015971856 ubox
69 85 0.020294355 ubox
69 91 0.003592541 ubox
70 74 0.017610784 ubox
70 77 0.977697461 ubox
70 82 0.015986159 ubox
70 84 0.020325114 ubox
71 76 0.691357239 ubox
71 78 0.007554763 ubox
71 81 0.015058286 ubox
71 83 0.020201929 ubox
71 90 0.003565764 ubox
72 77 0.007622217 ubox
72 82 0.019915306 ubox
72 89 0.003337605 ubox
73 79 0.015189089 ubox
73 84 0.003938319 ubox
74 78 0.015089336 ubox
74 83 0.023772683 ubox
75 82 0.023823339 ubox
77 83 0.074874015 ubox
77 85 0.013319516 ubox
78 82 0.074411719 ubox
78 84 0.013367152 ubox
84 91 0.003234162 ubox
1 88 0.9500000 lbox
2 87 0.9500000 lbox
3 86 0.9500000 lbox
4 85 0.9500000 lbox
5 84 0.9500000 lbox
7 59 0.9500000 lbox
8 58 0.9500000 lbox
9 57 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
32 54 0.9500000 lbox
33 53 0.9500000 lbox
34 52 0.9500000 lbox
35 51 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
64 83 0.9500000 lbox
65 82 0.9500000 lbox
66 81 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
71 76 0.9500000 lbox
showpage
end
%%EOF
