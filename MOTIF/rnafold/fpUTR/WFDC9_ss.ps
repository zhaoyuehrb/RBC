%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGUGGGGCAUCUGUAGGGGCCACAGUGAGCUCUCAAUGAUCAUCUGUAGUGGCAGCAAAAGAGUUCGAGCCCCACUUCAAACAACUUCAUAAUAAAAGGCCAGACAAAAGAGCUGUCAGCCAGUUACUACAGACACUCAAUGCAGACACCUUCAGAGUAUUGGGAAAAGACUUGCCUUCUGCCAGAACUUAACCCAAAUACACACAGAGAGCACC\
) } def
/len { sequence length } bind def

/coor [
[34.49114990 288.28015137]
[26.67489624 289.15576172]
[20.02850723 302.60287476]
[23.41646957 315.04412842]
[17.60848236 326.10559082]
[6.19925261 330.11383057]
[-0.63934791 343.46423340]
[-0.04452820 359.27426147]
[-12.73338699 367.07440186]
[-19.57198715 380.42480469]
[-26.41058731 393.77520752]
[-27.53638649 402.83389282]
[-33.44424057 407.26702881]
[-40.47364426 420.51797485]
[-47.50304794 433.76892090]
[-49.58438110 450.59463501]
[-66.32869720 453.25247192]
[-73.51795197 437.89828491]
[-60.75399017 426.73953247]
[-53.72458649 413.48858643]
[-46.69518280 400.23764038]
[-39.76100159 386.93661499]
[-32.92240143 373.58621216]
[-26.08380127 360.23577881]
[-27.16776276 345.38067627]
[-13.98976135 336.62564087]
[-7.15116119 323.27520752]
[-8.97253704 305.81848145]
[6.58137035 295.95651245]
[13.22775936 282.50936890]
[9.73022747 261.14852905]
[28.56287384 248.99952698]
[34.42714310 235.19335938]
[40.29140854 221.38719177]
[46.15567780 207.58102417]
[52.01994705 193.77485657]
[57.88421249 179.96867371]
[52.08712769 166.29646301]
[57.83765411 152.21150208]
[72.21763611 146.22369385]
[78.08190155 132.41752625]
[67.96133423 122.46825409]
[62.05485535 109.56371307]
[61.13935089 95.40124512]
[65.33523560 81.84365845]
[74.09062195 70.67419434]
[66.49764252 57.73794174]
[58.90465927 44.80168915]
[51.31167984 31.86543655]
[43.71869659 18.92918396]
[36.12571716 5.99293137]
[28.53273582 -6.94332170]
[20.93975639 -19.87957573]
[13.34677505 -32.81582642]
[5.75379372 -45.75207901]
[-1.83918715 -58.68833542]
[-8.00478649 -56.63060760]
[-14.69931984 -55.96884918]
[-21.59992409 -56.83381653]
[-28.35260582 -59.28036118]
[-34.59029770 -63.28026199]
[-39.95247650 -68.71945190]
[-44.10531998 -75.39981842]
[-46.76130676 -83.04578400]
[-47.69712448 -91.31541443]
[-46.76887512 -99.81568146]
[-59.18837357 -108.22734833]
[-71.60787201 -116.63900757]
[-87.37285614 -117.97161102]
[-93.57170868 -131.51499939]
[-105.99120331 -139.92666626]
[-118.41069794 -148.33833313]
[-133.88105774 -145.10667419]
[-147.05944824 -153.83052063]
[-150.12736511 -169.33416748]
[-141.26467896 -182.41960144]
[-125.72945404 -185.32342529]
[-112.73846436 -176.32289124]
[-109.99903870 -160.75782776]
[-97.57953644 -152.34616089]
[-85.16004181 -143.93450928]
[-70.28338623 -143.20355225]
[-63.19620895 -129.05850220]
[-50.77671051 -120.64684296]
[-38.35721207 -112.23518372]
[-31.58666611 -115.46158600]
[-38.45303345 -128.79774475]
[-45.31940079 -142.13389587]
[-52.18576813 -155.47004700]
[-59.05213928 -168.80619812]
[-65.91850281 -182.14234924]
[-74.70847321 -194.29704285]
[-66.97074890 -207.14724731]
[-52.11606598 -205.06434631]
[-48.21128845 -190.58047485]
[-42.17814636 -176.84725952]
[-36.14500427 -163.11404419]
[-30.11185837 -149.38082886]
[-24.07871437 -135.64761353]
[-18.04557228 -121.91439819]
[-11.27502441 -125.14080048]
[-9.98555279 -140.08528137]
[-8.69608021 -155.02973938]
[-16.38453484 -165.38108826]
[-15.00651455 -177.79840088]
[-5.84224510 -185.68843079]
[-4.33853245 -200.61286926]
[-2.83481932 -215.53730774]
[-1.33110631 -230.46174622]
[-12.37107182 -241.53663635]
[-13.65786076 -257.12118530]
[-4.58389139 -269.85684204]
[10.56638622 -273.73022461]
[24.63947296 -266.91244507]
[30.99048996 -252.62263489]
[26.62067795 -237.60801697]
[13.59333134 -228.95803833]
[12.08961868 -214.03359985]
[10.58590603 -199.10916138]
[9.08219242 -184.18472290]
[17.13935661 -168.59185791]
[6.24839211 -153.74028015]
[4.95892048 -138.79580688]
[3.66944838 -123.85132599]
[23.83855438 -94.27579498]
[11.09706593 -66.28131104]
[18.69004631 -53.34506226]
[26.28302765 -40.40880966]
[33.87600708 -27.47255516]
[41.46899033 -14.53630257]
[49.06196976 -1.60004973]
[56.65495300 11.33620358]
[64.24793243 24.27245712]
[71.84091187 37.20870972]
[79.43389130 50.14496231]
[87.02687836 63.08121490]
[111.87864685 62.71466064]
[131.93843079 77.38947296]
[145.61521912 71.22951508]
[159.29202271 65.06954956]
[172.96882629 58.90958023]
[177.12927246 53.78361893]
[182.45387268 51.81869507]
[187.12744141 52.77536011]
[200.97532654 47.01026917]
[210.74177551 34.56330490]
[225.46524048 36.81472397]
[239.31312561 31.04963112]
[248.83766174 17.69990540]
[265.13293457 19.54265022]
[271.43579102 34.68220901]
[261.26235962 47.54430389]
[245.07821655 44.89751053]
[231.23033142 50.66260147]
[222.45437622 62.69720840]
[206.74041748 60.85814667]
[192.89253235 66.62323761]
[179.12878418 72.58638000]
[165.45198059 78.74634552]
[151.77519226 84.90631104]
[138.09838867 91.06627655]
[139.10664368 101.40308380]
[137.36019897 111.64105225]
[150.56037903 118.76531982]
[163.76055908 125.88957977]
[176.96075439 133.01385498]
[190.16093445 140.13812256]
[205.13259888 135.83847046]
[218.41796875 143.25152588]
[222.42477417 157.55122375]
[235.62495422 164.67549133]
[248.82513428 171.79974365]
[267.21737671 170.84689331]
[275.82974243 186.14012146]
[289.13076782 193.07431030]
[304.94464111 192.59289551]
[312.65356445 205.33737183]
[325.95458984 212.27156067]
[341.62796021 208.84742737]
[353.98587036 219.07785034]
[353.54837036 235.11494446]
[340.65109253 244.65640259]
[325.18768311 240.38284302]
[319.02038574 225.57258606]
[305.71939087 218.63839722]
[290.85687256 219.61578369]
[282.19656372 206.37532043]
[268.89556885 199.44114685]
[257.27032471 202.77140808]
[246.13406372 197.10816956]
[241.70086670 184.99993896]
[228.50068665 177.87567139]
[215.30050659 170.75140381]
[201.14791870 175.25030518]
[187.65957642 168.21333313]
[183.03666687 153.33830261]
[169.83648682 146.21403503]
[156.63630676 139.08976746]
[143.43611145 131.96549988]
[130.23593140 124.84123230]
[125.24112701 129.90290833]
[119.41277313 133.97709656]
[112.94333649 136.92924500]
[106.04647827 138.66184998]
[98.94993591 139.11772156]
[91.88806915 138.28178406]
[86.02380371 152.08795166]
[91.69876862 166.59425354]
[85.55489349 180.51213074]
[71.69038391 185.83294678]
[65.82611847 199.63911438]
[59.96184921 213.44528198]
[54.09757996 227.25146484]
[48.23331070 241.05763245]
[42.36904526 254.86380005]
[46.86735916 261.88018799]
[48.21481323 270.00994873]
[46.26556015 277.92010498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 30]
[3 29]
[6 27]
[7 26]
[9 24]
[10 23]
[11 22]
[13 21]
[14 20]
[15 19]
[32 215]
[33 214]
[34 213]
[35 212]
[36 211]
[37 210]
[40 207]
[41 206]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[66 85]
[67 84]
[68 83]
[70 81]
[71 80]
[72 79]
[101 124]
[102 123]
[103 122]
[106 120]
[107 119]
[108 118]
[109 117]
[138 161]
[139 160]
[140 159]
[141 158]
[144 157]
[145 156]
[147 154]
[148 153]
[163 200]
[164 199]
[165 198]
[166 197]
[167 196]
[170 193]
[171 192]
[172 191]
[174 188]
[175 187]
[177 185]
[178 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
