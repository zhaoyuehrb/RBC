%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGGCUUCCAACGCAUGCGCCCCACCCCACAUUUCACAGUCGCCAUGACGACCGGGAGGUCCGCAACGGCUGCGGGGACAAGUCCGUUGAGGCUGCCAGGCGAGUCAGGUCUCUCUGGACCUCGCCUGACUCGGCUGGGCUGUGCCUGAAAUUGACCCAGCUCCACCAUACUCCUUGAUU\
) } def
/len { sequence length } bind def

/coor [
[45.52113724 117.11090851]
[58.81332016 110.15979767]
[73.39935303 106.66014862]
[88.39390564 106.82266235]
[73.53669739 104.75785828]
[58.67949295 102.69305420]
[43.82228470 100.62825012]
[28.96508026 98.56345367]
[14.10787296 96.49864960]
[5.15063143 98.41987610]
[-0.98709714 94.26783752]
[-15.80645084 91.94689941]
[-30.62580490 89.62596130]
[-45.44515610 87.30502319]
[-60.27632141 92.81385040]
[-71.65312958 83.20044708]
[-86.47248077 80.87950897]
[-98.23555756 93.01655579]
[-114.74955750 95.73329163]
[-129.48548889 88.15601349]
[-136.73637390 73.44163513]
[-151.59358215 71.37683868]
[-166.45079041 69.31203461]
[-181.30798340 67.24723053]
[-170.33911133 77.47872925]
[-164.28916931 91.20455933]
[-164.13710022 106.20378876]
[-169.90748596 120.04945374]
[-180.66667175 130.50125122]
[-194.67373657 135.86802673]
[-209.66224670 135.28137207]
[-223.20700073 128.83625793]
[-233.11636353 117.57550049]
[-237.78694153 103.32117462]
[-236.46301270 88.37971497]
[-229.35877991 75.16873932]
[-217.62377930 65.82585144]
[-203.15417480 61.86262894]
[-217.26914978 56.78643036]
[-231.38410950 51.71023560]
[-245.49906921 46.63404083]
[-259.61404419 41.55784225]
[-273.72900391 36.48164749]
[-283.31481934 41.69047546]
[-293.96466064 40.76804733]
[-302.16735840 34.26168060]
[-305.35275269 24.51929092]
[-319.28408813 18.95892525]
[-333.66256714 24.95035934]
[-347.71170044 19.11290169]
[-353.33502197 5.36830235]
[-367.26635742 -0.19206318]
[-381.19769287 -5.75242901]
[-395.12905884 -11.31279469]
[-411.27243042 -8.42775536]
[-421.63430786 -21.13850784]
[-415.55529785 -36.36931610]
[-399.28894043 -38.45203400]
[-389.56869507 -25.24413872]
[-375.63732910 -19.68377304]
[-361.70599365 -14.12340641]
[-347.77465820 -8.56304073]
[-334.23272705 -14.65829563]
[-320.02517700 -9.21775150]
[-313.72372437 5.02758169]
[-299.79235840 10.58794785]
[-280.93057251 6.39997864]
[-268.65280151 22.36668205]
[-254.53784180 27.44287872]
[-240.42288208 32.51907349]
[-226.30792236 37.59527206]
[-212.19294739 42.67146683]
[-198.07798767 47.74766159]
[-188.30204773 45.72465515]
[-179.24319458 52.39002228]
[-164.38598633 54.45482635]
[-149.52877808 56.51963043]
[-134.67156982 58.58443069]
[-126.33327484 48.13945770]
[-113.81993866 43.14460754]
[-100.36644745 45.00646210]
[-89.50807953 53.34391785]
[-84.15154266 66.06015015]
[-69.33219147 68.38109589]
[-55.56100464 62.70625687]
[-43.12421799 72.48566437]
[-28.30486488 74.80661011]
[-13.48551083 77.12754822]
[1.33384287 79.44848633]
[16.17267609 81.64144135]
[31.02988243 83.70624542]
[45.88708878 85.77104950]
[60.74429703 87.83584595]
[75.60150146 89.90065002]
[90.45870972 91.96545410]
[94.03147125 81.08682251]
[106.97859192 73.71916962]
[119.02188110 64.77718353]
[131.06517029 55.83519745]
[143.10847473 46.89321136]
[149.57597351 32.45430756]
[164.40698242 31.07933807]
[176.45027161 22.13735199]
[188.49356079 13.19536400]
[200.53684998 4.25337648]
[212.58015442 -4.68861055]
[224.62344360 -13.63059807]
[236.66673279 -22.57258606]
[248.71002197 -31.51457214]
[260.75332642 -40.45655823]
[272.79660034 -49.39854813]
[269.43505859 -64.25182343]
[272.41186523 -79.18696594]
[281.21130371 -91.61637115]
[294.30877686 -99.38655853]
[309.43508911 -101.15131378]
[323.96954346 -96.60486603]
[335.39389038 -86.53491974]
[341.72885132 -72.68616486]
[341.87683105 -57.45796585]
[335.81219482 -43.48870850]
[324.58569336 -33.19865036]
[310.14236450 -28.37060547]
[294.98458862 -29.84106255]
[281.73858643 -37.35525513]
[269.69531250 -28.41326904]
[257.65200806 -19.47128105]
[245.60871887 -10.52929401]
[233.56542969 -1.58730686]
[221.52214050 7.35468054]
[209.47885132 16.29666710]
[197.43554688 25.23865509]
[185.39225769 34.18064117]
[173.34896851 43.12263107]
[167.74287415 56.92193985]
[152.05046082 58.93650055]
[140.00715637 67.87848663]
[127.96387482 76.82047272]
[115.92057800 85.76246643]
[116.95544434 100.72672272]
[130.11499023 107.92578125]
[143.27453613 115.12484741]
[156.43406677 122.32390594]
[168.01773071 112.51659393]
[182.36325073 107.55974579]
[197.53053284 108.12373352]
[211.46830750 114.13227844]
[222.29162598 124.77277374]
[228.53671265 138.60618591]
[229.35897827 153.76165771]
[224.64720154 168.18954468]
[215.03863525 179.93856812]
[201.83273315 187.41979980]
[186.81550598 189.62142944]
[172.01789856 186.24574280]
[159.44116211 177.74925232]
[150.78622437 165.28103638]
[147.22355652 150.52732849]
[149.23500061 135.48344421]
[136.07546997 128.28439331]
[122.91592407 121.08532715]
[109.75638580 113.88626099]
[121.89554596 122.69766235]
[131.51934814 134.20341492]
[138.04666138 147.70875549]
[141.08332825 162.39816284]
[140.44598389 177.38461304]
[136.17311096 191.76316833]
[128.52272034 204.66555786]
[117.95680237 215.31268311]
[105.11335754 223.06161499]
[90.76794434 227.44444275]
[75.78681183 228.19650269]
[61.07458878 225.27238464]
[47.51967239 218.84866333]
[35.94057465 209.31323242]
[27.03649712 197.24188232]
[21.34511375 183.36354065]
[19.21009827 168.51626587]
[20.76037216 153.59658813]
[25.90232468 139.50544739]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 95]
[5 94]
[6 93]
[7 92]
[8 91]
[9 90]
[11 89]
[12 88]
[13 87]
[14 86]
[16 84]
[17 83]
[21 78]
[22 77]
[23 76]
[24 75]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[47 66]
[48 65]
[51 62]
[52 61]
[53 60]
[54 59]
[97 139]
[98 138]
[99 137]
[100 136]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[108 128]
[109 127]
[110 126]
[111 125]
[140 162]
[141 161]
[142 160]
[143 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
