%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SMTNL2)
} def

/sequence { (\
CGGAGCUGCGGAGCUCGGAUCUUCUCCCCCGUCUGGCCCGCUCUCGACCCGCGCGCUCUGCUGGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.013759282 ubox
1 31 0.009571011 ubox
1 40 0.014340848 ubox
1 46 0.347233419 ubox
1 51 0.037054841 ubox
1 53 0.009611600 ubox
1 60 0.061708226 ubox
2 16 0.010921700 ubox
2 30 0.009948327 ubox
2 39 0.015224356 ubox
2 43 0.008830571 ubox
2 44 0.084334594 ubox
2 45 0.289910503 ubox
2 49 0.015790836 ubox
2 50 0.039626627 ubox
2 52 0.010114040 ubox
2 59 0.064714602 ubox
2 67 0.028053697 ubox
3 15 0.004731660 ubox
3 16 0.082199231 ubox
3 29 0.005706118 ubox
3 38 0.015215229 ubox
3 42 0.008500328 ubox
3 43 0.180360839 ubox
3 44 0.132428920 ubox
3 45 0.942786033 ubox
3 48 0.014318683 ubox
3 49 0.034422272 ubox
3 58 0.065073317 ubox
3 66 0.020760546 ubox
4 15 0.083074327 ubox
4 42 0.180496953 ubox
4 44 0.965157770 ubox
4 57 0.065074175 ubox
5 14 0.083264112 ubox
5 37 0.015211217 ubox
5 41 0.148114248 ubox
5 43 0.969025450 ubox
5 54 0.003982225 ubox
5 56 0.065082719 ubox
5 66 0.012813893 ubox
6 13 0.083261436 ubox
6 36 0.015207239 ubox
6 40 0.137767414 ubox
6 53 0.003919684 ubox
6 55 0.065017845 ubox
6 64 0.005999460 ubox
6 65 0.012718646 ubox
7 12 0.082427857 ubox
7 35 0.013634213 ubox
7 40 0.004434033 ubox
7 53 0.060603473 ubox
7 63 0.005727339 ubox
7 64 0.011447396 ubox
8 32 0.013312811 ubox
8 37 0.044986774 ubox
8 39 0.017322852 ubox
8 41 0.982853728 ubox
8 52 0.061781435 ubox
8 54 0.010251125 ubox
8 61 0.015821082 ubox
9 31 0.013834145 ubox
9 35 0.051096458 ubox
9 36 0.035237754 ubox
9 40 0.984656733 ubox
9 46 0.004006879 ubox
9 51 0.061758273 ubox
9 53 0.010237119 ubox
9 60 0.015868291 ubox
10 30 0.013796945 ubox
10 34 0.058458846 ubox
10 38 0.019048149 ubox
10 39 0.992125291 ubox
10 44 0.013875724 ubox
10 45 0.005238995 ubox
10 49 0.003195180 ubox
10 50 0.060123368 ubox
10 52 0.008804312 ubox
10 59 0.015858483 ubox
11 29 0.013751656 ubox
11 33 0.060321533 ubox
11 37 0.018549103 ubox
11 38 0.992038325 ubox
11 43 0.030206100 ubox
11 45 0.011315809 ubox
11 48 0.003782672 ubox
11 49 0.053479746 ubox
11 58 0.015870344 ubox
12 32 0.059502293 ubox
12 34 0.016540876 ubox
12 42 0.045902242 ubox
12 44 0.019000098 ubox
12 57 0.015864614 ubox
13 32 0.011534334 ubox
13 33 0.016893161 ubox
13 37 0.991436652 ubox
13 41 0.046124816 ubox
13 43 0.019041854 ubox
13 56 0.015844056 ubox
14 31 0.018270508 ubox
14 36 0.986012867 ubox
14 40 0.046014322 ubox
14 55 0.015767933 ubox
15 35 0.331494133 ubox
15 36 0.119229003 ubox
15 47 0.023576825 ubox
16 31 0.317457877 ubox
16 35 0.934020420 ubox
16 40 0.019387557 ubox
16 46 0.023746521 ubox
16 51 0.009230887 ubox
16 53 0.005433906 ubox
17 24 0.008065561 ubox
17 25 0.016137680 ubox
17 26 0.008256478 ubox
17 27 0.098605643 ubox
17 28 0.037297851 ubox
17 29 0.025524465 ubox
17 30 0.317563191 ubox
17 33 0.030580059 ubox
17 34 0.938156280 ubox
17 38 0.008614723 ubox
17 39 0.020338671 ubox
17 44 0.003198585 ubox
17 45 0.023362476 ubox
17 50 0.009278168 ubox
17 52 0.003773732 ubox
17 67 0.007582094 ubox
18 23 0.006415361 ubox
18 24 0.018268247 ubox
18 25 0.006178121 ubox
18 26 0.099527419 ubox
18 27 0.037666603 ubox
18 28 0.029902753 ubox
18 29 0.316475625 ubox
18 32 0.023675466 ubox
18 33 0.939689876 ubox
18 37 0.008667349 ubox
18 38 0.020312477 ubox
18 43 0.016859296 ubox
18 44 0.014754520 ubox
18 49 0.009269577 ubox
18 66 0.007638429 ubox
19 23 0.016442753 ubox
19 25 0.096209486 ubox
19 32 0.934993540 ubox
19 42 0.016521507 ubox
20 31 0.902105259 ubox
20 36 0.018394442 ubox
20 47 0.007720148 ubox
21 35 0.019464496 ubox
21 36 0.005008380 ubox
21 46 0.007823756 ubox
22 35 0.004949747 ubox
24 35 0.003172086 ubox
25 36 0.003913594 ubox
26 35 0.004394828 ubox
26 36 0.014802355 ubox
26 65 0.007453914 ubox
27 35 0.014765897 ubox
27 36 0.014629997 ubox
27 64 0.007421677 ubox
27 65 0.034838237 ubox
28 35 0.014792964 ubox
28 36 0.008427963 ubox
28 63 0.007290931 ubox
28 64 0.037152557 ubox
28 65 0.053506149 ubox
29 35 0.008590867 ubox
29 36 0.013897655 ubox
29 63 0.037150002 ubox
29 64 0.054046717 ubox
30 35 0.014330446 ubox
30 53 0.003367084 ubox
30 63 0.054031086 ubox
31 48 0.017137141 ubox
31 52 0.003613776 ubox
31 54 0.007805568 ubox
31 61 0.060191291 ubox
31 62 0.024123277 ubox
31 66 0.015464380 ubox
32 47 0.017221613 ubox
32 51 0.003283419 ubox
32 53 0.007770579 ubox
32 60 0.059620039 ubox
32 65 0.015486518 ubox
33 46 0.017199996 ubox
33 64 0.015513655 ubox
34 51 0.008340989 ubox
34 63 0.015452387 ubox
35 42 0.004777715 ubox
35 43 0.005426733 ubox
35 44 0.014138386 ubox
35 45 0.004625823 ubox
35 50 0.009464203 ubox
35 57 0.062317059 ubox
35 58 0.017844166 ubox
35 62 0.015110694 ubox
35 67 0.047503539 ubox
36 41 0.005212964 ubox
36 42 0.004250263 ubox
36 43 0.014257437 ubox
36 44 0.003727795 ubox
36 49 0.009464696 ubox
36 54 0.003795950 ubox
36 56 0.066058116 ubox
36 61 0.015159417 ubox
36 66 0.048086291 ubox
37 53 0.003706847 ubox
37 55 0.066030868 ubox
37 60 0.015129883 ubox
37 65 0.048090092 ubox
38 64 0.048088054 ubox
39 46 0.022153471 ubox
39 51 0.003205840 ubox
39 53 0.066394458 ubox
39 55 0.012282363 ubox
39 63 0.048046903 ubox
40 45 0.020925173 ubox
40 50 0.003165614 ubox
40 52 0.067078574 ubox
40 54 0.013133167 ubox
40 56 0.009334248 ubox
40 61 0.044728771 ubox
40 62 0.014025422 ubox
41 51 0.067011901 ubox
41 53 0.013123718 ubox
41 55 0.009357685 ubox
41 60 0.045740548 ubox
45 51 0.012674799 ubox
45 53 0.021034896 ubox
45 55 0.037088828 ubox
46 50 0.013787450 ubox
46 52 0.024643508 ubox
46 54 0.038381951 ubox
46 58 0.003273121 ubox
48 64 0.082836864 ubox
48 65 0.971108273 ubox
49 63 0.082852634 ubox
49 64 0.975475683 ubox
49 65 0.067236340 ubox
50 63 0.975355119 ubox
50 64 0.067908849 ubox
51 61 0.386737919 ubox
51 62 0.881854660 ubox
51 66 0.067375739 ubox
52 60 0.395196241 ubox
52 63 0.015981026 ubox
52 65 0.067510846 ubox
53 59 0.320276037 ubox
53 61 0.895552273 ubox
53 62 0.011690679 ubox
53 66 0.008244926 ubox
54 60 0.895443514 ubox
54 63 0.066886076 ubox
54 65 0.008202084 ubox
55 59 0.552509222 ubox
55 61 0.073567099 ubox
55 62 0.036037954 ubox
55 66 0.143628659 ubox
56 60 0.073807982 ubox
56 64 0.006116793 ubox
56 65 0.143920620 ubox
57 63 0.004816667 ubox
57 64 0.143736102 ubox
58 63 0.143479243 ubox
58 64 0.004637956 ubox
59 63 0.004201425 ubox
60 66 0.007422048 ubox
61 65 0.007628457 ubox
3 45 0.9500000 lbox
4 44 0.9500000 lbox
5 43 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
16 35 0.9500000 lbox
17 34 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
53 61 0.9500000 lbox
54 60 0.9500000 lbox
showpage
end
%%EOF
