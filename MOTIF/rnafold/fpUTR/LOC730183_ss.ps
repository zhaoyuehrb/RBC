%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCGCCAUCUUGUCUCCCUCUCCUUACCUGCGUCCUCGGGGGCGUGCGCACCACCCCCCCUCCCGCCUAGGAGGGGGGAGGGCCCCCUCUUGGCCACCGCCUUCGCGGCCUUUAAACUCCCCUGGAGACUGCGGCUACUGCCACCGCCUUGCCUCCACUGCCUCUUCGCGCAGCACACAG\
) } def
/len { sequence length } bind def

/coor [
[20.70115280 558.32312012]
[14.22823906 571.89331055]
[5.60989428 584.21301270]
[-4.91876554 594.94598389]
[-17.07051086 603.79949951]
[-30.51383209 610.53204346]
[-44.88198853 614.95989990]
[-59.78300476 616.96234131]
[-74.81037140 616.48461914]
[-89.55412292 613.53985596]
[-103.61205292 608.20843506]
[-116.60063934 600.63568115]
[-128.16554260 591.02825928]
[-137.99128723 579.64819336]
[-145.80978394 566.80609131]
[-151.40776062 552.85211182]
[-154.63249207 538.16705322]
[-155.39602661 523.15148926]
[-153.67750549 508.21508789]
[-149.52381897 493.76528931]
[-143.04829407 480.19631958]
[-134.42756653 467.87829590]
[-123.89684296 457.14733887]
[-111.74339294 448.29614258]
[-98.29877472 441.56622314]
[-83.92976379 437.14111328]
[-69.02836609 435.14160156]
[-54.00109100 435.62216187]
[-39.25790405 438.56976318]
[-33.93883133 424.54452515]
[-28.61975861 410.51928711]
[-23.30068398 396.49401855]
[-17.98161125 382.46878052]
[-12.66253757 368.44354248]
[-19.50340843 359.27514648]
[-21.07348824 347.82299805]
[-16.86617661 336.92779541]
[-7.82262468 329.34893799]
[3.87604523 327.06570435]
[9.67604637 313.23239136]
[15.47604752 299.39910889]
[21.27604866 285.56582642]
[27.07604980 271.73251343]
[32.87604904 257.89923096]
[38.55644608 244.01638794]
[44.11680984 230.08505249]
[49.67717743 216.15370178]
[45.48920822 197.29190063]
[61.45590973 185.01414490]
[66.53210449 170.89916992]
[71.60830688 156.78421021]
[53.87371063 143.62225342]
[41.72106934 125.18136597]
[36.62101746 103.69316864]
[39.19073868 81.75804901]
[49.11926270 62.03046799]
[38.24161911 51.70201874]
[27.36397171 41.37356949]
[16.48632812 31.04512215]
[5.60868359 20.71667290]
[-5.26896095 10.38822460]
[-16.14660645 0.05977653]
[-27.02425003 -10.26867199]
[-37.90189362 -20.59712029]
[-53.69240952 -19.93745995]
[-65.26772308 -30.69793320]
[-65.76039886 -46.49454117]
[-54.87814331 -57.95543671]
[-39.07720947 -58.28107452]
[-27.73200989 -47.27825928]
[-27.57344627 -31.47476578]
[-16.69580269 -21.14631653]
[-5.81815720 -10.81786823]
[5.05948734 -0.48941961]
[15.93713188 9.83902931]
[26.81477737 20.16747665]
[37.69242096 30.49592590]
[48.57006454 40.82437515]
[59.44771194 51.15282440]
[68.21244049 45.04469299]
[77.87727356 40.49269104]
[88.16853333 37.62571716]
[87.13366699 22.66145706]
[86.09880066 7.69719744]
[85.06393433 -7.26706171]
[72.31430054 -16.32139397]
[68.41757965 -31.46568489]
[75.21366882 -45.54926300]
[89.49367523 -51.92229080]
[104.51500702 -47.57562256]
[113.18505859 -34.56162262]
[111.41009521 -19.02510071]
[100.02819061 -8.30192852]
[101.06305695 6.66233015]
[102.09793091 21.62658882]
[103.13279724 36.59084702]
[116.48191071 30.23880577]
[132.17996216 26.89189148]
[138.45397949 13.26703548]
[144.72799683 -0.35782039]
[151.00201416 -13.98267651]
[148.95645142 -30.25374603]
[162.18650818 -39.94382477]
[177.08224487 -33.08458710]
[178.32020569 -16.73223305]
[164.62687683 -7.70865965]
[158.35285950 5.91619682]
[152.07884216 19.54105377]
[145.80482483 33.16590881]
[151.19886780 38.37688065]
[161.62081909 27.58878326]
[172.04277039 16.80068588]
[182.46487427 6.01274776]
[193.25265503 16.43502617]
[182.83085632 27.22262955]
[172.40892029 38.01072693]
[161.98696899 48.79882812]
[167.38102722 54.00979996]
[180.78120422 47.26924133]
[194.18138123 40.52868652]
[207.58157349 33.78813171]
[219.01434326 21.26902390]
[234.20910645 28.78936386]
[231.18899536 45.47214890]
[214.32212830 47.18831253]
[200.92193604 53.92887115]
[187.52175903 60.66942596]
[174.12158203 67.40998077]
[175.60061646 74.76269531]
[190.30606079 71.80460358]
[204.52047729 76.59524536]
[193.26414490 86.51004028]
[178.55871582 89.46813202]
[180.03776550 96.82084656]
[195.00201416 97.85571289]
[209.96627808 98.89057922]
[224.45462036 91.20813751]
[238.20645142 100.14231110]
[237.07505798 116.50238037]
[222.22431946 123.45851898]
[208.93141174 113.85483551]
[193.96714783 112.81996918]
[179.00289917 111.78510284]
[172.99504089 126.99926758]
[164.18580627 140.28279114]
[153.10331726 151.14918518]
[140.35313416 159.24443054]
[126.58675385 164.35754395]
[112.46941376 166.42385864]
[98.64833832 165.52137756]
[85.72326660 161.86041260]
[80.64707184 175.97537231]
[75.57087708 190.09033203]
[80.77970123 199.67614746]
[79.85727692 210.32598877]
[73.35091400 218.52868652]
[63.60852051 221.71406555]
[58.04815674 235.64541626]
[52.48778915 249.57675171]
[52.20957947 258.73348999]
[46.70934296 263.69921875]
[40.90934372 277.53253174]
[35.10934067 291.36581421]
[29.30933952 305.19909668]
[23.50933838 319.03240967]
[17.70933723 332.86569214]
[25.55456161 350.08782959]
[18.46676064 367.29104614]
[1.36270595 373.76260376]
[-3.95636749 387.78787231]
[-9.27544117 401.81311035]
[-14.59451389 415.83834839]
[-19.91358757 429.86358643]
[-25.23266029 443.88882446]
[-12.24261475 451.45907593]
[-0.67585409 461.06427002]
[9.15207100 472.44241333]
[16.97304726 485.28305054]
[22.57371521 499.23590088]
[25.80128098 513.92034912]
[26.56769562 528.93572998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 174]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 159]
[46 158]
[47 157]
[49 153]
[50 152]
[51 151]
[56 79]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[82 96]
[83 95]
[84 94]
[85 93]
[98 109]
[99 108]
[100 107]
[101 106]
[118 128]
[119 127]
[120 126]
[121 125]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
