%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DLST)
} def

/sequence { (\
CCACUUCCGGUUGUUGUCCGGCCCUAUAUCCGGUGUCCGCCCGCCCUCGGCUCCUCCGCCGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.039589344 ubox
1 21 0.004729953 ubox
1 33 0.004627905 ubox
1 50 0.007671353 ubox
2 9 0.040125269 ubox
2 13 0.010455037 ubox
2 16 0.009387666 ubox
2 20 0.004643955 ubox
2 32 0.004765286 ubox
2 35 0.043367575 ubox
2 49 0.007967303 ubox
2 63 0.243403313 ubox
3 11 0.014382655 ubox
3 12 0.008469722 ubox
3 14 0.015843261 ubox
3 15 0.006789980 ubox
3 17 0.005463403 ubox
3 34 0.043508499 ubox
3 36 0.047163426 ubox
3 62 0.245517495 ubox
4 10 0.016389089 ubox
4 13 0.017957007 ubox
4 16 0.005838606 ubox
4 21 0.006259267 ubox
4 33 0.040737645 ubox
4 35 0.050358470 ubox
4 61 0.240120613 ubox
5 9 0.014780529 ubox
5 32 0.038040833 ubox
6 21 0.008271019 ubox
6 32 0.003641700 ubox
7 20 0.007919163 ubox
7 21 0.678927490 ubox
7 33 0.069525302 ubox
7 50 0.005153782 ubox
8 16 0.004841463 ubox
8 20 0.687287753 ubox
8 32 0.071034041 ubox
8 39 0.089496709 ubox
8 43 0.565507162 ubox
8 49 0.005358219 ubox
8 58 0.025945521 ubox
8 61 0.038440963 ubox
8 63 0.012401415 ubox
9 15 0.004533895 ubox
9 18 0.007015046 ubox
9 19 0.687762059 ubox
9 23 0.294922001 ubox
9 24 0.026807536 ubox
9 30 0.003644657 ubox
9 31 0.074143274 ubox
9 38 0.092851666 ubox
9 41 0.234225050 ubox
9 42 0.583936504 ubox
9 45 0.140082365 ubox
9 46 0.050983572 ubox
9 47 0.006783403 ubox
9 48 0.006401119 ubox
9 57 0.026149844 ubox
9 60 0.039236999 ubox
10 17 0.006859262 ubox
10 18 0.687089602 ubox
10 22 0.296036892 ubox
10 23 0.020517216 ubox
10 29 0.003638041 ubox
10 30 0.073950792 ubox
10 37 0.092790702 ubox
10 40 0.240806070 ubox
10 41 0.580951329 ubox
10 44 0.140592015 ubox
10 45 0.050257221 ubox
10 46 0.007340123 ubox
10 47 0.005853761 ubox
10 56 0.026031788 ubox
10 59 0.039222608 ubox
11 16 0.181067609 ubox
11 21 0.296354565 ubox
11 28 0.005670436 ubox
11 35 0.007165242 ubox
11 39 0.223343091 ubox
11 43 0.136588498 ubox
11 58 0.036412201 ubox
12 20 0.295013237 ubox
12 26 0.004203668 ubox
12 28 0.066698406 ubox
12 35 0.017094807 ubox
12 39 0.511634412 ubox
12 43 0.038765735 ubox
12 58 0.010102566 ubox
13 19 0.293036339 ubox
13 22 0.013794585 ubox
13 25 0.003990819 ubox
13 27 0.070279889 ubox
13 29 0.003568825 ubox
13 34 0.028053021 ubox
13 36 0.014686342 ubox
13 38 0.530083554 ubox
13 40 0.121425816 ubox
13 42 0.044684871 ubox
13 44 0.033146466 ubox
13 51 0.014787236 ubox
13 57 0.014105231 ubox
14 21 0.013733163 ubox
14 26 0.069032286 ubox
14 28 0.003553807 ubox
14 35 0.021733069 ubox
14 39 0.118283542 ubox
14 43 0.027858224 ubox
14 50 0.014746702 ubox
15 20 0.011309643 ubox
15 26 0.013048939 ubox
15 28 0.003991127 ubox
15 35 0.148881387 ubox
15 39 0.034183046 ubox
15 43 0.028838601 ubox
15 49 0.014629178 ubox
16 22 0.037008973 ubox
16 25 0.015816536 ubox
16 27 0.004914399 ubox
16 34 0.148195414 ubox
16 36 0.042490507 ubox
16 38 0.039661137 ubox
16 40 0.048136624 ubox
16 42 0.047716802 ubox
16 44 0.016128685 ubox
16 48 0.014430687 ubox
16 51 0.016548844 ubox
16 57 0.003816311 ubox
17 21 0.034682169 ubox
17 26 0.004963173 ubox
17 33 0.004097622 ubox
17 35 0.033158795 ubox
17 39 0.045956370 ubox
17 43 0.016067046 ubox
17 50 0.013095670 ubox
18 32 0.003186316 ubox
18 33 0.650695042 ubox
18 49 0.012962165 ubox
18 50 0.012239174 ubox
19 32 0.651147717 ubox
19 35 0.010219873 ubox
19 39 0.068100528 ubox
19 43 0.007754659 ubox
19 49 0.012298218 ubox
19 61 0.025087985 ubox
20 30 0.004596806 ubox
20 31 0.651384025 ubox
20 34 0.007265601 ubox
20 37 0.040937872 ubox
20 38 0.069569932 ubox
20 41 0.014032620 ubox
20 42 0.007281465 ubox
20 45 0.019156213 ubox
20 47 0.003384643 ubox
20 48 0.011799938 ubox
20 52 0.011890433 ubox
20 60 0.026275657 ubox
21 29 0.005223349 ubox
21 30 0.649872788 ubox
21 34 0.032109712 ubox
21 36 0.042640478 ubox
21 37 0.069091500 ubox
21 40 0.014764711 ubox
21 41 0.006413685 ubox
21 44 0.019536392 ubox
21 46 0.006441760 ubox
21 47 0.009471076 ubox
21 51 0.012910150 ubox
21 59 0.026339863 ubox
22 33 0.043195051 ubox
22 35 0.078832794 ubox
22 39 0.015119212 ubox
22 43 0.019492892 ubox
22 50 0.012951671 ubox
22 58 0.026241098 ubox
22 61 0.005012500 ubox
23 32 0.043457468 ubox
23 33 0.082374547 ubox
23 49 0.012892438 ubox
24 32 0.082477342 ubox
24 33 0.019925809 ubox
25 32 0.019198330 ubox
25 35 0.007423371 ubox
25 63 0.014443380 ubox
26 34 0.007979242 ubox
26 36 0.011511241 ubox
26 62 0.017854943 ubox
27 33 0.007907765 ubox
27 35 0.012002797 ubox
27 61 0.010918699 ubox
27 63 0.030140314 ubox
28 34 0.011948019 ubox
28 62 0.032653457 ubox
29 33 0.011067491 ubox
29 50 0.003633975 ubox
29 61 0.016613404 ubox
30 49 0.004842144 ubox
30 50 0.023574353 ubox
31 39 0.060356516 ubox
31 43 0.087847850 ubox
31 49 0.023663998 ubox
31 58 0.034140263 ubox
31 61 0.382957801 ubox
31 63 0.012431843 ubox
32 38 0.062664612 ubox
32 41 0.102469484 ubox
32 42 0.088196572 ubox
32 45 0.606739213 ubox
32 46 0.096691892 ubox
32 47 0.010270776 ubox
32 48 0.014424586 ubox
32 54 0.017157408 ubox
32 57 0.035470604 ubox
32 60 0.395135323 ubox
33 37 0.061659379 ubox
33 40 0.105282354 ubox
33 41 0.084849704 ubox
33 44 0.609172616 ubox
33 45 0.090066070 ubox
33 46 0.013580825 ubox
33 47 0.006810245 ubox
33 53 0.017174591 ubox
33 56 0.035448753 ubox
33 59 0.395168602 ubox
34 39 0.103404575 ubox
34 43 0.609910949 ubox
34 58 0.394813739 ubox
35 42 0.601811246 ubox
35 44 0.084284932 ubox
35 51 0.020519646 ubox
35 57 0.390208346 ubox
36 43 0.081336070 ubox
36 50 0.005644962 ubox
37 49 0.005138629 ubox
37 50 0.040247575 ubox
38 49 0.040373326 ubox
38 58 0.003983262 ubox
38 63 0.005968588 ubox
39 48 0.040111061 ubox
39 51 0.335175248 ubox
39 57 0.004700002 ubox
39 62 0.006244141 ubox
40 50 0.323987097 ubox
40 58 0.003201594 ubox
40 61 0.005435714 ubox
41 49 0.311567716 ubox
41 50 0.176771185 ubox
42 49 0.197558893 ubox
42 61 0.003225184 ubox
42 63 0.044235048 ubox
43 48 0.202414122 ubox
43 51 0.150051534 ubox
43 62 0.046732071 ubox
44 50 0.150290871 ubox
44 61 0.041148657 ubox
45 49 0.149201660 ubox
48 58 0.028885125 ubox
48 61 0.853038593 ubox
48 63 0.007823229 ubox
49 57 0.030405967 ubox
49 60 0.914716601 ubox
50 56 0.030189066 ubox
50 59 0.914865614 ubox
51 58 0.913912182 ubox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
showpage
end
%%EOF
