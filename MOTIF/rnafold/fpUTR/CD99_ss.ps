%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCCUCUGUCUCCUCCCCGGGCCCGGCGUUCCCGCCCCUUCUGUGCGCGCGUGGAGGCCGGGGCGGGGCGGGCGCAGCCGGCGCUGAGCUUGCAGGGCCGCUCCCCUCACCCGCCCCCUUCGAGUCCCCGGGCUUCGCCCCACCCGGCCCGUGGGGGAGUAUCUGUCCUGCCGCCUUCGCCCACGCCCUGCACUCCGGGACCGUCCCUGCGCGCUCUGGGCGCACC\
) } def
/len { sequence length } bind def

/coor [
[176.58891296 186.56764221]
[182.08605957 200.52406311]
[183.28053284 215.47642517]
[180.06881714 230.12855530]
[172.72929382 243.21026611]
[161.89823914 253.58757019]
[148.51455688 260.36083984]
[133.73846436 262.94290161]
[118.85087585 261.10998535]
[105.14236450 255.02091980]
[93.80129242 245.20358276]
[85.81079865 232.50901794]
[81.86356354 218.03768921]
[82.30194092 203.04312134]
[75.19132233 216.25065613]
[78.40652466 231.96823120]
[68.01250458 244.18885803]
[51.98265839 243.53793335]
[42.61371994 230.51477051]
[47.09273529 215.10964966]
[61.98378372 209.14002991]
[69.09440613 195.93249512]
[74.42827606 181.91287231]
[77.89492798 167.31895447]
[81.36157990 152.72505188]
[84.82823944 138.13113403]
[72.13911438 130.13198853]
[60.46683502 139.55313110]
[48.79455185 148.97425842]
[37.12226868 158.39540100]
[31.72889137 173.88227844]
[15.57166481 176.68872070]
[5.27175760 163.92768860]
[11.42483139 148.72663879]
[27.70113182 146.72311401]
[39.37341309 137.30198669]
[51.04569626 127.88084412]
[62.71797943 118.45970917]
[59.94138718 108.36920166]
[59.80074310 98.07591248]
[62.21912766 88.24609375]
[66.95671844 79.49447632]
[73.63159180 72.34591675]
[81.74922943 67.20400238]
[90.73846436 64.32874298]
[99.99137878 63.82429886]
[108.90425110 65.63748169]
[115.64985657 52.23984146]
[122.39546204 38.84220123]
[129.14106750 25.44455910]
[135.88667297 12.04691792]
[142.63227844 -1.35072398]
[149.37788391 -14.74836540]
[151.05596924 -37.24279022]
[172.43739319 -38.75876617]
[177.28739929 -52.95304489]
[182.13739014 -67.14732361]
[186.98739624 -81.34159851]
[180.27775574 -95.39928436]
[185.39854431 -109.72520447]
[198.84173584 -116.03519440]
[203.69174194 -130.22947693]
[208.54174805 -144.42375183]
[213.39173889 -158.61802673]
[218.24174500 -172.81230164]
[223.09173584 -187.00657654]
[227.94174194 -201.20085144]
[232.69425964 -215.42807007]
[237.34907532 -229.68754578]
[242.00390625 -243.94702148]
[246.65872192 -258.20648193]
[251.31355286 -272.46597290]
[255.77230835 -286.78796387]
[260.03417969 -301.16976929]
[264.29605103 -315.55157471]
[268.55795288 -329.93338013]
[264.19750977 -344.28561401]
[252.65557861 -353.86599731]
[241.11363220 -363.44638062]
[229.57168579 -373.02673340]
[213.32440186 -375.25335693]
[207.38044739 -390.53738403]
[217.85444641 -403.15591431]
[233.97164917 -400.12811279]
[239.15205383 -384.56869507]
[250.69400024 -374.98831177]
[262.23593140 -365.40792847]
[273.77789307 -355.82757568]
[281.15893555 -357.15805054]
[274.06646729 -370.37536621]
[284.44519043 -381.20504761]
[297.95202637 -374.68084717]
[295.92102051 -359.81906128]
[303.30206299 -361.14956665]
[310.77233887 -374.15704346]
[318.24261475 -387.16455078]
[325.71289062 -400.17205811]
[333.18316650 -413.17953491]
[340.65344238 -426.18704224]
[348.12371826 -439.19451904]
[346.79226685 -460.59054565]
[365.09622192 -470.14065552]
[372.02499390 -483.44448853]
[378.95376587 -496.74832153]
[385.88253784 -510.05218506]
[392.81127930 -523.35601807]
[399.74005127 -536.65985107]
[406.66882324 -549.96368408]
[407.85424805 -559.00769043]
[413.78497314 -563.40155029]
[420.89559937 -576.60913086]
[428.00622559 -589.81665039]
[417.26077271 -603.21215820]
[417.52267456 -623.17022705]
[432.07760620 -640.67517090]
[436.33947754 -655.05694580]
[440.60134888 -669.43878174]
[444.86322021 -683.82055664]
[433.25683594 -693.68017578]
[426.66998291 -707.41088867]
[426.24386597 -722.63385010]
[432.05233765 -736.71154785]
[443.08901978 -747.20495605]
[457.44174194 -752.29602051]
[472.62384033 -751.10266113]
[486.00488281 -743.83166504]
[495.26657104 -731.74279785]
[498.80419922 -716.93048096]
[496.00491333 -701.96105957]
[487.35366821 -689.42803955]
[474.34933472 -681.50292969]
[459.24502563 -679.55871582]
[454.98315430 -665.17687988]
[450.72128296 -650.79510498]
[446.45941162 -636.41326904]
[452.83126831 -632.45733643]
[466.05502319 -639.53778076]
[465.57495117 -624.54541016]
[471.94680786 -620.58947754]
[482.94589233 -630.78845215]
[493.94500732 -640.98742676]
[494.29058838 -656.78796387]
[505.76519775 -667.65576172]
[521.56115723 -667.14312744]
[532.30700684 -655.55426025]
[531.62744141 -639.76458740]
[519.92559814 -629.14184570]
[504.14401245 -629.98834229]
[493.14489746 -619.78936768]
[482.14578247 -609.59033203]
[473.60021973 -589.93334961]
[457.27539062 -580.59515381]
[441.21374512 -582.70599365]
[434.10311890 -569.49847412]
[426.99252319 -556.29095459]
[419.97265625 -543.03491211]
[413.04388428 -529.73107910]
[406.11514282 -516.42724609]
[399.18637085 -503.12341309]
[392.25759888 -489.81958008]
[385.32882690 -476.51571655]
[378.40008545 -463.21188354]
[382.40328979 -455.31167603]
[382.32843018 -446.31796265]
[378.06610107 -438.24234009]
[370.45748901 -432.94885254]
[361.13122559 -431.72424316]
[353.66094971 -418.71676636]
[346.19067383 -405.70925903]
[338.72039795 -392.70175171]
[331.25009155 -379.69427490]
[323.77981567 -366.68676758]
[316.30953979 -353.67929077]
[282.93975830 -325.67150879]
[278.67788696 -311.28970337]
[274.41598511 -296.90789795]
[270.15411377 -282.52609253]
[271.59820557 -277.98593140]
[270.21450806 -272.49044800]
[265.57302856 -267.81115723]
[260.91821289 -253.55166626]
[256.26336670 -239.29219055]
[251.60855103 -225.03271484]
[246.95373535 -210.77323914]
[247.86489868 -203.44866943]
[242.13601685 -196.35086060]
[237.28601074 -182.15658569]
[232.43601990 -167.96231079]
[227.58601379 -153.76802063]
[222.73602295 -139.57374573]
[217.88601685 -125.37947083]
[213.03602600 -111.18519592]
[219.80711365 -97.96824646]
[215.09072876 -83.50413513]
[201.18167114 -76.49160004]
[196.33166504 -62.29732132]
[191.48167419 -48.10304642]
[186.63166809 -33.90876770]
[189.29266357 -19.14668465]
[198.79364014 -7.53929901]
[208.29463196 4.06808710]
[217.79560852 15.67547321]
[232.50689697 24.10245895]
[228.48173523 40.57165527]
[211.54188538 41.26292419]
[206.18821716 25.17645073]
[196.68724060 13.56906509]
[187.18626404 1.96167958]
[177.68528748 -9.64570618]
[162.77552795 -8.00275993]
[156.02992249 5.39488173]
[149.28431702 18.79252434]
[142.53871155 32.19016647]
[135.79310608 45.58780670]
[129.04750061 58.98544693]
[122.30189514 72.38308716]
[135.65808105 90.03791046]
[136.25709534 113.09565735]
[122.79846191 132.95895386]
[99.42214966 141.59779358]
[95.95549774 156.19169617]
[92.48883820 170.78561401]
[89.02218628 185.37953186]
[98.66083527 173.88619995]
[111.22879791 165.69802856]
[125.63658142 161.52479553]
[140.63520813 161.72830200]
[154.92445374 166.29089355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 22]
[15 21]
[23 223]
[24 222]
[25 221]
[26 220]
[27 38]
[28 37]
[29 36]
[30 35]
[47 216]
[48 215]
[49 214]
[50 213]
[51 212]
[52 211]
[53 210]
[55 198]
[56 197]
[57 196]
[58 195]
[61 192]
[62 191]
[63 190]
[64 189]
[65 188]
[66 187]
[67 186]
[68 184]
[69 183]
[70 182]
[71 181]
[72 180]
[73 177]
[74 176]
[75 175]
[76 174]
[77 88]
[78 87]
[79 86]
[80 85]
[94 173]
[95 172]
[96 171]
[97 170]
[98 169]
[99 168]
[100 167]
[102 162]
[103 161]
[104 160]
[105 159]
[106 158]
[107 157]
[108 156]
[110 155]
[111 154]
[112 153]
[115 135]
[116 134]
[117 133]
[118 132]
[139 150]
[140 149]
[141 148]
[199 209]
[200 208]
[201 207]
[202 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
