%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALG5)
} def

/sequence { (\
GGGUCGCGCGGGCGCGCUUCCGCCUGUGUGGAGGUGCGGGAUUGGGCGGGCUGCCACGGCAUGGAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.027371874 ubox
1 52 0.811171179 ubox
1 55 0.047894284 ubox
2 17 0.003248533 ubox
2 18 0.005840919 ubox
2 20 0.027346591 ubox
2 21 0.029856241 ubox
2 51 0.947204934 ubox
2 52 0.175697413 ubox
2 54 0.045558697 ubox
2 55 0.061569494 ubox
3 17 0.006906865 ubox
3 19 0.026688884 ubox
3 20 0.029915509 ubox
3 47 0.006634333 ubox
3 51 0.204696391 ubox
3 54 0.061732116 ubox
3 60 0.021911150 ubox
3 62 0.003251014 ubox
4 16 0.003904518 ubox
4 31 0.005890784 ubox
4 46 0.006640182 ubox
4 49 0.962111554 ubox
4 50 0.169805366 ubox
4 53 0.058910596 ubox
4 59 0.021917648 ubox
4 64 0.004039583 ubox
4 65 0.003747541 ubox
5 14 0.005549576 ubox
5 16 0.011017471 ubox
5 30 0.007606599 ubox
5 45 0.006626026 ubox
5 48 0.989202650 ubox
5 49 0.125768290 ubox
5 53 0.003873094 ubox
5 58 0.021888592 ubox
5 63 0.005001235 ubox
5 64 0.003851038 ubox
6 13 0.006034472 ubox
6 15 0.011153650 ubox
6 17 0.042775693 ubox
6 29 0.008118343 ubox
6 47 0.996186705 ubox
6 51 0.045988307 ubox
6 57 0.020432682 ubox
6 60 0.005838632 ubox
6 62 0.004560623 ubox
7 12 0.006430749 ubox
7 14 0.011153509 ubox
7 16 0.042804058 ubox
7 28 0.009852111 ubox
7 44 0.006740429 ubox
7 46 0.996140004 ubox
7 48 0.052224489 ubox
7 50 0.046003098 ubox
7 59 0.005822416 ubox
8 13 0.010868887 ubox
8 15 0.042802890 ubox
8 27 0.010810195 ubox
8 43 0.007476469 ubox
8 47 0.052518815 ubox
8 54 0.017210070 ubox
8 60 0.004822793 ubox
9 14 0.042741632 ubox
9 26 0.010915494 ubox
9 44 0.993302927 ubox
9 46 0.052470802 ubox
9 48 0.045890734 ubox
9 53 0.017206200 ubox
9 58 0.005127249 ubox
9 59 0.004681122 ubox
10 25 0.010923352 ubox
10 43 0.960140611 ubox
10 47 0.045819478 ubox
10 52 0.014053921 ubox
10 57 0.005218123 ubox
11 24 0.010933779 ubox
11 42 0.783369965 ubox
11 43 0.023956118 ubox
11 51 0.010141072 ubox
11 52 0.011248163 ubox
12 23 0.010933679 ubox
12 42 0.031612079 ubox
12 51 0.015081612 ubox
13 22 0.010933236 ubox
13 38 0.991030492 ubox
13 50 0.017947930 ubox
14 21 0.010601726 ubox
14 37 0.998727704 ubox
15 36 0.998734776 ubox
15 38 0.004393269 ubox
15 48 0.017960286 ubox
16 35 0.998369945 ubox
16 37 0.004264603 ubox
16 47 0.017962417 ubox
17 34 0.998752113 ubox
17 36 0.004008195 ubox
17 46 0.017937763 ubox
18 33 0.997853807 ubox
18 41 0.006456751 ubox
18 45 0.016456208 ubox
18 66 0.014326872 ubox
19 32 0.998200795 ubox
19 40 0.010299730 ubox
19 41 0.004401257 ubox
19 44 0.012137343 ubox
19 65 0.017705454 ubox
20 31 0.998767749 ubox
20 38 0.003485253 ubox
20 39 0.011738785 ubox
20 40 0.004505684 ubox
20 64 0.018114610 ubox
21 30 0.998738477 ubox
21 36 0.003971975 ubox
21 38 0.011760235 ubox
21 39 0.004169754 ubox
21 63 0.018066619 ubox
22 29 0.995157617 ubox
22 35 0.006259050 ubox
22 37 0.011478261 ubox
22 60 0.025091218 ubox
22 62 0.011068788 ubox
23 28 0.991746249 ubox
23 34 0.007333577 ubox
23 36 0.010851402 ubox
23 40 0.012448477 ubox
23 59 0.025189006 ubox
23 64 0.034117591 ubox
24 33 0.008371160 ubox
24 34 0.009918049 ubox
24 39 0.012455129 ubox
24 58 0.024912290 ubox
24 63 0.034219249 ubox
25 32 0.008425640 ubox
25 33 0.009751053 ubox
25 38 0.012444032 ubox
25 61 0.034470824 ubox
26 37 0.012449247 ubox
26 60 0.035351493 ubox
27 36 0.012391064 ubox
27 58 0.026892655 ubox
27 59 0.025001291 ubox
28 35 0.007817853 ubox
28 57 0.044592743 ubox
29 34 0.005517084 ubox
29 56 0.045045933 ubox
30 55 0.045269770 ubox
31 54 0.045083455 ubox
33 52 0.041518520 ubox
34 51 0.045451187 ubox
34 62 0.005265086 ubox
35 50 0.045379672 ubox
35 61 0.005456723 ubox
36 47 0.004267943 ubox
36 60 0.005518753 ubox
37 46 0.004274953 ubox
37 48 0.045378369 ubox
37 59 0.005453945 ubox
38 47 0.045368681 ubox
43 58 0.004621228 ubox
44 57 0.005395938 ubox
45 55 0.011595147 ubox
46 54 0.011663760 ubox
47 53 0.011714852 ubox
48 52 0.007228800 ubox
48 55 0.007922459 ubox
49 54 0.008075183 ubox
49 55 0.006429164 ubox
50 54 0.006345262 ubox
50 60 0.184599465 ubox
51 59 0.184824834 ubox
51 64 0.021160853 ubox
51 66 0.079742096 ubox
52 58 0.184213829 ubox
52 61 0.416271632 ubox
52 63 0.015880701 ubox
52 65 0.086144818 ubox
53 57 0.175781865 ubox
53 60 0.728656827 ubox
53 62 0.004744530 ubox
54 59 0.728623165 ubox
54 64 0.608856005 ubox
55 63 0.610749748 ubox
56 62 0.558134277 ubox
57 63 0.036897574 ubox
58 62 0.023556719 ubox
1 52 0.9500000 lbox
2 51 0.9500000 lbox
4 49 0.9500000 lbox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
7 46 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
11 42 0.9500000 lbox
13 38 0.9500000 lbox
14 37 0.9500000 lbox
15 36 0.9500000 lbox
16 35 0.9500000 lbox
17 34 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
