%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUCUAGGGACUUUCCUGAGUGGGAGGGAUUUCGCCGGAACAAAAAUGCCUCAGUUUGGAGGUCGCGCUCACUGCGACGGCAGGCUUUGAGUGUAGCACUUGGUAGUUCUUCCUCUGCUCUGCUUCCCUUCGGAGGAAAAUUUCAGGCUGAAGGUUUAGCGGGUGCCGCCUCUAAAGAGAGCAAUCACUACACUU\
) } def
/len { sequence length } bind def

/coor [
[-95.56255341 408.14697266]
[-102.40403748 421.49588013]
[-109.24552917 434.84481812]
[-116.08701324 448.19375610]
[-122.92849731 461.54269409]
[-122.33709717 477.35284424]
[-135.02764893 485.15023804]
[-141.86914062 498.49917603]
[-141.27772522 514.30932617]
[-153.96827698 522.10668945]
[-160.80976868 535.45562744]
[-167.65126038 548.80456543]
[-174.49273682 562.15350342]
[-176.33613586 579.00695801]
[-193.04124451 581.90106201]
[-200.44670105 566.65002441]
[-187.84167480 555.31201172]
[-181.00018311 541.96307373]
[-174.15870667 528.61413574]
[-167.31721497 515.26519775]
[-168.39796448 500.40988159]
[-155.21806335 491.65768433]
[-148.37658691 478.30874634]
[-149.45733643 463.45339966]
[-136.27743530 454.70120239]
[-129.43594360 441.35226440]
[-122.59445953 428.00332642]
[-115.75297546 414.65441895]
[-108.91148376 401.30548096]
[-119.55986786 390.74081421]
[-132.85438538 397.68746948]
[-137.34394836 412.84066772]
[-151.27313232 420.30746460]
[-166.37802124 415.65792847]
[-173.69712830 401.65057373]
[-168.88818359 386.59570312]
[-154.80422974 379.42507935]
[-139.80102539 384.39294434]
[-126.50650787 377.44628906]
[-131.78520203 362.49673462]
[-133.53257751 346.80325317]
[-131.68643188 331.18521118]
[-126.37142944 316.45144653]
[-117.89112091 303.35848999]
[-106.71075439 292.57150269]
[-93.43183136 284.63079834]
[-78.75975800 279.92459106]
[-63.46642303 278.67016602]
[-48.34956360 280.90402222]
[-34.19117737 286.48141479]
[-25.91925430 273.96841431]
[-17.64733124 261.45541382]
[-9.47443581 248.87748718]
[-1.40107739 236.23545837]
[6.67228127 223.59342957]
[6.53404284 218.81063843]
[9.40554142 213.89210510]
[15.20536900 210.68536377]
[23.67379379 198.30450439]
[32.14221954 185.92362976]
[40.61064529 173.54277039]
[49.07907104 161.16191101]
[57.54749680 148.78105164]
[66.01592255 136.40017700]
[74.48434448 124.01931763]
[82.95277405 111.63845825]
[79.36902618 99.34838867]
[83.72119904 87.30895996]
[76.05095673 74.41837311]
[68.38071442 61.52777863]
[60.71046829 48.63718796]
[53.04022217 35.74659729]
[45.36997986 22.85600471]
[37.69973373 9.96541309]
[29.62637711 -2.67661548]
[21.15795135 -15.05747890]
[12.68952656 -27.43834114]
[4.22110081 -39.81920624]
[-10.79068565 -46.42058945]
[-12.31040382 -62.74916840]
[1.22530317 -72.00749969]
[15.89205933 -64.67140198]
[16.60196495 -48.28763199]
[25.07038879 -35.90676880]
[33.53881454 -23.52590370]
[42.00724030 -11.14504051]
[44.74465179 -10.49930382]
[47.38983154 -8.72498131]
[49.50965118 -5.85223866]
[50.69010162 -2.06802797]
[50.59032822 2.29516864]
[58.26057053 15.18576050]
[65.93081665 28.07635117]
[73.60105896 40.96694183]
[81.27130127 53.85753632]
[88.94155121 66.74813080]
[96.61179352 79.63871765]
[105.63031006 80.14146423]
[113.57067871 84.44692230]
[126.86519623 77.50027466]
[140.15971375 70.55363464]
[153.45422363 63.60699463]
[166.74874878 56.66035080]
[180.04325867 49.71370697]
[193.33778381 42.76706696]
[201.98567200 29.51849747]
[216.84907532 30.48195457]
[230.14360046 23.53531265]
[243.43811035 16.58867073]
[252.08599854 3.34010196]
[266.94940186 4.30355930]
[280.24392700 -2.64308310]
[293.53845215 -9.58972549]
[306.83297729 -16.53636742]
[320.12747192 -23.48300934]
[329.62820435 -39.25168610]
[347.11621094 -37.84108353]
[360.29940796 -44.99673080]
[373.48260498 -52.15237808]
[386.66580200 -59.30802536]
[385.50946045 -76.43291473]
[391.92959595 -92.29119873]
[404.59140015 -103.71452332]
[420.91830444 -108.44342804]
[437.61621094 -105.57413483]
[451.33810425 -95.73081207]
[464.28881836 -103.29906464]
[477.23956299 -110.86732483]
[490.19030762 -118.43557739]
[503.14102173 -126.00382996]
[510.79132080 -140.50918579]
[527.18658447 -140.86604309]
[535.46075439 -126.70730591]
[527.10211182 -112.59827423]
[510.70928955 -113.05310059]
[497.75854492 -105.48484039]
[484.80783081 -97.91658783]
[471.85708618 -90.34833527]
[458.90634155 -82.78007507]
[460.99877930 -69.94899750]
[458.59744263 -57.13961792]
[451.96719360 -45.88259888]
[441.87954712 -37.53062439]
[429.52288818 -33.09583664]
[416.36257935 -33.12724304]
[403.96719360 -37.64282608]
[393.82147217 -46.12482452]
[380.63827515 -38.96917725]
[367.45504761 -31.81353188]
[354.27185059 -24.65788460]
[350.53170776 -13.14760303]
[339.59878540 -7.08030033]
[327.07412720 -10.18849373]
[313.77960205 -3.24185133]
[300.48507690 3.70479083]
[287.19058228 10.65143299]
[273.89605713 17.59807587]
[266.19909668 30.34977341]
[250.38475037 29.88318634]
[237.09024048 36.82983017]
[223.79573059 43.77647018]
[216.09873962 56.52816772]
[200.28442383 56.06158066]
[186.98989868 63.00822449]
[173.69538879 69.95486450]
[160.40087891 76.90151215]
[147.10635376 83.84815216]
[133.81184387 90.79479218]
[120.51732635 97.74143219]
[113.70644379 115.43357086]
[95.33363342 120.10688019]
[86.86521149 132.48774719]
[78.39678192 144.86860657]
[69.92835999 157.24946594]
[61.45993423 169.63034058]
[52.99150848 182.01119995]
[44.52308273 194.39205933]
[36.05465698 206.77291870]
[27.58623314 219.15379333]
[19.31431007 231.66679382]
[11.24095058 244.30882263]
[3.16759229 256.95083618]
[1.18303251 265.87738037]
[-5.13432646 269.72732544]
[-13.40624905 282.24032593]
[-21.67817116 294.75332642]
[-11.89359379 304.53091431]
[-4.31136942 316.15460205]
[0.72667915 329.13470459]
[2.98637533 342.91976929]
[2.35201192 356.91998291]
[-1.16787696 370.53231812]
[-7.44007683 383.16665649]
[-16.21164322 394.27127075]
[-27.12005424 403.35696411]
[-39.70817184 410.01849365]
[-53.44339371 413.95285034]
[-67.74015808 414.97274780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 26]
[5 25]
[7 23]
[8 22]
[10 20]
[11 19]
[12 18]
[13 17]
[30 39]
[31 38]
[50 186]
[51 185]
[52 184]
[53 182]
[54 181]
[55 180]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[73 92]
[74 91]
[75 86]
[76 85]
[77 84]
[78 83]
[99 169]
[100 168]
[101 167]
[102 166]
[103 165]
[104 164]
[105 163]
[107 161]
[108 160]
[109 159]
[111 157]
[112 156]
[113 155]
[114 154]
[115 153]
[117 150]
[118 149]
[119 148]
[120 147]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
