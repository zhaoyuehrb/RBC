%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MARVELD2)
} def

/sequence { (\
GCCCGAUACCGGUUUCAGAGUCCUGGGCAGCGUGCGCGCUCUUCCUGGCGGCUGCGCAGGUGUGAAAAUCACAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.181139192 ubox
1 21 0.034175682 ubox
1 28 0.144658696 ubox
1 57 0.004984862 ubox
1 61 0.004481077 ubox
2 12 0.191436824 ubox
2 20 0.037362750 ubox
2 27 0.144768578 ubox
2 56 0.004978309 ubox
2 60 0.004969168 ubox
3 11 0.169176275 ubox
3 12 0.934763124 ubox
3 26 0.144471175 ubox
3 59 0.003198811 ubox
4 11 0.944195647 ubox
4 25 0.144085558 ubox
5 10 0.935835250 ubox
5 14 0.014245153 ubox
5 15 0.005312133 ubox
5 16 0.052985248 ubox
5 22 0.049295813 ubox
5 24 0.125698604 ubox
5 70 0.060019162 ubox
6 13 0.015972311 ubox
6 14 0.006056702 ubox
6 15 0.052933876 ubox
6 21 0.050412861 ubox
6 69 0.060004510 ubox
7 12 0.015737658 ubox
7 20 0.049543136 ubox
7 68 0.059508272 ubox
8 21 0.076615734 ubox
8 24 0.004000615 ubox
8 61 0.003670576 ubox
9 20 0.077817580 ubox
9 26 0.004294956 ubox
9 60 0.003943650 ubox
10 25 0.004555498 ubox
10 59 0.003928431 ubox
11 22 0.010348378 ubox
11 23 0.090743709 ubox
11 24 0.005783321 ubox
11 70 0.198272675 ubox
12 21 0.009891139 ubox
12 22 0.090666127 ubox
12 23 0.006207082 ubox
12 28 0.004495769 ubox
12 69 0.199078623 ubox
12 72 0.019359616 ubox
13 19 0.023667452 ubox
13 20 0.037965661 ubox
13 27 0.003802265 ubox
13 65 0.008730088 ubox
13 66 0.021381578 ubox
13 67 0.647257317 ubox
13 68 0.178534374 ubox
13 71 0.018293255 ubox
13 74 0.004374865 ubox
14 18 0.022820417 ubox
14 19 0.033905283 ubox
14 20 0.023580833 ubox
14 27 0.014702530 ubox
14 64 0.008853440 ubox
14 65 0.018535822 ubox
14 66 0.753164015 ubox
14 67 0.147581171 ubox
14 68 0.010038981 ubox
14 73 0.004071566 ubox
14 74 0.003691474 ubox
15 19 0.024282111 ubox
15 26 0.021837715 ubox
15 64 0.008451344 ubox
15 65 0.781895905 ubox
15 66 0.106043705 ubox
15 67 0.007377417 ubox
15 73 0.003360014 ubox
16 25 0.026046944 ubox
16 62 0.013620913 ubox
16 64 0.791173057 ubox
17 24 0.028739619 ubox
17 42 0.005887417 ubox
17 61 0.015152880 ubox
17 63 0.784892745 ubox
18 23 0.029079080 ubox
18 41 0.006296270 ubox
18 70 0.011426795 ubox
19 40 0.006297630 ubox
19 53 0.003633543 ubox
19 69 0.011373347 ubox
20 39 0.006297033 ubox
20 52 0.003733576 ubox
20 61 0.219543109 ubox
20 63 0.009501155 ubox
20 72 0.005062569 ubox
21 38 0.005815452 ubox
21 51 0.003745869 ubox
21 60 0.008187206 ubox
21 62 0.025784662 ubox
21 71 0.004976971 ubox
22 50 0.003748540 ubox
22 59 0.007227450 ubox
22 60 0.985640817 ubox
23 48 0.003776580 ubox
23 59 0.989085598 ubox
24 47 0.003763641 ubox
24 58 0.988905909 ubox
25 37 0.006127338 ubox
25 46 0.003805571 ubox
25 57 0.988942645 ubox
26 45 0.003829633 ubox
27 35 0.006241804 ubox
27 44 0.003826807 ubox
27 55 0.989057033 ubox
27 57 0.004452926 ubox
27 61 0.003620669 ubox
27 63 0.003495569 ubox
28 34 0.006241239 ubox
28 54 0.989153541 ubox
28 56 0.004639500 ubox
28 60 0.004670360 ubox
28 62 0.003733981 ubox
29 33 0.005060178 ubox
29 40 0.014066194 ubox
29 53 0.988878967 ubox
29 61 0.005634675 ubox
30 39 0.014990179 ubox
30 52 0.987519072 ubox
30 55 0.008316400 ubox
30 57 0.070395269 ubox
30 61 0.101806746 ubox
31 36 0.003872996 ubox
31 38 0.015002312 ubox
31 50 0.035474159 ubox
31 51 0.985576260 ubox
31 54 0.008401591 ubox
31 56 0.070474296 ubox
31 60 0.126326172 ubox
32 37 0.017327933 ubox
32 39 0.004180399 ubox
32 49 0.049619724 ubox
32 52 0.007465089 ubox
32 53 0.008614448 ubox
32 55 0.070461767 ubox
32 57 0.008803313 ubox
33 38 0.004014271 ubox
33 48 0.048768345 ubox
33 50 0.658397770 ubox
33 51 0.008567216 ubox
33 54 0.068223774 ubox
33 56 0.008809265 ubox
33 58 0.126807180 ubox
34 49 0.742258731 ubox
34 52 0.087107074 ubox
34 53 0.020970394 ubox
34 55 0.008839487 ubox
34 57 0.127139930 ubox
35 47 0.047497748 ubox
35 48 0.741655420 ubox
35 50 0.416902144 ubox
35 51 0.092045437 ubox
35 54 0.008839211 ubox
35 56 0.127139263 ubox
36 46 0.041771911 ubox
36 49 0.418502734 ubox
36 52 0.011921140 ubox
36 53 0.005309301 ubox
36 55 0.127131249 ubox
37 47 0.440210834 ubox
37 48 0.417978055 ubox
37 50 0.500928999 ubox
37 51 0.008707434 ubox
37 54 0.126926295 ubox
38 46 0.368537430 ubox
38 49 0.502620446 ubox
38 52 0.121996544 ubox
38 53 0.031961589 ubox
39 48 0.502046094 ubox
39 51 0.124761029 ubox
40 47 0.422072982 ubox
40 48 0.029772939 ubox
40 50 0.118990968 ubox
40 51 0.016813886 ubox
41 47 0.232090706 ubox
41 48 0.112056720 ubox
41 50 0.030459263 ubox
42 47 0.110418713 ubox
42 48 0.021285352 ubox
43 47 0.016857932 ubox
44 51 0.005564889 ubox
44 60 0.015779568 ubox
45 50 0.005844101 ubox
45 59 0.015922004 ubox
46 58 0.015719644 ubox
47 57 0.013195496 ubox
48 55 0.010018755 ubox
48 57 0.009023364 ubox
49 54 0.010011824 ubox
49 56 0.012418073 ubox
50 55 0.012381542 ubox
59 70 0.006312578 ubox
60 69 0.006375187 ubox
60 72 0.018756353 ubox
61 68 0.006555703 ubox
61 71 0.019753325 ubox
61 73 0.538622801 ubox
62 69 0.004546358 ubox
62 70 0.020054465 ubox
62 72 0.608427264 ubox
63 68 0.008156441 ubox
63 71 0.608498579 ubox
63 73 0.005129940 ubox
64 70 0.608469951 ubox
64 72 0.005695198 ubox
65 69 0.529379075 ubox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
13 67 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
22 60 0.9500000 lbox
23 59 0.9500000 lbox
24 58 0.9500000 lbox
25 57 0.9500000 lbox
27 55 0.9500000 lbox
28 54 0.9500000 lbox
29 53 0.9500000 lbox
30 52 0.9500000 lbox
31 51 0.9500000 lbox
33 50 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
showpage
end
%%EOF
