%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGAGAGCUGGGCUCUGCGUCCUCGUCCAGCCGCCAACUCGGCCAAAGGCGAAGCCAGCAGUUUCUUCUGCUGCCGGGCAACGCGCCUUUUAAACCUGAGGGAGUGGGCGCGUGAGCACUUAAUGGCGCCGGUGACAGAGUGAGCUUAACGGAUUAAUAAGCGCAGCCAGGCCAGCUCUGGGGUCUCGGCAGGUGGUCCGCGAC\
) } def
/len { sequence length } bind def

/coor [
[357.65191650 794.10382080]
[352.92971802 779.86651611]
[348.20751953 765.62921143]
[336.85693359 755.98486328]
[339.85635376 740.45062256]
[335.13415527 726.21331787]
[330.41195679 711.97601318]
[325.68975830 697.73870850]
[320.96755981 683.50140381]
[316.24539185 669.26403809]
[311.52319336 655.02673340]
[306.80099487 640.78942871]
[295.45040894 631.14514160]
[298.44982910 615.61083984]
[293.72763062 601.37353516]
[288.78884888 587.20989990]
[283.63467407 573.12322998]
[278.48049927 559.03656006]
[273.32632446 544.94982910]
[268.17214966 530.86315918]
[263.01797485 516.77648926]
[245.96379089 514.43511963]
[232.37319946 503.72549438]
[226.04415894 487.52572632]
[228.80332947 470.26358032]
[239.98002625 456.70642090]
[234.39865112 442.78347778]
[228.81727600 428.86053467]
[223.23590088 414.93759155]
[207.19081116 413.03790283]
[194.21775818 403.25033569]
[187.91366577 388.17004395]
[190.08605957 371.87539673]
[200.23599243 358.82516479]
[194.44294739 344.98895264]
[180.60604858 339.59677124]
[174.53396606 325.64739990]
[180.28361511 311.17056274]
[174.49057007 297.33435059]
[168.69752502 283.49813843]
[162.90447998 269.66192627]
[148.39015198 266.42581177]
[138.44689941 255.13000488]
[137.04525757 239.96791077]
[144.93144226 226.73483276]
[139.13839722 212.89863586]
[125.30149078 207.50643921]
[119.22941589 193.55708313]
[124.97905731 179.08023071]
[119.18601227 165.24401855]
[113.39295959 151.40782166]
[107.59991455 137.57160950]
[82.04190826 133.86578369]
[64.63497162 114.78847504]
[63.28001404 88.99877167]
[50.03102875 81.96567535]
[36.78204727 74.93257904]
[18.40161514 76.01616669]
[9.67637730 60.79190063]
[-3.67831993 53.96166992]
[-17.03301620 47.13143921]
[-30.38771439 40.30120468]
[-43.74241257 33.47097397]
[-58.07477951 39.72535324]
[-73.05954742 35.25425720]
[-81.62136841 22.16879654]
[-79.71761322 6.64753056]
[-68.24716949 -3.98087668]
[-52.62604141 -4.69801521]
[-40.23003769 4.83472538]
[-36.91217804 20.11627769]
[-23.55748177 26.94650841]
[-10.20278454 33.77674103]
[3.15191197 40.60697174]
[16.50660896 47.43720627]
[28.11194420 44.01629257]
[39.29507065 49.60061646]
[43.81513977 61.68359375]
[57.06412506 68.71669006]
[70.31311035 75.74978638]
[77.80102539 68.74955750]
[86.87634277 63.98397446]
[84.59763336 49.15806961]
[82.31892395 34.33216476]
[80.04021454 19.50625801]
[77.76149750 4.68035221]
[75.48278809 -10.14555359]
[73.20407867 -24.97145844]
[70.92536926 -39.79736328]
[58.49555969 -43.31759262]
[48.35803986 -51.24966812]
[41.99785614 -62.38673782]
[40.32967377 -75.05587769]
[43.56640625 -87.36934662]
[51.19275284 -97.50586700]
[62.04689026 -103.98001099]
[60.22137451 -118.86851501]
[52.29233932 -133.85406494]
[64.49726868 -145.62164307]
[79.18363190 -137.15127563]
[75.10987854 -120.69403076]
[76.93539429 -105.80553436]
[93.01433563 -99.65780640]
[103.82229614 -86.14528656]
[106.31289673 -68.93231964]
[99.71112061 -52.74556732]
[85.75127411 -42.07607651]
[88.02998352 -27.25016975]
[90.30869293 -12.42426395]
[92.58740997 2.40164161]
[94.86611938 17.22754669]
[97.14482880 32.05345154]
[99.42353821 46.87936020]
[101.70224762 61.70526505]
[108.48720551 62.61883163]
[115.00144196 64.72477722]
[121.03716278 67.95593262]
[126.40184021 72.20922089]
[130.92436218 77.34898376]
[134.46044922 83.21125793]
[136.89732361 89.60906219]
[138.15725708 96.33831787]
[138.20005798 103.18436432]
[137.02435303 109.92884064]
[134.66764832 116.35661316]
[131.20512390 122.26264191]
[126.74720764 127.45853424]
[121.43612671 131.77856445]
[127.22917175 145.61476135]
[133.02221680 159.45097351]
[138.81526184 173.28718567]
[153.16419983 179.34901428]
[158.84207153 193.46342468]
[152.97459412 207.10559082]
[158.76763916 220.94178772]
[173.72961426 224.60864258]
[183.54873657 236.24642944]
[184.61964417 251.25698853]
[176.74067688 263.86889648]
[182.53372192 277.70510864]
[188.32676697 291.54129028]
[194.11981201 305.37750244]
[208.46875000 311.43936157]
[214.14662170 325.55374146]
[208.27915955 339.19592285]
[214.07220459 353.03210449]
[228.02276611 354.08309937]
[240.10144043 361.00994873]
[247.97879028 372.41104126]
[250.16401672 386.02841187]
[246.28684998 399.19479370]
[237.15884399 409.35620117]
[242.74021912 423.27914429]
[248.32159424 437.20208740]
[253.90295410 451.12503052]
[266.80722046 451.73489380]
[278.47940063 457.16146851]
[287.19940186 466.56613159]
[291.69708252 478.52694702]
[291.33694458 491.25363159]
[286.20788574 502.85546875]
[277.10464478 511.62231445]
[282.25881958 525.70898438]
[287.41299438 539.79565430]
[292.56716919 553.88232422]
[297.72134399 567.96905518]
[302.87554932 582.05572510]
[307.69866943 586.58703613]
[309.27038574 592.05358887]
[307.96493530 596.65130615]
[312.68713379 610.88861084]
[324.37548828 621.55133057]
[321.03829956 636.06726074]
[325.76049805 650.30456543]
[330.48269653 664.54187012]
[335.20486450 678.77917480]
[339.92706299 693.01647949]
[344.64926147 707.25378418]
[349.37145996 721.49108887]
[354.09365845 735.72839355]
[365.78201294 746.39111328]
[362.44482422 760.90704346]
[367.16702271 775.14434814]
[371.88922119 789.38165283]
[376.82797241 803.54528809]
[381.98214722 817.63195801]
[393.99023438 827.93322754]
[391.09729004 842.54418945]
[396.25146484 856.63085938]
[401.40567017 870.71752930]
[416.36520386 874.83966064]
[426.01843262 886.98852539]
[426.65353394 902.49261475]
[418.02627563 915.39025879]
[403.45401001 920.72210693]
[388.54006958 916.43792725]
[379.01919556 904.18511963]
[378.55230713 888.67504883]
[387.31896973 875.87170410]
[382.16479492 861.78503418]
[377.01062012 847.69836426]
[365.37118530 838.40466309]
[367.89547729 822.78613281]
[362.74130249 808.69946289]
[358.86007690 805.91027832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[12 173]
[14 171]
[15 170]
[16 167]
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[26 155]
[27 154]
[28 153]
[29 152]
[34 146]
[35 145]
[38 142]
[39 141]
[40 140]
[41 139]
[45 135]
[46 134]
[49 131]
[50 130]
[51 129]
[52 128]
[55 80]
[56 79]
[57 78]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
[82 114]
[83 113]
[84 112]
[85 111]
[86 110]
[87 109]
[88 108]
[89 107]
[96 102]
[97 101]
[185 204]
[186 203]
[188 201]
[189 200]
[190 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
