%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:35:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZMYND15)
} def

/sequence { (\
GAGGUAUUUACCUUCGAAAAGUGGUGGCGGCUGCAGUCUGGGCCGGGGCCCUGUGCCGCUGAAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.011252992 ubox
1 9 0.011219937 ubox
1 14 0.657054181 ubox
1 15 0.599021002 ubox
2 7 0.012730608 ubox
2 8 0.011826712 ubox
2 9 0.008466451 ubox
2 13 0.860306807 ubox
2 14 0.447324990 ubox
3 7 0.008250688 ubox
3 8 0.007720515 ubox
3 9 0.004740581 ubox
3 12 0.958455113 ubox
3 13 0.204507615 ubox
3 15 0.006419713 ubox
3 57 0.004498949 ubox
4 8 0.003622672 ubox
4 11 0.959345080 ubox
4 12 0.199064391 ubox
4 14 0.005973701 ubox
4 28 0.004095041 ubox
4 56 0.004505582 ubox
4 66 0.011731791 ubox
5 10 0.898427051 ubox
5 23 0.011219331 ubox
5 26 0.004118923 ubox
5 27 0.004034573 ubox
5 55 0.004501726 ubox
5 65 0.011379993 ubox
6 22 0.012273356 ubox
6 25 0.006638794 ubox
6 54 0.004459565 ubox
7 18 0.005751213 ubox
7 20 0.004538861 ubox
7 21 0.012253099 ubox
7 24 0.006133862 ubox
7 53 0.004362703 ubox
7 63 0.008885379 ubox
7 64 0.004040387 ubox
7 65 0.005184024 ubox
8 17 0.006635575 ubox
8 18 0.003534755 ubox
8 19 0.005279992 ubox
8 20 0.012069153 ubox
8 23 0.005297249 ubox
8 24 0.016727194 ubox
8 26 0.004897463 ubox
8 27 0.047305135 ubox
8 62 0.009895684 ubox
8 63 0.005180671 ubox
8 64 0.005501690 ubox
8 65 0.003521566 ubox
9 16 0.006477904 ubox
9 17 0.003521307 ubox
9 18 0.005464597 ubox
9 19 0.011468131 ubox
9 23 0.022819487 ubox
9 26 0.104534488 ubox
9 61 0.009219214 ubox
9 62 0.004936121 ubox
9 63 0.004823862 ubox
10 22 0.023729459 ubox
10 25 0.148803611 ubox
11 21 0.021653204 ubox
11 24 0.154724428 ubox
11 27 0.013534766 ubox
12 21 0.020231596 ubox
12 23 0.154594756 ubox
12 24 0.006217175 ubox
12 26 0.013873586 ubox
12 64 0.106906317 ubox
13 19 0.012372468 ubox
13 20 0.025529546 ubox
13 21 0.028366412 ubox
13 23 0.006557668 ubox
13 24 0.003207535 ubox
13 63 0.109810002 ubox
14 18 0.011763351 ubox
14 19 0.024197006 ubox
14 20 0.028383952 ubox
14 23 0.006775014 ubox
14 24 0.061599730 ubox
14 27 0.007997177 ubox
14 61 0.003773058 ubox
14 62 0.115293201 ubox
14 64 0.003471009 ubox
14 65 0.093780741 ubox
15 23 0.124843820 ubox
15 26 0.031443807 ubox
15 58 0.005551380 ubox
15 61 0.117112008 ubox
15 64 0.119612183 ubox
16 22 0.104916859 ubox
16 25 0.032355324 ubox
16 57 0.005998628 ubox
16 60 0.057378324 ubox
20 52 0.010742545 ubox
20 60 0.169592818 ubox
21 28 0.009809333 ubox
21 34 0.024802032 ubox
21 51 0.010948032 ubox
21 59 0.174445716 ubox
21 66 0.367527581 ubox
22 27 0.010109385 ubox
22 33 0.024779280 ubox
22 58 0.174378638 ubox
22 61 0.061830942 ubox
22 65 0.365848576 ubox
23 28 0.003860403 ubox
23 32 0.024809516 ubox
23 50 0.011626965 ubox
23 57 0.174417958 ubox
23 60 0.093671706 ubox
24 31 0.024923561 ubox
24 49 0.011647894 ubox
24 56 0.174402579 ubox
24 59 0.096643908 ubox
24 66 0.082431893 ubox
25 30 0.024631049 ubox
25 48 0.011328902 ubox
25 53 0.007380187 ubox
25 55 0.172405141 ubox
25 58 0.096530153 ubox
25 61 0.565787589 ubox
25 65 0.081541915 ubox
26 38 0.025323016 ubox
26 50 0.144622040 ubox
26 51 0.060115179 ubox
26 52 0.045138846 ubox
26 54 0.036664879 ubox
26 57 0.096544624 ubox
26 60 0.936098545 ubox
27 34 0.016945052 ubox
27 37 0.025643948 ubox
27 49 0.145171397 ubox
27 50 0.059490007 ubox
27 51 0.048466380 ubox
27 54 0.019392521 ubox
27 56 0.096534910 ubox
27 59 0.970664317 ubox
28 33 0.016962499 ubox
28 36 0.025755187 ubox
28 45 0.088660739 ubox
28 48 0.132952168 ubox
28 53 0.025118737 ubox
28 55 0.096389634 ubox
28 58 0.970839616 ubox
28 61 0.127920900 ubox
29 38 0.063623716 ubox
29 39 0.004910602 ubox
29 44 0.160133808 ubox
29 50 0.058432301 ubox
29 51 0.009180185 ubox
29 52 0.013823057 ubox
29 54 0.052841048 ubox
29 57 0.970849561 ubox
29 60 0.129534024 ubox
30 37 0.064391613 ubox
30 38 0.005406762 ubox
30 43 0.160248637 ubox
30 49 0.058757828 ubox
30 50 0.008113590 ubox
30 51 0.010786397 ubox
30 54 0.013345989 ubox
30 56 0.970726059 ubox
30 59 0.129814546 ubox
31 36 0.064461447 ubox
31 41 0.003378396 ubox
31 42 0.160211716 ubox
31 46 0.009769351 ubox
31 48 0.058855003 ubox
31 53 0.018739919 ubox
31 55 0.963409099 ubox
31 58 0.129730056 ubox
32 40 0.004667165 ubox
32 41 0.158173782 ubox
32 45 0.009904479 ubox
32 46 0.003625929 ubox
32 47 0.057881404 ubox
32 53 0.017939815 ubox
32 55 0.112237018 ubox
33 39 0.004484631 ubox
33 43 0.034283917 ubox
33 44 0.008331470 ubox
33 49 0.010230832 ubox
33 52 0.020403080 ubox
33 54 0.931322791 ubox
33 56 0.130713788 ubox
34 40 0.052130819 ubox
34 42 0.034873449 ubox
34 48 0.010225130 ubox
34 53 0.964962384 ubox
34 55 0.131695553 ubox
35 39 0.042675532 ubox
35 52 0.957200701 ubox
35 54 0.133965529 ubox
36 43 0.044027780 ubox
36 49 0.099168292 ubox
36 51 0.484477509 ubox
36 54 0.014190581 ubox
36 66 0.024706192 ubox
37 42 0.041993129 ubox
37 46 0.010204215 ubox
37 47 0.060739618 ubox
37 48 0.117109519 ubox
37 53 0.024691272 ubox
37 65 0.024996932 ubox
38 45 0.010434161 ubox
38 46 0.064295551 ubox
38 47 0.124029861 ubox
38 48 0.025448124 ubox
38 64 0.025054014 ubox
39 45 0.064529940 ubox
39 46 0.122384133 ubox
39 47 0.025264582 ubox
39 53 0.008330210 ubox
39 63 0.024655924 ubox
40 44 0.061941498 ubox
40 50 0.088498288 ubox
40 51 0.851149713 ubox
40 52 0.004302486 ubox
41 49 0.083460131 ubox
41 50 0.970367804 ubox
41 51 0.004787360 ubox
41 57 0.004040716 ubox
41 60 0.023288360 ubox
42 49 0.970942999 ubox
42 50 0.003989601 ubox
42 56 0.004063951 ubox
42 59 0.024004900 ubox
43 48 0.968242512 ubox
43 55 0.004072981 ubox
43 58 0.017221048 ubox
44 53 0.004619530 ubox
44 58 0.018000546 ubox
45 51 0.011502670 ubox
45 52 0.006808055 ubox
45 57 0.024608587 ubox
46 50 0.011390583 ubox
46 51 0.007577996 ubox
46 52 0.003772056 ubox
46 56 0.024617595 ubox
47 51 0.003875516 ubox
47 57 0.005833423 ubox
48 54 0.024800427 ubox
48 56 0.005877020 ubox
49 53 0.024720268 ubox
49 55 0.005890180 ubox
1 14 0.9500000 lbox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
30 56 0.9500000 lbox
31 55 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
