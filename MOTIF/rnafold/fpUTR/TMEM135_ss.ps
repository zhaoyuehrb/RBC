%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCCGCCCCCUUGAGCUGCGAUACGCCGAGCGCUCAACAUCCGAGGACUUUGGCCCAGAGUAACCCCGCUCUCGUGACCUUUCCCCUCCAUUCCGCACCUCCGAGUGCUGGCCGGGCGAGAGGCUGGCGGCUGGGCUCUCGCGCCCCUCCCUGCAGGGCUCAGGCUCUCCCCCUCCUGUCUUCUCCGCGCUGUUCCUCGUC\
) } def
/len { sequence length } bind def

/coor [
[53.23982620 226.24722290]
[52.30456924 234.60426331]
[49.76017761 242.61030579]
[45.70753479 249.95893860]
[40.30518723 256.36962891]
[33.76312256 261.59835815]
[26.33463287 265.44702148]
[18.30648613 267.77078247]
[9.98787022 268.48364258]
[1.69848001 267.56155396]
[-6.24376869 265.04327393]
[-13.53493118 261.02868652]
[-24.01771164 271.75769043]
[-34.50049210 282.48666382]
[-44.98327255 293.21566772]
[-55.46605301 303.94467163]
[-65.94883728 314.67364502]
[-69.71109009 323.00451660]
[-76.67782593 325.48599243]
[-87.32538605 336.05148315]
[-83.33010864 350.88162231]
[-87.30068207 365.71841431]
[-98.16902924 376.57080078]
[-113.01162720 380.51959229]
[-127.83589172 376.50253296]
[-138.65417480 365.60021973]
[-142.55639648 350.74530029]
[-138.49290466 335.93371582]
[-127.55672455 325.14965820]
[-112.68966675 321.29400635]
[-97.89086914 325.40393066]
[-87.24331665 314.83843994]
[-76.67782593 304.19088745]
[-66.19504547 293.46188354]
[-55.71226501 282.73287964]
[-45.22948456 272.00390625]
[-34.74670410 261.27490234]
[-24.26392555 250.54591370]
[-32.10064316 229.83332825]
[-28.44784164 207.92170715]
[-14.22843742 190.76600647]
[6.75348425 183.06378174]
[28.83018303 186.96893311]
[37.53390121 174.75233459]
[46.23762131 162.53573608]
[54.94133759 150.31913757]
[63.64505768 138.10253906]
[72.34877777 125.88594055]
[64.61539459 113.51303101]
[62.13281631 99.13489532]
[65.26942444 84.88513184]
[73.55977631 72.87829590]
[85.77365112 64.89611053]
[83.00399017 50.15402985]
[80.23432159 35.41194916]
[77.46466064 20.66986656]
[74.69499207 5.92778540]
[71.92533112 -8.81429577]
[69.15566254 -23.55637741]
[60.72265625 -11.15136433]
[46.32489014 -6.94371605]
[32.53895187 -12.85539436]
[25.66196060 -26.18607330]
[28.83517647 -40.84658813]
[40.60914230 -50.14033508]
[55.60576630 -49.82213211]
[66.97515106 -40.03691864]
[65.81562042 -54.99203491]
[64.65608978 -69.94715118]
[63.49656296 -84.90226746]
[62.33703232 -99.85738373]
[54.04627609 -103.19053650]
[47.32224655 -109.00940704]
[42.87688828 -116.66051483]
[41.16867828 -125.29854584]
[42.35546112 -133.97964478]
[46.28033066 -141.76461792]
[52.49168777 -147.82046509]
[60.29506683 -151.50958252]
[60.29506683 -166.50958252]
[60.29506683 -181.50958252]
[60.29506683 -196.50958252]
[60.29506683 -211.50958252]
[60.29506683 -226.50958252]
[60.17899704 -241.50914001]
[59.94686890 -256.50732422]
[59.71474075 -271.50555420]
[49.89704514 -287.08068848]
[59.01930618 -302.06921387]
[58.55510330 -317.06201172]
[58.09090424 -332.05484009]
[55.66549301 -335.67388916]
[54.62643051 -339.49258423]
[54.86571884 -343.04931641]
[56.13623810 -345.96542358]
[58.09090424 -347.98324585]
[58.55510330 -362.97604370]
[59.01930618 -377.96887207]
[59.48350525 -392.96170044]
[48.47811508 -404.30438232]
[48.80016708 -420.10540771]
[60.25859070 -430.99026489]
[76.05531311 -430.50115967]
[86.81841278 -418.92828369]
[86.16233063 -403.13763428]
[74.47631836 -392.49749756]
[74.01212311 -377.50466919]
[73.54792023 -362.51187134]
[73.08371735 -347.51904297]
[73.08371735 -332.51904297]
[73.54792023 -317.52621460]
[74.01212311 -302.53341675]
[82.61062622 -294.01934814]
[83.11640167 -281.52810669]
[74.71294403 -271.73767090]
[74.94507599 -256.73947144]
[75.17720032 -241.74125671]
[78.42608643 -235.09762573]
[75.29506683 -226.50958252]
[75.29506683 -211.50958252]
[75.29506683 -196.50958252]
[75.29506683 -181.50958252]
[75.29506683 -166.50958252]
[75.29506683 -151.50958252]
[91.65380859 -137.96395874]
[92.68294525 -116.46566772]
[77.29215240 -101.01691437]
[78.45167542 -86.06179810]
[79.61120605 -71.10668182]
[80.77073669 -56.15156555]
[81.93026733 -41.19644928]
[83.89774323 -26.32604218]
[86.66741180 -11.58396053]
[89.43707275 3.15812111]
[92.20674133 17.90020180]
[94.97640228 32.64228439]
[97.74607086 47.38436508]
[100.51573181 62.12644577]
[116.92888641 66.11660004]
[129.97540283 76.84513855]
[137.06069946 92.17848206]
[136.77575684 109.06729126]
[150.34024048 115.47077942]
[163.90473938 121.87426758]
[177.46922302 128.27775574]
[187.41589355 117.95987701]
[200.04435730 111.22920227]
[214.11320496 108.73234558]
[228.24403381 110.70048523]
[241.05654907 116.92798615]
[251.30334473 126.79381561]
[257.99139404 139.32345581]
[260.47817993 153.28512573]
[258.53359985 167.31091309]
[271.99734497 173.92355347]
[285.46112061 180.53619385]
[298.92489624 187.14881897]
[312.38867188 193.76145935]
[325.85244751 200.37408447]
[337.53112793 193.04612732]
[351.19729614 192.45210266]
[363.27505493 198.64033508]
[370.65704346 209.89851379]
[371.50363159 223.22593689]
[384.86346436 230.04612732]
[401.20397949 228.66062927]
[410.35076904 242.27195740]
[402.89440918 256.87792969]
[386.50534058 257.45318604]
[378.04324341 243.40596008]
[364.68344116 236.58575439]
[350.30020142 244.49169922]
[333.87393188 242.24642944]
[321.90234375 230.53826904]
[319.23980713 213.83786011]
[305.77603149 207.22521973]
[292.31225586 200.61259460]
[278.84848022 193.99995422]
[265.38473511 187.38732910]
[251.92095947 180.77468872]
[240.70617676 191.82119751]
[226.36288452 198.37191772]
[210.61692810 199.61843872]
[195.36987305 195.39178467]
[182.46932983 186.18507385]
[173.48512268 173.09606934]
[169.51818848 157.69625854]
[171.06573486 141.84223938]
[157.50125122 135.43875122]
[143.93675232 129.03526306]
[130.37226868 122.63177490]
[121.16387939 131.41276550]
[109.56718445 136.64889526]
[96.89084625 137.74923706]
[84.56537628 134.58966064]
[75.86165619 146.80625916]
[67.15793610 159.02285767]
[58.45421982 171.23945618]
[49.75049973 183.45605469]
[41.04677963 195.67265320]
[46.31400681 202.27189636]
[50.18925858 209.76397705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[19 32]
[20 31]
[43 200]
[44 199]
[45 198]
[46 197]
[47 196]
[48 195]
[53 138]
[54 137]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 117]
[86 116]
[87 115]
[89 112]
[90 111]
[91 110]
[96 109]
[97 108]
[98 107]
[99 106]
[142 191]
[143 190]
[144 189]
[145 188]
[154 180]
[155 179]
[156 178]
[157 177]
[158 176]
[159 175]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
