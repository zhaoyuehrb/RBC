%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CPSF6)
} def

/sequence { (\
CUCGGAAGUGACGCAAGCGCCCCCCCACCGCCGCUAGAUCCGCUGCUGCUGCCGCGGCGGGCAGACCUGCAGGAGGCGGCGGCGGCGGCGGCGGCCGAGGCUGAAGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.008919657 ubox
1 17 0.013728686 ubox
1 37 0.004348939 ubox
1 99 0.979970463 ubox
1 100 0.024174402 ubox
1 106 0.038300182 ubox
1 107 0.015095801 ubox
1 110 0.008853155 ubox
2 7 0.008408380 ubox
2 11 0.055263070 ubox
2 16 0.012931488 ubox
2 36 0.004058813 ubox
2 98 0.984488587 ubox
2 99 0.010785718 ubox
2 104 0.059976207 ubox
2 105 0.027928138 ubox
2 106 0.011329899 ubox
2 107 0.020952440 ubox
2 108 0.028249615 ubox
2 109 0.007322718 ubox
3 10 0.059764473 ubox
3 13 0.039007136 ubox
3 19 0.013175150 ubox
3 33 0.008092320 ubox
3 97 0.985118283 ubox
3 103 0.067851506 ubox
3 106 0.026127529 ubox
3 107 0.029909026 ubox
4 9 0.053035383 ubox
4 12 0.041898349 ubox
4 18 0.015336728 ubox
4 21 0.037679948 ubox
4 22 0.053266083 ubox
4 23 0.041562674 ubox
4 24 0.084315424 ubox
4 25 0.024019339 ubox
4 26 0.020896572 ubox
4 29 0.009910716 ubox
4 32 0.009166359 ubox
4 96 0.983054683 ubox
4 102 0.066190766 ubox
5 20 0.037768576 ubox
5 21 0.054224754 ubox
5 22 0.042617217 ubox
5 23 0.087358576 ubox
5 24 0.024767088 ubox
5 25 0.021344337 ubox
5 28 0.010209002 ubox
5 31 0.009168844 ubox
5 95 0.977856564 ubox
5 101 0.065391245 ubox
7 35 0.013392643 ubox
7 102 0.038707342 ubox
8 14 0.117732454 ubox
8 18 0.198618893 ubox
8 20 0.598222078 ubox
8 28 0.109966945 ubox
8 34 0.013881745 ubox
8 39 0.003509610 ubox
8 92 0.016038067 ubox
8 95 0.004097869 ubox
8 101 0.039091599 ubox
9 13 0.110240146 ubox
9 15 0.049493843 ubox
9 17 0.197422239 ubox
9 19 0.598822260 ubox
9 27 0.136337819 ubox
9 33 0.013866526 ubox
9 38 0.003648150 ubox
9 91 0.013818117 ubox
9 94 0.003418278 ubox
9 97 0.025210588 ubox
9 100 0.038700322 ubox
10 14 0.054609803 ubox
10 18 0.596953609 ubox
10 26 0.143390412 ubox
10 32 0.013732519 ubox
10 92 0.003207193 ubox
10 96 0.025654584 ubox
12 19 0.228752739 ubox
12 30 0.009005387 ubox
12 90 0.011167985 ubox
12 93 0.007737295 ubox
12 97 0.036883574 ubox
12 103 0.004197451 ubox
13 18 0.227440203 ubox
13 20 0.702347856 ubox
13 29 0.008566915 ubox
13 31 0.005796937 ubox
13 34 0.012645808 ubox
13 89 0.011300002 ubox
13 92 0.007851024 ubox
13 95 0.015293133 ubox
13 96 0.034332160 ubox
13 101 0.004868034 ubox
13 102 0.003880873 ubox
14 19 0.702729983 ubox
14 30 0.005842215 ubox
14 33 0.012646571 ubox
14 88 0.010794140 ubox
14 91 0.007829404 ubox
14 94 0.018208896 ubox
14 100 0.004871866 ubox
14 103 0.018318329 ubox
15 102 0.017527156 ubox
16 35 0.025418310 ubox
16 102 0.011775088 ubox
17 31 0.016608771 ubox
17 34 0.026348250 ubox
17 95 0.013600415 ubox
17 101 0.012648397 ubox
18 30 0.016917932 ubox
18 33 0.026347475 ubox
18 90 0.011468876 ubox
18 93 0.046563624 ubox
18 94 0.009920695 ubox
18 100 0.012025162 ubox
18 103 0.022870132 ubox
19 29 0.016540746 ubox
19 31 0.016357243 ubox
19 32 0.020560084 ubox
19 89 0.011699170 ubox
19 92 0.048348855 ubox
19 95 0.007617344 ubox
19 101 0.076845104 ubox
19 102 0.010313235 ubox
20 30 0.023014807 ubox
20 88 0.011681286 ubox
20 91 0.048339148 ubox
20 94 0.008164428 ubox
20 100 0.077030548 ubox
20 107 0.015640803 ubox
21 87 0.011653609 ubox
21 90 0.048288190 ubox
21 93 0.008037753 ubox
21 94 0.004739582 ubox
21 99 0.076663114 ubox
21 100 0.022454151 ubox
21 106 0.015736913 ubox
21 107 0.028485833 ubox
22 88 0.034135864 ubox
22 91 0.005211598 ubox
22 93 0.004623006 ubox
22 94 0.004210587 ubox
22 99 0.023420482 ubox
22 100 0.036682378 ubox
22 106 0.028386059 ubox
22 107 0.068130580 ubox
23 85 0.005238527 ubox
23 87 0.034071988 ubox
23 88 0.034030729 ubox
23 90 0.005206563 ubox
23 91 0.006357994 ubox
23 93 0.003980743 ubox
23 94 0.007496806 ubox
23 99 0.037167629 ubox
23 100 0.032037722 ubox
23 106 0.068480113 ubox
23 107 0.041722050 ubox
24 84 0.005231637 ubox
24 85 0.004297183 ubox
24 87 0.034084562 ubox
24 90 0.006367602 ubox
24 93 0.007290201 ubox
24 94 0.008793631 ubox
24 99 0.032335284 ubox
24 100 0.031481189 ubox
24 106 0.041822164 ubox
24 107 0.032050987 ubox
25 84 0.003980199 ubox
25 85 0.049034251 ubox
25 88 0.009251127 ubox
25 93 0.008090262 ubox
25 94 0.052348226 ubox
25 99 0.031881492 ubox
25 100 0.052142723 ubox
25 106 0.032126517 ubox
25 107 0.018432234 ubox
26 84 0.049071556 ubox
26 87 0.009260146 ubox
26 93 0.052668130 ubox
26 99 0.052488853 ubox
26 103 0.090864320 ubox
26 106 0.018289424 ubox
27 102 0.090738567 ubox
28 82 0.049524893 ubox
28 85 0.009549269 ubox
28 91 0.053437789 ubox
28 94 0.977513819 ubox
28 100 0.095574161 ubox
28 107 0.007145306 ubox
29 81 0.049531879 ubox
29 84 0.009551218 ubox
29 90 0.053467437 ubox
29 93 0.986389702 ubox
29 97 0.025934200 ubox
29 99 0.095457321 ubox
29 103 0.008761158 ubox
29 106 0.007172354 ubox
30 80 0.049536192 ubox
30 83 0.009553397 ubox
30 89 0.053471434 ubox
30 92 0.986652404 ubox
30 95 0.131021286 ubox
30 96 0.019530157 ubox
30 101 0.012226586 ubox
31 79 0.049536890 ubox
31 82 0.009553528 ubox
31 88 0.053301145 ubox
31 91 0.986666268 ubox
31 94 0.140111389 ubox
31 100 0.012347308 ubox
32 78 0.049536039 ubox
32 81 0.009553339 ubox
32 87 0.053096863 ubox
32 90 0.986644279 ubox
32 93 0.140254506 ubox
32 99 0.012319507 ubox
33 77 0.049535787 ubox
33 80 0.009550166 ubox
33 86 0.052156394 ubox
33 89 0.985740351 ubox
33 92 0.140256837 ubox
33 95 0.006492716 ubox
33 101 0.006816403 ubox
34 76 0.049500871 ubox
34 79 0.009540246 ubox
34 85 0.041776608 ubox
34 88 0.771391503 ubox
34 91 0.139784780 ubox
34 94 0.006560175 ubox
34 100 0.006859773 ubox
35 75 0.048492981 ubox
35 78 0.009271642 ubox
35 84 0.023193891 ubox
35 87 0.382754925 ubox
35 90 0.133529572 ubox
35 93 0.006290018 ubox
35 99 0.006605889 ubox
36 44 0.004965797 ubox
36 68 0.004930635 ubox
37 43 0.005244628 ubox
37 67 0.004968111 ubox
39 65 0.004964089 ubox
39 73 0.003837408 ubox
39 74 0.046638436 ubox
39 76 0.004855119 ubox
39 85 0.004725808 ubox
39 88 0.009379821 ubox
40 60 0.011241079 ubox
40 64 0.005050837 ubox
40 72 0.003657508 ubox
40 73 0.046915588 ubox
40 75 0.007426032 ubox
40 76 0.003299323 ubox
40 84 0.004089603 ubox
40 85 0.169231217 ubox
40 87 0.042730071 ubox
40 88 0.630284310 ubox
40 91 0.019026378 ubox
40 94 0.030791087 ubox
41 56 0.005193311 ubox
41 59 0.011272003 ubox
41 72 0.044743159 ubox
41 75 0.003481572 ubox
41 84 0.172865296 ubox
41 87 0.916691415 ubox
41 90 0.023246869 ubox
41 93 0.031138364 ubox
42 55 0.006883771 ubox
42 58 0.011315021 ubox
42 62 0.005265287 ubox
42 70 0.031538114 ubox
42 83 0.173804598 ubox
42 86 0.982413957 ubox
42 89 0.024535975 ubox
42 92 0.031149666 ubox
43 54 0.006882355 ubox
43 57 0.011315561 ubox
43 60 0.015857985 ubox
43 61 0.004319969 ubox
43 69 0.031602582 ubox
43 72 0.018696600 ubox
43 82 0.173804255 ubox
43 85 0.982474445 ubox
43 88 0.024609577 ubox
43 91 0.031150576 ubox
44 56 0.011308721 ubox
44 59 0.016249932 ubox
44 71 0.030784499 ubox
44 81 0.173664337 ubox
44 84 0.981772085 ubox
44 87 0.024854046 ubox
44 90 0.031127196 ubox
45 52 0.006896994 ubox
45 55 0.011307588 ubox
45 58 0.017051110 ubox
45 70 0.032366974 ubox
45 80 0.173763847 ubox
45 83 0.982611636 ubox
45 86 0.025780750 ubox
45 89 0.031150748 ubox
46 51 0.006900736 ubox
46 54 0.011283306 ubox
46 57 0.017055869 ubox
46 64 0.019298609 ubox
46 69 0.032357650 ubox
46 79 0.173764941 ubox
46 82 0.982632654 ubox
46 85 0.025782684 ubox
46 88 0.031151399 ubox
47 56 0.017047578 ubox
47 63 0.019319413 ubox
47 78 0.173624584 ubox
47 81 0.981897294 ubox
47 84 0.025765134 ubox
47 87 0.031128024 ubox
48 55 0.017064918 ubox
48 62 0.019315416 ubox
48 77 0.173721350 ubox
48 80 0.982619340 ubox
48 83 0.025789760 ubox
48 86 0.031150744 ubox
49 54 0.017036522 ubox
49 60 0.010999741 ubox
49 61 0.015901742 ubox
49 64 0.041427040 ubox
49 75 0.005327719 ubox
49 76 0.173620636 ubox
49 79 0.982640206 ubox
49 82 0.025790586 ubox
49 85 0.031151377 ubox
50 59 0.015520697 ubox
50 60 0.011083195 ubox
50 63 0.041517338 ubox
50 74 0.007464441 ubox
50 75 0.158895408 ubox
50 78 0.981904760 ubox
50 81 0.025772299 ubox
50 84 0.031127948 ubox
51 58 0.019123766 ubox
51 62 0.041535377 ubox
51 77 0.982626588 ubox
51 80 0.025794553 ubox
51 83 0.031150494 ubox
52 57 0.019140465 ubox
52 61 0.041486224 ubox
52 73 0.171909670 ubox
52 76 0.982651276 ubox
52 79 0.025795526 ubox
52 82 0.031151307 ubox
53 59 0.003748555 ubox
53 60 0.041428367 ubox
53 72 0.172340159 ubox
53 75 0.982372882 ubox
53 78 0.025795407 ubox
53 81 0.031150753 ubox
54 58 0.003989693 ubox
54 70 0.023031004 ubox
54 77 0.025794084 ubox
54 80 0.031150259 ubox
55 69 0.023028880 ubox
55 76 0.025688782 ubox
55 79 0.031067242 ubox
56 67 0.007620242 ubox
56 68 0.018557330 ubox
57 66 0.007720859 ubox
57 67 0.012346653 ubox
57 70 0.997541624 ubox
57 77 0.030859602 ubox
58 69 0.997911896 ubox
58 76 0.030843297 ubox
59 67 0.056077252 ubox
59 68 0.995786971 ubox
60 66 0.057302755 ubox
60 67 0.996464171 ubox
61 66 0.990300795 ubox
61 70 0.036746865 ubox
62 69 0.036766794 ubox
63 68 0.033123069 ubox
66 73 0.003527196 ubox
67 72 0.003530845 ubox
92 103 0.011210096 ubox
93 102 0.012219951 ubox
94 101 0.015596995 ubox
95 100 0.017933795 ubox
95 107 0.046362836 ubox
96 103 0.011037638 ubox
96 106 0.046578635 ubox
97 102 0.008540231 ubox
101 107 0.137431243 ubox
101 110 0.258548164 ubox
102 106 0.124371708 ubox
102 109 0.263818065 ubox
1 99 0.9500000 lbox
2 98 0.9500000 lbox
3 97 0.9500000 lbox
4 96 0.9500000 lbox
5 95 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
28 94 0.9500000 lbox
29 93 0.9500000 lbox
30 92 0.9500000 lbox
31 91 0.9500000 lbox
32 90 0.9500000 lbox
33 89 0.9500000 lbox
34 88 0.9500000 lbox
41 87 0.9500000 lbox
42 86 0.9500000 lbox
43 85 0.9500000 lbox
44 84 0.9500000 lbox
45 83 0.9500000 lbox
46 82 0.9500000 lbox
47 81 0.9500000 lbox
48 80 0.9500000 lbox
49 79 0.9500000 lbox
50 78 0.9500000 lbox
51 77 0.9500000 lbox
52 76 0.9500000 lbox
53 75 0.9500000 lbox
57 70 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
60 67 0.9500000 lbox
61 66 0.9500000 lbox
showpage
end
%%EOF
