%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCCCCGCCCGUUCCUCCGAAAUUGGGUCGCAGUCCCACCCUCUCUCCUAGUACUUCCUGUUCUCGGCUAACCCUGGCGCUGGGCCGGGGGCUGGAGAGUGACCGUGGUCUGAGUGACCUGGGGCGGCUGCGUGGGCCGGGGUGGGCCUCAAAGCCGGGCACCAGACGGGAGGGGCGGCGCUCGGGCCGCGCGCUGCCCGCGCCGGGUCCUGGCGGGCGGCGAGGCUGGGGCUGACUCCUGCCUCAGG\
) } def
/len { sequence length } bind def

/coor [
[84.92809296 260.56005859]
[83.92900085 245.59336853]
[90.83610535 232.27825928]
[103.64678192 224.47529602]
[118.64675903 224.44680786]
[131.48530579 232.19929504]
[127.21001434 217.82147217]
[122.93472290 203.44364929]
[118.65943146 189.06582642]
[114.38414764 174.68798828]
[110.10885620 160.31016541]
[105.83356476 145.93234253]
[101.55828094 131.55451965]
[97.28298950 117.17668915]
[89.85453033 116.14325714]
[74.99760437 114.07640839]
[67.56914520 113.04297638]
[59.53174591 125.70790100]
[51.49434280 138.37281799]
[43.45693970 151.03773499]
[43.31119919 167.43623352]
[28.90555382 175.27264404]
[15.05929661 166.48554993]
[16.01626968 150.11434937]
[30.79202271 143.00033569]
[38.82942581 130.33541870]
[46.86682510 117.67049408]
[54.90422821 105.00557709]
[52.14329529 98.03224945]
[37.30416489 95.84131622]
[46.62142563 84.08560944]
[43.86049271 77.11228180]
[29.33174515 73.38193512]
[14.80299664 69.65158844]
[3.34039140 75.52896118]
[-8.67196560 72.14059448]
[-14.95606422 61.82303619]
[-29.43678856 57.91041565]
[-43.91751480 53.99779129]
[-58.39823914 50.08517075]
[-72.19116211 61.88647461]
[-90.15062714 63.01604080]
[-105.05019379 53.20919037]
[-111.00861359 36.56373215]
[-125.58309174 33.01625061]
[-140.15756226 29.46876335]
[-154.73204041 25.92127991]
[-169.30651855 22.37379456]
[-183.88099670 18.82630920]
[-192.93319702 19.83716393]
[-198.61575317 15.14159203]
[-213.14450073 11.41124344]
[-227.67324829 7.68089581]
[-215.07144165 15.81689167]
[-209.79069519 29.85660934]
[-213.90696716 44.28076553]
[-225.80206299 53.41895676]
[-240.79981995 53.67877960]
[-253.00460815 44.95769501]
[-267.99987793 44.58074188]
[-282.99511719 44.20378876]
[-297.13226318 52.51485062]
[-311.26303101 44.19298553]
[-310.85092163 27.79901695]
[-296.31985474 20.19765472]
[-282.61816406 29.20852852]
[-267.62292480 29.58547974]
[-252.62765503 29.96243095]
[-250.71687317 22.70991898]
[-265.22183228 18.88813400]
[-261.39981079 4.38323021]
[-246.89530945 8.20489693]
[-244.98452759 0.95238602]
[-258.21890259 -6.10817289]
[-271.45327759 -13.16873169]
[-284.68762207 -20.22929001]
[-297.92199707 -27.28985023]
[-311.15637207 -34.35041046]
[-324.39074707 -41.41096878]
[-340.09603882 -38.13628006]
[-352.35592651 -48.48395538]
[-351.76568604 -64.51615143]
[-338.77810669 -73.93432617]
[-323.35614014 -69.51367950]
[-317.33016968 -54.64533615]
[-304.09582520 -47.58477783]
[-290.86145020 -40.52421951]
[-277.62707520 -33.46366119]
[-264.39270020 -26.40310097]
[-251.15834045 -19.34254074]
[-237.92396545 -12.28198242]
[-223.94290161 -6.84785175]
[-209.41415405 -3.11750364]
[-194.88540649 0.61284477]
[-180.33351135 4.25183344]
[-165.75903320 7.79931831]
[-151.18455505 11.34680271]
[-136.61007690 14.89428806]
[-122.03560638 18.44177246]
[-107.46112823 21.98925781]
[-99.49362183 12.86772919]
[-88.34191895 7.96116304]
[-76.08994293 8.25327778]
[-65.05570984 13.75000095]
[-57.35280991 23.46679115]
[-54.48561478 35.60444641]
[-40.00489044 39.51706696]
[-25.52416611 43.42969131]
[-11.04344177 47.34231186]
[5.66350365 41.93650055]
[18.53334618 55.12283707]
[33.06209183 58.85318756]
[47.59083939 62.58353424]
[107.90054321 86.48036194]
[120.14563751 77.81677246]
[125.32674408 70.32541656]
[132.59947205 69.12239075]
[144.95246887 60.61335754]
[157.30545044 52.10432053]
[169.65844727 43.59528732]
[182.01142883 35.08625412]
[194.36442566 26.57721901]
[206.71740723 18.06818581]
[213.69317627 3.86785722]
[228.56362915 3.01998997]
[240.91661072 -5.48904419]
[253.26960754 -13.99807835]
[265.56887817 -22.58456039]
[277.81396484 -31.24815178]
[284.61074829 -45.53501511]
[299.46936035 -46.56967926]
[311.71444702 -55.23326874]
[323.95953369 -63.89685822]
[336.20462036 -72.56044769]
[348.44970703 -81.22403717]
[360.64013672 -89.96440125]
[372.77539062 -98.78117371]
[384.91064453 -107.59795380]
[397.04589844 -116.41473389]
[403.66259766 -130.78587341]
[418.50704956 -132.00717163]
[430.64230347 -140.82395935]
[442.77755737 -149.64073181]
[454.91281128 -158.45750427]
[467.04806519 -167.27429199]
[474.15994263 -184.27233887]
[491.68365479 -185.39637756]
[503.70718384 -194.36495972]
[515.73065186 -203.33352661]
[527.75421143 -212.30210876]
[539.77770996 -221.27067566]
[539.16571045 -233.11311340]
[544.28302002 -243.67749023]
[553.75964355 -250.39990234]
[565.18383789 -251.71090698]
[575.71533203 -247.40065002]
[587.96044922 -256.06423950]
[600.20550537 -264.72784424]
[599.41571045 -280.13497925]
[607.10076904 -293.51190186]
[620.80853271 -300.59014893]
[636.16479492 -299.11102295]
[648.26953125 -289.54650879]
[653.26007080 -274.94863892]
[649.54400635 -259.97552490]
[638.30706787 -249.40501404]
[623.13500977 -246.61015320]
[608.86907959 -252.48274231]
[596.62402344 -243.81915283]
[584.37890625 -235.15556335]
[582.36071777 -216.94265747]
[567.39843750 -205.81846619]
[548.74627686 -209.24717712]
[536.72277832 -200.27859497]
[524.69927979 -191.31002808]
[512.67572021 -182.34144592]
[500.65225220 -173.37287903]
[498.60757446 -161.46652222]
[488.68612671 -153.89405823]
[475.86483765 -155.13903809]
[463.72958374 -146.32225037]
[451.59432983 -137.50547791]
[439.45907593 -128.68870544]
[427.32382202 -119.87191772]
[421.57513428 -106.13140869]
[405.86267090 -104.27947998]
[393.72741699 -95.46269989]
[381.59216309 -86.64591980]
[369.45690918 -77.82913971]
[365.90194702 -71.37142181]
[357.11331177 -68.97895050]
[344.86822510 -60.31536102]
[332.62313843 -51.65177155]
[320.37805176 -42.98818207]
[308.13296509 -34.32458878]
[302.21203613 -20.65740395]
[286.47756958 -19.00306129]
[274.23248291 -10.33947182]
[270.59664917 -3.92693257]
[261.77862549 -1.64508951]
[249.42564392 6.86394453]
[237.07266235 15.37297916]
[230.98046875 28.96468353]
[215.22644043 30.42117500]
[202.87345886 38.93021011]
[190.52046204 47.43924332]
[178.16748047 55.94827652]
[165.81448364 64.45731354]
[153.46150208 72.96634674]
[141.10850525 81.47537994]
[128.80921936 90.06185913]
[116.56414032 98.72544861]
[111.66082001 112.90139771]
[115.93610382 127.27922821]
[120.21139526 141.65705872]
[124.48668671 156.03488159]
[128.76197815 170.41270447]
[133.03726196 184.79052734]
[137.31254578 199.16836548]
[141.58784485 213.54618835]
[145.86312866 227.92401123]
[154.45422363 236.81112671]
[152.84989929 247.71990967]
[158.54658508 261.59606934]
[164.24327087 275.47222900]
[169.93995667 289.34838867]
[175.63664246 303.22454834]
[188.03526306 313.05230713]
[185.71121216 327.76446533]
[191.40789795 341.64062500]
[197.10458374 355.51678467]
[202.80126953 369.39294434]
[216.10383606 378.98324585]
[214.18069458 395.26922607]
[199.01022339 401.49728394]
[186.19848633 391.26052856]
[188.92510986 375.08963013]
[183.22842407 361.21347046]
[177.53173828 347.33731079]
[171.83505249 333.46115112]
[159.84390259 324.62591553]
[161.76048279 308.92123413]
[156.06379700 295.04507446]
[150.36711121 281.16891479]
[144.67042542 267.29275513]
[138.97373962 253.41659546]
[133.84416199 267.51223755]
[122.14855194 276.90438843]
[107.27788544 278.86993408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 221]
[7 220]
[8 219]
[9 218]
[10 217]
[11 216]
[12 215]
[13 214]
[14 213]
[17 28]
[18 27]
[19 26]
[20 25]
[32 113]
[33 112]
[34 111]
[37 109]
[38 108]
[39 107]
[40 106]
[44 100]
[45 99]
[46 98]
[47 97]
[48 96]
[49 95]
[51 94]
[52 93]
[53 92]
[59 68]
[60 67]
[61 66]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[114 212]
[115 211]
[117 210]
[118 209]
[119 208]
[120 207]
[121 206]
[122 205]
[123 204]
[125 202]
[126 201]
[127 200]
[128 198]
[129 197]
[131 195]
[132 194]
[133 193]
[134 192]
[135 191]
[136 189]
[137 188]
[138 187]
[139 186]
[141 184]
[142 183]
[143 182]
[144 181]
[145 180]
[147 177]
[148 176]
[149 175]
[150 174]
[151 173]
[156 170]
[157 169]
[158 168]
[223 246]
[224 245]
[225 244]
[226 243]
[227 242]
[229 240]
[230 239]
[231 238]
[232 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
