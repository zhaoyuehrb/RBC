%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACGAAAGCACUCCGUGCUGGAAGUAGGAGGAGAGUCAGGACUCCCAGGACAGAGAGUGCACAAACUACCCAGCACAGCCCCCUCCGCCCCCUCUGGAGGCUGAAGAGGGAUUCCAGCCCCUGCCACCCACAGACACGGGCUGACUGGGGUGUCUGCCCCCCUUGGGGGGGGGCAGCACAGGGCCUCAGGCCUGGGUGCCACCUGGCACCUAGAAG\
) } def
/len { sequence length } bind def

/coor [
[76.83303070 208.26535034]
[62.35474014 212.18696594]
[48.06245804 207.63386536]
[38.52052307 196.06011963]
[36.77621841 181.16189575]
[43.38660431 167.69702148]
[56.24141693 159.96539307]
[63.86130524 147.04496765]
[71.48118591 134.12454224]
[64.33508301 131.84788513]
[51.45362473 139.53344727]
[38.57216644 147.21902466]
[25.69070435 154.90460205]
[12.80924606 162.59016418]
[-0.07221358 170.27574158]
[-9.10265064 188.30265808]
[-28.43361282 187.72543335]
[-41.08930206 195.77737427]
[-48.57933044 209.71328735]
[-63.47083664 210.01718140]
[-76.12651825 218.06910706]
[-88.78221130 226.12103271]
[-101.43789673 234.17297363]
[-108.92792511 248.10890198]
[-123.81942749 248.41278076]
[-136.47511292 256.46472168]
[-149.13079834 264.51663208]
[-152.61613464 281.66223145]
[-167.13899231 290.79986572]
[-183.44874573 286.68640137]
[-195.98764038 294.91906738]
[-198.95005798 310.44320679]
[-212.06881714 319.25646973]
[-227.56079102 316.13009644]
[-236.23486328 302.91888428]
[-232.94487000 287.46084595]
[-219.64268494 278.92691040]
[-204.22027588 282.38018799]
[-191.68139648 274.14752197]
[-190.85775757 261.29208374]
[-182.65927124 251.10505676]
[-169.90325928 247.44430542]
[-157.18273926 251.86096191]
[-144.52705383 243.80902100]
[-131.87136841 235.75709534]
[-125.28655243 222.39709473]
[-109.48983002 221.51728821]
[-96.83413696 213.46534729]
[-84.17845154 205.41342163]
[-71.52276611 197.36149597]
[-64.93795776 184.00149536]
[-49.14123154 183.12168884]
[-36.48554611 175.06974792]
[-35.17606735 164.94305420]
[-28.36811256 157.04071045]
[-18.12451744 154.12675476]
[-7.75778484 157.39428711]
[5.12367439 149.70870972]
[18.00513458 142.02313232]
[30.88659286 134.33757019]
[43.76805115 126.65199280]
[56.64951324 118.96642303]
[53.69382477 107.01482391]
[53.93800735 94.83186340]
[57.29992676 83.25080872]
[63.48644638 73.04681396]
[72.01776886 64.88507080]
[82.26413727 59.27752686]
[93.49203491 56.55104446]
[104.91661835 56.82889557]
[115.75652313 60.02664566]
[116.40185547 45.04053116]
[117.04718781 30.05442047]
[117.69252777 15.06830978]
[118.33786011 0.08219785]
[110.87543488 -1.99271953]
[103.94970703 -6.21876955]
[98.18737793 -12.44225502]
[94.16665649 -20.32641792]
[92.36399078 -29.36774826]
[93.10646057 -38.92765808]
[96.53411865 -48.27759171]
[102.57616425 -56.65432739]
[97.51332092 -70.77408600]
[92.45047760 -84.89384460]
[87.38763428 -99.01361084]
[82.32479095 -113.13336945]
[65.16569519 -125.97630310]
[69.73082733 -146.10719299]
[64.06520844 -159.99606323]
[58.39959335 -173.88493347]
[52.63449860 -187.73281860]
[46.77023315 -201.53898621]
[33.35253525 -210.96752930]
[35.07835388 -227.27560425]
[50.17231750 -233.68687439]
[63.10704422 -223.60597229]
[60.57640457 -207.40325928]
[66.44067383 -193.59707642]
[71.94555664 -188.67247009]
[72.28845978 -179.55055237]
[77.95408630 -165.66168213]
[83.61970520 -151.77281189]
[92.24566650 -149.71305847]
[99.06267548 -143.82781982]
[102.46147919 -135.33952332]
[101.56366730 -126.10206604]
[96.44454956 -118.19621277]
[101.50739288 -104.07645416]
[106.57023621 -89.95668793]
[111.63307953 -75.83692932]
[116.69592285 -61.71717072]
[124.12638855 -60.69823837]
[126.16449738 -75.55912781]
[141.02536011 -73.52077484]
[138.98731995 -58.66037369]
[146.41777039 -57.64144135]
[155.09471130 -69.87707520]
[163.77165222 -82.11271667]
[172.44857788 -94.34835052]
[181.12551880 -106.58398438]
[189.80245972 -118.81961823]
[198.12481689 -131.29913330]
[206.08576965 -144.01225281]
[214.04672241 -156.72535706]
[209.05686951 -171.54545593]
[214.80868530 -186.08679199]
[228.58636475 -193.48339844]
[243.88449097 -190.24282837]
[253.47975159 -177.89515686]
[252.84158325 -162.27059937]
[242.27128601 -150.74659729]
[226.75984192 -148.76440430]
[218.79888916 -136.05130005]
[210.83793640 -123.33818054]
[211.32948303 -120.58409882]
[210.76301575 -117.46987915]
[208.99609375 -114.39633942]
[206.03347778 -111.80835724]
[202.03808594 -110.14268494]
[193.36116028 -97.90705109]
[184.68421936 -85.67141724]
[176.00727844 -73.43577576]
[167.33035278 -61.20014191]
[158.65341187 -48.96450424]
[158.20225525 -14.56972408]
[133.32397461 0.72753137]
[132.67863464 15.71364307]
[132.03330994 30.69975471]
[131.38796997 45.68586731]
[130.74263000 60.67197800]
[140.76359558 71.83353424]
[155.73234558 72.80116272]
[170.70111084 73.76879120]
[179.46073914 71.20059967]
[185.87716675 74.85917664]
[200.83050537 76.04142761]
[215.78384399 77.22367859]
[230.73716736 78.40592194]
[245.69050598 79.58817291]
[260.64385986 80.77042389]
[275.59719849 81.95267487]
[290.55050659 83.13491821]
[305.50384521 84.31716919]
[320.45718384 85.49942017]
[336.72360229 80.72027588]
[345.81896973 95.02799225]
[334.58825684 107.72867584]
[319.27493286 100.45275879]
[304.32162476 99.27050781]
[289.36828613 98.08825684]
[274.41494751 96.90600586]
[259.46160889 95.72376251]
[244.50825500 94.54151154]
[229.55493164 93.35926056]
[214.60159302 92.17700958]
[199.64825439 90.99476624]
[184.69491577 89.81251526]
[169.73347473 88.73754883]
[154.76472473 87.76992035]
[139.79595947 86.80229187]
[136.96315002 93.74672699]
[131.29753113 107.63560486]
[128.46472168 114.58003998]
[139.83930969 124.35852051]
[151.21389771 134.13700867]
[162.58848572 143.91549683]
[178.54100037 149.65603638]
[177.44088745 166.57424927]
[160.87930298 170.20056152]
[152.80999756 155.29008484]
[141.43542480 145.51159668]
[130.06083679 135.73310852]
[118.68624115 125.95462799]
[106.64013672 134.89282227]
[112.70184326 148.61344910]
[118.76354980 162.33407593]
[124.82526398 176.05470276]
[130.88697815 189.77532959]
[136.94868469 203.49595642]
[143.01039124 217.21659851]
[149.07209778 230.93722534]
[162.62367249 240.17231750]
[161.13195801 256.50347900]
[146.13151550 263.13061523]
[133.05351257 253.23628235]
[135.35147095 236.99893188]
[129.28976440 223.27830505]
[123.22805023 209.55767822]
[117.16634369 195.83703613]
[111.10462952 182.11640930]
[105.04292297 168.39578247]
[98.98121643 154.67515564]
[92.91950226 140.95452881]
[85.77339935 138.67787170]
[84.51502991 153.62498474]
[83.25666046 168.57211304]
[89.26988983 182.31405640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 62]
[11 61]
[12 60]
[13 59]
[14 58]
[15 57]
[17 53]
[18 52]
[20 50]
[21 49]
[22 48]
[23 47]
[25 45]
[26 44]
[27 43]
[30 39]
[31 38]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[89 103]
[90 102]
[91 101]
[92 99]
[93 98]
[117 145]
[118 144]
[119 143]
[120 142]
[121 141]
[122 140]
[123 135]
[124 134]
[125 133]
[152 181]
[153 180]
[154 179]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
[165 169]
[184 194]
[185 193]
[186 192]
[187 191]
[195 214]
[196 213]
[197 212]
[198 211]
[199 210]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
