%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (A1BG)
} def

/sequence { (\
GGGCCUCAUUGCUGCAGACGCUCACCCCAGACACUCACUGCACCGGAGUGAGCGCGACCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.053655867 ubox
1 10 0.015958216 ubox
1 13 0.070855458 ubox
1 23 0.058977723 ubox
1 27 0.009264899 ubox
1 28 0.017650890 ubox
1 59 0.478624479 ubox
1 62 0.017087868 ubox
2 6 0.034891521 ubox
2 9 0.017849583 ubox
2 10 0.007482277 ubox
2 12 0.068891870 ubox
2 13 0.707192713 ubox
2 22 0.059176529 ubox
2 26 0.009330132 ubox
2 27 0.017633794 ubox
2 58 0.475228099 ubox
2 59 0.119290387 ubox
2 61 0.011596505 ubox
2 62 0.008374159 ubox
3 9 0.008068459 ubox
3 12 0.785279411 ubox
3 15 0.190165292 ubox
3 21 0.059380589 ubox
3 25 0.009264357 ubox
3 26 0.017448233 ubox
3 53 0.026840975 ubox
3 55 0.403805236 ubox
3 58 0.117849202 ubox
3 61 0.006319508 ubox
4 11 0.784154452 ubox
4 14 0.189838646 ubox
4 20 0.059346192 ubox
4 52 0.019078753 ubox
4 54 0.405064982 ubox
5 17 0.206656441 ubox
5 52 0.404328331 ubox
6 16 0.206075116 ubox
6 18 0.083676834 ubox
6 51 0.404834556 ubox
6 57 0.043774861 ubox
7 14 0.208349744 ubox
7 17 0.087658517 ubox
7 50 0.404892469 ubox
7 56 0.045028387 ubox
8 13 0.181908891 ubox
8 49 0.403464820 ubox
8 61 0.010676757 ubox
9 17 0.040779057 ubox
9 18 0.034450845 ubox
9 46 0.085989197 ubox
9 47 0.036198256 ubox
9 48 0.388479041 ubox
9 57 0.114528933 ubox
9 60 0.009946125 ubox
10 16 0.063619292 ubox
10 17 0.037472254 ubox
10 24 0.009601050 ubox
10 42 0.007319035 ubox
10 45 0.198408639 ubox
10 46 0.036511041 ubox
10 47 0.328633289 ubox
10 54 0.005116389 ubox
10 56 0.119267806 ubox
10 60 0.035932986 ubox
11 15 0.065756866 ubox
11 19 0.006871474 ubox
11 21 0.015626872 ubox
11 23 0.010033318 ubox
11 41 0.008026099 ubox
11 44 0.259733915 ubox
11 53 0.005924769 ubox
11 55 0.122824331 ubox
11 59 0.039868623 ubox
12 20 0.015591228 ubox
12 30 0.003417699 ubox
12 40 0.008009077 ubox
12 46 0.118526820 ubox
12 48 0.003307776 ubox
12 52 0.005914489 ubox
12 54 0.113493298 ubox
13 29 0.003435903 ubox
13 37 0.003868147 ubox
13 42 0.387205088 ubox
13 45 0.085699693 ubox
13 51 0.005764785 ubox
13 54 0.009632729 ubox
13 56 0.107272456 ubox
13 60 0.149522561 ubox
14 19 0.026014609 ubox
14 21 0.017568406 ubox
14 28 0.003362800 ubox
14 36 0.004180258 ubox
14 41 0.403766837 ubox
14 44 0.027241817 ubox
14 53 0.043335954 ubox
14 55 0.180795065 ubox
14 59 0.219100569 ubox
15 20 0.017629589 ubox
15 40 0.404510921 ubox
15 52 0.043254516 ubox
15 54 0.165309645 ubox
16 35 0.009216982 ubox
16 39 0.403335867 ubox
17 23 0.005587986 ubox
17 34 0.011954079 ubox
17 36 0.068493449 ubox
17 38 0.396580971 ubox
17 62 0.048420081 ubox
18 22 0.005529571 ubox
18 35 0.083036205 ubox
18 61 0.048664795 ubox
19 50 0.043671665 ubox
19 54 0.872435661 ubox
19 56 0.018435692 ubox
20 41 0.011091334 ubox
20 49 0.043876828 ubox
20 53 0.910859454 ubox
20 55 0.013839523 ubox
21 30 0.101694068 ubox
21 40 0.011087690 ubox
21 48 0.043927584 ubox
21 52 0.910947300 ubox
21 54 0.012612297 ubox
22 29 0.096153949 ubox
22 31 0.297699511 ubox
22 47 0.043924009 ubox
22 51 0.910899992 ubox
23 30 0.304076524 ubox
23 46 0.043804073 ubox
23 50 0.911023296 ubox
24 49 0.910809066 ubox
25 46 0.013270250 ubox
25 48 0.910420261 ubox
26 45 0.015171934 ubox
26 46 0.813423989 ubox
27 45 0.812714878 ubox
27 46 0.408597673 ubox
28 40 0.749467542 ubox
28 45 0.406446043 ubox
29 35 0.032350168 ubox
29 39 0.753917714 ubox
30 34 0.032395045 ubox
30 36 0.052428675 ubox
30 38 0.751007000 ubox
31 35 0.051206666 ubox
32 40 0.339151576 ubox
32 50 0.009028139 ubox
33 39 0.314966624 ubox
33 49 0.010122683 ubox
34 48 0.010929972 ubox
34 52 0.063079823 ubox
35 47 0.011712386 ubox
35 51 0.063487408 ubox
36 45 0.003729865 ubox
36 46 0.011564640 ubox
36 50 0.063543849 ubox
37 49 0.063534519 ubox
38 46 0.007010532 ubox
38 48 0.063537982 ubox
39 45 0.007475853 ubox
39 47 0.063282490 ubox
40 44 0.012644532 ubox
56 62 0.070980830 ubox
57 61 0.062292987 ubox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
19 54 0.9500000 lbox
20 53 0.9500000 lbox
21 52 0.9500000 lbox
22 51 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
25 48 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
showpage
end
%%EOF
