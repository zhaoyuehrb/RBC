%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MTHFS)
} def

/sequence { (\
AGACCGAACCCGAGGGCGCCCAGGGCGCCGAGGGCGGGACUGGACUCGGCUUGGGCGUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.070286465 ubox
1 46 0.008968066 ubox
1 51 0.005777546 ubox
2 40 0.074199370 ubox
2 45 0.013062508 ubox
2 47 0.005518693 ubox
2 50 0.006663860 ubox
3 46 0.005272547 ubox
3 58 0.012824879 ubox
4 15 0.905192580 ubox
4 16 0.078927275 ubox
4 24 0.011137293 ubox
4 37 0.114976546 ubox
4 38 0.031937910 ubox
4 43 0.094787111 ubox
4 49 0.008978128 ubox
4 54 0.019092745 ubox
4 55 0.026476231 ubox
4 57 0.011194204 ubox
5 12 0.197472926 ubox
5 14 0.906706531 ubox
5 15 0.084095574 ubox
5 18 0.003804116 ubox
5 23 0.011150739 ubox
5 36 0.115235434 ubox
5 37 0.031607682 ubox
5 42 0.095183147 ubox
5 48 0.009017690 ubox
5 53 0.019135342 ubox
5 54 0.026597018 ubox
5 57 0.028680407 ubox
5 59 0.045537266 ubox
6 11 0.201923872 ubox
6 17 0.005914570 ubox
6 35 0.112847435 ubox
6 41 0.086990815 ubox
6 47 0.008996395 ubox
6 52 0.018430670 ubox
6 56 0.029281353 ubox
6 58 0.042056024 ubox
7 46 0.008803238 ubox
7 51 0.017441161 ubox
7 52 0.025438885 ubox
8 51 0.024483796 ubox
8 58 0.020591949 ubox
9 15 0.153106668 ubox
9 16 0.118474965 ubox
9 24 0.011458912 ubox
9 25 0.085939166 ubox
9 33 0.010825046 ubox
9 34 0.119779865 ubox
9 38 0.096255247 ubox
9 49 0.004185628 ubox
9 55 0.065765699 ubox
9 57 0.021162471 ubox
10 14 0.152309114 ubox
10 15 0.126661244 ubox
10 16 0.018614698 ubox
10 23 0.011357854 ubox
10 24 0.091971131 ubox
10 25 0.010666556 ubox
10 32 0.010713783 ubox
10 33 0.120380466 ubox
10 34 0.011080071 ubox
10 37 0.096400696 ubox
10 43 0.005279342 ubox
10 48 0.003300620 ubox
10 49 0.027888447 ubox
10 54 0.066007190 ubox
10 55 0.022335388 ubox
11 15 0.020871840 ubox
11 18 0.006158634 ubox
11 23 0.091995420 ubox
11 24 0.012074791 ubox
11 30 0.003360547 ubox
11 32 0.120330381 ubox
11 33 0.011141975 ubox
11 36 0.096399325 ubox
11 42 0.005277680 ubox
11 48 0.028024294 ubox
11 53 0.065995524 ubox
11 54 0.022353211 ubox
11 59 0.022766736 ubox
12 17 0.006216364 ubox
12 35 0.096236596 ubox
12 41 0.003515815 ubox
12 47 0.028075422 ubox
12 52 0.060403851 ubox
12 58 0.008670724 ubox
13 41 0.003657770 ubox
13 46 0.028041689 ubox
13 51 0.058653241 ubox
13 52 0.026298349 ubox
14 20 0.053747832 ubox
14 21 0.075242799 ubox
14 29 0.025864763 ubox
14 40 0.004229804 ubox
14 45 0.027924434 ubox
14 50 0.055406472 ubox
14 51 0.027593780 ubox
15 19 0.052932110 ubox
15 20 0.075068878 ubox
15 21 0.010098871 ubox
15 28 0.018336311 ubox
15 29 0.164489848 ubox
15 41 0.003254840 ubox
15 50 0.031170546 ubox
16 20 0.010038240 ubox
16 28 0.166027787 ubox
16 40 0.003294461 ubox
16 58 0.939386980 ubox
17 27 0.167260429 ubox
17 36 0.011318796 ubox
17 48 0.036955248 ubox
17 57 0.978823219 ubox
17 59 0.004979282 ubox
18 26 0.167415968 ubox
18 35 0.011423441 ubox
18 47 0.036915754 ubox
18 56 0.980360048 ubox
19 25 0.167421108 ubox
19 34 0.011425197 ubox
19 55 0.980377102 ubox
20 24 0.166203975 ubox
20 33 0.011424905 ubox
20 43 0.039910050 ubox
20 54 0.980375977 ubox
21 32 0.011411143 ubox
21 42 0.039984170 ubox
21 53 0.980339589 ubox
22 41 0.039996463 ubox
22 51 0.018797089 ubox
22 52 0.973214200 ubox
23 29 0.011205669 ubox
23 40 0.039961244 ubox
23 50 0.012365781 ubox
23 51 0.928018916 ubox
23 52 0.041923739 ubox
24 28 0.011027166 ubox
24 50 0.437098745 ubox
24 51 0.075818664 ubox
24 52 0.049222323 ubox
25 50 0.062575980 ubox
25 51 0.132500359 ubox
25 58 0.038426625 ubox
26 36 0.042847382 ubox
26 48 0.082046777 ubox
26 49 0.055426587 ubox
26 57 0.093654997 ubox
27 35 0.048460768 ubox
27 47 0.073914107 ubox
27 50 0.874651737 ubox
27 56 0.095422699 ubox
28 34 0.048522738 ubox
28 37 0.031567372 ubox
28 38 0.008528678 ubox
28 43 0.055492532 ubox
28 49 0.975072227 ubox
28 55 0.095436279 ubox
29 33 0.048170310 ubox
29 36 0.031643793 ubox
29 37 0.008398076 ubox
29 42 0.055462930 ubox
29 48 0.976796481 ubox
29 54 0.095435596 ubox
30 35 0.031227870 ubox
30 41 0.028769869 ubox
30 47 0.978072472 ubox
31 41 0.045936500 ubox
31 46 0.978083959 ubox
31 52 0.096767944 ubox
32 40 0.051928592 ubox
32 41 0.039576357 ubox
32 45 0.977739952 ubox
32 46 0.008168264 ubox
32 51 0.098505689 ubox
33 40 0.055480208 ubox
33 41 0.047553279 ubox
33 45 0.016612852 ubox
33 50 0.099372550 ubox
33 51 0.003634460 ubox
34 40 0.048079933 ubox
34 50 0.004577632 ubox
35 42 0.947920268 ubox
35 48 0.104313957 ubox
35 49 0.004025118 ubox
35 53 0.011943714 ubox
36 41 0.722726767 ubox
36 46 0.005012805 ubox
36 47 0.106582204 ubox
36 52 0.012072748 ubox
37 45 0.009313531 ubox
37 46 0.106282538 ubox
37 47 0.003610170 ubox
37 51 0.012366424 ubox
38 45 0.105845639 ubox
38 47 0.008230200 ubox
38 50 0.013280365 ubox
39 46 0.007742707 ubox
40 49 0.022638652 ubox
40 55 0.005073266 ubox
40 61 0.005578144 ubox
41 48 0.022735292 ubox
41 54 0.005099209 ubox
41 60 0.005583164 ubox
42 47 0.022685853 ubox
42 58 0.003894262 ubox
43 52 0.005034813 ubox
44 51 0.004681334 ubox
44 58 0.006985887 ubox
45 55 0.015759550 ubox
45 57 0.007104482 ubox
45 61 0.147927500 ubox
46 54 0.015824887 ubox
46 55 0.007065093 ubox
46 60 0.150547045 ubox
47 53 0.015889540 ubox
47 54 0.007716694 ubox
47 57 0.005990724 ubox
47 59 0.150849534 ubox
48 52 0.009807126 ubox
48 56 0.006277622 ubox
48 58 0.133101751 ubox
49 56 0.147761739 ubox
49 58 0.019072762 ubox
50 55 0.147471617 ubox
50 57 0.026743490 ubox
50 61 0.006453013 ubox
51 60 0.006650109 ubox
52 59 0.006554328 ubox
53 58 0.005218970 ubox
4 15 0.9500000 lbox
5 14 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
21 53 0.9500000 lbox
22 52 0.9500000 lbox
23 51 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
showpage
end
%%EOF
