%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAAGGAGGAGGCCGGGGGAAGGAGGAGACAGGAGGAGGAGGGACCACGGGGUGGAGGGGAGAUAGACCCAGCCCAGAGCUCUGAGUGGUUUCCUGUUGCCUGUCUCUAAACCCCUCCACAUUCCCGCGGUCCUUCAGACUGCCCGGAGAGCGCGCUCUGCCUGCCGCCUGCCUGCCUGCCACUGAGGGUUCCCAGCACC\
) } def
/len { sequence length } bind def

/coor [
[179.31869507 556.68829346]
[177.93467712 541.75225830]
[176.55064392 526.81628418]
[175.16662598 511.88024902]
[173.78259277 496.94424438]
[155.57632446 484.72070312]
[152.31587219 462.75656128]
[166.53506470 445.34414673]
[163.77882385 430.59954834]
[160.90911865 415.87661743]
[157.92614746 401.17620850]
[154.94317627 386.47579956]
[151.84710693 371.79879761]
[148.63810730 357.14608765]
[145.42910767 342.49334717]
[142.22010803 327.84063721]
[131.93916321 317.06326294]
[136.54501343 301.92733765]
[133.33601379 287.27462769]
[123.05506897 276.49725342]
[127.66091919 261.36132812]
[124.45192719 246.70860291]
[114.17097473 235.93124390]
[118.77682495 220.79530334]
[115.56783295 206.14257812]
[112.35883331 191.48985291]
[102.07788086 180.71250916]
[106.68373871 165.57656860]
[103.47473907 150.92384338]
[100.26574707 136.27111816]
[97.05674744 121.61839294]
[82.19010162 114.83652496]
[75.48406219 98.86308289]
[81.71675873 81.64879608]
[98.83795166 72.75804138]
[93.85263062 58.61072159]
[88.75852203 44.50221252]
[83.55593109 30.43334389]
[68.76245880 26.13689041]
[59.44440079 14.09417057]
[59.00939941 -0.94826132]
[67.41479492 -13.21558952]
[62.21220398 -27.28445816]
[57.00961304 -41.35332489]
[51.80702209 -55.42219543]
[46.60443115 -69.49106598]
[41.40184021 -83.55992889]
[36.19924927 -97.62879944]
[30.99666023 -111.69766998]
[18.95321274 -121.95758820]
[21.79589844 -136.57841492]
[16.59330750 -150.64727783]
[11.39071751 -164.71614075]
[6.18812704 -178.78501892]
[0.66196334 -192.72996521]
[-5.18482494 -206.54354858]
[-11.03161240 -220.35713196]
[-16.87840080 -234.17070007]
[-22.72518921 -247.98428345]
[-28.57197762 -261.79788208]
[-34.41876602 -275.61145020]
[-40.26555252 -289.42504883]
[-46.11234283 -303.23861694]
[-52.48648834 -316.81692505]
[-59.37854385 -330.13983154]
[-66.27059937 -343.46270752]
[-73.16265869 -356.78561401]
[-80.05471039 -370.10852051]
[-86.94676971 -383.43139648]
[-97.49182129 -386.12649536]
[-104.66284943 -394.01986694]
[-106.26880646 -404.34036255]
[-102.01763916 -413.63983154]
[-108.49614716 -427.16864014]
[-114.97465515 -440.69747925]
[-121.45316315 -454.22628784]
[-136.57995605 -457.13943481]
[-146.96942139 -468.27102661]
[-148.79051208 -483.20916748]
[-141.55285645 -496.19970703]
[-148.03137207 -509.72851562]
[-154.50987244 -523.25732422]
[-160.98838806 -536.78613281]
[-167.46688843 -550.31500244]
[-182.45420837 -555.33056641]
[-189.43040466 -569.51184082]
[-184.25665283 -584.44525146]
[-170.00242615 -591.27117920]
[-155.12451172 -585.93981934]
[-148.44972229 -571.61419678]
[-153.93807983 -556.79351807]
[-147.45956421 -543.26464844]
[-140.98106384 -529.73583984]
[-134.50254822 -516.20703125]
[-128.02404785 -502.67822266]
[-113.36589813 -500.17285156]
[-102.86957550 -489.38900757]
[-100.71058655 -474.31610107]
[-107.92434692 -460.70480347]
[-101.44583893 -447.17596436]
[-94.96733093 -433.64715576]
[-88.48882294 -420.11834717]
[-71.77972412 -410.39370728]
[-73.62387085 -390.32345581]
[-66.73181915 -377.00054932]
[-59.83975983 -363.67767334]
[-52.94770432 -350.35476685]
[-46.05564880 -337.03186035]
[-39.16358948 -323.70898438]
[-32.16964340 -336.97866821]
[-17.46471786 -339.93927002]
[-5.88054991 -330.41000366]
[-5.95010185 -315.41015625]
[-17.62214279 -305.98873901]
[-32.29875946 -309.08541870]
[-26.45197105 -295.27182007]
[-20.60518265 -281.45825195]
[-14.75839424 -267.64465332]
[-8.91160583 -253.83108521]
[-3.06481814 -240.01750183]
[2.78197002 -226.20391846]
[8.62875843 -212.39033508]
[14.47554588 -198.57675171]
[17.59423447 -196.92047119]
[20.06363297 -193.66847229]
[21.14120102 -189.14334106]
[20.25699425 -183.98760986]
[25.45958519 -169.91873169]
[30.66217613 -155.84986877]
[35.86476517 -141.78100586]
[47.53609085 -132.52737427]
[45.06552887 -116.90026093]
[50.26811981 -102.83139038]
[55.47071075 -88.76251984]
[60.67329788 -74.69365692]
[65.87589264 -60.62478638]
[71.07848358 -46.55591583]
[76.28106689 -32.48704910]
[81.48365784 -18.41818047]
[95.84810638 -14.57101345]
[105.30464935 -2.86469769]
[106.06367493 12.34310532]
[97.62479401 25.23075294]
[102.82738495 39.29962158]
[108.09878540 44.48579407]
[107.99994659 53.62540054]
[112.98526764 67.77272034]
[125.36022949 76.24976349]
[140.35311890 75.78783417]
[152.34587097 65.13169861]
[168.12936401 68.00588989]
[175.59584045 82.20558167]
[169.01766968 96.83798218]
[153.44105530 100.67836761]
[140.81503296 90.78072357]
[125.82215118 91.24264526]
[125.27708435 102.96540833]
[120.01744843 112.56479645]
[111.70947266 118.40940094]
[114.91847229 133.06211853]
[118.12746429 147.71484375]
[121.33646393 162.36756897]
[131.84693909 174.19297791]
[127.01155853 188.28086853]
[130.22055054 202.93359375]
[133.42955017 217.58631897]
[143.94003296 229.41172791]
[139.10464478 243.49960327]
[142.31364441 258.15231323]
[152.82412720 269.97775269]
[147.98873901 284.06561279]
[151.19773865 298.71835327]
[161.70822144 310.54376221]
[156.87283325 324.63162231]
[160.08183289 339.28436279]
[163.29083252 353.93707275]
[166.49983215 368.58981323]
[171.39524841 376.30841064]
[169.64358521 383.49282837]
[172.62655640 398.19323730]
[175.60952759 412.89364624]
[180.38551331 420.68673706]
[178.52342224 427.84329224]
[181.27966309 442.58789062]
[189.31234741 444.63070679]
[196.36274719 448.92382812]
[201.82002258 455.07208252]
[205.21817017 462.52069092]
[206.27587891 470.60513306]
[204.91957092 478.61068726]
[201.28829956 485.83529663]
[195.71966553 491.65136719]
[188.71861267 495.56021118]
[190.10263062 510.49621582]
[191.48666382 525.43225098]
[192.87068176 540.36822510]
[194.25471497 555.30426025]
[207.21229553 564.05841064]
[211.46160889 579.10754395]
[204.99624634 593.34600830]
[190.86895752 600.05078125]
[175.75021362 596.05603027]
[166.77862549 583.24804688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[8 184]
[9 183]
[10 181]
[11 180]
[12 179]
[13 177]
[14 176]
[15 175]
[16 174]
[18 172]
[19 171]
[21 169]
[22 168]
[24 166]
[25 165]
[26 164]
[28 162]
[29 161]
[30 160]
[31 159]
[35 147]
[36 146]
[37 144]
[38 143]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[51 130]
[52 129]
[53 128]
[54 127]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[73 102]
[74 101]
[75 100]
[76 99]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
