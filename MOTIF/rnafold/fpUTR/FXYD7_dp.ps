%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FXYD7)
} def

/sequence { (\
CCCCACAUCGGUCCGUCCUGCUUCCAGCUGCUGCAGCGCGCCUUCGCCGCCAAAGCAUCCAGCAGCCCCCUGCUCCGGCCCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.019493295 ubox
1 78 0.007191572 ubox
2 10 0.019907952 ubox
2 11 0.043833329 ubox
2 77 0.007262640 ubox
2 78 0.007897031 ubox
3 10 0.044310352 ubox
3 11 0.047587960 ubox
3 77 0.007918541 ubox
3 78 0.010853614 ubox
4 10 0.048238557 ubox
4 77 0.010929975 ubox
5 12 0.009551206 ubox
5 16 0.004211990 ubox
6 11 0.010186545 ubox
6 15 0.004502886 ubox
6 20 0.003487041 ubox
7 19 0.003295741 ubox
8 78 0.034096661 ubox
9 20 0.004917756 ubox
9 49 0.005189764 ubox
9 72 0.003609070 ubox
9 77 0.046811080 ubox
10 18 0.021901248 ubox
10 19 0.005313438 ubox
10 25 0.006249127 ubox
10 42 0.013911592 ubox
10 48 0.006191597 ubox
10 67 0.003784704 ubox
10 69 0.003427725 ubox
10 70 0.004851230 ubox
10 71 0.003723423 ubox
10 76 0.047025469 ubox
10 80 0.622762418 ubox
10 81 0.774228356 ubox
11 17 0.021926298 ubox
11 18 0.005368386 ubox
11 24 0.006247057 ubox
11 41 0.013914904 ubox
11 47 0.006192988 ubox
11 66 0.003794343 ubox
11 68 0.003433222 ubox
11 69 0.004847939 ubox
11 70 0.003729260 ubox
11 75 0.046829261 ubox
11 79 0.625228983 ubox
11 80 0.773244352 ubox
11 84 0.008598948 ubox
12 40 0.011529313 ubox
12 46 0.006083284 ubox
12 78 0.150871122 ubox
12 83 0.008773182 ubox
13 77 0.133519988 ubox
13 78 0.984426134 ubox
14 20 0.003660023 ubox
14 38 0.010260223 ubox
14 40 0.012654008 ubox
14 72 0.030314277 ubox
14 77 0.987567538 ubox
15 19 0.003169838 ubox
15 21 0.011303046 ubox
15 28 0.011268065 ubox
15 31 0.003369416 ubox
15 37 0.010173863 ubox
15 39 0.014420455 ubox
15 66 0.004586684 ubox
15 71 0.027566261 ubox
15 73 0.010538110 ubox
15 76 0.982148665 ubox
15 79 0.047965852 ubox
15 84 0.003694684 ubox
16 20 0.010675925 ubox
16 27 0.007977716 ubox
16 30 0.003357643 ubox
16 36 0.006739217 ubox
16 38 0.014265248 ubox
16 72 0.010459455 ubox
16 78 0.044479653 ubox
16 83 0.003636136 ubox
17 77 0.043782028 ubox
17 78 0.023605890 ubox
18 27 0.135628241 ubox
18 36 0.018529053 ubox
18 65 0.046565799 ubox
18 77 0.023836553 ubox
18 83 0.006614900 ubox
19 26 0.137736639 ubox
19 35 0.020152634 ubox
19 57 0.028192807 ubox
19 64 0.047468683 ubox
19 72 0.008483440 ubox
19 82 0.006724229 ubox
20 25 0.136518454 ubox
20 28 0.284208932 ubox
20 31 0.014244712 ubox
20 34 0.020380195 ubox
20 37 0.005731766 ubox
20 56 0.031291348 ubox
20 63 0.048123628 ubox
20 66 0.017002428 ubox
20 71 0.008065672 ubox
20 73 0.941014505 ubox
20 79 0.004846882 ubox
20 81 0.006479167 ubox
20 84 0.010284481 ubox
21 27 0.284619977 ubox
21 30 0.014274344 ubox
21 33 0.020347224 ubox
21 36 0.005736534 ubox
21 55 0.031295646 ubox
21 62 0.048118712 ubox
21 65 0.017027133 ubox
21 72 0.940934566 ubox
21 78 0.004892490 ubox
21 83 0.010420068 ubox
22 26 0.256421949 ubox
22 35 0.005561493 ubox
22 54 0.030916405 ubox
22 61 0.046344467 ubox
22 64 0.016705489 ubox
22 77 0.004604805 ubox
22 82 0.010050681 ubox
23 53 0.027955320 ubox
24 78 0.008265311 ubox
25 33 0.006857515 ubox
25 72 0.007295044 ubox
25 77 0.008267299 ubox
26 32 0.007174937 ubox
26 71 0.009950336 ubox
27 31 0.007030155 ubox
27 34 0.024397594 ubox
27 37 0.019391711 ubox
27 50 0.007263638 ubox
27 56 0.042973254 ubox
27 63 0.020100001 ubox
27 66 0.942231699 ubox
27 70 0.005472607 ubox
27 79 0.005611058 ubox
27 84 0.003447164 ubox
28 33 0.024416010 ubox
28 36 0.019437865 ubox
28 49 0.007267598 ubox
28 55 0.043080050 ubox
28 62 0.020148296 ubox
28 65 0.943611411 ubox
28 78 0.005612319 ubox
28 83 0.003488237 ubox
29 35 0.019455286 ubox
29 52 0.004608244 ubox
29 54 0.042796645 ubox
29 57 0.292648191 ubox
29 61 0.019082329 ubox
29 64 0.943373591 ubox
29 77 0.004837601 ubox
30 34 0.019153041 ubox
30 37 0.003630961 ubox
30 47 0.006898417 ubox
30 51 0.004797685 ubox
30 56 0.324751382 ubox
30 60 0.017936658 ubox
30 63 0.943568584 ubox
30 66 0.005680853 ubox
30 76 0.003167027 ubox
31 36 0.003623172 ubox
31 46 0.006875298 ubox
31 55 0.324852577 ubox
31 62 0.943529670 ubox
31 65 0.005694520 ubox
32 40 0.003304915 ubox
32 52 0.025066055 ubox
32 54 0.322703255 ubox
32 57 0.264135744 ubox
32 61 0.904647726 ubox
32 64 0.005695736 ubox
33 39 0.005584728 ubox
33 41 0.005841794 ubox
33 50 0.105320889 ubox
33 51 0.030073028 ubox
33 56 0.374758702 ubox
33 60 0.857754688 ubox
33 63 0.005697145 ubox
34 38 0.005748253 ubox
34 40 0.006139852 ubox
34 49 0.114830757 ubox
34 55 0.398590769 ubox
34 62 0.005689522 ubox
35 43 0.003720775 ubox
36 42 0.003862593 ubox
36 47 0.144588536 ubox
36 50 0.765150312 ubox
36 56 0.601399189 ubox
37 46 0.144748421 ubox
37 49 0.766349644 ubox
37 55 0.601990609 ubox
38 45 0.138796321 ubox
38 47 0.276790295 ubox
38 48 0.734137964 ubox
38 50 0.569045816 ubox
38 56 0.087802132 ubox
39 46 0.354217801 ubox
39 49 0.569259560 ubox
39 55 0.087848240 ubox
40 45 0.331454427 ubox
40 47 0.787639884 ubox
40 48 0.439946842 ubox
40 50 0.162711216 ubox
40 56 0.013352711 ubox
41 46 0.862729962 ubox
41 49 0.162729536 ubox
41 55 0.011809522 ubox
42 55 0.007971419 ubox
42 83 0.003343450 ubox
43 53 0.007686396 ubox
43 54 0.011169588 ubox
43 82 0.003575930 ubox
44 52 0.007768754 ubox
44 53 0.011024272 ubox
46 56 0.005874011 ubox
46 79 0.013938884 ubox
46 84 0.004660041 ubox
47 55 0.005880910 ubox
47 78 0.013968992 ubox
47 83 0.004696338 ubox
48 77 0.013964936 ubox
49 56 0.121048257 ubox
49 76 0.012100803 ubox
49 79 0.006592865 ubox
50 55 0.120895377 ubox
50 78 0.006617406 ubox
51 77 0.006611415 ubox
54 74 0.006457698 ubox
55 73 0.006579628 ubox
55 79 0.006629950 ubox
56 72 0.006569773 ubox
56 78 0.006637157 ubox
57 71 0.005978161 ubox
59 77 0.005133355 ubox
59 78 0.014910788 ubox
60 72 0.004106297 ubox
60 77 0.015245778 ubox
61 71 0.004186728 ubox
61 74 0.305215427 ubox
62 70 0.004205135 ubox
62 73 0.326258870 ubox
63 72 0.326355705 ubox
64 71 0.325543421 ubox
64 74 0.015126825 ubox
65 70 0.320360448 ubox
65 73 0.017471851 ubox
65 79 0.004952689 ubox
66 72 0.017685609 ubox
66 78 0.005103969 ubox
67 77 0.005080392 ubox
67 78 0.003620443 ubox
68 77 0.003694797 ubox
69 78 0.005115251 ubox
70 77 0.005179746 ubox
70 83 0.008194265 ubox
71 82 0.007990696 ubox
72 79 0.018598048 ubox
72 81 0.005813524 ubox
72 84 0.003623888 ubox
73 78 0.018882438 ubox
73 83 0.003671290 ubox
74 82 0.003545623 ubox
78 84 0.007515050 ubox
79 83 0.007913891 ubox
10 81 0.9500000 lbox
11 80 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
15 76 0.9500000 lbox
20 73 0.9500000 lbox
21 72 0.9500000 lbox
27 66 0.9500000 lbox
28 65 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
31 62 0.9500000 lbox
32 61 0.9500000 lbox
33 60 0.9500000 lbox
36 50 0.9500000 lbox
37 49 0.9500000 lbox
38 48 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
