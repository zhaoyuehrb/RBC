%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:50 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EIF3B)
} def

/sequence { (\
UAGCCGUCGCGGCGCGCGGUGCGGCCUGGGAGAGUCGGAAGCGCGGCGGCCGCGGAGCCCUGCGAGUAGGCAGCGUUGGGCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 78 0.005486147 ubox
2 77 0.005939740 ubox
3 13 0.006085722 ubox
3 20 0.012303670 ubox
3 50 0.010793162 ubox
3 53 0.032827041 ubox
3 58 0.025389849 ubox
3 60 0.003255426 ubox
3 67 0.003465379 ubox
3 71 0.007452404 ubox
3 76 0.006011723 ubox
3 81 0.816492432 ubox
4 9 0.003218883 ubox
4 12 0.006116586 ubox
4 19 0.012974129 ubox
4 49 0.010819894 ubox
4 52 0.032828481 ubox
4 55 0.051028639 ubox
4 57 0.025942467 ubox
4 66 0.003557009 ubox
4 70 0.007459977 ubox
4 75 0.005723400 ubox
4 79 0.080321976 ubox
4 80 0.817562617 ubox
5 11 0.006117339 ubox
5 18 0.012979648 ubox
5 48 0.010819362 ubox
5 54 0.047701178 ubox
5 64 0.004132246 ubox
5 69 0.007440650 ubox
5 75 0.003508581 ubox
5 78 0.088635199 ubox
5 79 0.815983932 ubox
6 10 0.005724576 ubox
6 17 0.012972944 ubox
6 47 0.010815494 ubox
6 50 0.032950577 ubox
6 53 0.027708067 ubox
6 58 0.025649841 ubox
6 63 0.004139091 ubox
6 74 0.005578052 ubox
6 77 0.036444017 ubox
6 81 0.010881583 ubox
7 16 0.003245713 ubox
7 46 0.010810623 ubox
7 49 0.032970603 ubox
7 52 0.020843548 ubox
7 55 0.744172223 ubox
7 56 0.061365297 ubox
7 57 0.022333246 ubox
7 62 0.003750563 ubox
7 65 0.006550823 ubox
7 80 0.010533382 ubox
8 16 0.012558307 ubox
8 45 0.010697404 ubox
8 48 0.032950759 ubox
8 52 0.004673018 ubox
8 54 0.966622293 ubox
8 55 0.051105443 ubox
8 64 0.006791824 ubox
8 75 0.004062154 ubox
8 78 0.006994086 ubox
8 79 0.008730990 ubox
9 15 0.012846320 ubox
9 44 0.010611886 ubox
9 47 0.032936440 ubox
9 50 0.016368543 ubox
9 51 0.003483036 ubox
9 53 0.998774463 ubox
9 63 0.006789530 ubox
10 14 0.012753473 ubox
10 43 0.010592487 ubox
10 46 0.032874185 ubox
10 48 0.009122804 ubox
10 49 0.014904170 ubox
10 52 0.998996022 ubox
10 62 0.006775323 ubox
11 26 0.004375613 ubox
11 42 0.009587297 ubox
11 47 0.011790209 ubox
11 51 0.999082890 ubox
11 59 0.005078173 ubox
11 61 0.004838481 ubox
12 22 0.004890309 ubox
12 25 0.008569786 ubox
12 44 0.025876303 ubox
12 47 0.013052936 ubox
12 50 0.999099505 ubox
12 58 0.005184107 ubox
12 60 0.004790025 ubox
13 21 0.004955229 ubox
13 23 0.003792196 ubox
13 24 0.008375134 ubox
13 43 0.025882057 ubox
13 45 0.024621362 ubox
13 46 0.010540947 ubox
13 48 0.017792945 ubox
13 49 0.998188972 ubox
13 57 0.005232985 ubox
14 20 0.004940277 ubox
14 22 0.004329153 ubox
14 42 0.025858555 ubox
14 44 0.026869949 ubox
14 47 0.025093296 ubox
14 58 0.004556560 ubox
15 19 0.004911968 ubox
15 21 0.004333141 ubox
15 23 0.008293468 ubox
15 41 0.025844306 ubox
15 43 0.026891043 ubox
15 45 0.019003247 ubox
15 46 0.019436423 ubox
15 48 0.994915194 ubox
15 54 0.006023405 ubox
15 57 0.004537893 ubox
16 22 0.008447499 ubox
16 25 0.004808731 ubox
16 42 0.026949273 ubox
16 44 0.024823221 ubox
16 47 0.998716693 ubox
16 53 0.006466781 ubox
17 21 0.008389379 ubox
17 24 0.004812387 ubox
17 41 0.026953884 ubox
17 43 0.024856333 ubox
17 45 0.012358401 ubox
17 46 0.998318331 ubox
17 52 0.006467654 ubox
18 42 0.024776826 ubox
18 44 0.010550605 ubox
18 51 0.006467679 ubox
19 44 0.998428481 ubox
19 50 0.006464216 ubox
20 41 0.003262081 ubox
20 43 0.998319615 ubox
20 45 0.009278657 ubox
20 48 0.004515143 ubox
20 49 0.004579182 ubox
20 54 0.004821824 ubox
21 42 0.998698252 ubox
21 44 0.011258661 ubox
21 47 0.006419167 ubox
21 53 0.013812037 ubox
22 37 0.055116700 ubox
22 41 0.998038335 ubox
22 43 0.011294999 ubox
22 46 0.006406803 ubox
22 52 0.013825137 ubox
23 36 0.091107264 ubox
23 42 0.010730276 ubox
23 51 0.013825912 ubox
24 35 0.091269444 ubox
24 42 0.004928236 ubox
24 44 0.006373685 ubox
24 50 0.013826172 ubox
25 34 0.089669307 ubox
25 38 0.853222899 ubox
25 41 0.006083722 ubox
25 43 0.006373998 ubox
25 49 0.013823125 ubox
26 32 0.069974424 ubox
26 34 0.033838980 ubox
26 37 0.844141516 ubox
26 38 0.509317662 ubox
26 41 0.004980755 ubox
26 48 0.013808155 ubox
27 31 0.063303892 ubox
27 33 0.056873226 ubox
27 37 0.524250083 ubox
27 40 0.005035223 ubox
28 36 0.877062003 ubox
29 35 0.836598928 ubox
29 36 0.168823877 ubox
30 35 0.129573346 ubox
30 36 0.130080080 ubox
31 35 0.113697283 ubox
34 47 0.013801368 ubox
35 46 0.013814963 ubox
36 45 0.013819039 ubox
37 44 0.013781817 ubox
48 82 0.005365261 ubox
49 81 0.005561093 ubox
50 80 0.005556845 ubox
51 64 0.003415548 ubox
51 79 0.005542094 ubox
52 63 0.003587770 ubox
53 62 0.003589602 ubox
53 78 0.005026537 ubox
54 61 0.003584993 ubox
54 74 0.003261733 ubox
54 77 0.005590952 ubox
54 82 0.011672683 ubox
54 83 0.228916648 ubox
55 59 0.003872080 ubox
55 60 0.003973146 ubox
55 76 0.012939699 ubox
55 77 0.030683976 ubox
55 81 0.011693023 ubox
55 82 0.300027473 ubox
56 76 0.030266363 ubox
56 77 0.752466834 ubox
57 63 0.003280950 ubox
57 71 0.019671069 ubox
57 74 0.044505818 ubox
57 76 0.814170148 ubox
57 81 0.560337573 ubox
58 62 0.003262567 ubox
58 70 0.018001390 ubox
58 73 0.040670727 ubox
58 75 0.818841214 ubox
58 79 0.023723213 ubox
58 80 0.561266633 ubox
59 69 0.016099060 ubox
59 70 0.020452398 ubox
59 78 0.027195847 ubox
59 79 0.561228401 ubox
59 80 0.003864330 ubox
60 66 0.005500307 ubox
60 69 0.022056545 ubox
60 73 0.836317065 ubox
60 78 0.543752612 ubox
60 79 0.004143475 ubox
61 65 0.005015183 ubox
61 68 0.023186929 ubox
61 72 0.872313155 ubox
61 75 0.149581634 ubox
61 78 0.003724802 ubox
62 67 0.019790424 ubox
62 71 0.873125521 ubox
62 74 0.184230512 ubox
62 76 0.435061317 ubox
62 77 0.008029532 ubox
63 70 0.872959653 ubox
63 73 0.184265784 ubox
63 75 0.448635037 ubox
64 74 0.441827978 ubox
64 77 0.006116480 ubox
65 76 0.005979943 ubox
66 74 0.055552884 ubox
67 73 0.061723937 ubox
69 82 0.008922743 ubox
70 81 0.008948933 ubox
71 78 0.003659985 ubox
71 80 0.008948548 ubox
72 77 0.003724809 ubox
73 81 0.013388356 ubox
74 80 0.013985002 ubox
75 81 0.004067059 ubox
76 80 0.003812205 ubox
3 81 0.9500000 lbox
4 80 0.9500000 lbox
5 79 0.9500000 lbox
7 55 0.9500000 lbox
8 54 0.9500000 lbox
9 53 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
56 77 0.9500000 lbox
57 76 0.9500000 lbox
58 75 0.9500000 lbox
60 73 0.9500000 lbox
61 72 0.9500000 lbox
62 71 0.9500000 lbox
63 70 0.9500000 lbox
showpage
end
%%EOF
