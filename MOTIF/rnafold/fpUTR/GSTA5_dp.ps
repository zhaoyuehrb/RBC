%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GSTA5)
} def

/sequence { (\
AGUUGCCCAGCCACGACAGUGACAGAGUUUAACAAACUAAGCUUAGAGAAACCUCCAGGAGACUGCUAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.011045740 ubox
1 43 0.007184093 ubox
1 54 0.003667561 ubox
1 64 0.874590437 ubox
1 67 0.111643483 ubox
2 11 0.089247320 ubox
2 14 0.052688983 ubox
2 17 0.136333666 ubox
2 23 0.087521831 ubox
2 33 0.010455198 ubox
2 37 0.011710799 ubox
2 42 0.008281527 ubox
2 52 0.017899307 ubox
2 53 0.003869485 ubox
2 63 0.926133777 ubox
2 66 0.117300448 ubox
2 69 0.044979256 ubox
3 10 0.088610971 ubox
3 13 0.051866043 ubox
3 16 0.136661081 ubox
3 22 0.087553352 ubox
3 25 0.003833541 ubox
3 32 0.010440102 ubox
3 35 0.004528388 ubox
3 36 0.011080715 ubox
3 41 0.008229426 ubox
3 51 0.017880370 ubox
3 58 0.008749865 ubox
3 60 0.003268165 ubox
3 61 0.020411390 ubox
3 62 0.925386530 ubox
3 65 0.088198557 ubox
3 68 0.045308512 ubox
4 9 0.073950707 ubox
4 13 0.008668540 ubox
4 15 0.136559537 ubox
4 18 0.004255358 ubox
4 21 0.085182952 ubox
4 24 0.009849434 ubox
4 31 0.009956358 ubox
4 34 0.006065127 ubox
4 35 0.010249567 ubox
4 40 0.007527376 ubox
4 50 0.016928617 ubox
4 57 0.011744656 ubox
4 60 0.027604340 ubox
4 61 0.827527749 ubox
4 65 0.003865050 ubox
4 68 0.019931707 ubox
5 11 0.117327138 ubox
5 12 0.010128585 ubox
5 14 0.135482217 ubox
5 17 0.004465925 ubox
5 20 0.084829670 ubox
5 23 0.010509209 ubox
5 28 0.007800663 ubox
5 30 0.007669478 ubox
5 33 0.007125814 ubox
5 42 0.006239276 ubox
5 56 0.012355029 ubox
5 66 0.084045003 ubox
5 67 0.016943362 ubox
6 10 0.116957160 ubox
6 19 0.084883268 ubox
6 27 0.008392704 ubox
6 41 0.006250416 ubox
6 59 0.786892390 ubox
6 65 0.079125410 ubox
7 58 0.786211889 ubox
7 59 0.491981145 ubox
8 21 0.029055323 ubox
8 58 0.495112207 ubox
8 65 0.065607371 ubox
9 20 0.027270431 ubox
9 29 0.011105349 ubox
9 43 0.035302660 ubox
9 54 0.046590658 ubox
9 64 0.069588838 ubox
9 67 0.158843534 ubox
10 20 0.018433564 ubox
10 28 0.012388916 ubox
10 42 0.037749475 ubox
10 53 0.046575388 ubox
10 63 0.069728519 ubox
10 66 0.166682000 ubox
11 19 0.021409973 ubox
11 27 0.012464959 ubox
11 41 0.037677304 ubox
11 59 0.024205949 ubox
11 65 0.154043914 ubox
12 21 0.979002475 ubox
12 58 0.022378783 ubox
13 20 0.981099963 ubox
14 19 0.981028211 ubox
14 21 0.019205189 ubox
15 20 0.013791916 ubox
15 55 0.010746428 ubox
15 70 0.017772043 ubox
16 54 0.010505369 ubox
16 69 0.017643260 ubox
17 65 0.045143545 ubox
18 38 0.004048088 ubox
18 43 0.016733660 ubox
18 54 0.003262791 ubox
18 64 0.046930965 ubox
18 67 0.032426830 ubox
19 33 0.003822924 ubox
19 37 0.004252364 ubox
19 42 0.017921441 ubox
19 52 0.016629207 ubox
19 63 0.047092934 ubox
19 66 0.033754587 ubox
19 69 0.023034620 ubox
20 32 0.003656116 ubox
20 36 0.004219020 ubox
20 41 0.017871613 ubox
20 45 0.006538929 ubox
20 51 0.016673830 ubox
20 57 0.007716895 ubox
20 62 0.045852951 ubox
20 65 0.022948964 ubox
20 68 0.023956647 ubox
21 29 0.003283328 ubox
21 44 0.006039146 ubox
21 56 0.008441723 ubox
21 64 0.012518959 ubox
21 67 0.023060998 ubox
21 70 0.015729642 ubox
22 28 0.005388381 ubox
22 43 0.006359949 ubox
22 69 0.015764457 ubox
23 27 0.005573425 ubox
23 65 0.029521676 ubox
24 38 0.004794260 ubox
24 43 0.013386452 ubox
24 44 0.034412588 ubox
24 54 0.005594999 ubox
24 64 0.029353165 ubox
24 67 0.022147022 ubox
25 37 0.004897958 ubox
25 42 0.013927464 ubox
25 43 0.024440266 ubox
25 44 0.951272289 ubox
25 53 0.005875164 ubox
25 55 0.008453163 ubox
25 63 0.028186603 ubox
25 66 0.022333567 ubox
25 70 0.003911323 ubox
26 38 0.101956534 ubox
26 43 0.988488097 ubox
26 44 0.016577270 ubox
26 54 0.008383120 ubox
26 64 0.017908789 ubox
26 67 0.003619974 ubox
27 33 0.008813713 ubox
27 37 0.105076116 ubox
27 42 0.993641066 ubox
27 52 0.007340963 ubox
27 53 0.006849111 ubox
27 63 0.018176603 ubox
27 66 0.003690934 ubox
28 32 0.007953150 ubox
28 35 0.003578230 ubox
28 36 0.104798336 ubox
28 40 0.005176857 ubox
28 41 0.993137115 ubox
28 51 0.008670065 ubox
28 62 0.018163136 ubox
28 65 0.003518856 ubox
29 34 0.004185736 ubox
29 35 0.102472361 ubox
29 36 0.006384669 ubox
29 39 0.006838087 ubox
29 40 0.991203030 ubox
29 41 0.003874142 ubox
29 50 0.008625467 ubox
29 61 0.017795622 ubox
30 34 0.085387532 ubox
30 35 0.007747802 ubox
30 39 0.991308078 ubox
30 40 0.004922081 ubox
30 45 0.003265690 ubox
30 49 0.008350791 ubox
30 60 0.017059150 ubox
31 38 0.956967410 ubox
31 44 0.003312573 ubox
35 44 0.003647819 ubox
36 43 0.003426992 ubox
37 46 0.008546619 ubox
37 61 0.004330641 ubox
38 45 0.009192928 ubox
38 60 0.004315380 ubox
39 44 0.009152697 ubox
39 64 0.005282882 ubox
40 64 0.035218310 ubox
40 67 0.009615136 ubox
41 63 0.036352425 ubox
41 66 0.009985567 ubox
42 48 0.004439313 ubox
42 58 0.008881152 ubox
42 59 0.055715021 ubox
42 61 0.040471579 ubox
42 65 0.009508120 ubox
43 47 0.004045672 ubox
43 57 0.010567605 ubox
43 58 0.056364639 ubox
43 60 0.040600042 ubox
44 49 0.003386550 ubox
44 50 0.003372361 ubox
44 57 0.085784749 ubox
44 58 0.004039730 ubox
44 59 0.040023031 ubox
44 68 0.017262556 ubox
45 54 0.071926358 ubox
45 64 0.006623017 ubox
45 67 0.026390269 ubox
46 53 0.077538272 ubox
46 55 0.970535509 ubox
46 63 0.006829531 ubox
46 66 0.026934926 ubox
46 70 0.007138057 ubox
47 54 0.972700463 ubox
47 64 0.033955071 ubox
47 67 0.025431930 ubox
47 69 0.007021516 ubox
48 53 0.968799621 ubox
48 55 0.083572097 ubox
48 63 0.034415765 ubox
48 66 0.026252663 ubox
48 70 0.007053698 ubox
49 54 0.078400757 ubox
49 69 0.006965596 ubox
52 59 0.052741765 ubox
53 58 0.052763469 ubox
53 59 0.008803593 ubox
53 61 0.076152830 ubox
54 58 0.007969032 ubox
54 60 0.076402386 ubox
54 62 0.008329987 ubox
55 59 0.075801186 ubox
55 61 0.009200486 ubox
56 65 0.280051220 ubox
57 64 0.304872359 ubox
57 67 0.019273321 ubox
58 63 0.307167682 ubox
58 64 0.015059976 ubox
58 66 0.020239282 ubox
58 67 0.017959644 ubox
58 70 0.006187163 ubox
59 63 0.016094264 ubox
59 66 0.018585444 ubox
59 69 0.005707483 ubox
59 70 0.013363617 ubox
60 67 0.028207662 ubox
60 69 0.013794318 ubox
61 66 0.028902094 ubox
61 70 0.012124903 ubox
62 69 0.011347431 ubox
1 64 0.9500000 lbox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
4 61 0.9500000 lbox
6 59 0.9500000 lbox
7 58 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
showpage
end
%%EOF
