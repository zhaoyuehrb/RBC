%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGCUCUGGUUCGGGCUGCGGCUGCGGCUGCGGCUGCGGCUGCUACUGCUACGCUCCUAGCUUGAGGGAAAGAGGCCGAGGCCUGGGCCAAGCCCGGAGCCGCCGCUCGCCGGAGCCUCCUGGAGCCUCCGCGCCGGCUCAGCCUGGGGGCGGGCUCCGGUCCGGCCCGCCGCCGCACCCAGGACGGAGGCUGC\
) } def
/len { sequence length } bind def

/coor [
[51.84853745 863.89916992]
[61.73030472 851.26074219]
[61.24953079 836.26843262]
[57.88874435 829.67559814]
[60.88314056 821.03240967]
[60.64272308 806.03436279]
[60.40230560 791.03625488]
[60.16188812 776.03820801]
[59.92147064 761.04010010]
[56.66679001 754.39422607]
[59.79933167 745.80017090]
[59.79933167 730.80017090]
[59.79933167 715.80017090]
[59.67911911 700.80065918]
[59.43870163 685.80261230]
[59.19828415 670.80450439]
[55.94359970 664.15863037]
[59.07614517 655.56457520]
[59.07614517 640.56457520]
[59.07614517 625.56457520]
[59.07614517 610.56457520]
[59.07614517 595.56457520]
[59.07614517 580.56457520]
[51.33884430 567.83734131]
[59.07614517 554.03717041]
[59.07614517 539.03717041]
[59.07614517 524.03717041]
[59.07614517 509.03713989]
[58.95593262 494.03762817]
[58.71551514 479.03955078]
[58.47509766 464.04147339]
[55.22041321 457.39559937]
[58.35295486 448.80154419]
[58.35295486 433.80154419]
[58.35295486 418.80154419]
[58.35295486 403.80154419]
[58.35295486 388.80154419]
[50.61565781 376.07427979]
[58.35295486 362.27410889]
[58.35295486 347.27410889]
[58.35295486 332.27410889]
[58.35295486 317.27410889]
[47.32996368 307.10092163]
[32.37810898 308.30175781]
[19.19258499 318.05236816]
[4.26557970 311.26144409]
[2.95271444 294.91494751]
[16.60455322 285.82870483]
[31.17725372 293.34991455]
[46.12910843 292.14904785]
[51.43085098 293.90863037]
[56.01256561 296.55169678]
[59.74608231 299.92825317]
[62.14008331 285.12051392]
[64.53408051 270.31280518]
[66.92807770 255.50506592]
[69.32207489 240.69734192]
[71.71607208 225.88961792]
[74.11007690 211.08187866]
[76.50407410 196.27415466]
[78.89807129 181.46643066]
[73.29122162 167.66741943]
[83.13185120 155.27902222]
[85.52584839 140.47129822]
[87.91984558 125.66356659]
[90.31384277 110.85584259]
[85.47328186 96.65834045]
[74.53217316 86.39714813]
[59.31770706 89.44668579]
[45.23055649 82.94039154]
[37.68751907 69.38007355]
[39.58904648 53.97994995]
[50.20396042 42.66168213]
[65.45061493 39.77737427]
[79.46635437 46.43610001]
[86.86183929 60.07744598]
[84.79336548 75.45603943]
[95.73447418 85.71723175]
[102.26937103 82.03684998]
[115.33914948 74.67608643]
[121.87403870 70.99570465]
[118.77104187 56.32016754]
[115.66804504 41.64462662]
[112.44754028 26.99442863]
[109.10972595 12.37051010]
[105.77191162 -2.25340843]
[102.43409729 -16.87732697]
[99.09628296 -31.50124550]
[95.75846863 -46.12516403]
[86.33918762 -60.22174072]
[97.27734375 -73.17523193]
[112.75259399 -66.25042725]
[110.38238525 -49.46297836]
[113.72019958 -34.83906174]
[117.05801392 -20.21514130]
[120.39582825 -5.59122229]
[123.73364258 9.03269577]
[127.07145691 23.65661430]
[131.63053894 29.48544693]
[130.34358215 38.54163361]
[133.44657898 53.21717072]
[136.54957581 67.89270782]
[151.02804565 71.81369019]
[161.11254883 60.70951843]
[171.19706726 49.60534668]
[181.28158569 38.50117493]
[181.44404602 25.59589005]
[190.08248901 16.55374527]
[202.16636658 15.85012436]
[212.42756653 4.90901423]
[222.68875122 -6.03209639]
[226.28288269 -14.44357777]
[233.20317078 -17.06466484]
[243.63841248 -27.83990479]
[254.07365417 -38.61514664]
[264.50888062 -49.39038467]
[268.55133057 -64.68643188]
[282.96356201 -68.44635773]
[293.39880371 -79.22159576]
[303.83404541 -89.99684143]
[310.50967407 -105.58119965]
[327.33297729 -103.48064423]
[329.97167969 -86.73329926]
[314.60928345 -79.56159973]
[304.17404175 -68.78636169]
[293.73880005 -58.01111984]
[290.44274902 -43.48578644]
[275.28411865 -38.95514679]
[264.84890747 -28.17990685]
[254.41365051 -17.40466690]
[243.97842407 -6.62942648]
[233.62986755 4.22909784]
[223.36866760 15.17020798]
[213.10748291 26.11131859]
[210.04441833 43.38554001]
[192.38575745 48.58568954]
[182.30123901 59.68986130]
[172.21672058 70.79402924]
[162.13221741 81.89820099]
[105.12156677 113.24983978]
[102.72756958 128.05757141]
[100.33357239 142.86529541]
[97.93957520 157.67301941]
[103.37519073 172.53117371]
[93.70579529 183.86042786]
[91.31179810 198.66815186]
[88.91780090 213.47587585]
[86.52380371 228.28361511]
[84.12980652 243.09133911]
[81.73580170 257.89904785]
[79.34180450 272.70678711]
[76.94780731 287.51452637]
[74.55381012 302.32223511]
[73.35295868 317.27410889]
[73.35295868 332.27410889]
[73.35295868 347.27410889]
[73.35295868 362.27410889]
[81.09025574 376.07427979]
[73.35295868 388.80154419]
[73.35295868 403.80154419]
[73.35295868 418.80154419]
[73.35295868 433.80154419]
[73.35295868 448.80154419]
[73.47316742 463.80105591]
[73.71358490 478.79913330]
[73.95400238 493.79721069]
[77.22389221 502.33996582]
[74.07614136 509.03713989]
[74.07614136 524.03717041]
[74.07614136 539.03717041]
[74.07614136 554.03717041]
[81.81344604 567.83734131]
[74.07614136 580.56457520]
[74.07614136 595.56457520]
[74.07614136 610.56457520]
[74.07614136 625.56457520]
[74.07614136 640.56457520]
[74.07614136 655.56457520]
[74.19635773 670.56408691]
[74.43677521 685.56219482]
[74.67719269 700.56024170]
[77.94707489 709.10302734]
[74.79933167 715.80017090]
[74.79933167 730.80017090]
[74.79933167 745.80017090]
[74.91954803 760.79968262]
[75.15996552 775.79779053]
[75.40038300 790.79583740]
[75.64080048 805.79394531]
[75.88121796 820.79199219]
[76.24182129 835.78765869]
[76.72259521 850.77996826]
[87.39380646 862.75927734]
[84.53945923 878.54638672]
[70.34916687 886.03070068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[11 185]
[12 184]
[13 183]
[14 181]
[15 180]
[16 179]
[18 178]
[19 177]
[20 176]
[21 175]
[22 174]
[23 173]
[25 171]
[26 170]
[27 169]
[28 168]
[29 166]
[30 165]
[31 164]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[39 157]
[40 156]
[41 155]
[42 154]
[43 50]
[44 49]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[63 143]
[64 142]
[65 141]
[66 140]
[67 78]
[68 77]
[81 102]
[82 101]
[83 100]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[103 139]
[104 138]
[105 137]
[106 136]
[109 134]
[110 133]
[111 132]
[113 131]
[114 130]
[115 129]
[116 128]
[118 126]
[119 125]
[120 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
