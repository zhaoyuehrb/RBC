%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAAGUGCGGGCGAGCGCGGGUCCCCGGGUCUGACAGGAGCAGCCUGUGGGCACCGCGGCGGUAGUUGGAGGCGGGAGAGGGUCCGUAGCCGCGCCGCCCUGCCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[94.09742737 260.85760498]
[78.89883423 264.53683472]
[64.91412354 257.53955078]
[58.74645233 243.16967773]
[63.30800247 228.21218872]
[76.44495392 219.72958374]
[78.13948822 204.82560730]
[79.83402252 189.92163086]
[77.42758179 182.81642151]
[81.79320526 174.62203979]
[83.90882874 159.77197266]
[86.02445221 144.92192078]
[88.14006805 130.07186890]
[90.25569153 115.22180939]
[82.92169952 108.69332123]
[79.78254700 98.79185486]
[82.26741028 88.12147522]
[90.24122620 79.80035400]
[77.69596863 71.57743835]
[65.15070343 63.35451889]
[52.60544205 55.13159943]
[39.94507599 47.08703232]
[27.17213821 39.22241974]
[14.39920139 31.35781288]
[1.62626421 23.49320221]
[-14.18170738 22.84620857]
[-20.96262741 9.58467102]
[-33.73556519 1.72006166]
[-46.50850296 -6.14454746]
[-59.28143692 -14.00915718]
[-68.37384796 -15.88928223]
[-72.30011749 -22.28140068]
[-84.84537506 -30.50432014]
[-97.39064026 -38.72723770]
[-112.31104279 -34.04583359]
[-126.72995758 -40.09801865]
[-133.83920288 -54.02614212]
[-130.28202820 -69.25376129]
[-117.73800659 -78.59086609]
[-102.13005066 -77.62876129]
[-90.82775879 -66.82172394]
[-89.16772461 -51.27250290]
[-76.62245941 -43.04958344]
[-64.07719421 -34.82666397]
[-51.41682816 -26.78209305]
[-38.64389420 -18.91748428]
[-25.87095451 -11.05287552]
[-13.09801865 -3.18826628]
[1.79634762 -3.10380149]
[9.49087334 10.72026634]
[22.26381111 18.58487511]
[35.03674698 26.44948387]
[47.80968475 34.31409454]
[55.26422501 35.15349579]
[60.82836151 42.58633804]
[73.37362671 50.80925751]
[85.91888428 59.03217697]
[98.46414948 67.25509644]
[113.21103668 69.99906158]
[127.87435913 66.83887482]
[142.53768921 63.67868423]
[157.20101929 60.51849747]
[171.86434937 57.35830688]
[186.52767944 54.19812012]
[194.39292908 49.26409531]
[201.65048218 51.16218567]
[216.39736938 48.41822052]
[224.39909363 43.70874786]
[231.60002136 45.81146240]
[246.41865540 43.48591232]
[255.72810364 30.99704742]
[270.78942871 28.84970665]
[282.63827515 37.80181503]
[297.45690918 35.47626495]
[312.27554321 33.15071869]
[327.09417725 30.82516861]
[341.91281128 28.49961853]
[351.01669312 15.58084106]
[366.60311890 12.96566200]
[379.42492676 22.20562363]
[381.87515259 37.81881714]
[372.50015259 50.54221725]
[356.86193848 52.82725143]
[344.23837280 43.31824875]
[329.41973877 45.64379883]
[314.60110474 47.96934891]
[299.78247070 50.29489517]
[284.96383667 52.62044525]
[276.42684937 64.77178955]
[261.43176270 67.34132385]
[248.74420166 58.30454254]
[233.92556763 60.63009262]
[219.14132690 63.16510391]
[204.39443970 65.90907288]
[189.68786621 68.86145020]
[175.02453613 72.02163696]
[160.36120605 75.18182373]
[145.69787598 78.34201050]
[131.03454590 81.50220490]
[116.37122345 84.66239166]
[119.54230499 105.32009888]
[105.10574341 117.33743286]
[102.99012756 132.18748474]
[100.87450409 147.03753662]
[98.75888062 161.88760376]
[96.64326477 176.73765564]
[94.73799896 191.61616516]
[93.04346466 206.52014160]
[91.34893036 221.42411804]
[102.24629974 232.63934326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 109]
[7 108]
[8 107]
[10 106]
[11 105]
[12 104]
[13 103]
[14 102]
[18 58]
[19 57]
[20 56]
[21 55]
[22 53]
[23 52]
[24 51]
[25 50]
[27 48]
[28 47]
[29 46]
[30 45]
[32 44]
[33 43]
[34 42]
[59 100]
[60 99]
[61 98]
[62 97]
[63 96]
[64 95]
[66 94]
[67 93]
[69 92]
[70 91]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
