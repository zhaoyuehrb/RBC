%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACACACACACACACACACACACACACACACACACACACACACACAUACACACGCCCGGGGAGGCAGGCCGGAGAGACCUCCCUCCCGCCCCUCCCGCCCGCCUCCCUCCCCUCGCCGCCGCCGCCGCCGCCAGCAUCUGGGACCGGCCGAUUCUGCACCUCCGUCCGGCGCUGCCCUUUGAUUCGGAUUUCCAUCUUGCAUUCUCCGGCUGAUCGCGGGACCUGGCUCGUGCAGAGGAGGGGGGCCGAUCGCU\
) } def
/len { sequence length } bind def

/coor [
[91.06565857 247.91073608]
[99.28656006 260.45730591]
[106.35409546 273.68795776]
[112.21178436 287.49691772]
[116.81282043 301.77383423]
[120.12042999 316.40463257]
[122.10817719 331.27233887]
[122.76016998 346.25814819]
[122.07121277 361.24234009]
[120.04679871 376.10510254]
[116.70310974 390.72766113]
[112.06687164 404.99319458]
[106.17513275 418.78765869]
[99.07498169 432.00085449]
[90.82316589 444.52709961]
[81.48562622 456.26638794]
[71.13698578 467.12481689]
[59.85995483 477.01565552]
[47.74465561 485.85983276]
[34.88791275 493.58666992]
[21.39247322 500.13442993]
[7.36619663 505.45077515]
[-7.07882452 509.49322510]
[-21.82714653 512.22943115]
[-36.76090240 513.63763428]
[-51.76074600 513.70642090]
[-66.70679474 512.43542480]
[-81.47960663 509.83462524]
[-95.96112061 505.92492676]
[-110.03559875 500.73751831]
[-123.59055328 494.31387329]
[-136.51766968 486.70535278]
[-148.71362305 477.97271729]
[-160.08094788 468.18579102]
[-170.52880859 457.42279053]
[-179.97367859 445.76971436]
[-188.34011841 433.31970215]
[-195.56121826 420.17224121]
[-201.57931519 406.43243408]
[-206.34626770 392.21005249]
[-209.82400513 377.61877441]
[-211.98474121 362.77520752]
[-212.81118774 347.79800415]
[-212.29673767 332.80682373]
[-210.44552612 317.92150879]
[-207.27232361 303.26098633]
[-202.80250549 288.94244385]
[-197.07177734 275.08029175]
[-190.12596130 261.78533936]
[-182.02055359 249.16384888]
[-172.82034302 237.31665039]
[-162.59883118 226.33845520]
[-151.43772888 216.31698608]
[-139.42623901 207.33233643]
[-126.66033173 199.45631409]
[-113.24205017 192.75186157]
[-99.27862549 187.27255249]
[-84.88165283 183.06217957]
[-70.15878296 180.15328979]
[-84.30609894 175.16796875]
[-98.45341492 170.18264771]
[-112.60073090 165.19731140]
[-126.74804688 160.21199036]
[-140.89537048 155.22666931]
[-147.40873718 156.05834961]
[-152.59764099 153.82826233]
[-155.32722473 149.94032288]
[-169.34742737 144.60795593]
[-183.36763000 139.27558899]
[-199.01690674 141.60165405]
[-208.16229248 129.84533691]
[-222.18247986 124.51296997]
[-236.20268250 119.18061066]
[-250.22288513 113.84824371]
[-263.13632202 122.45188904]
[-278.63919067 121.78840637]
[-290.77035522 112.11293793]
[-294.86511230 97.14588165]
[-289.34890747 82.64238739]
[-276.34289551 74.17933655]
[-260.84814453 75.01094818]
[-248.82264709 84.81745148]
[-244.89051819 99.82804871]
[-230.87031555 105.16040802]
[-216.85012817 110.49277496]
[-202.82992554 115.82513428]
[-188.18345642 113.11766815]
[-178.03526306 125.25540161]
[-164.01506042 130.58776855]
[-149.99487305 135.92012024]
[-135.91004944 141.07936096]
[-121.76272583 146.06468201]
[-107.61540985 151.05000305]
[-93.46809387 156.03532410]
[-79.32077789 161.02064514]
[-65.17346191 166.00596619]
[-70.80254364 152.10224915]
[-62.72813416 139.46089172]
[-47.74634933 138.72195435]
[-38.46715164 150.50740051]
[-42.70077515 164.89761353]
[-29.11267281 158.54438782]
[-15.52457237 152.19116211]
[-1.93647063 145.83793640]
[11.65163040 139.48471069]
[25.23973274 133.13148499]
[38.82783508 126.77825165]
[52.41593552 120.42502594]
[66.00403595 114.07180023]
[79.59214020 107.71856689]
[64.70077515 105.91651154]
[57.54541397 92.73316193]
[64.14861298 79.26476288]
[78.95256042 76.84748840]
[89.49699402 87.51599884]
[86.19779968 72.88332367]
[74.68376160 61.20603180]
[79.29983521 45.46996307]
[95.29740143 41.86302948]
[106.21952820 54.09573746]
[100.83047485 69.58412170]
[104.12966919 84.21680450]
[119.13005066 84.12438965]
[134.12910461 84.03200531]
[137.24777222 69.35979462]
[140.36645508 54.68757629]
[143.48512268 40.01536560]
[133.27540588 28.47986031]
[131.83270264 13.32162762]
[139.50164795 0.37360337]
[153.16087341 -5.50546169]
[156.27955627 -20.17767525]
[159.39822388 -34.84988785]
[162.51690674 -49.52210236]
[159.89582825 -66.27221680]
[175.26576233 -73.42774963]
[186.39646912 -60.63933182]
[177.18911743 -46.40342712]
[174.07044983 -31.73121452]
[170.95176697 -17.05900002]
[167.83309937 -2.38678622]
[177.92019653 8.53971672]
[179.65968323 23.48756409]
[172.17630005 36.74849701]
[158.15734863 43.13404083]
[155.03866577 57.80625153]
[151.91999817 72.47846985]
[148.80131531 87.15068054]
[153.28411865 93.16353607]
[165.30998230 84.19812775]
[174.27519226 96.22413635]
[162.24974060 105.18925476]
[166.73254395 111.20211029]
[181.68446350 112.40202332]
[196.63639832 113.60193634]
[211.58833313 114.80184937]
[226.54025269 116.00176239]
[241.49218750 117.20167542]
[256.44412231 118.40159607]
[269.56906128 106.81608582]
[286.67404175 108.29251099]
[297.19653320 121.42798615]
[312.16210938 122.44360352]
[327.13906860 123.27478027]
[342.12512207 123.92137909]
[357.11117554 124.56797028]
[372.09722900 125.21456909]
[386.21810913 118.07933807]
[398.60000610 126.35807800]
[413.58609009 127.00467682]
[428.57214355 127.65127563]
[442.06298828 114.31954956]
[460.69323730 115.09862518]
[472.60739136 129.02365112]
[487.60482788 129.30084229]
[502.60226440 129.57801819]
[510.05639648 118.00265503]
[522.15728760 111.66584778]
[535.70104980 112.12487030]
[547.16070557 119.15337372]
[553.60485840 130.82817078]
[568.59771729 131.29010010]
[579.29400635 116.62090302]
[596.50994873 111.37602234]
[613.27203369 117.48183441]
[622.90911865 132.30659485]
[637.90887451 132.39900208]
[652.90856934 132.49139404]
[667.90826416 132.58380127]
[681.88519287 124.00602722]
[696.17132568 132.05831909]
[696.07031250 148.45715332]
[681.68603516 156.33282471]
[667.81591797 147.58351135]
[652.81616211 147.49111938]
[637.81646729 147.39871216]
[622.81677246 147.30632019]
[617.16815186 158.01629639]
[607.45104980 165.36062622]
[595.46520996 167.90240479]
[583.46325684 165.10142517]
[573.72747803 157.42749023]
[568.13580322 146.28298950]
[553.14294434 145.82106018]
[543.49798584 159.12042236]
[527.66467285 164.09037781]
[511.83529663 158.57917786]
[502.32510376 144.57545471]
[487.32766724 144.29827881]
[472.33020020 144.02108765]
[466.04812622 153.50555420]
[455.86807251 158.84634399]
[444.25460815 158.62028503]
[434.08261108 152.76808167]
[427.92553711 142.63732910]
[412.93948364 141.99073792]
[397.95343018 141.34413147]
[384.90444946 148.52561951]
[371.45062256 140.20062256]
[356.46456909 139.55403137]
[341.47851562 138.90744019]
[326.49246216 138.26083374]
[322.44787598 140.75242615]
[316.80004883 140.74877930]
[311.14648438 137.40917969]
[296.18090820 136.39356995]
[287.76828003 146.13200378]
[275.09555054 149.30273438]
[262.72521973 144.53369141]
[255.24420166 133.35351562]
[240.29228210 132.15361023]
[225.34034729 130.95368958]
[210.38841248 129.75378418]
[195.43649292 128.55386353]
[180.48455811 127.35395050]
[165.53262329 126.15403748]
[85.94536591 121.30667114]
[72.35726166 127.65989685]
[58.76916122 134.01312256]
[45.18106079 140.36634827]
[31.59296036 146.71958923]
[18.00485802 153.07281494]
[4.41675711 159.42604065]
[-9.17134380 165.77926636]
[-22.75944519 172.13249207]
[-36.34754562 178.48571777]
[-21.41730881 179.93070984]
[-6.67578125 182.70332336]
[7.75922441 186.78138733]
[21.77234459 192.13230896]
[35.25159073 198.71334839]
[48.08923340 206.47187805]
[60.18268204 215.34591675]
[71.43527985 225.26454163]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 96]
[60 95]
[61 94]
[62 93]
[63 92]
[64 91]
[67 90]
[68 89]
[69 88]
[71 86]
[72 85]
[73 84]
[74 83]
[101 246]
[102 245]
[103 244]
[104 243]
[105 242]
[106 241]
[107 240]
[108 239]
[109 238]
[110 237]
[115 122]
[116 121]
[124 148]
[125 147]
[126 146]
[127 145]
[131 141]
[132 140]
[133 139]
[134 138]
[153 236]
[154 235]
[155 234]
[156 233]
[157 232]
[158 231]
[159 230]
[162 226]
[163 225]
[164 222]
[165 221]
[166 220]
[167 219]
[169 217]
[170 216]
[171 215]
[174 210]
[175 209]
[176 208]
[181 204]
[182 203]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
