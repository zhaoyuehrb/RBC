%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:06:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RHOD)
} def

/sequence { (\
AUUCCUGCCCCGCCGGGCCUGCCCCGCGCAGUCUGGGUCUCUGCGCCGCAGCCGCCCGCCCGCCCGCUCAGCGCCCGGCCCCGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 85 0.032155077 ubox
4 84 0.051843285 ubox
4 85 0.405115598 ubox
5 83 0.051604683 ubox
5 84 0.414282183 ubox
5 85 0.017232178 ubox
6 73 0.003454485 ubox
6 83 0.413743490 ubox
6 84 0.016129866 ubox
7 13 0.004352136 ubox
7 18 0.014609148 ubox
7 63 0.004514693 ubox
7 67 0.003561124 ubox
7 72 0.004697994 ubox
7 79 0.008806463 ubox
7 82 0.411002258 ubox
8 12 0.004365829 ubox
8 17 0.014657786 ubox
8 62 0.004529165 ubox
8 66 0.003590358 ubox
8 71 0.004694385 ubox
8 78 0.008850799 ubox
8 84 0.109930738 ubox
8 85 0.766471162 ubox
9 16 0.014655166 ubox
9 77 0.008806230 ubox
9 83 0.109890739 ubox
9 84 0.781041804 ubox
9 85 0.439275884 ubox
10 15 0.014612846 ubox
10 83 0.780493026 ubox
10 84 0.446870771 ubox
10 85 0.019976834 ubox
11 62 0.003804814 ubox
11 73 0.008194271 ubox
11 83 0.446976881 ubox
11 84 0.020262353 ubox
12 59 0.014046320 ubox
12 61 0.004122108 ubox
12 63 0.005114229 ubox
12 67 0.004487694 ubox
12 72 0.008234595 ubox
12 79 0.981926461 ubox
12 82 0.183504621 ubox
13 58 0.010076339 ubox
13 62 0.005008359 ubox
13 66 0.004074136 ubox
13 71 0.008229260 ubox
13 78 0.999131630 ubox
13 84 0.006372431 ubox
14 58 0.029572657 ubox
14 62 0.004274892 ubox
14 66 0.006580050 ubox
14 77 0.999144963 ubox
14 83 0.006403728 ubox
15 57 0.034315755 ubox
15 61 0.004699254 ubox
15 65 0.006872181 ubox
15 76 0.999140459 ubox
15 81 0.012064023 ubox
15 82 0.006339150 ubox
16 53 0.003683461 ubox
16 56 0.034337921 ubox
16 60 0.004709196 ubox
16 64 0.006875575 ubox
16 75 0.999154866 ubox
16 80 0.012154004 ubox
16 81 0.006272315 ubox
17 52 0.004123976 ubox
17 55 0.034352597 ubox
17 59 0.004718264 ubox
17 63 0.006878282 ubox
17 74 0.999148453 ubox
17 79 0.012180247 ubox
17 80 0.006189556 ubox
18 54 0.034209313 ubox
18 58 0.004711622 ubox
18 62 0.006867274 ubox
18 73 0.998509757 ubox
18 78 0.012144808 ubox
19 31 0.090623468 ubox
19 51 0.070530019 ubox
19 71 0.978138194 ubox
19 77 0.011896520 ubox
20 30 0.091502443 ubox
20 50 0.072183004 ubox
20 70 0.976685997 ubox
20 73 0.022737865 ubox
21 27 0.006982811 ubox
21 29 0.091868505 ubox
21 49 0.073950622 ubox
21 52 0.005197234 ubox
21 67 0.131289842 ubox
21 69 0.965429429 ubox
21 72 0.160865493 ubox
21 76 0.003317084 ubox
21 79 0.005597113 ubox
22 26 0.007091936 ubox
22 28 0.091773568 ubox
22 48 0.074014618 ubox
22 51 0.005450905 ubox
22 66 0.144919056 ubox
22 71 0.161371655 ubox
22 78 0.005601894 ubox
23 77 0.005594473 ubox
25 48 0.009748677 ubox
25 62 0.045111592 ubox
25 66 0.739184801 ubox
26 32 0.003238622 ubox
26 46 0.081708423 ubox
26 47 0.007400572 ubox
26 61 0.045411192 ubox
26 63 0.443954656 ubox
26 65 0.742299885 ubox
26 67 0.470126008 ubox
26 72 0.004664449 ubox
26 74 0.007566650 ubox
27 31 0.003382526 ubox
27 45 0.082104735 ubox
27 62 0.445410718 ubox
27 66 0.470782530 ubox
27 71 0.004663827 ubox
27 73 0.007588981 ubox
28 44 0.082112956 ubox
28 55 0.003688208 ubox
28 59 0.056864567 ubox
28 61 0.441439872 ubox
28 63 0.754116918 ubox
28 65 0.456360022 ubox
28 67 0.018865754 ubox
28 72 0.007742121 ubox
29 43 0.082113835 ubox
29 54 0.003810502 ubox
29 58 0.058355160 ubox
29 62 0.755257340 ubox
29 66 0.018868557 ubox
29 71 0.007725196 ubox
30 42 0.082057052 ubox
30 68 0.009849490 ubox
31 41 0.081888571 ubox
31 52 0.004088709 ubox
31 59 0.444523631 ubox
31 63 0.360736466 ubox
31 67 0.010166035 ubox
32 58 0.397702755 ubox
32 62 0.358718625 ubox
32 66 0.009648403 ubox
33 51 0.005439405 ubox
33 71 0.009329567 ubox
34 50 0.005494614 ubox
34 58 0.831494440 ubox
34 62 0.022927463 ubox
34 66 0.007598114 ubox
34 70 0.009468150 ubox
35 49 0.005491856 ubox
35 56 0.008053412 ubox
35 57 0.994825775 ubox
35 61 0.037783963 ubox
35 65 0.013764518 ubox
35 69 0.009371620 ubox
36 47 0.005615685 ubox
36 53 0.004549337 ubox
36 55 0.007766811 ubox
36 56 0.995674673 ubox
36 57 0.004719501 ubox
36 60 0.037833165 ubox
36 64 0.013817852 ubox
36 68 0.009308373 ubox
37 46 0.005620787 ubox
37 52 0.004569362 ubox
37 55 0.995660486 ubox
37 56 0.004147793 ubox
37 59 0.037814320 ubox
37 63 0.013816798 ubox
37 67 0.009311356 ubox
38 45 0.005422440 ubox
38 54 0.988379583 ubox
38 58 0.037136611 ubox
38 62 0.013581656 ubox
38 66 0.009146998 ubox
39 51 0.007014251 ubox
40 50 0.005367382 ubox
41 51 0.993905060 ubox
42 50 0.995141266 ubox
42 54 0.011715082 ubox
42 62 0.003262038 ubox
43 49 0.995437466 ubox
43 52 0.029522564 ubox
43 53 0.014363998 ubox
43 55 0.028535279 ubox
43 59 0.013837109 ubox
43 61 0.003682930 ubox
43 63 0.007271367 ubox
44 48 0.988201334 ubox
44 51 0.029740033 ubox
44 54 0.028571450 ubox
44 58 0.013862428 ubox
44 62 0.007279049 ubox
45 52 0.022934493 ubox
45 53 0.022321297 ubox
45 57 0.013717441 ubox
45 59 0.004386997 ubox
45 61 0.007030760 ubox
46 51 0.028837047 ubox
46 58 0.004434905 ubox
47 54 0.004727175 ubox
48 53 0.004697179 ubox
48 55 0.020516885 ubox
48 59 0.008468229 ubox
48 63 0.008397419 ubox
48 67 0.010175414 ubox
48 72 0.007077679 ubox
49 54 0.020531848 ubox
49 58 0.008485135 ubox
49 62 0.008409685 ubox
49 66 0.010176720 ubox
49 71 0.007065383 ubox
50 68 0.028821924 ubox
51 59 0.010804880 ubox
51 63 0.007616962 ubox
51 67 0.031523480 ubox
51 72 0.005570116 ubox
52 58 0.011008891 ubox
52 62 0.006931902 ubox
52 66 0.031555425 ubox
52 71 0.005807118 ubox
52 84 0.004253547 ubox
53 62 0.010324367 ubox
53 73 0.010344016 ubox
53 83 0.004267569 ubox
54 61 0.010872421 ubox
54 63 0.042496006 ubox
54 67 0.009667765 ubox
54 72 0.044541354 ubox
54 82 0.004237388 ubox
55 62 0.042500306 ubox
55 66 0.009631034 ubox
55 71 0.044509689 ubox
55 85 0.013919687 ubox
56 78 0.003317400 ubox
56 84 0.014204234 ubox
57 66 0.007886980 ubox
57 77 0.003447026 ubox
57 83 0.014206117 ubox
58 65 0.009474310 ubox
58 67 0.076228090 ubox
58 72 0.022123326 ubox
58 76 0.003919735 ubox
58 79 0.012128117 ubox
58 82 0.014112209 ubox
59 66 0.076267387 ubox
59 71 0.022131273 ubox
59 78 0.010886478 ubox
59 85 0.008907295 ubox
60 77 0.009042268 ubox
60 78 0.027699537 ubox
60 84 0.009339796 ubox
61 73 0.014398278 ubox
61 77 0.028629130 ubox
61 83 0.009337910 ubox
62 72 0.053408639 ubox
62 76 0.029273779 ubox
62 79 0.017605185 ubox
62 82 0.006237996 ubox
63 71 0.053396586 ubox
63 78 0.017897586 ubox
63 85 0.003380085 ubox
64 77 0.017870052 ubox
64 78 0.004555784 ubox
64 84 0.003557445 ubox
65 73 0.035139769 ubox
65 77 0.004580125 ubox
65 83 0.003558338 ubox
66 72 0.057433210 ubox
66 74 0.011421283 ubox
66 76 0.003711163 ubox
66 79 0.003181907 ubox
66 82 0.003498416 ubox
67 71 0.057056903 ubox
67 73 0.011490367 ubox
67 78 0.003194142 ubox
71 79 0.003586972 ubox
72 78 0.003591101 ubox
74 85 0.010613463 ubox
75 84 0.010839692 ubox
76 83 0.010841186 ubox
77 82 0.010693547 ubox
8 85 0.9500000 lbox
9 84 0.9500000 lbox
10 83 0.9500000 lbox
12 79 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
15 76 0.9500000 lbox
16 75 0.9500000 lbox
17 74 0.9500000 lbox
18 73 0.9500000 lbox
19 71 0.9500000 lbox
20 70 0.9500000 lbox
21 69 0.9500000 lbox
25 66 0.9500000 lbox
26 65 0.9500000 lbox
28 63 0.9500000 lbox
29 62 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
showpage
end
%%EOF
