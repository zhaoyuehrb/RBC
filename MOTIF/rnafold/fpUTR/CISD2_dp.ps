%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CISD2)
} def

/sequence { (\
AGGCCGAGGCCGCCAGUGCCCGCCGGCCGCUUCCGCUCCCGGCGCAGGCGCGGCAGCUUGGCCAGAGCGGAGGGGGCUCGGGAGAGGAGUGGACGCCGCUGGCCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 11 0.060898766 ubox
2 104 0.996666628 ubox
3 10 0.060975177 ubox
3 103 0.997708556 ubox
4 9 0.060942557 ubox
4 102 0.997712738 ubox
4 107 0.025579497 ubox
5 101 0.997400631 ubox
5 106 0.026067686 ubox
6 21 0.007125821 ubox
6 100 0.910417969 ubox
7 100 0.031691179 ubox
8 14 0.005057370 ubox
8 20 0.010262989 ubox
8 97 0.996142487 ubox
8 99 0.023401474 ubox
8 100 0.031568095 ubox
8 104 0.028795846 ubox
9 13 0.004981142 ubox
9 19 0.010300153 ubox
9 96 0.996499731 ubox
9 99 0.038833554 ubox
9 103 0.028828190 ubox
10 18 0.010149074 ubox
10 87 0.004356876 ubox
10 92 0.071518027 ubox
10 95 0.929110308 ubox
10 98 0.039146470 ubox
10 102 0.028826351 ubox
11 86 0.004400688 ubox
11 91 0.105217037 ubox
11 95 0.353549376 ubox
11 101 0.028795733 ubox
12 19 0.003814235 ubox
12 54 0.006590239 ubox
12 90 0.104491327 ubox
12 94 0.498227150 ubox
12 96 0.014273354 ubox
12 99 0.006190960 ubox
12 100 0.007374207 ubox
12 103 0.060461723 ubox
13 18 0.003978343 ubox
13 53 0.006597153 ubox
13 87 0.045349157 ubox
13 89 0.102416628 ubox
13 92 0.991162018 ubox
13 95 0.013857907 ubox
13 98 0.006319498 ubox
13 102 0.060583746 ubox
14 52 0.006572041 ubox
14 86 0.048027945 ubox
14 91 0.991317788 ubox
14 101 0.060584345 ubox
15 90 0.969290244 ubox
15 100 0.060080311 ubox
16 51 0.006593249 ubox
16 90 0.053094133 ubox
16 94 0.003223926 ubox
16 96 0.007067649 ubox
16 99 0.059910895 ubox
17 50 0.006594920 ubox
17 89 0.278048855 ubox
17 91 0.013194036 ubox
17 95 0.007198650 ubox
17 98 0.059414864 ubox
18 49 0.006601322 ubox
18 90 0.059717742 ubox
18 94 0.007894460 ubox
18 96 0.021257763 ubox
18 97 0.049535407 ubox
19 48 0.006601383 ubox
19 82 0.718348723 ubox
19 87 0.607873411 ubox
19 89 0.073169306 ubox
19 92 0.006716580 ubox
19 95 0.029673925 ubox
20 47 0.006567862 ubox
20 81 0.718696509 ubox
20 82 0.014040213 ubox
20 86 0.608973297 ubox
20 87 0.145492418 ubox
20 91 0.006642653 ubox
20 92 0.031877767 ubox
21 44 0.006456264 ubox
21 80 0.718677434 ubox
21 81 0.012428412 ubox
21 86 0.144585799 ubox
21 91 0.032022377 ubox
21 95 0.007359031 ubox
22 43 0.006601592 ubox
22 79 0.708376411 ubox
22 90 0.031428377 ubox
22 94 0.007427165 ubox
23 42 0.006601930 ubox
23 81 0.689520943 ubox
23 82 0.081059663 ubox
23 89 0.020671322 ubox
23 92 0.005680101 ubox
24 41 0.006601951 ubox
24 80 0.691126406 ubox
24 81 0.073264227 ubox
24 86 0.003525657 ubox
24 91 0.005670138 ubox
25 40 0.006600385 ubox
25 78 0.678710652 ubox
25 79 0.682344811 ubox
25 90 0.003389784 ubox
26 39 0.006594537 ubox
26 77 0.996987634 ubox
26 78 0.075921423 ubox
27 75 0.006770614 ubox
27 76 0.999948113 ubox
28 74 0.008695761 ubox
28 75 0.999811572 ubox
29 36 0.006554547 ubox
30 35 0.006546978 ubox
30 72 0.004026722 ubox
30 73 0.999800245 ubox
30 74 0.007726487 ubox
31 72 0.999024094 ubox
31 73 0.005681337 ubox
32 71 0.999395188 ubox
33 70 0.999969124 ubox
34 69 0.999955623 ubox
35 68 0.999958902 ubox
36 67 0.999966829 ubox
37 66 0.999651550 ubox
38 65 0.997796104 ubox
41 63 0.998501758 ubox
42 62 0.999948083 ubox
43 61 0.999199547 ubox
45 60 0.997995394 ubox
46 58 0.008301932 ubox
46 59 0.998787115 ubox
47 57 0.006579295 ubox
47 58 0.998952466 ubox
48 54 0.003690195 ubox
48 57 0.999835925 ubox
49 53 0.003740832 ubox
49 56 0.999602626 ubox
50 57 0.013930967 ubox
51 56 0.015028651 ubox
57 107 0.006019449 ubox
58 106 0.006178609 ubox
59 105 0.006270113 ubox
60 104 0.006319019 ubox
61 103 0.006319161 ubox
62 102 0.006319132 ubox
63 101 0.006309484 ubox
64 100 0.004659779 ubox
66 100 0.004343447 ubox
67 99 0.006093939 ubox
68 98 0.006439704 ubox
69 97 0.006454647 ubox
70 96 0.006451820 ubox
76 90 0.006541859 ubox
77 86 0.003245344 ubox
77 89 0.006666508 ubox
78 85 0.005243677 ubox
78 88 0.007281444 ubox
79 84 0.006283674 ubox
79 86 0.004299795 ubox
79 87 0.007668162 ubox
86 97 0.022771617 ubox
87 96 0.023257757 ubox
88 100 0.032267673 ubox
89 96 0.016339212 ubox
89 99 0.034384555 ubox
90 95 0.015712011 ubox
90 98 0.034464471 ubox
91 97 0.035905468 ubox
92 96 0.035377459 ubox
2 104 0.9500000 lbox
3 103 0.9500000 lbox
4 102 0.9500000 lbox
5 101 0.9500000 lbox
6 100 0.9500000 lbox
8 97 0.9500000 lbox
9 96 0.9500000 lbox
10 95 0.9500000 lbox
13 92 0.9500000 lbox
14 91 0.9500000 lbox
15 90 0.9500000 lbox
19 82 0.9500000 lbox
20 81 0.9500000 lbox
21 80 0.9500000 lbox
22 79 0.9500000 lbox
25 78 0.9500000 lbox
26 77 0.9500000 lbox
27 76 0.9500000 lbox
28 75 0.9500000 lbox
30 73 0.9500000 lbox
31 72 0.9500000 lbox
32 71 0.9500000 lbox
33 70 0.9500000 lbox
34 69 0.9500000 lbox
35 68 0.9500000 lbox
36 67 0.9500000 lbox
37 66 0.9500000 lbox
38 65 0.9500000 lbox
41 63 0.9500000 lbox
42 62 0.9500000 lbox
43 61 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
showpage
end
%%EOF
