%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCAUGAUGGGGCAUGUGCGGGAGCGCCAGGCGGGGCAUGUAACCAGAGCGUGCGGGGCAUGAUGGGGCACGGACAUGGGGGGUUAGGUGGGGCACGUAAUUGGAGCUCGCGGGGCAGGAUGGGGCAUCUAACUGGAGCGACAGAGAGCACGAUGGGGCACUUACAGGGGCCGGAGGCUGGCCCGGGCAGUGAGUGUGG\
) } def
/len { sequence length } bind def

/coor [
[165.88975525 230.94517517]
[162.97439575 221.79393005]
[163.60061646 212.15191650]
[167.72434998 203.34973145]
[158.75653076 191.32566833]
[149.78871155 179.30160522]
[135.05839539 177.41651917]
[125.79246521 165.35015869]
[127.86959076 149.91242981]
[118.90177155 137.88836670]
[101.19337463 142.32470703]
[83.26314545 138.89321899]
[68.44416046 128.23179626]
[59.49116135 112.32228851]
[44.59410095 114.07662201]
[29.69704437 115.83094788]
[14.79998684 117.58528137]
[-0.09707118 119.33960724]
[-12.89761734 128.63781738]
[-26.44246292 122.44213867]
[-41.33951950 124.19646454]
[-47.58019638 133.11747742]
[-57.49793243 137.04608154]
[-67.72465515 134.90808105]
[-74.92826843 127.64701080]
[-89.87287903 128.93489075]
[-102.95777893 137.82847595]
[-116.30236816 131.21247864]
[-131.24697876 132.50035095]
[-146.19158936 133.78822327]
[-162.97019958 147.10997009]
[-181.28587341 137.60604858]
[-196.15370178 139.59298706]
[-203.59312439 153.08227539]
[-217.38775635 159.52911377]
[-232.15869141 156.65104675]
[-242.28138733 145.75752258]
[-257.14920044 147.74446106]
[-272.01702881 149.73141479]
[-286.88485718 151.71835327]
[-301.75268555 153.70529175]
[-316.62048340 155.69224548]
[-324.84341431 168.99327087]
[-339.70843506 173.84773254]
[-354.19668579 167.96350098]
[-361.46731567 154.11892700]
[-358.08731079 138.85099792]
[-345.65261841 129.36875916]
[-330.03454590 130.14944458]
[-318.60742188 140.82441711]
[-303.73962402 138.83747864]
[-288.87179565 136.85054016]
[-274.00396729 134.86358643]
[-259.13616943 132.87664795]
[-244.26834106 130.88970947]
[-237.36141968 117.72032166]
[-223.86459351 111.06452942]
[-208.86117554 113.66278076]
[-198.14064026 124.72516632]
[-183.27282715 122.73822784]
[-179.09512329 114.88776398]
[-171.65760803 109.76591492]
[-162.56028748 108.62836456]
[-153.83235168 111.85652161]
[-147.47946167 118.84361267]
[-132.53485107 117.55574799]
[-117.59024048 116.26787567]
[-105.57427216 107.46640015]
[-91.16075134 113.99027252]
[-76.21614075 112.70240021]
[-61.22376633 100.49850464]
[-43.09384918 109.29940796]
[-28.19679260 107.54507446]
[-16.46178436 98.37235260]
[-1.85140097 104.44255066]
[13.04565620 102.68822479]
[27.94271469 100.93389130]
[42.83977127 99.17956543]
[57.73682785 97.42523193]
[58.88615799 86.38166809]
[62.93443298 75.77541351]
[69.72706604 66.36973572]
[78.90826416 58.87555313]
[89.93827057 53.89839935]
[86.45368958 39.30875778]
[82.96910858 24.71911430]
[79.48452759 10.12947083]
[68.75304413 -1.49575293]
[73.32205963 -15.67226028]
[69.83747864 -30.26190376]
[66.35290527 -44.85154724]
[56.79245758 -58.85276794]
[67.59991455 -71.91551208]
[83.14395905 -65.14654541]
[80.94254303 -48.33612823]
[84.42712402 -33.74648285]
[87.91170502 -19.15684128]
[98.39395142 -8.57516575]
[94.07417297 6.64488983]
[97.55875397 21.23453331]
[101.04333496 35.82417679]
[104.52791595 50.41382217]
[119.08988190 54.01231003]
[128.96903992 42.72505569]
[128.10346985 27.17229080]
[138.28314209 15.86614323]
[153.11566162 15.13679886]
[162.99482727 3.84954572]
[172.87399292 -7.43770742]
[182.75315857 -18.72496033]
[186.05407715 -27.25098610]
[192.87602234 -30.10986900]
[202.93038940 -41.24134064]
[212.98475647 -52.37281036]
[210.08020020 -63.91099167]
[213.07902527 -75.30107117]
[221.12333679 -83.73939514]
[232.12838745 -87.20691681]
[243.32191467 -84.95153809]
[253.71926880 -95.76332092]
[264.11663818 -106.57511139]
[274.51400757 -117.38690186]
[284.91137695 -128.19868469]
[291.53228760 -143.80638123]
[308.36285400 -141.76486206]
[311.06030273 -125.02687836]
[295.72317505 -117.80132294]
[285.32580566 -106.98953247]
[274.92843628 -96.17774200]
[264.53106689 -85.36595917]
[254.13369751 -74.55416870]
[255.59736633 -56.31246567]
[243.05352783 -42.55241013]
[224.11622620 -42.31844330]
[214.06185913 -31.18696976]
[204.00749207 -20.05550003]
[194.04042053 -8.84579468]
[184.16125488 2.44145846]
[174.28208923 13.72871113]
[164.40292358 25.01596451]
[165.64476013 39.81439209]
[155.78666687 51.40200424]
[140.25630188 52.60422134]
[130.37713623 63.89147568]
[138.25640869 73.78009033]
[143.10845947 85.22019196]
[144.68431091 97.32721710]
[142.98355103 109.19781494]
[138.24598694 119.97715759]
[130.92584229 128.92054749]
[139.89366150 140.94461060]
[155.28277588 143.35560608]
[164.20613098 155.67747498]
[161.81277466 170.33377075]
[170.78059387 182.35784912]
[179.74842834 194.38191223]
[200.70298767 196.04180908]
[213.45123291 212.38435364]
[210.05838013 232.53392029]
[219.75991821 243.97419739]
[229.46147156 255.41447449]
[239.16302490 266.85476685]
[248.86456299 278.29504395]
[258.56613159 289.73532104]
[268.26766968 301.17559814]
[277.96920776 312.61587524]
[298.04528809 313.18991089]
[311.03634644 328.10479736]
[308.91619873 347.46337891]
[319.14331055 358.43634033]
[329.37042236 369.40930176]
[339.59753418 380.38229370]
[349.82467651 391.35525513]
[360.05178833 402.32821655]
[370.27890015 413.30117798]
[385.50122070 420.76556396]
[382.54251099 437.45935059]
[365.68209839 439.23757935]
[359.30593872 423.52832031]
[349.07879639 412.55532837]
[338.85168457 401.58236694]
[328.62457275 390.60940552]
[318.39746094 379.63644409]
[308.17034912 368.66345215]
[297.94323730 357.69049072]
[287.95275879 360.10852051]
[277.78140259 358.14190674]
[269.28073120 352.08029175]
[264.02648926 342.96484375]
[263.02670288 332.40997314]
[266.52893066 322.31741333]
[256.82739258 310.87713623]
[247.12583923 299.43685913]
[237.42428589 287.99658203]
[227.72274780 276.55630493]
[218.02119446 265.11602783]
[208.31964111 253.67575073]
[198.61810303 242.23547363]
[189.49372864 244.37860107]
[180.15881348 243.03857422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 156]
[5 155]
[6 154]
[9 151]
[10 150]
[14 79]
[15 78]
[16 77]
[17 76]
[18 75]
[20 73]
[21 72]
[25 70]
[26 69]
[28 67]
[29 66]
[30 65]
[32 60]
[33 59]
[37 55]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[84 102]
[85 101]
[86 100]
[87 99]
[89 97]
[90 96]
[91 95]
[103 144]
[104 143]
[107 140]
[108 139]
[109 138]
[110 137]
[112 136]
[113 135]
[114 134]
[119 131]
[120 130]
[121 129]
[122 128]
[123 127]
[159 198]
[160 197]
[161 196]
[162 195]
[163 194]
[164 193]
[165 192]
[166 191]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
