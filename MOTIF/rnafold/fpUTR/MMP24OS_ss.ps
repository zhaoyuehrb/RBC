%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAUUGGCGGGGGACGGUCGCGGAGCCCCGCCCCGAAGCACAGGGUCGAGUCCCUUCUUUCCGCUCCAACGCACGGAGGGUGAGGUCGGUACGCGGUGGUGGCGUCACGGCGCCAGCUCCUCCCGACGCCGAGGUGGGUUCCGGGAGACCCGCGGGUCUGGCUGCGAGAGACC\
) } def
/len { sequence length } bind def

/coor [
[214.76087952 545.43457031]
[211.00955200 530.91125488]
[207.25820923 516.38787842]
[203.50688171 501.86453247]
[199.75555420 487.34118652]
[189.08117676 476.95336914]
[193.12133789 461.65670776]
[189.37001038 447.13336182]
[185.61868286 432.61001587]
[181.86735535 418.08666992]
[178.11602783 403.56332397]
[168.91207886 401.50393677]
[161.05310059 396.18524170]
[155.65422058 388.31063843]
[153.50021362 378.94958496]
[154.93159485 369.39242554]
[159.79164124 360.97262573]
[167.44229126 354.88055420]
[164.74870300 340.12438965]
[154.85171509 328.99340820]
[159.98512268 314.02816772]
[157.29154968 299.27197266]
[154.59796143 284.51580811]
[151.90438843 269.75964355]
[149.21080017 255.00346375]
[146.51722717 240.24728394]
[143.82365417 225.49111938]
[141.13006592 210.73493958]
[136.82075500 204.69856262]
[138.52359009 195.68820190]
[136.09684753 180.88580322]
[133.67012024 166.08341980]
[123.97570801 154.77555847]
[129.37846375 139.90542603]
[126.95172882 125.10302734]
[123.63628387 121.62186432]
[122.49459839 116.01018524]
[124.71468353 109.72324371]
[122.82393646 94.84288788]
[114.91332245 116.14293671]
[93.89868927 119.62889862]
[81.33729553 104.21725464]
[66.58111572 101.52367401]
[51.82494736 98.83009338]
[37.06877518 96.13651276]
[24.21249008 105.32844543]
[8.63596725 102.65496826]
[-0.41952223 89.70222473]
[2.41848469 74.15483856]
[15.46624851 65.23680115]
[30.98276138 68.23902130]
[39.76235199 81.38034058]
[54.51852417 84.07392120]
[69.27469635 86.76750183]
[84.03086853 89.46108246]
[91.07950592 80.69508362]
[102.84159088 76.77386475]
[94.42378235 64.35853577]
[86.00597382 51.94319916]
[71.85742188 44.86302185]
[71.11911774 29.98672485]
[62.70130920 17.57139015]
[55.26864624 12.20095158]
[54.24597549 4.85504866]
[46.05368805 -7.71023893]
[37.86140060 -20.27552605]
[29.66911697 -32.84081650]
[14.12399197 -34.53878403]
[3.34455919 -45.86741257]
[2.42053819 -61.47767258]
[11.78822327 -73.99887085]
[27.02447891 -77.51889038]
[40.93521118 -70.37567139]
[46.95220184 -55.94203949]
[42.23440552 -41.03310013]
[50.42668915 -28.46781158]
[58.61897659 -15.90252495]
[66.81126404 -3.33723712]
[75.11664581 9.15358353]
[83.53445435 21.56891823]
[97.08090973 27.76106834]
[98.42131042 43.52539062]
[106.83911896 55.94072723]
[115.25691986 68.35606384]
[130.24163818 69.03289795]
[139.74444580 57.42701340]
[149.24726868 45.82112503]
[158.75007629 34.21523666]
[168.25288391 22.60934830]
[164.56321716 12.53459644]
[165.40077209 1.91940582]
[170.54597473 -7.31061745]
[179.00396729 -13.50934887]
[189.19636536 -15.60361004]
[199.25553894 -13.27850628]
[209.37274170 -24.35290146]
[206.40769958 -39.46960831]
[212.83724976 -53.27229691]
[226.00570679 -60.55623245]
[240.76155090 -58.71142197]
[250.87875366 -69.78582001]
[260.99594116 -80.86021423]
[271.11315918 -91.93460846]
[281.23034668 -103.00900269]
[291.34756470 -114.08339691]
[294.34252930 -130.20674133]
[309.89135742 -135.41883850]
[321.99874878 -124.35794067]
[318.20962524 -108.40254974]
[302.42196655 -103.96619415]
[292.30474854 -92.89179993]
[282.18756104 -81.81740570]
[272.07034302 -70.74301147]
[261.95315552 -59.66861725]
[251.83593750 -48.59422302]
[255.00352478 -34.06478882]
[248.93643188 -20.29328537]
[235.76959229 -12.64556313]
[220.44712830 -14.23569870]
[210.32992554 -3.16130424]
[212.66966248 16.14935112]
[199.89857483 31.22210503]
[179.85876465 32.11215591]
[170.35595703 43.71804428]
[160.85314941 55.32393265]
[151.35034180 66.92981720]
[141.84753418 78.53570557]
[137.70429993 92.95214081]
[139.59504700 107.83250427]
[141.75413513 122.67630005]
[144.18086243 137.47869873]
[154.04885864 149.84532166]
[148.47251892 163.65667725]
[150.89924622 178.45907593]
[153.32598877 193.26147461]
[155.88624573 208.04136658]
[158.57981873 222.79753113]
[161.27340698 237.55371094]
[163.96697998 252.30989075]
[166.66055298 267.06607056]
[169.35414124 281.82223511]
[172.04771423 296.57839966]
[174.74130249 311.33456421]
[184.83094788 323.52102661]
[179.50488281 337.43081665]
[182.19845581 352.18698120]
[200.23463440 362.93289185]
[204.48977661 383.19366455]
[192.63937378 399.81201172]
[196.39070129 414.33535767]
[200.14202881 428.85870361]
[203.89335632 443.38204956]
[207.64468384 457.90539551]
[218.58738708 469.33203125]
[214.27890015 483.58987427]
[218.03022766 498.11322021]
[221.78155518 512.63653564]
[225.53288269 527.15991211]
[229.28422546 541.68322754]
[233.16650391 556.17211914]
[237.17942810 570.62536621]
[241.32266235 585.04180908]
[245.59588623 599.42028809]
[258.95996094 608.29608154]
[260.20935059 624.29040527]
[248.38557434 635.13378906]
[232.55885315 632.50805664]
[224.87008667 618.42749023]
[231.21743774 603.69348145]
[226.94422913 589.31500244]
[222.00752258 583.77996826]
[222.72618103 574.63830566]
[218.71325684 560.18505859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[4 156]
[5 155]
[7 153]
[8 152]
[9 151]
[10 150]
[11 149]
[18 146]
[19 145]
[21 143]
[22 142]
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[28 136]
[30 135]
[31 134]
[32 133]
[34 131]
[35 130]
[38 129]
[39 128]
[42 55]
[43 54]
[44 53]
[45 52]
[57 84]
[58 83]
[59 82]
[61 80]
[62 79]
[64 78]
[65 77]
[66 76]
[67 75]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[95 120]
[96 119]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[160 173]
[161 172]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
