%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:20:23 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PEX10)
} def

/sequence { (\
AUCAGUUCUCGCCCGUCUGGGCGUGGGCGUGGCCGGCGUGGCUGCUCGGGACCACCCGAACCCGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.082239537 ubox
2 20 0.004198925 ubox
2 26 0.004788597 ubox
2 29 0.079416968 ubox
2 32 0.110054185 ubox
2 36 0.003777958 ubox
2 67 0.005002263 ubox
3 19 0.007313692 ubox
3 25 0.009872809 ubox
3 26 0.003805050 ubox
3 31 0.268524196 ubox
3 35 0.004982836 ubox
3 66 0.006763905 ubox
4 18 0.007461633 ubox
4 24 0.010062698 ubox
4 30 0.275405992 ubox
5 17 0.007462208 ubox
5 28 0.984521340 ubox
5 33 0.006065701 ubox
5 37 0.007681240 ubox
5 68 0.004844349 ubox
6 26 0.004524204 ubox
6 27 0.984803243 ubox
6 29 0.003384730 ubox
6 32 0.005375671 ubox
6 36 0.007505671 ubox
6 67 0.004658038 ubox
7 25 0.006138558 ubox
7 26 0.983116951 ubox
7 27 0.045848677 ubox
7 31 0.004240751 ubox
7 32 0.004203089 ubox
7 35 0.006531299 ubox
7 66 0.003304174 ubox
8 25 0.982009285 ubox
8 26 0.059312477 ubox
8 27 0.007652523 ubox
8 31 0.007620803 ubox
8 36 0.004192084 ubox
8 40 0.005791780 ubox
9 25 0.056261400 ubox
9 26 0.007581767 ubox
9 35 0.004081377 ubox
9 36 0.003272035 ubox
10 23 0.995405520 ubox
10 25 0.006047162 ubox
10 29 0.018699537 ubox
10 35 0.004423665 ubox
10 38 0.019132269 ubox
10 40 0.003939668 ubox
11 22 0.999334501 ubox
11 24 0.004810630 ubox
11 28 0.019239109 ubox
11 33 0.009889548 ubox
11 37 0.019731626 ubox
11 39 0.005020960 ubox
12 21 0.999404014 ubox
12 23 0.004789330 ubox
12 27 0.019231051 ubox
12 32 0.010390938 ubox
12 36 0.019163166 ubox
12 38 0.005081897 ubox
13 20 0.999385496 ubox
13 21 0.007779296 ubox
13 26 0.019220175 ubox
13 31 0.010390443 ubox
13 35 0.018564983 ubox
13 36 0.006984477 ubox
14 19 0.997941850 ubox
14 20 0.009846961 ubox
14 25 0.019103887 ubox
14 29 0.010485385 ubox
14 35 0.008424174 ubox
15 22 0.004809030 ubox
15 24 0.017088721 ubox
15 28 0.010492595 ubox
15 33 0.017724025 ubox
15 34 0.009598720 ubox
16 21 0.004658656 ubox
16 23 0.006389071 ubox
16 27 0.010486206 ubox
16 32 0.014286353 ubox
17 26 0.010487210 ubox
17 31 0.014126531 ubox
17 32 0.014452980 ubox
18 25 0.010293469 ubox
18 31 0.014470319 ubox
19 24 0.008141122 ubox
19 30 0.018419169 ubox
19 69 0.011734933 ubox
20 68 0.012293029 ubox
20 69 0.003811279 ubox
21 28 0.020226362 ubox
21 39 0.007111029 ubox
21 68 0.003933994 ubox
22 27 0.020223458 ubox
22 38 0.011967116 ubox
22 66 0.014482447 ubox
23 37 0.042193286 ubox
23 65 0.028117202 ubox
24 36 0.042619796 ubox
24 64 0.028366538 ubox
25 34 0.004609307 ubox
25 63 0.028639471 ubox
25 69 0.119445750 ubox
26 33 0.004586580 ubox
26 34 0.047832726 ubox
26 62 0.028642058 ubox
26 68 0.126364053 ubox
26 69 0.043115025 ubox
27 33 0.047866289 ubox
27 37 0.009042305 ubox
27 39 0.034169247 ubox
27 61 0.028509936 ubox
27 65 0.008927844 ubox
27 68 0.044762770 ubox
28 32 0.047521528 ubox
28 36 0.008960995 ubox
28 38 0.036138307 ubox
28 64 0.008942821 ubox
28 66 0.132086156 ubox
28 67 0.031880026 ubox
29 34 0.005829164 ubox
29 37 0.046680442 ubox
29 39 0.004131745 ubox
29 45 0.046252453 ubox
29 55 0.005258251 ubox
29 63 0.008849867 ubox
29 65 0.142666750 ubox
29 68 0.011273044 ubox
30 36 0.046451774 ubox
30 38 0.010219984 ubox
30 44 0.046207090 ubox
30 54 0.005294466 ubox
30 64 0.142648451 ubox
30 67 0.011246082 ubox
31 37 0.014030980 ubox
31 43 0.046425304 ubox
31 53 0.005305503 ubox
31 62 0.011079278 ubox
31 63 0.142557946 ubox
31 69 0.935361139 ubox
32 39 0.022538337 ubox
32 42 0.046844970 ubox
32 52 0.005287632 ubox
32 61 0.012861448 ubox
32 62 0.142295433 ubox
32 65 0.011286003 ubox
32 68 0.971934070 ubox
33 38 0.023761721 ubox
33 41 0.046910965 ubox
33 49 0.004263435 ubox
33 50 0.003175318 ubox
33 64 0.010313799 ubox
33 67 0.972241815 ubox
34 40 0.046964173 ubox
34 44 0.006797005 ubox
34 48 0.004494014 ubox
34 58 0.142712491 ubox
34 64 0.005360836 ubox
34 66 0.969594311 ubox
35 39 0.029005879 ubox
35 43 0.008163709 ubox
35 46 0.004542023 ubox
35 47 0.004634054 ubox
35 57 0.143081020 ubox
35 63 0.009058584 ubox
35 65 0.685790060 ubox
35 69 0.105302866 ubox
36 42 0.010009171 ubox
36 45 0.026770610 ubox
36 56 0.143075565 ubox
36 62 0.009447522 ubox
36 65 0.682771417 ubox
36 68 0.106035415 ubox
37 41 0.009945369 ubox
37 44 0.026831090 ubox
37 64 0.963921944 ubox
37 66 0.086317976 ubox
37 67 0.075177451 ubox
38 43 0.018975902 ubox
38 45 0.006294057 ubox
38 55 0.143104060 ubox
38 61 0.013179438 ubox
38 63 0.964319125 ubox
38 65 0.140544405 ubox
38 68 0.003761076 ubox
39 44 0.006110929 ubox
39 54 0.143118930 ubox
39 60 0.013541755 ubox
39 64 0.149430056 ubox
39 67 0.003767381 ubox
40 53 0.143149388 ubox
40 62 0.964324008 ubox
40 63 0.154062631 ubox
40 69 0.140675602 ubox
41 52 0.143122600 ubox
41 61 0.962553170 ubox
41 62 0.154721232 ubox
41 65 0.005244294 ubox
41 68 0.142525670 ubox
42 49 0.012179462 ubox
42 50 0.141383793 ubox
42 64 0.005372951 ubox
42 67 0.142547963 ubox
43 48 0.012089000 ubox
43 49 0.140163412 ubox
43 58 0.003888678 ubox
43 66 0.142461540 ubox
44 57 0.003370442 ubox
44 63 0.003961036 ubox
44 65 0.142642183 ubox
44 68 0.003176175 ubox
45 64 0.142578190 ubox
45 67 0.003191029 ubox
46 59 0.964222078 ubox
47 58 0.989282787 ubox
47 64 0.004598352 ubox
48 56 0.011958382 ubox
48 57 0.989557249 ubox
48 63 0.006170778 ubox
49 55 0.014910517 ubox
49 56 0.989502586 ubox
49 57 0.004874936 ubox
49 62 0.006184535 ubox
50 55 0.983373284 ubox
50 56 0.006270667 ubox
50 61 0.006164337 ubox
56 67 0.005072069 ubox
57 66 0.005121047 ubox
58 65 0.005130533 ubox
61 67 0.014641528 ubox
62 66 0.014605963 ubox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
31 69 0.9500000 lbox
32 68 0.9500000 lbox
33 67 0.9500000 lbox
34 66 0.9500000 lbox
35 65 0.9500000 lbox
37 64 0.9500000 lbox
38 63 0.9500000 lbox
40 62 0.9500000 lbox
41 61 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
showpage
end
%%EOF
