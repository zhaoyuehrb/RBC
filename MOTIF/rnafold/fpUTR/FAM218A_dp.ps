%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FAM218A)
} def

/sequence { (\
GCUUCGACUUCCGGGUGAGACCGUGAAGGUGUGGCGCGACGUUGGAGACCGGGGCAGCGCCAUGUACCACAGUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.029500369 ubox
1 24 0.003238740 ubox
1 30 0.068144013 ubox
1 32 0.035399562 ubox
1 35 0.097367676 ubox
1 37 0.008991261 ubox
1 55 0.025023047 ubox
1 65 0.068902630 ubox
1 73 0.196268024 ubox
2 15 0.030574623 ubox
2 19 0.019692507 ubox
2 23 0.003338551 ubox
2 28 0.088607897 ubox
2 29 0.071065644 ubox
2 31 0.040306933 ubox
2 34 0.097647595 ubox
2 36 0.008981313 ubox
2 47 0.038645119 ubox
2 54 0.025041040 ubox
2 64 0.071442820 ubox
2 72 0.203398008 ubox
2 75 0.027627391 ubox
3 14 0.022967424 ubox
3 15 0.016478319 ubox
3 18 0.017353920 ubox
3 19 0.030853098 ubox
3 20 0.005911254 ubox
3 27 0.100433317 ubox
3 28 0.037251870 ubox
3 29 0.009413323 ubox
3 33 0.094870591 ubox
3 46 0.038812193 ubox
3 53 0.025008484 ubox
3 71 0.189745795 ubox
3 72 0.009354262 ubox
3 74 0.025785435 ubox
3 75 0.006439846 ubox
4 13 0.011022140 ubox
4 14 0.029410646 ubox
4 15 0.004015604 ubox
4 17 0.013223333 ubox
4 18 0.037386946 ubox
4 19 0.006349795 ubox
4 20 0.008516832 ubox
4 26 0.103194607 ubox
4 27 0.025030194 ubox
4 29 0.014270130 ubox
4 34 0.007869846 ubox
4 45 0.038821913 ubox
4 52 0.024962310 ubox
4 71 0.012966668 ubox
4 74 0.007782199 ubox
4 75 0.059902994 ubox
5 13 0.038674288 ubox
5 14 0.005959909 ubox
5 17 0.038953207 ubox
5 19 0.009322374 ubox
5 25 0.103694590 ubox
5 28 0.011309432 ubox
5 31 0.182862612 ubox
5 33 0.008459163 ubox
5 44 0.038856982 ubox
5 51 0.025025023 ubox
5 64 0.018090156 ubox
5 74 0.096729940 ubox
6 12 0.038801216 ubox
6 16 0.024114790 ubox
6 24 0.099907154 ubox
6 30 0.148101848 ubox
6 32 0.008138610 ubox
6 43 0.038830952 ubox
6 50 0.024826268 ubox
6 63 0.004224891 ubox
6 73 0.067815071 ubox
7 16 0.031512288 ubox
7 24 0.021302051 ubox
7 30 0.149547113 ubox
7 32 0.003465238 ubox
7 42 0.038860544 ubox
7 65 0.010164048 ubox
7 73 0.089036670 ubox
8 14 0.021417171 ubox
8 15 0.037071296 ubox
8 19 0.006458640 ubox
8 23 0.020875753 ubox
8 28 0.873854841 ubox
8 29 0.130616732 ubox
8 41 0.038745638 ubox
8 47 0.016858050 ubox
8 64 0.007511635 ubox
8 72 0.096502247 ubox
8 75 0.010647345 ubox
9 13 0.019334241 ubox
9 14 0.034282429 ubox
9 18 0.006428844 ubox
9 19 0.006184449 ubox
9 26 0.046547418 ubox
9 27 0.959600558 ubox
9 28 0.098719573 ubox
9 39 0.003562990 ubox
9 46 0.016794770 ubox
9 47 0.014677533 ubox
9 71 0.075597640 ubox
9 74 0.008409942 ubox
10 17 0.005947901 ubox
10 18 0.007010824 ubox
10 20 0.006675012 ubox
10 25 0.047043443 ubox
10 26 0.982546546 ubox
10 27 0.072656227 ubox
10 39 0.031439120 ubox
10 45 0.016673725 ubox
10 46 0.015809975 ubox
11 17 0.007124853 ubox
11 19 0.006821250 ubox
11 25 0.987113202 ubox
11 38 0.022717077 ubox
11 44 0.016600855 ubox
11 45 0.015975512 ubox
11 75 0.012923448 ubox
12 23 0.985497818 ubox
12 25 0.012763305 ubox
12 36 0.003429222 ubox
12 38 0.035187337 ubox
12 41 0.005379760 ubox
12 44 0.015639476 ubox
12 74 0.013193942 ubox
13 22 0.986004253 ubox
13 24 0.012006617 ubox
13 35 0.003327657 ubox
13 37 0.042268052 ubox
13 40 0.005837190 ubox
13 43 0.013529958 ubox
13 68 0.003228974 ubox
13 73 0.012010069 ubox
14 21 0.985289437 ubox
14 22 0.146486206 ubox
14 42 0.012812895 ubox
14 68 0.019019286 ubox
15 21 0.148747948 ubox
15 35 0.042510214 ubox
15 37 0.013781940 ubox
15 40 0.005142019 ubox
15 67 0.019049869 ubox
15 70 0.012824365 ubox
16 20 0.136066297 ubox
16 34 0.042371829 ubox
16 36 0.013800026 ubox
16 39 0.004907146 ubox
16 66 0.018898196 ubox
16 69 0.012841050 ubox
17 35 0.013823937 ubox
17 65 0.017281288 ubox
17 68 0.012803820 ubox
20 30 0.052804659 ubox
20 73 0.017443612 ubox
21 29 0.053580044 ubox
21 34 0.003529118 ubox
21 72 0.017905249 ubox
21 75 0.050773480 ubox
22 28 0.053581239 ubox
22 33 0.003535265 ubox
22 74 0.051369753 ubox
23 32 0.003258049 ubox
23 70 0.022694311 ubox
23 73 0.046771113 ubox
24 69 0.022768123 ubox
24 71 0.037319701 ubox
24 72 0.027230306 ubox
25 68 0.019701949 ubox
25 70 0.038422125 ubox
28 68 0.448310199 ubox
29 37 0.004243532 ubox
29 40 0.003680011 ubox
29 63 0.012629883 ubox
29 65 0.250255424 ubox
29 67 0.507926107 ubox
29 70 0.258524461 ubox
29 73 0.009796200 ubox
30 36 0.004238129 ubox
30 39 0.003533830 ubox
30 62 0.009024622 ubox
30 64 0.441532471 ubox
30 66 0.488501080 ubox
30 69 0.258150659 ubox
30 71 0.065376203 ubox
30 72 0.003538020 ubox
31 35 0.004042745 ubox
31 40 0.004242490 ubox
31 61 0.004766543 ubox
31 63 0.869457470 ubox
31 65 0.286919122 ubox
31 67 0.024721865 ubox
31 68 0.240859938 ubox
31 70 0.073396079 ubox
32 39 0.004213949 ubox
32 44 0.003397968 ubox
32 62 0.976729386 ubox
32 64 0.027506310 ubox
32 66 0.024689817 ubox
32 69 0.072554308 ubox
33 43 0.005610328 ubox
33 61 0.991430850 ubox
33 65 0.003843034 ubox
33 68 0.071573028 ubox
34 42 0.006267365 ubox
34 60 0.991528510 ubox
34 67 0.071171971 ubox
35 41 0.006341460 ubox
35 59 0.991552104 ubox
35 64 0.004054584 ubox
35 74 0.003431121 ubox
36 40 0.006064975 ubox
36 55 0.031750776 ubox
36 58 0.991882217 ubox
36 60 0.028489123 ubox
36 63 0.003541974 ubox
36 65 0.070514699 ubox
36 73 0.011251720 ubox
37 54 0.032136850 ubox
37 57 0.991602327 ubox
37 59 0.029196885 ubox
37 64 0.071371194 ubox
37 72 0.011560576 ubox
37 74 0.030285669 ubox
38 58 0.029122546 ubox
38 63 0.068703870 ubox
38 73 0.020286262 ubox
39 65 0.004473112 ubox
39 73 0.054977351 ubox
40 51 0.107838767 ubox
40 59 0.084815578 ubox
40 64 0.004623884 ubox
40 72 0.058496163 ubox
40 74 0.015592539 ubox
41 49 0.033100026 ubox
41 50 0.103545284 ubox
41 55 0.127845176 ubox
41 58 0.085510229 ubox
41 63 0.004468355 ubox
41 70 0.029686235 ubox
41 73 0.014863524 ubox
42 48 0.043117192 ubox
42 52 0.940092951 ubox
42 53 0.057564906 ubox
42 54 0.124042089 ubox
42 57 0.085485238 ubox
42 62 0.003364665 ubox
42 69 0.021059355 ubox
42 72 0.012993463 ubox
43 47 0.038955345 ubox
43 51 0.970070708 ubox
43 52 0.048022197 ubox
43 53 0.082301201 ubox
43 56 0.086042881 ubox
43 62 0.004501211 ubox
43 69 0.060992510 ubox
43 71 0.013793009 ubox
44 50 0.982923800 ubox
44 55 0.086045647 ubox
44 61 0.005381806 ubox
44 68 0.066538213 ubox
44 70 0.013794953 ubox
45 49 0.967121817 ubox
45 60 0.005377241 ubox
45 67 0.066503314 ubox
48 65 0.062682195 ubox
48 73 0.013621646 ubox
49 64 0.061089680 ubox
49 72 0.013957972 ubox
49 75 0.010009420 ubox
50 59 0.008412079 ubox
50 64 0.026930079 ubox
50 74 0.010124574 ubox
51 58 0.008576801 ubox
51 61 0.010327545 ubox
51 63 0.027257062 ubox
51 68 0.029628304 ubox
51 73 0.007310098 ubox
52 60 0.010306362 ubox
52 61 0.044112324 ubox
52 67 0.029657256 ubox
52 68 0.012590395 ubox
53 60 0.043790644 ubox
53 61 0.055564375 ubox
53 67 0.012559479 ubox
54 60 0.055877046 ubox
54 65 0.027208944 ubox
55 59 0.055722125 ubox
55 64 0.031951596 ubox
56 63 0.031250186 ubox
57 65 0.004344651 ubox
58 64 0.004447926 ubox
58 74 0.010136200 ubox
59 73 0.010262020 ubox
60 72 0.010257537 ubox
60 75 0.065013064 ubox
61 74 0.069288163 ubox
62 73 0.069095396 ubox
63 69 0.014348837 ubox
63 71 0.065795753 ubox
63 72 0.063317466 ubox
64 68 0.023973353 ubox
64 70 0.109053091 ubox
64 73 0.007312545 ubox
65 69 0.098393764 ubox
65 72 0.010021427 ubox
65 74 0.185445246 ubox
66 73 0.205145888 ubox
67 72 0.206286792 ubox
67 75 0.589163027 ubox
68 74 0.597594863 ubox
69 73 0.484365156 ubox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
42 52 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
45 49 0.9500000 lbox
showpage
end
%%EOF
