%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUUCGCAUCGCCGACCAACCUGAGGCGUUUUUGUUGUGGCGCGUGACCGGAGGAGGCGGGAGCUCAGGACCGGCGCCUUCUCCUUGCUUCUGGGGGUCGUGGCCUUGCUCCCGCUGUGCGGGAAAAGAAUCCAGGCCCUUCCACGCGCGUGUGGGUGCGGGGGCCCCGAAGUGCUCGUGGUUCCCCGCUAGGUCUCCGCUGGGGCAGGAACCGGAAUC\
) } def
/len { sequence length } bind def

/coor [
[31.00443077 426.56787109]
[28.88881111 441.41790771]
[37.33084488 455.06018066]
[31.79295349 470.11712646]
[16.52333260 475.03833008]
[3.23553038 466.04867554]
[2.12280941 450.04425049]
[14.03875446 439.30230713]
[16.15437508 424.45223999]
[9.15633202 421.75457764]
[-2.51418519 431.17788696]
[-4.83975315 416.35925293]
[-11.83779621 413.66159058]
[-20.23741722 426.08923340]
[-28.63703918 438.51687622]
[-21.33566475 451.96856689]
[-21.13353729 467.27276611]
[-28.07710266 480.91259766]
[-40.57078171 489.75378418]
[-55.74361420 491.76467896]
[-70.10900116 486.48318481]
[-80.36587524 475.12292480]
[-84.15728760 460.29446411]
[-80.61199951 445.40521240]
[-70.54468536 433.87664795]
[-56.26874542 428.35794067]
[-41.06468582 430.11724854]
[-32.66506195 417.68960571]
[-24.26543999 405.26196289]
[-17.70259476 391.77383423]
[-13.10773563 377.49493408]
[-8.51287460 363.21603394]
[-3.91801453 348.93713379]
[0.67684573 334.65820312]
[5.27170610 320.37930298]
[9.86656666 306.10040283]
[14.46142673 291.82147217]
[19.05628777 277.54257202]
[15.58960819 263.05700684]
[27.18227959 252.29037476]
[31.77713966 238.01145935]
[36.37200165 223.73255920]
[40.96686172 209.45364380]
[45.56172180 195.17472839]
[38.13512802 184.65072632]
[38.12331772 171.57563782]
[45.75453568 160.71984863]
[58.42773056 156.17289734]
[63.22418976 141.96043396]
[68.02064514 127.74797821]
[72.81710815 113.53552246]
[66.54203033 99.91114807]
[52.62369537 94.31830597]
[38.70536041 88.72545624]
[24.78702354 83.13261414]
[10.86868858 77.53976440]
[-3.04964685 71.94691467]
[-16.96798134 66.35407257]
[-30.88631821 60.76122284]
[-44.80465317 55.16837311]
[-58.72298813 49.57552719]
[-69.06598663 60.68349075]
[-82.72490692 67.30152130]
[-97.85249329 68.53457642]
[-112.40287781 64.21590424]
[-124.40821838 54.92956161]
[-132.24490356 41.93145752]
[-134.85308838 26.97947311]
[-131.88003540 12.09574509]
[-123.72782135 -0.70682681]
[-111.49897003 -9.69679832]
[-96.84732819 -13.65835094]
[-81.75441742 -12.05571556]
[-68.26142120 -5.10563707]
[-58.19316864 6.25194407]
[-52.91129684 20.48100853]
[-53.13014221 35.65719223]
[-39.21180725 41.25003815]
[-25.29347038 46.84288788]
[-11.37513542 52.43573380]
[2.54320049 58.02857971]
[16.46153641 63.62142944]
[30.37987137 69.21427155]
[44.29820633 74.80712128]
[58.21654129 80.39997101]
[72.13488007 85.99281311]
[78.78337097 82.52185822]
[69.25023651 70.94087219]
[57.98955536 61.03142548]
[59.78869629 46.13971329]
[73.08535004 39.19716644]
[86.33317566 46.23244858]
[88.02767181 61.13779068]
[92.08035278 75.57994080]
[98.72885132 72.10898590]
[102.09622192 57.49184418]
[105.46359253 42.87470627]
[108.83096313 28.25756454]
[112.19833374 13.64042282]
[115.56570435 -0.97671837]
[118.93307495 -15.59385967]
[117.81021881 -24.65070343]
[122.45290375 -30.39331627]
[126.02677917 -44.96134186]
[129.60066223 -59.52936935]
[123.10925293 -78.61956024]
[137.09936523 -91.97407532]
[140.25955200 -106.63740540]
[143.41973877 -121.30073547]
[137.09571838 -132.53611755]
[140.02423096 -144.68019104]
[150.10650635 -151.35493469]
[153.47387695 -165.97207642]
[156.84124756 -180.58921814]
[160.20861816 -195.20635986]
[163.57598877 -209.82350159]
[166.94335938 -224.44064331]
[164.60708618 -241.23284912]
[180.09631348 -248.12635803]
[191.00825500 -235.15077209]
[181.56050110 -221.07327271]
[178.19313049 -206.45613098]
[174.82575989 -191.83898926]
[171.45838928 -177.22184753]
[168.09101868 -162.60470581]
[164.72364807 -147.98756409]
[170.75671387 -131.50457764]
[158.08306885 -118.14054871]
[154.92288208 -103.47721863]
[151.76269531 -88.81388855]
[158.04847717 -80.77021027]
[158.89117432 -70.37643433]
[153.77253723 -61.04017639]
[144.16868591 -55.95549011]
[140.59480286 -41.38746262]
[137.02093506 -26.81943703]
[133.55021667 -12.22648811]
[130.18284607 2.39065266]
[126.81547546 17.00779343]
[123.44810486 31.62493515]
[120.08073425 46.24207687]
[116.71336365 60.85921860]
[113.34598541 75.47635651]
[125.08290863 84.81684875]
[138.57101440 78.25399780]
[152.05912781 71.69115448]
[165.54722595 65.12831116]
[170.46914673 50.10997772]
[184.60658264 43.04537582]
[199.57203674 48.12580109]
[206.48677063 62.33713150]
[201.24841309 77.24803925]
[186.96476746 84.01213837]
[172.11007690 78.61641693]
[158.62196350 85.17926025]
[145.13386536 91.74211121]
[131.64575195 98.30495453]
[132.38748169 105.76818848]
[133.87094116 120.69464874]
[134.61267090 128.15788269]
[149.12866211 131.93756104]
[163.64466858 135.71722412]
[178.16065979 139.49690247]
[192.67665100 143.27656555]
[207.19264221 147.05624390]
[221.70863342 150.83590698]
[237.01315308 146.82560730]
[247.38012695 157.52024841]
[261.89611816 161.29991150]
[276.43847656 164.97677612]
[291.00650024 168.55065918]
[305.57455444 172.12454224]
[319.98483276 165.07307434]
[334.42025757 172.07290649]
[337.80722046 187.75436401]
[327.54751587 200.08796692]
[311.51150513 199.61244202]
[302.00067139 186.69256592]
[287.43264771 183.11868286]
[272.86462402 179.54479980]
[265.62536621 181.00273132]
[258.11645508 175.81590271]
[243.60044861 172.03623962]
[229.33421326 176.31687927]
[217.92897034 165.35189819]
[203.41297913 161.57223511]
[188.89697266 157.79255676]
[174.38098145 154.01289368]
[159.86499023 150.23321533]
[145.34899902 146.45355225]
[130.83300781 142.67387390]
[108.95481873 141.63146973]
[93.47723389 131.85920715]
[87.02956390 118.33197784]
[82.23310852 132.54443359]
[77.43664551 146.75689697]
[72.64019012 160.96936035]
[80.69057465 176.50463867]
[75.12041473 192.73475647]
[59.84062958 199.76959229]
[55.24576950 214.04850769]
[50.65090942 228.32740784]
[46.05604935 242.60632324]
[41.46118927 256.88522339]
[44.59921265 272.39212036]
[33.33519745 282.13742065]
[28.74033546 296.41635132]
[24.14547539 310.69525146]
[19.55061531 324.97415161]
[14.95575523 339.25308228]
[10.36089516 353.53198242]
[5.76603460 367.81088257]
[1.17117441 382.08981323]
[-3.42368579 396.36871338]
[7.45435715 386.04067993]
[21.41251373 380.54797363]
[36.31894684 382.22076416]
[48.71248245 390.67062378]
[55.71541214 403.93557739]
[55.70170975 418.93557739]
[48.67454910 432.18771362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[13 29]
[14 28]
[15 27]
[30 214]
[31 213]
[32 212]
[33 211]
[34 210]
[35 209]
[36 208]
[37 207]
[38 206]
[40 204]
[41 203]
[42 202]
[43 201]
[44 200]
[48 197]
[49 196]
[50 195]
[51 194]
[52 86]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[61 77]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
[100 138]
[101 137]
[103 136]
[104 135]
[105 134]
[107 130]
[108 129]
[109 128]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
[144 157]
[145 156]
[146 155]
[147 154]
[160 191]
[161 190]
[162 189]
[163 188]
[164 187]
[165 186]
[166 185]
[168 183]
[169 182]
[170 180]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
