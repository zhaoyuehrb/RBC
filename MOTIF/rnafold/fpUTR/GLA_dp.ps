%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GLA)
} def

/sequence { (\
AAACAAUAACGUCAUUAUUUAAUAAGUCAUCGGUGAUUGGUCCGCCCCUGAGGUUAAUCUUAAAAGCCCAGGUUACCCGCGGAAAUUUAUGCUGUCCGGUCACCGUGACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.030797425 ubox
1 19 0.011259921 ubox
1 20 0.092034049 ubox
2 15 0.030606373 ubox
2 16 0.023968242 ubox
2 18 0.013009846 ubox
2 19 0.100790898 ubox
2 20 0.038120683 ubox
3 12 0.258309723 ubox
3 15 0.021278497 ubox
3 18 0.098106196 ubox
3 19 0.030422547 ubox
4 11 0.273197437 ubox
5 16 0.130281789 ubox
5 19 0.333118711 ubox
5 20 0.037168818 ubox
6 12 0.032239007 ubox
6 15 0.140837634 ubox
6 18 0.376835167 ubox
6 19 0.034729817 ubox
6 23 0.022090362 ubox
7 11 0.030911625 ubox
7 14 0.135149023 ubox
7 17 0.383264120 ubox
7 21 0.051530207 ubox
7 22 0.021086052 ubox
7 24 0.015708873 ubox
8 16 0.382372623 ubox
8 19 0.023579369 ubox
8 20 0.054442744 ubox
8 23 0.015769426 ubox
9 15 0.339306209 ubox
9 18 0.026196779 ubox
9 19 0.049145149 ubox
9 27 0.004297434 ubox
10 26 0.005508843 ubox
11 18 0.038969733 ubox
11 23 0.022561161 ubox
11 109 0.028844739 ubox
12 17 0.037639120 ubox
12 22 0.022671414 ubox
12 108 0.028854334 ubox
13 107 0.028837429 ubox
14 23 0.088291694 ubox
14 106 0.028131848 ubox
15 22 0.092259913 ubox
15 25 0.155754460 ubox
15 26 0.003446328 ubox
15 105 0.011681131 ubox
16 21 0.083798324 ubox
16 24 0.178770952 ubox
16 25 0.023530736 ubox
17 23 0.178797456 ubox
17 27 0.005151882 ubox
18 22 0.158752999 ubox
18 25 0.054667416 ubox
18 26 0.005712235 ubox
19 24 0.060129453 ubox
19 25 0.028867776 ubox
20 24 0.026923964 ubox
20 25 0.023265567 ubox
26 109 0.997783469 ubox
27 108 0.999111198 ubox
28 107 0.999493978 ubox
29 106 0.981496842 ubox
30 105 0.221989109 ubox
31 105 0.973923130 ubox
32 104 0.999932287 ubox
33 103 0.999989897 ubox
34 102 0.999791481 ubox
35 101 0.999983221 ubox
36 100 0.999832109 ubox
37 99 0.998859411 ubox
38 98 0.996624285 ubox
39 77 0.003250718 ubox
39 93 0.006781464 ubox
39 96 0.008485310 ubox
39 97 0.999813480 ubox
40 76 0.003411132 ubox
40 86 0.004789068 ubox
40 87 0.003368668 ubox
40 92 0.010143335 ubox
40 95 0.011302349 ubox
40 96 0.999226211 ubox
41 75 0.003389664 ubox
41 82 0.003912424 ubox
41 83 0.988863958 ubox
41 85 0.011723195 ubox
41 89 0.004786199 ubox
41 91 0.010216365 ubox
41 94 0.053924884 ubox
42 81 0.003822882 ubox
42 82 0.996951583 ubox
43 79 0.004444487 ubox
43 81 0.997007243 ubox
43 94 0.035870750 ubox
44 73 0.004035892 ubox
44 78 0.006017289 ubox
44 80 0.996990952 ubox
44 92 0.043884235 ubox
44 93 0.024917914 ubox
44 95 0.016486613 ubox
45 72 0.003880419 ubox
45 79 0.995760694 ubox
45 82 0.004627060 ubox
45 91 0.043895498 ubox
45 94 0.016557494 ubox
46 53 0.003991595 ubox
46 71 0.003682470 ubox
46 72 0.113284440 ubox
46 81 0.004794527 ubox
46 82 0.019505347 ubox
47 52 0.004013669 ubox
47 71 0.080511126 ubox
47 72 0.988169487 ubox
47 81 0.019449290 ubox
47 82 0.009698062 ubox
48 71 0.992868595 ubox
48 72 0.016556037 ubox
48 81 0.009708362 ubox
48 82 0.015573367 ubox
49 62 0.008322158 ubox
49 70 0.995955214 ubox
49 71 0.016025779 ubox
49 75 0.005719772 ubox
49 79 0.021148327 ubox
49 81 0.015641090 ubox
50 61 0.009033888 ubox
50 69 0.995970056 ubox
50 74 0.006022126 ubox
50 78 0.062712821 ubox
50 80 0.016408944 ubox
51 60 0.010016148 ubox
51 61 0.004881131 ubox
51 73 0.005976196 ubox
52 59 0.010026376 ubox
52 60 0.005082820 ubox
52 68 0.996207736 ubox
52 77 0.068121773 ubox
52 78 0.047841631 ubox
53 58 0.006798280 ubox
53 59 0.005126721 ubox
53 67 0.996287249 ubox
53 76 0.068174258 ubox
53 77 0.047771465 ubox
54 63 0.044616496 ubox
54 64 0.015729043 ubox
54 65 0.087800268 ubox
54 66 0.986729032 ubox
54 75 0.049580014 ubox
55 62 0.116303944 ubox
55 63 0.039840950 ubox
55 64 0.122514759 ubox
55 65 0.904068063 ubox
55 75 0.066099031 ubox
56 61 0.125196109 ubox
56 74 0.081466559 ubox
57 73 0.082824999 ubox
58 72 0.082440725 ubox
59 66 0.025413010 ubox
59 71 0.082424419 ubox
59 72 0.011232538 ubox
60 65 0.027593811 ubox
60 66 0.003299041 ubox
60 70 0.078027951 ubox
60 71 0.011263745 ubox
61 65 0.007878089 ubox
61 70 0.013997796 ubox
65 74 0.006904983 ubox
66 73 0.007582100 ubox
67 72 0.007641743 ubox
71 78 0.018116582 ubox
72 77 0.020116119 ubox
72 86 0.003818768 ubox
73 84 0.009425342 ubox
73 85 0.010220631 ubox
74 83 0.010742732 ubox
74 84 0.011435437 ubox
75 95 0.011857333 ubox
76 82 0.030144200 ubox
76 94 0.012775354 ubox
77 81 0.030032681 ubox
78 94 0.009494616 ubox
79 92 0.057267886 ubox
79 95 0.022158763 ubox
80 91 0.057379154 ubox
80 94 0.023164897 ubox
80 98 0.004462515 ubox
81 90 0.055974918 ubox
81 93 0.023167618 ubox
81 97 0.004636250 ubox
82 88 0.006580015 ubox
82 92 0.023134606 ubox
82 96 0.004651999 ubox
83 87 0.007189302 ubox
83 95 0.005180094 ubox
85 95 0.062649652 ubox
86 94 0.064850765 ubox
88 94 0.026059720 ubox
89 93 0.024526757 ubox
89 95 0.029847625 ubox
90 94 0.029248595 ubox
26 109 0.9500000 lbox
27 108 0.9500000 lbox
28 107 0.9500000 lbox
29 106 0.9500000 lbox
31 105 0.9500000 lbox
32 104 0.9500000 lbox
33 103 0.9500000 lbox
34 102 0.9500000 lbox
35 101 0.9500000 lbox
36 100 0.9500000 lbox
37 99 0.9500000 lbox
38 98 0.9500000 lbox
39 97 0.9500000 lbox
40 96 0.9500000 lbox
41 83 0.9500000 lbox
42 82 0.9500000 lbox
43 81 0.9500000 lbox
44 80 0.9500000 lbox
45 79 0.9500000 lbox
47 72 0.9500000 lbox
48 71 0.9500000 lbox
49 70 0.9500000 lbox
50 69 0.9500000 lbox
52 68 0.9500000 lbox
53 67 0.9500000 lbox
54 66 0.9500000 lbox
55 65 0.9500000 lbox
showpage
end
%%EOF
