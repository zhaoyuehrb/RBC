%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGAAACGCUGGGGCCGGCCCGCUCCCCCCCACGUGUCCGCCGGAGUUUCUCCACCAGCAACAUGGCCGCCGCCUGAGAGGAGAGCCGGGCCGCCGCCGUCUCUGCAGCCCGCGGGUAACUGGGCCGUUGCCGCCGUCCGCGCUCGGCCCCCGCGGAGAGAUCGAGCUGAAGGACUGCGCGGCUGGCUCUCCUCUAGU\
) } def
/len { sequence length } bind def

/coor [
[158.40467834 123.44744873]
[149.94824219 135.83651733]
[137.49165344 144.19313049]
[122.82098389 147.31909180]
[108.04255676 144.76718140]
[98.02873993 155.93515015]
[88.01491547 167.10310364]
[84.56274414 182.54309082]
[70.30550385 186.85360718]
[60.29168701 198.02156067]
[50.27786255 209.18952942]
[46.87533188 217.67457581]
[40.02041626 220.45175171]
[29.83412361 231.46263123]
[19.64783096 242.47351074]
[9.46153736 253.48439026]
[-0.72475576 264.49526978]
[-1.00522435 277.39511108]
[-9.72216702 286.35696411]
[-21.80852318 286.95401001]
[-32.16482162 297.80514526]
[-31.54564476 313.59732056]
[-42.33575821 325.14498901]
[-58.13357544 325.59716797]
[-69.56653595 314.68557739]
[-69.85166931 298.88385010]
[-58.81980133 287.56689453]
[-43.01595306 287.44885254]
[-32.65965271 276.59771729]
[-29.44311142 259.34915161]
[-11.73563385 254.30897522]
[-1.54934061 243.29809570]
[8.63695240 232.28721619]
[18.82324600 221.27633667]
[29.00953865 210.26545715]
[39.10990143 199.17570496]
[49.12372208 188.00775146]
[59.13754654 176.83978271]
[61.87346268 162.19860840]
[76.84695435 157.08927917]
[86.86077881 145.92132568]
[96.87459564 134.75335693]
[93.87031555 127.88136292]
[78.96339417 126.21296692]
[87.86175537 114.13738251]
[84.85747528 107.26538849]
[69.85929108 107.03210449]
[54.86110306 106.79882812]
[39.86291885 106.56555176]
[23.93166924 112.36483765]
[13.94881821 98.66158295]
[24.35301018 85.27542877]
[40.09619522 91.56736755]
[55.09437943 91.80064392]
[70.09256744 92.03392029]
[85.09075165 92.26719666]
[87.60713196 85.20194244]
[73.47661591 80.16918945]
[59.34609985 75.13644409]
[45.21567154 70.10345459]
[50.24888992 55.97311020]
[64.37885284 61.00592804]
[78.50936127 66.03868103]
[92.63987732 71.07142639]
[95.15625000 64.00617218]
[83.38733673 54.70602798]
[74.70716095 51.83759308]
[71.50920105 45.16859055]
[59.88634109 35.68654633]
[48.26348495 26.20449829]
[31.99788475 24.11588669]
[25.92438698 8.88287544]
[36.29088593 -3.82412100]
[52.43321609 -0.93323243]
[57.74552917 14.58164215]
[69.36838531 24.06368828]
[80.99124146 33.54573441]
[92.68748474 42.93711472]
[104.45639801 52.23725891]
[119.30969238 54.32998657]
[133.19010925 48.64366150]
[147.07051086 42.95733643]
[160.95091248 37.27100754]
[174.83132935 31.58468246]
[188.71173096 25.89835739]
[202.59213257 20.21203041]
[216.47254944 14.52570438]
[230.35295105 8.83937836]
[244.23335266 3.15305281]
[258.11376953 -2.53327346]
[271.99417114 -8.21959972]
[285.87457275 -13.90592575]
[292.63537598 -20.05938721]
[300.01535034 -19.57089806]
[313.98248291 -25.04067039]
[327.94964600 -30.51044273]
[341.91680908 -35.98021698]
[348.77249146 -42.02779007]
[356.14398193 -41.42458725]
[370.19451904 -46.67648697]
[380.41213989 -58.75584030]
[395.04281616 -55.96444702]
[409.09335327 -61.21634293]
[423.14389038 -66.46823883]
[430.09280396 -72.40846252]
[437.45401001 -71.69069672]
[451.58450317 -76.72344208]
[461.98873901 -88.64243317]
[476.57427979 -85.62384796]
[490.70477295 -90.65659332]
[504.83529663 -95.68934631]
[518.96582031 -100.72209930]
[532.70977783 -106.73065948]
[546.00000000 -113.68560791]
[559.29016113 -120.64056396]
[572.58032227 -127.59552002]
[585.87048340 -134.55047607]
[599.16064453 -141.50541687]
[612.45080566 -148.46037292]
[598.51391602 -154.00682068]
[592.44897461 -167.72601318]
[597.72680664 -181.76684570]
[611.32702637 -188.09411621]
[625.46655273 -183.08689880]
[632.05383301 -169.61068726]
[627.31951904 -155.37814331]
[641.19995117 -161.06446838]
[655.08038330 -166.75079346]
[668.96075439 -172.43711853]
[682.84118652 -178.12344360]
[688.53704834 -189.70108032]
[700.22088623 -194.14942932]
[711.43115234 -189.59230042]
[725.39831543 -195.06208801]
[732.25396729 -201.10964966]
[739.62542725 -200.50645447]
[753.67596436 -205.75834656]
[761.61175537 -219.70118713]
[777.48229980 -222.04753113]
[789.11309814 -210.99743652]
[787.58197021 -195.02761841]
[774.06347656 -186.38874817]
[758.92785645 -191.70780945]
[744.87731934 -186.45591736]
[730.86804199 -181.09492493]
[716.90087891 -175.62515259]
[706.70849609 -161.34320068]
[688.52746582 -164.24304199]
[674.64709473 -158.55670166]
[660.76666260 -152.87037659]
[646.88629150 -147.18405151]
[633.00585938 -141.49772644]
[619.40576172 -135.17021179]
[606.11560059 -128.21525574]
[592.82543945 -121.26029968]
[579.53527832 -114.30534363]
[566.24511719 -107.35039520]
[552.95495605 -100.39543915]
[539.66473389 -93.44049072]
[554.38793945 -90.57218170]
[565.29974365 -80.27980804]
[569.02258301 -65.74913788]
[564.40423584 -51.47782135]
[552.87408447 -41.88322830]
[538.00109863 -39.93514633]
[524.38891602 -46.23656845]
[516.25085449 -58.83702087]
[516.10583496 -73.83631897]
[523.99853516 -86.59158325]
[509.86804199 -81.55883026]
[495.73754883 -76.52608490]
[481.60702515 -71.49333191]
[472.21350098 -59.93431854]
[456.61724854 -62.59292984]
[442.48675537 -57.56018066]
[428.39578247 -52.41770172]
[414.34524536 -47.16580582]
[400.29470825 -41.91390991]
[391.08209229 -30.21020699]
[375.44641113 -32.62594986]
[361.39587402 -27.37405205]
[347.38659668 -22.01305580]
[333.41943359 -16.54328156]
[319.45227051 -11.07350922]
[305.48510742 -5.60373688]
[291.56091309 -0.02551856]
[277.68051147 5.66080761]
[263.80007935 11.34713364]
[249.91967773 17.03345871]
[236.03927612 22.71978569]
[222.15887451 28.40611267]
[208.27845764 34.09243774]
[194.39805603 39.77876282]
[180.51765442 45.46509171]
[166.63723755 51.15141678]
[152.75683594 56.83774185]
[138.87643433 62.52406693]
[124.99602509 68.21039581]
[139.47276306 72.13773346]
[151.45137024 81.16618347]
[159.21427917 94.00118256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 42]
[6 41]
[7 40]
[9 38]
[10 37]
[11 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[20 29]
[21 28]
[46 56]
[47 55]
[48 54]
[49 53]
[65 79]
[66 78]
[68 77]
[69 76]
[70 75]
[80 198]
[81 197]
[82 196]
[83 195]
[84 194]
[85 193]
[86 192]
[87 191]
[88 190]
[89 189]
[90 188]
[91 187]
[92 186]
[94 185]
[95 184]
[96 183]
[97 182]
[99 181]
[100 180]
[102 178]
[103 177]
[104 176]
[106 175]
[107 174]
[109 172]
[110 171]
[111 170]
[112 169]
[113 159]
[114 158]
[115 157]
[116 156]
[117 155]
[118 154]
[119 153]
[126 152]
[127 151]
[128 150]
[129 149]
[130 148]
[133 146]
[134 145]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
