%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUUGUUUCAUGAUUACAUAACUUCUUUCUAGUUAGGAAUUAGGACAGUGUAAGAAGGCCAUCUACAAUCAAGAUUGAGAGUGGCUCUAACAAGUGCCAUUUUUCCUUGUUAGCUUUCAUUUCUCAGCCCUUUACAAGAUUAAAAUAGUCUGCAGUUUAAUCUCUCCAAAGCUUUACGGACAGUGAUUCUGUCCUAAACAAGACAGUGACUCCAGGAUUUCUGAAGACUAUUGUGGAAGAAGCAUCCAUUAAG\
GCCAAGCUAUAACAUCAGAA\
) } def
/len { sequence length } bind def

/coor [
[16.56457329 293.75262451]
[7.82918644 292.32800293]
[-0.62104863 289.70492554]
[-8.62260056 285.93493652]
[-17.41172981 298.09024048]
[-26.20085907 310.24551392]
[-34.98999023 322.40081787]
[-43.77912140 334.55612183]
[-52.56824875 346.71139526]
[-61.35737991 358.86669922]
[-62.40250015 365.33258057]
[-65.99798584 369.67144775]
[-70.48751068 371.19558716]
[-79.55105591 383.14767456]
[-88.61460876 395.09973145]
[-97.67815399 407.05181885]
[-106.74169922 419.00390625]
[-103.38528442 432.02432251]
[-108.06081390 444.42379761]
[-118.85720825 451.76763916]
[-131.71862793 451.56732178]
[-140.91763306 463.41546631]
[-150.11663818 475.26358032]
[-159.31564331 487.11172485]
[-168.51463318 498.95986938]
[-165.04034424 514.20660400]
[-172.22526550 528.09588623]
[-186.67687988 534.06951904]
[-201.57160950 529.30700684]
[-209.87658691 516.05706787]
[-207.67047119 500.57586670]
[-195.99491882 490.17321777]
[-180.36277771 489.76086426]
[-171.16377258 477.91271973]
[-161.96478271 466.06457520]
[-152.76577759 454.21646118]
[-143.56677246 442.36831665]
[-146.36965942 425.76824951]
[-136.08181763 412.01748657]
[-118.69377136 409.94033813]
[-109.63022614 397.98828125]
[-100.56668091 386.03619385]
[-91.50313568 374.08410645]
[-82.43959045 362.13204956]
[-73.51267242 350.07757568]
[-64.72354126 337.92227173]
[-55.93441391 325.76699829]
[-47.14528656 313.61169434]
[-38.35615540 301.45639038]
[-29.56702423 289.30108643]
[-20.77789497 277.14581299]
[-34.04292679 259.95748901]
[-40.75419998 239.28921509]
[-40.11643219 217.54914856]
[-32.19137955 197.27476501]
[-17.89209938 180.83676147]
[1.12221599 170.16180420]
[22.63875580 166.50674438]
[44.14860916 170.31066895]
[50.89754486 156.91470337]
[57.64648056 143.51873779]
[64.39541626 130.12277222]
[56.67472076 117.26232910]
[41.67860794 116.92088318]
[26.68249512 116.57942963]
[11.68638229 116.23798370]
[1.50126910 128.10379028]
[-13.93649864 130.59564209]
[-27.33767891 122.53696442]
[-32.37464523 107.73281097]
[-26.66909409 93.17325592]
[-12.91501427 85.73287201]
[2.39333987 88.92478180]
[12.02783108 101.24187469]
[27.02394485 101.58332062]
[42.02005768 101.92476654]
[57.01617050 102.26621246]
[59.87583923 94.26915741]
[64.11195374 87.44984436]
[51.20778275 79.80247498]
[38.30361176 72.15509796]
[25.39944077 64.50772095]
[12.49526787 56.86034775]
[-0.40890411 49.21297073]
[-13.31307602 41.56559753]
[-26.21724892 33.91822052]
[-39.12142181 26.27084732]
[-54.93807602 25.89140511]
[-61.94240189 12.74649239]
[-74.84657288 5.09911728]
[-91.24188995 5.45360851]
[-99.51403809 -8.70632076]
[-91.15334320 -22.81414795]
[-74.76056671 -22.35695076]
[-67.19919586 -7.80505466]
[-54.29502487 -0.15767948]
[-39.40136337 -0.32522830]
[-31.47404480 13.36667442]
[-18.56987381 21.01404953]
[-5.66570091 28.66142464]
[7.23847103 36.30879974]
[20.14264297 43.95617676]
[33.04681396 51.60354996]
[45.95098877 59.25092316]
[58.85515976 66.89830017]
[71.75933075 74.54567719]
[76.17478943 70.37201691]
[81.19872284 66.95503235]
[76.49855804 52.71043777]
[71.79840088 38.46583939]
[67.09824371 24.22124481]
[62.39808273 9.97664928]
[43.98582840 1.84782565]
[37.64535904 -16.93047333]
[47.06517410 -34.01903152]
[41.88142776 -48.09485626]
[36.69768524 -62.17067719]
[21.54869080 -64.70121002]
[9.70475197 -74.47958374]
[4.35182905 -88.87548065]
[6.92983007 -104.01646423]
[16.74528694 -115.82969666]
[31.15788841 -121.13746643]
[46.29072189 -118.51202393]
[58.07312393 -108.65958405]
[63.33569717 -94.23041534]
[60.66282654 -79.10588837]
[50.77350616 -67.35442352]
[55.95725250 -53.27860260]
[61.14099884 -39.20277786]
[71.21113586 -37.58483505]
[79.77925873 -31.90486336]
[85.27636719 -23.12312317]
[86.66303253 -12.77470303]
[83.62530518 -2.70130944]
[76.64267731 5.27649021]
[81.34283447 19.52108574]
[86.04299927 33.76568222]
[90.74315643 48.01027679]
[95.44331360 62.25487137]
[104.55304718 61.43683624]
[113.78644562 62.83160782]
[122.60318756 66.44888306]
[130.46623230 72.16594696]
[136.87432861 79.73004150]
[141.39353943 88.76866913]
[155.28417969 83.10738373]
[169.17481995 77.44609833]
[183.06546021 71.78480530]
[196.95610046 66.12351990]
[210.84674072 60.46223068]
[224.73738098 54.80094528]
[238.62800598 49.13965607]
[248.48735046 36.76613617]
[263.19354248 39.12768936]
[277.08419800 33.46640015]
[290.97482300 27.80511284]
[294.58819580 17.59704208]
[303.03561401 11.17790699]
[313.40142822 10.46165466]
[322.26928711 15.44362164]
[336.28518677 10.09999657]
[350.30111694 4.75637054]
[364.31701660 -0.58725506]
[378.33291626 -5.93088055]
[378.15756226 -21.07005501]
[383.16296387 -35.32901001]
[392.72683716 -46.99317932]
[405.67993164 -54.66700363]
[420.44903564 -57.44091034]
[435.24807739 -54.99908066]
[448.29406738 -47.65526581]
[458.02185059 -36.31263733]
[472.03778076 -41.65626526]
[486.05368042 -46.99988937]
[499.84564209 -52.89750671]
[513.39178467 -59.33975983]
[526.93786621 -65.78201294]
[533.31335449 -72.26866150]
[540.67504883 -72.21951294]
[554.29364014 -78.50716400]
[567.91217041 -84.79480743]
[581.53076172 -91.08245850]
[595.14935303 -97.37010193]
[608.76788330 -103.65775299]
[615.63909912 -118.15487671]
[631.28979492 -121.68115997]
[643.71417236 -111.53153992]
[643.38128662 -95.49194336]
[630.54650879 -85.86656952]
[615.05554199 -90.03918457]
[601.43701172 -83.75153351]
[587.81842041 -77.46388245]
[574.19982910 -71.17623901]
[560.58129883 -64.88858795]
[546.96270752 -58.60094070]
[533.38012695 -52.23588943]
[519.83398438 -45.79363632]
[506.28790283 -39.35138702]
[520.54284668 -34.68279266]
[528.54339600 -21.99455452]
[526.61163330 -7.11946344]
[515.63562012 3.10438704]
[500.66104126 3.97708368]
[488.57171631 -4.90255260]
[484.92510986 -19.45254517]
[491.39730835 -32.98398209]
[477.38140869 -27.64035606]
[463.36547852 -22.29673004]
[463.65802002 -7.35685968]
[458.81237793 6.80820465]
[449.39520264 18.48258209]
[436.52801514 26.24513245]
[421.75387573 29.14243889]
[406.85217285 26.80587387]
[393.62445068 19.49837875]
[383.67654419 8.08502674]
[369.66064453 13.42865276]
[355.64474487 18.77227783]
[341.62881470 24.11590385]
[327.61291504 29.45952988]
[316.49386597 45.30572891]
[296.63610840 41.69575119]
[282.74548340 47.35704041]
[268.85482788 53.01832581]
[259.98904419 64.98691559]
[244.28930664 63.03029251]
[230.39866638 68.69158173]
[216.50802612 74.35286713]
[202.61738586 80.01416016]
[188.72674561 85.67544556]
[174.83610535 91.33673096]
[160.94546509 96.99802399]
[147.05484009 102.65930939]
[143.83602905 117.30988312]
[154.07432556 128.27241516]
[164.31262207 139.23495483]
[174.55091858 150.19749451]
[184.78921509 161.16003418]
[200.39408875 160.14915466]
[212.96723938 169.44702148]
[216.57197571 184.66345215]
[209.50628662 198.61372375]
[195.10636902 204.71093750]
[180.17140198 200.07618713]
[171.75323486 186.89784241]
[173.82667542 171.39833069]
[163.58837891 160.43579102]
[153.35008240 149.47325134]
[143.11178589 138.51071167]
[132.87348938 127.54817963]
[121.30979919 137.26594543]
[107.08245087 142.37911987]
[91.95129395 142.24530029]
[77.79138184 136.87170410]
[71.04244232 150.26766968]
[64.29351044 163.66363525]
[57.54457474 177.05960083]
[64.59972382 182.49127197]
[70.83024597 188.84808350]
[76.11595154 196.00630188]
[80.35501099 203.82676697]
[83.46598053 212.15751648]
[85.38927460 220.83683777]
[86.08838654 229.69638062]
[85.55053711 238.56437683]
[83.78693390 247.26901245]
[80.83250427 255.64175415]
[76.74523926 263.52059937]
[71.60504150 270.75320435]
[65.51214600 277.19985962]
[58.58520508 282.73617554]
[50.95893860 287.25546265]
[42.78153992 290.67077637]
[34.21178436 292.91668701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 51]
[5 50]
[6 49]
[7 48]
[8 47]
[9 46]
[10 45]
[13 44]
[14 43]
[15 42]
[16 41]
[17 40]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[59 258]
[60 257]
[61 256]
[62 255]
[63 77]
[64 76]
[65 75]
[66 74]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[89 96]
[90 95]
[108 140]
[109 139]
[110 138]
[111 137]
[112 136]
[115 130]
[116 129]
[117 128]
[146 234]
[147 233]
[148 232]
[149 231]
[150 230]
[151 229]
[152 228]
[153 227]
[155 225]
[156 224]
[157 223]
[161 221]
[162 220]
[163 219]
[164 218]
[165 217]
[173 209]
[174 208]
[175 207]
[176 199]
[177 198]
[178 197]
[180 196]
[181 195]
[182 194]
[183 193]
[184 192]
[185 191]
[235 251]
[236 250]
[237 249]
[238 248]
[239 247]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
