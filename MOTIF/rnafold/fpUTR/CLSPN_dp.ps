%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLSPN)
} def

/sequence { (\
GACGGCGGGAGCCGCUGCUCUCCGGCUGAGGGAAUCAGAGACAGCUCCGUCCCUAGUGGAGCGCAGGGGAGGCAGAAGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.017776159 ubox
1 22 0.003319474 ubox
1 36 0.005793372 ubox
1 80 0.654837633 ubox
2 19 0.017756738 ubox
2 21 0.003296897 ubox
2 35 0.005643624 ubox
2 79 0.663800042 ubox
3 14 0.600140538 ubox
3 17 0.031653884 ubox
3 24 0.016538299 ubox
3 28 0.023660176 ubox
3 78 0.663331471 ubox
4 13 0.614078587 ubox
4 16 0.034382102 ubox
4 23 0.016645761 ubox
4 27 0.024081457 ubox
4 80 0.152678830 ubox
5 12 0.615197704 ubox
5 15 0.036030008 ubox
5 22 0.015826235 ubox
5 26 0.024205528 ubox
5 73 0.416713309 ubox
5 79 0.158151324 ubox
6 11 0.615733329 ubox
6 14 0.036834652 ubox
6 24 0.025744683 ubox
6 25 0.019890533 ubox
6 72 0.417982850 ubox
6 78 0.158545036 ubox
7 13 0.036872814 ubox
7 22 0.011122522 ubox
7 23 0.029311686 ubox
7 80 0.004485307 ubox
8 12 0.036281252 ubox
8 21 0.018487622 ubox
8 22 0.029222731 ubox
8 23 0.011355006 ubox
8 79 0.004492623 ubox
9 20 0.035032875 ubox
9 22 0.011271480 ubox
10 19 0.035230527 ubox
10 21 0.011069036 ubox
11 18 0.035341266 ubox
11 20 0.010750884 ubox
11 73 0.085993518 ubox
12 17 0.035207436 ubox
12 68 0.091269765 ubox
12 69 0.776875034 ubox
12 72 0.077924459 ubox
13 67 0.091466202 ubox
13 68 0.779115202 ubox
13 71 0.066485214 ubox
14 45 0.016407043 ubox
14 73 0.008254157 ubox
15 38 0.015691263 ubox
15 44 0.018607967 ubox
15 66 0.981634503 ubox
15 67 0.033206566 ubox
15 68 0.014157496 ubox
15 69 0.024606834 ubox
15 71 0.004197601 ubox
15 72 0.007928654 ubox
15 75 0.164582037 ubox
16 37 0.015752631 ubox
16 43 0.018637455 ubox
16 65 0.983641912 ubox
16 66 0.016480554 ubox
16 67 0.009704658 ubox
16 68 0.020338443 ubox
16 70 0.003785195 ubox
16 71 0.005498084 ubox
16 74 0.165314377 ubox
17 36 0.015730430 ubox
17 42 0.018645286 ubox
17 62 0.003522509 ubox
17 64 0.984493430 ubox
17 73 0.165445206 ubox
18 32 0.021737110 ubox
18 40 0.017415669 ubox
18 61 0.003542193 ubox
18 63 0.984119534 ubox
18 66 0.015136652 ubox
18 68 0.003437307 ubox
18 71 0.101543200 ubox
18 72 0.131659312 ubox
19 31 0.021804614 ubox
19 33 0.007661434 ubox
19 39 0.017487866 ubox
19 41 0.007264768 ubox
19 60 0.003560491 ubox
19 65 0.014934124 ubox
19 67 0.003460812 ubox
19 70 0.142469097 ubox
19 71 0.056615499 ubox
19 72 0.007187831 ubox
20 30 0.021867721 ubox
20 32 0.007861425 ubox
20 38 0.017474230 ubox
20 40 0.007314489 ubox
20 59 0.003526127 ubox
20 61 0.984245716 ubox
20 69 0.150630833 ubox
20 71 0.064057440 ubox
21 29 0.021864887 ubox
21 32 0.009878055 ubox
21 33 0.014497096 ubox
21 37 0.012587943 ubox
21 39 0.007298459 ubox
21 58 0.003355985 ubox
21 60 0.984850905 ubox
21 68 0.150474197 ubox
21 69 0.010257397 ubox
21 70 0.064438331 ubox
22 28 0.021817223 ubox
22 31 0.015946041 ubox
22 32 0.016971938 ubox
22 38 0.006069132 ubox
22 59 0.985002046 ubox
22 67 0.150559355 ubox
22 68 0.012027477 ubox
22 69 0.064381397 ubox
23 30 0.016005654 ubox
23 31 0.016934783 ubox
23 58 0.982521128 ubox
23 63 0.004163167 ubox
23 66 0.150085244 ubox
23 67 0.012370765 ubox
23 68 0.064193571 ubox
24 46 0.006844405 ubox
24 51 0.003209277 ubox
24 57 0.707513255 ubox
24 62 0.008406383 ubox
25 45 0.007632217 ubox
25 50 0.003256231 ubox
25 57 0.677528966 ubox
25 62 0.048252897 ubox
25 64 0.113570596 ubox
26 32 0.003248941 ubox
26 38 0.112297153 ubox
26 40 0.004236788 ubox
26 44 0.007655729 ubox
26 49 0.003272834 ubox
26 56 0.960272086 ubox
26 59 0.012256624 ubox
26 61 0.048325016 ubox
26 63 0.104871369 ubox
26 66 0.030869988 ubox
27 37 0.140616112 ubox
27 39 0.005059213 ubox
27 43 0.008928294 ubox
27 55 0.936041460 ubox
27 58 0.014412585 ubox
27 60 0.044456162 ubox
27 63 0.004666383 ubox
27 65 0.030865181 ubox
28 36 0.144879212 ubox
28 42 0.009077496 ubox
28 47 0.003434731 ubox
28 51 0.009354474 ubox
28 54 0.575443078 ubox
28 57 0.013406888 ubox
28 62 0.017659110 ubox
28 64 0.030514995 ubox
29 35 0.143443921 ubox
29 46 0.003448744 ubox
29 50 0.009434555 ubox
29 54 0.797343098 ubox
30 36 0.010956807 ubox
30 45 0.003441383 ubox
30 52 0.017364053 ubox
30 53 0.988016447 ubox
30 54 0.005408505 ubox
31 35 0.007146139 ubox
31 48 0.009646194 ubox
31 51 0.017158457 ubox
31 52 0.988129706 ubox
31 53 0.006216517 ubox
32 47 0.009646445 ubox
32 50 0.016424952 ubox
32 51 0.988104130 ubox
32 52 0.006151860 ubox
33 46 0.009214187 ubox
33 50 0.971546965 ubox
34 50 0.149257147 ubox
35 41 0.007707627 ubox
35 49 0.205004370 ubox
36 40 0.008269790 ubox
37 46 0.234810631 ubox
37 54 0.003485084 ubox
38 45 0.241220343 ubox
38 47 0.954741374 ubox
38 53 0.003585388 ubox
39 46 0.956004811 ubox
40 45 0.950367017 ubox
40 47 0.023346145 ubox
40 51 0.011840442 ubox
40 80 0.048097252 ubox
41 46 0.021093578 ubox
41 50 0.012942641 ubox
41 79 0.048638799 ubox
42 49 0.014301852 ubox
42 78 0.048655307 ubox
44 62 0.141510954 ubox
45 61 0.141688215 ubox
45 66 0.006508676 ubox
45 75 0.049554479 ubox
46 60 0.141676350 ubox
46 65 0.006495925 ubox
46 74 0.049632058 ubox
47 59 0.141694413 ubox
47 72 0.052294542 ubox
48 58 0.141656865 ubox
48 63 0.010981688 ubox
48 71 0.052360819 ubox
49 57 0.117767314 ubox
49 62 0.012490592 ubox
50 56 0.054135186 ubox
50 60 0.003340368 ubox
50 61 0.012050619 ubox
50 69 0.048391519 ubox
50 70 0.016529787 ubox
51 59 0.003773064 ubox
51 68 0.049757996 ubox
51 69 0.016952168 ubox
52 58 0.003743157 ubox
52 59 0.014436656 ubox
52 67 0.050931148 ubox
52 68 0.016928267 ubox
53 58 0.014476667 ubox
53 66 0.050946144 ubox
53 67 0.016904964 ubox
54 65 0.050556106 ubox
54 66 0.015494254 ubox
56 62 0.022030736 ubox
56 64 0.053350381 ubox
57 61 0.020629857 ubox
57 63 0.053310200 ubox
57 65 0.007911327 ubox
58 62 0.050981674 ubox
58 64 0.013072963 ubox
67 79 0.005515248 ubox
67 80 0.017963676 ubox
68 79 0.017512556 ubox
68 80 0.013147638 ubox
69 79 0.010205766 ubox
69 80 0.078226926 ubox
70 79 0.078784043 ubox
71 80 0.437249061 ubox
72 79 0.455621076 ubox
73 78 0.456648267 ubox
1 80 0.9500000 lbox
2 79 0.9500000 lbox
3 78 0.9500000 lbox
12 69 0.9500000 lbox
13 68 0.9500000 lbox
15 66 0.9500000 lbox
16 65 0.9500000 lbox
17 64 0.9500000 lbox
18 63 0.9500000 lbox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
24 57 0.9500000 lbox
26 56 0.9500000 lbox
27 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
33 50 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
