%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGAUAGUAGCGUGUCCACAUUGUCCUUUGAGAAUGAGAAGUCAUCCUGGAGCACAGCUCUUCCCACGCUCCGGGCCCACACACCCAGCCUCACUCCAUCAAAGGAGCCCCGCUGCCUGCCCACCCACCCUGGGUGCUUUCUGGCUUGCAGUGCUCUUGGCAGAC\
) } def
/len { sequence length } bind def

/coor [
[69.59442139 100.59864044]
[55.10553360 104.48092651]
[40.61664581 108.36321259]
[26.12775993 112.24549866]
[11.63887215 116.12778473]
[-2.85001516 120.01007080]
[-10.36672783 125.27481842]
[-17.64617157 123.82678223]
[-32.20512009 127.43746185]
[-39.81896591 132.56072998]
[-47.07006073 130.97683716]
[-61.69397736 134.31465149]
[-76.31789398 137.65245056]
[-90.90996552 141.12686157]
[-105.46891785 144.73753357]
[-120.02786255 148.34822083]
[-134.55241394 152.09486389]
[-149.04130554 155.97715759]
[-163.53019714 159.85943604]
[-178.01907349 163.74172974]
[-183.66217041 178.07565308]
[-196.51329041 186.24281311]
[-211.53169250 185.28800964]
[-222.97113037 175.78659058]
[-237.46002197 179.66886902]
[-244.59284973 190.44793701]
[-256.77182007 193.36730957]
[-267.31747437 187.38838196]
[-281.87640381 190.99905396]
[-296.43536377 194.60974121]
[-310.99432373 198.22041321]
[-316.70004272 212.65040588]
[-329.81579590 220.94233704]
[-345.29833984 219.90779114]
[-357.19433594 209.94458008]
[-360.92947388 194.88377380]
[-355.06756592 180.51652527]
[-341.86260986 172.36737061]
[-326.39218140 173.56979370]
[-314.60498047 183.66146851]
[-300.04605103 180.05079651]
[-285.48709106 176.44010925]
[-270.92816162 172.82942200]
[-258.99014282 159.99087524]
[-241.34230042 165.17999268]
[-226.85342407 161.29769897]
[-221.69728088 147.34950256]
[-209.16836548 139.01342773]
[-193.95539856 139.66082764]
[-181.90136719 149.25283813]
[-167.41247559 145.37054443]
[-152.92358398 141.48826599]
[-138.43470764 137.60597229]
[-132.76400757 132.81741333]
[-123.63854980 133.78927612]
[-109.07959747 130.17858887]
[-94.52065277 126.56790924]
[-88.76140594 121.88622284]
[-79.65570831 123.02854156]
[-65.03179169 119.69072723]
[-50.40787506 116.35291290]
[-35.81580353 112.87850952]
[-21.25685310 109.26782990]
[-6.73230076 105.52118683]
[7.75658655 101.63890076]
[22.24547386 97.75661469]
[36.73435974 93.87432861]
[51.22324753 89.99204254]
[65.71213531 86.10975647]
[74.04569244 73.63771057]
[72.08779907 58.76603699]
[70.12990570 43.89436340]
[66.37668610 38.36985016]
[66.05701447 32.64323044]
[68.38762665 28.43124390]
[66.98717499 13.49676228]
[65.58672333 -1.43771911]
[52.16830063 -9.23038292]
[45.92378616 -23.43551064]
[49.25432587 -38.59094238]
[60.87925339 -48.86910629]
[76.32855225 -50.31783676]
[89.66165161 -42.38006973]
[95.75169373 -28.10803413]
[92.25694275 -12.98962307]
[80.52120209 -2.83817315]
[81.92165375 12.09630775]
[83.32211304 27.03078842]
[85.00157928 41.93647385]
[86.95947266 56.80814362]
[88.91736603 71.67981720]
[99.65818024 70.68306732]
[109.67066956 73.48196411]
[117.70832062 79.44130707]
[122.87339783 87.55187988]
[124.71482849 96.59172821]
[139.50289917 99.10432434]
[154.31379700 101.47854614]
[169.14627075 103.71417999]
[183.97872925 105.94981384]
[177.52377319 92.40973663]
[183.91236877 78.83822632]
[198.46073914 75.18516541]
[210.50283813 84.12877655]
[211.21003723 99.11209106]
[200.06555176 109.14968109]
[214.62449646 112.76036072]
[229.18345642 116.37104034]
[243.74240112 119.98171997]
[258.30136108 123.59240723]
[263.39562988 122.11833954]
[268.06875610 122.71372986]
[271.59515381 124.86296082]
[273.56396484 127.83534241]
[287.89755249 132.25666809]
[302.23114014 136.67799377]
[316.56472778 141.09933472]
[330.89831543 145.52066040]
[344.74804688 138.39166260]
[359.22137451 143.07971191]
[365.93243408 156.32723999]
[380.26602173 160.74858093]
[394.59960938 165.16990662]
[409.15856934 168.78057861]
[423.89706421 171.56925964]
[438.63555908 174.35792542]
[453.37405396 177.14660645]
[468.11254883 179.93527222]
[482.85104370 182.72395325]
[499.53811646 179.72770691]
[507.03674316 194.93319702]
[494.50128174 206.34805298]
[480.06237793 197.46244812]
[465.32388306 194.67378235]
[450.58538818 191.88510132]
[435.84689331 189.09643555]
[421.10836792 186.30775452]
[406.36987305 183.51907349]
[413.66226196 196.62713623]
[409.71661377 211.09889221]
[396.78027344 218.69169617]
[382.22134399 215.08091736]
[374.33215332 202.32315063]
[377.60614014 187.68481445]
[390.17828369 179.50349426]
[375.84469604 175.08216858]
[361.51110840 170.66084290]
[348.50357056 177.82600403]
[333.90426636 173.54632568]
[326.47698975 159.85424805]
[312.14340210 155.43292236]
[297.80981445 151.01159668]
[283.47622681 146.59027100]
[269.14260864 142.16893005]
[254.69067383 138.15135193]
[240.13171387 134.54066467]
[225.57276917 130.92999268]
[211.01382446 127.31930542]
[196.45487976 123.70862579]
[181.74308777 120.78227234]
[166.91062927 118.54663849]
[152.07817078 116.31100464]
[144.96571350 118.43235016]
[136.99029541 113.89238739]
[122.20223236 111.37979889]
[111.09133148 123.86274719]
[93.77108002 126.97013855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 69]
[2 68]
[3 67]
[4 66]
[5 65]
[6 64]
[8 63]
[9 62]
[11 61]
[12 60]
[13 59]
[14 57]
[15 56]
[16 55]
[17 53]
[18 52]
[19 51]
[20 50]
[24 46]
[25 45]
[28 43]
[29 42]
[30 41]
[31 40]
[70 91]
[71 90]
[72 89]
[75 88]
[76 87]
[77 86]
[96 165]
[97 164]
[98 162]
[99 161]
[100 160]
[106 159]
[107 158]
[108 157]
[109 156]
[110 155]
[114 154]
[115 153]
[116 152]
[117 151]
[118 150]
[121 147]
[122 146]
[123 145]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[129 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
