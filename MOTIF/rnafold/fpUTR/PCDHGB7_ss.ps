%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCCACACAGAGGCUCCCGGCUGCGCAGACCUUGCCCAGCACACCAGAUUGCCAGCUCCGAGACCCGGGACUCCUCCUGUCCUGGGCCGAAUGCUCUUUUAGCGCGGUAGAGUGCACUUUCUCCAACUGGAAAAGCGGGGACCCAGCGAGAACCCGAGCGAACG\
) } def
/len { sequence length } bind def

/coor [
[116.10160828 425.31283569]
[127.42161560 414.52435303]
[126.30066681 399.56631470]
[125.17971802 384.60824585]
[124.05876160 369.65017700]
[107.70753479 366.48123169]
[92.88089752 358.86395264]
[80.76315308 347.39840698]
[72.32453918 332.99230957]
[68.24361420 316.78924561]
[68.85266113 300.07785034]
[74.11065674 284.18939209]
[83.60593414 270.39163208]
[96.58842468 259.78771973]
[112.02887726 253.22802734]
[110.07098389 238.35636902]
[100.73863220 226.74789429]
[106.60845947 212.05586243]
[104.65056610 197.18418884]
[102.69267273 182.31251526]
[100.73477936 167.44084167]
[98.77688599 152.56916809]
[86.00196075 144.70779419]
[71.84371185 149.66197205]
[57.68546295 154.61616516]
[43.52721024 159.57034302]
[33.05692673 171.43136597]
[18.48839951 168.33180237]
[4.33014870 173.28599548]
[-9.82810116 178.24017334]
[-18.05638313 192.01243591]
[-33.97291565 194.02328491]
[-45.36789703 182.73019409]
[-43.50007248 166.79624939]
[-29.80227661 158.44459534]
[-14.78228664 164.08192444]
[-0.62403709 159.12774658]
[13.53421307 154.17355347]
[22.99180412 142.66690063]
[38.57302475 145.41209412]
[52.73127365 140.45791626]
[66.88952637 135.50372314]
[81.04777527 130.54954529]
[70.95841980 118.35936737]
[67.43972015 103.66063690]
[70.61001587 89.60930634]
[79.21423340 78.95413208]
[90.99993134 73.49929047]
[90.15887451 58.52288437]
[78.65722656 48.01813507]
[78.01761627 32.81795502]
[88.10317230 21.91762352]
[87.26211548 6.94122076]
[86.42105865 -8.03518200]
[85.58000183 -23.01158333]
[84.73894501 -37.98798752]
[74.29362488 -53.12958145]
[82.75740051 -68.48240662]
[81.63645172 -83.44046021]
[80.51549530 -98.39852142]
[68.81942749 -108.68636322]
[67.89570618 -123.87192535]
[77.77567291 -134.95893860]
[76.65472412 -149.91699219]
[75.53376770 -164.87506104]
[74.41281891 -179.83311462]
[72.17718506 -194.66557312]
[68.83937073 -209.28948975]
[65.50155640 -223.91340637]
[62.16374207 -238.53733826]
[58.82592773 -253.16125488]
[55.48811722 -267.78515625]
[52.15030289 -282.40908813]
[48.81248856 -297.03302002]
[34.81542969 -304.00555420]
[28.62236786 -318.36453247]
[33.15747070 -333.33004761]
[46.27940369 -341.83584595]
[61.79239273 -339.86578369]
[72.37167358 -328.35000610]
[73.02204132 -312.72595215]
[63.43640518 -300.37081909]
[66.77422333 -285.74688721]
[70.11203766 -271.12298584]
[73.44984436 -256.49905396]
[76.78765869 -241.87515259]
[80.12547302 -227.25122070]
[83.46328735 -212.62730408]
[86.80110168 -198.00338745]
[94.21853638 -211.04109192]
[107.82255554 -217.36015320]
[122.56976318 -214.61791992]
[132.99293518 -203.83100891]
[135.22790527 -188.99845886]
[128.44610596 -175.61909485]
[115.16174316 -168.65306091]
[100.29971313 -170.68286133]
[89.37088013 -180.95407104]
[90.49182892 -165.99600220]
[91.61277771 -151.03794861]
[92.73373413 -136.07989502]
[104.15577698 -126.58924866]
[105.50566864 -111.43561554]
[95.47355652 -99.51947021]
[96.59450531 -84.56141663]
[97.71546173 -69.60335541]
[106.69108582 -61.45496368]
[107.72479248 -48.97370529]
[99.71534729 -38.82904434]
[100.55640411 -23.85264015]
[101.39746094 -8.87623882]
[102.23851776 6.10016394]
[103.07957458 21.07656670]
[114.32215881 30.77913475]
[115.38845825 45.95535660]
[105.13527679 57.68182755]
[105.97633362 72.65823364]
[124.44142914 81.51928711]
[133.23481750 102.02270508]
[125.83499146 125.00028992]
[140.74067688 126.67975616]
[155.64636230 128.35922241]
[170.55204773 130.03869629]
[179.47257996 127.88404083]
[185.71980286 131.89146423]
[200.59147644 133.84934998]
[215.46315002 135.80725098]
[230.39866638 129.03507996]
[243.57192993 138.80223083]
[241.43141174 155.06108093]
[226.17909241 161.08592224]
[213.50524902 150.67892456]
[198.63357544 148.72102356]
[183.76190186 146.76313782]
[168.87257385 144.94436646]
[153.96688843 143.26490784]
[139.06120300 141.58543396]
[124.15552521 139.90597534]
[113.64855957 150.61128235]
[115.60645294 165.48295593]
[117.56434631 180.35462952]
[119.52223969 195.22630310]
[121.48013306 210.09797668]
[130.95251465 222.77015686]
[124.94265747 236.39846802]
[126.90055084 251.27014160]
[140.25061035 252.76455688]
[152.91654968 257.21539307]
[164.25288391 264.39184570]
[173.68278503 273.92440796]
[180.72741699 285.32373047]
[185.03022766 298.00585938]
[186.37504578 311.32205200]
[184.69688416 324.59201050]
[180.08511353 337.13870239]
[172.77867126 348.32278442]
[163.15371704 357.57519531]
[151.70426941 364.42620850]
[139.01681519 368.52923584]
[140.13777161 383.48730469]
[141.25872803 398.44534302]
[142.37966919 413.40341187]
[155.18118286 422.38424683]
[159.16499329 437.50585938]
[152.45004272 451.62829590]
[138.20693970 458.08337402]
[123.16085052 453.82321167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 162]
[3 161]
[4 160]
[5 159]
[15 146]
[16 145]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[23 43]
[24 42]
[25 41]
[26 40]
[28 38]
[29 37]
[30 36]
[48 117]
[49 116]
[52 113]
[53 112]
[54 111]
[55 110]
[56 109]
[58 106]
[59 105]
[60 104]
[63 101]
[64 100]
[65 99]
[66 98]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[120 138]
[121 137]
[122 136]
[123 135]
[125 134]
[126 133]
[127 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
