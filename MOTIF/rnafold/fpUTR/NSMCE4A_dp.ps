%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NSMCE4A)
} def

/sequence { (\
GCAGGGGUUUCAGUUUCUGGCGCGAACUUCCGCCGUUCCGAAGUUGCACGGUGAAUUGGCGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.032346646 ubox
1 14 0.034291531 ubox
1 21 0.051290174 ubox
1 33 0.004577015 ubox
1 47 0.004557254 ubox
1 60 0.009432887 ubox
1 62 0.014391689 ubox
2 7 0.035345841 ubox
2 13 0.037493777 ubox
2 19 0.945789595 ubox
2 20 0.043447006 ubox
2 32 0.004605802 ubox
2 46 0.004559935 ubox
2 59 0.009341644 ubox
2 61 0.014194876 ubox
3 9 0.003978446 ubox
3 10 0.006479554 ubox
3 15 0.003980233 ubox
3 16 0.011564915 ubox
3 18 0.957885703 ubox
3 28 0.003378504 ubox
3 45 0.004487321 ubox
3 63 0.006919832 ubox
4 8 0.003225383 ubox
4 9 0.006357553 ubox
4 10 0.004317531 ubox
4 11 0.045898377 ubox
4 14 0.004475925 ubox
4 15 0.013973123 ubox
4 16 0.008968107 ubox
4 17 0.958815612 ubox
4 18 0.083699158 ubox
4 27 0.003612652 ubox
4 30 0.043528852 ubox
4 31 0.013301788 ubox
4 44 0.003882187 ubox
4 62 0.006705611 ubox
4 63 0.068171345 ubox
5 9 0.003565461 ubox
5 10 0.036428159 ubox
5 11 0.028352197 ubox
5 14 0.019565709 ubox
5 15 0.031962875 ubox
5 16 0.949840891 ubox
5 17 0.094579420 ubox
5 18 0.095484889 ubox
5 29 0.043927157 ubox
5 30 0.013446145 ubox
5 62 0.075705716 ubox
5 63 0.014850233 ubox
6 10 0.018767006 ubox
6 14 0.043712744 ubox
6 15 0.933125846 ubox
6 16 0.097061751 ubox
6 17 0.100541943 ubox
6 18 0.021554255 ubox
6 28 0.044988171 ubox
6 29 0.010506303 ubox
6 62 0.015153083 ubox
6 63 0.115780566 ubox
7 14 0.725451533 ubox
7 15 0.096966463 ubox
7 16 0.099501715 ubox
7 17 0.022641985 ubox
7 23 0.005791312 ubox
7 27 0.045846781 ubox
7 28 0.006119914 ubox
7 60 0.076795377 ubox
7 62 0.126808289 ubox
8 13 0.240440195 ubox
8 22 0.005776976 ubox
8 26 0.045268975 ubox
8 43 0.003309489 ubox
8 59 0.068192486 ubox
8 61 0.126308337 ubox
9 25 0.044402334 ubox
9 26 0.009483308 ubox
9 42 0.003476442 ubox
9 55 0.004721381 ubox
9 58 0.018302477 ubox
9 59 0.007380048 ubox
10 20 0.015440635 ubox
10 24 0.040517250 ubox
10 25 0.011891591 ubox
10 41 0.003597727 ubox
10 54 0.005689526 ubox
10 59 0.125894505 ubox
11 19 0.095464667 ubox
11 24 0.013774335 ubox
11 40 0.003602796 ubox
11 53 0.005850372 ubox
11 58 0.149135211 ubox
12 18 0.096290653 ubox
12 52 0.005681418 ubox
12 57 0.149744050 ubox
13 17 0.094286254 ubox
13 21 0.041328353 ubox
13 23 0.007144013 ubox
13 56 0.149912265 ubox
14 20 0.040906140 ubox
14 22 0.007000388 ubox
14 54 0.015842395 ubox
14 55 0.149350820 ubox
15 19 0.030109828 ubox
15 53 0.018754639 ubox
15 54 0.148263390 ubox
15 55 0.005279117 ubox
16 53 0.138732434 ubox
16 54 0.007111866 ubox
17 51 0.149151272 ubox
17 53 0.008361236 ubox
18 35 0.012463000 ubox
18 50 0.149271823 ubox
19 34 0.016216662 ubox
19 49 0.149178687 ubox
19 52 0.004187149 ubox
19 63 0.234186749 ubox
20 33 0.016251988 ubox
20 47 0.045048998 ubox
20 60 0.006226831 ubox
20 62 0.983393649 ubox
21 32 0.016251946 ubox
21 46 0.045037194 ubox
21 50 0.004890674 ubox
21 59 0.006227262 ubox
21 61 0.985605107 ubox
22 31 0.016231960 ubox
22 33 0.004142283 ubox
22 44 0.004543466 ubox
22 45 0.031397570 ubox
22 47 0.142648973 ubox
22 49 0.004039110 ubox
22 60 0.985938027 ubox
22 62 0.051712570 ubox
23 32 0.004378960 ubox
23 40 0.004016223 ubox
23 43 0.006423452 ubox
23 46 0.142742519 ubox
23 58 0.029916954 ubox
23 59 0.985393179 ubox
23 61 0.051773163 ubox
24 30 0.018959309 ubox
24 31 0.004563117 ubox
24 38 0.007724927 ubox
24 45 0.105502454 ubox
24 57 0.041252347 ubox
24 60 0.051630624 ubox
25 29 0.016514661 ubox
25 37 0.008247480 ubox
25 44 0.074513259 ubox
25 45 0.100287968 ubox
25 56 0.041526211 ubox
25 57 0.951350483 ubox
26 36 0.008265737 ubox
26 44 0.129689941 ubox
26 56 0.933638057 ubox
27 35 0.008264541 ubox
27 43 0.149904332 ubox
27 59 0.008718187 ubox
28 42 0.149817757 ubox
28 54 0.150741626 ubox
28 55 0.874578613 ubox
28 58 0.009179209 ubox
29 41 0.149590002 ubox
29 53 0.080457189 ubox
29 54 0.893666878 ubox
30 40 0.134838506 ubox
30 51 0.028196601 ubox
30 53 0.635998863 ubox
31 40 0.064972400 ubox
31 50 0.028295431 ubox
31 53 0.747278322 ubox
31 61 0.042461268 ubox
32 39 0.088706805 ubox
32 47 0.003322225 ubox
32 49 0.027990007 ubox
32 52 0.982370030 ubox
32 60 0.046637652 ubox
33 46 0.003567957 ubox
33 51 0.986957070 ubox
33 59 0.046650777 ubox
34 40 0.005230733 ubox
34 46 0.007478512 ubox
34 50 0.986947347 ubox
34 58 0.046640824 ubox
35 39 0.007758053 ubox
35 45 0.007118394 ubox
35 47 0.037042982 ubox
35 49 0.985613755 ubox
35 56 0.017291608 ubox
35 57 0.041426778 ubox
35 62 0.004175617 ubox
36 42 0.008234969 ubox
36 43 0.013668592 ubox
36 46 0.040303094 ubox
36 48 0.950056076 ubox
36 54 0.014272877 ubox
36 55 0.024403742 ubox
36 61 0.004130987 ubox
37 41 0.014659421 ubox
37 42 0.029046889 ubox
37 53 0.014269169 ubox
37 54 0.022697127 ubox
38 51 0.046631446 ubox
38 53 0.015405839 ubox
38 59 0.004305054 ubox
39 46 0.723978966 ubox
39 50 0.048239225 ubox
39 53 0.004055103 ubox
39 58 0.004341197 ubox
40 45 0.557265750 ubox
40 49 0.048223840 ubox
40 52 0.004490723 ubox
40 57 0.003981053 ubox
41 56 0.003586133 ubox
43 49 0.010270668 ubox
44 48 0.009628430 ubox
44 54 0.003275946 ubox
45 53 0.003413931 ubox
46 52 0.003788674 ubox
47 51 0.003786896 ubox
49 58 0.003406041 ubox
50 63 0.008307230 ubox
51 62 0.009242604 ubox
52 61 0.009242970 ubox
53 60 0.009178470 ubox
2 19 0.9500000 lbox
3 18 0.9500000 lbox
4 17 0.9500000 lbox
5 16 0.9500000 lbox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
20 62 0.9500000 lbox
21 61 0.9500000 lbox
22 60 0.9500000 lbox
23 59 0.9500000 lbox
25 57 0.9500000 lbox
26 56 0.9500000 lbox
28 55 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
34 50 0.9500000 lbox
35 49 0.9500000 lbox
36 48 0.9500000 lbox
showpage
end
%%EOF
