%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAGGAGACGUGCUGCCGGGCUGGGCUGCCCGGGGGAGAUGACUCCUCGCCAGGAGGGCGCCUCUGGGAAGAAGACCACGGGGGAAGCAAAGUUUCAGGGCAGCUGAGGAGCCUUCGCCGCAGCCCUUCCGAGCCCAAUCAUCCCCCUGGCUAUGGAGGGCGGACUCUAAG\
) } def
/len { sequence length } bind def

/coor [
[-25.50205612 211.96154785]
[-32.75734711 208.70249939]
[-45.32263565 216.89479065]
[-57.88792038 225.08708191]
[-70.37873840 233.39245605]
[-82.79407501 241.81027222]
[-95.20941162 250.22807312]
[-107.62474823 258.64587402]
[-120.04008484 267.06369019]
[-127.12026215 281.21224976]
[-141.99655151 281.95053101]
[-154.41189575 290.36834717]
[-166.82722473 298.78616333]
[-174.45278931 315.52963257]
[-191.97602844 316.15081787]
[-204.23736572 324.79138184]
[-211.06095886 339.06546021]
[-225.92149353 340.07223511]
[-238.18283081 348.71279907]
[-250.44416809 357.35339355]
[-262.70550537 365.99398804]
[-274.96682739 374.63455200]
[-287.22817993 383.27514648]
[-289.67840576 398.88833618]
[-302.50021362 408.12829590]
[-318.08663940 405.51312256]
[-327.19052124 392.59432983]
[-324.41070557 377.03643799]
[-311.39639282 368.06964111]
[-295.86874390 371.01379395]
[-283.60742188 362.37322998]
[-271.34606934 353.73263550]
[-259.08474731 345.09207153]
[-246.82341003 336.45147705]
[-234.56207275 327.81088257]
[-228.61550903 314.15484619]
[-212.87794495 312.53005981]
[-200.61662292 303.88946533]
[-198.23344421 292.00790405]
[-188.05899048 284.71282959]
[-175.24502563 286.37081909]
[-162.82969666 277.95300293]
[-150.41436768 269.53521729]
[-144.22221375 255.98875427]
[-128.45788574 254.64834595]
[-116.04255676 246.23054504]
[-103.62722015 237.81272888]
[-91.21188354 229.39492798]
[-78.79654694 220.97712708]
[-75.01173401 214.59877014]
[-66.08020782 212.52178955]
[-53.51491928 204.32949829]
[-40.94963074 196.13722229]
[-33.18604660 175.94673157]
[-10.82205868 174.83995056]
[1.11933696 165.76232910]
[13.06073284 156.68472290]
[25.00212860 147.60711670]
[26.75217438 132.86015320]
[38.73313522 123.48404694]
[54.18923950 125.41964722]
[66.13063812 116.34203339]
[78.07202911 107.26441956]
[90.01342773 98.18680573]
[94.03208160 91.16472626]
[102.25335693 89.05541992]
[114.35669708 80.19487762]
[111.52783203 68.45488739]
[112.83458710 56.48469543]
[118.09946442 45.69395828]
[126.68022919 37.34544754]
[137.54817200 32.40727615]
[149.41140747 31.44066620]
[160.86843872 34.53625870]
[170.57369995 41.30617523]
[183.13899231 33.11388779]
[188.64274597 25.77939606]
[196.00590515 24.88951302]
[208.71705627 16.92541695]
[221.42819214 8.96132278]
[227.06347656 1.72739041]
[234.44151306 0.97058868]
[247.29435730 -6.76271915]
[260.14721680 -14.49602699]
[273.00009155 -22.22933578]
[285.85293579 -29.96264267]
[298.70578003 -37.69594955]
[296.21618652 -53.56385422]
[299.99044800 -69.13653564]
[309.42324829 -82.04170990]
[323.04959106 -90.32511139]
[338.77230835 -92.74639130]
[354.18472290 -88.96479034]
[366.93911743 -79.58673096]
[379.65026855 -87.55082703]
[392.36141968 -95.51492310]
[405.07254028 -103.47901917]
[413.66036987 -121.69161224]
[432.97637939 -121.63556671]
[445.39169312 -130.05337524]
[457.80703735 -138.47117615]
[470.22238159 -146.88897705]
[482.63769531 -155.30679321]
[489.71789551 -169.45533752]
[504.59417725 -170.19364929]
[517.00952148 -178.61145020]
[529.27087402 -187.25202942]
[541.37420654 -196.11257935]
[553.47753906 -204.97311401]
[565.58087158 -213.83366394]
[577.68420410 -222.69419861]
[586.89306641 -236.92915344]
[603.12091064 -232.02082825]
[602.89678955 -215.06835938]
[586.54473877 -210.59086609]
[574.44140625 -201.73031616]
[562.33807373 -192.86978149]
[550.23474121 -184.00923157]
[538.13140869 -175.14869690]
[536.52667236 -170.61708069]
[532.03851318 -167.06028748]
[525.42730713 -166.19612122]
[513.01196289 -157.77830505]
[506.81982422 -144.23185730]
[491.05551147 -142.89144897]
[478.64016724 -134.47364807]
[466.22485352 -126.05583954]
[453.80950928 -117.63803101]
[441.39416504 -109.22023010]
[440.36898804 -99.01107025]
[433.74029541 -90.89308929]
[423.52218628 -87.71642303]
[413.03665161 -90.76786804]
[400.32550049 -82.80377960]
[387.61434937 -74.83968353]
[374.90319824 -66.87558746]
[377.76223755 -53.11840439]
[375.74380493 -39.18279266]
[369.07070923 -26.74946213]
[358.52832031 -17.32497978]
[345.37228394 -12.05923748]
[331.17892456 -11.60517406]
[317.65640259 -16.03787804]
[306.43908691 -24.84309387]
[293.58624268 -17.10978508]
[280.73339844 -9.37647724]
[267.88052368 -1.64316940]
[255.02766418 6.09013844]
[242.17481995 13.82344627]
[229.39228821 21.67246819]
[216.68115234 29.63656235]
[203.97000122 37.60065842]
[191.33126831 45.67917633]
[178.76599121 53.87146378]
[180.59487915 71.86188507]
[173.03231812 88.38095856]
[158.08026123 98.84970856]
[139.80180359 100.31862640]
[123.21723938 92.29821777]
[111.11389923 101.15876007]
[99.09104156 110.12819672]
[87.14964294 119.20581055]
[75.20825195 128.28343201]
[63.26685333 137.36103821]
[60.99695206 152.77159119]
[48.75736618 161.80747986]
[34.07974243 159.54850769]
[22.13834572 168.62611389]
[10.19694996 177.70373535]
[-1.74444580 186.78134155]
[-1.31309044 195.19497681]
[-4.22900248 202.99845886]
[-9.94144917 208.93176270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 53]
[3 52]
[4 51]
[5 49]
[6 48]
[7 47]
[8 46]
[9 45]
[11 43]
[12 42]
[13 41]
[15 38]
[16 37]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[55 170]
[56 169]
[57 168]
[58 167]
[61 164]
[62 163]
[63 162]
[64 161]
[66 160]
[67 159]
[75 154]
[76 153]
[78 152]
[79 151]
[80 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 145]
[87 144]
[94 136]
[95 135]
[96 134]
[97 133]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[105 123]
[106 122]
[107 119]
[108 118]
[109 117]
[110 116]
[111 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
