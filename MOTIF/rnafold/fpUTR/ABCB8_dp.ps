%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABCB8)
} def

/sequence { (\
GGUUGUCGGGAUGGGGGCGGGAGCCAACAUAGAGCCCUCAGUGGGAUGAGGGUGAAACUGCUAUUGCCGGCGGCUCCUGUUUUACCGCGUCAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.036541718 ubox
1 75 0.004034656 ubox
1 86 0.017812327 ubox
1 91 0.013124752 ubox
2 6 0.023761312 ubox
2 74 0.004822523 ubox
2 85 0.017824565 ubox
2 90 0.008930775 ubox
2 94 0.957486445 ubox
3 9 0.004578002 ubox
3 73 0.004833150 ubox
3 84 0.017596223 ubox
3 89 0.004110982 ubox
3 93 0.966460013 ubox
4 8 0.004282857 ubox
4 9 0.008260131 ubox
4 72 0.004838301 ubox
4 89 0.018042212 ubox
4 92 0.972697338 ubox
5 71 0.004861257 ubox
5 88 0.024403620 ubox
5 90 0.005255750 ubox
5 91 0.973395530 ubox
5 94 0.047621659 ubox
6 70 0.004859838 ubox
6 87 0.007216894 ubox
6 89 0.036367058 ubox
6 93 0.047055389 ubox
7 69 0.004863021 ubox
7 79 0.016712677 ubox
7 87 0.071461280 ubox
7 89 0.969157994 ubox
8 68 0.004858281 ubox
8 78 0.016758368 ubox
8 86 0.072487333 ubox
8 88 0.966710990 ubox
8 91 0.010676418 ubox
9 67 0.004746650 ubox
9 77 0.016775867 ubox
9 85 0.072135631 ubox
9 86 0.941664981 ubox
9 90 0.010339539 ubox
9 91 0.011741879 ubox
10 76 0.016745820 ubox
10 83 0.007584171 ubox
10 85 0.941225533 ubox
10 90 0.003404575 ubox
10 91 0.219966342 ubox
11 30 0.013462843 ubox
11 75 0.010642478 ubox
11 80 0.004124700 ubox
11 82 0.009649164 ubox
11 90 0.221241977 ubox
12 29 0.016551938 ubox
12 79 0.004139638 ubox
12 84 0.549557971 ubox
12 87 0.127866132 ubox
12 89 0.221121156 ubox
13 28 0.017442921 ubox
13 78 0.004171097 ubox
13 81 0.009327075 ubox
13 82 0.033332705 ubox
13 83 0.495844365 ubox
13 86 0.133689565 ubox
13 88 0.221114754 ubox
14 77 0.004191265 ubox
14 81 0.026250516 ubox
14 82 0.420567641 ubox
14 83 0.773023861 ubox
14 85 0.133206624 ubox
14 86 0.054604220 ubox
15 76 0.004189582 ubox
15 80 0.007887901 ubox
15 81 0.333112661 ubox
15 82 0.846489943 ubox
15 83 0.022013231 ubox
15 85 0.054396883 ubox
15 86 0.214449295 ubox
16 25 0.017769314 ubox
16 75 0.003912947 ubox
16 80 0.235831061 ubox
16 81 0.898945706 ubox
16 82 0.023760137 ubox
16 83 0.012321097 ubox
16 85 0.213245053 ubox
17 24 0.017772831 ubox
17 74 0.003903385 ubox
17 80 0.969160239 ubox
17 81 0.023083997 ubox
17 82 0.007294261 ubox
18 23 0.017766982 ubox
18 73 0.003777901 ubox
18 79 0.999371391 ubox
19 78 0.999052761 ubox
20 77 0.999816401 ubox
21 76 0.999821885 ubox
22 75 0.999678083 ubox
23 71 0.007695884 ubox
23 74 0.999788202 ubox
24 70 0.008513681 ubox
24 73 0.999275332 ubox
25 54 0.004397080 ubox
25 66 0.006878720 ubox
25 69 0.009357115 ubox
25 72 0.996854664 ubox
26 53 0.003444923 ubox
26 59 0.032330499 ubox
26 65 0.013801034 ubox
27 53 0.005192913 ubox
27 64 0.012167532 ubox
28 48 0.003528584 ubox
28 52 0.004255786 ubox
28 54 0.072709669 ubox
28 60 0.051682625 ubox
28 66 0.085777098 ubox
29 47 0.003541729 ubox
29 53 0.043455073 ubox
29 59 0.083183095 ubox
29 64 0.078752681 ubox
29 65 0.065088053 ubox
30 46 0.003488620 ubox
30 52 0.009917852 ubox
30 54 0.028525425 ubox
30 60 0.030138403 ubox
30 63 0.098655533 ubox
30 66 0.012587343 ubox
31 53 0.013908767 ubox
31 59 0.158874734 ubox
31 62 0.099938680 ubox
31 65 0.012920510 ubox
32 58 0.163110971 ubox
32 61 0.099230171 ubox
32 64 0.009707778 ubox
32 65 0.034332096 ubox
33 59 0.092158544 ubox
33 62 0.012945635 ubox
33 64 0.034286465 ubox
33 65 0.006501819 ubox
34 53 0.948872381 ubox
34 58 0.079268124 ubox
34 61 0.012191269 ubox
34 71 0.021656843 ubox
35 45 0.012853909 ubox
35 52 0.999137298 ubox
35 60 0.009038033 ubox
35 70 0.021509481 ubox
36 44 0.012887751 ubox
36 51 0.999662014 ubox
36 69 0.021350631 ubox
37 43 0.012886297 ubox
37 50 0.999822333 ubox
38 49 0.999683479 ubox
39 48 0.999803792 ubox
39 66 0.012294876 ubox
40 47 0.977448298 ubox
40 65 0.012301752 ubox
41 47 0.021667779 ubox
41 64 0.012299514 ubox
42 46 0.034277707 ubox
42 63 0.012299898 ubox
43 62 0.012252464 ubox
44 61 0.012157143 ubox
48 71 0.007467446 ubox
49 59 0.005362941 ubox
50 58 0.006082347 ubox
50 59 0.005112700 ubox
51 58 0.005892634 ubox
51 59 0.003514961 ubox
51 68 0.020397112 ubox
52 58 0.007695506 ubox
52 61 0.003373934 ubox
52 67 0.020623836 ubox
52 71 0.004007313 ubox
53 57 0.008926888 ubox
53 60 0.003652026 ubox
53 66 0.020653533 ubox
53 69 0.007981547 ubox
53 70 0.004155991 ubox
54 59 0.036674084 ubox
54 65 0.022278198 ubox
54 68 0.023330352 ubox
54 71 0.073181954 ubox
55 64 0.022193405 ubox
55 65 0.006810315 ubox
56 64 0.006653559 ubox
56 65 0.010112901 ubox
57 64 0.009080079 ubox
58 70 0.432607474 ubox
58 73 0.035952699 ubox
59 66 0.004105632 ubox
59 69 0.431125316 ubox
59 72 0.062930125 ubox
60 65 0.003772509 ubox
60 67 0.431131555 ubox
60 68 0.313110839 ubox
60 71 0.832045148 ubox
61 66 0.525123301 ubox
61 70 0.833557770 ubox
62 69 0.799264094 ubox
64 70 0.004309933 ubox
65 69 0.005830989 ubox
66 71 0.022027965 ubox
68 72 0.003209589 ubox
87 94 0.018813225 ubox
88 93 0.019009143 ubox
2 94 0.9500000 lbox
3 93 0.9500000 lbox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
7 89 0.9500000 lbox
8 88 0.9500000 lbox
9 86 0.9500000 lbox
10 85 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
16 81 0.9500000 lbox
17 80 0.9500000 lbox
18 79 0.9500000 lbox
19 78 0.9500000 lbox
20 77 0.9500000 lbox
21 76 0.9500000 lbox
22 75 0.9500000 lbox
23 74 0.9500000 lbox
24 73 0.9500000 lbox
25 72 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
showpage
end
%%EOF
