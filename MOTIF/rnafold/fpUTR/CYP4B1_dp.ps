%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYP4B1)
} def

/sequence { (\
AAGAUGCAUGGGUCCAGAGUAUAAAGGAACCCAGGAGCAGCUGAAGGCAGGUCAGAUGAAGGCUAGGUGGCUGGAACUGCAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 42 0.649932058 ubox
2 64 0.008965930 ubox
2 78 0.012496725 ubox
3 41 0.663723534 ubox
3 53 0.016063913 ubox
3 63 0.009155216 ubox
3 77 0.012787310 ubox
4 22 0.005417393 ubox
4 52 0.015668045 ubox
5 21 0.005611229 ubox
5 33 0.003822379 ubox
5 39 0.712539419 ubox
5 49 0.009012384 ubox
5 51 0.013301928 ubox
5 81 0.415007826 ubox
6 20 0.005665445 ubox
6 32 0.003186665 ubox
6 38 0.768667792 ubox
6 41 0.009278779 ubox
6 48 0.010021873 ubox
6 63 0.012731569 ubox
6 80 0.460654738 ubox
7 19 0.005661322 ubox
7 37 0.767048505 ubox
7 40 0.009237872 ubox
7 43 0.003712433 ubox
7 47 0.009993303 ubox
7 58 0.003483568 ubox
7 62 0.012746356 ubox
7 79 0.460584376 ubox
8 42 0.003676012 ubox
8 57 0.003370117 ubox
8 78 0.388383154 ubox
9 16 0.005334871 ubox
9 33 0.940691285 ubox
9 81 0.004589789 ubox
10 15 0.005353254 ubox
10 31 0.030983314 ubox
10 32 0.997215238 ubox
10 78 0.026753575 ubox
10 80 0.004835965 ubox
11 30 0.031297078 ubox
11 31 0.997670799 ubox
11 32 0.005977941 ubox
11 77 0.038904950 ubox
11 78 0.016339098 ubox
12 30 0.997549810 ubox
12 31 0.005837374 ubox
12 77 0.022895865 ubox
13 27 0.003673273 ubox
13 28 0.704250875 ubox
13 29 0.704760662 ubox
13 75 0.052415102 ubox
13 76 0.016209654 ubox
14 26 0.007829724 ubox
14 27 0.997287529 ubox
14 74 0.059555460 ubox
15 26 0.996626917 ubox
15 73 0.059557001 ubox
16 72 0.059370050 ubox
17 71 0.059152994 ubox
19 30 0.006348523 ubox
20 29 0.006344931 ubox
20 69 0.009894450 ubox
21 68 0.008382623 ubox
22 67 0.007399286 ubox
25 64 0.003415251 ubox
25 72 0.003858830 ubox
26 32 0.004550173 ubox
26 63 0.003717095 ubox
26 71 0.005266979 ubox
26 84 0.004514489 ubox
27 31 0.004504953 ubox
27 83 0.004546804 ubox
29 68 0.055976555 ubox
30 47 0.005422194 ubox
30 67 0.056454616 ubox
30 70 0.003829731 ubox
31 46 0.005449955 ubox
31 66 0.056379809 ubox
31 67 0.006050391 ubox
31 69 0.003749381 ubox
31 70 0.012427489 ubox
31 74 0.003449127 ubox
32 43 0.015252564 ubox
32 58 0.003217750 ubox
32 66 0.006397044 ubox
32 69 0.012463938 ubox
32 73 0.004028276 ubox
32 79 0.036333077 ubox
33 42 0.018439574 ubox
33 57 0.003392125 ubox
33 64 0.054946050 ubox
33 68 0.012201316 ubox
33 72 0.004552560 ubox
33 78 0.160284241 ubox
34 41 0.020018878 ubox
34 42 0.007049700 ubox
34 53 0.010315021 ubox
34 63 0.056360295 ubox
34 64 0.015743446 ubox
34 71 0.004787631 ubox
34 72 0.005186742 ubox
34 77 0.290196476 ubox
34 78 0.060848431 ubox
34 84 0.231815613 ubox
35 41 0.007634375 ubox
35 52 0.008960095 ubox
35 53 0.035478614 ubox
35 63 0.016415004 ubox
35 71 0.005580295 ubox
35 77 0.079706078 ubox
35 83 0.233345058 ubox
36 42 0.005677858 ubox
36 52 0.034302615 ubox
36 64 0.034354336 ubox
36 72 0.076008466 ubox
36 78 0.037707234 ubox
37 41 0.005708634 ubox
37 48 0.030542124 ubox
37 52 0.024712671 ubox
37 63 0.035549092 ubox
37 68 0.004274351 ubox
37 71 0.078082622 ubox
37 77 0.041774727 ubox
37 80 0.417104648 ubox
38 47 0.030575105 ubox
38 51 0.029507427 ubox
38 58 0.108548233 ubox
38 62 0.035461815 ubox
38 67 0.004288661 ubox
38 69 0.018459351 ubox
38 70 0.076107010 ubox
38 73 0.452089673 ubox
38 79 0.417623895 ubox
39 57 0.102293533 ubox
39 64 0.035203032 ubox
39 68 0.024116774 ubox
39 72 0.453301691 ubox
39 78 0.417338583 ubox
40 48 0.239296665 ubox
40 52 0.021151642 ubox
40 63 0.043032361 ubox
40 68 0.070824471 ubox
40 71 0.453838264 ubox
40 77 0.415589809 ubox
40 80 0.049849184 ubox
41 47 0.239515990 ubox
41 50 0.109818861 ubox
41 51 0.020709149 ubox
41 55 0.177817514 ubox
41 61 0.003880955 ubox
41 62 0.043055855 ubox
41 66 0.025243085 ubox
41 67 0.074357790 ubox
41 70 0.453812111 ubox
41 74 0.075908800 ubox
41 79 0.049804706 ubox
42 46 0.215809403 ubox
42 49 0.113469091 ubox
42 50 0.018632547 ubox
42 54 0.179111896 ubox
42 60 0.004171538 ubox
42 61 0.042468839 ubox
42 65 0.025316860 ubox
42 66 0.073529231 ubox
42 69 0.448121514 ubox
42 73 0.073903194 ubox
42 81 0.034875868 ubox
43 48 0.116151133 ubox
43 53 0.179570284 ubox
43 64 0.014119720 ubox
43 68 0.244054069 ubox
43 72 0.034285328 ubox
43 78 0.003794458 ubox
43 80 0.047934963 ubox
44 52 0.173226537 ubox
45 64 0.035333962 ubox
45 72 0.395576942 ubox
45 78 0.058740226 ubox
46 53 0.010748542 ubox
46 63 0.033261595 ubox
46 64 0.293366455 ubox
46 71 0.398991144 ubox
46 72 0.067738273 ubox
46 77 0.063251956 ubox
46 78 0.010950190 ubox
46 84 0.060538453 ubox
47 52 0.007487534 ubox
47 63 0.315696662 ubox
47 68 0.313945170 ubox
47 71 0.068534980 ubox
47 77 0.011372202 ubox
47 80 0.658074069 ubox
47 83 0.057960944 ubox
48 58 0.040296330 ubox
48 62 0.315386376 ubox
48 67 0.318876338 ubox
48 69 0.397967211 ubox
48 70 0.063566943 ubox
48 73 0.037960354 ubox
48 79 0.659107933 ubox
49 57 0.040539293 ubox
49 64 0.028677281 ubox
49 68 0.394530022 ubox
49 72 0.035480230 ubox
49 78 0.658568804 ubox
50 63 0.025650558 ubox
50 64 0.561930235 ubox
50 71 0.026114418 ubox
50 72 0.093608168 ubox
50 77 0.654678097 ubox
50 78 0.017798102 ubox
50 84 0.243652703 ubox
51 57 0.054941908 ubox
51 63 0.575128937 ubox
51 68 0.007897163 ubox
51 71 0.163245979 ubox
51 77 0.034898242 ubox
51 80 0.099936775 ubox
51 83 0.246844675 ubox
52 56 0.051253659 ubox
52 59 0.300823964 ubox
52 62 0.575826664 ubox
52 67 0.021954283 ubox
52 70 0.165002604 ubox
52 74 0.418022634 ubox
52 75 0.249450587 ubox
52 76 0.040823077 ubox
52 79 0.021594596 ubox
52 82 0.232757502 ubox
53 58 0.314265948 ubox
53 61 0.575223394 ubox
53 66 0.024918620 ubox
53 69 0.165349003 ubox
53 73 0.463016573 ubox
53 74 0.290726691 ubox
53 79 0.256620309 ubox
54 64 0.043623903 ubox
54 68 0.163018687 ubox
54 72 0.455031053 ubox
54 78 0.259106553 ubox
55 63 0.045452229 ubox
55 71 0.438228478 ubox
55 77 0.258348342 ubox
56 68 0.099716914 ubox
57 65 0.135075662 ubox
57 67 0.106647653 ubox
57 69 0.084498404 ubox
57 73 0.060961649 ubox
57 79 0.003395470 ubox
57 81 0.111343809 ubox
58 64 0.131715557 ubox
58 68 0.143823832 ubox
58 72 0.015459299 ubox
58 78 0.003394594 ubox
58 80 0.117744517 ubox
60 72 0.043490412 ubox
60 78 0.119233185 ubox
61 71 0.034787482 ubox
61 72 0.442251055 ubox
61 77 0.133114954 ubox
61 78 0.017793855 ubox
61 84 0.010200392 ubox
62 68 0.173745312 ubox
62 71 0.479019865 ubox
62 77 0.019251304 ubox
62 80 0.012430967 ubox
62 83 0.010266817 ubox
63 67 0.173586463 ubox
63 70 0.484016470 ubox
63 74 0.301915211 ubox
63 79 0.012256573 ubox
64 69 0.452807183 ubox
64 73 0.308695535 ubox
64 79 0.003453561 ubox
65 72 0.309569073 ubox
65 78 0.009182903 ubox
66 71 0.309401012 ubox
66 72 0.005094750 ubox
66 77 0.009458944 ubox
66 78 0.015313893 ubox
66 84 0.249407326 ubox
67 71 0.006023477 ubox
67 77 0.018164393 ubox
67 80 0.029211784 ubox
67 83 0.251552233 ubox
68 76 0.018226033 ubox
68 79 0.029198283 ubox
68 81 0.012725163 ubox
68 82 0.232762656 ubox
69 78 0.029771974 ubox
69 80 0.014562981 ubox
69 84 0.026997794 ubox
70 77 0.029830238 ubox
70 80 0.250914510 ubox
70 83 0.027289993 ubox
71 79 0.251880266 ubox
72 79 0.003295346 ubox
72 81 0.033235644 ubox
73 78 0.013952415 ubox
73 80 0.036457132 ubox
73 84 0.023544998 ubox
74 83 0.024266713 ubox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
37 80 0.9500000 lbox
38 79 0.9500000 lbox
39 78 0.9500000 lbox
40 77 0.9500000 lbox
45 72 0.9500000 lbox
46 71 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
