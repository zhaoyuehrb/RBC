%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:30:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COMMD2)
} def

/sequence { (\
CGGAAGUGGCGAAGGCGGGGUCGGCGCUGCCGGGUGAAAUCGUAGGACAGUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.013717875 ubox
1 11 0.014348211 ubox
1 17 0.003768246 ubox
1 23 0.142260557 ubox
1 32 0.963253301 ubox
1 36 0.026650031 ubox
1 42 0.028608108 ubox
1 52 0.012757520 ubox
2 7 0.012342932 ubox
2 10 0.014611691 ubox
2 16 0.003754694 ubox
2 22 0.142477608 ubox
2 31 0.977571012 ubox
2 35 0.025887230 ubox
2 41 0.029455985 ubox
2 51 0.011398386 ubox
3 21 0.137202063 ubox
3 22 0.089225476 ubox
3 30 0.973623140 ubox
3 40 0.026452154 ubox
3 41 0.029718162 ubox
4 21 0.091429778 ubox
4 40 0.029350667 ubox
5 28 0.865872770 ubox
6 16 0.014265572 ubox
6 25 0.005930264 ubox
6 27 0.975968905 ubox
6 30 0.088172424 ubox
6 40 0.008345841 ubox
6 48 0.016279409 ubox
7 15 0.014197521 ubox
7 17 0.040338468 ubox
7 23 0.030260762 ubox
7 24 0.004542955 ubox
7 26 0.975657754 ubox
7 29 0.098034897 ubox
7 32 0.024354857 ubox
7 36 0.003768507 ubox
7 39 0.009394087 ubox
7 47 0.015754968 ubox
7 49 0.005497202 ubox
8 16 0.032777976 ubox
8 22 0.039910685 ubox
8 25 0.975611109 ubox
8 28 0.102423903 ubox
8 31 0.029849977 ubox
8 35 0.003423527 ubox
8 48 0.006087979 ubox
9 16 0.167680632 ubox
9 21 0.040087267 ubox
9 25 0.013173550 ubox
9 27 0.104246684 ubox
9 30 0.029875620 ubox
9 35 0.042789066 ubox
9 43 0.030346339 ubox
9 51 0.005260428 ubox
10 15 0.169533626 ubox
10 17 0.012765162 ubox
10 20 0.040078462 ubox
10 23 0.975941545 ubox
10 24 0.015595120 ubox
10 26 0.104305823 ubox
10 29 0.029859943 ubox
10 32 0.007287306 ubox
10 34 0.043178638 ubox
10 36 0.010883427 ubox
10 42 0.031047846 ubox
10 50 0.005430504 ubox
11 16 0.012841435 ubox
11 22 0.975418367 ubox
11 25 0.104232523 ubox
11 28 0.015495113 ubox
11 31 0.007273473 ubox
11 35 0.009841163 ubox
11 41 0.031030879 ubox
12 21 0.961010659 ubox
12 40 0.029802878 ubox
13 28 0.004560848 ubox
14 22 0.110988433 ubox
14 27 0.005209262 ubox
14 28 0.025510201 ubox
14 31 0.049692654 ubox
15 21 0.119282755 ubox
15 25 0.009944950 ubox
15 27 0.029347828 ubox
15 30 0.049737640 ubox
15 35 0.007868664 ubox
15 43 0.011320745 ubox
16 20 0.125446906 ubox
16 23 0.009426306 ubox
16 24 0.009846961 ubox
16 26 0.029414779 ubox
16 29 0.049736144 ubox
16 34 0.007885350 ubox
16 36 0.021846970 ubox
16 42 0.011481757 ubox
17 22 0.010669938 ubox
17 25 0.029377271 ubox
17 28 0.049646083 ubox
17 35 0.019257288 ubox
17 41 0.011547775 ubox
18 27 0.049643140 ubox
18 40 0.011323471 ubox
21 33 0.027654410 ubox
22 32 0.029906206 ubox
23 31 0.030032425 ubox
24 30 0.030033354 ubox
25 29 0.029814869 ubox
25 36 0.003260272 ubox
25 52 0.175933788 ubox
26 35 0.003344682 ubox
26 51 0.178689507 ubox
27 34 0.003367084 ubox
27 45 0.004899063 ubox
27 50 0.179004678 ubox
28 33 0.003306140 ubox
28 44 0.005871930 ubox
28 49 0.179163438 ubox
29 43 0.007537198 ubox
29 48 0.179676615 ubox
30 42 0.005698361 ubox
30 46 0.180070066 ubox
31 42 0.063787714 ubox
31 45 0.179215121 ubox
31 52 0.012484439 ubox
32 41 0.084920970 ubox
32 51 0.012857634 ubox
33 40 0.082337121 ubox
33 41 0.264874379 ubox
34 40 0.256811163 ubox
34 43 0.065354478 ubox
34 48 0.211293485 ubox
34 51 0.024251990 ubox
35 39 0.237974204 ubox
35 42 0.136136929 ubox
35 44 0.035837913 ubox
35 47 0.208356797 ubox
35 49 0.142429549 ubox
35 50 0.024613315 ubox
35 52 0.051037894 ubox
36 41 0.166987966 ubox
36 43 0.036692578 ubox
36 48 0.157536539 ubox
36 51 0.073023562 ubox
39 51 0.076392240 ubox
40 46 0.036284666 ubox
40 47 0.427084111 ubox
40 50 0.074340961 ubox
40 53 0.297917531 ubox
41 45 0.046232159 ubox
41 46 0.462886440 ubox
41 52 0.318429670 ubox
42 48 0.157866939 ubox
42 51 0.291971353 ubox
43 47 0.142562081 ubox
43 50 0.143981455 ubox
43 52 0.067567582 ubox
44 51 0.073664920 ubox
1 32 0.9500000 lbox
2 31 0.9500000 lbox
3 30 0.9500000 lbox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
7 26 0.9500000 lbox
8 25 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
showpage
end
%%EOF
