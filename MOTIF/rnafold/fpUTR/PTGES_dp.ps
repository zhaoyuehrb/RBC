%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PTGES)
} def

/sequence { (\
GCUGCUCCUCUGUCGAGCUGAUCACACCCACAGUUGAGCUGCGCUGGCCAGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.009253584 ubox
1 34 0.004855760 ubox
1 39 0.005735293 ubox
1 42 0.903131282 ubox
1 44 0.128570843 ubox
1 48 0.066435436 ubox
2 17 0.009285718 ubox
2 33 0.005664654 ubox
2 38 0.005777608 ubox
2 41 0.901716501 ubox
2 43 0.128437026 ubox
2 47 0.066637590 ubox
2 51 0.057214201 ubox
2 53 0.009579122 ubox
3 16 0.008732479 ubox
3 32 0.005656949 ubox
3 37 0.005354693 ubox
3 41 0.028890530 ubox
3 43 0.016005767 ubox
3 46 0.064541005 ubox
3 50 0.057293358 ubox
3 52 0.009591576 ubox
4 13 0.007619709 ubox
4 14 0.004252750 ubox
4 18 0.038760371 ubox
4 23 0.003290569 ubox
4 31 0.005321002 ubox
4 39 0.921151508 ubox
4 40 0.005749720 ubox
4 42 0.041477279 ubox
4 44 0.017432589 ubox
4 45 0.005733636 ubox
4 48 0.018990535 ubox
4 49 0.053346771 ubox
5 12 0.008981814 ubox
5 17 0.038943310 ubox
5 38 0.923501955 ubox
5 41 0.041474934 ubox
5 43 0.017482613 ubox
5 47 0.025392460 ubox
5 51 0.008054193 ubox
5 53 0.021386401 ubox
6 16 0.038942313 ubox
6 21 0.004252754 ubox
6 37 0.923341554 ubox
6 46 0.023366556 ubox
6 47 0.009149909 ubox
6 50 0.007694174 ubox
6 52 0.021720236 ubox
7 15 0.038906120 ubox
7 20 0.004401746 ubox
7 36 0.923031227 ubox
7 46 0.010656224 ubox
7 47 0.045861732 ubox
7 51 0.021174702 ubox
8 17 0.029832276 ubox
8 33 0.014678096 ubox
8 38 0.041434276 ubox
8 46 0.045947047 ubox
8 47 0.016242566 ubox
8 51 0.007895115 ubox
8 53 0.364224266 ubox
9 16 0.032476032 ubox
9 32 0.014356461 ubox
9 37 0.041337882 ubox
9 46 0.014322410 ubox
9 47 0.013567194 ubox
9 50 0.008615892 ubox
9 52 0.372434743 ubox
10 15 0.034037391 ubox
10 17 0.004325969 ubox
10 33 0.918836630 ubox
10 36 0.041184899 ubox
10 38 0.003423505 ubox
10 46 0.016712139 ubox
10 47 0.011527784 ubox
10 51 0.373327579 ubox
11 16 0.004797250 ubox
11 24 0.007933096 ubox
11 26 0.031932368 ubox
11 30 0.011166673 ubox
11 32 0.918375907 ubox
11 43 0.027790832 ubox
11 46 0.011371316 ubox
11 50 0.372224771 ubox
12 18 0.004993252 ubox
12 22 0.044494359 ubox
12 23 0.010258502 ubox
12 25 0.042671507 ubox
12 27 0.020119192 ubox
12 29 0.011916401 ubox
12 31 0.916577295 ubox
12 35 0.004281935 ubox
12 39 0.026965594 ubox
12 42 0.029507075 ubox
12 44 0.042594097 ubox
12 45 0.009202703 ubox
12 48 0.253018441 ubox
12 49 0.274694279 ubox
13 17 0.005342619 ubox
13 21 0.124556720 ubox
13 24 0.049383354 ubox
13 26 0.026230517 ubox
13 30 0.862397445 ubox
13 37 0.037901765 ubox
13 38 0.026371231 ubox
13 41 0.025319278 ubox
13 43 0.037375486 ubox
13 47 0.356199394 ubox
14 20 0.159142876 ubox
14 36 0.041230510 ubox
14 41 0.014849682 ubox
14 43 0.048099886 ubox
14 46 0.355674412 ubox
15 19 0.098333106 ubox
15 23 0.299007761 ubox
15 35 0.029271337 ubox
15 40 0.007686206 ubox
15 42 0.051936446 ubox
15 45 0.298796072 ubox
16 22 0.296595994 ubox
16 34 0.024423347 ubox
16 35 0.103004571 ubox
16 40 0.094540787 ubox
16 45 0.166430891 ubox
17 34 0.108727754 ubox
17 39 0.095742145 ubox
17 42 0.309232425 ubox
17 44 0.185498131 ubox
17 48 0.006727496 ubox
18 33 0.113756228 ubox
18 38 0.095734951 ubox
18 41 0.309178559 ubox
18 43 0.184990470 ubox
18 47 0.006700085 ubox
18 51 0.003885834 ubox
19 26 0.479250223 ubox
19 30 0.127745919 ubox
19 32 0.113744655 ubox
19 36 0.011567846 ubox
19 37 0.088220230 ubox
19 41 0.063396304 ubox
19 43 0.009298440 ubox
19 46 0.005485396 ubox
19 50 0.005327968 ubox
20 25 0.493974726 ubox
20 29 0.182036962 ubox
20 31 0.113350510 ubox
20 35 0.034163536 ubox
20 40 0.050730508 ubox
20 42 0.042413994 ubox
20 49 0.005526877 ubox
21 34 0.036226819 ubox
22 33 0.035122183 ubox
22 37 0.345370148 ubox
22 47 0.004355885 ubox
22 52 0.012974613 ubox
23 36 0.347778020 ubox
23 41 0.007507786 ubox
23 46 0.004754124 ubox
23 51 0.013844720 ubox
24 34 0.148229635 ubox
24 35 0.310636879 ubox
24 40 0.007185681 ubox
24 45 0.004573116 ubox
25 33 0.204649641 ubox
25 36 0.034948215 ubox
25 46 0.004321579 ubox
26 34 0.252184503 ubox
26 35 0.032065832 ubox
26 45 0.004233336 ubox
27 33 0.255153921 ubox
27 47 0.009790791 ubox
28 46 0.009608508 ubox
28 47 0.026350983 ubox
29 36 0.010485388 ubox
29 46 0.026599928 ubox
30 35 0.009020196 ubox
30 45 0.026104330 ubox
31 41 0.096379633 ubox
31 46 0.017665410 ubox
32 40 0.096895339 ubox
32 45 0.017933174 ubox
33 39 0.096931774 ubox
33 42 0.018751473 ubox
33 44 0.018026743 ubox
33 48 0.005429220 ubox
34 38 0.090679285 ubox
34 41 0.018573149 ubox
34 43 0.017095110 ubox
34 47 0.005423618 ubox
34 51 0.012354424 ubox
34 52 0.003766783 ubox
35 43 0.005360075 ubox
35 46 0.004403992 ubox
35 50 0.015767537 ubox
35 51 0.004034943 ubox
36 42 0.008072671 ubox
36 49 0.016422036 ubox
37 45 0.030866332 ubox
38 44 0.033166179 ubox
38 48 0.036185432 ubox
39 43 0.032935883 ubox
39 47 0.036258246 ubox
39 51 0.023792972 ubox
40 46 0.035378732 ubox
40 50 0.039613807 ubox
40 52 0.004737488 ubox
41 45 0.016469629 ubox
41 48 0.120623587 ubox
41 49 0.029939889 ubox
42 47 0.124550982 ubox
44 51 0.194739837 ubox
44 53 0.233823891 ubox
45 50 0.183018524 ubox
45 52 0.238691867 ubox
1 42 0.9500000 lbox
2 41 0.9500000 lbox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
7 36 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
showpage
end
%%EOF
