%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ULBP1)
} def

/sequence { (\
AGCUUUAUAAACAGCCGUGGUGUGAGCCUCGAAGGGAACCAUCAGCGCCUCCUGUCCACGGAGCUCCAGGUCUACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.004727888 ubox
1 65 0.633808059 ubox
1 73 0.152164917 ubox
2 15 0.377360406 ubox
2 27 0.029139309 ubox
2 28 0.004843861 ubox
2 46 0.007367551 ubox
2 64 0.728525034 ubox
2 71 0.269093877 ubox
2 72 0.159594528 ubox
3 14 0.384665404 ubox
3 20 0.003242835 ubox
3 26 0.029346120 ubox
3 34 0.006382083 ubox
3 35 0.003740902 ubox
3 45 0.007374724 ubox
3 63 0.728868046 ubox
3 69 0.031601346 ubox
3 70 0.315918947 ubox
4 10 0.017560455 ubox
4 11 0.021753480 ubox
4 13 0.379036439 ubox
4 14 0.009263286 ubox
4 25 0.026181188 ubox
4 26 0.006012410 ubox
4 33 0.006386948 ubox
4 34 0.003836727 ubox
4 44 0.006846834 ubox
4 61 0.003929634 ubox
4 62 0.722539820 ubox
4 63 0.005965350 ubox
4 68 0.030642604 ubox
4 69 0.311895095 ubox
4 70 0.040408288 ubox
5 9 0.020537269 ubox
5 10 0.031594952 ubox
5 11 0.064177730 ubox
5 13 0.018310574 ubox
5 14 0.031905949 ubox
5 24 0.022211550 ubox
5 25 0.015077024 ubox
5 32 0.006266798 ubox
5 33 0.003857444 ubox
5 60 0.006617171 ubox
5 61 0.400543184 ubox
5 62 0.032929602 ubox
5 63 0.004935946 ubox
5 68 0.275906641 ubox
5 69 0.048235139 ubox
5 70 0.021088712 ubox
6 10 0.056259188 ubox
6 13 0.037002444 ubox
6 19 0.004061982 ubox
6 22 0.006371518 ubox
6 24 0.020096965 ubox
6 32 0.003797218 ubox
6 60 0.333732532 ubox
6 61 0.017902108 ubox
6 62 0.010879832 ubox
6 68 0.047737326 ubox
6 69 0.022760653 ubox
6 74 0.011125147 ubox
7 18 0.004314920 ubox
7 21 0.007201696 ubox
7 23 0.024134736 ubox
7 55 0.021022380 ubox
7 71 0.043960318 ubox
7 73 0.011177615 ubox
8 17 0.004309907 ubox
8 20 0.007030664 ubox
8 22 0.024301485 ubox
8 54 0.021089512 ubox
8 70 0.045983494 ubox
8 74 0.027238408 ubox
9 21 0.022776580 ubox
9 53 0.019732225 ubox
9 73 0.028521966 ubox
11 18 0.022557577 ubox
11 21 0.004239714 ubox
11 23 0.006833332 ubox
11 55 0.374644230 ubox
11 71 0.053233804 ubox
12 17 0.022725254 ubox
12 19 0.021337500 ubox
12 20 0.004323153 ubox
12 22 0.006962268 ubox
12 54 0.386353291 ubox
12 70 0.055680018 ubox
13 18 0.020512700 ubox
13 21 0.006680548 ubox
13 50 0.023936830 ubox
13 53 0.385632946 ubox
13 65 0.129512596 ubox
13 73 0.036319099 ubox
14 46 0.029569450 ubox
14 48 0.099660164 ubox
14 49 0.029529378 ubox
14 52 0.375152040 ubox
14 55 0.003577474 ubox
14 64 0.136456367 ubox
14 71 0.055273371 ubox
14 72 0.037810140 ubox
15 20 0.003559483 ubox
15 35 0.005702258 ubox
15 45 0.029860984 ubox
15 47 0.107336834 ubox
15 54 0.003639084 ubox
15 61 0.805856171 ubox
15 63 0.101148804 ubox
15 70 0.065960143 ubox
16 31 0.115173801 ubox
16 34 0.006132597 ubox
16 47 0.134136362 ubox
16 60 0.826508005 ubox
16 69 0.065965445 ubox
17 30 0.116218274 ubox
17 42 0.033079464 ubox
17 46 0.136604098 ubox
17 48 0.179288068 ubox
17 59 0.827890615 ubox
17 75 0.372080905 ubox
18 41 0.034829462 ubox
18 44 0.156225226 ubox
18 45 0.082163800 ubox
18 47 0.179489555 ubox
18 58 0.827754424 ubox
18 68 0.044525447 ubox
18 74 0.372415578 ubox
19 28 0.117250219 ubox
19 40 0.035988597 ubox
19 43 0.175919092 ubox
19 46 0.179173190 ubox
19 49 0.300756875 ubox
19 56 0.007543233 ubox
19 57 0.827837084 ubox
19 67 0.046366414 ubox
19 72 0.032191923 ubox
19 73 0.371288309 ubox
20 27 0.117390770 ubox
20 39 0.035989317 ubox
20 42 0.177142583 ubox
20 46 0.006819414 ubox
20 48 0.300974994 ubox
20 55 0.010020073 ubox
20 56 0.827439906 ubox
20 66 0.040882152 ubox
20 71 0.030411480 ubox
20 72 0.371082165 ubox
20 75 0.006650443 ubox
21 26 0.115496257 ubox
21 38 0.035666800 ubox
21 41 0.177297243 ubox
21 44 0.178370751 ubox
21 45 0.006863336 ubox
21 47 0.300885591 ubox
21 54 0.436221930 ubox
21 68 0.222755979 ubox
21 70 0.268650953 ubox
21 74 0.006570688 ubox
21 76 0.019364600 ubox
22 39 0.034132663 ubox
22 40 0.173754945 ubox
22 42 0.036786537 ubox
22 43 0.175740073 ubox
22 46 0.299095072 ubox
22 48 0.006921430 ubox
22 53 0.435796162 ubox
22 55 0.050872379 ubox
22 64 0.024810656 ubox
22 67 0.226930131 ubox
22 71 0.006592733 ubox
22 73 0.006212582 ubox
22 75 0.024753263 ubox
23 31 0.003914865 ubox
23 38 0.046782355 ubox
23 41 0.149775927 ubox
23 44 0.219026272 ubox
23 45 0.203730488 ubox
23 47 0.006906481 ubox
23 54 0.044615700 ubox
23 63 0.021748871 ubox
23 68 0.271524536 ubox
23 70 0.010519738 ubox
23 74 0.024711933 ubox
24 30 0.008672804 ubox
24 40 0.152619308 ubox
24 43 0.270163293 ubox
24 46 0.006438375 ubox
24 51 0.819430831 ubox
24 53 0.007435895 ubox
24 66 0.323097819 ubox
24 67 0.193073321 ubox
24 72 0.006325606 ubox
24 73 0.023544409 ubox
25 29 0.007554875 ubox
25 42 0.266904694 ubox
25 50 0.819302291 ubox
25 53 0.016838620 ubox
25 65 0.376993365 ubox
25 71 0.005420506 ubox
25 73 0.004128712 ubox
26 46 0.027149946 ubox
26 48 0.565231209 ubox
26 49 0.603489675 ubox
26 52 0.014988271 ubox
26 55 0.006658164 ubox
26 64 0.377415211 ubox
26 71 0.026053568 ubox
26 72 0.004911236 ubox
27 35 0.193390198 ubox
27 36 0.228089694 ubox
27 45 0.027434296 ubox
27 47 0.791271442 ubox
27 54 0.006694992 ubox
27 61 0.019028713 ubox
27 63 0.351090761 ubox
27 70 0.027195852 ubox
28 34 0.193649950 ubox
28 35 0.228396874 ubox
28 36 0.087410569 ubox
28 45 0.792457077 ubox
28 60 0.020145296 ubox
28 61 0.182599684 ubox
28 63 0.138450896 ubox
28 69 0.027200740 ubox
29 33 0.174576216 ubox
29 34 0.209957602 ubox
29 35 0.085656473 ubox
29 36 0.063908745 ubox
29 37 0.223291612 ubox
29 44 0.787614343 ubox
29 60 0.158325884 ubox
29 61 0.250362417 ubox
29 62 0.195116059 ubox
29 68 0.026538778 ubox
30 34 0.086594777 ubox
30 35 0.073347039 ubox
30 36 0.227433782 ubox
30 47 0.144456909 ubox
30 54 0.004301387 ubox
30 60 0.279845546 ubox
30 61 0.194112218 ubox
31 43 0.808436466 ubox
31 46 0.144702365 ubox
31 51 0.011759909 ubox
31 53 0.003572923 ubox
31 56 0.174578014 ubox
31 59 0.274495788 ubox
31 66 0.017959173 ubox
32 42 0.797416503 ubox
32 50 0.008423445 ubox
32 55 0.163871819 ubox
32 65 0.016616270 ubox
33 50 0.023762467 ubox
33 53 0.051468628 ubox
33 65 0.003864105 ubox
33 73 0.012739071 ubox
34 40 0.808936558 ubox
34 43 0.133434103 ubox
34 49 0.026220625 ubox
34 50 0.010636583 ubox
34 51 0.007539167 ubox
34 52 0.052082342 ubox
34 53 0.229241953 ubox
34 56 0.017962240 ubox
34 57 0.090228841 ubox
34 64 0.005230746 ubox
34 66 0.007772902 ubox
34 67 0.011049507 ubox
34 72 0.013098566 ubox
34 73 0.019058805 ubox
35 39 0.796467097 ubox
35 42 0.123953428 ubox
35 43 0.014849098 ubox
35 48 0.026232943 ubox
35 49 0.012367826 ubox
35 50 0.007096291 ubox
35 51 0.051782921 ubox
35 52 0.234194368 ubox
35 53 0.004597426 ubox
35 55 0.011578598 ubox
35 56 0.089545876 ubox
35 57 0.276812030 ubox
35 65 0.007998992 ubox
35 66 0.011009937 ubox
35 67 0.014084114 ubox
35 71 0.006498341 ubox
35 72 0.019105339 ubox
35 73 0.107236212 ubox
36 42 0.011168820 ubox
36 43 0.056064018 ubox
36 48 0.012744012 ubox
36 49 0.020733089 ubox
36 50 0.040408533 ubox
36 51 0.234268737 ubox
36 52 0.004950063 ubox
36 55 0.083648659 ubox
36 56 0.277156888 ubox
36 64 0.009912062 ubox
36 65 0.007656607 ubox
36 66 0.014118786 ubox
36 71 0.009044696 ubox
36 72 0.110778952 ubox
37 42 0.051374419 ubox
37 50 0.225979285 ubox
37 55 0.270966152 ubox
37 65 0.013632406 ubox
37 71 0.078519069 ubox
38 55 0.044441754 ubox
38 71 0.086912862 ubox
39 54 0.055996519 ubox
39 61 0.011120738 ubox
39 70 0.118211804 ubox
40 54 0.066916692 ubox
40 60 0.011114317 ubox
40 69 0.118056698 ubox
41 53 0.066438232 ubox
41 55 0.016795297 ubox
41 71 0.004403257 ubox
42 54 0.006437139 ubox
42 70 0.004926627 ubox
43 54 0.267054414 ubox
43 69 0.005551678 ubox
44 50 0.068159216 ubox
44 53 0.268402112 ubox
44 65 0.111764217 ubox
44 73 0.007572912 ubox
45 49 0.068473798 ubox
45 52 0.265930561 ubox
45 55 0.016267994 ubox
45 64 0.115404638 ubox
45 72 0.008136459 ubox
46 54 0.019352766 ubox
46 63 0.112163318 ubox
46 70 0.003466163 ubox
47 53 0.015742080 ubox
47 55 0.005940707 ubox
47 64 0.050186712 ubox
47 71 0.016878923 ubox
48 54 0.007059902 ubox
48 61 0.099203775 ubox
48 63 0.035806897 ubox
48 70 0.018296530 ubox
49 60 0.099265238 ubox
49 61 0.006696519 ubox
49 63 0.075773014 ubox
49 69 0.018178174 ubox
50 60 0.005653946 ubox
50 61 0.003924207 ubox
50 62 0.099113192 ubox
50 68 0.017103888 ubox
51 60 0.005778790 ubox
51 61 0.099621982 ubox
51 70 0.028621690 ubox
52 60 0.099425127 ubox
52 61 0.014216030 ubox
52 63 0.003172273 ubox
52 69 0.028876873 ubox
53 60 0.015547146 ubox
53 62 0.003192872 ubox
53 68 0.028862076 ubox
53 76 0.004719358 ubox
54 59 0.037307360 ubox
54 64 0.012342822 ubox
54 67 0.028558149 ubox
54 75 0.006266962 ubox
55 62 0.026736419 ubox
55 63 0.008510952 ubox
55 74 0.006200865 ubox
56 61 0.027549197 ubox
56 70 0.012439617 ubox
57 69 0.012517180 ubox
58 71 0.004361435 ubox
59 70 0.004448781 ubox
60 66 0.004036630 ubox
60 67 0.031361591 ubox
60 73 0.019550109 ubox
61 66 0.031973570 ubox
61 72 0.044146423 ubox
62 71 0.044506440 ubox
62 73 0.132091085 ubox
63 71 0.165687208 ubox
63 72 0.134994706 ubox
64 70 0.211680323 ubox
65 69 0.190830513 ubox
1 65 0.9500000 lbox
2 64 0.9500000 lbox
3 63 0.9500000 lbox
4 62 0.9500000 lbox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
24 51 0.9500000 lbox
25 50 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
showpage
end
%%EOF
