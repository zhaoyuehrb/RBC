%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FHOD1)
} def

/sequence { (\
CAGCCGCGUCCGGUCCGGCCGGGCCCGAACCGCGGAGCUACAGUGUGCUUUGAGUAGAAGCUGCACUGGGGCCGGGACUCGGAGGCGCGCUGCGUGAGCCGGCCGCAGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 92 0.852481241 ubox
1 96 0.014554785 ubox
2 91 0.917771403 ubox
2 95 0.011071788 ubox
3 86 0.064051137 ubox
3 88 0.158327436 ubox
3 90 0.929168685 ubox
3 93 0.008452427 ubox
3 103 0.010197207 ubox
3 106 0.012438802 ubox
3 111 0.036918288 ubox
4 35 0.008725456 ubox
4 82 0.005416689 ubox
4 85 0.064116520 ubox
4 87 0.112177752 ubox
4 89 0.931431361 ubox
4 92 0.008441710 ubox
4 102 0.010220881 ubox
4 105 0.012416017 ubox
4 110 0.036831325 ubox
5 34 0.008838184 ubox
5 81 0.005439319 ubox
5 84 0.064076428 ubox
5 87 0.944706242 ubox
5 89 0.025025039 ubox
5 101 0.010109581 ubox
6 33 0.008842784 ubox
6 80 0.005448891 ubox
6 86 0.997265893 ubox
6 88 0.030162965 ubox
6 106 0.004407751 ubox
7 32 0.008841917 ubox
7 85 0.997210845 ubox
7 87 0.030158365 ubox
7 105 0.004406792 ubox
8 31 0.008304827 ubox
8 78 0.005447976 ubox
8 86 0.029961871 ubox
9 28 0.007561238 ubox
9 77 0.005207675 ubox
9 83 0.997282478 ubox
9 85 0.022206271 ubox
10 27 0.008124329 ubox
10 75 0.003171849 ubox
10 76 0.004486217 ubox
10 82 0.999892646 ubox
10 84 0.007775275 ubox
11 74 0.004113072 ubox
11 75 0.003182955 ubox
11 81 0.999883973 ubox
12 25 0.008378061 ubox
12 73 0.004876089 ubox
12 79 0.158381038 ubox
12 80 0.986677263 ubox
13 24 0.008504789 ubox
13 72 0.004881058 ubox
13 78 0.956281656 ubox
13 79 0.264069194 ubox
14 23 0.008608616 ubox
14 71 0.004877180 ubox
14 76 0.400111087 ubox
14 77 0.907067424 ubox
15 22 0.008612949 ubox
15 70 0.004878057 ubox
15 75 0.671033376 ubox
15 76 0.741255446 ubox
16 21 0.008600980 ubox
16 69 0.004873399 ubox
16 74 0.850827801 ubox
16 75 0.525019206 ubox
17 73 0.998848968 ubox
18 72 0.999908711 ubox
19 35 0.005232108 ubox
19 70 0.045837600 ubox
19 71 0.998857233 ubox
20 34 0.005440639 ubox
20 69 0.064689852 ubox
20 70 0.996920912 ubox
20 74 0.004078955 ubox
21 31 0.016832593 ubox
21 33 0.006498466 ubox
21 39 0.118539981 ubox
21 73 0.003614754 ubox
22 30 0.016841424 ubox
22 31 0.011451286 ubox
22 38 0.119114248 ubox
22 39 0.961071780 ubox
22 73 0.003466509 ubox
23 30 0.011424842 ubox
23 33 0.003905735 ubox
23 38 0.991783090 ubox
23 72 0.003961961 ubox
24 32 0.003903306 ubox
24 35 0.015370040 ubox
24 37 0.992483260 ubox
24 71 0.004396683 ubox
25 34 0.015701331 ubox
25 35 0.999452799 ubox
25 70 0.004391391 ubox
26 32 0.014761778 ubox
26 34 0.999550450 ubox
26 69 0.004384390 ubox
27 31 0.015290108 ubox
27 33 0.991013230 ubox
32 38 0.015806901 ubox
33 37 0.015712007 ubox
37 72 0.007167802 ubox
37 111 0.005243134 ubox
38 69 0.004259680 ubox
38 71 0.007475045 ubox
38 110 0.005254659 ubox
39 69 0.016063807 ubox
39 70 0.005936631 ubox
39 109 0.005095123 ubox
41 68 0.997772747 ubox
42 67 0.999538226 ubox
43 66 0.999968081 ubox
44 65 0.999772016 ubox
45 64 0.999866626 ubox
46 63 0.965062105 ubox
47 61 0.992271810 ubox
47 62 0.117554499 ubox
48 57 0.003193100 ubox
48 60 0.999766382 ubox
49 56 0.003676261 ubox
49 57 0.003517942 ubox
49 58 0.028882453 ubox
49 59 0.998109312 ubox
49 60 0.017661982 ubox
50 56 0.008730325 ubox
50 57 0.040232959 ubox
50 58 0.995645160 ubox
50 59 0.037788774 ubox
51 56 0.040320168 ubox
51 57 0.984346753 ubox
51 58 0.049889233 ubox
51 59 0.003163686 ubox
53 62 0.005562069 ubox
54 61 0.005727669 ubox
55 60 0.005554703 ubox
67 107 0.003186726 ubox
68 106 0.003786189 ubox
70 104 0.007362801 ubox
71 103 0.007374663 ubox
72 102 0.007380443 ubox
73 101 0.007379937 ubox
74 100 0.007307294 ubox
75 99 0.007224838 ubox
75 112 0.004454305 ubox
76 111 0.004645040 ubox
78 98 0.003566849 ubox
78 110 0.005136756 ubox
79 97 0.003599159 ubox
79 109 0.005144203 ubox
80 94 0.006475312 ubox
80 96 0.003563832 ubox
80 108 0.005141233 ubox
81 93 0.006537845 ubox
83 91 0.006532963 ubox
84 90 0.006550304 ubox
84 100 0.004282098 ubox
84 104 0.007118421 ubox
84 112 0.004644295 ubox
85 99 0.004300412 ubox
85 103 0.007166261 ubox
85 106 0.005692499 ubox
85 111 0.004681400 ubox
86 94 0.003425134 ubox
86 98 0.004289907 ubox
86 102 0.007046947 ubox
86 105 0.005817051 ubox
86 110 0.004677091 ubox
87 93 0.003567271 ubox
87 100 0.008689051 ubox
87 104 0.008457489 ubox
87 106 0.053915059 ubox
87 111 0.297937925 ubox
88 92 0.003543587 ubox
88 96 0.005281756 ubox
88 101 0.003911692 ubox
88 105 0.054682631 ubox
88 110 0.305507120 ubox
89 95 0.005366367 ubox
89 99 0.048522189 ubox
89 100 0.005015936 ubox
89 103 0.058991436 ubox
89 104 0.039059311 ubox
89 106 0.037487398 ubox
89 111 0.067530787 ubox
90 94 0.005341668 ubox
90 98 0.048783358 ubox
90 102 0.070479476 ubox
90 105 0.037505722 ubox
90 108 0.349269766 ubox
90 110 0.066331962 ubox
91 97 0.048613791 ubox
91 101 0.069845606 ubox
91 105 0.003511464 ubox
91 107 0.363453875 ubox
91 109 0.060258001 ubox
92 99 0.294185287 ubox
92 100 0.055818110 ubox
92 103 0.059831623 ubox
92 104 0.011395225 ubox
92 106 0.385347208 ubox
92 111 0.055420149 ubox
93 98 0.327978533 ubox
93 101 0.070344328 ubox
93 102 0.063456319 ubox
93 105 0.386691796 ubox
93 110 0.061104575 ubox
94 100 0.091893070 ubox
94 103 0.216290691 ubox
94 104 0.323317286 ubox
94 106 0.208355018 ubox
94 111 0.114194665 ubox
95 101 0.057694404 ubox
95 102 0.296862464 ubox
95 105 0.208420903 ubox
95 107 0.015843504 ubox
95 110 0.113935648 ubox
96 100 0.076740405 ubox
96 104 0.208054130 ubox
96 106 0.016322207 ubox
98 106 0.174963437 ubox
98 111 0.039296015 ubox
99 105 0.174984834 ubox
99 110 0.039322604 ubox
101 112 0.855411231 ubox
102 111 0.862966972 ubox
103 110 0.861276188 ubox
105 111 0.068300412 ubox
106 110 0.067972180 ubox
1 92 0.9500000 lbox
2 91 0.9500000 lbox
3 90 0.9500000 lbox
4 89 0.9500000 lbox
5 87 0.9500000 lbox
6 86 0.9500000 lbox
7 85 0.9500000 lbox
9 83 0.9500000 lbox
10 82 0.9500000 lbox
11 81 0.9500000 lbox
12 80 0.9500000 lbox
13 78 0.9500000 lbox
14 77 0.9500000 lbox
15 76 0.9500000 lbox
16 75 0.9500000 lbox
17 73 0.9500000 lbox
18 72 0.9500000 lbox
19 71 0.9500000 lbox
20 70 0.9500000 lbox
22 39 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 35 0.9500000 lbox
26 34 0.9500000 lbox
27 33 0.9500000 lbox
41 68 0.9500000 lbox
42 67 0.9500000 lbox
43 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 61 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
101 112 0.9500000 lbox
102 111 0.9500000 lbox
103 110 0.9500000 lbox
showpage
end
%%EOF
