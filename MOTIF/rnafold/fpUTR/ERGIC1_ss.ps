%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGCGCCCAAUGGGCUGCGCGGAGCGUCACUUCCCGGCAGCGGGAGGCGAGUGGCGAGUGGCGAGUGGCGAGUGUCAGGGGGGCGGCCGGCGGGGGCGGGGCGGCCGGAGGAGGCGUUGGCAGCGGGCUCGGACCCACGCGGCGCCGCGGCCCGCCUGGCCUGCAGCGCUCCCACCCCCGGCGGCGGCACG\
) } def
/len { sequence length } bind def

/coor [
[-245.78633118 209.23661804]
[-256.01998901 196.97175598]
[-270.49310303 200.91235352]
[-284.96624756 204.85296631]
[-299.43939209 208.79357910]
[-312.09234619 222.16358948]
[-328.87307739 217.04740906]
[-343.28082275 221.22067261]
[-357.68859863 225.39393616]
[-372.09637451 229.56719971]
[-376.95977783 234.07766724]
[-382.53433228 235.26618958]
[-387.03582764 233.63478088]
[-401.57058716 237.34172058]
[-409.66601562 250.64967346]
[-424.45910645 254.20198059]
[-437.09631348 246.40219116]
[-451.63107300 250.10913086]
[-466.16580200 253.81607056]
[-480.70053101 257.52301025]
[-495.23529053 261.22994995]
[-506.69528198 272.13766479]
[-520.93988037 267.78564453]
[-535.47467041 271.49258423]
[-543.57006836 284.80053711]
[-558.36315918 288.35284424]
[-571.00036621 280.55307007]
[-585.53515625 284.26000977]
[-593.08929443 289.41964722]
[-600.33392334 287.90756226]
[-614.92645264 291.37985229]
[-626.56072998 302.10156250]
[-640.73339844 297.52062988]
[-655.32592773 300.99291992]
[-669.91851807 304.46520996]
[-684.51110840 307.93753052]
[-699.10363770 311.40982056]
[-713.69622803 314.88211060]
[-728.28881836 318.35443115]
[-739.82885742 330.00598145]
[-755.61853027 325.57662964]
[-759.41473389 309.62292480]
[-747.31225586 298.55664062]
[-731.76110840 303.76184082]
[-717.16851807 300.28955078]
[-702.57598877 296.81726074]
[-687.98339844 293.34494019]
[-673.39080811 289.87265015]
[-658.79821777 286.40036011]
[-644.20568848 282.92803955]
[-633.61517334 272.45471191]
[-618.39874268 276.78729248]
[-603.80621338 273.31500244]
[-589.24206543 269.72525024]
[-574.70733643 266.01831055]
[-567.34924316 253.11894226]
[-552.66174316 249.15252686]
[-539.18157959 256.95785522]
[-524.64685059 253.25090027]
[-514.22644043 242.60832214]
[-498.94219971 246.69520569]
[-484.40747070 242.98826599]
[-469.87274170 239.28132629]
[-455.33801270 235.57438660]
[-440.80325317 231.86746216]
[-433.44515991 218.96807861]
[-418.75769043 215.00166321]
[-405.27749634 222.80697632]
[-390.74276733 219.10003662]
[-376.26965332 215.15942383]
[-361.86187744 210.98617554]
[-347.45410156 206.81291199]
[-333.04632568 202.63964844]
[-326.93127441 192.19285583]
[-314.95159912 188.60331726]
[-303.38000488 194.32044983]
[-288.90686035 190.37983704]
[-274.43371582 186.43922424]
[-259.96060181 182.49861145]
[-258.10830688 168.74253845]
[-251.12873840 156.69464111]
[-240.04804993 148.19213867]
[-226.52058411 144.54608154]
[-212.58190918 146.33935547]
[-200.34257507 153.33372498]
[-191.66854858 164.50096130]
[-177.13380432 160.79402161]
[-166.71340942 150.15142822]
[-151.42918396 154.23831177]
[-136.89443970 150.53137207]
[-122.35970306 146.82444763]
[-107.82495880 143.11750793]
[-97.40457153 132.47491455]
[-82.12033081 136.56179810]
[-67.58559418 132.85485840]
[-53.05085373 129.14793396]
[-38.51611710 125.44099426]
[-23.98137665 121.73405457]
[-9.44663906 118.02711487]
[0.97375357 107.38452911]
[16.25799179 111.47141266]
[30.79273033 107.76448059]
[45.32746887 104.05754089]
[59.83187485 100.23364258]
[74.30500793 96.29302979]
[88.77814484 92.35242462]
[100.47325897 82.95964050]
[107.44410706 69.67780304]
[114.41495514 56.39596176]
[109.47443390 41.38373947]
[116.67069244 27.31286812]
[131.73431396 22.53134537]
[145.72831726 29.87596321]
[150.35031128 44.98929214]
[142.85813904 58.90486145]
[127.69679260 63.36680984]
[120.72594452 76.64865112]
[113.75509644 89.93048859]
[122.17635345 102.34349060]
[137.09417725 100.77555847]
[150.00997925 91.63813782]
[163.47630310 98.00268555]
[178.39413452 96.43476105]
[193.31196594 94.86683655]
[209.05389404 82.28896332]
[226.36796570 90.88032532]
[241.22753906 88.83261871]
[256.08712769 86.78491211]
[270.94668579 84.73721313]
[285.80627441 82.68950653]
[300.66583252 80.64179993]
[315.52542114 78.59410095]
[330.36801147 76.42676544]
[345.19265747 74.13993835]
[360.01730347 71.85311127]
[369.35937500 59.38860703]
[384.42626953 57.28062057]
[396.25167847 66.26365662]
[411.07632446 63.97682953]
[423.51654053 53.29164505]
[438.89859009 58.97716904]
[441.39871216 75.18461609]
[428.44503784 85.24115753]
[413.36315918 78.80148315]
[398.53851318 81.08831024]
[389.96978760 93.21731567]
[374.96804810 95.74766541]
[362.30413818 86.67776489]
[347.47949219 88.96459198]
[332.65484619 91.25141907]
[326.51528931 95.38378143]
[317.57312012 93.45366669]
[302.71353149 95.50137329]
[287.85397339 97.54907990]
[272.99438477 99.59678650]
[258.13482666 101.64448547]
[243.27525330 103.69219208]
[228.41567993 105.73989868]
[222.99128723 114.41874695]
[213.48274231 118.76386261]
[202.93649292 117.11717987]
[194.87988281 109.78466034]
[179.96206665 111.35259247]
[165.04423523 112.92051697]
[153.19544983 121.94579315]
[138.66210938 115.69338989]
[123.74427795 117.26131439]
[107.97103119 121.46480560]
[96.23539734 116.00177002]
[92.71875000 106.82555389]
[78.24562073 110.76616669]
[63.77248764 114.70677948]
[56.30242157 119.98746490]
[49.03440475 118.59227753]
[34.49966812 122.29921722]
[19.96492767 126.00614929]
[8.50491428 136.91387939]
[-5.73970222 132.56185913]
[-20.27444077 136.26879883]
[-34.80917740 139.97572327]
[-49.34391785 143.68266296]
[-63.87865448 147.38960266]
[-78.41339111 151.09654236]
[-89.87340546 162.00427246]
[-104.11802673 157.65223694]
[-118.65276337 161.35917664]
[-133.18750000 165.06611633]
[-147.72224426 168.77305603]
[-159.18225098 179.68078613]
[-173.42686462 175.32875061]
[-187.96160889 179.03569031]
[-191.04827881 195.00448608]
[-200.75250244 207.98405457]
[-215.09254456 215.40849304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 79]
[3 78]
[4 77]
[5 76]
[7 73]
[8 72]
[9 71]
[10 70]
[13 69]
[14 68]
[17 65]
[18 64]
[19 63]
[20 62]
[21 61]
[23 59]
[24 58]
[27 55]
[28 54]
[30 53]
[31 52]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[39 44]
[86 191]
[87 190]
[89 188]
[90 187]
[91 186]
[92 185]
[94 183]
[95 182]
[96 181]
[97 180]
[98 179]
[99 178]
[101 176]
[102 175]
[103 174]
[104 172]
[105 171]
[106 170]
[107 118]
[108 117]
[109 116]
[119 167]
[120 166]
[122 164]
[123 163]
[124 162]
[126 158]
[127 157]
[128 156]
[129 155]
[130 154]
[131 153]
[132 152]
[133 150]
[134 149]
[135 148]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
