%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACAGGGUGGCGGCCCGGGGGGCAGGGAGUAGGGAGAAGGGGGGGAGCGGCGCGGGCGGAAGCGGCCGGGAAGGUCACUUCCGGCCUGGGCGCCCGUCCCCCUGACCCCAGGGUCUGAGUCGCCGCUGCCGCCGCUGCCACCAUCCGCGAGGCAGGAGAGAGGAGGAGGAGUGCGGCGCGGCGGCCCCGGGACCAAGGAGGGACCCAGAC\
) } def
/len { sequence length } bind def

/coor [
[50.84563828 213.59519958]
[46.27397156 199.30883789]
[48.26879120 184.44207764]
[56.44482422 171.86621094]
[69.22298431 164.01008606]
[84.13534546 162.39102173]
[98.30180359 167.32170105]
[108.98520660 177.84815979]
[105.69362640 163.21376038]
[101.15969849 157.37867737]
[102.46310425 148.33929443]
[99.38772583 133.65794373]
[96.31234741 118.97659302]
[86.55801392 107.58128357]
[72.52674103 102.27812958]
[58.49547577 96.97496796]
[44.46420670 91.67181396]
[30.43293571 86.36865997]
[14.78853130 88.72730255]
[5.61868763 76.99004364]
[-8.41258144 71.68688202]
[-22.44385147 66.38372803]
[-36.47512054 61.08057022]
[-52.11952591 63.43921280]
[-61.28936768 51.70195389]
[-75.32064056 46.39879990]
[-89.35190582 41.09564209]
[-103.38317871 35.79248428]
[-117.41444397 30.48932648]
[-108.48239136 42.53998566]
[-105.57938385 57.25638962]
[-109.26609802 71.79627228]
[-118.83049774 83.35144806]
[-132.42535400 89.69021606]
[-147.42500305 89.58831024]
[-160.93247986 83.06542206]
[-170.33900452 71.38135529]
[-173.82783508 56.79272842]
[-170.72514343 42.11712646]
[-161.63017273 30.18893623]
[-148.29951477 23.31192780]
[-133.30973816 22.81391907]
[-146.18807983 15.12314320]
[-159.06643677 7.43236732]
[-174.88172913 6.99967766]
[-181.84175110 -6.16874123]
[-194.72010803 -13.85951710]
[-203.69093323 -15.57225704]
[-207.73049927 -21.75988579]
[-220.49401855 -29.63976479]
[-229.43861389 -31.48462677]
[-233.38647461 -37.73115921]
[-246.03239441 -45.79842758]
[-261.82803345 -46.69738770]
[-268.39663696 -60.06536102]
[-281.04257202 -68.13262939]
[-293.68847656 -76.19989777]
[-306.33441162 -84.26715851]
[-318.98031616 -92.33442688]
[-331.68536377 -100.30821991]
[-344.44891357 -108.18809509]
[-357.21243286 -116.06797791]
[-369.97595215 -123.94785309]
[-382.73947144 -131.82772827]
[-398.54666138 -132.49363708]
[-405.31170654 -145.76327515]
[-418.07522583 -153.64314270]
[-430.83874512 -161.52302551]
[-443.60229492 -169.40290833]
[-459.48260498 -167.12362671]
[-471.06658936 -178.22274780]
[-469.46804810 -194.18595886]
[-455.91317749 -202.76765442]
[-440.80017090 -197.38470459]
[-435.72241211 -182.16642761]
[-422.95889282 -174.28654480]
[-410.19534302 -166.40667725]
[-397.43182373 -158.52679443]
[-382.53756714 -158.42451477]
[-374.85958862 -144.59126282]
[-362.09606934 -136.71138000]
[-349.33255005 -128.83149719]
[-336.56903076 -120.95162201]
[-323.80551147 -113.07173920]
[-316.46377563 -112.23284912]
[-310.91305542 -104.98034668]
[-298.26712036 -96.91307831]
[-285.62121582 -88.84580994]
[-272.97531128 -80.77854156]
[-260.32937622 -72.71127319]
[-245.43824768 -72.38933563]
[-237.96511841 -58.44434357]
[-225.31921387 -50.37707520]
[-212.61415100 -42.40328598]
[-199.85061646 -34.52340698]
[-187.02932739 -26.73786926]
[-174.15098572 -19.04709435]
[-159.25683594 -19.16449928]
[-151.37565613 -5.44598532]
[-138.49731445 2.24479055]
[-125.61895752 9.93556595]
[-112.11128998 16.45805740]
[-98.08001709 21.76121330]
[-84.04875183 27.06437111]
[-70.01747894 32.36753082]
[-55.98620987 37.67068481]
[-41.34541702 34.93272400]
[-31.17196274 47.04930115]
[-17.14069366 52.35245895]
[-3.10942435 57.65561676]
[10.92184544 62.95877457]
[25.56263924 60.22080994]
[35.73609161 72.33738708]
[49.76736069 77.64054108]
[63.79863358 82.94370270]
[77.82990265 88.24685669]
[91.86116791 93.55001831]
[93.33225250 89.97402191]
[96.30558014 86.81094360]
[100.62398529 84.65998840]
[105.90283203 84.04845428]
[111.56399536 85.34927368]
[116.89836884 88.71398926]
[131.68310547 86.18192291]
[146.46784973 83.64985657]
[161.25259399 81.11779785]
[176.03733826 78.58573151]
[190.82208252 76.05366516]
[198.75088501 71.52117920]
[205.84342957 73.59496307]
[220.66390991 71.28122711]
[235.48439026 68.96749115]
[250.30487061 66.65376282]
[265.12536621 64.34002686]
[273.12014771 59.92497253]
[280.18133545 62.10313416]
[295.03433228 60.00823593]
[309.88732910 57.91333771]
[317.94635010 53.61668015]
[324.97463989 55.89874649]
[339.85690308 54.02313995]
[352.58129883 44.62098312]
[366.17617798 50.70613480]
[381.05844116 48.83052444]
[389.17996216 44.65319443]
[396.17382812 47.03867340]
[411.08215332 45.38276291]
[425.99047852 43.72685242]
[429.84906006 29.04775810]
[438.75292969 16.75608253]
[451.49795532 8.51417351]
[466.36044312 5.43668222]
[481.33035278 7.93981409]
[494.38317871 15.68504143]
[503.75357056 27.62488556]
[508.17431641 42.14458084]
[507.04751587 57.28045654]
[500.52554321 70.98551178]
[489.49047852 81.40625000]
[475.43472290 87.13334656]
[460.25915527 87.39226532]
[446.01620483 82.14799500]
[434.63208008 72.10976410]
[427.64639282 58.63516998]
[412.73806763 60.29108047]
[397.82974243 61.94699097]
[382.93405151 63.71279907]
[368.05178833 65.58840942]
[356.39187622 74.85640717]
[341.73251343 68.90541077]
[326.85025024 70.78102112]
[311.98220825 72.76632690]
[297.12921143 74.86122894]
[282.27621460 76.95613098]
[267.43908691 79.16050720]
[252.61860657 81.47423553]
[237.79812622 83.78797150]
[222.97764587 86.10170746]
[208.15716553 88.41544342]
[193.35415649 90.83840942]
[178.56941223 93.37047577]
[163.78466797 95.90253448]
[148.99992371 98.43460083]
[134.21517944 100.96666718]
[119.43043518 103.49873352]
[110.99369812 115.90121460]
[114.06907654 130.58256531]
[117.14445496 145.26391602]
[120.32802582 159.92218018]
[123.61959839 174.55657959]
[128.19168091 188.84278870]
[134.00849915 202.66902161]
[139.82531738 216.49525452]
[152.30870056 226.21511841]
[150.11231995 240.94689941]
[155.92913818 254.77313232]
[170.65641785 260.50747681]
[176.93879700 275.00946045]
[171.04905701 289.67529297]
[156.48147583 295.80398560]
[141.87873840 289.75952148]
[135.90438843 275.12796021]
[142.10290527 260.58993530]
[136.28608704 246.76371765]
[124.21876526 238.03279114]
[125.99907684 222.31207275]
[120.18226624 208.48583984]
[114.36545563 194.65960693]
[111.77808380 209.43476868]
[103.10599518 221.67384338]
[90.02407837 229.01301575]
[75.05892181 230.03482056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 190]
[9 189]
[11 188]
[12 187]
[13 186]
[14 117]
[15 116]
[16 115]
[17 114]
[18 113]
[20 111]
[21 110]
[22 109]
[23 108]
[25 106]
[26 105]
[27 104]
[28 103]
[29 102]
[42 101]
[43 100]
[44 99]
[46 97]
[47 96]
[49 95]
[50 94]
[52 93]
[53 92]
[55 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[66 78]
[67 77]
[68 76]
[69 75]
[123 185]
[124 184]
[125 183]
[126 182]
[127 181]
[128 180]
[130 179]
[131 178]
[132 177]
[133 176]
[134 175]
[136 174]
[137 173]
[138 172]
[140 171]
[141 170]
[143 168]
[144 167]
[146 166]
[147 165]
[148 164]
[191 208]
[192 207]
[193 206]
[195 204]
[196 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
