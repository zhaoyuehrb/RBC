%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGAUCUAUAUUUGUAGGGGUUCGGGGCCCAGGCCGGGUCCCUAUCUCUGUGUAUAAACUGUACAGACCGUGGCCGCCCUGCCUGUGUGUGUGUGUGUGCGCGCGCGCGCGCGUCUGCUCCGCGUGUUGGUGGCUGUGGCCAUGGCUCUGUGCCCACCAGCAUCUCCCUCCUGAG\
) } def
/len { sequence length } bind def

/coor [
[87.77751923 204.94268799]
[99.14276886 194.20185852]
[98.08467865 179.23922729]
[97.02659607 164.27659607]
[95.96851349 149.31394958]
[84.49383545 146.98593140]
[73.88745880 142.02682495]
[64.74331665 134.71434021]
[57.57344818 125.45794678]
[43.69005966 131.13699341]
[29.80667496 136.81604004]
[15.92328930 142.49508667]
[2.03990340 148.17413330]
[-1.59562612 158.46583557]
[-10.13004303 164.91151428]
[-20.58466339 165.56527710]
[-29.47411919 160.45211792]
[-43.54927826 165.63766479]
[-57.62443924 170.82321167]
[-71.69960022 176.00874329]
[-85.77475739 181.19429016]
[-99.84991455 186.37983704]
[-113.92507935 191.56538391]
[-120.04178619 202.94332886]
[-131.89535522 206.96321106]
[-142.93949890 201.98214722]
[-157.10397339 206.91847229]
[-171.26846313 211.85481262]
[-185.43295288 216.79113770]
[-199.59742737 221.72747803]
[-213.76191711 226.66381836]
[-227.92640686 231.60014343]
[-236.17204285 245.36201477]
[-252.09109497 247.35279846]
[-263.47183228 236.04534912]
[-261.58392334 220.11376953]
[-247.87561035 211.77940369]
[-232.86273193 217.43565369]
[-218.69824219 212.49932861]
[-204.53376770 207.56298828]
[-190.36927795 202.62666321]
[-176.20480347 197.69032288]
[-162.04031372 192.75399780]
[-147.87582397 187.81765747]
[-137.16381836 173.93351746]
[-119.11061859 177.49023438]
[-105.03546143 172.30468750]
[-90.96030426 167.11914062]
[-76.88513947 161.93359375]
[-62.80998230 156.74804688]
[-48.73482513 151.56250000]
[-34.65966415 146.37695312]
[-23.44534492 130.64640808]
[-3.63914514 134.29075623]
[10.24424076 128.61170959]
[24.12762642 122.93265533]
[38.01101303 117.25360870]
[51.89439774 111.57455444]
[51.89331818 88.42993927]
[62.41846848 67.81697083]
[81.16683960 54.24597168]
[104.03609467 50.68642044]
[126.02221680 57.91718292]
[135.75386047 46.50250244]
[145.48551941 35.08781815]
[155.21716309 23.67313766]
[164.94882202 12.25845528]
[174.68046570 0.84377337]
[184.41212463 -10.57090855]
[194.04266357 -22.07102394]
[203.57135010 -33.65567780]
[213.10003662 -45.24032974]
[222.62872314 -56.82498169]
[232.15740967 -68.40963745]
[241.68608093 -79.99428558]
[251.21476746 -91.57894135]
[260.74346924 -103.16359711]
[270.27212524 -114.74824524]
[279.80081177 -126.33290100]
[282.38333130 -144.55099487]
[299.01931763 -150.09721375]
[308.34207153 -161.84822083]
[317.66482544 -173.59924316]
[326.98754883 -185.35025024]
[336.31030273 -197.10127258]
[331.85757446 -216.48429871]
[347.91546631 -233.89106750]
[352.34884644 -248.22093201]
[356.78222656 -262.55081177]
[361.21560669 -276.88067627]
[365.64895630 -291.21054077]
[370.08233643 -305.54040527]
[374.51571655 -319.87030029]
[378.94909668 -334.20016479]
[371.35522461 -348.06048584]
[375.86642456 -363.20727539]
[389.80627441 -370.65417480]
[404.90447998 -365.98306274]
[412.20358276 -351.96527100]
[407.37313843 -336.91726685]
[393.27896118 -329.76678467]
[388.84558105 -315.43692017]
[384.41220093 -301.10705566]
[379.97885132 -286.77716064]
[375.54547119 -272.44729614]
[371.11209106 -258.11743164]
[366.67871094 -243.78756714]
[362.24536133 -229.45768738]
[373.91363525 -220.03160095]
[386.99136353 -227.37825012]
[400.06909180 -234.72488403]
[413.14682007 -242.07151794]
[426.22454834 -249.41815186]
[439.30227661 -256.76480103]
[452.38000488 -264.11141968]
[455.09844971 -279.51089478]
[467.11264038 -289.52053833]
[482.74987793 -289.41409302]
[494.62670898 -279.24182129]
[497.13522339 -263.80676270]
[489.09106445 -250.39686584]
[474.29235840 -245.34388733]
[459.72662354 -251.03369141]
[446.64889526 -243.68705750]
[433.57116699 -236.34042358]
[420.49343872 -228.99378967]
[407.41571045 -221.64715576]
[394.33801270 -214.30052185]
[381.26028442 -206.95388794]
[367.78411865 -187.72250366]
[348.06130981 -187.77851868]
[338.73858643 -176.02751160]
[329.41583252 -164.27648926]
[320.09307861 -152.52548218]
[310.77032471 -140.77445984]
[311.83944702 -128.70628357]
[304.14257812 -118.83586884]
[291.38546753 -116.80421448]
[281.85678101 -105.21956635]
[272.32809448 -93.63491058]
[262.79940796 -82.05025482]
[253.27073669 -70.46560669]
[243.74205017 -58.88095093]
[234.21337891 -47.29629898]
[224.68469238 -35.71164703]
[215.15600586 -24.12699318]
[205.62731934 -12.54233932]
[203.80108643 -5.35739660]
[195.82681274 -0.83925706]
[186.09515381 10.57542515]
[176.36351013 21.99010658]
[166.63185120 33.40478897]
[156.90020752 44.81946945]
[147.16854858 56.23415375]
[137.43690491 67.64883423]
[141.77673340 73.48917389]
[145.21308899 79.90285492]
[147.67166138 86.75115204]
[149.09927368 93.88597870]
[149.46504211 101.15303040]
[148.76106262 108.39514160]
[147.00256348 115.45569611]
[144.22756958 122.18200684]
[140.49609375 128.42860413]
[135.88885498 134.06037903]
[130.50544739 138.95556641]
[124.46234131 143.00828552]
[117.89019012 146.13090515]
[110.93114471 148.25587463]
[111.98923492 163.21850586]
[113.04731750 178.18113708]
[114.10540009 193.14378357]
[126.86906433 202.17831421]
[130.78929138 217.31654358]
[124.01505280 231.41064453]
[109.74495697 237.80583191]
[94.71689606 233.48246765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 172]
[3 171]
[4 170]
[5 169]
[9 58]
[10 57]
[11 56]
[12 55]
[13 54]
[17 52]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[77 140]
[78 139]
[79 138]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[109 129]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
