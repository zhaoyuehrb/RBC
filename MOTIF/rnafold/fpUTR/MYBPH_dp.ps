%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYBPH)
} def

/sequence { (\
CAGGCCCCCCAACGGCUGACCCCUGCACACUCCACCCUGGCCCCCCAGCCAGUCCAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.587044624 ubox
1 25 0.332405653 ubox
1 39 0.010272641 ubox
2 17 0.547698981 ubox
2 24 0.337097372 ubox
2 31 0.014559326 ubox
2 38 0.014721829 ubox
3 9 0.077467840 ubox
3 10 0.172710728 ubox
3 16 0.396060435 ubox
3 17 0.656571423 ubox
3 21 0.051604539 ubox
3 22 0.037291652 ubox
3 23 0.332328204 ubox
3 30 0.014954191 ubox
3 31 0.007307821 ubox
3 32 0.008375651 ubox
3 33 0.055853640 ubox
3 36 0.046567089 ubox
3 37 0.017197081 ubox
3 42 0.013415186 ubox
3 50 0.009421857 ubox
3 54 0.018100068 ubox
3 55 0.046628979 ubox
4 8 0.076579878 ubox
4 9 0.170788757 ubox
4 16 0.810961808 ubox
4 20 0.050173634 ubox
4 21 0.041148951 ubox
4 22 0.307959871 ubox
4 26 0.017023881 ubox
4 30 0.007811686 ubox
4 31 0.006966768 ubox
4 32 0.055586690 ubox
4 35 0.046492967 ubox
4 36 0.017737408 ubox
4 41 0.013461454 ubox
4 49 0.009417131 ubox
4 53 0.015446284 ubox
4 54 0.044307756 ubox
4 58 0.066152414 ubox
5 15 0.899851077 ubox
5 25 0.016977895 ubox
5 40 0.013453122 ubox
5 48 0.009205671 ubox
5 52 0.017470524 ubox
5 57 0.066089848 ubox
6 14 0.896580410 ubox
6 15 0.153075162 ubox
6 39 0.013388012 ubox
7 14 0.168250242 ubox
7 15 0.127676385 ubox
8 14 0.128900665 ubox
8 15 0.193036532 ubox
9 14 0.193778326 ubox
9 15 0.046685711 ubox
9 40 0.003841432 ubox
10 14 0.043864340 ubox
10 18 0.072849246 ubox
10 25 0.044230595 ubox
10 39 0.003887045 ubox
11 17 0.069625749 ubox
11 24 0.043447970 ubox
11 38 0.003805205 ubox
12 53 0.066935356 ubox
13 25 0.027385060 ubox
13 52 0.069963050 ubox
14 21 0.126394134 ubox
14 22 0.037037848 ubox
14 23 0.047107124 ubox
14 24 0.025079067 ubox
14 31 0.007327042 ubox
14 32 0.007323202 ubox
14 33 0.017157668 ubox
14 36 0.033296202 ubox
14 37 0.007889043 ubox
14 42 0.006959138 ubox
14 50 0.113675455 ubox
14 54 0.016580087 ubox
14 55 0.011928353 ubox
15 20 0.125749531 ubox
15 21 0.037172264 ubox
15 22 0.046846234 ubox
15 23 0.024908070 ubox
15 26 0.127559804 ubox
15 30 0.007658039 ubox
15 31 0.005771400 ubox
15 32 0.016737228 ubox
15 35 0.033295982 ubox
15 36 0.008193742 ubox
15 41 0.006977405 ubox
15 49 0.113924322 ubox
15 53 0.016288581 ubox
15 54 0.010497346 ubox
15 58 0.207047021 ubox
16 25 0.128025449 ubox
16 40 0.006977297 ubox
16 48 0.113923795 ubox
16 52 0.018643575 ubox
16 57 0.207533461 ubox
17 25 0.004388258 ubox
17 27 0.035418039 ubox
17 29 0.025865449 ubox
17 34 0.032405532 ubox
17 39 0.006782225 ubox
17 47 0.113860605 ubox
17 51 0.018578077 ubox
17 56 0.207286668 ubox
17 59 0.009550564 ubox
18 24 0.012965604 ubox
18 26 0.057809585 ubox
18 28 0.038245860 ubox
18 32 0.051565271 ubox
18 33 0.041020575 ubox
18 38 0.004723686 ubox
18 46 0.113454099 ubox
18 50 0.018453335 ubox
18 54 0.108965469 ubox
18 55 0.182835831 ubox
18 58 0.023107132 ubox
19 31 0.049591398 ubox
19 53 0.145487714 ubox
20 40 0.006894479 ubox
20 52 0.120421861 ubox
21 39 0.006878522 ubox
21 40 0.010402899 ubox
22 39 0.010294896 ubox
22 40 0.042534840 ubox
23 39 0.042616110 ubox
23 40 0.007601960 ubox
23 48 0.075875728 ubox
23 52 0.027837139 ubox
23 57 0.236270653 ubox
24 34 0.101047789 ubox
24 39 0.007329571 ubox
24 47 0.076179877 ubox
24 51 0.028947042 ubox
24 56 0.238962248 ubox
24 59 0.204086787 ubox
25 33 0.113527843 ubox
25 38 0.005076926 ubox
25 41 0.100865176 ubox
25 46 0.075778944 ubox
25 49 0.019145069 ubox
25 50 0.027247056 ubox
25 53 0.008788064 ubox
25 55 0.238756168 ubox
25 58 0.268151094 ubox
26 39 0.013100149 ubox
26 40 0.100875156 ubox
26 48 0.020646758 ubox
26 52 0.008619988 ubox
26 57 0.267122981 ubox
27 38 0.012382528 ubox
27 53 0.148412100 ubox
28 39 0.098379845 ubox
28 52 0.112497210 ubox
29 38 0.096028029 ubox
29 53 0.118960933 ubox
30 40 0.005203152 ubox
30 48 0.003713405 ubox
30 52 0.114400803 ubox
30 57 0.188036370 ubox
31 39 0.004702384 ubox
31 40 0.007644738 ubox
31 47 0.003571428 ubox
31 51 0.101864343 ubox
31 56 0.186449506 ubox
32 39 0.008613996 ubox
32 40 0.080619459 ubox
33 39 0.080821305 ubox
34 38 0.065526695 ubox
34 53 0.088024869 ubox
35 52 0.072129014 ubox
37 48 0.116311090 ubox
37 52 0.959903937 ubox
37 57 0.016764909 ubox
38 47 0.117246549 ubox
38 51 0.979786061 ubox
38 56 0.016705330 ubox
39 45 0.007326568 ubox
39 46 0.117300647 ubox
39 50 0.982834868 ubox
39 55 0.016354989 ubox
40 44 0.008051886 ubox
40 45 0.115873396 ubox
40 49 0.982868222 ubox
40 54 0.016127686 ubox
41 48 0.980904866 ubox
41 52 0.013245481 ubox
48 58 0.012373110 ubox
49 57 0.012434517 ubox
52 58 0.033100770 ubox
53 57 0.031977072 ubox
3 17 0.9500000 lbox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
showpage
end
%%EOF
