%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:50:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGCAUGAAGAUUCAGCUGUGAAGAUACUAUAAAAAGGGAAGAGAAGGACCGAGACAGAAGCAACAACGGAACUGUCAGUGCGGAGUAGGGCUAAACUCAGUUCCAUUGUUAAGCAAGGAAAAACAAACAAUACAUUGAAUUUGACAACCCACUGAAGUUGCAGAUA\
) } def
/len { sequence length } bind def

/coor [
[116.78702545 240.24554443]
[98.83460236 241.24185181]
[80.90106201 239.94944763]
[63.27700424 236.38929749]
[46.24801254 230.61906433]
[39.81120300 244.16777039]
[38.94738388 253.30162048]
[33.12821960 257.90570068]
[26.44214630 271.33312988]
[19.75607109 284.76058960]
[21.30512619 301.08642578]
[7.78607702 310.36904907]
[-6.89383793 303.05932617]
[-7.63318062 286.67684937]
[6.32862091 278.07452393]
[13.01469612 264.64706421]
[19.70077133 251.21961975]
[26.26249313 237.73097229]
[32.69930267 224.18225098]
[25.67164230 220.10792542]
[18.88982773 215.63630676]
[12.37629128 210.78222656]
[6.15257788 205.56172180]
[0.23927209 199.99206543]
[-5.34406710 194.09167480]
[-10.57897186 187.88008118]
[-15.44812870 181.37780762]
[-19.93543053 174.60636902]
[-24.02603722 167.58815002]
[-27.70641708 160.34640503]
[-30.96439934 152.90504456]
[-33.78920364 145.28869629]
[-36.17148972 137.52255249]
[-38.10338211 129.63229370]
[-39.57848358 121.64403534]
[-40.59191513 113.58418274]
[-41.14033127 105.47940063]
[-41.22191238 97.35649872]
[-40.83639145 89.24233246]
[-55.71106339 87.30734253]
[-64.46044159 99.86548615]
[-78.04903412 106.90883636]
[-93.35427856 106.81887817]
[-106.85914612 99.61629486]
[-115.46030426 86.95617676]
[-117.18128204 71.74772644]
[-111.62660980 57.48574448]
[-100.07270813 47.44752121]
[-85.17458344 43.93976974]
[-70.35570526 47.76854324]
[-59.02135468 58.05401993]
[-53.77607346 72.43267059]
[-38.90140533 74.36766052]
[-33.41882324 53.63153458]
[-24.85970879 33.96463013]
[-13.42142582 15.82044697]
[0.63226634 -0.38262010]
[16.97730064 -14.27094269]
[35.23677444 -25.52426529]
[54.98963547 -33.88309860]
[75.78040314 -39.15468979]
[97.12965393 -41.21748352]
[118.54508972 -40.02391434]
[121.30133820 -54.76850891]
[123.78464508 -69.56152344]
[125.99417114 -84.39789581]
[128.20368958 -99.23426819]
[130.41322327 -114.07064056]
[132.62274170 -128.90701294]
[127.00263214 -143.69636536]
[136.53028870 -155.14509583]
[138.73980713 -169.98146057]
[140.94934082 -184.81784058]
[143.15885925 -199.65422058]
[145.36837769 -214.49058533]
[147.57791138 -229.32696533]
[149.78742981 -244.16333008]
[136.26736450 -253.18226624]
[128.05503845 -267.13955688]
[126.74673462 -283.22238159]
[132.55326843 -298.21511841]
[144.26794434 -309.14208984]
[159.51692200 -313.85833740]
[161.45190430 -328.73300171]
[150.08766174 -339.29867554]
[147.13717651 -354.53268433]
[153.73500061 -368.57717896]
[167.34411621 -376.03182983]
[182.73153687 -374.03015137]
[193.98049927 -363.34179688]
[196.76553345 -348.07672119]
[190.01574707 -334.10458374]
[176.32656860 -326.79803467]
[174.39158630 -311.92333984]
[186.38481140 -304.90930176]
[194.81968689 -293.81451416]
[198.39300537 -280.29849243]
[196.53187561 -266.39874268]
[189.48519897 -254.22383118]
[178.29104614 -245.63328552]
[164.62380981 -241.95381165]
[162.41429138 -227.11743164]
[160.20475769 -212.28106689]
[157.99523926 -197.44468689]
[155.78570557 -182.60830688]
[153.57618713 -167.77194214]
[151.36665344 -152.93556213]
[157.14480591 -139.20741272]
[147.45912170 -126.69749451]
[145.24958801 -111.86112213]
[143.04006958 -97.02474213]
[140.83053589 -82.18836975]
[138.62101746 -67.35199738]
[140.71791077 -63.02135468]
[140.08894348 -57.32346344]
[136.04592896 -52.01226807]
[133.28968811 -37.26766968]
[145.73913574 -33.63588333]
[157.80300903 -28.87757683]
[169.37960815 -23.03286743]
[180.37136841 -16.15102386]
[190.68560791 -8.29005623]
[200.23541260 0.48376793]
[208.94023132 10.09648800]
[216.72673035 20.46707153]
[223.52925110 31.50809479]
[229.29045105 43.12648773]
[233.96176147 55.22431183]
[237.50381470 67.69958496]
[239.88674927 80.44713593]
[241.09046936 93.35951233]
[241.10484314 106.32787323]
[239.92973328 119.24288940]
[237.57504272 131.99568176]
[234.06063843 144.47877502]
[229.41613770 156.58691406]
[223.68069458 168.21804810]
[216.90266418 179.27412415]
[209.13916016 189.66192627]
[200.45564270 199.29391479]
[190.92532349 208.08886719]
[180.62850952 215.97267151]
[188.52499390 228.72592163]
[196.42147827 241.47918701]
[204.31796265 254.23243713]
[212.21444702 266.98568726]
[219.42178345 272.66262817]
[220.13648987 280.04840088]
[227.79595947 292.94537354]
[235.45542908 305.84237671]
[243.11489868 318.73937988]
[258.57760620 320.03695679]
[270.30249023 330.20095825]
[273.78106689 345.32312012]
[267.67575073 359.58862305]
[254.33418274 367.51211548]
[238.88644409 366.04687500]
[227.27252197 355.75628662]
[223.95819092 340.59729004]
[230.21789551 326.39883423]
[222.55842590 313.50186157]
[214.89895630 300.60485840]
[207.23948669 287.70785522]
[199.46118164 274.88217163]
[191.56469727 262.12893677]
[183.66821289 249.37567139]
[175.77174377 236.62240601]
[167.87525940 223.86915588]
[151.58932495 231.48825073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 19]
[6 18]
[8 17]
[9 16]
[10 15]
[39 53]
[40 52]
[63 117]
[64 116]
[65 113]
[66 112]
[67 111]
[68 110]
[69 109]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[83 94]
[84 93]
[142 168]
[143 167]
[144 166]
[145 165]
[146 164]
[148 163]
[149 162]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
