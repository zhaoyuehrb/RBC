%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPATA2L)
} def

/sequence { (\
GCGGAGCCGACUCCCGGCGGAAGCGCGCGGCGCGCGGGGAGGCCCGAACUGAUCCGCGGCGGCCGGAGACCGCUGGGGACAGACAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.023980958 ubox
1 18 0.008865658 ubox
1 24 0.020522121 ubox
1 26 0.007270381 ubox
1 31 0.003773451 ubox
1 33 0.057554463 ubox
1 35 0.010737138 ubox
1 43 0.006065167 ubox
2 6 0.023892690 ubox
2 9 0.045776187 ubox
2 16 0.003686267 ubox
2 17 0.008577992 ubox
2 23 0.020611204 ubox
2 25 0.007299133 ubox
2 30 0.003770016 ubox
2 32 0.057596726 ubox
2 34 0.011013450 ubox
2 42 0.006068180 ubox
2 46 0.979611330 ubox
3 8 0.045805243 ubox
3 12 0.005485379 ubox
3 14 0.015151496 ubox
3 15 0.003609921 ubox
3 24 0.007301576 ubox
3 31 0.057390574 ubox
3 33 0.010825632 ubox
3 45 0.993288496 ubox
4 11 0.006618722 ubox
4 13 0.018930103 ubox
4 44 0.993219605 ubox
5 12 0.019751472 ubox
6 11 0.019846188 ubox
6 18 0.026449335 ubox
6 28 0.056584386 ubox
6 31 0.010471052 ubox
6 43 0.993612543 ubox
7 17 0.026470070 ubox
7 27 0.056588599 ubox
7 30 0.010499748 ubox
7 37 0.003585703 ubox
7 42 0.993559212 ubox
7 87 0.020666932 ubox
8 16 0.026519124 ubox
8 25 0.056525906 ubox
8 29 0.010491236 ubox
8 36 0.003607621 ubox
8 41 0.880841376 ubox
8 46 0.007875271 ubox
8 86 0.021115062 ubox
9 15 0.026360259 ubox
9 24 0.056559301 ubox
9 28 0.010349936 ubox
9 35 0.003672031 ubox
9 45 0.007866889 ubox
11 23 0.023532155 ubox
11 37 0.006438689 ubox
11 38 0.197548550 ubox
11 39 0.179446380 ubox
11 41 0.461249682 ubox
11 78 0.019139782 ubox
11 82 0.017633856 ubox
11 86 0.004420214 ubox
12 21 0.056034607 ubox
12 22 0.017712446 ubox
12 36 0.005460274 ubox
12 37 0.191983404 ubox
12 38 0.106293421 ubox
12 39 0.170182532 ubox
12 40 0.931790514 ubox
12 78 0.060389302 ubox
12 79 0.010292656 ubox
12 81 0.014812948 ubox
12 85 0.003729097 ubox
13 20 0.060160086 ubox
13 30 0.007140574 ubox
13 36 0.190697770 ubox
13 37 0.112841752 ubox
13 38 0.243463103 ubox
13 39 0.937845357 ubox
13 77 0.076600936 ubox
13 78 0.009800789 ubox
14 19 0.060189513 ubox
14 20 0.036529731 ubox
14 29 0.007412289 ubox
14 30 0.175684632 ubox
14 36 0.111037142 ubox
14 37 0.244609421 ubox
14 38 0.937932455 ubox
14 76 0.077013637 ubox
14 77 0.008177125 ubox
15 19 0.036539867 ubox
15 27 0.009437778 ubox
15 29 0.176313257 ubox
15 32 0.040378922 ubox
15 34 0.057147496 ubox
15 36 0.245047784 ubox
15 37 0.937440298 ubox
15 46 0.004820412 ubox
15 75 0.077385896 ubox
15 76 0.006121062 ubox
16 24 0.005961716 ubox
16 26 0.009807088 ubox
16 28 0.175121037 ubox
16 31 0.040659247 ubox
16 33 0.055149443 ubox
16 35 0.210091058 ubox
16 44 0.007749034 ubox
16 45 0.004001074 ubox
16 74 0.077541458 ubox
17 24 0.103400477 ubox
17 26 0.182814221 ubox
17 28 0.043556183 ubox
17 31 0.038001370 ubox
17 33 0.182304349 ubox
17 35 0.939851260 ubox
17 43 0.008404178 ubox
17 73 0.077652678 ubox
18 23 0.104778526 ubox
18 25 0.183175595 ubox
18 27 0.045871775 ubox
18 29 0.043465135 ubox
18 30 0.033278350 ubox
18 32 0.182766196 ubox
18 34 0.945442443 ubox
18 36 0.030307049 ubox
18 42 0.008846180 ubox
18 72 0.077652294 ubox
19 24 0.182708809 ubox
19 26 0.046099756 ubox
19 28 0.047363650 ubox
19 31 0.174844966 ubox
19 33 0.695328509 ubox
19 35 0.029298217 ubox
19 71 0.077650066 ubox
20 70 0.077538563 ubox
23 31 0.637575100 ubox
23 33 0.634595079 ubox
23 35 0.087871401 ubox
24 30 0.639351346 ubox
24 32 0.694341732 ubox
24 34 0.091067240 ubox
24 36 0.043994328 ubox
24 65 0.076701247 ubox
25 31 0.694575745 ubox
25 33 0.097593197 ubox
25 35 0.107350434 ubox
25 64 0.076738375 ubox
26 30 0.689539961 ubox
26 32 0.098101360 ubox
26 34 0.108856706 ubox
26 36 0.025137183 ubox
26 65 0.005867929 ubox
27 31 0.091797600 ubox
27 33 0.111032755 ubox
27 35 0.049373341 ubox
27 63 0.077093826 ubox
27 64 0.004166988 ubox
28 32 0.110239630 ubox
28 34 0.049915294 ubox
28 36 0.006289073 ubox
28 46 0.004062197 ubox
28 61 0.005043793 ubox
28 62 0.077168869 ubox
28 65 0.006383059 ubox
29 33 0.046743489 ubox
29 35 0.006865706 ubox
29 45 0.004126939 ubox
29 60 0.005100762 ubox
29 64 0.006402645 ubox
30 44 0.004124823 ubox
30 60 0.077137445 ubox
30 63 0.006402807 ubox
31 58 0.005150963 ubox
31 59 0.077105945 ubox
31 61 0.004626972 ubox
31 62 0.004773246 ubox
32 43 0.004104073 ubox
32 57 0.005360941 ubox
32 60 0.006294004 ubox
33 42 0.004104289 ubox
33 56 0.005360665 ubox
33 58 0.077019941 ubox
33 59 0.004494001 ubox
34 55 0.005336740 ubox
34 57 0.077440055 ubox
35 46 0.059288814 ubox
35 56 0.077441008 ubox
36 45 0.065006141 ubox
36 55 0.077423237 ubox
37 44 0.065026629 ubox
37 45 0.006740828 ubox
37 54 0.077400703 ubox
38 43 0.064959201 ubox
38 44 0.006800803 ubox
38 53 0.076831935 ubox
39 43 0.006718392 ubox
40 50 0.020931403 ubox
41 49 0.021543564 ubox
41 50 0.074099420 ubox
42 49 0.073819949 ubox
43 87 0.007454309 ubox
44 86 0.007666275 ubox
44 87 0.049472839 ubox
45 86 0.050663504 ubox
49 82 0.977639726 ubox
49 86 0.144023396 ubox
49 87 0.008344414 ubox
50 81 0.983505561 ubox
50 85 0.144047488 ubox
50 86 0.007434553 ubox
51 80 0.984252074 ubox
51 84 0.143202850 ubox
53 78 0.042043722 ubox
53 79 0.991805266 ubox
53 83 0.009385988 ubox
54 77 0.047729902 ubox
54 78 0.995797536 ubox
54 82 0.005559053 ubox
55 76 0.047972956 ubox
55 77 0.995692153 ubox
57 75 0.996314619 ubox
58 74 0.996212283 ubox
59 73 0.996968054 ubox
60 72 0.996957263 ubox
61 71 0.996906174 ubox
62 70 0.994576319 ubox
65 71 0.005777155 ubox
66 70 0.006194974 ubox
2 46 0.9500000 lbox
3 45 0.9500000 lbox
4 44 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
12 40 0.9500000 lbox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
49 82 0.9500000 lbox
50 81 0.9500000 lbox
51 80 0.9500000 lbox
53 79 0.9500000 lbox
54 78 0.9500000 lbox
55 77 0.9500000 lbox
57 75 0.9500000 lbox
58 74 0.9500000 lbox
59 73 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
showpage
end
%%EOF
