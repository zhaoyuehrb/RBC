%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MAGEL2)
} def

/sequence { (\
AGGGAGGGAGCCUCUGAACAGCCACGUAGGCAUUCUCUUCUCUCUGGAGGAAAAGGCCCAGCAGCUGUCCGAGGAAAAGACCCACCAGCUGUCAGCAAAGGGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.003348700 ubox
1 41 0.005087936 ubox
1 43 0.013276086 ubox
1 45 0.006917767 ubox
1 90 0.047838837 ubox
2 37 0.004246067 ubox
2 39 0.026911942 ubox
2 40 0.007476038 ubox
2 41 0.027482254 ubox
2 42 0.016255758 ubox
2 44 0.007379988 ubox
2 59 0.007281684 ubox
2 82 0.040741578 ubox
2 83 0.692833069 ubox
2 86 0.576191194 ubox
2 89 0.049778459 ubox
2 90 0.007854995 ubox
2 93 0.005431136 ubox
3 12 0.003428831 ubox
3 15 0.022453283 ubox
3 36 0.004260984 ubox
3 38 0.042860639 ubox
3 39 0.005373677 ubox
3 40 0.034177181 ubox
3 41 0.014358103 ubox
3 43 0.007321333 ubox
3 45 0.003304273 ubox
3 58 0.007270909 ubox
3 81 0.041137265 ubox
3 82 0.693552469 ubox
3 83 0.025400115 ubox
3 85 0.576439669 ubox
3 86 0.390839327 ubox
3 89 0.007651516 ubox
3 90 0.004297935 ubox
3 92 0.003892518 ubox
4 11 0.003469344 ubox
4 14 0.024323234 ubox
4 35 0.004282306 ubox
4 37 0.046132768 ubox
4 39 0.034422594 ubox
4 40 0.014412543 ubox
4 42 0.007318089 ubox
4 44 0.003502316 ubox
4 57 0.006855583 ubox
4 81 0.692387483 ubox
4 82 0.025171395 ubox
4 85 0.391053404 ubox
4 89 0.004519186 ubox
4 93 0.003977957 ubox
5 13 0.024411913 ubox
5 34 0.004250950 ubox
5 36 0.046271392 ubox
5 38 0.035400835 ubox
5 39 0.012410704 ubox
5 41 0.007229226 ubox
5 43 0.003509056 ubox
5 90 0.003796286 ubox
5 92 0.003936956 ubox
6 12 0.024436649 ubox
6 33 0.003977238 ubox
6 35 0.046317905 ubox
6 36 0.003503788 ubox
6 37 0.036248020 ubox
6 38 0.009843758 ubox
6 40 0.006993113 ubox
6 42 0.003510377 ubox
6 59 0.003166137 ubox
6 82 0.356934136 ubox
6 83 0.613779121 ubox
6 86 0.006226557 ubox
7 11 0.024044211 ubox
7 34 0.046078749 ubox
7 35 0.007830445 ubox
7 36 0.035788659 ubox
7 37 0.009778420 ubox
7 38 0.004193465 ubox
7 39 0.004631805 ubox
7 41 0.003489177 ubox
7 59 0.010937561 ubox
7 81 0.356928605 ubox
7 82 0.614375990 ubox
7 83 0.014901078 ubox
7 85 0.006196678 ubox
7 86 0.004744024 ubox
7 90 0.003502458 ubox
8 33 0.045561727 ubox
8 34 0.008182176 ubox
8 35 0.036981933 ubox
8 37 0.005941375 ubox
8 40 0.003490611 ubox
8 58 0.010963357 ubox
8 81 0.613354794 ubox
8 82 0.014882517 ubox
8 85 0.004742883 ubox
8 89 0.003512109 ubox
9 33 0.010210175 ubox
9 34 0.034816439 ubox
9 36 0.005942316 ubox
9 39 0.003457163 ubox
10 31 0.060147441 ubox
10 33 0.003883471 ubox
10 35 0.003412419 ubox
10 57 0.011184937 ubox
11 30 0.060378047 ubox
11 56 0.011326260 ubox
11 74 0.997157707 ubox
11 101 0.003670523 ubox
12 29 0.060375332 ubox
12 55 0.011323945 ubox
12 73 0.997631487 ubox
12 74 0.005526259 ubox
12 100 0.003683865 ubox
13 28 0.059634303 ubox
13 54 0.010669164 ubox
13 72 0.997428867 ubox
13 73 0.004904457 ubox
13 74 0.006757604 ubox
13 75 0.011962351 ubox
13 99 0.003632034 ubox
14 21 0.003767294 ubox
14 71 0.993677927 ubox
14 73 0.008103197 ubox
14 74 0.012275536 ubox
14 95 0.004761540 ubox
15 20 0.003555583 ubox
15 24 0.029177755 ubox
15 26 0.047444969 ubox
15 71 0.068538557 ubox
15 72 0.007451539 ubox
15 73 0.011699419 ubox
15 94 0.004942655 ubox
16 23 0.029529290 ubox
16 25 0.049052688 ubox
16 35 0.010722787 ubox
16 69 0.899587741 ubox
16 70 0.374325543 ubox
16 93 0.005218422 ubox
17 34 0.010726481 ubox
17 68 0.636482265 ubox
17 92 0.003634018 ubox
18 27 0.015338225 ubox
18 33 0.010047478 ubox
18 68 0.760801418 ubox
18 92 0.003796162 ubox
19 26 0.015439194 ubox
19 67 0.997657117 ubox
19 91 0.005206768 ubox
20 66 0.997671337 ubox
20 90 0.005205893 ubox
21 31 0.019936610 ubox
21 65 0.997912105 ubox
21 89 0.005206073 ubox
22 30 0.019967921 ubox
22 64 0.997128925 ubox
22 88 0.005197102 ubox
22 101 0.003485548 ubox
22 102 0.003209200 ubox
23 29 0.020017949 ubox
23 100 0.003493889 ubox
23 101 0.003212775 ubox
26 62 0.814761426 ubox
26 85 0.004944759 ubox
27 61 0.801635398 ubox
27 84 0.004904528 ubox
29 58 0.989954380 ubox
29 59 0.112788551 ubox
29 82 0.003547713 ubox
29 83 0.003701686 ubox
30 57 0.994328719 ubox
30 58 0.084512861 ubox
30 81 0.003549901 ubox
30 82 0.003699430 ubox
31 56 0.994992474 ubox
33 51 0.099121977 ubox
33 52 0.287153695 ubox
33 53 0.194726408 ubox
33 54 0.611371560 ubox
33 55 0.085717809 ubox
34 50 0.119230791 ubox
34 51 0.316322280 ubox
34 52 0.191272387 ubox
34 53 0.670754119 ubox
34 54 0.084638042 ubox
34 55 0.012786243 ubox
34 56 0.014332698 ubox
34 80 0.005127209 ubox
34 103 0.004845790 ubox
35 49 0.126806336 ubox
35 50 0.317055730 ubox
35 55 0.035456752 ubox
35 79 0.005221157 ubox
35 102 0.005244682 ubox
36 47 0.003182366 ubox
36 48 0.129346176 ubox
36 49 0.043601595 ubox
36 50 0.168428314 ubox
36 51 0.896371938 ubox
36 54 0.031904751 ubox
36 78 0.005128627 ubox
36 101 0.005230513 ubox
37 46 0.006830012 ubox
37 47 0.129872989 ubox
37 49 0.363519180 ubox
37 50 0.915040463 ubox
37 55 0.007574553 ubox
37 100 0.005219758 ubox
38 46 0.128235662 ubox
38 47 0.004890158 ubox
38 48 0.366078834 ubox
38 49 0.913597510 ubox
38 51 0.082571685 ubox
38 52 0.018798496 ubox
38 54 0.007245304 ubox
38 76 0.005077046 ubox
38 99 0.004799326 ubox
39 46 0.006156732 ubox
39 47 0.366017914 ubox
39 48 0.914037655 ubox
39 50 0.086251673 ubox
39 51 0.019339004 ubox
39 53 0.006316664 ubox
39 75 0.005769765 ubox
39 98 0.004070037 ubox
39 103 0.026972482 ubox
40 46 0.367630367 ubox
40 47 0.913553895 ubox
40 49 0.091262209 ubox
40 50 0.017389596 ubox
40 74 0.005858890 ubox
40 79 0.003706633 ubox
40 102 0.033082860 ubox
41 46 0.816295708 ubox
41 47 0.011999964 ubox
41 48 0.092258116 ubox
41 49 0.010968344 ubox
41 51 0.007247008 ubox
41 74 0.003405651 ubox
41 78 0.003574315 ubox
41 101 0.033108236 ubox
41 103 0.025491447 ubox
42 46 0.117126067 ubox
42 47 0.092093617 ubox
42 49 0.010830885 ubox
42 50 0.007789912 ubox
42 73 0.008075538 ubox
42 100 0.033237828 ubox
42 102 0.033274561 ubox
43 48 0.010096862 ubox
43 49 0.007299974 ubox
43 51 0.007121019 ubox
43 56 0.008707074 ubox
43 72 0.008121267 ubox
43 75 0.009892692 ubox
43 99 0.032412098 ubox
43 101 0.033282899 ubox
44 50 0.007746529 ubox
44 55 0.015378225 ubox
44 61 0.013894709 ubox
44 71 0.008030075 ubox
44 74 0.010595528 ubox
44 95 0.023701944 ubox
44 100 0.033261037 ubox
45 49 0.006983555 ubox
45 54 0.015399008 ubox
45 60 0.017453016 ubox
45 73 0.010529922 ubox
45 94 0.023746055 ubox
45 97 0.018417268 ubox
45 99 0.032272155 ubox
46 58 0.004735625 ubox
46 59 0.019785243 ubox
46 70 0.007273907 ubox
46 93 0.023679573 ubox
46 96 0.018809588 ubox
47 57 0.004837844 ubox
47 58 0.019326829 ubox
47 69 0.007274807 ubox
47 92 0.007741943 ubox
48 68 0.007010790 ubox
49 58 0.023060274 ubox
49 59 0.024629733 ubox
49 66 0.003192513 ubox
49 70 0.012021039 ubox
49 93 0.008345968 ubox
50 57 0.023481968 ubox
50 58 0.024588372 ubox
50 65 0.003524066 ubox
50 69 0.012027069 ubox
50 92 0.003355224 ubox
50 93 0.004582365 ubox
51 68 0.011664016 ubox
55 66 0.011422801 ubox
56 62 0.007014344 ubox
56 65 0.012120588 ubox
56 96 0.033214499 ubox
57 61 0.006974167 ubox
57 64 0.012161644 ubox
57 95 0.033190306 ubox
57 102 0.028065241 ubox
58 101 0.028158214 ubox
59 100 0.028111064 ubox
61 92 0.058048116 ubox
61 96 0.008294045 ubox
62 91 0.062019151 ubox
62 95 0.007370399 ubox
63 90 0.062487912 ubox
64 89 0.062517819 ubox
65 88 0.062517927 ubox
66 87 0.062474421 ubox
67 81 0.004776067 ubox
67 85 0.009785782 ubox
67 86 0.061318271 ubox
68 75 0.009974864 ubox
68 80 0.006461896 ubox
68 84 0.013483196 ubox
69 74 0.010255647 ubox
69 79 0.006483100 ubox
73 82 0.050478180 ubox
73 83 0.032321615 ubox
74 81 0.050404326 ubox
74 82 0.032279324 ubox
81 101 0.004423599 ubox
81 102 0.081415476 ubox
82 100 0.004410637 ubox
82 101 0.081807154 ubox
82 102 0.021223566 ubox
83 100 0.081720328 ubox
83 101 0.022024188 ubox
84 92 0.011464203 ubox
85 91 0.012293412 ubox
85 101 0.610890338 ubox
85 102 0.179360922 ubox
86 100 0.612048082 ubox
86 101 0.178848860 ubox
88 96 0.872397333 ubox
89 95 0.872909364 ubox
89 100 0.167227234 ubox
89 101 0.046176159 ubox
89 102 0.046988863 ubox
90 94 0.786396357 ubox
90 97 0.121747005 ubox
90 99 0.168089075 ubox
90 100 0.044957556 ubox
90 101 0.045925057 ubox
91 96 0.126376780 ubox
91 104 0.345230135 ubox
92 101 0.042050396 ubox
92 102 0.024449784 ubox
92 103 0.350634749 ubox
93 100 0.054587793 ubox
93 101 0.032348973 ubox
93 102 0.351480305 ubox
2 83 0.9500000 lbox
3 82 0.9500000 lbox
4 81 0.9500000 lbox
11 74 0.9500000 lbox
12 73 0.9500000 lbox
13 72 0.9500000 lbox
14 71 0.9500000 lbox
16 69 0.9500000 lbox
17 68 0.9500000 lbox
19 67 0.9500000 lbox
20 66 0.9500000 lbox
21 65 0.9500000 lbox
22 64 0.9500000 lbox
26 62 0.9500000 lbox
27 61 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
33 54 0.9500000 lbox
34 53 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
85 101 0.9500000 lbox
86 100 0.9500000 lbox
88 96 0.9500000 lbox
89 95 0.9500000 lbox
90 94 0.9500000 lbox
showpage
end
%%EOF
