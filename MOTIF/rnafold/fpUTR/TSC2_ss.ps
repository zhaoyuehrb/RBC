%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCGCCAGAGGGCGGCACAGAACUACAACUCCCAGCAAGCUCCCAAGGCGGCCCUCCGCGCAAUGCCGCUACCGGAAGUGCGGGUCGCGCUUCCGGCGGCGUCCCGGGGCCAGGGGGGUGCGCCUUUCUCCGCGUCGGGGCGGCCCGGAGCGCGGUGGCGCGGCGCGGGAGGGGUUUUCUGGUGCGUCCUGGUCCACC\
) } def
/len { sequence length } bind def

/coor [
[66.08812714 680.58203125]
[54.64332962 670.41955566]
[49.24303818 656.09844971]
[51.12820053 640.90948486]
[59.86561584 628.34301758]
[73.44749451 621.28668213]
[73.44749451 606.28668213]
[73.44749451 591.28668213]
[73.44749451 576.28668213]
[70.75800323 572.33117676]
[70.53025818 566.64251709]
[73.68926239 560.81970215]
[74.15807343 545.82702637]
[74.62689209 530.83435059]
[75.09571075 515.84167480]
[75.56452942 500.84902954]
[72.62903595 494.05972290]
[76.15966034 485.62622070]
[76.86273956 470.64270020]
[77.56582642 455.65917969]
[78.15179443 440.67062378]
[78.62061310 425.67797852]
[79.08943176 410.68530273]
[79.55825043 395.69262695]
[71.50522614 386.65945435]
[71.77805328 374.15991211]
[80.77596283 364.91128540]
[81.47904968 349.92776489]
[71.29352570 339.12078857]
[71.79310608 323.91537476]
[83.19752502 313.30511475]
[83.90060425 298.32162476]
[84.60369110 283.33810425]
[85.30677032 268.35458374]
[86.00985718 253.37107849]
[77.12730408 238.24009705]
[87.18978882 222.82289124]
[87.65860748 207.83021545]
[79.60558319 198.79704285]
[79.87841034 186.29748535]
[88.87631989 177.04887390]
[89.57939911 162.06536865]
[82.44715881 148.98941040]
[90.82280731 135.56707764]
[91.52588654 120.58355713]
[78.09892273 103.97950745]
[84.82642365 83.71331787]
[78.89718628 69.93492126]
[72.96794891 56.15652466]
[67.03871918 42.37813187]
[61.10948181 28.59973526]
[55.18024826 14.82134056]
[49.14352036 1.08970153]
[42.99966431 -12.59434128]
[36.85580826 -26.27838516]
[30.71195221 -39.96242905]
[24.56809616 -53.64647293]
[18.42424202 -67.33051300]
[12.28038597 -81.01455688]
[-2.21840358 -86.70866394]
[-8.25421238 -100.67375183]
[-2.73640037 -114.46104431]
[-8.88025570 -128.14508057]
[-23.37904549 -133.83918762]
[-29.41485405 -147.80427551]
[-23.89704323 -161.59156799]
[-30.04089737 -175.27560425]
[-46.90223694 -186.31394958]
[-44.12821198 -205.44535828]
[-50.69675446 -218.93069458]
[-57.26529694 -232.41603088]
[-63.83383942 -245.90136719]
[-76.83297729 -254.91984558]
[-75.45027924 -269.75012207]
[-82.01882172 -283.23547363]
[-88.58736420 -296.72079468]
[-95.15590668 -310.20614624]
[-101.72444916 -323.69146729]
[-108.29299164 -337.17681885]
[-114.86153412 -350.66213989]
[-121.43007660 -364.14749146]
[-127.99861908 -377.63281250]
[-134.56716919 -391.11813354]
[-141.13571167 -404.60348511]
[-153.50749207 -416.19549561]
[-145.79335022 -431.29278564]
[-129.15057373 -428.05947876]
[-127.65036774 -411.17202759]
[-121.08182526 -397.68667603]
[-114.51328278 -384.20135498]
[-107.94474030 -370.71603394]
[-101.37619781 -357.23068237]
[-94.80765533 -343.74536133]
[-88.23911285 -330.26000977]
[-81.67057037 -316.77468872]
[-75.10202789 -303.28933716]
[-68.53348541 -289.80401611]
[-61.96494675 -276.31866455]
[-49.43563080 -268.26477051]
[-50.34850311 -252.46990967]
[-43.77996063 -238.98457336]
[-37.21141815 -225.49923706]
[-30.64287758 -212.01390076]
[-20.71325111 -209.56082153]
[-13.62746620 -201.88302612]
[-11.90611458 -191.35533142]
[-16.35685539 -181.41946411]
[-10.21299934 -167.73542786]
[3.75685859 -162.69769287]
[10.18253613 -148.90765381]
[4.80378771 -134.28894043]
[10.94764328 -120.60489655]
[24.91750145 -115.56716919]
[31.34317780 -101.77713013]
[25.96442986 -87.15841675]
[32.10828400 -73.47437286]
[38.25214005 -59.79032516]
[44.39599609 -46.10628510]
[50.53985214 -32.42224121]
[56.68370819 -18.73819733]
[62.82756042 -5.05415392]
[68.43969727 -0.23586771]
[68.95864105 8.89210510]
[74.88787842 22.67050171]
[80.81711578 36.44889450]
[86.74634552 50.22729111]
[92.67558289 64.00568390]
[98.60481262 77.78408051]
[104.65990448 78.23353577]
[110.36827850 80.30248260]
[115.30522919 83.83696747]
[119.10342407 88.57403564]
[133.81805420 85.66205597]
[148.53268433 82.75006866]
[163.24731445 79.83808899]
[177.96194458 76.92610931]
[192.67657471 74.01412964]
[207.34390259 70.87252045]
[221.96032715 67.50206757]
[236.57676697 64.13160706]
[251.19319153 60.76114655]
[262.81423950 49.19034576]
[278.57260132 53.72969055]
[282.25744629 69.70948792]
[270.07812500 80.69109344]
[254.56364441 75.37757874]
[239.94721985 78.74803162]
[225.33079529 82.11849213]
[210.71435547 85.48895264]
[207.46432495 88.99845886]
[201.97230530 90.49860382]
[195.58856201 88.72875977]
[180.87393188 91.64073944]
[166.15930176 94.55271912]
[151.44467163 97.46470642]
[136.73004150 100.37668610]
[122.01541138 103.28866577]
[116.86410522 114.52912903]
[106.50939941 121.28664398]
[105.80632019 136.27015686]
[112.88826752 150.41783142]
[104.56291962 162.76844788]
[103.85983276 177.75195312]
[112.68798828 193.90768433]
[102.65127563 208.29902649]
[102.18245697 223.29170227]
[110.43087006 233.21455383]
[109.72703552 245.69726562]
[100.99337006 254.07415771]
[100.29028320 269.05767822]
[99.58720398 284.04119873]
[98.88411713 299.02468872]
[98.18103790 314.00820923]
[108.54177856 325.63973999]
[107.61530304 340.82516479]
[96.46256256 350.63085938]
[95.75947571 365.61437988]
[104.58763123 381.77011108]
[94.55091858 396.16143799]
[94.08209991 411.15411377]
[93.61328125 426.14678955]
[93.14447021 441.13946533]
[96.00591278 449.82284546]
[92.54933929 456.36227417]
[91.84625244 471.34579468]
[91.14317322 486.32928467]
[90.55720520 501.31784058]
[90.08838654 516.31054688]
[89.61956787 531.30316162]
[89.15074921 546.29583740]
[88.68193054 561.28851318]
[88.44749451 576.28668213]
[88.44749451 591.28668213]
[88.44749451 606.28668213]
[88.44749451 621.28668213]
[102.02937317 628.34301758]
[110.76678467 640.90948486]
[112.65194702 656.09844971]
[107.25165558 670.41955566]
[95.80686188 680.58203125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 195]
[7 194]
[8 193]
[9 192]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[18 186]
[19 185]
[20 184]
[21 182]
[22 181]
[23 180]
[24 179]
[27 177]
[28 176]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[37 166]
[38 165]
[41 163]
[42 162]
[44 160]
[45 159]
[47 128]
[48 127]
[49 126]
[50 125]
[51 124]
[52 123]
[53 121]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
[62 112]
[63 111]
[66 108]
[67 107]
[69 103]
[70 102]
[71 101]
[72 100]
[74 98]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[83 89]
[84 88]
[132 157]
[133 156]
[134 155]
[135 154]
[136 153]
[137 152]
[138 149]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
