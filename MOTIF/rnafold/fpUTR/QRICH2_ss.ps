%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCCAGGUGGAGGACCUGAGCAAGCAGCUCAAGCGUGUGGACGGCCAGGUGCAGGGCAUCGCCACGCACGUGCAGCACUUCUCCCAGGCCAGCGGGCUUGACCUGGCCGCGCUAGAGUGGCCGGAGGAGCAGGAGGUGGGCGUGCGGGCGUUCGAUAGGGUGCGGACUGGGAGUAUC\
) } def
/len { sequence length } bind def

/coor [
[113.41279602 141.52606201]
[105.93566132 142.11126709]
[98.47327423 155.12329102]
[98.96508026 173.51841736]
[83.48465729 181.75984192]
[76.24922943 194.89941406]
[69.12809753 208.10130310]
[62.12181091 221.36447144]
[55.11552429 234.62765503]
[48.10923386 247.89083862]
[41.10294342 261.15402222]
[44.44194031 276.84576416]
[34.14456940 289.14794922]
[18.11009216 288.62338257]
[8.63879108 275.67446899]
[12.99623489 260.23452759]
[27.83976555 254.14772034]
[34.84605408 240.88455200]
[41.85234451 227.62136841]
[48.85863495 214.35818481]
[55.86492157 201.09500122]
[56.20999146 193.69206238]
[63.10964966 187.66398621]
[70.34507751 174.52441406]
[67.28092194 162.80491638]
[73.22372437 151.79135132]
[85.46125031 147.66090393]
[92.92363739 134.64888000]
[79.92584229 122.48097992]
[76.30754089 107.70590210]
[61.30810928 107.83607483]
[46.30867386 107.96624756]
[31.30923653 108.09642792]
[21.71277618 116.74082184]
[9.20002174 116.52542877]
[0.48479000 108.11232758]
[-14.51464558 107.98215485]
[-29.51408005 107.85198212]
[-44.51351547 107.72180176]
[-58.38031387 115.33905029]
[-71.03996277 107.49159241]
[-86.03939819 107.36141205]
[-101.03883362 107.23123932]
[-115.03729248 115.77378082]
[-129.30307007 107.68554688]
[-129.16075134 91.28701782]
[-114.75675201 83.44759369]
[-100.90865326 92.23180389]
[-85.90921783 92.36198425]
[-70.90978241 92.49215698]
[-58.11584473 84.86560059]
[-44.38333893 92.72236633]
[-29.38390541 92.85254669]
[-14.38446999 92.98271942]
[0.61496484 93.11289215]
[15.38401031 83.65563965]
[31.17906189 93.09699249]
[46.17849731 92.96681213]
[61.17793274 92.83663940]
[76.17736816 92.70646667]
[86.46501923 76.03087616]
[107.32808685 70.76534271]
[127.65213776 82.44929504]
[134.69995117 106.82147980]
[143.26208496 94.50523376]
[151.82421875 82.18898773]
[154.16297913 73.33048248]
[160.64337158 69.73503876]
[169.41796875 57.56924820]
[178.19256592 45.40346146]
[186.96716309 33.23767090]
[195.74176025 21.07188416]
[204.51635742 8.90609550]
[213.29096985 -3.25969219]
[215.08833313 -18.97847176]
[228.80880737 -24.77484322]
[237.58340454 -36.94063187]
[232.89730835 -51.61532593]
[237.69461060 -66.06659698]
[249.93666077 -74.81851959]
[264.80676270 -74.68521881]
[273.58135986 -86.85101318]
[282.35598755 -99.01679993]
[291.02465820 -111.25827789]
[299.58679199 -123.57452393]
[308.14892578 -135.89077759]
[316.71105957 -148.20701599]
[322.42123413 -162.07763672]
[325.01168823 -176.85224915]
[327.60217285 -191.62687683]
[330.19265747 -206.40150452]
[332.78314209 -221.17611694]
[335.37359619 -235.95074463]
[329.24468994 -251.16154480]
[339.56488037 -263.90618896]
[355.71762085 -261.07409668]
[361.08636475 -245.57864380]
[350.14822388 -233.36026001]
[347.55773926 -218.58564758]
[344.96728516 -203.81101990]
[342.37680054 -189.03639221]
[339.78631592 -174.26177979]
[337.19583130 -159.48715210]
[343.63610840 -155.64360046]
[356.51666260 -147.95649719]
[362.95693970 -144.11294556]
[374.73065186 -153.40702820]
[386.50433350 -162.70109558]
[398.27804565 -171.99517822]
[410.05175781 -181.28924561]
[421.82546997 -190.58332825]
[433.59918213 -199.87739563]
[445.37289429 -209.17147827]
[446.97113037 -224.89474487]
[459.27188110 -234.81776428]
[474.97738647 -233.05339050]
[484.76980591 -220.64837646]
[482.83947754 -204.96241760]
[470.33163452 -195.30171204]
[454.66696167 -197.39776611]
[442.89324951 -188.10369873]
[431.11953735 -178.80961609]
[419.34582520 -169.51554871]
[407.57214355 -160.22146606]
[395.79843140 -150.92739868]
[384.02471924 -141.63331604]
[372.25100708 -132.33924866]
[345.27471924 -127.24798584]
[329.02731323 -139.64489746]
[320.46517944 -127.32864380]
[311.90304565 -115.01239777]
[303.34091187 -102.69615173]
[302.10116577 -95.38959503]
[294.52175903 -90.24219513]
[285.74716187 -78.07640839]
[276.97256470 -65.91062164]
[281.79223633 -51.84262085]
[277.35137939 -37.46406174]
[265.15283203 -28.35096359]
[249.74919128 -28.16603088]
[240.97459412 -16.00024414]
[239.80484009 -1.15164304]
[225.45675659 5.51490736]
[216.68215942 17.68069649]
[207.90754700 29.84648323]
[199.13294983 42.01227188]
[190.35835266 54.17805862]
[181.58375549 66.34384918]
[172.80915833 78.50963593]
[164.14045715 90.75111389]
[155.57833862 103.06735992]
[147.01620483 115.38360596]
[147.53680420 130.37457275]
[156.93270874 142.06718445]
[166.32861328 153.75978088]
[175.72450256 165.45239258]
[185.12040710 177.14500427]
[200.61203003 176.25669861]
[213.64892578 184.67210388]
[219.21813965 199.15531921]
[215.17817688 214.13726807]
[203.08250427 223.85705566]
[187.58215332 224.57723999]
[174.63731384 216.02090454]
[169.22555542 201.47813416]
[173.42779541 186.54089355]
[164.03190613 174.84829712]
[154.63600159 163.15568542]
[145.24009705 151.46307373]
[135.84419250 139.77047729]
[128.36706543 140.35566711]
[131.00700378 155.12153625]
[133.64695740 169.88739014]
[136.28689575 184.65325928]
[141.84494019 198.58552551]
[133.92083740 211.32165527]
[118.96653748 212.49165344]
[109.15806580 201.14291382]
[112.48109436 186.51641846]
[112.79166412 171.51963806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[5 24]
[6 23]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[30 60]
[31 59]
[32 58]
[33 57]
[36 55]
[37 54]
[38 53]
[39 52]
[41 50]
[42 49]
[43 48]
[64 152]
[65 151]
[66 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[76 141]
[77 140]
[81 136]
[82 135]
[83 134]
[84 132]
[85 131]
[86 130]
[87 129]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
[106 127]
[107 126]
[108 125]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
