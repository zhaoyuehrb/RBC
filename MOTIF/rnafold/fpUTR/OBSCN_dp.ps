%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:41 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OBSCN)
} def

/sequence { (\
UGCCUCCCAGCCUGUGCCCCCAGCCUGCGUGCUGCCCAGAGCCCCCAUAGAGAGAGGUCCCCGCCGCCACCCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.042004140 ubox
1 29 0.017528087 ubox
1 38 0.016522622 ubox
1 47 0.033514616 ubox
1 49 0.012099002 ubox
1 63 0.022458557 ubox
1 66 0.010193454 ubox
1 69 0.015684569 ubox
2 8 0.046402517 ubox
2 11 0.142161204 ubox
2 17 0.005319997 ubox
2 24 0.005264194 ubox
2 28 0.026553597 ubox
2 30 0.026596951 ubox
2 32 0.046274333 ubox
2 35 0.015597303 ubox
2 37 0.018255919 ubox
2 42 0.484984399 ubox
2 46 0.036653420 ubox
2 48 0.010692659 ubox
2 58 0.684108867 ubox
2 62 0.022562785 ubox
2 64 0.016533057 ubox
2 65 0.010191465 ubox
2 67 0.049251533 ubox
2 68 0.015297855 ubox
3 10 0.141868215 ubox
3 16 0.005322286 ubox
3 23 0.005078042 ubox
3 27 0.023813185 ubox
3 29 0.027359188 ubox
3 31 0.046322937 ubox
3 34 0.015080484 ubox
3 41 0.466963415 ubox
3 57 0.719029455 ubox
3 63 0.015924360 ubox
3 66 0.049753469 ubox
4 10 0.019300267 ubox
4 23 0.004098694 ubox
4 39 0.444670113 ubox
4 41 0.223220345 ubox
4 50 0.066340502 ubox
4 52 0.156207699 ubox
4 54 0.082384852 ubox
4 56 0.719370450 ubox
5 9 0.020807319 ubox
5 22 0.004252315 ubox
5 38 0.426567961 ubox
5 40 0.263038199 ubox
5 49 0.064195581 ubox
5 51 0.158490579 ubox
5 53 0.083151457 ubox
5 55 0.719152504 ubox
6 39 0.262737427 ubox
6 50 0.158217783 ubox
6 52 0.083184159 ubox
6 54 0.717481489 ubox
6 57 0.009761028 ubox
7 56 0.009776073 ubox
7 57 0.007324196 ubox
8 14 0.007964644 ubox
8 16 0.012383976 ubox
8 27 0.275796294 ubox
8 31 0.005158326 ubox
8 34 0.534778601 ubox
8 56 0.007346917 ubox
9 13 0.006497018 ubox
9 15 0.012288036 ubox
9 26 0.279417439 ubox
9 30 0.006127125 ubox
9 33 0.537589840 ubox
9 73 0.005682974 ubox
10 17 0.038049532 ubox
10 24 0.038470349 ubox
10 25 0.278526096 ubox
10 28 0.036498631 ubox
10 30 0.005699653 ubox
10 32 0.537921583 ubox
10 35 0.032255138 ubox
10 42 0.414752924 ubox
10 58 0.009537094 ubox
10 64 0.004139654 ubox
10 67 0.016130242 ubox
10 72 0.006020177 ubox
11 16 0.037968169 ubox
11 23 0.031442000 ubox
11 27 0.036516146 ubox
11 29 0.006097182 ubox
11 31 0.537679474 ubox
11 34 0.032205575 ubox
11 41 0.412729980 ubox
11 57 0.009803315 ubox
11 63 0.004141951 ubox
11 66 0.016135515 ubox
12 23 0.285371125 ubox
12 39 0.413891613 ubox
12 41 0.083116550 ubox
12 50 0.659773066 ubox
12 52 0.047343776 ubox
12 54 0.003416756 ubox
12 56 0.009749387 ubox
13 22 0.287683626 ubox
13 27 0.023440429 ubox
13 29 0.511377556 ubox
13 31 0.003225518 ubox
13 38 0.413893287 ubox
13 40 0.096210183 ubox
13 47 0.033197907 ubox
13 49 0.662073613 ubox
13 51 0.047128793 ubox
13 53 0.003785392 ubox
13 55 0.009453016 ubox
13 69 0.006698994 ubox
14 21 0.286520724 ubox
14 24 0.020541085 ubox
14 26 0.024280708 ubox
14 28 0.522716595 ubox
14 30 0.029200781 ubox
14 32 0.031234568 ubox
14 37 0.413284759 ubox
14 42 0.025771614 ubox
14 46 0.034431626 ubox
14 48 0.662407372 ubox
14 64 0.003615233 ubox
14 67 0.003685871 ubox
14 68 0.007111447 ubox
14 70 0.006047366 ubox
15 22 0.014866906 ubox
15 23 0.019971257 ubox
15 27 0.502676535 ubox
15 29 0.103807160 ubox
15 31 0.031136033 ubox
15 38 0.097422038 ubox
15 41 0.025779510 ubox
15 47 0.662347374 ubox
15 49 0.044025906 ubox
15 63 0.003623403 ubox
15 66 0.003772708 ubox
15 69 0.006058451 ubox
16 21 0.018754502 ubox
16 24 0.498511348 ubox
16 26 0.104534840 ubox
16 28 0.108569268 ubox
16 30 0.031976916 ubox
16 32 0.005754366 ubox
16 35 0.396262422 ubox
16 37 0.097462686 ubox
16 42 0.064114744 ubox
16 46 0.657950854 ubox
16 48 0.041239851 ubox
16 62 0.003498131 ubox
16 64 0.003986499 ubox
16 65 0.003290229 ubox
16 67 0.007923101 ubox
16 68 0.005079642 ubox
17 23 0.499880329 ubox
17 27 0.108365269 ubox
17 29 0.032134698 ubox
17 31 0.005786133 ubox
17 34 0.354997322 ubox
17 41 0.069246419 ubox
17 63 0.004340275 ubox
17 66 0.008546858 ubox
21 27 0.023552202 ubox
21 31 0.063587235 ubox
21 34 0.275497443 ubox
22 26 0.019488999 ubox
22 30 0.061051082 ubox
22 33 0.436942000 ubox
23 30 0.070778810 ubox
23 32 0.439710347 ubox
23 35 0.005011509 ubox
23 42 0.643042191 ubox
23 58 0.005756690 ubox
24 29 0.074380197 ubox
24 31 0.438493299 ubox
24 34 0.005007391 ubox
24 41 0.643904757 ubox
24 57 0.005891855 ubox
25 39 0.647091514 ubox
25 41 0.006084478 ubox
25 50 0.019012587 ubox
25 52 0.019150309 ubox
25 56 0.005889429 ubox
26 38 0.645438163 ubox
26 40 0.007746497 ubox
26 47 0.020082042 ubox
26 49 0.018694919 ubox
26 51 0.019149211 ubox
26 55 0.005679828 ubox
27 35 0.137854133 ubox
27 37 0.634666482 ubox
27 42 0.009907559 ubox
27 46 0.025506209 ubox
27 48 0.017115150 ubox
27 64 0.003829332 ubox
27 67 0.009842789 ubox
28 34 0.150415579 ubox
28 41 0.010465738 ubox
28 63 0.004035438 ubox
28 66 0.010859999 ubox
29 33 0.093347320 ubox
29 35 0.617866987 ubox
29 42 0.027333332 ubox
29 48 0.045523842 ubox
29 62 0.003958104 ubox
29 64 0.003302828 ubox
29 65 0.010515351 ubox
29 67 0.007265712 ubox
29 70 0.055066255 ubox
30 34 0.578320547 ubox
30 38 0.008680381 ubox
30 41 0.026083620 ubox
30 47 0.046894976 ubox
30 49 0.003700362 ubox
30 63 0.003819303 ubox
30 66 0.007241804 ubox
30 69 0.055074631 ubox
31 37 0.009266370 ubox
31 42 0.270313524 ubox
31 46 0.041559300 ubox
31 62 0.003615052 ubox
31 64 0.009780604 ubox
31 65 0.006520899 ubox
31 67 0.043149063 ubox
31 68 0.040082780 ubox
32 39 0.027778107 ubox
32 41 0.271455928 ubox
32 50 0.007581466 ubox
32 52 0.006347135 ubox
32 63 0.009784237 ubox
32 66 0.057333265 ubox
33 38 0.026248711 ubox
33 40 0.269802565 ubox
33 47 0.003522482 ubox
33 49 0.007588107 ubox
33 51 0.006363836 ubox
33 66 0.007944974 ubox
34 42 0.062041536 ubox
34 46 0.003868281 ubox
34 48 0.005877126 ubox
34 58 0.007110118 ubox
34 62 0.004025898 ubox
34 64 0.058700248 ubox
34 65 0.007177343 ubox
34 67 0.004421189 ubox
35 41 0.064651729 ubox
35 57 0.007387283 ubox
35 63 0.058853399 ubox
35 66 0.004474253 ubox
36 56 0.007354767 ubox
36 57 0.005595619 ubox
37 56 0.005626107 ubox
39 59 0.046125164 ubox
39 74 0.005191049 ubox
40 58 0.040183673 ubox
40 73 0.005275056 ubox
41 58 0.044035143 ubox
41 64 0.004670313 ubox
41 67 0.006443945 ubox
41 72 0.005227903 ubox
42 57 0.057714243 ubox
42 63 0.004692074 ubox
42 66 0.006480280 ubox
43 56 0.057585821 ubox
43 57 0.016141261 ubox
44 56 0.016413419 ubox
44 57 0.014815487 ubox
45 56 0.014839244 ubox
45 57 0.022047744 ubox
46 56 0.022169118 ubox
49 73 0.038179716 ubox
50 59 0.016075803 ubox
50 72 0.041101710 ubox
50 74 0.289406288 ubox
51 58 0.015866410 ubox
51 73 0.292624487 ubox
52 59 0.014634478 ubox
52 72 0.292024464 ubox
52 74 0.528385292 ubox
53 58 0.014312387 ubox
53 73 0.535310208 ubox
54 72 0.536000692 ubox
54 74 0.226936057 ubox
55 73 0.229531167 ubox
56 62 0.025524180 ubox
56 65 0.225775140 ubox
56 68 0.353270831 ubox
56 71 0.497128017 ubox
56 72 0.226307331 ubox
57 61 0.025155787 ubox
57 64 0.225987585 ubox
57 67 0.353682084 ubox
57 70 0.498515443 ubox
57 71 0.221927790 ubox
58 63 0.213524435 ubox
58 66 0.345968576 ubox
58 69 0.476018079 ubox
2 58 0.9500000 lbox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
12 50 0.9500000 lbox
13 49 0.9500000 lbox
14 48 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
23 42 0.9500000 lbox
24 41 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
29 35 0.9500000 lbox
30 34 0.9500000 lbox
showpage
end
%%EOF
