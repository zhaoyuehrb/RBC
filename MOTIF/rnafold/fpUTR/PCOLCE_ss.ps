%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACCUAGAGAGGUCCCAGGACACGCCACUGUCCCGCCUUCCCCAUUGCCCGCCCCACUGGCCAGUCCCCACGCCCACACACCCAAGGCUGCCCCAUCUGGCGCUGAUUAUCCUGCUGCUGCCGCCACCGCUGCUGCUGCUCUGCAAAAUUCAGCUGCUGCCUCUGUCUUGAGGACCCCAGCGCCUUUCCCCCGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[-116.69326782 258.28738403]
[-120.21221161 272.86877441]
[-123.73116302 287.45016479]
[-127.25010681 302.03155518]
[-130.76905823 316.61294556]
[-125.61360931 332.18066406]
[-136.71852112 344.24768066]
[-152.66001892 340.40048218]
[-157.03884888 324.59677124]
[-145.35044861 313.09399414]
[-141.83149719 298.51260376]
[-138.31254578 283.93121338]
[-134.79360962 269.34982300]
[-131.27465820 254.76843262]
[-135.54512024 252.13243103]
[-139.34909058 248.85903931]
[-142.59236145 245.02934265]
[-145.19456482 240.73820496]
[-159.80328369 244.14195251]
[-174.41200256 247.54570007]
[-189.02070618 250.94943237]
[-197.39126587 264.08609009]
[-212.25508118 267.32986450]
[-224.72727966 259.26885986]
[-239.33598328 262.67257690]
[-253.94470215 266.07632446]
[-268.55340576 269.48007202]
[-280.23788452 280.14703369]
[-294.38888550 275.49957275]
[-308.99758911 278.90332031]
[-313.19741821 290.03778076]
[-322.16189575 297.68060303]
[-333.58547974 300.01840210]
[-344.60269165 296.58297729]
[-352.50680542 288.33963013]
[-367.21569824 291.28051758]
[-370.13220215 306.19903564]
[-378.53994751 318.86309814]
[-391.15679932 327.34152222]
[-406.05877686 330.34136963]
[-420.97344971 327.40524292]
[-433.62643433 318.98086548]
[-442.08825684 306.35287476]
[-445.06851196 291.44692993]
[-442.11276245 276.53613281]
[-433.67172241 263.89425659]
[-421.03262329 255.44905090]
[-406.12277222 252.48840332]
[-391.21588135 255.46376038]
[-378.58511353 263.92141724]
[-370.15655518 276.57162476]
[-355.44766235 273.63076782]
[-346.23684692 257.81881714]
[-328.08441162 253.68017578]
[-312.40133667 264.29461670]
[-297.79260254 260.89086914]
[-287.15307617 250.46737671]
[-271.95715332 254.87135315]
[-257.34844971 251.46762085]
[-242.73973083 248.06387329]
[-228.13101196 244.66014099]
[-220.50613403 231.91662598]
[-205.73931885 228.25665283]
[-192.42445374 236.34072876]
[-177.81573486 232.93698120]
[-163.20703125 229.53323364]
[-148.59831238 226.12950134]
[-144.91317749 211.14945984]
[-134.58650208 199.57624817]
[-119.96392822 194.15673828]
[-104.42259979 196.22644043]
[-91.59127808 205.38142395]
[-78.18875885 198.64550781]
[-64.78623962 191.90960693]
[-51.38371658 185.17370605]
[-53.45695877 171.16461182]
[-51.09737015 157.17915344]
[-44.52271652 144.58772278]
[-34.36445999 134.62831116]
[-21.60710716 128.28472900]
[-7.49283409 126.18945312]
[6.59948826 128.56056213]
[19.28898621 135.17918396]
[29.32809830 145.40954590]
[42.83528519 138.88604736]
[56.34246826 132.36256409]
[69.84965515 125.83906555]
[83.35684204 119.31557465]
[73.04034424 95.75187683]
[88.70915222 73.19295502]
[86.81975555 58.31241989]
[84.93035889 43.43189240]
[72.28449249 33.95257187]
[70.12813568 18.29608154]
[79.74062347 5.75113869]
[95.41903687 3.76043510]
[107.86164856 13.50502014]
[109.68648529 29.20360374]
[99.81089020 41.54249573]
[101.70028687 56.42302704]
[103.58968353 71.30355835]
[117.48161316 76.96166992]
[129.23014832 67.63578796]
[140.97868347 58.30991745]
[152.72721863 48.98404312]
[164.47575378 39.65816879]
[158.69824219 23.39190674]
[158.82704163 6.15519810]
[164.82978821 -9.97671604]
[175.96795654 -23.06736755]
[190.88763428 -31.55150414]
[207.78410339 -34.42224503]
[224.62016296 -31.35054779]
[239.37167358 -22.72282600]
[250.66552734 -32.59445190]
[255.96400452 -47.50205612]
[270.63864136 -50.05239105]
[281.93249512 -59.92401886]
[287.23098755 -74.83161926]
[301.90560913 -77.38195801]
[313.19946289 -87.25358582]
[318.49795532 -102.16118622]
[333.17260742 -104.71152496]
[344.46643066 -114.58315277]
[349.24832153 -130.26962280]
[365.28308105 -133.70751953]
[376.07550049 -121.36022949]
[370.52328491 -105.92958069]
[354.33807373 -103.28930664]
[343.04421997 -93.41767883]
[338.55355835 -79.21615601]
[323.07110596 -75.95973969]
[311.77725220 -66.08811188]
[307.28659058 -51.88659286]
[291.80413818 -48.63017273]
[280.51028442 -38.75854492]
[276.01959229 -24.55702782]
[260.53713989 -21.30060768]
[249.24331665 -11.42897987]
[254.70651245 0.23098761]
[256.96234131 12.92195320]
[255.84967041 25.77729416]
[251.43759155 37.91731644]
[244.02124023 48.50945663]
[234.10203552 56.82537079]
[222.35375977 62.29102325]
[209.57688904 64.52630615]
[196.64389038 63.37146759]
[184.43981934 58.89849854]
[173.80162048 51.40670013]
[162.05310059 60.73257828]
[150.30456543 70.05844879]
[138.55603027 79.38432312]
[126.80748749 88.71019745]
[125.99616241 108.31080627]
[113.39951324 121.69191742]
[125.71315002 130.25781250]
[138.02677917 138.82369995]
[150.34040833 147.38958740]
[162.91831970 155.56248474]
[175.74797058 163.33422852]
[188.57762146 171.10598755]
[201.40725708 178.87774658]
[216.69406128 174.86657715]
[230.29743958 182.91168213]
[234.14675903 198.24002075]
[225.95828247 211.75758362]
[210.59010315 215.44462585]
[197.15986633 207.11370850]
[193.63549805 191.70739746]
[180.80586243 183.93563843]
[167.97621155 176.16387939]
[155.14656067 168.39212036]
[152.38710022 168.93595886]
[149.24499512 168.41406250]
[146.12710571 166.67481995]
[143.48767090 163.71726990]
[141.77452087 159.70321655]
[129.46089172 151.13732910]
[117.14726257 142.57144165]
[104.83362579 134.00555420]
[89.88033295 132.82276917]
[76.37314606 139.34625244]
[62.86595917 145.86975098]
[49.35877609 152.39323425]
[35.85158920 158.91673279]
[37.53978729 174.75480652]
[33.71081543 190.18786621]
[24.84515953 203.35557556]
[12.02929306 212.67709351]
[-3.17742467 217.04096985]
[-18.93248940 215.93756104]
[-33.33348846 209.51850891]
[-44.64780807 198.57621765]
[-58.05033112 205.31213379]
[-71.45285034 212.04803467]
[-84.85536957 218.78393555]
[-86.40845490 238.04840088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[18 67]
[19 66]
[20 65]
[21 64]
[24 61]
[25 60]
[26 59]
[27 58]
[29 56]
[30 55]
[35 52]
[36 51]
[72 197]
[73 196]
[74 195]
[75 194]
[84 186]
[85 185]
[86 184]
[87 183]
[88 182]
[90 101]
[91 100]
[92 99]
[102 154]
[103 153]
[104 152]
[105 151]
[106 150]
[114 139]
[115 138]
[117 136]
[118 135]
[120 133]
[121 132]
[123 130]
[124 129]
[156 181]
[157 180]
[158 179]
[159 178]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
