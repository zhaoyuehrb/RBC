%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGAGGGAGACUGGGUCCUGGCCUUUGGGCAUCAUCCAGCGCCAUCGGCCUGGCGCUUCAGCCAACGCGGGAGUGGAUGGGCCCCUUCUUCUUCGCAGACAGCGUUCGGCCGCUGCCCGGGCUCUAGGCGCGGCCGGACGGCCCAGUCUGGAGGGUUCGGGGCGGAGGCCCGGGGGGGUGCGCGCGCCCGGGGUCCGGCCUCUCACUCGCUCCCCUCUCGUCCGCAGCCGCAGGGCCGUAGGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[63.28770065 131.84394836]
[70.52258301 118.70407104]
[84.28818512 112.74218750]
[69.96521759 117.19780731]
[55.64225006 121.65343475]
[41.31928253 126.10905457]
[26.99631500 130.56468201]
[12.67334652 135.02030945]
[-1.64962149 139.47592163]
[-15.97258949 143.93154907]
[-30.29555702 148.38717651]
[-44.61852646 152.84280396]
[-52.01301575 166.55262756]
[-66.60201263 170.86721802]
[-79.62667084 163.73321533]
[-93.94963837 168.18884277]
[-108.27260590 172.64447021]
[-122.59557343 177.10008240]
[-136.91853333 181.55570984]
[-151.24150085 186.01133728]
[-155.12901306 215.83502197]
[-193.31454468 230.70762634]
[-205.33804321 239.67619324]
[-217.36155701 248.64477539]
[-229.38505554 257.61334229]
[-231.79508972 273.00262451]
[-244.11639404 281.92672729]
[-258.77285767 279.53430176]
[-270.79635620 288.50286865]
[-282.81988525 297.47143555]
[-294.78677368 306.51538086]
[-306.69665527 315.63433838]
[-306.17208862 331.14254761]
[-314.89108276 343.97839355]
[-329.50097656 349.20623779]
[-344.38400269 344.81585693]
[-353.81729126 332.49542236]
[-354.17358398 316.98245239]
[-345.31585693 304.24194336]
[-330.65011597 299.17291260]
[-315.81558228 303.72448730]
[-303.90573120 294.60552979]
[-300.51419067 288.06051636]
[-291.78845215 285.44793701]
[-279.76495361 276.47937012]
[-267.74142456 267.51080322]
[-265.85726929 252.78036499]
[-253.79148865 243.51367188]
[-238.35363770 245.58984375]
[-226.33012390 236.62126160]
[-214.30662537 227.65269470]
[-202.28312683 218.68411255]
[-207.54113770 204.63586426]
[-222.49851990 205.76577759]
[-237.45590210 206.89567566]
[-252.41328430 208.02557373]
[-262.52368164 220.17280579]
[-278.26959229 221.52984619]
[-290.30926514 211.29158020]
[-291.49975586 195.53219604]
[-281.13476562 183.60145569]
[-265.36367798 182.57765198]
[-253.54318237 193.06819153]
[-238.58580017 191.93829346]
[-223.62841797 190.80838013]
[-208.67103577 189.67848206]
[-207.35321045 174.73580933]
[-206.03550720 159.79447937]
[-220.56425476 156.06413269]
[-235.09300232 152.33378601]
[-250.73393250 157.26258850]
[-262.63839722 145.98358154]
[-258.56008911 130.09965515]
[-242.69442749 125.95080566]
[-231.36264038 137.80503845]
[-216.83389282 141.53538513]
[-202.30514526 145.26573181]
[-183.87799072 144.06224060]
[-168.71356201 149.90994263]
[-159.06292725 160.17292786]
[-155.69712830 171.68836975]
[-141.37416077 167.23274231]
[-127.05119324 162.77711487]
[-112.72822571 158.32150269]
[-98.40525818 153.86587524]
[-84.08229065 149.41024780]
[-77.40296936 136.14668274]
[-62.94091034 131.42401123]
[-49.07415009 138.51983643]
[-34.75118256 134.06420898]
[-20.42821312 129.60858154]
[-6.10524511 125.15296173]
[8.21772289 120.69733429]
[22.54069138 116.24171448]
[36.86365891 111.78608704]
[51.18662643 107.33046722]
[65.50959778 102.87483978]
[79.83256531 98.41921997]
[88.72541809 86.33959961]
[88.72541809 71.33959961]
[88.72541809 56.33959961]
[88.72541809 41.33959961]
[77.88121033 24.32697296]
[88.32802582 8.03850842]
[87.95107269 -6.95675421]
[87.47991180 -21.94935226]
[86.91455841 -36.93869400]
[86.34920502 -51.92803574]
[85.78385162 -66.91738129]
[85.21849823 -81.90672302]
[84.65314484 -96.89606476]
[84.08779907 -111.88540649]
[83.52244568 -126.87474823]
[82.95709229 -141.86408997]
[82.39173889 -156.85342407]
[78.94844818 -165.28599548]
[81.91465759 -172.03442383]
[81.53770447 -187.02969360]
[81.16075134 -202.02496338]
[73.07909393 -215.62632751]
[80.49411774 -228.54402161]
[80.11716461 -243.53929138]
[73.67469788 -259.22146606]
[86.96056366 -269.75341797]
[100.75881958 -259.90231323]
[95.11242676 -243.91624451]
[95.48937988 -228.92097473]
[103.54407501 -216.39216614]
[96.15601349 -202.40190125]
[96.53296661 -187.40664673]
[96.90991974 -172.41137695]
[97.38108063 -157.41877747]
[97.94643402 -142.42944336]
[98.51178741 -127.44010162]
[99.07714081 -112.45075989]
[99.64249420 -97.46141815]
[100.20783997 -82.47207642]
[100.77319336 -67.48273468]
[101.33854675 -52.49338913]
[101.90390015 -37.50404739]
[102.46925354 -22.51470566]
[105.85334778 -15.96583176]
[102.94633484 -7.33370543]
[103.32328796 7.66155720]
[111.30970764 13.98592091]
[114.57826233 23.86579895]
[111.82608795 34.12894821]
[103.72541809 41.33959961]
[103.72541809 56.33959961]
[103.72541809 71.33959961]
[103.72541809 86.33959961]
[114.53005219 96.74440002]
[129.51939392 96.17904663]
[144.50872803 95.61369324]
[159.49807739 95.04833984]
[174.48742676 94.48298645]
[189.47676086 93.91763306]
[201.14796448 80.87057495]
[218.30665588 80.32477570]
[230.30122375 92.12956238]
[245.28227234 91.37589264]
[260.26333618 90.62223053]
[275.24438477 89.86856842]
[285.81607056 78.42839813]
[301.01971436 77.87748718]
[311.86102295 88.02645874]
[326.84207153 87.27279663]
[341.82312012 86.51913452]
[356.80416870 85.76546478]
[371.78521729 85.01180267]
[386.76629639 84.25814056]
[401.74734497 83.50447083]
[415.14132690 75.08356476]
[428.24127197 82.17162323]
[443.22232056 81.41795349]
[455.40853882 66.88675690]
[474.02801514 65.92074585]
[487.19238281 78.66760254]
[502.14978027 77.53769684]
[517.10717773 76.40779877]
[532.06457520 75.27789307]
[547.02191162 74.14798737]
[560.25354004 64.46006775]
[575.14819336 71.32172394]
[576.38348389 87.67428589]
[562.68865967 96.69562531]
[548.15185547 89.10537720]
[533.19445801 90.23527527]
[518.23706055 91.36518097]
[503.27969360 92.49507904]
[488.32229614 93.62498474]
[482.95507812 103.65914154]
[473.31695557 109.93101501]
[461.73007202 110.79193115]
[451.05310059 105.91386414]
[443.97601318 96.39900970]
[428.99493408 97.15267181]
[416.67251587 105.51967621]
[402.50100708 98.48552704]
[387.51995850 99.23918915]
[372.53890991 99.99285889]
[357.55783081 100.74652100]
[342.57678223 101.50018311]
[327.59573364 102.25385284]
[312.61468506 103.00751495]
[302.84667969 114.19330597]
[287.66448975 115.17103577]
[275.99804688 104.84961700]
[261.01699829 105.60328674]
[246.03593445 106.35694885]
[231.05488586 107.11061859]
[223.84631348 117.77299500]
[211.63319397 122.41332245]
[198.78634644 119.13163757]
[190.04211426 108.90697479]
[175.05278015 109.47232819]
[160.06343079 110.03768158]
[145.07408142 110.60303497]
[130.08474731 111.16838837]
[115.09540558 111.73374176]
[116.84584045 113.82783508]
[118.49418640 116.02204132]
[124.53778839 129.75065613]
[130.58137512 143.47927856]
[143.22305298 152.99235535]
[141.26945496 167.75828552]
[147.31306458 181.48690796]
[159.95472717 190.99998474]
[158.00112915 205.76591492]
[164.04473877 219.49452209]
[170.08833313 233.22314453]
[183.62770081 242.47612000]
[182.11444092 258.80529785]
[167.10525513 265.41262817]
[154.04032898 255.50103760]
[156.35971069 239.26673889]
[150.31611633 225.53813171]
[144.27252197 211.80950928]
[132.06312561 203.27839661]
[133.58444214 187.53050232]
[127.54084015 173.80187988]
[115.33144379 165.27076721]
[116.85276794 149.52287292]
[110.80916595 135.79425049]
[104.76557159 122.06563568]
[109.30713654 136.36158752]
[104.14745331 150.44624329]
[91.44576263 158.42541504]
[76.51752472 156.95994568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 98]
[4 97]
[5 96]
[6 95]
[7 94]
[8 93]
[9 92]
[10 91]
[11 90]
[12 89]
[15 86]
[16 85]
[17 84]
[18 83]
[19 82]
[20 81]
[22 52]
[23 51]
[24 50]
[25 49]
[28 46]
[29 45]
[30 44]
[31 42]
[32 41]
[53 66]
[54 65]
[55 64]
[56 63]
[68 77]
[69 76]
[70 75]
[99 151]
[100 150]
[101 149]
[102 148]
[104 144]
[105 143]
[106 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 136]
[112 135]
[113 134]
[114 133]
[115 132]
[117 131]
[118 130]
[119 129]
[121 127]
[122 126]
[152 220]
[153 219]
[154 218]
[155 217]
[156 216]
[157 215]
[160 211]
[161 210]
[162 209]
[163 208]
[166 205]
[167 204]
[168 203]
[169 202]
[170 201]
[171 200]
[172 199]
[174 197]
[175 196]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
[222 245]
[223 244]
[224 243]
[226 241]
[227 240]
[229 238]
[230 237]
[231 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
