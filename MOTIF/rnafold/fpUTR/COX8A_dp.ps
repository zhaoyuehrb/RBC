%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COX8A)
} def

/sequence { (\
GGCCAGCGCAGCCAUUUUGGCUUCCUGACCUUGGGCUACGGCUGACCGUUUUUUGUGGUGUACUCCGUGCCAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.008308244 ubox
1 22 0.016686877 ubox
1 25 0.008878075 ubox
1 30 0.983354494 ubox
1 31 0.024458434 ubox
1 32 0.006729294 ubox
1 37 0.011200846 ubox
1 43 0.018412069 ubox
1 47 0.082584708 ubox
1 66 0.003368314 ubox
1 71 0.050367201 ubox
1 74 0.003611115 ubox
2 9 0.026795847 ubox
2 12 0.008314647 ubox
2 21 0.019236473 ubox
2 24 0.008772476 ubox
2 29 0.983833012 ubox
2 30 0.027566928 ubox
2 31 0.007089314 ubox
2 36 0.012390527 ubox
2 42 0.019515407 ubox
2 46 0.082544478 ubox
2 59 0.005198273 ubox
2 65 0.003352750 ubox
2 70 0.050365081 ubox
3 8 0.026766099 ubox
3 11 0.008304269 ubox
3 20 0.019264937 ubox
3 34 0.006141583 ubox
3 35 0.012126660 ubox
3 41 0.019526172 ubox
3 58 0.005380618 ubox
3 69 0.049932060 ubox
4 19 0.019264097 ubox
4 27 0.992248113 ubox
4 33 0.010029293 ubox
4 34 0.011702850 ubox
4 40 0.019455324 ubox
4 44 0.084930299 ubox
4 57 0.005384059 ubox
4 60 0.017494419 ubox
4 69 0.004457198 ubox
5 18 0.018912696 ubox
5 22 0.007835485 ubox
5 26 0.993436373 ubox
5 31 0.009347334 ubox
5 32 0.009127216 ubox
5 37 0.023363864 ubox
5 43 0.085056000 ubox
5 50 0.010341438 ubox
5 56 0.004787726 ubox
5 59 0.017509703 ubox
5 64 0.003810505 ubox
5 68 0.004927193 ubox
6 12 0.007595376 ubox
6 17 0.014430787 ubox
6 21 0.008280512 ubox
6 25 0.989372284 ubox
6 30 0.010914991 ubox
6 31 0.006966358 ubox
6 36 0.024984394 ubox
6 42 0.085042046 ubox
6 49 0.013147705 ubox
6 63 0.003968919 ubox
6 68 0.021394895 ubox
6 70 0.009819369 ubox
7 11 0.007582675 ubox
7 20 0.008325713 ubox
7 27 0.013848213 ubox
7 35 0.024974225 ubox
7 40 0.046766008 ubox
7 41 0.071042375 ubox
7 48 0.013310110 ubox
7 57 0.017550179 ubox
7 67 0.022645678 ubox
7 69 0.009878456 ubox
8 21 0.009006744 ubox
8 26 0.013539591 ubox
8 36 0.009102751 ubox
8 39 0.065992927 ubox
8 47 0.013027788 ubox
8 56 0.017565791 ubox
8 61 0.003956617 ubox
8 66 0.021422632 ubox
8 68 0.010238697 ubox
9 19 0.008386191 ubox
9 20 0.008401926 ubox
9 27 0.011731703 ubox
9 33 0.023116800 ubox
9 35 0.009076018 ubox
9 44 0.020727221 ubox
9 55 0.017563548 ubox
9 60 0.004196290 ubox
9 67 0.010227081 ubox
10 18 0.008688334 ubox
10 22 0.953327032 ubox
10 23 0.056066061 ubox
10 26 0.008760126 ubox
10 32 0.016389145 ubox
10 37 0.078769585 ubox
10 43 0.020876364 ubox
10 54 0.011515675 ubox
11 17 0.007499037 ubox
11 21 0.995959494 ubox
11 22 0.008271536 ubox
11 25 0.004099927 ubox
11 36 0.081804746 ubox
11 42 0.020895177 ubox
12 20 0.996110774 ubox
12 34 0.007474239 ubox
12 35 0.081506313 ubox
12 41 0.020895422 ubox
12 58 0.003354123 ubox
13 19 0.995889560 ubox
13 33 0.010267261 ubox
13 34 0.081145861 ubox
13 40 0.020847095 ubox
13 57 0.003355814 ubox
14 18 0.807102431 ubox
14 32 0.012054952 ubox
14 56 0.003305365 ubox
16 28 0.012300584 ubox
16 33 0.010932796 ubox
17 27 0.011507184 ubox
17 28 0.016866123 ubox
17 33 0.003629965 ubox
18 27 0.017464157 ubox
18 38 0.019317350 ubox
18 72 0.004521302 ubox
19 25 0.020454888 ubox
19 26 0.017220102 ubox
19 30 0.076579647 ubox
19 31 0.005850822 ubox
19 37 0.020984968 ubox
19 71 0.005019098 ubox
20 24 0.020144972 ubox
20 25 0.017061983 ubox
20 29 0.076567077 ubox
20 30 0.005869333 ubox
20 36 0.021101908 ubox
20 70 0.005019564 ubox
21 35 0.020852864 ubox
21 69 0.005005305 ubox
22 28 0.019593031 ubox
22 34 0.013887656 ubox
23 27 0.017784664 ubox
23 33 0.010560079 ubox
23 34 0.004559658 ubox
23 35 0.019025051 ubox
24 33 0.006991314 ubox
24 34 0.032438502 ubox
24 35 0.019434905 ubox
25 33 0.033188666 ubox
25 34 0.019948738 ubox
26 33 0.019465477 ubox
26 62 0.003280147 ubox
27 32 0.012280043 ubox
27 50 0.004292620 ubox
27 61 0.003357108 ubox
28 49 0.005628291 ubox
28 59 0.027967688 ubox
29 35 0.009104449 ubox
29 48 0.005756926 ubox
29 58 0.028726125 ubox
30 34 0.009090595 ubox
30 57 0.028721652 ubox
32 48 0.005193964 ubox
32 55 0.015406228 ubox
32 62 0.007361263 ubox
32 67 0.008143742 ubox
32 72 0.197014290 ubox
33 47 0.007338035 ubox
33 53 0.003989651 ubox
33 54 0.023723428 ubox
33 61 0.008097577 ubox
33 66 0.011744939 ubox
33 71 0.188405137 ubox
33 74 0.033385596 ubox
34 43 0.014274413 ubox
34 46 0.007132077 ubox
34 52 0.004707049 ubox
34 53 0.024290181 ubox
34 65 0.011744459 ubox
34 70 0.152028552 ubox
34 71 0.975168102 ubox
34 73 0.006870446 ubox
35 42 0.017426659 ubox
35 51 0.004821998 ubox
35 52 0.022943266 ubox
35 59 0.010008581 ubox
35 63 0.004250860 ubox
35 64 0.010313563 ubox
35 68 0.003735165 ubox
35 70 0.982683151 ubox
36 41 0.017498093 ubox
36 58 0.010307310 ubox
36 67 0.003864384 ubox
36 69 0.970676568 ubox
37 57 0.010304422 ubox
37 60 0.007975204 ubox
37 62 0.009581283 ubox
37 69 0.208480227 ubox
38 49 0.042864695 ubox
38 56 0.009999870 ubox
38 59 0.008680219 ubox
38 61 0.009642274 ubox
38 68 0.976253400 ubox
39 48 0.044878470 ubox
39 55 0.009900975 ubox
39 58 0.008733662 ubox
39 60 0.009605209 ubox
39 67 0.994320297 ubox
40 47 0.045020728 ubox
40 54 0.008912608 ubox
40 59 0.006626869 ubox
40 64 0.017359514 ubox
40 65 0.019762144 ubox
40 66 0.994187599 ubox
40 71 0.003324037 ubox
41 46 0.044743872 ubox
41 49 0.004534897 ubox
41 53 0.006820466 ubox
41 56 0.008983574 ubox
41 59 0.006646997 ubox
41 61 0.017496725 ubox
41 63 0.030749566 ubox
41 64 0.021811943 ubox
41 65 0.992012309 ubox
41 70 0.003327672 ubox
42 48 0.004928917 ubox
42 55 0.009316982 ubox
42 58 0.013725737 ubox
42 60 0.052270200 ubox
42 69 0.003325662 ubox
43 57 0.013147038 ubox
43 60 0.036325513 ubox
43 62 0.346711676 ubox
44 51 0.004082708 ubox
44 53 0.005830911 ubox
44 56 0.006207481 ubox
44 59 0.023516209 ubox
44 61 0.339781032 ubox
45 50 0.003704853 ubox
45 52 0.005955853 ubox
45 56 0.014018524 ubox
45 59 0.986112303 ubox
45 61 0.060590559 ubox
45 64 0.003861170 ubox
46 55 0.014682378 ubox
46 58 0.993141317 ubox
46 60 0.051363210 ubox
47 55 0.024186259 ubox
47 57 0.993047147 ubox
47 60 0.021456892 ubox
48 54 0.044495647 ubox
48 56 0.852766638 ubox
48 59 0.022611993 ubox
48 63 0.003529712 ubox
49 55 0.584971433 ubox
49 58 0.026997595 ubox
49 62 0.003487264 ubox
50 57 0.028119135 ubox
50 58 0.013652108 ubox
51 57 0.013911434 ubox
51 58 0.005887373 ubox
52 57 0.006348565 ubox
54 69 0.003288672 ubox
54 72 0.003323117 ubox
55 63 0.006073151 ubox
55 68 0.008268797 ubox
55 71 0.003620075 ubox
55 73 0.078260004 ubox
56 62 0.006032213 ubox
56 67 0.020156564 ubox
56 72 0.082874480 ubox
57 61 0.005025328 ubox
57 64 0.005229650 ubox
57 66 0.028920405 ubox
57 71 0.084321700 ubox
57 74 0.017798378 ubox
58 63 0.005356571 ubox
58 65 0.028899221 ubox
58 70 0.083860761 ubox
58 73 0.018804961 ubox
59 67 0.004753904 ubox
59 69 0.081858049 ubox
59 72 0.018857399 ubox
60 66 0.013220673 ubox
60 68 0.053763245 ubox
60 70 0.023985080 ubox
60 71 0.013577243 ubox
61 67 0.031557954 ubox
61 69 0.029636024 ubox
62 68 0.039702937 ubox
63 67 0.040462489 ubox
1 30 0.9500000 lbox
2 29 0.9500000 lbox
4 27 0.9500000 lbox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
12 20 0.9500000 lbox
13 19 0.9500000 lbox
14 18 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
36 69 0.9500000 lbox
38 68 0.9500000 lbox
39 67 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
showpage
end
%%EOF
