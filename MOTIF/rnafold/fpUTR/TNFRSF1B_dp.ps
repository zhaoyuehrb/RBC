%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNFRSF1B)
} def

/sequence { (\
GCGAGCGCAGCGGAGCCUGGAGAGAAGGCGCUGGGCUGCGAGGGCGCGAGGGCGCGAGGGCAGGGGGCAACCGGACCCCGCCCGCACCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.335695623 ubox
1 45 0.370011226 ubox
1 47 0.833151623 ubox
1 53 0.006079539 ubox
1 55 0.003999592 ubox
1 85 0.115995436 ubox
2 38 0.335595200 ubox
2 40 0.120071015 ubox
2 44 0.370235897 ubox
2 46 0.833758286 ubox
2 48 0.029283002 ubox
2 52 0.006082427 ubox
2 54 0.003997185 ubox
2 84 0.115761010 ubox
3 37 0.164775633 ubox
3 39 0.123991376 ubox
3 45 0.831609485 ubox
3 47 0.028346173 ubox
3 53 0.003618448 ubox
3 83 0.037785773 ubox
4 37 0.342233259 ubox
5 36 0.384051362 ubox
5 39 0.005472611 ubox
5 45 0.024923550 ubox
5 47 0.072292735 ubox
5 81 0.004354134 ubox
5 85 0.014211101 ubox
6 35 0.384049403 ubox
6 38 0.005471378 ubox
6 40 0.918206140 ubox
6 44 0.023572940 ubox
6 46 0.072445629 ubox
6 80 0.004259382 ubox
6 84 0.013713697 ubox
7 36 0.005610074 ubox
7 39 0.920291737 ubox
7 45 0.072438603 ubox
8 33 0.384023891 ubox
8 35 0.005722474 ubox
8 38 0.920304788 ubox
8 44 0.072242472 ubox
9 32 0.384000569 ubox
9 37 0.920024404 ubox
10 31 0.384070936 ubox
10 36 0.919701941 ubox
11 30 0.383838214 ubox
11 33 0.205125830 ubox
11 35 0.895339035 ubox
11 40 0.072621465 ubox
12 29 0.169128390 ubox
12 32 0.714711703 ubox
12 39 0.073589933 ubox
13 31 0.766243549 ubox
14 32 0.123415965 ubox
14 37 0.073466606 ubox
15 29 0.973719709 ubox
15 31 0.122986181 ubox
15 36 0.073722248 ubox
16 28 0.987181010 ubox
16 30 0.121591503 ubox
16 35 0.073726082 ubox
17 24 0.069631210 ubox
17 27 0.987356364 ubox
17 28 0.118865254 ubox
17 34 0.073727440 ubox
18 23 0.070287568 ubox
18 26 0.983538711 ubox
18 27 0.118329276 ubox
18 33 0.073343118 ubox
19 29 0.005164823 ubox
19 32 0.072235049 ubox
20 31 0.072247339 ubox
21 32 0.010012643 ubox
22 31 0.010734197 ubox
23 32 0.005416546 ubox
24 31 0.005558977 ubox
36 63 0.003431219 ubox
37 46 0.008939123 ubox
37 48 0.032070434 ubox
37 62 0.004279436 ubox
37 86 0.008462355 ubox
38 45 0.052157858 ubox
38 47 0.107245183 ubox
38 61 0.005861762 ubox
38 85 0.020357912 ubox
39 44 0.053125430 ubox
39 46 0.107366053 ubox
39 48 0.006912727 ubox
39 60 0.005863239 ubox
39 84 0.020359318 ubox
40 45 0.105744980 ubox
40 47 0.012788440 ubox
40 83 0.007055499 ubox
42 83 0.004360321 ubox
42 88 0.131989848 ubox
42 89 0.236873345 ubox
43 82 0.004353950 ubox
43 87 0.132077201 ubox
43 88 0.238854485 ubox
43 89 0.005842956 ubox
44 53 0.006489183 ubox
44 55 0.287282295 ubox
44 81 0.004301052 ubox
44 85 0.033910305 ubox
44 87 0.230694943 ubox
44 88 0.004588189 ubox
45 52 0.006530398 ubox
45 54 0.288843072 ubox
45 56 0.102818481 ubox
45 80 0.004265020 ubox
45 84 0.032883868 ubox
46 53 0.289803612 ubox
46 55 0.110922724 ubox
46 85 0.208281494 ubox
47 52 0.289713835 ubox
47 54 0.110939968 ubox
47 84 0.207650545 ubox
48 53 0.108929634 ubox
48 55 0.005808313 ubox
48 83 0.101051425 ubox
50 82 0.049277474 ubox
50 83 0.175313890 ubox
50 88 0.047648271 ubox
50 89 0.918040528 ubox
51 81 0.036488348 ubox
51 82 0.195122073 ubox
51 83 0.045764301 ubox
51 87 0.047427831 ubox
51 88 0.925947633 ubox
51 89 0.007800194 ubox
52 61 0.012729629 ubox
52 81 0.196573260 ubox
52 82 0.050857672 ubox
52 85 0.030434719 ubox
52 87 0.925884161 ubox
52 88 0.007474661 ubox
53 60 0.012744511 ubox
53 80 0.197820196 ubox
53 84 0.030523937 ubox
54 61 0.073904653 ubox
54 79 0.181124950 ubox
54 81 0.057991854 ubox
54 83 0.013341925 ubox
54 85 0.925573366 ubox
55 60 0.073961424 ubox
55 80 0.062297525 ubox
55 84 0.922547370 ubox
56 79 0.066462546 ubox
56 83 0.432263301 ubox
58 77 0.055994111 ubox
58 78 0.184999170 ubox
58 79 0.015772913 ubox
58 82 0.180561542 ubox
58 83 0.872194014 ubox
58 88 0.004502943 ubox
59 76 0.056012489 ubox
59 77 0.185143504 ubox
59 78 0.017129992 ubox
59 81 0.138448132 ubox
59 82 0.960302531 ubox
59 83 0.006114670 ubox
59 87 0.004489783 ubox
60 68 0.003198513 ubox
60 76 0.184866531 ubox
60 77 0.017080194 ubox
60 81 0.968096667 ubox
60 82 0.006189990 ubox
60 85 0.004512182 ubox
61 67 0.003203853 ubox
61 80 0.971826498 ubox
61 84 0.004520426 ubox
63 72 0.119662424 ubox
63 77 0.005610261 ubox
63 78 0.133212861 ubox
63 79 0.948547440 ubox
63 82 0.003242729 ubox
64 71 0.119574982 ubox
64 72 0.129856752 ubox
64 76 0.005700788 ubox
64 77 0.133157520 ubox
64 78 0.948634592 ubox
64 79 0.207909700 ubox
65 71 0.129769728 ubox
65 72 0.081934662 ubox
65 76 0.132266380 ubox
65 77 0.948196174 ubox
65 78 0.210966152 ubox
65 79 0.004506728 ubox
66 71 0.083464870 ubox
66 72 0.047050760 ubox
66 76 0.947323261 ubox
66 77 0.212945222 ubox
66 78 0.004486191 ubox
67 71 0.048739427 ubox
67 76 0.214717013 ubox
67 77 0.004429225 ubox
1 47 0.9500000 lbox
2 46 0.9500000 lbox
3 45 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
50 89 0.9500000 lbox
51 88 0.9500000 lbox
52 87 0.9500000 lbox
54 85 0.9500000 lbox
55 84 0.9500000 lbox
58 83 0.9500000 lbox
59 82 0.9500000 lbox
60 81 0.9500000 lbox
61 80 0.9500000 lbox
63 79 0.9500000 lbox
64 78 0.9500000 lbox
65 77 0.9500000 lbox
66 76 0.9500000 lbox
showpage
end
%%EOF
