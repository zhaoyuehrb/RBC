%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCGGCCUGGGGGCAGGGCCUCGGGUUCCUGCAUCGGGCCUGAGCAGAACUAGGCGCGCCGCGGCCCGGCACGCGCAGGCGUACAGAGCUCCCCGGGGGUGCCAGUUCCUCUCCGAUUCCCGGCUUCUGUCACCUUCCUCACGGACCUUGGUCACGGCCGCAGGUGACCCCUUAGCCCAGCUCCAGUGGGCGGGUGGCAGGGUC\
) } def
/len { sequence length } bind def

/coor [
[-96.29653168 64.18258667]
[-105.07011414 68.98312378]
[-114.70017242 71.59826660]
[-124.65238953 71.89368439]
[-134.37709045 69.86341858]
[-143.33959961 65.62969971]
[-153.32569885 76.82244873]
[-163.31179810 88.01520538]
[-173.29789734 99.20796204]
[-183.28401184 110.40071869]
[-193.27011108 121.59347534]
[-203.25621033 132.78622437]
[-203.30348206 145.68637085]
[-211.85397339 154.80354309]
[-223.92477417 155.62207031]
[-234.07958984 166.66198730]
[-244.23440552 177.70190430]
[-254.38922119 188.74182129]
[-264.54403687 199.78173828]
[-274.69885254 210.82164001]
[-284.76959229 221.93830872]
[-294.75570679 233.13105774]
[-300.78875732 248.97525024]
[-317.68389893 247.56407166]
[-321.00488281 230.93856812]
[-305.94845581 223.14495850]
[-295.96237183 211.95219421]
[-293.85437012 204.86607361]
[-285.73876953 200.66682434]
[-275.58395386 189.62692261]
[-265.42913818 178.58700562]
[-255.27432251 167.54708862]
[-245.11950684 156.50717163]
[-234.96469116 145.46725464]
[-232.06398010 128.16101074]
[-214.44895935 122.80012512]
[-204.46286011 111.60736847]
[-194.47676086 100.41461945]
[-184.49066162 89.22186279]
[-174.50456238 78.02910614]
[-164.51846313 66.83634949]
[-154.53234863 55.64359665]
[-163.47064209 29.69202042]
[-154.53234863 3.74044633]
[-164.51846313 -7.45230913]
[-174.50456238 -18.64506340]
[-190.04566956 -19.69948006]
[-200.01354980 -31.19278145]
[-198.91255188 -46.00234985]
[-208.89865112 -57.19510651]
[-218.88475037 -68.38786316]
[-228.87084961 -79.58061981]
[-238.85694885 -90.77337646]
[-246.90789795 -95.09529877]
[-248.90809631 -102.21259308]
[-258.72317505 -113.55561066]
[-268.53826904 -124.89862823]
[-278.35336304 -136.24165344]
[-288.16845703 -147.58467102]
[-296.15286255 -152.02827454]
[-298.04483032 -159.17510986]
[-307.68664551 -170.66577148]
[-322.48434448 -176.26388550]
[-324.73815918 -190.98698425]
[-334.37997437 -202.47764587]
[-344.02178955 -213.96830750]
[-357.48739624 -213.59014893]
[-368.55014038 -220.93014526]
[-373.29421997 -233.12129211]
[-370.19610596 -245.63041687]
[-379.66241455 -257.26608276]
[-389.12875366 -268.90176392]
[-399.02963257 -280.16995239]
[-409.35083008 -291.05450439]
[-419.67199707 -301.93902588]
[-429.99319458 -312.82354736]
[-445.86056519 -316.96585083]
[-449.94543457 -332.84811401]
[-438.04562378 -344.13201904]
[-422.40264893 -339.20965576]
[-419.10867310 -323.14474487]
[-408.78747559 -312.26022339]
[-398.46627808 -301.37567139]
[-388.14511108 -290.49114990]
[-385.12573242 -305.18411255]
[-371.82717896 -312.12304688]
[-358.04821777 -306.19512939]
[-353.94158936 -291.76821899]
[-362.53320312 -279.47250366]
[-377.49307251 -278.36807251]
[-368.02676392 -266.73239136]
[-358.56045532 -255.09674072]
[-341.77395630 -254.09429932]
[-330.68688965 -241.00453186]
[-332.53112793 -223.61012268]
[-322.88931274 -212.11946106]
[-313.24749756 -200.62879944]
[-299.13943481 -195.85258484]
[-296.19598389 -180.30758667]
[-286.55416870 -168.81692505]
[-276.82543945 -157.39974976]
[-267.01034546 -146.05673218]
[-257.19525146 -134.71371460]
[-247.38017273 -123.37070465]
[-237.56507874 -112.02768707]
[-227.66419983 -100.75947571]
[-217.67810059 -89.56671906]
[-207.69200134 -78.37396240]
[-197.70588684 -67.18120575]
[-187.71978760 -55.98845291]
[-172.88101196 -55.40025330]
[-162.59423828 -44.19146347]
[-163.31179810 -28.63116646]
[-153.32569885 -17.43840981]
[-143.33959961 -6.24565554]
[-133.82983398 -10.63104248]
[-123.51483917 -12.54177189]
[-113.02880859 -11.85121250]
[-103.01873779 -8.59295082]
[-94.10445404 -2.95927978]
[-86.84026337 4.71013308]
[-81.68048859 13.94871140]
[-78.95105743 24.19135094]
[-78.82891083 34.80898285]
[-64.48101044 39.18367004]
[-50.13311768 43.55836105]
[-35.78522491 47.93304825]
[-28.46807671 46.87656403]
[-21.25369453 52.48453140]
[-6.97384357 57.07646561]
[7.30600786 61.66839600]
[21.58585930 66.26033020]
[35.86571121 70.85225677]
[50.14556122 75.44419098]
[64.42541504 80.03612518]
[78.70526886 84.62805176]
[92.98511505 89.21998596]
[107.97431946 88.65099335]
[121.86495972 82.98970795]
[135.75559998 77.32841492]
[145.37979126 64.05035400]
[161.66082764 66.01500702]
[167.85017395 81.20130920]
[157.58076477 93.98690033]
[141.41688538 91.21905518]
[127.52624512 96.88034058]
[113.63561249 102.54163361]
[114.37427521 110.00516510]
[129.30137634 108.52807617]
[130.77821350 123.45520020]
[115.85161591 124.93223572]
[116.59028625 132.39578247]
[131.32116699 135.22438049]
[146.05204773 138.05299377]
[160.78294373 140.88159180]
[175.51382446 143.71020508]
[190.24470520 146.53881836]
[201.47656250 135.83250427]
[216.86077881 133.80621338]
[230.48178101 141.23908997]
[237.10205078 155.27304077]
[234.17593384 170.51171875]
[222.82859802 181.09555054]
[207.42330933 182.95483398]
[193.88372803 175.37463379]
[187.41610718 161.26969910]
[172.68521118 158.44108582]
[157.95433044 155.61248779]
[143.22344971 152.78387451]
[128.49256897 149.95526123]
[113.76167297 147.12666321]
[109.86479950 153.53480530]
[124.46221161 156.98667908]
[125.69010925 171.93634033]
[111.85157013 177.72381592]
[102.07103729 166.35110474]
[98.17415619 172.75924683]
[107.46279907 184.53723145]
[116.75144958 196.31523132]
[126.04009247 208.09321594]
[135.32873535 219.87121582]
[150.96356201 220.16491699]
[162.71771240 230.47868347]
[165.04122925 245.94268799]
[156.83703613 259.25527954]
[141.97888184 264.13067627]
[127.48235321 258.26684570]
[120.19224548 244.43252563]
[123.55074310 229.15985107]
[114.26210022 217.38186646]
[104.97345734 205.60386658]
[95.68480682 193.82588196]
[86.39616394 182.04788208]
[88.39318848 103.49983978]
[74.11333466 98.90790558]
[59.83348465 94.31597137]
[45.55363083 89.72404480]
[31.27377892 85.13211060]
[16.99392891 80.54017639]
[2.71407628 75.94824982]
[-11.56577492 71.35631561]
[-25.84562683 66.76438141]
[-40.15991211 62.28094482]
[-54.50780869 57.90625381]
[-68.85570526 53.53156662]
[-83.20359802 49.15687943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 27]
[22 26]
[44 115]
[45 114]
[46 113]
[49 110]
[50 109]
[51 108]
[52 107]
[53 106]
[55 105]
[56 104]
[57 103]
[58 102]
[59 101]
[61 100]
[62 99]
[64 97]
[65 96]
[66 95]
[70 92]
[71 91]
[72 90]
[73 84]
[74 83]
[75 82]
[76 81]
[124 206]
[125 205]
[126 204]
[127 203]
[129 202]
[130 201]
[131 200]
[132 199]
[133 198]
[134 197]
[135 196]
[136 195]
[137 194]
[138 147]
[139 146]
[140 145]
[152 171]
[153 170]
[154 169]
[155 168]
[156 167]
[157 166]
[177 193]
[178 192]
[179 191]
[180 190]
[181 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
