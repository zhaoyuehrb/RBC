%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUUUUUCCGCCGCGCGCCACCAGAAUGUCCCUGUCUUGAGGUCUAAUGGCGGACGCCAGUAUGUUGGAGUUGGUGGUGGCUUAAGUUUUGAAGGGAGGUAGCAUCCGUUGGAUAUCCACACCAUCCUUCUCGCUGCAGGCUUUCUUGGACUCCGUACUGUUGGUGUAACCAAGGCCUGGAGGUCUGGGUGGCUCAGGUUUCCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[147.27253723 301.56140137]
[142.89169312 287.21536255]
[138.51083374 272.86935425]
[134.12998962 258.52334595]
[119.06582642 246.40000916]
[123.91041565 226.83186340]
[119.10636902 212.62196350]
[114.30232239 198.41206360]
[109.49827576 184.20216370]
[104.69422913 169.99227905]
[99.68013763 155.85513306]
[94.45711517 141.79383850]
[89.23409271 127.73253632]
[75.17279816 122.50951385]
[62.03677368 129.75140381]
[48.90074921 136.99328613]
[35.87347794 144.42901611]
[22.95782471 152.05699158]
[10.04217052 159.68495178]
[-2.87348318 167.31292725]
[-15.78913784 174.94088745]
[-19.83502388 189.98310852]
[-33.04199600 197.53497314]
[-47.35752869 193.58512878]
[-60.27318192 201.21310425]
[-73.18883514 208.84106445]
[-59.53275299 215.04682922]
[-55.72268677 229.55487061]
[-64.56745911 241.66973877]
[-79.54661560 242.46023560]
[-89.61737823 231.34359741]
[-87.35518646 216.51466370]
[-100.80007172 223.16558838]
[-114.24496460 229.81652832]
[-119.06852722 244.86674500]
[-133.15943909 252.02368164]
[-148.15780640 247.04125977]
[-155.16537476 232.87545776]
[-150.02465820 217.93060303]
[-135.78556824 211.07321167]
[-120.89589691 216.37164307]
[-107.45101166 209.72070312]
[-94.00612640 203.06976318]
[-80.81680298 195.92541504]
[-67.90114594 188.29743958]
[-54.98549271 180.66947937]
[-51.53307724 166.22592163]
[-38.54343033 158.30609131]
[-23.41710472 162.02523804]
[-10.50145054 154.39726257]
[2.41420412 146.76930237]
[15.32985783 139.14132690]
[28.24551201 131.51336670]
[30.28225327 127.19432831]
[35.05341339 124.10854340]
[41.65886688 123.85725403]
[54.79489136 116.61537170]
[67.93091583 109.37348938]
[94.09951782 82.75730133]
[95.87361908 67.86257935]
[97.64772034 52.96786499]
[99.42181396 38.07315063]
[101.19591522 23.17843246]
[102.97000885 8.28371620]
[100.91210175 3.48828506]
[100.90010834 -1.15299940]
[102.53282928 -4.88679695]
[105.16828156 -7.22808504]
[107.60257721 -22.02924156]
[110.03687286 -36.83039856]
[112.47116852 -51.63155365]
[114.90545654 -66.43270874]
[117.33975220 -81.23386383]
[106.60561371 -92.28304291]
[104.46088409 -107.35797882]
[111.52056885 -120.64800262]
[124.89219666 -127.15473175]
[127.32649231 -141.95588684]
[121.93133545 -156.82878113]
[131.63153076 -168.13168335]
[134.06582642 -182.93283081]
[136.50012207 -197.73399353]
[138.93440247 -212.53514099]
[141.36869812 -227.33630371]
[134.47373962 -244.41125488]
[146.12022400 -257.53900146]
[148.33491516 -272.37460327]
[150.54962158 -287.21020508]
[141.34347534 -297.04122925]
[139.50688171 -310.18753052]
[145.48841858 -321.81903076]
[156.90519714 -327.79190063]
[159.33949280 -342.59307861]
[161.77378845 -357.39422607]
[164.20808411 -372.19537354]
[166.64237976 -386.99655151]
[169.07666016 -401.79769897]
[163.68151855 -416.67059326]
[173.38169861 -427.97348022]
[175.81599426 -442.77462769]
[178.25028992 -457.57580566]
[164.23045349 -470.60693359]
[160.92428589 -489.30743408]
[169.48971558 -506.08813477]
[186.30380249 -514.24945068]
[188.07791138 -529.14422607]
[189.85200500 -544.03894043]
[191.62609863 -558.93365479]
[187.49554443 -575.37670898]
[202.15257263 -583.89776611]
[214.39805603 -572.17236328]
[206.52081299 -557.15954590]
[204.74671936 -542.26483154]
[202.97262573 -527.37011719]
[201.19851685 -512.47540283]
[210.66790771 -506.58026123]
[217.28399658 -497.53610229]
[220.06022644 -486.62673950]
[218.55847168 -475.41851807]
[212.95771790 -465.53549194]
[204.03364563 -458.42410278]
[193.05145264 -455.14151001]
[190.61715698 -440.34033203]
[188.18286133 -425.53918457]
[193.75213623 -411.72497559]
[183.87782288 -399.36340332]
[181.44352722 -384.56225586]
[179.00923157 -369.76107788]
[176.57493591 -354.95993042]
[174.14064026 -340.15878296]
[171.70635986 -325.35763550]
[182.08572388 -312.12435913]
[179.63410950 -295.14447021]
[165.38522339 -284.99551392]
[163.17051697 -270.15991211]
[160.95582581 -255.32431030]
[167.89811707 -245.41877747]
[166.17495728 -233.04129028]
[156.16986084 -224.90200806]
[153.73556519 -210.10086060]
[151.30126953 -195.29969788]
[148.86697388 -180.49853516]
[146.43267822 -165.69738770]
[152.00195312 -151.88317871]
[142.12763977 -139.52159119]
[139.69334412 -124.72044373]
[150.27673340 -114.27391052]
[152.70816040 -99.42291260]
[145.84835815 -85.82892609]
[132.14091492 -78.79956818]
[129.70661926 -63.99841309]
[127.27232361 -49.19725800]
[124.83802795 -34.39610291]
[122.40373230 -19.59494781]
[119.96944427 -4.79379177]
[117.86472321 10.05781364]
[116.09062958 24.95252991]
[114.31652832 39.84724808]
[112.54243469 54.74196243]
[110.76833344 69.63668060]
[108.99423981 84.53139496]
[117.37393951 96.97248077]
[131.84347534 100.92628479]
[146.31300354 104.88009644]
[160.78254700 108.83390045]
[175.25207520 112.78771210]
[192.12480164 111.13018799]
[198.38838196 126.88467407]
[184.98352051 137.26475525]
[171.29826355 127.25724792]
[156.82873535 123.30343628]
[142.35919189 119.34963226]
[127.88966370 115.39582062]
[113.42013550 111.44201660]
[103.29538727 122.50951385]
[108.51840973 136.57081604]
[113.74143219 150.63211060]
[118.58110046 155.13464355]
[120.18083191 160.58688354]
[118.90412140 165.18823242]
[123.70816803 179.39811707]
[128.51222229 193.60801697]
[133.31626892 207.81791687]
[138.12031555 222.02780151]
[148.13121033 226.27864075]
[154.02896118 235.15425110]
[154.06767273 245.59106445]
[148.47599792 254.14248657]
[152.85684204 268.48849487]
[157.23770142 282.83453369]
[161.61854553 297.18054199]
[166.10557556 311.49371338]
[170.69853210 325.77322388]
[175.29148865 340.05273438]
[179.88444519 354.33227539]
[184.58306885 368.57736206]
[189.38711548 382.78726196]
[194.19116211 396.99716187]
[198.99520874 411.20706177]
[209.79586792 424.27542114]
[200.22813416 438.27166748]
[184.13026428 432.95239258]
[184.78532410 416.01110840]
[179.98127747 401.80120850]
[175.17721558 387.59130859]
[170.37316895 373.38140869]
[165.25344849 368.05209351]
[165.60491943 358.92523193]
[161.01196289 344.64569092]
[156.41900635 330.36618042]
[151.82604980 316.08663940]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[4 188]
[6 184]
[7 183]
[8 182]
[9 181]
[10 180]
[11 177]
[12 176]
[13 175]
[14 58]
[15 57]
[16 56]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[24 46]
[25 45]
[26 44]
[32 43]
[33 42]
[34 41]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[77 146]
[78 145]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[86 136]
[87 135]
[88 134]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[99 124]
[100 123]
[101 122]
[105 115]
[106 114]
[107 113]
[108 112]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
[192 211]
[193 210]
[194 209]
[195 208]
[196 206]
[197 205]
[198 204]
[199 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
