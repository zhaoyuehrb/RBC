%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ADCY2)
} def

/sequence { (\
GGGCGGCCGCGGCGAGCGGCGCUGCCCGGGCCGGGCGCGCACGGCGGGCGCCCUGUGAGCGGCCCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.006332318 ubox
1 27 0.948805951 ubox
1 53 0.015210102 ubox
1 65 0.160570232 ubox
1 66 0.068981723 ubox
2 23 0.011696268 ubox
2 25 0.006060696 ubox
2 26 0.949606232 ubox
2 27 0.004081128 ubox
2 52 0.015249882 ubox
2 64 0.161812482 ubox
2 65 0.065886861 ubox
2 66 0.258017199 ubox
3 22 0.014702766 ubox
3 25 0.949591983 ubox
3 51 0.015250844 ubox
3 63 0.162531871 ubox
3 64 0.046893017 ubox
3 65 0.258532083 ubox
4 21 0.015891049 ubox
4 24 0.949089638 ubox
4 33 0.008333794 ubox
4 50 0.015251014 ubox
4 61 0.003339745 ubox
4 62 0.163153400 ubox
5 20 0.014787328 ubox
5 23 0.843470068 ubox
5 32 0.013811070 ubox
5 49 0.015203905 ubox
5 60 0.004125816 ubox
5 64 0.262772559 ubox
6 20 0.741990716 ubox
6 22 0.590507286 ubox
6 31 0.013822259 ubox
6 60 0.162764827 ubox
6 63 0.266394720 ubox
7 19 0.807462223 ubox
7 21 0.455592605 ubox
7 30 0.013700634 ubox
7 47 0.015160548 ubox
7 59 0.162813484 ubox
7 62 0.266430181 ubox
8 18 0.876991220 ubox
8 21 0.203327353 ubox
8 28 0.003430827 ubox
8 29 0.013571390 ubox
8 46 0.015162051 ubox
8 55 0.008428911 ubox
8 57 0.162423140 ubox
8 61 0.266427329 ubox
9 17 0.880020182 ubox
9 20 0.287504275 ubox
9 22 0.003236156 ubox
9 25 0.007578528 ubox
9 27 0.003772035 ubox
9 45 0.015150287 ubox
9 54 0.008478187 ubox
9 56 0.162421885 ubox
9 60 0.266391741 ubox
10 16 0.879884506 ubox
10 18 0.219288470 ubox
10 19 0.280440689 ubox
10 21 0.003581985 ubox
10 24 0.007604697 ubox
10 28 0.007193202 ubox
10 44 0.015102451 ubox
10 55 0.161586066 ubox
10 59 0.266257655 ubox
11 17 0.227942367 ubox
11 20 0.004305711 ubox
11 23 0.012008886 ubox
11 26 0.011042786 ubox
11 27 0.007103918 ubox
11 32 0.006056588 ubox
11 52 0.190952805 ubox
11 53 0.032747235 ubox
11 54 0.037387904 ubox
12 20 0.027893421 ubox
12 22 0.012791290 ubox
12 25 0.011196502 ubox
12 26 0.006870480 ubox
12 31 0.006065142 ubox
12 49 0.008448419 ubox
12 51 0.194251660 ubox
12 52 0.023542543 ubox
12 53 0.028903262 ubox
12 56 0.166266230 ubox
12 60 0.003900266 ubox
13 19 0.028042589 ubox
13 21 0.012796529 ubox
13 24 0.011327947 ubox
13 30 0.006054455 ubox
13 43 0.004270456 ubox
13 46 0.005775058 ubox
13 48 0.009539587 ubox
13 50 0.195977928 ubox
13 55 0.168773012 ubox
13 57 0.070422408 ubox
13 59 0.004263318 ubox
14 20 0.012693698 ubox
14 23 0.005791537 ubox
14 42 0.004227884 ubox
14 45 0.006309935 ubox
14 49 0.194817115 ubox
14 54 0.090709116 ubox
14 56 0.063215217 ubox
15 23 0.011786519 ubox
15 54 0.216067979 ubox
16 22 0.013049557 ubox
16 45 0.127956409 ubox
16 49 0.003694981 ubox
16 51 0.007406017 ubox
16 53 0.231689646 ubox
16 56 0.035155952 ubox
17 21 0.012955375 ubox
17 43 0.154115208 ubox
17 44 0.099418897 ubox
17 46 0.072011190 ubox
17 48 0.003564750 ubox
17 50 0.007406258 ubox
17 55 0.035474406 ubox
18 26 0.005197923 ubox
18 42 0.173887730 ubox
18 45 0.071344256 ubox
18 49 0.007146665 ubox
18 52 0.238760006 ubox
18 53 0.012838320 ubox
18 54 0.032916603 ubox
19 25 0.005304171 ubox
19 40 0.196501043 ubox
19 51 0.238810124 ubox
19 52 0.012808783 ubox
19 53 0.032759734 ubox
20 24 0.005361964 ubox
20 39 0.196677313 ubox
20 43 0.022698218 ubox
20 46 0.004998897 ubox
20 50 0.238788510 ubox
21 38 0.196741872 ubox
21 40 0.019773680 ubox
21 42 0.012595984 ubox
21 45 0.005031638 ubox
21 49 0.237333822 ubox
21 51 0.035036735 ubox
21 63 0.003823548 ubox
22 37 0.192314107 ubox
22 39 0.021459316 ubox
22 44 0.005034771 ubox
22 47 0.085721096 ubox
22 48 0.221089498 ubox
22 50 0.034280672 ubox
22 62 0.003835525 ubox
23 37 0.060970976 ubox
23 43 0.004876065 ubox
23 46 0.120865988 ubox
23 47 0.193420911 ubox
23 50 0.008372143 ubox
23 61 0.003855352 ubox
24 36 0.250702809 ubox
24 42 0.004369321 ubox
24 45 0.148732238 ubox
24 49 0.043481502 ubox
24 60 0.003864864 ubox
25 35 0.252420583 ubox
25 44 0.146214421 ubox
25 47 0.011175184 ubox
25 48 0.044936048 ubox
25 59 0.003861127 ubox
26 34 0.252437658 ubox
26 43 0.143283309 ubox
26 44 0.101159138 ubox
26 46 0.011534438 ubox
26 47 0.046563272 ubox
27 33 0.252414458 ubox
27 37 0.003234064 ubox
27 39 0.136652242 ubox
27 43 0.105109229 ubox
27 46 0.046469867 ubox
27 67 0.013372890 ubox
28 32 0.236138339 ubox
28 36 0.003228897 ubox
28 38 0.137167670 ubox
28 42 0.108052841 ubox
28 45 0.018927589 ubox
28 53 0.004054308 ubox
28 64 0.004235627 ubox
28 65 0.940424649 ubox
28 66 0.107458988 ubox
29 52 0.004064875 ubox
29 64 0.944214522 ubox
29 65 0.089210325 ubox
29 66 0.027953632 ubox
30 36 0.137180916 ubox
30 38 0.026430544 ubox
30 40 0.101262443 ubox
30 45 0.046848031 ubox
30 51 0.004068144 ubox
30 56 0.004849925 ubox
30 63 0.946135895 ubox
30 64 0.063344896 ubox
30 65 0.027632674 ubox
31 35 0.136197301 ubox
31 37 0.026429987 ubox
31 39 0.082677019 ubox
31 44 0.050660747 ubox
31 50 0.004025430 ubox
31 55 0.005165066 ubox
31 62 0.948036714 ubox
32 39 0.071834794 ubox
32 43 0.050697767 ubox
32 55 0.011771258 ubox
32 57 0.003264385 ubox
32 61 0.946217254 ubox
32 67 0.016289961 ubox
33 38 0.093977236 ubox
33 42 0.050681982 ubox
33 52 0.019632711 ubox
33 53 0.275963114 ubox
33 54 0.030759031 ubox
33 60 0.752496617 ubox
33 64 0.035265166 ubox
33 65 0.032515951 ubox
33 66 0.016526415 ubox
34 51 0.021724067 ubox
34 52 0.305918201 ubox
34 53 0.063300545 ubox
34 54 0.019039112 ubox
34 63 0.040436545 ubox
34 64 0.033507450 ubox
34 65 0.015551772 ubox
35 49 0.024608449 ubox
35 51 0.306040815 ubox
35 52 0.062795488 ubox
35 53 0.019106418 ubox
35 56 0.010255820 ubox
35 60 0.498780761 ubox
35 63 0.034065941 ubox
35 64 0.014460476 ubox
36 46 0.028288695 ubox
36 48 0.024940935 ubox
36 50 0.306119014 ubox
36 55 0.010554377 ubox
36 57 0.317751790 ubox
36 59 0.546268345 ubox
36 61 0.052884828 ubox
36 62 0.026735417 ubox
37 45 0.098811319 ubox
37 49 0.305799911 ubox
37 51 0.066767157 ubox
37 56 0.313786552 ubox
37 60 0.075156642 ubox
37 63 0.003710074 ubox
38 44 0.098915413 ubox
38 46 0.136090141 ubox
38 48 0.299142896 ubox
38 50 0.066812496 ubox
38 55 0.313177055 ubox
38 57 0.828695209 ubox
38 59 0.078011221 ubox
38 61 0.017055613 ubox
39 45 0.195992383 ubox
39 49 0.066887051 ubox
39 54 0.300739038 ubox
39 56 0.834310249 ubox
39 60 0.017375004 ubox
40 44 0.195013246 ubox
40 48 0.066854430 ubox
40 55 0.835105411 ubox
40 57 0.086099970 ubox
40 59 0.017208995 ubox
41 54 0.830426706 ubox
41 56 0.086488720 ubox
42 50 0.014328492 ubox
42 55 0.086423898 ubox
42 57 0.010620552 ubox
43 49 0.014449368 ubox
43 52 0.890644743 ubox
43 53 0.040929160 ubox
43 54 0.080012751 ubox
43 56 0.007601756 ubox
44 51 0.891958443 ubox
44 52 0.030611270 ubox
44 53 0.079857391 ubox
44 56 0.021482465 ubox
45 50 0.891085656 ubox
45 55 0.023219568 ubox
46 52 0.078782725 ubox
46 53 0.009735878 ubox
46 54 0.023580404 ubox
46 66 0.014463493 ubox
47 51 0.077531515 ubox
47 52 0.010012791 ubox
47 53 0.023740081 ubox
47 65 0.014477242 ubox
48 52 0.023365559 ubox
48 64 0.014474272 ubox
49 61 0.003624063 ubox
50 56 0.004967800 ubox
50 60 0.006417197 ubox
50 63 0.014581797 ubox
51 55 0.005056236 ubox
51 59 0.006571100 ubox
51 62 0.014579056 ubox
52 61 0.014570856 ubox
53 59 0.020416071 ubox
54 58 0.019942600 ubox
54 61 0.004055098 ubox
55 60 0.049795489 ubox
55 63 0.004775520 ubox
56 62 0.004764389 ubox
60 67 0.004054418 ubox
61 66 0.004324016 ubox
1 27 0.9500000 lbox
2 26 0.9500000 lbox
3 25 0.9500000 lbox
4 24 0.9500000 lbox
5 23 0.9500000 lbox
6 20 0.9500000 lbox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
28 65 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
31 62 0.9500000 lbox
32 61 0.9500000 lbox
33 60 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
40 55 0.9500000 lbox
41 54 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
showpage
end
%%EOF
