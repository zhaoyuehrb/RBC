%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRSS47)
} def

/sequence { (\
AAAGGGGAUGCAUGGGAGACCUUGCGGAUGUAGGAACUGCUCCUUUUGUUGCUGGAGUGGUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 46 0.012116490 ubox
1 47 0.020303598 ubox
2 23 0.030634306 ubox
2 45 0.015426791 ubox
2 46 0.022459147 ubox
2 47 0.035498549 ubox
2 50 0.004796596 ubox
3 22 0.033705577 ubox
3 23 0.025988097 ubox
3 38 0.006062539 ubox
3 44 0.016132905 ubox
3 45 0.022866867 ubox
3 46 0.037551471 ubox
3 49 0.005109088 ubox
3 53 0.007753745 ubox
4 21 0.034465648 ubox
4 22 0.030140300 ubox
4 23 0.005163271 ubox
4 37 0.006387539 ubox
4 38 0.003437020 ubox
4 43 0.016239304 ubox
4 44 0.022973409 ubox
4 45 0.038271145 ubox
4 52 0.007865627 ubox
4 53 0.018127152 ubox
5 20 0.034700330 ubox
5 21 0.031197850 ubox
5 22 0.007423914 ubox
5 37 0.003923519 ubox
5 38 0.004243148 ubox
5 42 0.016218148 ubox
5 43 0.022911022 ubox
5 44 0.038769231 ubox
5 47 0.005149756 ubox
5 52 0.019634836 ubox
5 53 0.005024233 ubox
6 20 0.031604619 ubox
6 21 0.007929243 ubox
6 37 0.004620925 ubox
6 41 0.015135491 ubox
6 42 0.022787874 ubox
6 43 0.038889804 ubox
6 46 0.005177409 ubox
6 50 0.006531729 ubox
6 52 0.005212210 ubox
6 53 0.015755582 ubox
7 20 0.008098204 ubox
7 40 0.012712360 ubox
7 41 0.018642234 ubox
7 42 0.038906561 ubox
7 45 0.005064760 ubox
7 49 0.004358980 ubox
7 50 0.019350027 ubox
7 52 0.016557527 ubox
8 29 0.086709288 ubox
8 31 0.045638280 ubox
8 41 0.036789591 ubox
8 44 0.004687601 ubox
8 49 0.019115320 ubox
9 26 0.700987513 ubox
9 28 0.063432719 ubox
9 30 0.038585272 ubox
9 32 0.042430629 ubox
9 48 0.018462674 ubox
9 62 0.004644051 ubox
10 25 0.993291256 ubox
10 31 0.046053091 ubox
10 40 0.018848039 ubox
10 47 0.007096522 ubox
10 49 0.019331581 ubox
11 24 0.993809403 ubox
11 30 0.046291869 ubox
11 39 0.018842882 ubox
11 48 0.019680859 ubox
11 62 0.005527269 ubox
12 23 0.976867811 ubox
12 29 0.046006499 ubox
12 38 0.014362131 ubox
12 47 0.019377792 ubox
13 24 0.003363556 ubox
13 26 0.012450672 ubox
13 28 0.043469591 ubox
14 21 0.982325373 ubox
14 22 0.130608425 ubox
14 23 0.011309289 ubox
14 25 0.019660083 ubox
14 38 0.007424003 ubox
14 41 0.004671438 ubox
14 44 0.023338000 ubox
15 20 0.984012416 ubox
15 21 0.139600058 ubox
15 22 0.019047036 ubox
15 37 0.010824782 ubox
15 38 0.004036515 ubox
15 40 0.006646152 ubox
15 43 0.023910530 ubox
16 20 0.137548727 ubox
16 21 0.019715499 ubox
16 23 0.020414093 ubox
16 37 0.005691578 ubox
16 42 0.023917761 ubox
17 22 0.019019640 ubox
17 23 0.004532254 ubox
17 38 0.010656522 ubox
17 41 0.023904337 ubox
18 37 0.013208747 ubox
18 40 0.023852537 ubox
20 27 0.012133118 ubox
20 34 0.033415793 ubox
21 26 0.012128081 ubox
21 33 0.033464716 ubox
21 34 0.077233494 ubox
22 32 0.024654184 ubox
22 33 0.080036659 ubox
23 32 0.085280254 ubox
24 31 0.089609213 ubox
24 52 0.003362478 ubox
25 30 0.089776392 ubox
25 51 0.003368048 ubox
26 38 0.003514081 ubox
26 43 0.027667879 ubox
26 50 0.003305051 ubox
27 37 0.003814211 ubox
27 42 0.027820212 ubox
27 49 0.003174381 ubox
28 41 0.027507789 ubox
29 62 0.008186668 ubox
30 37 0.013419978 ubox
30 40 0.049382755 ubox
31 36 0.013480431 ubox
31 39 0.049650320 ubox
31 54 0.003853093 ubox
31 62 0.020874837 ubox
32 38 0.049692113 ubox
32 44 0.005451788 ubox
32 53 0.004174894 ubox
32 61 0.011268341 ubox
33 37 0.048635463 ubox
33 43 0.005693220 ubox
33 52 0.004206062 ubox
34 42 0.005695278 ubox
35 41 0.005524048 ubox
35 50 0.004166898 ubox
36 49 0.004212620 ubox
36 61 0.966887160 ubox
37 48 0.004212809 ubox
37 60 0.997106210 ubox
37 63 0.010663966 ubox
38 59 0.993639717 ubox
38 62 0.010698248 ubox
39 58 0.995987651 ubox
39 61 0.008748120 ubox
40 57 0.998081274 ubox
40 60 0.008717216 ubox
41 56 0.997956005 ubox
41 59 0.008230869 ubox
42 55 0.998072017 ubox
43 54 0.997756557 ubox
43 55 0.007251417 ubox
43 57 0.008604121 ubox
44 54 0.010045210 ubox
44 56 0.008718964 ubox
45 54 0.004251408 ubox
45 55 0.008681958 ubox
45 56 0.003431185 ubox
46 54 0.008602010 ubox
46 55 0.003557315 ubox
47 54 0.003702133 ubox
48 53 0.017421554 ubox
48 61 0.004201939 ubox
49 56 0.003272624 ubox
49 60 0.008771330 ubox
49 63 0.018293735 ubox
50 55 0.003457829 ubox
50 59 0.011247393 ubox
50 62 0.029329062 ubox
51 58 0.013669812 ubox
51 61 0.038865882 ubox
52 57 0.013788005 ubox
52 60 0.039430657 ubox
52 63 0.006004310 ubox
53 59 0.038461327 ubox
53 62 0.006144721 ubox
54 58 0.017887339 ubox
54 61 0.005514544 ubox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
36 61 0.9500000 lbox
37 60 0.9500000 lbox
38 59 0.9500000 lbox
39 58 0.9500000 lbox
40 57 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
showpage
end
%%EOF
