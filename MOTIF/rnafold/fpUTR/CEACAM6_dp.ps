%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CEACAM6)
} def

/sequence { (\
GAGGCUCAGCACAGAAGGAGGAAGGACAGCAGGGCCAACAGUCACAGCAGCCCUGACCAGAGCAUUCCUGGAGCUCAAGCUCCUCUACAAAGAGGUGGACAGAGAAGACAGCAGAGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004360148 ubox
1 76 0.006194805 ubox
2 6 0.003797429 ubox
2 75 0.005867740 ubox
3 74 0.004207777 ubox
3 75 0.004391813 ubox
3 81 0.006937697 ubox
3 119 0.964888846 ubox
4 10 0.005132324 ubox
4 74 0.006396185 ubox
4 80 0.007493703 ubox
4 112 0.028143248 ubox
4 118 0.973098807 ubox
5 9 0.005105869 ubox
5 73 0.007624687 ubox
5 79 0.007598943 ubox
5 104 0.030139051 ubox
5 111 0.028148802 ubox
5 114 0.005612900 ubox
5 116 0.998074675 ubox
6 15 0.009605057 ubox
6 72 0.007608309 ubox
6 78 0.007363527 ubox
6 103 0.030300508 ubox
6 105 0.003878941 ubox
6 108 0.006627076 ubox
6 110 0.024430716 ubox
6 113 0.005204170 ubox
6 115 0.998324719 ubox
6 117 0.023647675 ubox
7 14 0.012338186 ubox
7 71 0.007499782 ubox
7 102 0.030301141 ubox
7 104 0.004595155 ubox
7 107 0.008511240 ubox
7 114 0.994739494 ubox
7 116 0.023806448 ubox
8 75 0.009817253 ubox
9 74 0.010441825 ubox
9 112 0.988974889 ubox
10 73 0.010493882 ubox
10 97 0.009260521 ubox
10 111 0.989361470 ubox
11 69 0.004077115 ubox
11 96 0.009662407 ubox
12 70 0.018176678 ubox
12 95 0.009667036 ubox
13 69 0.016437990 ubox
13 75 0.004522585 ubox
13 81 0.004146266 ubox
13 86 0.005292735 ubox
14 67 0.006385788 ubox
14 68 0.010126440 ubox
14 74 0.004990673 ubox
14 80 0.004450848 ubox
14 85 0.005886233 ubox
15 66 0.006609355 ubox
15 84 0.005542081 ubox
16 65 0.006473362 ubox
16 69 0.904395640 ubox
16 84 0.014026625 ubox
17 67 0.009706540 ubox
17 68 0.932958986 ubox
17 69 0.005754982 ubox
17 83 0.019014877 ubox
17 86 0.005225688 ubox
18 66 0.009913142 ubox
18 67 0.933119522 ubox
18 68 0.005312354 ubox
18 76 0.008567503 ubox
18 82 0.019038585 ubox
18 85 0.005681644 ubox
19 65 0.018249887 ubox
19 66 0.931208160 ubox
19 69 0.343982737 ubox
19 75 0.008582675 ubox
19 81 0.018996478 ubox
19 84 0.005868583 ubox
20 58 0.010017276 ubox
20 65 0.907429224 ubox
20 66 0.005988143 ubox
20 67 0.005318281 ubox
20 68 0.353235524 ubox
20 74 0.008570707 ubox
20 80 0.018905736 ubox
20 83 0.006021664 ubox
21 57 0.010024795 ubox
21 65 0.012613694 ubox
21 66 0.006089052 ubox
21 67 0.353287692 ubox
21 82 0.006012796 ubox
22 65 0.009082527 ubox
22 66 0.352750055 ubox
22 81 0.004985467 ubox
23 54 0.005317660 ubox
23 65 0.347057212 ubox
23 66 0.007898961 ubox
23 69 0.043567691 ubox
23 75 0.003340537 ubox
24 53 0.005363141 ubox
24 58 0.158664038 ubox
24 65 0.010896643 ubox
24 68 0.044910756 ubox
24 74 0.003526300 ubox
24 75 0.004341079 ubox
24 76 0.005619682 ubox
25 52 0.005351606 ubox
25 57 0.157757054 ubox
25 67 0.044914367 ubox
25 74 0.004752583 ubox
25 75 0.004403512 ubox
25 76 0.008797303 ubox
26 66 0.044210363 ubox
26 75 0.007996153 ubox
27 55 0.024988033 ubox
28 54 0.018972987 ubox
28 75 0.003452252 ubox
29 48 0.005429256 ubox
29 53 0.009976916 ubox
29 63 0.035077032 ubox
29 74 0.004336827 ubox
30 47 0.005427322 ubox
30 55 0.997930203 ubox
30 62 0.031173648 ubox
30 73 0.003818285 ubox
31 54 0.999443555 ubox
32 53 0.999917236 ubox
33 43 0.005560505 ubox
33 52 0.999965697 ubox
34 42 0.005707298 ubox
34 48 0.007138417 ubox
34 51 0.999932346 ubox
35 41 0.006559988 ubox
35 47 0.009131392 ubox
35 50 0.997990108 ubox
41 48 0.319339192 ubox
42 47 0.304561883 ubox
57 71 0.040638799 ubox
58 70 0.040983585 ubox
59 69 0.041194986 ubox
60 67 0.010630520 ubox
60 68 0.040306725 ubox
60 76 0.017482401 ubox
61 66 0.012671166 ubox
61 69 0.003975110 ubox
61 75 0.017506064 ubox
62 68 0.004067010 ubox
62 74 0.017514293 ubox
63 73 0.017490866 ubox
65 71 0.007454742 ubox
65 72 0.007015984 ubox
65 106 0.003587839 ubox
66 70 0.005560889 ubox
66 71 0.006502634 ubox
66 72 0.004386389 ubox
66 105 0.004123860 ubox
67 71 0.004620264 ubox
67 104 0.004171671 ubox
68 102 0.004428734 ubox
69 101 0.004596310 ubox
69 110 0.023267312 ubox
70 76 0.003187023 ubox
70 83 0.992338454 ubox
70 84 0.003507452 ubox
70 100 0.003856908 ubox
70 109 0.045298629 ubox
71 82 0.995087238 ubox
71 83 0.003681439 ubox
72 81 0.995185168 ubox
73 80 0.995326446 ubox
73 112 0.010351263 ubox
74 79 0.992098496 ubox
74 102 0.003296032 ubox
74 104 0.090099711 ubox
74 111 0.010358062 ubox
75 101 0.003178016 ubox
75 103 0.090424913 ubox
75 110 0.009914945 ubox
76 102 0.090308212 ubox
76 104 0.003211699 ubox
76 107 0.003573029 ubox
79 112 0.004984396 ubox
80 98 0.085775347 ubox
80 104 0.018167605 ubox
80 111 0.004984280 ubox
81 97 0.081085257 ubox
81 99 0.003240963 ubox
81 103 0.018281530 ubox
81 110 0.004841346 ubox
82 95 0.094488784 ubox
82 98 0.003550129 ubox
82 102 0.018247312 ubox
83 94 0.101416134 ubox
83 97 0.003645986 ubox
83 102 0.014386817 ubox
83 104 0.021308843 ubox
83 107 0.003310828 ubox
84 93 0.112924854 ubox
84 95 0.020682155 ubox
84 98 0.012947010 ubox
84 99 0.916990367 ubox
84 101 0.014558779 ubox
84 103 0.034529072 ubox
84 105 0.014977106 ubox
84 106 0.003443987 ubox
84 108 0.009276603 ubox
85 92 0.114042585 ubox
85 94 0.027725569 ubox
85 95 0.005572595 ubox
85 97 0.015356844 ubox
85 98 0.991164484 ubox
85 102 0.034817895 ubox
85 104 0.015399613 ubox
85 107 0.009838505 ubox
86 91 0.108589172 ubox
86 93 0.026931123 ubox
86 94 0.005533997 ubox
86 97 0.991220108 ubox
86 101 0.032026359 ubox
86 103 0.014336298 ubox
86 106 0.009256908 ubox
87 96 0.991549520 ubox
88 95 0.990538060 ubox
88 97 0.029830357 ubox
89 96 0.027342631 ubox
95 109 0.033167420 ubox
95 112 0.004065727 ubox
96 108 0.033063657 ubox
96 110 0.031628054 ubox
96 111 0.003210552 ubox
97 109 0.035267883 ubox
97 112 0.003192357 ubox
3 119 0.9500000 lbox
4 118 0.9500000 lbox
5 116 0.9500000 lbox
6 115 0.9500000 lbox
7 114 0.9500000 lbox
9 112 0.9500000 lbox
10 111 0.9500000 lbox
16 69 0.9500000 lbox
17 68 0.9500000 lbox
18 67 0.9500000 lbox
19 66 0.9500000 lbox
20 65 0.9500000 lbox
30 55 0.9500000 lbox
31 54 0.9500000 lbox
32 53 0.9500000 lbox
33 52 0.9500000 lbox
34 51 0.9500000 lbox
35 50 0.9500000 lbox
70 83 0.9500000 lbox
71 82 0.9500000 lbox
72 81 0.9500000 lbox
73 80 0.9500000 lbox
74 79 0.9500000 lbox
84 99 0.9500000 lbox
85 98 0.9500000 lbox
86 97 0.9500000 lbox
87 96 0.9500000 lbox
88 95 0.9500000 lbox
showpage
end
%%EOF
