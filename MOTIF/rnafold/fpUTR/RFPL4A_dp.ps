%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RFPL4A)
} def

/sequence { (\
AGCUGGAGGCCAGGGGAGAAACUCCAGAAGGAGAGACAUUUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 40 0.004210948 ubox
1 41 0.008420298 ubox
2 10 0.134427462 ubox
2 39 0.005402794 ubox
2 40 0.008855631 ubox
2 43 0.036783015 ubox
3 9 0.134735353 ubox
3 13 0.711830417 ubox
3 14 0.020943333 ubox
3 15 0.006197638 ubox
3 16 0.004386927 ubox
3 18 0.004058885 ubox
3 27 0.659742305 ubox
3 30 0.006939306 ubox
3 31 0.004609304 ubox
3 33 0.004235202 ubox
3 35 0.012563471 ubox
3 42 0.035270650 ubox
4 8 0.121385009 ubox
4 12 0.720866239 ubox
4 13 0.012895008 ubox
4 14 0.005001024 ubox
4 15 0.003759165 ubox
4 17 0.003892091 ubox
4 26 0.662697343 ubox
4 29 0.005031384 ubox
4 30 0.003352407 ubox
4 32 0.003895953 ubox
4 34 0.012452975 ubox
4 38 0.032772476 ubox
5 11 0.722578962 ubox
5 25 0.663386326 ubox
5 37 0.034228494 ubox
5 40 0.003828187 ubox
5 41 0.005335312 ubox
5 44 0.006021138 ubox
6 10 0.710910964 ubox
6 24 0.663387966 ubox
6 39 0.003803824 ubox
6 40 0.006654565 ubox
6 43 0.006063300 ubox
7 23 0.663164923 ubox
7 39 0.006638846 ubox
8 22 0.662470829 ubox
8 23 0.006085444 ubox
8 44 0.107850270 ubox
9 22 0.013984464 ubox
9 43 0.108776580 ubox
10 16 0.112480892 ubox
10 31 0.043756654 ubox
10 42 0.091340544 ubox
11 15 0.112473473 ubox
11 30 0.043925338 ubox
11 42 0.061485866 ubox
12 23 0.007146526 ubox
12 40 0.032852065 ubox
12 41 0.084853367 ubox
13 22 0.011518980 ubox
13 23 0.003560375 ubox
13 24 0.005710796 ubox
13 25 0.029353249 ubox
13 39 0.032841133 ubox
13 40 0.083995427 ubox
13 41 0.026337506 ubox
13 44 0.160615379 ubox
14 22 0.007061985 ubox
14 23 0.010808013 ubox
14 24 0.030452195 ubox
14 25 0.029633825 ubox
14 39 0.081906377 ubox
14 40 0.039103667 ubox
14 41 0.032763811 ubox
14 43 0.213298695 ubox
14 44 0.602654840 ubox
15 22 0.014856215 ubox
15 23 0.030192565 ubox
15 24 0.028547876 ubox
15 25 0.178784850 ubox
15 39 0.041155347 ubox
15 40 0.036121763 ubox
15 41 0.078793978 ubox
15 43 0.609518181 ubox
15 44 0.123474642 ubox
16 22 0.030714520 ubox
16 23 0.022908940 ubox
16 24 0.179190342 ubox
16 39 0.033815430 ubox
16 40 0.099766453 ubox
16 41 0.212834307 ubox
16 43 0.124708559 ubox
17 23 0.179103212 ubox
17 39 0.103469739 ubox
17 40 0.212446651 ubox
17 41 0.597956837 ubox
18 22 0.175208425 ubox
18 39 0.189077782 ubox
18 40 0.596420432 ubox
18 41 0.086061727 ubox
19 39 0.575551051 ubox
19 40 0.099198513 ubox
19 41 0.047914014 ubox
20 39 0.095048284 ubox
20 40 0.051341039 ubox
20 41 0.009224286 ubox
21 39 0.053000468 ubox
21 40 0.010355778 ubox
22 33 0.714583553 ubox
22 35 0.104428655 ubox
23 32 0.717661531 ubox
23 34 0.101532381 ubox
23 36 0.005251064 ubox
24 31 0.718266200 ubox
24 33 0.099607290 ubox
24 35 0.005216215 ubox
25 30 0.717372736 ubox
25 42 0.003623395 ubox
26 41 0.006530906 ubox
27 40 0.007136783 ubox
27 41 0.012385048 ubox
28 39 0.007633871 ubox
28 40 0.021502697 ubox
28 41 0.075465278 ubox
29 39 0.022505256 ubox
29 40 0.078756643 ubox
29 41 0.019166358 ubox
30 39 0.078941065 ubox
30 40 0.018831323 ubox
30 41 0.069302971 ubox
30 44 0.456646815 ubox
31 39 0.014114647 ubox
31 40 0.088095833 ubox
31 41 0.032238431 ubox
31 43 0.459661609 ubox
32 39 0.090028604 ubox
32 40 0.034640516 ubox
32 41 0.376905942 ubox
33 39 0.027274985 ubox
33 40 0.381082929 ubox
33 41 0.216859868 ubox
34 39 0.372713809 ubox
34 40 0.248394640 ubox
34 41 0.064389555 ubox
35 39 0.169274219 ubox
35 40 0.054158808 ubox
35 41 0.025534114 ubox
36 40 0.023222150 ubox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
6 10 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
22 33 0.9500000 lbox
23 32 0.9500000 lbox
24 31 0.9500000 lbox
25 30 0.9500000 lbox
showpage
end
%%EOF
