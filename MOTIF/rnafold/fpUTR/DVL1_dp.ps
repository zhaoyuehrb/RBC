%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DVL1)
} def

/sequence { (\
CCCCGGGCCGGGCCCUGAGCGCGCGGGCUCCGCGCCGCCGCCGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007668509 ubox
1 11 0.004848139 ubox
1 12 0.043856509 ubox
1 27 0.020654462 ubox
2 6 0.008977348 ubox
2 10 0.004928672 ubox
2 11 0.044449997 ubox
2 12 0.166743556 ubox
2 26 0.020971900 ubox
2 27 0.010230299 ubox
3 10 0.043983491 ubox
3 11 0.169229346 ubox
3 12 0.010750237 ubox
3 25 0.020972516 ubox
3 26 0.010334394 ubox
4 10 0.169397829 ubox
4 11 0.010899751 ubox
4 17 0.238264560 ubox
4 23 0.021197804 ubox
4 25 0.010338517 ubox
4 32 0.003752876 ubox
4 37 0.043455589 ubox
4 40 0.023896926 ubox
4 43 0.012838439 ubox
4 45 0.036467171 ubox
5 9 0.158579332 ubox
5 14 0.012921481 ubox
5 15 0.658850943 ubox
5 16 0.107619005 ubox
5 22 0.021247445 ubox
5 24 0.010294202 ubox
5 29 0.007543962 ubox
5 30 0.011625961 ubox
5 31 0.008894342 ubox
5 36 0.048125812 ubox
5 39 0.024578248 ubox
5 42 0.012500326 ubox
5 44 0.037273383 ubox
5 47 0.099448027 ubox
6 13 0.012872463 ubox
6 14 0.660597073 ubox
6 15 0.101573856 ubox
6 28 0.008334358 ubox
6 29 0.011572800 ubox
6 30 0.008851694 ubox
6 35 0.047276491 ubox
6 36 0.102946734 ubox
6 38 0.017575849 ubox
6 39 0.008553800 ubox
6 41 0.010039931 ubox
6 42 0.040341291 ubox
6 46 0.091588636 ubox
6 47 0.695464771 ubox
7 13 0.661559853 ubox
7 14 0.094373325 ubox
7 20 0.022140625 ubox
7 22 0.009744426 ubox
7 28 0.014245696 ubox
7 33 0.039224750 ubox
7 35 0.105572001 ubox
7 38 0.009014309 ubox
7 41 0.040455362 ubox
7 44 0.057061518 ubox
7 46 0.704669950 ubox
8 12 0.657722615 ubox
8 19 0.022143932 ubox
8 21 0.009284683 ubox
8 26 0.011905056 ubox
8 27 0.011815962 ubox
8 32 0.038065826 ubox
8 34 0.105979561 ubox
8 37 0.007631524 ubox
8 40 0.037548955 ubox
8 43 0.053702555 ubox
8 45 0.695289676 ubox
9 17 0.024124687 ubox
9 23 0.003386738 ubox
9 25 0.014360985 ubox
9 26 0.008615649 ubox
9 32 0.109621328 ubox
9 37 0.023361688 ubox
9 40 0.015678577 ubox
9 43 0.319726291 ubox
9 45 0.123983317 ubox
10 16 0.024004386 ubox
10 20 0.004092389 ubox
10 22 0.004276341 ubox
10 24 0.016440548 ubox
10 30 0.039014084 ubox
10 31 0.109766354 ubox
10 36 0.024267835 ubox
10 39 0.021279711 ubox
10 42 0.296243573 ubox
10 44 0.172470492 ubox
10 47 0.011786377 ubox
11 15 0.023501106 ubox
11 29 0.040277690 ubox
11 30 0.109352948 ubox
11 35 0.024051904 ubox
11 36 0.013835092 ubox
11 38 0.020283463 ubox
11 39 0.022974916 ubox
11 41 0.269551608 ubox
11 42 0.646193563 ubox
11 46 0.011850682 ubox
11 47 0.012367858 ubox
12 20 0.027299742 ubox
12 22 0.016609551 ubox
12 28 0.114501925 ubox
12 29 0.020846138 ubox
12 33 0.023739707 ubox
12 35 0.014308962 ubox
12 38 0.025548915 ubox
12 41 0.657736140 ubox
12 44 0.026055517 ubox
12 46 0.015166914 ubox
13 19 0.027330554 ubox
13 21 0.016594218 ubox
13 27 0.114931245 ubox
13 32 0.023746610 ubox
13 34 0.014442975 ubox
13 37 0.025785072 ubox
13 40 0.664116352 ubox
13 43 0.026536334 ubox
13 45 0.015776712 ubox
14 26 0.114721478 ubox
14 27 0.019564567 ubox
15 25 0.114453938 ubox
15 26 0.020762607 ubox
16 23 0.086008869 ubox
16 25 0.021865963 ubox
16 37 0.062726204 ubox
16 40 0.238532723 ubox
16 43 0.069921805 ubox
16 45 0.016335073 ubox
17 22 0.086467183 ubox
17 24 0.046278501 ubox
17 30 0.031733982 ubox
17 36 0.070186744 ubox
17 39 0.626814925 ubox
17 42 0.094640639 ubox
17 44 0.021692403 ubox
18 29 0.031830864 ubox
19 28 0.031839773 ubox
19 35 0.042281298 ubox
19 38 0.713759011 ubox
19 41 0.116250652 ubox
19 44 0.093864927 ubox
19 46 0.657257465 ubox
20 27 0.031833019 ubox
20 34 0.042136858 ubox
20 37 0.713867730 ubox
20 40 0.116449948 ubox
20 43 0.093970150 ubox
20 45 0.658795959 ubox
21 33 0.041377396 ubox
21 35 0.514526498 ubox
21 36 0.504930535 ubox
21 39 0.115799194 ubox
21 41 0.053989576 ubox
21 42 0.077740702 ubox
21 44 0.658751647 ubox
21 46 0.079837114 ubox
22 32 0.041219182 ubox
22 34 0.720754606 ubox
22 40 0.075460107 ubox
22 43 0.658673693 ubox
22 45 0.079997470 ubox
23 31 0.039683687 ubox
23 33 0.721000796 ubox
23 35 0.016632068 ubox
23 38 0.151762722 ubox
23 39 0.060457506 ubox
23 41 0.296994925 ubox
23 42 0.583711924 ubox
23 44 0.080007621 ubox
23 46 0.003473771 ubox
24 32 0.721012452 ubox
24 34 0.016677216 ubox
24 37 0.162969376 ubox
24 40 0.416486608 ubox
24 43 0.079980966 ubox
24 45 0.003489670 ubox
25 31 0.720912045 ubox
25 33 0.016586236 ubox
25 36 0.161493262 ubox
25 39 0.395617774 ubox
25 42 0.075509875 ubox
25 44 0.003477115 ubox
26 30 0.709284695 ubox
26 35 0.159723092 ubox
26 36 0.242377660 ubox
26 38 0.297032942 ubox
26 39 0.519547684 ubox
26 41 0.056748243 ubox
26 42 0.025736133 ubox
27 33 0.148897081 ubox
27 35 0.336459708 ubox
27 38 0.534937793 ubox
27 41 0.035882985 ubox
28 32 0.147926071 ubox
28 34 0.337734076 ubox
28 37 0.548175927 ubox
28 40 0.043623323 ubox
31 37 0.042986988 ubox
31 40 0.006930320 ubox
31 45 0.013278739 ubox
32 36 0.042783745 ubox
32 38 0.030445888 ubox
32 39 0.006538052 ubox
32 41 0.004862397 ubox
32 44 0.013976600 ubox
32 46 0.029922190 ubox
33 37 0.030391950 ubox
33 40 0.005635191 ubox
33 43 0.013978130 ubox
33 45 0.030052660 ubox
34 39 0.005458725 ubox
34 41 0.011498900 ubox
34 42 0.010816195 ubox
34 44 0.030073024 ubox
34 46 0.008413558 ubox
35 40 0.014461048 ubox
35 43 0.028606396 ubox
35 45 0.006533010 ubox
36 43 0.010254944 ubox
36 45 0.047103355 ubox
37 42 0.013506820 ubox
37 44 0.082983591 ubox
37 46 0.058560823 ubox
38 43 0.082852164 ubox
38 45 0.058092126 ubox
39 45 0.016269022 ubox
40 44 0.017542722 ubox
40 46 0.049437869 ubox
41 45 0.049215705 ubox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
8 12 0.9500000 lbox
19 46 0.9500000 lbox
20 45 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
showpage
end
%%EOF
