%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYBBP1A)
} def

/sequence { (\
CUGACCUGGAAGCGGCUGGGGCCGGAGCACACGUGUUUCGUGUUUCGGUGAGUGUGGCGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.111833538 ubox
1 12 0.013571825 ubox
1 19 0.006604304 ubox
1 20 0.009277048 ubox
1 25 0.005067580 ubox
1 52 0.023318548 ubox
1 57 0.006242582 ubox
1 60 0.609836110 ubox
1 62 0.064506050 ubox
2 8 0.109743952 ubox
2 11 0.036306779 ubox
2 18 0.006562249 ubox
2 19 0.009245082 ubox
2 24 0.005096320 ubox
2 51 0.023542001 ubox
2 56 0.006152032 ubox
2 59 0.613126310 ubox
2 61 0.063906060 ubox
3 7 0.051390661 ubox
3 13 0.003609844 ubox
3 17 0.005185889 ubox
3 23 0.005073183 ubox
3 55 0.003766668 ubox
3 58 0.614063687 ubox
4 49 0.022623899 ubox
4 55 0.008076043 ubox
5 15 0.008311711 ubox
5 19 0.005327630 ubox
5 20 0.109789361 ubox
5 48 0.022571128 ubox
5 54 0.008346305 ubox
5 57 0.612556953 ubox
5 60 0.278757375 ubox
6 12 0.004637094 ubox
6 14 0.008979866 ubox
6 15 0.014323006 ubox
6 18 0.005282967 ubox
6 19 0.110038440 ubox
6 47 0.022474758 ubox
6 52 0.005515539 ubox
6 56 0.612185745 ubox
6 57 0.037422310 ubox
6 59 0.279652096 ubox
6 60 0.317148116 ubox
6 62 0.278561645 ubox
7 11 0.009340894 ubox
7 14 0.027504256 ubox
7 18 0.109634131 ubox
7 51 0.005229338 ubox
7 54 0.061334642 ubox
7 56 0.038757701 ubox
7 59 0.317619376 ubox
7 61 0.283102636 ubox
8 13 0.032919318 ubox
8 17 0.109629399 ubox
8 46 0.007782996 ubox
8 53 0.059775721 ubox
8 55 0.088382336 ubox
8 58 0.298238409 ubox
9 16 0.109659927 ubox
9 45 0.007484366 ubox
9 46 0.010780869 ubox
10 44 0.007127731 ubox
10 45 0.010955729 ubox
11 43 0.004098043 ubox
11 44 0.010911415 ubox
12 43 0.010633422 ubox
12 49 0.007498508 ubox
12 53 0.570730109 ubox
12 55 0.182560887 ubox
12 58 0.713820554 ubox
13 24 0.020193849 ubox
13 42 0.010615540 ubox
13 48 0.006285320 ubox
13 50 0.173213859 ubox
13 52 0.572238284 ubox
13 54 0.183247656 ubox
13 56 0.008935759 ubox
13 57 0.715522194 ubox
13 59 0.014638801 ubox
14 23 0.021842623 ubox
14 41 0.007094233 ubox
14 49 0.122680463 ubox
14 53 0.160470172 ubox
14 55 0.008424263 ubox
14 58 0.012037289 ubox
15 22 0.021949208 ubox
15 41 0.003749679 ubox
15 49 0.653911830 ubox
15 53 0.096623448 ubox
15 55 0.714324596 ubox
15 58 0.035345520 ubox
16 21 0.021880695 ubox
16 40 0.005281277 ubox
16 48 0.674096560 ubox
16 52 0.126629983 ubox
16 54 0.714994863 ubox
16 57 0.036551137 ubox
16 60 0.006341569 ubox
17 40 0.005508439 ubox
17 47 0.673751871 ubox
17 50 0.007284371 ubox
17 51 0.120241124 ubox
17 56 0.036190446 ubox
17 59 0.006364018 ubox
18 39 0.008172043 ubox
18 46 0.674141101 ubox
18 53 0.039109664 ubox
18 55 0.033056856 ubox
18 58 0.006365202 ubox
19 38 0.008178510 ubox
19 45 0.672114485 ubox
20 37 0.008180946 ubox
20 43 0.003198662 ubox
20 44 0.670923358 ubox
21 36 0.008221110 ubox
21 43 0.673861915 ubox
21 49 0.734155338 ubox
21 58 0.006283768 ubox
22 35 0.008225655 ubox
22 42 0.674166188 ubox
22 48 0.737944471 ubox
22 57 0.006252174 ubox
22 60 0.008103649 ubox
23 33 0.008222089 ubox
23 40 0.673845352 ubox
23 47 0.737945117 ubox
23 56 0.006192984 ubox
23 59 0.008129560 ubox
24 32 0.008221923 ubox
24 39 0.674158894 ubox
24 46 0.737186609 ubox
24 55 0.005684379 ubox
24 58 0.008021331 ubox
25 38 0.673660810 ubox
25 39 0.012000726 ubox
25 45 0.735703140 ubox
25 46 0.036687305 ubox
26 37 0.673469868 ubox
26 38 0.010660122 ubox
26 44 0.731550751 ubox
26 45 0.048407611 ubox
27 34 0.009903215 ubox
27 36 0.673834007 ubox
27 37 0.008667839 ubox
27 43 0.701963716 ubox
27 44 0.049316567 ubox
27 55 0.003481962 ubox
27 58 0.003978644 ubox
28 33 0.010565893 ubox
28 35 0.674006850 ubox
28 42 0.697511432 ubox
28 54 0.003504301 ubox
28 56 0.008217789 ubox
28 57 0.003393269 ubox
29 34 0.560844900 ubox
29 36 0.011570247 ubox
29 41 0.686810321 ubox
29 43 0.218163812 ubox
29 53 0.003267736 ubox
29 55 0.008570916 ubox
30 35 0.013363063 ubox
30 40 0.678128702 ubox
30 42 0.241656406 ubox
30 54 0.008605708 ubox
31 41 0.266614446 ubox
31 53 0.008604232 ubox
32 40 0.289126389 ubox
32 52 0.008600249 ubox
33 39 0.316705068 ubox
34 40 0.005953120 ubox
34 50 0.004417956 ubox
35 39 0.024629451 ubox
38 48 0.008656645 ubox
39 47 0.009132177 ubox
40 46 0.009093827 ubox
44 61 0.004585063 ubox
45 60 0.004830756 ubox
45 61 0.003872845 ubox
46 59 0.004949734 ubox
46 60 0.003989835 ubox
47 58 0.004944317 ubox
48 58 0.004292233 ubox
49 56 0.004442603 ubox
49 57 0.004361949 ubox
50 55 0.003838297 ubox
50 58 0.007478370 ubox
52 58 0.020349769 ubox
53 57 0.019085477 ubox
53 59 0.005105526 ubox
54 58 0.006460589 ubox
12 58 0.9500000 lbox
13 57 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
showpage
end
%%EOF
