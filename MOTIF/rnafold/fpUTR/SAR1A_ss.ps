%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGGGGUGUGACGUACAUCCGGCGAGUAGCUGGCGGUCCCGGGUGCUGCUGGUUAGUGUGCUCUGAGGGAGGGUCCGAGCCAGCCGCUGUUUUGCCGGAGGAGCCCCUCAGGCCGGCUGCUUCCAACCUUCAAUUUGUAAAAAAACCAGAAAACCUCAGGAUCCACAAAGUAUCAUCAAAUGAGGUAGUAAGCAUUAAUA\
) } def
/len { sequence length } bind def

/coor [
[82.61961365 294.40994263]
[67.37278748 293.70501709]
[53.94578934 286.44702148]
[45.00457382 274.07699585]
[42.32442093 259.05105591]
[46.43747711 244.35255432]
[56.52709198 232.89993286]
[70.58996582 226.96711731]
[71.28271484 211.98312378]
[71.97546387 196.99913025]
[72.66822052 182.01513672]
[73.36096954 167.03114319]
[64.46846771 151.90476990]
[74.52359009 136.48136902]
[74.98551941 121.48848724]
[62.87747574 112.63437653]
[48.73015976 117.61969757]
[34.58284378 122.60501862]
[20.43552589 127.59033966]
[6.28820992 132.57566833]
[-7.85910654 137.56098938]
[-21.88749886 142.87174988]
[-35.78947830 148.50512695]
[-49.69145966 154.13850403]
[-63.59344482 159.77186584]
[-77.49542236 165.40524292]
[-84.27823639 171.53187561]
[-91.65512085 171.01651001]
[-105.64220428 176.43513489]
[-119.62928772 181.85375977]
[-133.61636353 187.27238464]
[-143.68960571 199.47239685]
[-158.35247803 196.85520935]
[-172.33955383 202.27383423]
[-186.32664490 207.69245911]
[-200.31372070 213.11108398]
[-208.08312988 227.14732361]
[-223.92465210 229.68223572]
[-235.68603516 218.77125549]
[-234.34494019 202.78434753]
[-220.93016052 193.98530579]
[-205.73234558 199.12399292]
[-191.74526978 193.70536804]
[-177.75817871 188.28674316]
[-163.77110291 182.86811829]
[-154.69830322 171.05567932]
[-139.03498840 173.28530884]
[-125.04791260 167.86668396]
[-111.06082916 162.44805908]
[-97.07374573 157.02943420]
[-83.12879944 151.50326538]
[-69.22681427 145.86988831]
[-55.32483673 140.23651123]
[-41.42285538 134.60314941]
[-27.52087212 128.96977234]
[-25.81677246 125.87695312]
[-22.52713394 123.45792389]
[-17.98593330 122.45017242]
[-12.84442902 123.41366577]
[1.30288780 118.42834473]
[15.45020390 113.44302368]
[29.59752083 108.45770264]
[43.74483871 103.47238159]
[57.89215469 98.48706055]
[98.44862366 80.12733459]
[103.86724854 66.14025116]
[109.28587341 52.15317154]
[114.70449829 38.16608810]
[120.12312317 24.17900276]
[125.54174805 10.19192028]
[130.96037292 -3.79516315]
[133.94334412 -18.49556732]
[134.40527344 -33.48845291]
[134.86720276 -48.48133850]
[135.32913208 -63.47422409]
[135.79104614 -78.46710968]
[136.25297546 -93.45999908]
[125.70643616 -104.92333984]
[126.38847351 -120.12167358]
[137.38201904 -130.10554504]
[137.84394836 -145.09843445]
[138.30586243 -160.09132385]
[130.99720764 -174.12321472]
[139.12278748 -186.60618591]
[139.58470154 -201.59906006]
[140.04663086 -216.59194946]
[140.50856018 -231.58483887]
[140.97048950 -246.57772827]
[141.43241882 -261.57061768]
[130.53570557 -251.26226807]
[115.57057190 -250.24015808]
[103.37349701 -258.97122192]
[99.51644897 -273.46682739]
[105.76143646 -287.10504150]
[119.25556946 -293.65545654]
[133.83435059 -290.12573242]
[142.83811951 -278.12725830]
[144.91046143 -292.98339844]
[146.98280334 -307.83956909]
[141.22628784 -322.57635498]
[150.64775085 -334.11264038]
[152.72009277 -348.96878052]
[154.79243469 -363.82495117]
[156.86477661 -378.68109131]
[150.20782471 -393.66833496]
[160.07611084 -406.76599121]
[176.31799316 -404.50033569]
[182.22521973 -389.20208740]
[171.72093201 -376.60876465]
[169.64859009 -361.75259399]
[167.57624817 -346.89642334]
[165.50390625 -332.04028320]
[171.40864563 -318.36608887]
[161.83895874 -305.76721191]
[159.76661682 -290.91107178]
[157.69427490 -276.05490112]
[156.42529297 -261.10867310]
[155.96337891 -246.11579895]
[155.50144958 -231.12290955]
[155.03952026 -216.13002014]
[154.57759094 -201.13714600]
[154.11566162 -186.14425659]
[161.45736694 -173.18475342]
[153.29875183 -159.62939453]
[152.83682251 -144.63650513]
[152.37490845 -129.64361572]
[162.73297119 -119.00191498]
[162.47808838 -103.79041290]
[151.24586487 -92.99806976]
[150.78393555 -78.00518799]
[150.32200623 -63.01229858]
[149.86009216 -48.01941299]
[149.39816284 -33.02652740]
[148.93623352 -18.03364182]
[154.77934265 -13.33171272]
[166.46554565 -3.92785549]
[172.30865479 0.77407312]
[186.85560608 -2.88463259]
[201.40255737 -6.54333830]
[215.94950867 -10.20204449]
[220.77511597 -24.85527420]
[232.77117920 -34.55568314]
[248.10981750 -36.20790863]
[261.89651489 -29.28472710]
[269.73199463 -15.99530220]
[269.11596680 -0.58024263]
[260.24502563 12.04156399]
[245.94985962 17.84254456]
[230.79197693 14.97162628]
[219.60821533 4.34490967]
[205.06126404 8.00361538]
[190.51431274 11.66232109]
[175.96736145 15.32102680]
[165.79464722 15.10918617]
[156.90562439 12.41893768]
[149.82617188 7.72991753]
[144.94746399 1.62346184]
[139.52883911 15.61054516]
[134.11021423 29.59762955]
[128.69158936 43.58471298]
[123.27295685 57.57179642]
[117.85433197 71.55887604]
[112.43570709 85.54595947]
[119.34283447 72.23087311]
[131.80319214 63.87985611]
[146.74430847 62.55210114]
[160.48202515 68.57501221]
[169.62887573 80.46344757]
[171.92944336 95.28598022]
[166.81646729 109.38765717]
[155.55068970 119.29131317]
[140.91003418 122.55488586]
[126.50456238 118.37365723]
[115.88702393 107.77968597]
[125.29087830 119.46589661]
[134.69473267 131.15209961]
[144.09858704 142.83831787]
[151.92127991 147.56565857]
[153.55561829 154.77766418]
[162.77839661 166.60729980]
[178.17204285 172.26130676]
[180.70536804 188.46359253]
[167.77230835 198.54664612]
[152.67727661 192.13787842]
[150.94876099 175.83007812]
[141.72598267 164.00044250]
[132.41238403 152.24217224]
[123.00852966 140.55595398]
[113.60466766 128.86975098]
[104.20081329 117.18354034]
[89.97840118 121.95041656]
[89.51647949 136.94329834]
[97.76866150 146.86088562]
[97.07202148 159.34237671]
[88.34496307 167.72389221]
[87.65221405 182.70788574]
[86.95946503 197.69187927]
[86.26670837 212.67587280]
[85.57395935 227.65986633]
[99.02942657 234.86494446]
[108.01928711 247.19966125]
[110.75859070 262.21493530]
[106.70345306 276.92950439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[14 192]
[15 191]
[16 64]
[17 63]
[18 62]
[19 61]
[20 60]
[21 59]
[22 55]
[23 54]
[24 53]
[25 52]
[26 51]
[28 50]
[29 49]
[30 48]
[31 47]
[33 45]
[34 44]
[35 43]
[36 42]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[80 126]
[81 125]
[82 124]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[97 116]
[98 115]
[99 114]
[101 112]
[102 111]
[103 110]
[104 109]
[137 153]
[138 152]
[139 151]
[140 150]
[174 190]
[175 189]
[176 188]
[177 187]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
