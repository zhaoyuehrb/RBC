%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCUGCCCUGGAGCGCGGUCGGGAGUAAAAUCGCAGGAGUGGGAGGGUAGCGAGCCAGCUGGAUUCCGAGCCGCGGAGCGCGCUGGCUUUGCUCCGCCUGAUGACUCCAGAGCGCGGGUCCAAGCGCCGCCCAUGCAGCACCCCUGAGCUCCGGGGAAGGAGAGUUAAUGAAAAAACACUUAACCGUCUCCGCUGCGGAGAGUC\
) } def
/len { sequence length } bind def

/coor [
[310.63128662 426.61154175]
[316.23965454 420.35351562]
[307.49670410 408.16494751]
[298.75375366 395.97640991]
[290.01080322 383.78784180]
[281.26788330 371.59930420]
[267.56250000 365.76727295]
[265.80599976 350.04388428]
[257.06304932 337.85531616]
[248.32009888 325.66677856]
[239.57716370 313.47821045]
[230.83421326 301.28967285]
[222.09126282 289.10110474]
[213.34831238 276.91253662]
[204.60536194 264.72399902]
[195.86242676 252.53544617]
[182.15705872 246.70343018]
[180.40055847 230.98002625]
[171.65760803 218.79147339]
[162.91465759 206.60292053]
[158.42839050 204.95678711]
[154.92994690 200.47317505]
[154.09796143 193.90914917]
[145.72895813 181.46086121]
[137.35995483 169.01258850]
[123.83789825 162.76731873]
[122.55937958 146.99784851]
[114.19036865 134.54957581]
[105.44661713 136.95095825]
[96.38185120 137.17456055]
[87.53032684 135.20719910]
[79.41373444 131.16481018]
[72.51044464 125.28564453]
[67.22731781 117.91621399]
[63.87572479 109.49084473]
[62.65320206 100.50611115]
[63.63180542 91.49154663]
[66.75385284 82.97845459]
[55.04668427 73.60070038]
[43.33951569 64.22294617]
[31.63234901 54.84519958]
[19.92518044 45.46744537]
[5.63808966 50.92879105]
[-9.36530304 48.52150726]
[-21.07151604 38.99098206]
[-26.39991188 24.97441292]
[-24.01307487 10.27173996]
[-35.72024155 0.89398861]
[-47.42741013 -8.48376274]
[-59.13457870 -17.86151505]
[-70.98271942 -27.06051636]
[-82.96909332 -36.07864761]
[-94.95547485 -45.09677887]
[-106.94185638 -54.11491394]
[-118.92823029 -63.13304520]
[-130.98269653 -72.05995941]
[-143.10455322 -80.89514923]
[-155.22642517 -89.73033142]
[-167.34828186 -98.56552124]
[-179.47013855 -107.40070343]
[-191.59199524 -116.23589325]
[-204.35751343 -111.03188324]
[-217.91973877 -112.80185699]
[-228.74928284 -120.97731781]
[-234.08128357 -133.33697510]
[-232.62088013 -146.60934448]
[-244.60726929 -155.62747192]
[-256.59362793 -164.64559937]
[-268.58001709 -173.66372681]
[-280.56640625 -182.68186951]
[-296.58889771 -181.86981201]
[-307.10525513 -193.98532104]
[-304.04821777 -209.73442078]
[-289.76290894 -217.03575134]
[-275.20776367 -210.28834534]
[-271.54827881 -194.66824341]
[-259.56188965 -185.65011597]
[-247.57551575 -176.63198853]
[-235.58912659 -167.61384583]
[-223.60275269 -158.59571838]
[-208.07165527 -163.90754700]
[-192.27622986 -158.86592102]
[-182.50041199 -145.26867676]
[-182.75682068 -128.35775757]
[-170.63494873 -119.52256775]
[-158.51309204 -110.68737793]
[-146.39123535 -101.85219574]
[-134.26937866 -93.01700592]
[-122.14751434 -84.18182373]
[-114.88822174 -82.78199005]
[-109.91010284 -75.11942291]
[-97.92372131 -66.10128784]
[-85.93733978 -57.08316040]
[-73.95096588 -48.06502533]
[-61.96458435 -39.04689407]
[-57.19138336 -38.81694412]
[-52.51272583 -35.58396912]
[-49.75682449 -29.56868172]
[-38.04965973 -20.19093132]
[-26.34249115 -10.81317902]
[-14.63532257 -1.43542767]
[-0.80825067 -6.97416973]
[14.03343105 -4.83397102]
[25.88948250 4.50949860]
[31.51381874 18.62557602]
[29.30293274 33.76027679]
[41.01010132 43.13803101]
[52.71726608 52.51578140]
[64.42443848 61.89353180]
[76.13160706 71.27128601]
[85.46389771 65.59445953]
[96.03946686 62.86034775]
[106.95378113 63.30280304]
[117.27333832 66.88397217]
[126.73966217 55.24830627]
[136.20597839 43.61263657]
[138.91319275 28.02476883]
[152.94712830 23.03499794]
[162.41345215 11.39932823]
[171.87976074 -0.23634143]
[181.34608459 -11.87201118]
[176.44473267 -26.50007629]
[180.25213623 -41.45023727]
[191.55335999 -51.95194626]
[206.74221802 -54.65415192]
[220.97201538 -48.69458771]
[229.70207214 -35.97492981]
[230.14665222 -20.55397224]
[222.16389465 -7.35248899]
[208.30107117 -0.58302534]
[192.98175049 -2.40569162]
[183.51544189 9.22997761]
[174.04911804 20.86564636]
[164.58279419 32.50131607]
[162.55268860 47.25692368]
[147.84164429 53.07895279]
[138.37533569 64.71462250]
[128.90901184 76.35029602]
[137.31152344 101.69998169]
[126.63864899 126.18055725]
[135.00765991 138.62884521]
[149.12832642 145.76449585]
[149.80822754 160.64356995]
[158.17723083 173.09185791]
[166.54624939 185.54013062]
[175.10321045 197.85997009]
[183.84616089 210.04852295]
[192.58911133 222.23707581]
[206.91981506 228.94090271]
[208.05097961 243.79249573]
[216.79393005 255.98104858]
[225.53686523 268.16961670]
[234.27981567 280.35815430]
[243.02276611 292.54672241]
[251.76571655 304.73526001]
[260.50866699 316.92382812]
[269.25161743 329.11236572]
[277.99456787 341.30093384]
[292.32525635 348.00476074]
[293.45642090 362.85635376]
[302.19937134 375.04489136]
[310.94232178 387.23345947]
[319.68527222 399.42202759]
[328.42822266 411.61056519]
[354.23651123 410.13388062]
[372.99005127 435.71502686]
[385.11190796 444.55023193]
[397.23376465 453.38540649]
[409.35562134 462.22061157]
[421.47747803 471.05578613]
[433.66604614 479.79873657]
[445.92059326 488.44894409]
[461.45053101 485.51696777]
[474.45779419 494.49398804]
[477.22540283 510.05404663]
[468.11138916 522.96569824]
[452.52291870 525.56860352]
[439.70837402 516.31860352]
[437.27038574 500.70349121]
[425.01583862 492.05328369]
[417.73614502 490.76376343]
[412.64230347 483.17764282]
[400.52044678 474.34246826]
[388.39859009 465.50726318]
[376.27673340 456.67208862]
[364.15487671 447.83688354]
[358.12762451 452.30035400]
[346.07315063 461.22726440]
[340.04592896 465.69073486]
[344.96173096 479.86236572]
[349.87753296 494.03396606]
[354.79330444 508.20559692]
[359.70910645 522.37725830]
[364.62490845 536.54882812]
[375.52813721 549.53173828]
[366.07092285 563.60290527]
[349.93164062 558.41058350]
[350.45327759 541.46466064]
[345.53750610 527.29302979]
[340.62170410 513.12139893]
[335.70590210 498.94976807]
[330.79010010 484.77813721]
[325.87429810 470.60653687]
[316.20162964 463.81378174]
[309.69332886 454.78222656]
[306.71813965 444.76834106]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 164]
[3 163]
[4 162]
[5 161]
[6 160]
[8 158]
[9 157]
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[15 151]
[16 150]
[18 148]
[19 147]
[20 146]
[23 145]
[24 144]
[25 143]
[27 141]
[28 140]
[38 110]
[39 109]
[40 108]
[41 107]
[42 106]
[47 101]
[48 100]
[49 99]
[50 98]
[51 95]
[52 94]
[53 93]
[54 92]
[55 91]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[61 84]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[114 138]
[115 137]
[116 136]
[118 134]
[119 133]
[120 132]
[121 131]
[166 186]
[167 185]
[168 184]
[169 183]
[170 182]
[171 180]
[172 179]
[189 203]
[190 202]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
