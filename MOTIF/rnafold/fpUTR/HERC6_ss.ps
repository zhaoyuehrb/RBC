%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACUUGAAGUUCAGGCAGCGAGAGUUGACAUGGGGCCAGGGCUGCGCCCCUGGGGCGGGUUGAAGACAGGGUGAGUCUCUUGAUAUUCAGGAAAUCAUCGCGCACCCAGUCACCAGCGUUCGGGAGCCUGUCGCAGCGGGACCGACGGAAUCCGGAGCAGGCGACAGGGCGCAGAAGCGGG\
) } def
/len { sequence length } bind def

/coor [
[-4.81741047 337.21771240]
[-18.41142654 330.87713623]
[-28.09186554 319.41900635]
[-32.07297897 304.95697021]
[-29.62150764 290.16168213]
[-40.40764999 300.58563232]
[-51.19379425 311.00961304]
[-61.97993469 321.43356323]
[-64.17654419 327.71035767]
[-68.56365204 331.36999512]
[-73.31680298 332.02145386]
[-84.45254517 342.07110596]
[-95.58828735 352.12075806]
[-106.72402191 362.17037964]
[-104.26293182 380.11434937]
[-112.97327423 395.81500244]
[-129.21365356 403.09649658]
[-146.42443848 399.22390747]
[-157.21058655 409.64788818]
[-167.99671936 420.07183838]
[-178.78286743 430.49581909]
[-182.77445984 446.40176392]
[-198.61726379 450.63708496]
[-210.01353455 438.84484863]
[-205.23979187 423.15588379]
[-189.20683289 419.70968628]
[-178.42070007 409.28570557]
[-167.63455200 398.86172485]
[-156.84840393 388.43777466]
[-160.31025696 376.77404785]
[-158.46437073 364.67517090]
[-151.60140991 354.45437622]
[-140.97720337 348.09234619]
[-128.58328247 346.85339355]
[-116.77366638 351.03463745]
[-105.63792419 340.98501587]
[-94.50218201 330.93536377]
[-83.36643982 320.88574219]
[-72.40390778 310.64743042]
[-61.61775970 300.22344971]
[-50.83161926 289.79949951]
[-40.04547501 279.37551880]
[-37.47584534 269.54037476]
[-27.23428345 264.42730713]
[-18.58407974 252.17276001]
[-9.93387413 239.91821289]
[-1.28366935 227.66365051]
[7.36653566 215.40910339]
[16.01674080 203.15455627]
[24.66694450 190.90000916]
[33.31715012 178.64546204]
[34.60892105 171.35029602]
[42.22112656 166.25724792]
[51.07929230 154.15217590]
[48.55282211 139.51821899]
[57.36382294 127.11576080]
[72.73038483 124.56498718]
[81.58855438 112.45991516]
[76.11758423 95.95468903]
[84.33965302 78.97805786]
[103.44590759 72.00609589]
[102.42227173 57.04106522]
[101.39863586 42.07603455]
[100.37500000 27.11100388]
[88.74609375 16.74730301]
[87.92115784 1.55605054]
[97.87303162 -9.46646690]
[96.84939575 -24.43149757]
[95.82575989 -39.39653015]
[87.16473389 -52.63652039]
[94.01545715 -65.86212921]
[92.99182129 -80.82716370]
[91.96818542 -95.79219818]
[90.94454956 -110.75722504]
[89.92091370 -125.72225952]
[81.25989532 -138.96224976]
[88.11061859 -152.18786621]
[87.08698273 -167.15289307]
[71.93000031 -185.56985474]
[82.47524261 -206.15785217]
[79.92658234 -220.93974304]
[77.37792969 -235.72163391]
[74.82926941 -250.50352478]
[72.28061676 -265.28543091]
[69.73195648 -280.06732178]
[61.08230591 -294.64880371]
[72.69947815 -306.99697876]
[87.78104401 -299.25213623]
[84.51385498 -282.61596680]
[87.06250763 -267.83407593]
[89.61116791 -253.05218506]
[92.15982056 -238.27029419]
[94.70847321 -223.48838806]
[97.25713348 -208.70649719]
[103.45449066 -206.56781006]
[108.72107697 -202.57728577]
[112.51557922 -197.10478210]
[114.43560028 -190.67433167]
[114.26011658 -183.91398621]
[111.97444153 -177.49449158]
[107.77482605 -172.06271362]
[102.05201721 -168.17652893]
[103.07565308 -153.21150208]
[111.66345215 -141.04190063]
[104.88594818 -126.74589539]
[105.90958405 -111.78086090]
[106.93321991 -96.81583405]
[107.95685577 -81.85079956]
[108.98049164 -66.88576508]
[117.56829071 -54.71617889]
[110.79078674 -40.42016602]
[111.81442261 -25.45513535]
[112.83805847 -10.49010277]
[124.19813538 -0.92536271]
[125.44943237 14.23672485]
[115.34002686 26.08736610]
[116.36366272 41.05239868]
[117.38729858 56.01742935]
[118.41093445 70.98246002]
[129.01753235 81.58906555]
[143.98257446 82.61270142]
[158.94760132 83.63633728]
[173.91262817 84.65997314]
[188.20864868 77.88246918]
[200.37823486 86.47026825]
[215.34326172 87.49390411]
[230.30830383 88.51753998]
[242.15893555 78.40813446]
[257.32101440 79.65943146]
[266.88577271 91.01950836]
[281.85079956 92.04314423]
[296.81582642 93.06678009]
[311.78085327 94.09041595]
[326.74588013 95.11405182]
[341.71093750 96.13768768]
[350.83511353 83.69771576]
[365.24459839 78.18678284]
[380.34136963 81.36341095]
[391.30810547 92.21395111]
[394.64535522 107.27603149]
[389.28823853 121.74339294]
[376.94616699 130.99957275]
[361.55743408 132.09092712]
[348.03256226 124.66923523]
[340.68728638 111.10272217]
[325.72225952 110.07908630]
[310.75723267 109.05545044]
[295.79220581 108.03181458]
[280.82717896 107.00817871]
[265.86212158 105.98454285]
[254.83961487 115.93640900]
[239.64836121 115.11148071]
[229.28466797 103.48257446]
[214.31962585 102.45893860]
[199.35459900 101.43530273]
[186.12898254 108.28602600]
[172.88899231 99.62500000]
[157.92396545 98.60136414]
[142.95893860 97.57772827]
[127.99390411 96.55409241]
[122.51322174 113.42845154]
[108.81971741 122.55984497]
[93.69363403 121.31807709]
[84.83546448 133.42315674]
[87.05281830 148.84135437]
[77.89693451 160.99143982]
[63.18436813 163.01033020]
[54.32620239 175.11541748]
[45.57169724 187.29566956]
[36.92149353 199.55021667]
[28.27128792 211.80476379]
[19.62108421 224.05931091]
[10.97087860 236.31385803]
[2.32067418 248.56840515]
[-6.32953072 260.82296753]
[-14.97973537 273.07751465]
[-0.73096091 268.39004517]
[14.16987610 270.11196899]
[26.97401810 277.92565918]
[35.31948853 290.38973999]
[37.66679764 305.20495605]
[33.58293915 319.63830566]
[23.82125854 331.02731323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 42]
[6 41]
[7 40]
[8 39]
[11 38]
[12 37]
[13 36]
[14 35]
[18 29]
[19 28]
[20 27]
[21 26]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 169]
[53 168]
[54 167]
[57 164]
[58 163]
[61 119]
[62 118]
[63 117]
[64 116]
[67 113]
[68 112]
[69 111]
[71 109]
[72 108]
[73 107]
[74 106]
[75 105]
[77 103]
[78 102]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[120 160]
[121 159]
[122 158]
[123 157]
[125 155]
[126 154]
[127 153]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[135 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
