%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCCUGAUUCACGGGCCGCUGGGGCCAGGGUUGGGGGUUGGGGGUGCCCACAGGGCUUGGCUAGUGGGGUUUUGGGGGGGCAGUGGGUGCAAGGAGUUUGGUUUGUGUCUGCCGGCCGGCAGGCAAACGCAACCCACGCGGUGGGGGAGGCGGCUAGCGUGGUGGACCCGGGCCGCGUGGCCCUGUGGCAGCCGAGCC\
) } def
/len { sequence length } bind def

/coor [
[-81.80577087 297.80700684]
[-107.57631683 299.65304565]
[-117.05836487 311.27590942]
[-119.78665161 326.86010742]
[-133.82733154 331.83090210]
[-143.30937195 343.45376587]
[-152.79142761 355.07659912]
[-162.27346802 366.69946289]
[-171.75550842 378.32232666]
[-181.23756409 389.94519043]
[-190.71960449 401.56802368]
[-200.20164490 413.19088745]
[-209.68370056 424.81375122]
[-207.96170044 435.56280518]
[-212.35310364 445.28329468]
[-221.18600464 450.86141968]
[-231.41108704 450.65725708]
[-241.25001526 461.97958374]
[-251.08894348 473.30194092]
[-260.92785645 484.62426758]
[-261.24487305 500.66421509]
[-274.07009888 510.30230713]
[-289.56515503 506.14505005]
[-295.84353638 491.38153076]
[-288.08901978 477.33706665]
[-272.25021362 474.78533936]
[-262.41128540 463.46301270]
[-252.57235718 452.14065552]
[-242.73342896 440.81832886]
[-240.45372009 421.62121582]
[-221.30654907 415.33169556]
[-211.82450867 403.70883179]
[-202.34246826 392.08599854]
[-192.86041260 380.46313477]
[-183.37837219 368.84027100]
[-173.89631653 357.21740723]
[-164.41427612 345.59457397]
[-154.93223572 333.97171021]
[-145.45018005 322.34884644]
[-143.40011597 307.59600830]
[-128.68121338 301.79388428]
[-119.19917297 290.17102051]
[-126.25726318 276.93533325]
[-141.19200134 278.33300781]
[-156.12673950 279.73071289]
[-169.18269348 289.65411377]
[-184.19784546 283.06042480]
[-185.72590637 266.73260498]
[-172.19493103 257.46737671]
[-157.52442932 264.79595947]
[-142.58969116 263.39828491]
[-127.65495300 262.00057983]
[-121.54629517 250.24777222]
[-111.73137665 242.12599182]
[-100.01120758 238.61853027]
[-88.35400391 239.90686035]
[-78.56659698 245.39862061]
[-67.09260559 235.73695374]
[-55.61862183 226.07530212]
[-44.14463043 216.41365051]
[-32.67064285 206.75199890]
[-21.19665527 197.09033203]
[-9.72266769 187.42868042]
[1.75131989 177.76702881]
[13.22530746 168.10536194]
[16.31917191 161.38743591]
[24.95368958 158.38435364]
[36.57654572 148.90231323]
[47.97505569 139.15171814]
[59.14301682 129.13790894]
[70.31098175 119.12407684]
[81.47894287 109.11026001]
[70.20712280 119.00702667]
[55.56446838 122.26167297]
[41.16156006 118.07165527]
[30.54986191 107.47015381]
[26.34600067 93.07128143]
[29.58656311 78.42550659]
[39.47249222 67.14417267]
[53.56612396 62.00904083]
[68.39225006 64.28631592]
[80.29505157 73.41447449]
[86.33934021 87.14149475]
[80.43783569 73.35120392]
[74.53633118 59.56090546]
[60.23853683 52.28405762]
[57.15454865 36.54021454]
[67.65013885 24.40670586]
[83.67399597 25.19132042]
[92.93398285 38.29216766]
[88.32662964 53.65940094]
[94.22813416 67.44969940]
[100.12963867 81.23999023]
[107.61853027 81.64804077]
[103.76631927 67.15113068]
[116.36331940 59.00769043]
[128.00086975 68.47170258]
[122.59631348 82.46414185]
[130.08520508 82.87219238]
[137.45011902 69.80474854]
[144.81503296 56.73730469]
[140.79039001 41.68937683]
[148.44561768 28.54204750]
[162.81631470 24.79791260]
[170.18122864 11.73046875]
[177.54612732 -1.33697522]
[177.86000061 -7.95270443]
[181.00039673 -12.70019627]
[185.34873962 -14.69113350]
[193.11648560 -27.52320862]
[200.88423157 -40.35528564]
[208.65197754 -53.18735886]
[216.41972351 -66.01943207]
[224.18746948 -78.85150909]
[231.95521545 -91.68358612]
[239.72296143 -104.51565552]
[239.52183533 -120.91357422]
[253.75852966 -129.05290222]
[267.78753662 -120.56061554]
[267.17703247 -104.17283630]
[252.55503845 -96.74791718]
[244.78729248 -83.91584015]
[237.01954651 -71.08376312]
[229.25180054 -58.25168991]
[221.48405457 -45.41961288]
[213.71630859 -32.58753967]
[205.94856262 -19.75546455]
[198.18081665 -6.92338943]
[190.61357117 6.02793598]
[183.24867249 19.09537888]
[175.88375854 32.16282272]
[180.12261963 46.39545059]
[172.83969116 59.75261307]
[157.88247681 64.10221863]
[150.51756287 77.16966248]
[143.15264893 90.23710632]
[148.94673157 104.07287598]
[163.42550659 107.99269867]
[177.90428162 111.91252899]
[192.38305664 115.83235931]
[206.86184692 119.75218964]
[221.34062195 123.67201996]
[235.81939697 127.59184265]
[250.29817200 131.51167297]
[264.77694702 135.43150330]
[282.45755005 130.29785156]
[294.34353638 143.20452881]
[308.88150024 146.89871216]
[323.41949463 150.59289551]
[335.34820557 140.84547424]
[350.55151367 140.00096130]
[363.18740845 148.17396545]
[368.52386475 162.05416870]
[383.06185913 165.74835205]
[398.34249878 161.64805603]
[408.77224731 172.28150940]
[423.31021118 175.97569275]
[438.93884277 171.00798035]
[450.87133789 182.25730896]
[446.83258057 198.15135193]
[430.97729492 202.33966064]
[419.61602783 190.51367188]
[405.07806396 186.81948853]
[390.83724976 191.18400574]
[379.36767578 180.28633118]
[364.82968140 176.59214783]
[353.51434326 186.24104309]
[338.50958252 187.39039612]
[325.55371094 179.39047241]
[319.72531128 165.13087463]
[305.18731689 161.43669128]
[290.64935303 157.74250793]
[280.09130859 163.65557861]
[267.94577026 160.69157410]
[260.85711670 149.91027832]
[246.37834167 145.99044800]
[231.89956665 142.07061768]
[217.42079163 138.15078735]
[202.94201660 134.23095703]
[188.46324158 130.31114197]
[173.98446655 126.39130402]
[159.50569153 122.47147369]
[145.02690125 118.55165100]
[91.49275970 120.27822113]
[80.32479858 130.29203796]
[69.15683746 140.30586243]
[57.98888016 150.31968689]
[56.36345291 155.29524231]
[53.29583359 158.79570007]
[49.59136581 160.51841736]
[46.05859375 160.52516174]
[34.43573380 170.00721741]
[22.88696480 179.57936096]
[11.41297626 189.24101257]
[-0.06101193 198.90266418]
[-11.53499985 208.56433105]
[-23.00898743 218.22598267]
[-34.48297501 227.88763428]
[-45.95696259 237.54928589]
[-57.43095016 247.21095276]
[-68.90493774 256.87261963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 42]
[3 41]
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[12 32]
[13 31]
[17 29]
[18 28]
[19 27]
[20 26]
[43 52]
[44 51]
[45 50]
[57 201]
[58 200]
[59 199]
[60 198]
[61 197]
[62 196]
[63 195]
[64 194]
[65 193]
[67 192]
[68 191]
[69 187]
[70 186]
[71 185]
[72 184]
[83 93]
[84 92]
[85 91]
[99 136]
[100 135]
[101 134]
[104 131]
[105 130]
[106 129]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[137 183]
[138 182]
[139 181]
[140 180]
[141 179]
[142 178]
[143 177]
[144 176]
[145 175]
[147 172]
[148 171]
[149 170]
[153 166]
[154 165]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
