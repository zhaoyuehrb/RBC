%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CTAGE1)
} def

/sequence { (\
AGAGCAGCCUUGGCGCUACGGAGGAGCCUAGGGCUAACCCUCAGCCAUACCUGGGGCUGGUCCUGGAGUUGCUACGCAGGGUUGUGGCAGCACUGACUGAAGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 94 0.539557106 ubox
1 98 0.031553831 ubox
2 62 0.010187616 ubox
2 93 0.569308665 ubox
2 97 0.033105006 ubox
3 17 0.008105818 ubox
3 61 0.010291506 ubox
3 94 0.029734789 ubox
3 98 0.029458960 ubox
4 16 0.008362786 ubox
4 27 0.008322619 ubox
4 85 0.063907820 ubox
4 88 0.004253402 ubox
4 91 0.985664673 ubox
4 93 0.020945765 ubox
4 97 0.029709530 ubox
4 104 0.006802752 ubox
5 15 0.008339604 ubox
5 26 0.008337519 ubox
5 59 0.010507293 ubox
5 84 0.067271403 ubox
5 87 0.004020214 ubox
5 90 0.985465369 ubox
5 95 0.032189856 ubox
5 99 0.008829542 ubox
5 103 0.007256298 ubox
6 35 0.011905351 ubox
6 58 0.010512931 ubox
6 83 0.067376624 ubox
6 94 0.032075381 ubox
6 98 0.008777516 ubox
7 14 0.008400657 ubox
7 34 0.012511567 ubox
7 57 0.010513669 ubox
7 82 0.067459012 ubox
7 88 0.995245748 ubox
7 93 0.020823611 ubox
7 97 0.007375424 ubox
7 104 0.029928967 ubox
8 13 0.008382265 ubox
8 24 0.018364419 ubox
8 33 0.012513968 ubox
8 56 0.010494533 ubox
8 81 0.067497167 ubox
8 87 0.996792627 ubox
8 103 0.031993395 ubox
9 23 0.018420458 ubox
9 32 0.012510290 ubox
9 55 0.010467469 ubox
9 80 0.067495718 ubox
9 86 0.996490130 ubox
9 87 0.004286155 ubox
9 102 0.032009112 ubox
10 21 0.005129701 ubox
10 22 0.017641079 ubox
10 31 0.012486953 ubox
10 54 0.010360656 ubox
10 79 0.067345401 ubox
10 86 0.005535216 ubox
10 100 0.004565114 ubox
10 101 0.031483232 ubox
11 20 0.011030236 ubox
11 21 0.014413107 ubox
11 30 0.012164835 ubox
11 53 0.008959563 ubox
11 78 0.065300372 ubox
11 84 0.632883421 ubox
11 89 0.003195169 ubox
11 99 0.006416555 ubox
11 100 0.029692923 ubox
12 19 0.014885727 ubox
12 28 0.020610706 ubox
12 29 0.010061186 ubox
12 51 0.006958950 ubox
12 52 0.007109225 ubox
12 77 0.057109108 ubox
12 83 0.961014380 ubox
12 85 0.004329920 ubox
12 88 0.003234582 ubox
12 98 0.011103624 ubox
13 27 0.023725356 ubox
13 28 0.010017884 ubox
13 50 0.006969421 ubox
13 51 0.007094660 ubox
13 77 0.035535189 ubox
13 82 0.995340219 ubox
13 85 0.004396860 ubox
13 91 0.003195090 ubox
13 97 0.011496038 ubox
14 20 0.006488426 ubox
14 26 0.023736656 ubox
14 76 0.047228254 ubox
14 81 0.996818129 ubox
14 84 0.004415672 ubox
14 90 0.003236781 ubox
14 95 0.008468049 ubox
15 19 0.006226434 ubox
15 27 0.016884736 ubox
15 45 0.007652259 ubox
15 75 0.045672140 ubox
15 77 0.004709432 ubox
15 82 0.004386415 ubox
15 83 0.003331306 ubox
15 88 0.004137131 ubox
16 23 0.008565190 ubox
16 24 0.021205895 ubox
16 26 0.016917295 ubox
16 44 0.007665248 ubox
16 76 0.004997260 ubox
16 79 0.995937200 ubox
16 80 0.027122106 ubox
16 81 0.005269035 ubox
16 87 0.004147732 ubox
17 22 0.008261469 ubox
17 23 0.020749230 ubox
17 25 0.016595431 ubox
17 43 0.007555803 ubox
17 74 0.030447838 ubox
17 78 0.974069970 ubox
17 79 0.025887004 ubox
17 80 0.005230714 ubox
17 86 0.004142705 ubox
18 73 0.019114374 ubox
18 85 0.004140126 ubox
19 76 0.993914116 ubox
19 84 0.004089599 ubox
19 99 0.004087365 ubox
20 40 0.003235946 ubox
20 73 0.004668618 ubox
20 75 0.991183817 ubox
20 83 0.003800085 ubox
20 98 0.004128691 ubox
21 39 0.003231971 ubox
21 42 0.009594062 ubox
21 72 0.005118622 ubox
21 82 0.003476765 ubox
21 97 0.004125819 ubox
22 41 0.009628408 ubox
22 73 0.763457441 ubox
23 40 0.009612117 ubox
23 72 0.996543603 ubox
23 73 0.044670912 ubox
23 94 0.003488522 ubox
24 39 0.009583838 ubox
24 70 0.020807517 ubox
24 72 0.046359079 ubox
24 93 0.003475592 ubox
25 35 0.010199579 ubox
25 69 0.022125873 ubox
25 70 0.990358815 ubox
26 34 0.010355721 ubox
26 69 0.998457882 ubox
27 33 0.010356170 ubox
27 66 0.008118861 ubox
27 68 0.998833423 ubox
28 32 0.010280827 ubox
28 65 0.008672821 ubox
28 66 0.999309599 ubox
29 65 0.999257736 ubox
30 64 0.999367842 ubox
31 63 0.999849994 ubox
32 62 0.999830679 ubox
33 61 0.999521051 ubox
34 60 0.999839591 ubox
35 59 0.997864231 ubox
36 58 0.963910721 ubox
37 104 0.007850326 ubox
38 55 0.030568987 ubox
38 56 0.910816952 ubox
38 103 0.008700857 ubox
39 54 0.030604562 ubox
39 55 0.908374303 ubox
39 56 0.408483619 ubox
39 102 0.008679894 ubox
39 103 0.004304865 ubox
40 53 0.030154835 ubox
40 54 0.904864337 ubox
40 55 0.416507359 ubox
40 102 0.004354215 ubox
41 53 0.148837661 ubox
41 54 0.423537669 ubox
41 60 0.003497657 ubox
41 100 0.008439522 ubox
41 101 0.003616946 ubox
42 53 0.987723121 ubox
42 59 0.013266157 ubox
42 99 0.008820243 ubox
43 52 0.997048971 ubox
43 58 0.014565186 ubox
43 98 0.008510360 ubox
44 51 0.987535640 ubox
44 57 0.014973541 ubox
44 97 0.008465112 ubox
45 54 0.007135292 ubox
45 56 0.014965430 ubox
46 53 0.009773952 ubox
46 55 0.014952568 ubox
46 95 0.007413090 ubox
47 52 0.008928034 ubox
47 94 0.006676451 ubox
50 66 0.004199341 ubox
51 65 0.004205352 ubox
51 66 0.006977699 ubox
52 65 0.006977253 ubox
53 63 0.003363075 ubox
53 64 0.007413402 ubox
54 62 0.003370212 ubox
54 63 0.007500750 ubox
55 61 0.003208427 ubox
55 62 0.007493285 ubox
56 61 0.005080228 ubox
58 99 0.003818307 ubox
59 98 0.007070621 ubox
60 97 0.008945335 ubox
61 96 0.008963379 ubox
62 95 0.008910100 ubox
64 95 0.005308817 ubox
65 94 0.012701557 ubox
66 93 0.014248127 ubox
68 91 0.036721229 ubox
69 90 0.036749359 ubox
70 89 0.036852378 ubox
71 88 0.036947334 ubox
72 87 0.036947183 ubox
73 86 0.036878001 ubox
74 85 0.036843434 ubox
75 84 0.036842853 ubox
76 82 0.007987456 ubox
76 83 0.027865267 ubox
76 85 0.003500213 ubox
77 81 0.011266558 ubox
77 84 0.003588352 ubox
77 95 0.004102650 ubox
77 99 0.005347222 ubox
78 83 0.003297364 ubox
78 94 0.004116837 ubox
78 98 0.005340099 ubox
79 93 0.004080958 ubox
79 97 0.005304137 ubox
80 98 0.004703844 ubox
81 91 0.004136776 ubox
81 97 0.004958563 ubox
82 90 0.004174952 ubox
82 96 0.005002229 ubox
83 89 0.004167792 ubox
83 95 0.004694489 ubox
84 88 0.004107628 ubox
84 93 0.017878690 ubox
85 92 0.018222813 ubox
86 91 0.019276904 ubox
86 94 0.003809600 ubox
86 98 0.010645602 ubox
87 93 0.003977219 ubox
87 97 0.011145816 ubox
87 104 0.003209636 ubox
88 95 0.012565136 ubox
88 99 0.055294862 ubox
88 103 0.003329049 ubox
89 94 0.011442874 ubox
89 98 0.057669925 ubox
90 97 0.057621160 ubox
90 104 0.076863151 ubox
91 99 0.015937721 ubox
91 103 0.082665644 ubox
92 98 0.016925807 ubox
92 104 0.255882437 ubox
93 102 0.488794881 ubox
93 103 0.281993030 ubox
94 101 0.488385990 ubox
94 102 0.277536782 ubox
96 104 0.219294152 ubox
97 103 0.239870789 ubox
98 102 0.216322380 ubox
4 91 0.9500000 lbox
5 90 0.9500000 lbox
7 88 0.9500000 lbox
8 87 0.9500000 lbox
9 86 0.9500000 lbox
12 83 0.9500000 lbox
13 82 0.9500000 lbox
14 81 0.9500000 lbox
16 79 0.9500000 lbox
17 78 0.9500000 lbox
19 76 0.9500000 lbox
20 75 0.9500000 lbox
22 73 0.9500000 lbox
23 72 0.9500000 lbox
25 70 0.9500000 lbox
26 69 0.9500000 lbox
27 68 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
30 64 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
38 56 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
showpage
end
%%EOF
