%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCUUCGCUCGCCGCCUCGCGCCGAGACUAGAAGCGCUGCGGGAAGCAGGGACAGUGGAGAGGGCGCUGCGCUCGGGCUACCCAAUGCGUGGACUAUCUGCCGCCGCUGUUCGUGCAAUAUGCUGGAGCUCCAGAACAGCUAAACGGAGUCGCCACACCACUGUUUGUGCUGGAUCGCAGCGCUGCCUUUCCUU\
) } def
/len { sequence length } bind def

/coor [
[-106.94197845 699.93823242]
[-108.38232422 685.00756836]
[-109.82266998 670.07690430]
[-111.26301575 655.14617920]
[-118.54728699 653.36029053]
[-122.11930847 667.92877197]
[-136.68772888 664.35650635]
[-133.11582947 649.78851318]
[-140.40010071 648.00262451]
[-148.58312988 660.57397461]
[-156.76614380 673.14526367]
[-164.94917297 685.71661377]
[-165.99310303 701.50335693]
[-179.42082214 707.94891357]
[-187.60383606 720.52026367]
[-195.78686523 733.09161377]
[-199.36030579 749.66467285]
[-216.27491760 750.81878662]
[-222.06634521 734.88464355]
[-208.35818481 724.90856934]
[-200.17517090 712.33721924]
[-191.99214172 699.76593018]
[-191.53350830 684.87835693]
[-177.52049255 677.53356934]
[-169.33746338 664.96228027]
[-161.15444946 652.39093018]
[-152.97142029 639.81964111]
[-158.06253052 625.71002197]
[-154.41725159 611.15966797]
[-143.27531433 601.11694336]
[-128.42585754 598.99707031]
[-114.91892242 605.52111816]
[-107.34795380 618.47021484]
[-108.28719330 633.43939209]
[-102.88175964 619.44720459]
[-97.47632599 605.45501709]
[-92.07089233 591.46282959]
[-86.66545868 577.47064209]
[-81.26002502 563.47845459]
[-75.85458374 549.48626709]
[-70.44915009 535.49407959]
[-65.04371643 521.50189209]
[-59.63828278 507.50973511]
[-67.09757996 492.44290161]
[-61.24229813 476.32360840]
[-45.23400879 469.28469849]
[-40.05353165 455.20767212]
[-34.87305832 441.13064575]
[-29.69258118 427.05361938]
[-32.55823898 412.43728638]
[-20.53092766 402.15844727]
[-15.35045242 388.08142090]
[-10.16997719 374.00439453]
[-4.98950100 359.92736816]
[0.19097470 345.85034180]
[5.37145042 331.77331543]
[10.55192661 317.69628906]
[15.73240185 303.61926270]
[20.91287804 289.54223633]
[12.48602295 279.17819214]
[10.26600456 265.89654541]
[14.93878174 253.15199280]
[25.38322258 244.31323242]
[38.93795395 241.77270508]
[44.34338760 227.78051758]
[49.74882507 213.78833008]
[55.15425873 199.79614258]
[60.44738388 185.76107788]
[65.62786102 171.68405151]
[62.76220322 157.06771851]
[74.78951263 146.78889465]
[79.96998596 132.71186829]
[66.53935242 123.43653107]
[57.52272797 108.63916779]
[55.16257858 90.45660400]
[60.66195297 71.91166687]
[52.47892761 59.34034348]
[44.29590607 46.76902008]
[30.58773994 36.79292297]
[36.37917328 20.85881996]
[53.29379272 22.01292038]
[56.86722565 38.58599854]
[65.05024719 51.15731812]
[73.23327637 63.72864151]
[80.40595245 61.53713226]
[76.02292633 47.19178009]
[79.39976501 32.57682037]
[90.36827850 42.80875778]
[94.75130463 57.15410995]
[101.92398071 54.96260071]
[101.68356323 39.96452713]
[101.44314575 24.96645355]
[101.20272827 9.96837997]
[88.42765808 1.16058779]
[83.30126190 -13.48522091]
[87.79474640 -28.33743286]
[100.18027496 -37.68507004]
[115.69535828 -37.93377686]
[128.37413025 -28.98791695]
[133.34133911 -14.28735828]
[128.68699646 0.51523423]
[116.20079803 9.72796249]
[116.44121552 24.72603607]
[116.68163300 39.72410965]
[116.92205048 54.72218323]
[120.67404175 61.90094757]
[122.80457306 69.15816498]
[133.90873718 59.07365036]
[145.01290894 48.98913574]
[156.11708069 38.90462494]
[167.22125244 28.82011032]
[178.32542419 18.73559570]
[189.42959595 8.65108299]
[182.42523193 1.86805856]
[179.28468323 -9.45457649]
[182.24620056 -23.08014297]
[191.96963501 -34.50183105]
[201.69305420 -45.92352295]
[207.35646057 -61.90357590]
[224.27980042 -60.88520813]
[227.98608398 -44.34133148]
[213.11474609 -36.20009613]
[203.39131165 -24.77840614]
[193.66789246 -13.35671711]
[203.48254395 -2.01331973]
[216.18341064 -9.99380112]
[228.88426208 -17.97428131]
[236.06451416 -32.71796036]
[252.43984985 -33.60144806]
[261.16473389 -19.71589470]
[253.26373291 -5.34556246]
[236.86474609 -5.27341938]
[224.16387939 2.70706201]
[211.46302795 10.68754292]
[199.51409912 19.75525284]
[188.40992737 29.83976555]
[177.30577087 39.92427826]
[166.20159912 50.00879288]
[155.09742737 60.09330750]
[143.99325562 70.17781830]
[132.88908386 80.26233673]
[138.21174622 96.66385651]
[135.81187439 113.73960876]
[126.17449188 128.03860474]
[111.24727631 136.67105103]
[94.04701233 137.89233398]
[88.86653900 151.96936035]
[91.36165619 167.59259033]
[79.70488739 176.86453247]
[74.52440643 190.94155884]
[74.49611664 200.08868408]
[69.14644623 205.20156860]
[63.74100876 219.19375610]
[58.33557510 233.18594360]
[52.93014145 247.17813110]
[62.30327606 261.25079346]
[61.45458221 277.97158813]
[50.91591644 290.76638794]
[34.98990250 294.72271729]
[29.80942917 308.79974365]
[24.62895203 322.87677002]
[19.44847679 336.95379639]
[14.26800060 351.03082275]
[9.08752537 365.10784912]
[3.90704942 379.18487549]
[-1.27342641 393.26190186]
[-6.45390224 407.33892822]
[-3.95878744 422.96215820]
[-15.61555481 432.23410034]
[-20.79603004 446.31112671]
[-25.97650528 460.38815308]
[-31.15698242 474.46517944]
[-24.13560867 485.96804810]
[-25.01244545 499.22088623]
[-33.24332809 509.39562988]
[-45.64609528 512.91516113]
[-51.05152893 526.90734863]
[-56.45696640 540.89953613]
[-61.86240005 554.89172363]
[-67.26783752 568.88391113]
[-72.67327118 582.87609863]
[-78.07870483 596.86828613]
[-83.48413849 610.86047363]
[-88.88957214 624.85266113]
[-94.29500580 638.84484863]
[-96.33232880 653.70587158]
[-94.89198303 668.63653564]
[-93.45163727 683.56719971]
[-92.01129150 698.49792480]
[-79.02078247 707.20312500]
[-74.71475220 722.23614502]
[-81.12636566 736.49884033]
[-95.22827148 743.25683594]
[-110.36196899 739.31921387]
[-119.38179779 726.54510498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[9 27]
[10 26]
[11 25]
[12 24]
[14 22]
[15 21]
[16 20]
[34 185]
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[43 176]
[46 172]
[47 171]
[48 170]
[49 169]
[51 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 159]
[64 155]
[65 154]
[66 153]
[67 152]
[68 150]
[69 149]
[71 147]
[72 146]
[76 84]
[77 83]
[78 82]
[90 105]
[91 104]
[92 103]
[93 102]
[107 141]
[108 140]
[109 139]
[110 138]
[111 137]
[112 136]
[113 135]
[116 124]
[117 123]
[118 122]
[125 134]
[126 133]
[127 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
