%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUUACAAAGGAGGCCGUCUGCCUCCUUUGUCCUGGAUUUGGGAGUUGAGCACCUUCGUCGCCAUUGGCUUUCCUCCCCCAGCUCCAGCCUCUCUCAUCUUGGGAAUCUGCGUCAGAAGUCACUCGCAGUCCCGUCAGCCCAGAAGACGUAAAGCAGGCUACCAGCAAUUUUGAGAACUUGCAAAAACAGCUUGCAAGGAAA\
) } def
/len { sequence length } bind def

/coor [
[86.47583008 197.43882751]
[79.54830933 184.13433838]
[87.37644958 171.33924866]
[88.65288544 156.39366150]
[89.92932129 141.44807434]
[82.44354248 140.98635864]
[74.15806580 153.49040222]
[65.87259674 165.99443054]
[57.58712006 178.49847412]
[49.30164337 191.00250244]
[41.01617050 203.50654602]
[32.73069763 216.01057434]
[24.44522095 228.51461792]
[16.15974617 241.01864624]
[7.87427235 253.52268982]
[-0.41120234 266.02673340]
[1.35720575 281.97201538]
[-10.10798836 293.19381714]
[-26.01166916 291.08370972]
[-34.15389252 277.26040649]
[-28.28864479 262.32797241]
[-12.91523838 257.74124146]
[-4.62976360 245.23721313]
[3.65571117 232.73316956]
[11.94118595 220.22914124]
[20.22665977 207.72509766]
[28.51213455 195.22106934]
[36.79761124 182.71702576]
[45.08308411 170.21299744]
[53.36855698 157.70895386]
[61.65403366 145.20492554]
[69.93950653 132.70088196]
[63.09794235 113.95862579]
[65.69761658 96.41304779]
[51.47520447 91.64617920]
[37.25279617 86.87931061]
[23.03038597 82.11243439]
[8.80797672 77.34556580]
[-5.63315058 88.30204773]
[-23.60276413 88.40001678]
[-37.90996552 77.78890228]
[-42.94260025 60.86585999]
[-57.30506134 56.53922653]
[-71.66751862 52.21259689]
[-86.02998352 47.88596725]
[-100.39244080 43.55933762]
[-114.19482422 50.77958298]
[-128.69877625 46.18716431]
[-135.49711609 32.98420334]
[-149.85957336 28.65757370]
[-164.22203064 24.33094215]
[-178.58448792 20.00431252]
[-187.63732910 32.16252136]
[-200.30426025 40.48865891]
[-215.05570984 43.97729874]
[-230.11035156 42.20717239]
[-243.65028381 35.39203262]
[-254.04048157 24.35483932]
[-260.02627563 10.42838955]
[-260.88485718 -4.70563316]
[-256.51254272 -19.21972084]
[-247.43733215 -31.36122704]
[-234.75506592 -39.66400528]
[-219.99722290 -43.12545395]
[-204.94586182 -41.32758713]
[-191.41851807 -34.48750687]
[-181.04867554 -23.43118477]
[-175.08854675 -9.49372768]
[-174.25785828 5.64185190]
[-159.89540100 9.96848202]
[-145.53294373 14.29511261]
[-131.17048645 18.62174416]
[-118.21051025 11.37088966]
[-103.58330536 15.55410957]
[-96.06581116 29.19687653]
[-81.70335388 33.52350616]
[-67.34088898 37.85013580]
[-52.97843170 42.17676926]
[-38.61597061 46.50339890]
[-30.14165306 37.80205154]
[-18.70351219 33.50605392]
[-6.45237875 34.48882675]
[4.28002071 40.62492371]
[11.42484379 50.80224991]
[13.57484818 63.12315750]
[27.79725838 67.89002991]
[42.01966858 72.65689850]
[56.24207687 77.42376709]
[70.46448517 82.19064331]
[78.85307312 72.75431824]
[90.07564545 66.96929932]
[102.62822723 65.61087036]
[114.82859039 68.86107635]
[125.04170227 76.28433228]
[137.91505432 68.58518219]
[150.78839111 60.88602829]
[163.66174316 53.18687057]
[176.53509521 45.48771667]
[170.98388672 25.30849266]
[175.93032837 3.41737986]
[191.57708740 -14.72705650]
[215.32220459 -23.95999908]
[242.13508606 -20.81913757]
[249.43415833 -33.92347336]
[256.73321533 -47.02780914]
[264.03228760 -60.13214493]
[264.31277466 -66.74668121]
[267.42718506 -71.50875854]
[271.76327515 -73.52261353]
[279.46243286 -86.39595795]
[287.16159058 -99.26930237]
[294.86074829 -112.14264679]
[302.55990601 -125.01599121]
[294.11413574 -137.72944641]
[292.02944946 -152.84953308]
[296.71972656 -167.37413025]
[307.25372314 -178.41938782]
[321.53988647 -183.79225159]
[336.74172974 -182.42593384]
[349.84091187 -174.59173584]
[358.23654175 -161.84510803]
[360.26165771 -146.71694946]
[355.51422119 -132.21092224]
[344.93682861 -121.20723724]
[330.62957764 -115.89067841]
[315.43325806 -117.31684113]
[307.73410034 -104.44349670]
[300.03494263 -91.57015228]
[292.33578491 -78.69680023]
[284.63662720 -65.82345581]
[277.13662720 -52.83307648]
[269.83755493 -39.72874069]
[262.53848267 -26.62440491]
[255.23942566 -13.52007008]
[264.91070557 -2.05418825]
[279.05801392 -7.03951025]
[293.20532227 -12.02483177]
[296.65832520 -27.06080437]
[307.70816040 -37.82669067]
[322.82891846 -40.88713837]
[337.19561768 -35.26556396]
[346.22384644 -22.75579834]
[347.03277588 -7.34965801]
[339.36428833 6.03681278]
[325.66534424 13.13204002]
[310.30722046 11.67196178]
[298.19064331 2.12248421]
[284.04333496 7.10780621]
[269.89602661 12.09312820]
[270.24240112 19.58512497]
[285.22640991 18.89237404]
[298.54931641 25.78440285]
[285.91915894 33.87636948]
[270.93515015 34.56911850]
[271.28152466 42.06111908]
[285.82849121 45.71982193]
[301.09909058 41.58226395]
[311.55471802 52.19023132]
[326.10168457 55.84893799]
[342.93719482 53.84859848]
[349.51989746 69.47243500]
[336.32891846 80.12299347]
[322.44296265 70.39588928]
[307.89599609 66.73718262]
[293.66589355 71.13643646]
[282.16976929 60.26677704]
[267.62283325 56.60807037]
[254.69841003 69.99218750]
[238.87194824 78.01420593]
[222.14276123 80.28100586]
[206.44226074 77.08857727]
[193.41242981 69.33393097]
[184.23423767 58.36106491]
[171.36090088 66.06021881]
[158.48754883 73.75936890]
[145.61421204 81.45852661]
[132.74085999 89.15767670]
[137.50733948 112.23946381]
[125.81409454 136.14710999]
[132.50016785 149.57456970]
[139.18624878 163.00201416]
[145.87231445 176.42945862]
[152.55839539 189.85691833]
[159.24447632 203.28436279]
[165.93054199 216.71180725]
[181.17549133 220.19398499]
[190.57424927 232.69187927]
[189.68898010 248.30438232]
[178.93771362 259.65975952]
[163.39685059 261.39630127]
[150.40432739 252.69412231]
[146.09478760 237.66209412]
[152.50309753 223.39788818]
[145.81701660 209.97042847]
[139.13095093 196.54298401]
[132.44487000 183.11553955]
[125.75879669 169.68809509]
[119.07271576 156.26063538]
[112.38664246 142.83319092]
[104.90087128 142.37147522]
[104.33098602 157.36065674]
[103.76110840 172.34982300]
[109.95753479 186.01014709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 32]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[34 89]
[35 88]
[36 87]
[37 86]
[38 85]
[42 79]
[43 78]
[44 77]
[45 76]
[46 75]
[49 72]
[50 71]
[51 70]
[52 69]
[94 177]
[95 176]
[96 175]
[97 174]
[98 173]
[103 134]
[104 133]
[105 132]
[106 131]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[135 149]
[136 148]
[137 147]
[155 167]
[156 166]
[158 164]
[159 163]
[179 199]
[180 198]
[181 197]
[182 196]
[183 195]
[184 194]
[185 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
