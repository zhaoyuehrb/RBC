%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGCCGCCUUUUUUUUUUUUUUGCAUCCCAUUUUUUUAAAUUUGCAAUUUUAUAUUUUGCAAAUAUUUUGAGAGACAUUGAUUUUUCUCCCCGUGCUCCCCCGUUCUUCCCUGCGGAGUGCGCUGCGCCGCCCAGCCCUGUCGCCCCCCGGAGGUGAUCCCUCCCUCCUGCCUGCCCGCCAGCCUGACCUGUGCCCGGCUCGCGGGCCGCAGCCUCGGCCCCGGCGCGCCCCCGGCAGCUCUCGGCGCG\
) } def
/len { sequence length } bind def

/coor [
[-162.91044617 99.61887360]
[-177.89628601 98.96717072]
[-192.88212585 98.31546783]
[-207.86795044 97.66375732]
[-222.85379028 97.01205444]
[-237.83963013 96.36034393]
[-252.82546997 95.70864105]
[-261.50778198 98.45661926]
[-267.99298096 94.95465851]
[-282.96957397 94.11692047]
[-285.20196533 100.61324310]
[-288.48822021 106.63703156]
[-292.73318481 112.01899719]
[-297.81484985 116.60836029]
[-303.58773804 120.27704620]
[-309.88717651 122.92330933]
[-316.53393555 124.47452545]
[-323.33941650 124.88918304]
[-330.11083984 124.15797424]
[-336.65689087 122.30403900]
[-342.79293823 119.38218689]
[-348.34640503 115.47731018]
[-353.16156006 110.70192719]
[-357.10385132 105.19289398]
[-360.06372070 99.10755157]
[-361.95959473 92.61916351]
[-376.95700073 92.89853668]
[-391.95440674 93.17790985]
[-406.95178223 93.45728302]
[-408.30307007 101.32439423]
[-411.09069824 108.91748047]
[-415.25878906 115.97329712]
[-420.70297241 122.24004364]
[-427.27294922 127.48636627]
[-434.77630615 131.50971985]
[-442.98425293 134.14401245]
[-451.63848877 135.26618958]
[-460.45932007 134.80139160]
[-469.15466309 132.72673035]
[-477.42980957 129.07319641]
[-484.99731445 123.92587280]
[-491.58703613 117.42227173]
[-496.95553589 109.74884796]
[-511.64181519 112.80068207]
[-526.32806396 115.85252380]
[-541.01434326 118.90436554]
[-555.70062256 121.95620728]
[-570.38684082 125.00804138]
[-585.07312012 128.05989075]
[-599.75939941 131.11172485]
[-605.18896484 145.55206299]
[-617.57727051 154.74626160]
[-632.97125244 155.76049805]
[-646.45874023 148.27111816]
[-653.73596191 134.66796875]
[-652.48071289 119.29174805]
[-643.09362793 107.04897308]
[-628.57000732 101.84625244]
[-613.54431152 105.34376526]
[-602.81121826 116.42546082]
[-588.12493896 113.37362671]
[-573.43872070 110.32178497]
[-558.75244141 107.26994324]
[-544.06616211 104.21810150]
[-529.37988281 101.16625977]
[-514.69366455 98.11442566]
[-500.00738525 95.06258392]
[-498.98614502 87.63243866]
[-513.75030518 90.28196716]
[-520.83245850 77.05916595]
[-510.44534302 66.23754120]
[-496.94363403 72.77214813]
[-495.92239380 65.34200287]
[-509.24066162 58.44102859]
[-522.55895996 51.54005432]
[-535.87719727 44.63907623]
[-549.19549561 37.73810196]
[-562.51379395 30.83712578]
[-576.32653809 37.90728378]
[-591.65179443 35.47496796]
[-602.59667969 24.47544861]
[-604.95263672 9.13826847]
[-597.81378174 -4.63911343]
[-583.92510986 -11.55901337]
[-568.62713623 -8.96058846]
[-557.80224609 2.15701389]
[-555.61279297 17.51884842]
[-542.29455566 24.41982460]
[-528.97625732 31.32079887]
[-515.65795898 38.22177505]
[-502.33969116 45.12274933]
[-489.02142334 52.02372742]
[-464.30734253 38.78245163]
[-437.45822144 40.56351852]
[-416.54656982 55.63820648]
[-407.23117065 78.45988464]
[-392.23376465 78.18051147]
[-377.23638916 77.90113831]
[-362.23898315 77.62176514]
[-360.54739380 71.08815765]
[-357.78567505 64.93005371]
[-354.03176880 59.32135391]
[-349.39166260 54.42043304]
[-343.99642944 50.36569214]
[-349.45590210 36.39450073]
[-354.91537476 22.42330933]
[-360.37484741 8.45211697]
[-375.42053223 4.65646172]
[-385.33584595 -7.27946043]
[-386.30813599 -22.76604271]
[-377.96356201 -35.84838104]
[-363.51074219 -41.49604797]
[-348.50714111 -37.53739548]
[-338.72189331 -25.49461555]
[-337.91763306 -9.99839592]
[-346.40365601 2.99264908]
[-340.94418335 16.96384048]
[-335.48471069 30.93503380]
[-330.02523804 44.90622330]
[-298.82727051 51.62165070]
[-282.13183594 79.14033508]
[-267.15527344 79.97806549]
[-252.17375183 80.72280121]
[-237.18792725 81.37451172]
[-222.20208740 82.02621460]
[-207.21624756 82.67792511]
[-192.23040771 83.32962799]
[-177.24458313 83.98133087]
[-162.25874329 84.63304138]
[-147.26597595 85.09861755]
[-132.26856995 85.37799072]
[-125.54067993 82.36846924]
[-117.08699799 85.75509644]
[-102.09422302 86.22067261]
[-87.10144806 86.68624878]
[-74.14015198 79.34771729]
[-60.58678436 87.50962067]
[-45.59401321 87.97519684]
[-34.94978333 77.61971283]
[-19.73834801 77.87829590]
[-8.94873810 89.11315918]
[6.04403496 89.57873535]
[21.03680801 90.04431152]
[36.02957916 90.50988770]
[51.02235413 90.97546387]
[66.01512909 91.44104004]
[68.76049805 81.23119354]
[74.60973358 71.93998718]
[83.24356079 64.51737213]
[94.05159760 59.79943085]
[106.17343140 58.41946411]
[118.56668854 60.73395157]
[130.09667969 66.77146912]
[141.67335510 57.23308945]
[153.25003052 47.69470978]
[164.82670593 38.15633392]
[176.40336609 28.61795425]
[181.02008057 20.76811409]
[188.18353271 19.03409004]
[199.87774658 9.64019394]
[205.30722046 -5.83407068]
[221.47094727 -8.60282421]
[231.74107361 4.18218946]
[225.55256653 19.36884499]
[209.27163696 21.33441162]
[197.57742310 30.72830772]
[185.94175720 40.19462585]
[174.36508179 49.73300552]
[162.78840637 59.27138519]
[151.21173096 68.80976105]
[139.63505554 78.34813690]
[140.84049988 85.75063324]
[154.17588806 78.88277435]
[164.82846069 89.44321442]
[158.07667542 102.83775330]
[143.25138855 100.55561829]
[144.45683289 107.95811462]
[158.46165466 113.33073425]
[174.11755371 111.04964447]
[183.22911072 122.83219910]
[197.23393250 128.20481873]
[211.23875427 133.57743835]
[225.24357605 138.95005798]
[245.01296997 134.92019653]
[256.47628784 150.51116943]
[270.61019897 155.53436279]
[284.74411011 160.55755615]
[293.85058594 160.48005676]
[299.02169800 165.73187256]
[313.09213257 170.93017578]
[331.17913818 167.40882874]
[341.84188843 181.36143494]
[355.97579956 186.38462830]
[370.10971069 191.40783691]
[384.24362183 196.43103027]
[398.37753296 201.45422363]
[412.54235840 206.38955688]
[426.73754883 211.23686218]
[440.93273926 216.08416748]
[455.12796021 220.93147278]
[470.10501099 215.18107605]
[483.86538696 223.42921448]
[485.85327148 239.34863281]
[474.54376221 250.72731018]
[458.61251831 248.83650208]
[450.28063965 235.12667847]
[436.08544922 230.27937317]
[421.89025879 225.43206787]
[407.69503784 220.58476257]
[400.36941528 221.39524841]
[393.35433960 215.58813477]
[379.22042847 210.56494141]
[365.08651733 205.54174805]
[350.95260620 200.51855469]
[336.81866455 195.49536133]
[325.78097534 200.40315247]
[313.97579956 196.35479736]
[307.89382935 185.00062561]
[293.82336426 179.80232239]
[279.72091675 174.69146729]
[265.58700562 169.66827393]
[251.45309448 164.64508057]
[242.68809509 169.83302307]
[232.29508972 169.34417725]
[223.70088196 163.09890747]
[219.87095642 152.95487976]
[205.86613464 147.58226013]
[191.86131287 142.20964050]
[177.85649109 136.83702087]
[163.20231628 139.50239563]
[153.08901978 127.33555603]
[139.08421326 121.96293640]
[118.34407806 138.21064758]
[93.49240112 139.40551758]
[73.76799774 126.78771210]
[65.54955292 106.43381500]
[50.55677795 105.96823883]
[35.56400299 105.50266266]
[20.57123184 105.03708649]
[5.57845879 104.57151031]
[-9.41431427 104.10593414]
[-20.88022423 114.64968109]
[-36.07839584 113.96394348]
[-46.05958939 102.96797180]
[-61.05236053 102.50239563]
[-75.08603668 109.80763245]
[-87.56702423 101.67902374]
[-102.55979919 101.21344757]
[-117.55257416 100.74787140]
[-132.54794312 100.37538910]
[-147.54534912 100.09601593]
[-153.46751404 102.93612671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 129]
[2 128]
[3 127]
[4 126]
[5 125]
[6 124]
[7 123]
[9 122]
[10 121]
[26 99]
[27 98]
[28 97]
[29 96]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[104 119]
[105 118]
[106 117]
[107 116]
[130 251]
[131 250]
[133 249]
[134 248]
[135 247]
[137 245]
[138 244]
[141 241]
[142 240]
[143 239]
[144 238]
[145 237]
[146 236]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[159 166]
[160 165]
[177 232]
[178 231]
[180 229]
[181 228]
[182 227]
[183 226]
[185 222]
[186 221]
[187 220]
[189 219]
[190 218]
[192 215]
[193 214]
[194 213]
[195 212]
[196 211]
[197 209]
[198 208]
[199 207]
[200 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
