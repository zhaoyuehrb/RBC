%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (APOH)
} def

/sequence { (\
GGCUCUGUCUUUUUAGCAGACGAAAACCACUUUGGUAGUGCCAGUGUGACUCAUCCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.017649055 ubox
1 28 0.096426140 ubox
1 42 0.838134446 ubox
1 51 0.020511347 ubox
1 52 0.045906896 ubox
1 55 0.021159196 ubox
1 56 0.205766585 ubox
2 8 0.017746765 ubox
2 17 0.025267489 ubox
2 27 0.098200535 ubox
2 39 0.010050470 ubox
2 41 0.838748484 ubox
2 45 0.005943263 ubox
2 47 0.004227488 ubox
2 50 0.027102065 ubox
2 51 0.033705871 ubox
2 54 0.015989912 ubox
2 55 0.203644098 ubox
3 7 0.017678507 ubox
3 16 0.025225328 ubox
3 19 0.029178450 ubox
3 38 0.011990632 ubox
3 40 0.836693538 ubox
3 44 0.006382200 ubox
3 46 0.004391286 ubox
4 15 0.023572576 ubox
4 18 0.029389791 ubox
4 20 0.747448196 ubox
4 23 0.183738195 ubox
4 37 0.012868741 ubox
4 43 0.004645090 ubox
4 49 0.007465353 ubox
5 16 0.033147299 ubox
5 19 0.811838945 ubox
5 22 0.188722697 ubox
5 38 0.451779308 ubox
5 44 0.004860192 ubox
5 48 0.006052748 ubox
6 15 0.033522693 ubox
6 18 0.812341308 ubox
6 22 0.298927590 ubox
6 37 0.399212271 ubox
6 43 0.004889419 ubox
6 53 0.005203262 ubox
7 14 0.033354779 ubox
7 17 0.812829464 ubox
7 21 0.567079998 ubox
7 27 0.004355213 ubox
7 30 0.004061276 ubox
7 36 0.073234129 ubox
7 42 0.004791866 ubox
7 50 0.075816189 ubox
7 52 0.003941839 ubox
7 58 0.003604092 ubox
8 16 0.495028742 ubox
8 20 0.567776752 ubox
8 23 0.022454797 ubox
8 26 0.004323887 ubox
8 29 0.004094674 ubox
8 35 0.052373346 ubox
8 49 0.075897579 ubox
8 57 0.003448467 ubox
9 16 0.637719287 ubox
9 19 0.567773996 ubox
9 22 0.023898500 ubox
9 34 0.054571002 ubox
9 35 0.039112423 ubox
9 48 0.075703194 ubox
10 15 0.627685594 ubox
10 16 0.017169601 ubox
10 18 0.545857491 ubox
10 19 0.006859777 ubox
10 20 0.011694131 ubox
10 23 0.004577592 ubox
10 24 0.005944613 ubox
10 25 0.020093191 ubox
10 26 0.020425739 ubox
10 34 0.037361931 ubox
11 15 0.037923242 ubox
11 18 0.041142362 ubox
11 19 0.012033610 ubox
11 20 0.020080183 ubox
11 22 0.004636903 ubox
11 23 0.006486398 ubox
11 24 0.022211660 ubox
11 25 0.025915013 ubox
11 26 0.013353011 ubox
11 44 0.003809946 ubox
12 18 0.013879031 ubox
12 19 0.020119069 ubox
12 20 0.006455953 ubox
12 22 0.006218538 ubox
12 23 0.022574017 ubox
12 24 0.026866026 ubox
12 25 0.016188709 ubox
12 43 0.004060582 ubox
12 44 0.005102435 ubox
13 18 0.017358614 ubox
13 19 0.006948555 ubox
13 20 0.007906863 ubox
13 22 0.022284111 ubox
13 23 0.026981243 ubox
13 24 0.016739922 ubox
13 25 0.003464828 ubox
13 38 0.003942141 ubox
13 43 0.005236788 ubox
13 44 0.053341959 ubox
14 18 0.006552955 ubox
14 19 0.008032152 ubox
14 22 0.026340696 ubox
14 23 0.016668041 ubox
14 24 0.003439770 ubox
14 34 0.003455749 ubox
14 37 0.007142592 ubox
14 43 0.052617518 ubox
15 31 0.023119921 ubox
15 33 0.004480229 ubox
15 36 0.009726802 ubox
15 51 0.004686021 ubox
16 30 0.023276583 ubox
16 32 0.004258815 ubox
16 39 0.006825028 ubox
16 41 0.076153582 ubox
16 47 0.003346011 ubox
16 50 0.004986694 ubox
17 34 0.011883078 ubox
17 35 0.003190729 ubox
17 38 0.006973763 ubox
17 40 0.076227119 ubox
17 46 0.003370231 ubox
17 48 0.006370706 ubox
18 31 0.005492096 ubox
18 33 0.012113774 ubox
18 39 0.075274203 ubox
18 45 0.003306612 ubox
18 47 0.006484651 ubox
19 30 0.005617960 ubox
19 32 0.011911657 ubox
19 55 0.017597150 ubox
20 31 0.011156525 ubox
20 36 0.093681285 ubox
20 39 0.049915975 ubox
20 45 0.008226396 ubox
20 47 0.004782007 ubox
20 54 0.018890766 ubox
21 34 0.120624996 ubox
21 35 0.103861555 ubox
21 38 0.058380183 ubox
21 40 0.015670700 ubox
21 44 0.009457205 ubox
21 46 0.005512891 ubox
21 48 0.004339194 ubox
22 32 0.004982803 ubox
22 33 0.121879512 ubox
22 39 0.026905766 ubox
22 45 0.005485448 ubox
22 47 0.004148802 ubox
22 52 0.142203695 ubox
22 55 0.106973562 ubox
23 31 0.005421810 ubox
23 32 0.121832891 ubox
23 33 0.102265192 ubox
23 51 0.139663682 ubox
23 54 0.104913965 ubox
24 31 0.111428308 ubox
24 32 0.102647946 ubox
24 33 0.016871100 ubox
25 31 0.096210913 ubox
25 32 0.017863488 ubox
25 33 0.006216323 ubox
26 31 0.015272062 ubox
26 32 0.005990497 ubox
26 36 0.784177445 ubox
26 39 0.099307890 ubox
26 45 0.008960755 ubox
26 47 0.020095262 ubox
27 35 0.813881250 ubox
27 38 0.102043968 ubox
27 44 0.009557766 ubox
27 46 0.014888865 ubox
28 34 0.813971068 ubox
28 40 0.062691228 ubox
28 46 0.058323823 ubox
28 48 0.509841709 ubox
29 33 0.659670838 ubox
29 36 0.107594092 ubox
29 39 0.099123856 ubox
29 45 0.062646352 ubox
29 47 0.512130310 ubox
30 35 0.110042917 ubox
30 38 0.102148456 ubox
30 44 0.062633290 ubox
30 46 0.512121173 ubox
31 37 0.100870831 ubox
31 38 0.004496125 ubox
31 43 0.042438888 ubox
31 44 0.017889063 ubox
32 37 0.007260952 ubox
32 43 0.015778722 ubox
32 44 0.430085016 ubox
33 43 0.524800817 ubox
33 57 0.011799020 ubox
34 39 0.003442670 ubox
34 42 0.530054599 ubox
34 55 0.003241333 ubox
34 56 0.013334413 ubox
35 41 0.529896808 ubox
35 54 0.003406324 ubox
35 55 0.013317042 ubox
36 40 0.495711036 ubox
36 53 0.005661438 ubox
37 51 0.014887697 ubox
38 50 0.015554709 ubox
38 54 0.006578202 ubox
38 58 0.045624216 ubox
39 48 0.004629515 ubox
39 49 0.014849649 ubox
39 53 0.006963924 ubox
39 57 0.045677325 ubox
40 47 0.010772750 ubox
40 52 0.006983036 ubox
40 56 0.045641816 ubox
41 46 0.011068130 ubox
42 48 0.004618217 ubox
43 47 0.003907947 ubox
43 51 0.034869884 ubox
44 50 0.037179169 ubox
44 54 0.084759616 ubox
44 58 0.688543741 ubox
45 49 0.033507761 ubox
45 53 0.087781677 ubox
45 57 0.689355103 ubox
45 59 0.377793556 ubox
46 52 0.088615202 ubox
46 54 0.030749656 ubox
46 56 0.689186153 ubox
46 58 0.480461291 ubox
47 53 0.062417156 ubox
47 57 0.480584294 ubox
47 59 0.006396621 ubox
48 52 0.065288566 ubox
48 55 0.677411687 ubox
48 56 0.474257979 ubox
48 58 0.008358144 ubox
49 54 0.604268367 ubox
1 42 0.9500000 lbox
2 41 0.9500000 lbox
3 40 0.9500000 lbox
4 20 0.9500000 lbox
5 19 0.9500000 lbox
6 18 0.9500000 lbox
7 17 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
26 36 0.9500000 lbox
27 35 0.9500000 lbox
28 34 0.9500000 lbox
29 33 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
46 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
