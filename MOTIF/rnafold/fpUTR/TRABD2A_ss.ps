%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGCUGCCGCCUAGGCGCGGGGCUGACCUGCGGGGGUGGGGUGGGGGGAGGGAGGUCGAGGCCCGGCCCCACGUGGCCGCUGCUGCCGGGCUCACCCCAGCCCCGCCCGGAGGCGCCCCGCGGCCCCGGCUAGCCAGGGCGGGCGGCCACCUCUGCCCUACUCCUUCCCUCCGCGUUCCGGGCCUCGGAGCCGCCUUGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[112.36207581 714.79241943]
[112.13442993 699.79418945]
[111.90679169 684.79589844]
[111.67914581 669.79760742]
[96.78050995 660.32055664]
[90.49572754 643.65130615]
[95.51676941 626.39508057]
[110.01519775 615.51123047]
[109.33248138 600.52673340]
[101.02391815 588.16485596]
[108.12509155 574.02679443]
[107.44237518 559.04235840]
[106.64596558 544.06353760]
[105.73592377 529.09112549]
[104.71228790 514.12609863]
[103.57511902 499.16928101]
[102.43795013 484.21243286]
[101.30078888 469.25561523]
[92.62088776 457.15155029]
[99.28971100 442.80450439]
[98.15254974 427.84768677]
[97.01538086 412.89083862]
[95.87821198 397.93402100]
[94.74105072 382.97717285]
[93.60388184 368.02035522]
[83.02085876 378.65048218]
[68.02186584 378.82434082]
[57.19528961 368.44235229]
[56.74039078 353.44927979]
[66.91764832 342.43002319]
[81.89959717 341.69427490]
[93.10720825 351.66244507]
[93.33485413 336.66418457]
[93.56249237 321.66589355]
[93.79013824 306.66763306]
[94.01778412 291.66934204]
[94.24542236 276.67108154]
[94.47306824 261.67282104]
[83.84812927 245.51954651]
[94.44760895 228.37513733]
[94.21996307 213.37686157]
[93.99231720 198.37858582]
[93.76467896 183.38031006]
[93.53703308 168.38204956]
[93.30939484 153.38377380]
[93.08174896 138.38549805]
[92.85410309 123.38722992]
[92.62646484 108.38895416]
[92.28501892 93.39283752]
[91.82978058 78.39974976]
[91.37454987 63.40665817]
[90.91931152 48.41357040]
[90.46408081 33.42047882]
[81.62206268 24.02715683]
[81.55326843 11.52798271]
[89.74906158 2.62836647]
[89.52141571 -12.36990643]
[89.29377747 -27.36817932]
[89.06613159 -42.36645126]
[86.38288116 -46.85116959]
[85.75332642 -51.45602417]
[86.87884521 -55.37789917]
[89.18513489 -58.04889679]
[89.64037323 -73.04198456]
[90.09560394 -88.03507996]
[90.55083466 -103.02816772]
[91.00607300 -118.02125549]
[88.13785553 -126.69708252]
[91.58370209 -133.23794556]
[92.26641846 -148.22239685]
[92.94913483 -163.20686340]
[80.12042236 -171.53579712]
[73.22861481 -185.07832336]
[74.03536224 -200.15199280]
[82.22399902 -212.71392822]
[95.51145172 -219.44512939]
[96.19417572 -234.42958069]
[96.87689209 -249.41403198]
[97.55960846 -264.39849854]
[98.24233246 -279.38293457]
[98.92504883 -294.36740112]
[88.54850769 -305.98483276]
[89.45433807 -321.17147827]
[100.59375000 -330.99234009]
[101.27646637 -345.97680664]
[101.95919037 -360.96124268]
[102.64190674 -375.94570923]
[103.32462311 -390.93017578]
[96.22344971 -405.06820679]
[104.53201294 -417.43011475]
[105.21472931 -432.41458130]
[105.89744568 -447.39901733]
[106.58016968 -462.38348389]
[96.18257904 -451.57189941]
[81.43695831 -448.82113647]
[67.84061432 -455.15670776]
[60.46238327 -468.21664429]
[62.05294418 -483.13208008]
[72.01932526 -494.34237671]
[86.64595795 -497.66830444]
[100.47989655 -491.86984253]
[108.36373138 -479.10873413]
[110.85628510 -493.90020752]
[113.34883881 -508.69165039]
[115.72907257 -523.50158691]
[117.99686432 -538.32916260]
[111.53782654 -553.40277100]
[121.57772827 -566.36938477]
[137.78837585 -563.89001465]
[143.49363708 -548.51531982]
[132.82444763 -536.06140137]
[130.55665588 -521.23382568]
[132.65350342 -514.14440918]
[128.14028931 -506.19909668]
[125.64774323 -491.40765381]
[123.15518951 -476.61618042]
[121.56462097 -461.70077515]
[120.88190460 -446.71630859]
[120.19918823 -431.73184204]
[119.51646423 -416.74740601]
[126.66647339 -403.68115234]
[118.30908203 -390.24743652]
[117.62635803 -375.26300049]
[116.94364166 -360.27853394]
[116.26092529 -345.29406738]
[115.57820129 -330.30963135]
[125.77840424 -319.51651001]
[125.29948425 -304.31039429]
[113.90950775 -293.68469238]
[113.22678375 -278.70022583]
[112.54406738 -263.71575928]
[111.86135101 -248.73130798]
[111.17862701 -233.74685669]
[110.49591064 -218.76240540]
[123.11621857 -210.85079956]
[130.12860107 -197.59628296]
[129.56127930 -182.51170349]
[121.46655273 -169.65199280]
[107.93359375 -162.52413940]
[107.25087738 -147.53968811]
[106.56815338 -132.55522156]
[105.99916077 -117.56602478]
[105.54393005 -102.57293701]
[105.08869171 -87.57984161]
[104.63346100 -72.58675385]
[104.17823029 -57.59366226]
[104.06440735 -42.59409332]
[104.29204559 -27.59582138]
[104.51969147 -12.59754944]
[104.74732971 2.40072346]
[114.55053711 16.95466423]
[105.45716858 32.96524429]
[105.91240692 47.95833588]
[106.36763763 62.95142746]
[106.82287598 77.94451904]
[107.27810669 92.93760681]
[110.65193939 100.26112366]
[107.62473297 108.16130829]
[107.85237885 123.15958405]
[108.08002472 138.15785217]
[108.30766296 153.15612793]
[108.53530884 168.15440369]
[108.76294708 183.15267944]
[108.99059296 198.15093994]
[109.21823883 213.14921570]
[109.44587708 228.14749146]
[117.68035889 235.26002502]
[120.57965851 245.51954651]
[117.41846466 255.47123718]
[109.47133636 261.90045166]
[109.24369812 276.89871216]
[109.01605225 291.89700317]
[108.78841400 306.89526367]
[108.56076813 321.89355469]
[108.33312225 336.89181519]
[108.10548401 351.89007568]
[108.56071472 366.88317871]
[109.69788361 381.83999634]
[110.83504486 396.79684448]
[111.97221375 411.75366211]
[113.10938263 426.71051025]
[114.24654388 441.66732788]
[123.00778198 454.84121704]
[116.25762177 468.11843872]
[117.39478302 483.07528687]
[118.53195190 498.03210449]
[119.66912079 512.98895264]
[123.44113159 521.31170654]
[120.70829010 528.18109131]
[121.61833954 543.15344238]
[125.26361084 551.53253174]
[122.42682648 558.35961914]
[123.10955048 573.34411621]
[131.46693420 586.77777100]
[124.31693268 599.84405518]
[124.99965668 614.82849121]
[136.25581360 620.27429199]
[144.08212280 629.93377686]
[147.04039001 641.93444824]
[144.62857056 653.98315430]
[137.36476135 663.80438232]
[126.67742157 669.57000732]
[126.90505981 684.56823730]
[127.13270569 699.56652832]
[127.36035156 714.56481934]
[129.84320068 733.78680420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[8 196]
[9 195]
[11 193]
[12 192]
[13 190]
[14 189]
[15 187]
[16 186]
[17 185]
[18 184]
[20 182]
[21 181]
[22 180]
[23 179]
[24 178]
[25 177]
[32 176]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 170]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[48 158]
[49 156]
[50 155]
[51 154]
[52 153]
[53 152]
[56 150]
[57 149]
[58 148]
[59 147]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[69 141]
[70 140]
[71 139]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[90 120]
[91 119]
[92 118]
[93 117]
[102 116]
[103 115]
[104 114]
[105 112]
[106 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
