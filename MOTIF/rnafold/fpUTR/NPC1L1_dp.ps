%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NPC1L1)
} def

/sequence { (\
CUUGGCUGUUCCUGAGGCCUGGCCUGGCUCCCCGCUGACCCCUUCCCAGACCUGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.110891179 ubox
1 17 0.005324616 ubox
1 22 0.183021251 ubox
1 27 0.079368016 ubox
1 49 0.004108368 ubox
1 55 0.097833382 ubox
1 56 0.027296193 ubox
2 15 0.114436340 ubox
2 16 0.005355618 ubox
2 21 0.176628234 ubox
2 22 0.017868278 ubox
2 26 0.076989608 ubox
2 27 0.007769436 ubox
2 38 0.185159007 ubox
2 48 0.003714223 ubox
2 49 0.005957642 ubox
2 54 0.092811140 ubox
2 55 0.027926689 ubox
3 14 0.114293969 ubox
3 15 0.005395742 ubox
3 21 0.019271968 ubox
3 26 0.008828486 ubox
3 34 0.034586540 ubox
3 37 0.201642301 ubox
3 48 0.007174176 ubox
3 54 0.024478155 ubox
4 10 0.014245201 ubox
4 11 0.065336613 ubox
4 12 0.101853851 ubox
4 13 0.110271877 ubox
4 19 0.521176966 ubox
4 20 0.006262976 ubox
4 24 0.227350296 ubox
4 29 0.060556246 ubox
4 30 0.012527114 ubox
4 31 0.018700047 ubox
4 32 0.039017723 ubox
4 33 0.046793964 ubox
4 36 0.220114412 ubox
4 40 0.052814978 ubox
4 41 0.061814187 ubox
4 42 0.099455963 ubox
4 43 0.031843808 ubox
4 47 0.007461959 ubox
4 52 0.106965892 ubox
4 53 0.016354699 ubox
5 9 0.011874403 ubox
5 10 0.047460839 ubox
5 11 0.102918572 ubox
5 12 0.109862065 ubox
5 18 0.522211775 ubox
5 19 0.004702474 ubox
5 23 0.227713179 ubox
5 28 0.066745118 ubox
5 30 0.018775696 ubox
5 31 0.039379887 ubox
5 32 0.046458658 ubox
5 35 0.222682374 ubox
5 39 0.052878496 ubox
5 40 0.061857460 ubox
5 41 0.099378055 ubox
5 42 0.034382868 ubox
5 45 0.003207184 ubox
5 46 0.007409786 ubox
5 51 0.107015000 ubox
5 52 0.016195239 ubox
6 16 0.028379956 ubox
6 17 0.521601889 ubox
6 22 0.227694422 ubox
6 27 0.066774121 ubox
6 34 0.221794242 ubox
6 49 0.105918631 ubox
6 55 0.016165421 ubox
6 56 0.006257883 ubox
7 14 0.007966698 ubox
7 15 0.038709952 ubox
7 16 0.518383767 ubox
7 21 0.222671851 ubox
7 26 0.065920293 ubox
7 34 0.016268950 ubox
7 37 0.018783224 ubox
7 48 0.105874469 ubox
7 54 0.015883700 ubox
7 55 0.005077547 ubox
8 13 0.015631004 ubox
8 18 0.074793473 ubox
8 20 0.160766868 ubox
8 23 0.003569812 ubox
8 25 0.035472898 ubox
8 28 0.046092382 ubox
8 33 0.074840041 ubox
8 35 0.048858986 ubox
8 36 0.012216907 ubox
8 39 0.110525581 ubox
8 47 0.105391633 ubox
8 51 0.016230453 ubox
8 53 0.009452171 ubox
9 15 0.048694645 ubox
9 16 0.009646506 ubox
9 17 0.072925500 ubox
9 27 0.041713287 ubox
9 34 0.048073512 ubox
9 38 0.109938329 ubox
9 50 0.015552882 ubox
9 56 0.010857527 ubox
10 14 0.049158102 ubox
10 15 0.016036091 ubox
10 16 0.063534135 ubox
10 17 0.032903593 ubox
10 26 0.039061083 ubox
10 27 0.011418403 ubox
10 37 0.104956518 ubox
10 38 0.022160376 ubox
10 49 0.009037316 ubox
10 50 0.012837226 ubox
10 55 0.014283847 ubox
10 56 0.124531408 ubox
11 16 0.038114051 ubox
11 17 0.207272191 ubox
11 22 0.045644751 ubox
11 26 0.014834114 ubox
11 27 0.090160139 ubox
11 37 0.026410559 ubox
11 49 0.009935690 ubox
11 54 0.016064574 ubox
11 55 0.201832954 ubox
11 56 0.438836695 ubox
12 16 0.206066547 ubox
12 21 0.045799743 ubox
12 26 0.090247001 ubox
12 27 0.071761580 ubox
12 49 0.031335007 ubox
12 54 0.201410809 ubox
12 55 0.448380592 ubox
12 56 0.539992539 ubox
13 26 0.068072545 ubox
13 34 0.084725822 ubox
13 48 0.033129208 ubox
13 54 0.422536966 ubox
13 55 0.554995223 ubox
14 25 0.024150248 ubox
14 30 0.118457642 ubox
14 33 0.094277305 ubox
14 44 0.082743977 ubox
14 45 0.048790691 ubox
14 47 0.033163763 ubox
14 53 0.139289622 ubox
15 25 0.219382657 ubox
15 29 0.112275145 ubox
15 36 0.003895621 ubox
15 43 0.087094254 ubox
15 44 0.047840377 ubox
15 53 0.727745529 ubox
16 24 0.226074548 ubox
16 28 0.079466323 ubox
16 29 0.144824240 ubox
16 30 0.033178776 ubox
16 31 0.022883330 ubox
16 32 0.017550530 ubox
16 33 0.007178335 ubox
16 35 0.003597207 ubox
16 36 0.008705008 ubox
16 40 0.011910464 ubox
16 41 0.016646536 ubox
16 42 0.087826281 ubox
16 43 0.046404858 ubox
16 45 0.004684032 ubox
16 46 0.036213292 ubox
16 52 0.748648220 ubox
16 53 0.003906639 ubox
17 23 0.226121473 ubox
17 28 0.195295057 ubox
17 29 0.003923320 ubox
17 30 0.016617997 ubox
17 31 0.014684747 ubox
17 32 0.006178525 ubox
17 35 0.010013872 ubox
17 39 0.011979107 ubox
17 40 0.017819208 ubox
17 41 0.087296035 ubox
17 42 0.046387286 ubox
17 44 0.004446054 ubox
17 45 0.036174317 ubox
17 51 0.747785637 ubox
17 52 0.004270478 ubox
18 22 0.224477364 ubox
18 27 0.211687037 ubox
18 34 0.010029194 ubox
18 55 0.054331577 ubox
18 56 0.026143752 ubox
19 26 0.211646592 ubox
19 49 0.747161860 ubox
19 54 0.054479850 ubox
19 55 0.027094641 ubox
20 34 0.013927416 ubox
20 37 0.120675129 ubox
20 48 0.748932993 ubox
20 54 0.026477498 ubox
21 25 0.004112705 ubox
21 29 0.049486709 ubox
21 30 0.010997959 ubox
21 31 0.010437914 ubox
21 32 0.015700380 ubox
21 33 0.018869033 ubox
21 36 0.178109789 ubox
21 40 0.192636864 ubox
21 41 0.315631271 ubox
21 42 0.216162889 ubox
21 43 0.024182567 ubox
21 44 0.004375994 ubox
21 45 0.004387974 ubox
21 46 0.051622903 ubox
21 47 0.747375904 ubox
21 52 0.094494043 ubox
21 53 0.012193811 ubox
22 28 0.054435657 ubox
22 29 0.003952712 ubox
22 30 0.010360311 ubox
22 31 0.015799553 ubox
22 32 0.018585381 ubox
22 35 0.183387102 ubox
22 39 0.193159569 ubox
22 40 0.316908262 ubox
22 41 0.215281699 ubox
22 42 0.026359790 ubox
22 43 0.005259011 ubox
22 44 0.005729197 ubox
22 45 0.072170430 ubox
22 46 0.744504784 ubox
22 51 0.094601081 ubox
22 52 0.012019844 ubox
23 27 0.054135078 ubox
23 34 0.182291342 ubox
23 55 0.020240168 ubox
23 56 0.021182340 ubox
24 49 0.096498927 ubox
24 54 0.020236448 ubox
24 55 0.021578662 ubox
25 34 0.071915963 ubox
25 37 0.358604746 ubox
25 48 0.096709594 ubox
25 54 0.021246439 ubox
26 32 0.126110870 ubox
26 33 0.158010513 ubox
26 36 0.506445321 ubox
26 40 0.233427349 ubox
26 41 0.574033720 ubox
26 42 0.421735423 ubox
26 43 0.042294325 ubox
26 44 0.006046357 ubox
26 45 0.008391668 ubox
26 46 0.004308259 ubox
26 47 0.096475197 ubox
26 52 0.021768089 ubox
26 53 0.019271054 ubox
27 31 0.124361816 ubox
27 32 0.156616259 ubox
27 35 0.518355423 ubox
27 39 0.234546130 ubox
27 40 0.578511573 ubox
27 41 0.413640635 ubox
27 42 0.043112414 ubox
27 43 0.003764968 ubox
27 44 0.005831461 ubox
27 45 0.005782474 ubox
27 46 0.095270722 ubox
27 51 0.021805348 ubox
27 52 0.019291032 ubox
28 34 0.518708143 ubox
28 49 0.013458829 ubox
28 56 0.012273542 ubox
29 38 0.713986117 ubox
29 48 0.012623534 ubox
29 50 0.021645004 ubox
29 55 0.011949048 ubox
29 56 0.016896419 ubox
30 37 0.723008560 ubox
30 49 0.021134434 ubox
30 54 0.012171524 ubox
30 55 0.032827236 ubox
30 56 0.087010049 ubox
31 54 0.032830124 ubox
31 55 0.089027815 ubox
31 56 0.121567794 ubox
32 54 0.088793840 ubox
32 55 0.123709100 ubox
33 54 0.123732801 ubox
34 53 0.118112226 ubox
35 49 0.155840438 ubox
36 48 0.156122800 ubox
37 44 0.015116688 ubox
37 45 0.045293294 ubox
37 47 0.155659214 ubox
38 43 0.015882455 ubox
38 44 0.043984076 ubox
39 55 0.012316652 ubox
39 56 0.064276250 ubox
40 54 0.012308235 ubox
40 55 0.064670068 ubox
40 56 0.126911721 ubox
41 54 0.064174621 ubox
41 55 0.129704719 ubox
41 56 0.022337398 ubox
42 49 0.022165598 ubox
42 54 0.129854959 ubox
42 55 0.022834887 ubox
42 56 0.003973861 ubox
43 48 0.020336127 ubox
43 49 0.004136918 ubox
43 50 0.021280027 ubox
43 54 0.022438009 ubox
44 48 0.003543248 ubox
44 49 0.019892807 ubox
44 50 0.051331204 ubox
44 55 0.003737152 ubox
44 56 0.016865494 ubox
45 49 0.052083428 ubox
45 54 0.004398239 ubox
45 55 0.026378702 ubox
45 56 0.592843041 ubox
46 54 0.025327862 ubox
46 55 0.606454994 ubox
46 56 0.012229221 ubox
47 54 0.606473348 ubox
47 55 0.012238001 ubox
48 53 0.546414318 ubox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
15 53 0.9500000 lbox
16 52 0.9500000 lbox
17 51 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
29 38 0.9500000 lbox
30 37 0.9500000 lbox
showpage
end
%%EOF
