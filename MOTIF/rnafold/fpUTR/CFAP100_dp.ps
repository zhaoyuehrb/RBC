%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CFAP100)
} def

/sequence { (\
AGCGCGGAGGCUUCGGAGCGAGCCGGGGCAGUCGGGGUCGGUGAGGAUCUCCUUUAGAAGAGGAGAAGCCUUGCAUCAACCUCUUGGGCCUCAGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.010747136 ubox
2 11 0.012393699 ubox
2 19 0.018875597 ubox
2 29 0.004455068 ubox
2 32 0.011369653 ubox
2 89 0.010744442 ubox
2 95 0.208136022 ubox
3 10 0.012400470 ubox
3 18 0.018888090 ubox
3 20 0.014518916 ubox
3 28 0.004458656 ubox
3 31 0.011778177 ubox
3 34 0.004222933 ubox
3 88 0.010813805 ubox
3 94 0.208200410 ubox
4 11 0.007938598 ubox
4 19 0.014726091 ubox
4 23 0.003588449 ubox
4 29 0.017819885 ubox
4 33 0.004621246 ubox
4 95 0.964182855 ubox
5 10 0.007949590 ubox
5 15 0.017222645 ubox
5 18 0.014648841 ubox
5 22 0.003606514 ubox
5 28 0.017854766 ubox
5 34 0.055887685 ubox
5 86 0.011046466 ubox
5 94 0.962507717 ubox
6 14 0.017575664 ubox
6 24 0.004077789 ubox
6 33 0.063611071 ubox
6 85 0.008656346 ubox
6 92 0.036817300 ubox
6 96 0.033325766 ubox
7 13 0.016921251 ubox
7 14 0.011089666 ubox
7 23 0.004045774 ubox
7 32 0.062009053 ubox
7 33 0.030589683 ubox
7 83 0.003233857 ubox
7 84 0.005004514 ubox
7 91 0.016136054 ubox
7 92 0.985625699 ubox
7 95 0.031931894 ubox
8 12 0.014430641 ubox
8 13 0.010433681 ubox
8 32 0.030517226 ubox
8 82 0.003217120 ubox
8 91 0.994242215 ubox
9 24 0.065035365 ubox
9 81 0.003169740 ubox
9 90 0.994660727 ubox
9 96 0.011845095 ubox
10 19 0.007935065 ubox
10 23 0.065112201 ubox
10 29 0.075813029 ubox
10 89 0.994473864 ubox
10 95 0.011851577 ubox
11 18 0.008016763 ubox
11 22 0.064940851 ubox
11 28 0.076246751 ubox
11 87 0.012031541 ubox
11 88 0.994280193 ubox
11 94 0.011846677 ubox
12 17 0.007464874 ubox
12 21 0.055923739 ubox
12 22 0.005705004 ubox
12 27 0.077145939 ubox
12 86 0.016680437 ubox
12 87 0.986624131 ubox
12 88 0.012143453 ubox
12 93 0.010977124 ubox
13 20 0.042815749 ubox
13 21 0.035161291 ubox
13 26 0.081140103 ubox
13 86 0.935417628 ubox
13 87 0.092686914 ubox
14 20 0.048323258 ubox
14 25 0.086167372 ubox
14 34 0.004037154 ubox
14 86 0.131193617 ubox
14 87 0.011813734 ubox
15 19 0.045571701 ubox
15 24 0.086698380 ubox
15 33 0.006176447 ubox
15 81 0.012928507 ubox
15 82 0.011193572 ubox
15 83 0.008557195 ubox
15 84 0.971998950 ubox
15 85 0.093308282 ubox
16 23 0.086461504 ubox
16 32 0.006043285 ubox
16 33 0.005663343 ubox
16 80 0.012911292 ubox
16 81 0.011645823 ubox
16 82 0.006202181 ubox
16 83 0.992458066 ubox
16 84 0.017289764 ubox
16 85 0.020314594 ubox
17 32 0.005321921 ubox
17 82 0.991202639 ubox
17 84 0.021754199 ubox
18 29 0.013804510 ubox
18 32 0.004042232 ubox
18 81 0.979523922 ubox
18 83 0.021555831 ubox
19 28 0.013822037 ubox
19 31 0.004747031 ubox
19 34 0.005822261 ubox
19 40 0.979803582 ubox
19 41 0.003414600 ubox
20 33 0.006158363 ubox
20 39 0.992788898 ubox
20 77 0.022853683 ubox
21 32 0.005882520 ubox
21 38 0.990324750 ubox
21 76 0.022311504 ubox
22 29 0.008916866 ubox
22 38 0.011594310 ubox
22 74 0.011317700 ubox
22 95 0.028146780 ubox
23 28 0.008904801 ubox
23 35 0.134759772 ubox
23 36 0.983706656 ubox
23 37 0.020077441 ubox
23 73 0.008396987 ubox
23 94 0.028212055 ubox
24 34 0.160593025 ubox
24 35 0.979599982 ubox
24 36 0.019455281 ubox
24 73 0.017415762 ubox
25 33 0.182421013 ubox
25 72 0.019032173 ubox
25 92 0.069030623 ubox
26 32 0.174274680 ubox
26 33 0.966316242 ubox
26 71 0.019339796 ubox
26 91 0.069654779 ubox
27 32 0.872244003 ubox
27 33 0.058051918 ubox
27 70 0.019388068 ubox
27 90 0.069963054 ubox
28 32 0.039887099 ubox
28 69 0.019397937 ubox
28 89 0.069966561 ubox
29 68 0.019365814 ubox
29 86 0.020346095 ubox
29 88 0.069941283 ubox
30 85 0.020473395 ubox
31 84 0.016339091 ubox
31 89 0.016169724 ubox
32 41 0.009223150 ubox
32 44 0.005041925 ubox
32 47 0.003354022 ubox
32 66 0.003727441 ubox
32 87 0.007635444 ubox
32 88 0.016163211 ubox
33 40 0.012451224 ubox
33 43 0.005387132 ubox
33 46 0.003481242 ubox
33 65 0.003783223 ubox
33 86 0.009867431 ubox
33 87 0.016155415 ubox
34 39 0.012340305 ubox
34 42 0.005130651 ubox
34 51 0.005153640 ubox
34 81 0.005676533 ubox
34 82 0.007098049 ubox
34 83 0.095636710 ubox
34 84 0.007844770 ubox
34 85 0.004674351 ubox
34 92 0.005502790 ubox
35 50 0.006612212 ubox
35 80 0.005831485 ubox
35 81 0.011429044 ubox
35 82 0.110399337 ubox
35 83 0.009858707 ubox
35 91 0.005781325 ubox
36 49 0.008124894 ubox
36 77 0.010194325 ubox
36 80 0.011924576 ubox
36 81 0.114148430 ubox
36 90 0.005848008 ubox
37 48 0.010953189 ubox
37 76 0.010117904 ubox
37 80 0.114504401 ubox
37 89 0.005848577 ubox
38 47 0.012573603 ubox
38 75 0.009394449 ubox
38 79 0.112904691 ubox
38 88 0.005807807 ubox
39 45 0.003243457 ubox
39 46 0.012857950 ubox
39 87 0.005511910 ubox
40 77 0.107176431 ubox
40 81 0.005430616 ubox
41 74 0.990243946 ubox
41 76 0.106821555 ubox
41 80 0.011438243 ubox
42 73 0.989174993 ubox
42 75 0.106568034 ubox
42 78 0.006776019 ubox
42 79 0.010722306 ubox
43 72 0.989403732 ubox
43 74 0.102049581 ubox
43 77 0.007887287 ubox
43 83 0.004211873 ubox
44 71 0.997528061 ubox
44 72 0.047319107 ubox
44 76 0.006369899 ubox
44 82 0.004217523 ubox
45 70 0.998729644 ubox
45 71 0.044393440 ubox
45 81 0.004221040 ubox
46 69 0.997278862 ubox
46 70 0.044513651 ubox
46 80 0.004201250 ubox
48 66 0.980357099 ubox
49 65 0.999300712 ubox
50 64 0.999794850 ubox
51 63 0.999960422 ubox
52 60 0.003262518 ubox
52 62 0.999939708 ubox
52 63 0.006076494 ubox
52 65 0.003222808 ubox
53 59 0.005961331 ubox
53 60 0.022097523 ubox
53 61 0.997515662 ubox
53 62 0.007753163 ubox
53 64 0.003244322 ubox
54 58 0.009228618 ubox
54 59 0.029255650 ubox
54 60 0.980885330 ubox
54 61 0.042997785 ubox
54 63 0.003233473 ubox
55 59 0.748106832 ubox
55 60 0.057630139 ubox
55 61 0.003582091 ubox
68 74 0.006481566 ubox
69 73 0.006441753 ubox
71 79 0.003167535 ubox
72 78 0.006015702 ubox
73 77 0.008635510 ubox
76 87 0.004313446 ubox
77 86 0.013158597 ubox
78 85 0.012917612 ubox
79 84 0.010489114 ubox
80 87 0.020460957 ubox
81 86 0.020850896 ubox
83 99 0.053203772 ubox
84 98 0.061174546 ubox
84 99 0.006703773 ubox
85 97 0.062371711 ubox
85 98 0.008834831 ubox
86 96 0.059460363 ubox
87 95 0.056025808 ubox
87 96 0.044749083 ubox
88 95 0.049004263 ubox
89 94 0.052705934 ubox
4 95 0.9500000 lbox
5 94 0.9500000 lbox
7 92 0.9500000 lbox
8 91 0.9500000 lbox
9 90 0.9500000 lbox
10 89 0.9500000 lbox
11 88 0.9500000 lbox
12 87 0.9500000 lbox
13 86 0.9500000 lbox
15 84 0.9500000 lbox
16 83 0.9500000 lbox
17 82 0.9500000 lbox
18 81 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
41 74 0.9500000 lbox
42 73 0.9500000 lbox
43 72 0.9500000 lbox
44 71 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
48 66 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
54 60 0.9500000 lbox
55 59 0.9500000 lbox
showpage
end
%%EOF
