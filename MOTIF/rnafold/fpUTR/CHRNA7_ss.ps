%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUUAAAGGCGCGCGAGCCGAGCGGCGAGGUGCCUCUGUGGCCGCAGGCGCAGGCCCGGGCGACAGCCGAGACGUGGAGCGCGCCGGCUCGCUGCAGCUCCGGGACUCAAC\
) } def
/len { sequence length } bind def

/coor [
[140.87670898 420.92312622]
[138.38613892 406.13134766]
[135.89558411 391.33953857]
[133.40501404 376.54776001]
[122.75477600 372.01879883]
[115.59085083 362.77612305]
[113.82503510 351.09408569]
[118.02204895 339.92080688]
[127.22660828 332.13424683]
[125.56194305 317.22692871]
[123.89727783 302.31958008]
[122.02555847 287.43679810]
[119.94713593 272.58151245]
[117.66242218 257.75653076]
[115.17185974 242.96473694]
[112.68128967 228.17294312]
[110.19072723 213.38114929]
[107.70016479 198.58935547]
[105.20959473 183.79756165]
[102.71903229 169.00576782]
[100.22846222 154.21398926]
[95.95453644 148.05397034]
[97.88023376 138.97685242]
[95.80181885 124.12154388]
[93.72339630 109.26624298]
[91.43868256 94.44126129]
[88.94812012 79.64946747]
[72.55950928 72.17284393]
[63.91897964 56.54425049]
[66.26140594 38.99722290]
[78.48251343 26.40549660]
[75.17374420 11.77497768]
[59.39163208 7.07379055]
[48.16780853 -4.84823084]
[44.46889114 -20.70309830]
[49.20373535 -36.18235779]
[61.00234985 -47.12784958]
[57.28816223 -61.66073608]
[53.57397079 -76.19362640]
[49.85978317 -90.72650909]
[38.94633484 -102.18108368]
[43.29125595 -116.42786407]
[39.57706451 -130.96075439]
[35.86287689 -145.49363708]
[23.49318886 -151.03285217]
[16.71071053 -162.54066467]
[17.82333565 -175.65594482]
[26.19516945 -185.55815125]
[22.88640213 -200.18867493]
[19.57763672 -214.81919861]
[8.05596447 -226.48893738]
[12.66174603 -242.22802734]
[28.65694809 -245.84542847]
[39.58707809 -233.61987305]
[34.20815277 -218.12796021]
[37.51692200 -203.49743652]
[40.82568741 -188.86692810]
[55.38376999 -180.57510376]
[59.58929825 -164.01089478]
[50.39576340 -149.20782471]
[54.10995102 -134.67494202]
[57.82414246 -120.14205933]
[68.47193146 -109.72697449]
[64.39266968 -94.44069672]
[68.10685730 -79.90781403]
[71.82104492 -65.37492371]
[75.53524017 -50.84203720]
[88.97024536 -48.00056839]
[99.90429688 -39.58336639]
[106.14768219 -27.20350456]
[106.41877747 -13.27460098]
[100.60664368 -0.54028618]
[89.80426788 8.46621132]
[93.11302948 23.09672928]
[105.00119781 26.24405670]
[114.44261932 34.23703003]
[119.56850433 45.57535934]
[119.32929230 58.08895874]
[113.70890045 69.35324097]
[103.73990631 77.15889740]
[106.23047638 91.95069122]
[110.62391663 98.85523224]
[108.57870483 107.18782043]
[110.65712738 122.04312897]
[112.73554230 136.89843750]
[115.02025604 151.72341919]
[117.51081848 166.51521301]
[120.00138855 181.30700684]
[122.49195099 196.09878540]
[124.98252106 210.89057922]
[127.47308350 225.68237305]
[129.96365356 240.47416687]
[132.45420837 255.26596069]
[137.02345276 263.34213257]
[134.80244446 270.50308228]
[136.88085938 285.35839844]
[141.22383118 293.55844116]
[138.80462646 300.65490723]
[140.46928406 315.56225586]
[142.13395691 330.46960449]
[157.33918762 341.58276367]
[159.69950867 359.94973755]
[148.19680786 374.05718994]
[150.68737793 388.84896851]
[153.17793274 403.64077759]
[155.66850281 418.43255615]
[169.24102783 426.19918823]
[174.59736633 440.89080811]
[169.20840454 455.57049561]
[155.61865234 463.30694580]
[140.24476624 460.44723511]
[130.34584045 448.34164429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 106]
[2 105]
[3 104]
[4 103]
[9 100]
[10 99]
[11 98]
[12 96]
[13 95]
[14 93]
[15 92]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[21 86]
[23 85]
[24 84]
[25 83]
[26 81]
[27 80]
[31 74]
[32 73]
[37 67]
[38 66]
[39 65]
[40 64]
[42 62]
[43 61]
[44 60]
[48 57]
[49 56]
[50 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
