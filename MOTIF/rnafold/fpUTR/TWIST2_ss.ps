%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGAGUUUCCAAAAAAGUUAGAAUAACUUCCUCUCCCGGAGACCUCGGUUUUGCACAAGCCGGCCUUGAAAUCAGAGCCUUUCCAGCAACUCCGAGAGCGUGUGCUCGGCGACCGCGGGCUUGGCCAGCGGCGCGCGCUCGGCGCCCCGGCGCCCCCAGCCCCACGCGCGCCGGGCGGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[129.20841980 144.84790039]
[117.28582001 153.95018005]
[102.28615570 153.84971619]
[90.48654175 144.58854675]
[86.82493591 130.04232788]
[92.83450317 116.29747772]
[81.57441711 126.20759583]
[70.31433105 136.11772156]
[59.05424881 146.02783203]
[47.79416656 155.93795776]
[36.53408051 165.84808350]
[41.13740540 184.48992920]
[35.68250275 202.81561279]
[21.75302315 215.79434204]
[3.24710822 219.90687561]
[-14.71324825 214.09956360]
[-25.27472496 224.75109863]
[-35.83620071 235.40263367]
[-46.39767838 246.05416870]
[-56.95915604 256.70568848]
[-67.52062988 267.35723877]
[-74.37942505 282.86184692]
[-91.17681885 280.56323242]
[-93.61799622 263.78594971]
[-78.17217255 256.79574585]
[-67.61069489 246.14422607]
[-57.04921341 235.49269104]
[-46.48773575 224.84115601]
[-35.92626190 214.18962097]
[-25.36478424 203.53808594]
[-30.00641060 193.45713806]
[-31.35121346 182.41387939]
[-29.25457573 171.46127319]
[-23.90080833 161.64865112]
[-15.78705978 153.92118835]
[-5.67719841 149.02883911]
[5.47009277 147.45361328]
[16.59221840 149.36209106]
[26.62396049 154.58799744]
[37.88404465 144.67787170]
[49.14412689 134.76774597]
[60.40421295 124.85762787]
[71.66429901 114.94750977]
[82.92438507 105.03739166]
[83.81539154 90.06387329]
[73.81002045 78.88834381]
[63.80465317 67.71280670]
[53.79928207 56.53726959]
[43.79391098 45.36173630]
[28.25101280 44.33409500]
[18.26334572 32.85798645]
[19.33882904 18.04653931]
[9.33345985 6.87100410]
[-0.67190999 -4.30453110]
[-10.67727947 -15.48006535]
[-23.98430824 -10.37026310]
[-38.20648193 -10.11390305]
[-51.63247681 -14.72141266]
[-62.65375519 -23.61918640]
[-69.95726013 -35.72092056]
[-72.68184662 -49.56020355]
[-70.51977539 -63.46819687]
[-63.75132370 -75.77487946]
[-73.56548309 -87.11870575]
[-83.37963867 -98.46252441]
[-98.26014709 -103.83663177]
[-100.73593903 -118.52403259]
[-110.55010223 -129.86785889]
[-120.36425781 -141.21168518]
[-136.02624512 -146.07316589]
[-139.38269043 -162.12515259]
[-126.98075104 -172.85473633]
[-111.57849121 -167.22424316]
[-109.02043152 -151.02583313]
[-99.20627594 -139.68202209]
[-89.39212036 -128.33819580]
[-75.21358490 -123.77546692]
[-72.03582001 -108.27668762]
[-62.22166061 -96.93286133]
[-52.40750122 -85.58904266]
[-37.45695496 -90.81155396]
[-21.60821533 -89.89941406]
[-7.28622770 -82.96260071]
[3.30631900 -71.03516388]
[8.52775669 -55.92118073]
[7.55182219 -39.92191696]
[0.49825543 -25.48543549]
[10.50362492 -14.30990028]
[20.50899506 -3.13436532]
[30.51436424 8.04116917]
[45.35414124 8.60380554]
[55.66020966 19.79485703]
[54.96944809 35.35636520]
[64.97481537 46.53190231]
[74.98018646 57.70743561]
[84.98555756 68.88297272]
[94.99092865 80.05850983]
[108.55448151 83.63137054]
[115.31861115 94.20692444]
[130.27484131 95.35206604]
[145.23106384 96.49720764]
[160.18728638 97.64234924]
[174.53787231 90.98117828]
[186.63731384 99.66753387]
[201.59353638 100.81267548]
[216.54975891 101.95781708]
[231.50598145 103.10295868]
[246.46220398 104.24810028]
[261.41842651 105.39323425]
[276.37466431 106.53837585]
[291.33087158 107.68351746]
[306.28710938 108.82865906]
[312.43774414 106.30459595]
[318.08596802 107.15471649]
[321.72894287 110.27511597]
[336.63763428 111.92745972]
[351.54635620 113.57980347]
[366.49230957 114.85189819]
[381.46585083 115.74290466]
[396.43936157 116.63391113]
[411.41287231 117.52491760]
[426.38638306 118.41592407]
[443.96203613 108.57437897]
[459.64862061 119.85738373]
[474.64376831 120.23942566]
[489.63891602 120.62147522]
[498.28024292 110.27204895]
[511.11904907 106.84634399]
[523.40222168 111.38037109]
[530.71514893 122.00542450]
[545.70166016 122.64204407]
[560.68817139 123.27866364]
[574.80426025 116.13403320]
[587.19171143 124.40451813]
[602.17816162 125.04113770]
[617.16467285 125.67775726]
[632.15112305 126.31437683]
[644.89166260 116.56454468]
[660.42242432 120.58619690]
[666.82965088 135.29426575]
[659.19818115 149.40597534]
[643.38226318 152.09603882]
[631.51452637 141.30085754]
[616.52801514 140.66424561]
[601.54156494 140.02761841]
[586.55505371 139.39100647]
[573.51086426 146.58117676]
[560.05151367 138.26515198]
[545.06506348 137.62852478]
[530.07855225 136.99191284]
[518.20208740 148.88485718]
[501.06115723 148.51217651]
[489.25686646 135.61660767]
[474.26171875 135.23455811]
[459.26660156 134.85252380]
[452.50134277 142.54768372]
[442.40219116 145.29455566]
[432.25357056 141.94879150]
[425.49536133 133.38943481]
[410.52185059 132.49842834]
[395.54833984 131.60742188]
[380.57482910 130.71641541]
[365.60131836 129.82540894]
[362.72412109 131.90063477]
[358.69183350 132.67271423]
[354.13388062 131.61094666]
[349.89401245 128.48852539]
[334.98529053 126.83617401]
[320.07659912 125.18383026]
[305.14196777 123.78488922]
[290.18572998 122.63974762]
[275.22952271 121.49460602]
[260.27328491 120.34946442]
[245.31706238 119.20432281]
[230.36083984 118.05918121]
[215.40461731 116.91403961]
[200.44839478 115.76889801]
[185.49217224 114.62375641]
[172.21134949 121.36683655]
[159.04214478 112.59857941]
[144.08592224 111.45343781]
[129.12969971 110.30829620]
[114.17346954 109.16315460]
[127.24047089 116.52885437]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[45 97]
[46 96]
[47 95]
[48 94]
[49 93]
[52 90]
[53 89]
[54 88]
[55 87]
[63 80]
[64 79]
[65 78]
[67 76]
[68 75]
[69 74]
[99 183]
[100 182]
[101 181]
[102 180]
[104 178]
[105 177]
[106 176]
[107 175]
[108 174]
[109 173]
[110 172]
[111 171]
[112 170]
[115 169]
[116 168]
[117 167]
[118 163]
[119 162]
[120 161]
[121 160]
[122 159]
[124 155]
[125 154]
[126 153]
[130 150]
[131 149]
[132 148]
[134 146]
[135 145]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
