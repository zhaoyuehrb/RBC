%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGAACCUGGGAGGCAGAGGUUGCAGUGAGCCGAGAUUGGCCAUUGCACUCCAGCCUGGGUGACAGAGUGAGACUUUGUCUCGAGUAAAAAAAGAGAAUGUAAAAAUCGAAAGAGAUUGUUGUAGGAAAUCUCAACCUAAUGCUGCCGGGGAGGAAGUGCACCUAGAAAGAUUAAUGAGAAACA\
) } def
/len { sequence length } bind def

/coor [
[154.67434692 326.69470215]
[168.23518372 320.28347778]
[182.84590149 316.88836670]
[197.84422302 316.66336060]
[212.55021667 319.61862183]
[226.29727173 325.62017822]
[238.45849609 334.39266968]
[231.85258484 320.92559814]
[225.24667358 307.45852661]
[212.69508362 299.43939209]
[213.56414795 283.64205933]
[206.95823669 270.17498779]
[194.40663147 262.15585327]
[195.27571106 246.35853577]
[188.66978455 232.89146423]
[182.06387329 219.42440796]
[175.45796204 205.95733643]
[160.38400269 196.98983765]
[161.75178528 178.63667297]
[154.91937256 165.28309631]
[148.08694458 151.92951965]
[141.25453186 138.57594299]
[134.42210388 125.22236633]
[71.69318390 142.77368164]
[57.62690353 147.98326111]
[43.56062317 153.19284058]
[29.49434090 158.40242004]
[15.42805862 163.61199951]
[1.36177671 168.82157898]
[-5.61736488 174.74937439]
[-12.98631382 173.99815369]
[-27.13857651 178.96942139]
[-41.29084015 183.94068909]
[-55.44310379 188.91195679]
[-65.70868683 201.70060730]
[-81.87339783 198.93759155]
[-87.30835724 183.46525574]
[-76.42255402 171.20021057]
[-60.41436386 174.75968933]
[-46.26210403 169.78842163]
[-32.10984039 164.81715393]
[-17.95757675 159.84590149]
[-3.84780216 154.75529480]
[10.21848011 149.54571533]
[24.28476143 144.33613586]
[38.35104370 139.12655640]
[52.41732407 133.91697693]
[66.48360443 128.70739746]
[66.10361481 113.71221161]
[51.79152679 109.22176361]
[37.47943878 104.73132324]
[23.16735077 100.24087524]
[9.27686405 107.77943420]
[-5.85180664 103.20790863]
[-13.24309063 89.23849487]
[-8.51186848 74.15900421]
[5.53490734 66.91582489]
[20.56353569 71.80621338]
[27.65779686 85.92878723]
[41.96988678 90.41923523]
[56.28197479 94.90967560]
[70.59406281 99.40012360]
[78.84845734 86.87554932]
[69.07786560 75.49417877]
[59.30728149 64.11280823]
[49.53669357 52.73143387]
[39.76610565 41.35005951]
[29.99551773 29.96868896]
[20.22493172 18.58731651]
[10.45434380 7.20594501]
[-4.45054007 -0.87370586]
[-0.81272763 -17.43277168]
[16.10625076 -18.52113152]
[21.83571625 -2.56464195]
[31.60630226 8.81672955]
[41.37689209 20.19810104]
[51.14747620 31.57947350]
[60.91806412 42.96084595]
[70.68865204 54.34221649]
[80.45923615 65.72358704]
[90.22982788 77.10495758]
[104.57933044 72.73554230]
[106.34867859 57.84025955]
[108.11802673 42.94497681]
[109.88738251 28.04969788]
[95.87145233 22.46254921]
[83.77974701 13.43741226]
[74.43669891 1.58963442]
[68.47933197 -12.27298260]
[66.31381989 -27.20526314]
[68.08782196 -42.18909836]
[73.68038177 -56.20286560]
[82.71018982 -68.29108429]
[94.56156921 -77.62956238]
[108.42649078 -83.58157349]
[123.35960388 -85.74131775]
[138.34275818 -83.96153259]
[152.35435486 -78.36356354]
[164.43908691 -69.32908630]
[173.77299500 -57.47409821]
[179.71965027 -43.60688782]
[181.87362671 -28.67293739]
[180.08805847 -13.69047737]
[174.48468018 0.31896797]
[165.44554138 12.40021038]
[153.58694458 21.72953033]
[139.71743774 27.67083740]
[124.78266144 29.81904793]
[123.01331329 44.71432877]
[121.24395752 59.60961151]
[119.47460938 74.50489044]
[125.73690033 78.63208771]
[138.26147461 86.88647461]
[144.52375793 91.01367188]
[157.51414490 83.51367188]
[170.50453186 76.01367188]
[183.49490356 68.51367188]
[196.48529053 61.01367188]
[209.47566223 53.51367188]
[210.10700989 38.09923172]
[218.99047852 25.48624992]
[233.29142761 19.69948387]
[248.44644165 22.58546638]
[259.61962891 33.22329330]
[263.24566650 48.21847534]
[258.16748047 62.78609848]
[246.00553894 72.27769470]
[230.64062500 73.66452026]
[216.97566223 66.50405121]
[203.98529053 74.00405121]
[190.99490356 81.50405121]
[178.00453186 89.00405121]
[165.01414490 96.50405121]
[152.02375793 104.00405121]
[147.77568054 118.38994598]
[154.60810852 131.74351501]
[161.44052124 145.09709167]
[168.27294922 158.45066833]
[175.10536194 171.80424500]
[187.12881470 176.51260376]
[192.53991699 187.79327393]
[188.92503357 199.35142517]
[195.53094482 212.81849670]
[202.13685608 226.28555298]
[208.74276733 239.75262451]
[221.76687622 248.73501587]
[220.42530823 263.56909180]
[227.03121948 277.03616333]
[240.05531311 286.01855469]
[238.71374512 300.85260010]
[245.31965637 314.31967163]
[251.92556763 327.78674316]
[261.40469360 339.41198730]
[273.26632690 348.59356689]
[285.12796021 357.77517700]
[300.36959839 354.27847290]
[314.26937866 361.44299316]
[320.26425171 375.88583374]
[315.52365112 390.78750610]
[302.28588867 399.11196899]
[286.80148315 396.92858887]
[276.38168335 385.26831055]
[275.94638062 369.63681030]
[264.08474731 360.45520020]
[252.22311401 351.27362061]
[258.36953735 364.95651245]
[261.47994995 379.63049316]
[261.41336060 394.63034058]
[258.17276001 409.27612305]
[251.90510559 422.90390015]
[242.89448547 434.89590454]
[231.54936218 444.70855713]
[218.38401794 451.89703369]
[203.99526978 456.13543701]
[189.03538513 457.23162842]
[174.18249512 455.13595581]
[160.10992432 449.94342041]
[147.45558167 441.88937378]
[136.79310608 431.33892822]
[128.60586548 418.77035522]
[123.26496887 404.75341797]
[121.01255035 389.92349243]
[121.95069122 374.95285034]
[126.03688812 360.52014160]
[133.08589172 347.27963257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 152]
[8 151]
[9 150]
[11 148]
[12 147]
[14 145]
[15 144]
[16 143]
[17 142]
[19 139]
[20 138]
[21 137]
[22 136]
[23 135]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[31 42]
[32 41]
[33 40]
[34 39]
[49 62]
[50 61]
[51 60]
[52 59]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[82 111]
[83 110]
[84 109]
[85 108]
[114 134]
[115 133]
[116 132]
[117 131]
[118 130]
[119 129]
[153 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
