%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCAGUGACAGGAGGGGCCGGGCUGGUACUUCAGGCGCCCAGGCCGGCGGGGCGCGCUCCGGCGGCUCCUGUCAGCGGCGGGUGCGGCGGAUCCCAGGGCAGCCUUCGGGCGGCGGCGCUGCCUGGUGCGUCGCGGCGUGGUCCUCCGGCGGCUGUCCGGGGCGGUAGGAGUUGGCUGCGGG\
) } def
/len { sequence length } bind def

/coor [
[420.82214355 80.87500763]
[409.83450317 75.01092529]
[402.34680176 64.96823120]
[387.50280762 67.12587738]
[372.65881348 69.28351593]
[363.98477173 81.33744049]
[348.96157837 83.73705292]
[336.37713623 74.55721283]
[321.53311157 76.71485138]
[306.68911743 78.87249756]
[291.84512329 81.03013611]
[277.00109863 83.18777466]
[262.15710449 85.34542084]
[247.31307983 87.50305939]
[232.46907043 89.66069794]
[217.62506104 91.81834412]
[208.95104980 103.87226105]
[193.92785645 106.27187347]
[181.34339905 97.09204102]
[166.49938965 99.24967957]
[151.65538025 101.40731812]
[136.81137085 103.56496429]
[121.96736908 105.72260284]
[107.12335968 107.88024139]
[92.98020172 112.87734222]
[80.07555389 120.52392578]
[67.17091370 128.17050171]
[54.26626968 135.81707764]
[46.70400238 150.36851501]
[30.31120300 150.82470703]
[21.95137596 136.71636963]
[30.22439575 122.55694580]
[46.61968994 122.91244507]
[59.52433014 115.26586151]
[72.42897797 107.61927795]
[85.33361816 99.97270203]
[81.55394745 85.45670319]
[66.55881500 85.07466125]
[51.56367874 84.69261932]
[36.56854248 84.31056976]
[21.57341003 83.92852783]
[6.57827616 83.54648590]
[-2.00498009 96.36566162]
[-16.16532898 102.48841095]
[-31.38425446 99.96098328]
[-42.80545044 89.58988190]
[-46.78445816 74.68447876]
[-42.05158997 60.00103760]
[-30.11708641 50.22498703]
[-14.78920269 48.47583389]
[-0.95901281 55.31172180]
[6.96032047 68.55134583]
[21.95545387 68.93339539]
[36.95058823 69.31543732]
[51.94572067 69.69747925]
[66.94085693 70.07952881]
[81.93598938 70.46157074]
[95.88299561 74.39517975]
[103.93129730 83.21082306]
[104.96572113 93.03623962]
[119.80973053 90.87859344]
[134.65373230 88.72095490]
[149.49774170 86.56331635]
[164.34175110 84.40567017]
[179.18576050 82.24803162]
[188.63600159 69.86535645]
[203.72067261 67.88865662]
[215.46742249 76.97433472]
[230.31143188 74.81668854]
[245.15544128 72.65904999]
[259.99945068 70.50141144]
[274.84344482 68.34377289]
[289.68746948 66.18612671]
[304.53146362 64.02848816]
[319.37548828 61.87084579]
[334.21948242 59.71320343]
[343.66973877 47.33052826]
[358.75439453 45.35383224]
[370.50115967 54.43950653]
[385.34515381 52.28186798]
[400.18917847 50.12422562]
[408.12554932 33.84275055]
[424.09851074 25.64058685]
[441.64538574 28.62481499]
[453.79266357 41.41856766]
[468.55484009 38.75811768]
[483.31701660 36.09767151]
[498.07919312 33.43722153]
[512.84136963 30.77677155]
[527.60357666 28.11632156]
[539.81262207 18.05404854]
[553.71044922 23.41132736]
[568.47259521 20.75087738]
[583.23480225 18.09042931]
[597.78234863 14.43414497]
[612.04821777 9.79889011]
[626.31402588 5.16363478]
[637.04785156 -6.45946264]
[651.54315186 -3.03379631]
[665.80902100 -7.66905117]
[680.07482910 -12.30430603]
[694.34069824 -16.93956184]
[708.60650635 -21.57481575]
[722.87237549 -26.21007156]
[737.13824463 -30.84532547]
[751.40405273 -35.48057938]
[762.13787842 -47.10367966]
[776.63317871 -43.67801285]
[790.89904785 -48.31326675]
[805.16485596 -52.94852066]
[819.43072510 -57.58377457]
[833.69659424 -62.21903229]
[844.43035889 -73.84213257]
[858.92565918 -70.41646576]
[873.19152832 -75.05171967]
[887.45733643 -79.68697357]
[898.19116211 -91.31006622]
[912.68646240 -87.88440704]
[926.95233154 -92.51966095]
[941.21813965 -97.15491486]
[955.48400879 -101.79016876]
[969.74987793 -106.42542267]
[984.01568604 -111.06067657]
[998.28155518 -115.69593048]
[1001.39630127 -130.73567200]
[1011.62561035 -142.19241333]
[1026.21789551 -146.98432922]
[1041.24780273 -143.82243347]
[1052.67236328 -133.55726624]
[1057.41857910 -118.95008850]
[1054.20959473 -103.93016815]
[1043.90856934 -92.53778839]
[1029.28662109 -87.83744049]
[1014.27685547 -91.09349060]
[1002.91680908 -101.43008423]
[988.65093994 -96.79483032]
[974.38513184 -92.15957642]
[960.11926270 -87.52432251]
[945.85339355 -82.88906860]
[931.58758545 -78.25380707]
[917.32171631 -73.61855316]
[907.60833740 -62.32700348]
[892.09259033 -65.42112732]
[877.82678223 -60.78586960]
[863.56091309 -56.15061569]
[853.84753418 -44.85906219]
[838.33184814 -47.95318222]
[824.06597900 -43.31792831]
[809.80010986 -38.68267441]
[795.53430176 -34.04742050]
[781.26843262 -29.41216469]
[771.55505371 -18.12061119]
[756.03930664 -21.21473312]
[741.77349854 -16.57947731]
[727.50762939 -11.94422340]
[713.24176025 -7.30896807]
[698.97595215 -2.67371321]
[684.71008301 1.96154165]
[670.44427490 6.59679651]
[656.17840576 11.23205185]
[646.46502686 22.52360535]
[630.94927979 19.42948341]
[616.68347168 24.06473732]
[602.41760254 28.69999313]
[616.13165283 34.77662659]
[623.76812744 47.68723679]
[622.48840332 62.63254547]
[612.76812744 74.05691528]
[598.22064209 77.71354675]
[584.25372314 72.24315643]
[576.05926514 59.67926788]
[576.68347168 44.69226074]
[585.89526367 32.85261154]
[571.13305664 35.51306152]
[556.37084961 38.17350769]
[545.21771240 48.04549026]
[530.26403809 42.87850189]
[515.50183105 45.53895187]
[500.73965454 48.19940186]
[485.97747803 50.85985184]
[471.21527100 53.52030182]
[456.45309448 56.18075180]
[452.84072876 67.79753876]
[444.57656860 76.82340240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 81]
[4 80]
[5 79]
[8 76]
[9 75]
[10 74]
[11 73]
[12 72]
[13 71]
[14 70]
[15 69]
[16 68]
[19 65]
[20 64]
[21 63]
[22 62]
[23 61]
[24 60]
[25 36]
[26 35]
[27 34]
[28 33]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[85 182]
[86 181]
[87 180]
[88 179]
[89 178]
[90 177]
[92 175]
[93 174]
[94 173]
[95 164]
[96 163]
[97 162]
[99 160]
[100 159]
[101 158]
[102 157]
[103 156]
[104 155]
[105 154]
[106 153]
[108 151]
[109 150]
[110 149]
[111 148]
[112 147]
[114 145]
[115 144]
[116 143]
[118 141]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
