%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RPL39)
} def

/sequence { (\
GCCUUCUAAGCUCGUUCUUCCGCCAGCUUCCCUCCUCUUCCUUUCUCCGCCAUCGUGGUGUGUUCUUGACUCCGCUGCUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.054372474 ubox
1 15 0.005024481 ubox
1 23 0.007484889 ubox
1 27 0.009788618 ubox
1 50 0.044540005 ubox
1 59 0.003262663 ubox
1 61 0.005942298 ubox
1 63 0.008570714 ubox
1 75 0.081499565 ubox
1 78 0.175863988 ubox
1 82 0.230884686 ubox
2 10 0.053413125 ubox
2 14 0.005491567 ubox
2 22 0.007496838 ubox
2 26 0.009674165 ubox
2 49 0.044600279 ubox
2 58 0.003347632 ubox
2 60 0.006046992 ubox
2 62 0.009353372 ubox
2 74 0.081470131 ubox
2 77 0.175551238 ubox
2 81 0.231125857 ubox
3 10 0.014566930 ubox
3 57 0.003184911 ubox
4 9 0.016986053 ubox
4 69 0.003588710 ubox
5 9 0.003448294 ubox
5 68 0.003449919 ubox
5 69 0.024669892 ubox
6 26 0.003987081 ubox
6 68 0.025886229 ubox
7 25 0.003991251 ubox
7 68 0.005217171 ubox
7 77 0.010831589 ubox
8 16 0.004651251 ubox
8 19 0.017715287 ubox
8 29 0.853092604 ubox
8 39 0.004227430 ubox
8 43 0.006736678 ubox
8 44 0.003381049 ubox
8 67 0.006033856 ubox
8 76 0.009514979 ubox
9 15 0.005092838 ubox
9 18 0.020065449 ubox
9 28 0.980029673 ubox
9 29 0.022381613 ubox
9 33 0.003615750 ubox
9 42 0.004203855 ubox
9 66 0.004983638 ubox
9 71 0.005326764 ubox
9 76 0.015867296 ubox
9 79 0.012389783 ubox
10 17 0.020057681 ubox
10 23 0.015888841 ubox
10 27 0.995035425 ubox
10 28 0.003752754 ubox
10 65 0.004311361 ubox
10 70 0.005550751 ubox
10 75 0.016130682 ubox
10 78 0.013062118 ubox
10 82 0.008323269 ubox
11 22 0.015860945 ubox
11 26 0.995090473 ubox
11 74 0.016111078 ubox
11 77 0.013002956 ubox
11 81 0.008314521 ubox
12 25 0.975872009 ubox
12 69 0.013140533 ubox
13 22 0.339205559 ubox
13 62 0.003953322 ubox
13 68 0.013269672 ubox
13 74 0.005652184 ubox
14 21 0.337701877 ubox
14 23 0.926781352 ubox
14 27 0.015778503 ubox
14 61 0.003381991 ubox
14 67 0.012642389 ubox
14 70 0.006011860 ubox
14 73 0.005524082 ubox
15 22 0.894415669 ubox
15 26 0.015736481 ubox
15 69 0.005846159 ubox
16 25 0.015215320 ubox
16 68 0.005416417 ubox
16 69 0.005532154 ubox
17 26 0.004176514 ubox
17 68 0.005789826 ubox
18 25 0.004172304 ubox
20 58 0.003251796 ubox
21 57 0.003277836 ubox
21 60 0.015269786 ubox
21 81 0.020889065 ubox
22 50 0.004735737 ubox
22 56 0.003287995 ubox
22 59 0.015470440 ubox
22 63 0.003757471 ubox
22 78 0.034233150 ubox
22 80 0.021455959 ubox
22 82 0.075497848 ubox
23 49 0.004738580 ubox
23 55 0.003284708 ubox
23 58 0.015486629 ubox
23 62 0.003788645 ubox
23 77 0.024356604 ubox
23 81 0.075612250 ubox
24 57 0.015481566 ubox
24 77 0.049759138 ubox
25 33 0.004661350 ubox
25 36 0.005525026 ubox
25 56 0.014810439 ubox
25 76 0.055484075 ubox
25 79 0.068818939 ubox
26 32 0.004961538 ubox
26 35 0.005909445 ubox
26 50 0.012013701 ubox
26 56 0.003395415 ubox
26 75 0.055568877 ubox
26 78 0.069685271 ubox
27 49 0.012020121 ubox
27 55 0.005759487 ubox
27 74 0.055491487 ubox
27 77 0.069615302 ubox
29 69 0.004238152 ubox
30 68 0.004655481 ubox
33 69 0.016838355 ubox
34 68 0.017397200 ubox
36 69 0.088405047 ubox
37 68 0.093122583 ubox
38 69 0.010646981 ubox
39 68 0.010683592 ubox
39 69 0.063065500 ubox
40 58 0.003813818 ubox
40 68 0.067853366 ubox
41 57 0.003968486 ubox
42 69 0.007250374 ubox
43 68 0.007794133 ubox
43 69 0.003351208 ubox
44 68 0.003446797 ubox
44 69 0.014258105 ubox
45 58 0.003544041 ubox
45 68 0.015390137 ubox
46 57 0.003473271 ubox
46 69 0.015278191 ubox
47 57 0.005264034 ubox
47 58 0.135517909 ubox
47 68 0.016473660 ubox
48 55 0.027214781 ubox
48 57 0.139586001 ubox
48 60 0.221937274 ubox
48 62 0.006509980 ubox
48 74 0.003672819 ubox
48 77 0.021026297 ubox
48 81 0.192020094 ubox
49 54 0.046918221 ubox
49 56 0.141207779 ubox
49 59 0.227777904 ubox
49 61 0.004882328 ubox
49 63 0.006947873 ubox
49 73 0.003899447 ubox
49 75 0.011205694 ubox
49 76 0.021126990 ubox
49 78 0.374302971 ubox
49 80 0.197362989 ubox
49 82 0.639266248 ubox
50 55 0.141067828 ubox
50 58 0.228243854 ubox
50 60 0.003804813 ubox
50 62 0.007150674 ubox
50 74 0.011122583 ubox
50 77 0.349289391 ubox
50 81 0.639704135 ubox
51 57 0.228219558 ubox
51 60 0.008010594 ubox
51 77 0.261036796 ubox
52 56 0.184959677 ubox
52 59 0.008278873 ubox
52 76 0.273106129 ubox
53 58 0.007825054 ubox
53 69 0.007662048 ubox
54 68 0.007971686 ubox
54 74 0.056813820 ubox
54 77 0.341981097 ubox
54 81 0.024371471 ubox
55 67 0.007131891 ubox
55 73 0.056577456 ubox
55 75 0.874802261 ubox
55 76 0.015070594 ubox
55 78 0.380693664 ubox
55 80 0.019967423 ubox
55 82 0.035609558 ubox
56 74 0.876106686 ubox
56 77 0.380519109 ubox
56 81 0.035622531 ubox
57 65 0.006522221 ubox
57 66 0.004934692 ubox
57 71 0.050742391 ubox
57 72 0.023105859 ubox
57 73 0.877650572 ubox
57 76 0.381414820 ubox
57 79 0.009586243 ubox
57 80 0.034933945 ubox
57 83 0.077655589 ubox
58 64 0.006179947 ubox
58 65 0.005373657 ubox
58 70 0.053289072 ubox
58 71 0.019346992 ubox
58 72 0.876423393 ubox
58 75 0.383615178 ubox
58 78 0.031955243 ubox
58 79 0.014891161 ubox
58 82 0.081984708 ubox
59 68 0.008525583 ubox
59 69 0.053321285 ubox
59 74 0.383445236 ubox
59 77 0.030991819 ubox
59 81 0.082726141 ubox
60 67 0.012005763 ubox
60 70 0.864198258 ubox
60 73 0.381576587 ubox
60 75 0.057597963 ubox
60 76 0.007199452 ubox
60 78 0.013661469 ubox
60 80 0.083652517 ubox
60 82 0.029091591 ubox
61 68 0.050688372 ubox
61 69 0.861943585 ubox
61 74 0.057948528 ubox
61 77 0.013442302 ubox
61 81 0.029607660 ubox
62 67 0.092673338 ubox
62 70 0.410298060 ubox
62 73 0.056931389 ubox
62 75 0.023631781 ubox
62 76 0.006085866 ubox
62 78 0.088122998 ubox
62 80 0.030046105 ubox
62 82 0.006844987 ubox
63 69 0.407981210 ubox
63 74 0.022882404 ubox
63 77 0.087270437 ubox
63 81 0.006570173 ubox
64 68 0.367916925 ubox
67 74 0.054961722 ubox
67 81 0.019304153 ubox
68 73 0.070518107 ubox
68 76 0.004233325 ubox
68 80 0.029351687 ubox
69 79 0.027740302 ubox
73 81 0.025061035 ubox
74 80 0.025922557 ubox
74 82 0.159825081 ubox
75 81 0.160038602 ubox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
49 82 0.9500000 lbox
50 81 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
60 70 0.9500000 lbox
61 69 0.9500000 lbox
showpage
end
%%EOF
