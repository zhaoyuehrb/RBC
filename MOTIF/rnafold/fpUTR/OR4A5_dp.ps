%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR4A5)
} def

/sequence { (\
AGGCCCUGUUUCCCUGAGCUCUCACCUCUGAUACAAGCCUUAAAGAAGAGUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.007192563 ubox
1 11 0.013014708 ubox
1 15 0.070763901 ubox
1 22 0.005026307 ubox
1 27 0.014156247 ubox
1 40 0.856365100 ubox
1 41 0.065968508 ubox
2 6 0.007508578 ubox
2 9 0.004050244 ubox
2 10 0.018472548 ubox
2 12 0.006306338 ubox
2 13 0.043780386 ubox
2 14 0.074760412 ubox
2 15 0.003802094 ubox
2 20 0.013477524 ubox
2 21 0.005805428 ubox
2 22 0.003375597 ubox
2 23 0.004155979 ubox
2 26 0.016653983 ubox
2 39 0.988494729 ubox
2 40 0.020250191 ubox
3 9 0.020660250 ubox
3 11 0.005351469 ubox
3 12 0.044177238 ubox
3 13 0.074058029 ubox
3 14 0.004075633 ubox
3 19 0.015112167 ubox
3 21 0.003763810 ubox
3 22 0.003677303 ubox
3 25 0.016687504 ubox
3 38 0.989640458 ubox
3 39 0.018724761 ubox
3 51 0.018736223 ubox
4 8 0.021480582 ubox
4 18 0.015069524 ubox
4 37 0.988085218 ubox
4 50 0.018905771 ubox
6 18 0.006661354 ubox
6 37 0.029041897 ubox
6 48 0.017518229 ubox
6 50 0.048590348 ubox
7 16 0.003471938 ubox
7 17 0.007251482 ubox
7 33 0.082448796 ubox
7 35 0.952074128 ubox
7 36 0.042189265 ubox
7 47 0.016090309 ubox
7 49 0.048781160 ubox
7 52 0.004574345 ubox
8 15 0.003351676 ubox
8 19 0.032875492 ubox
8 32 0.088977405 ubox
8 34 0.982589920 ubox
8 38 0.003681393 ubox
8 51 0.004494247 ubox
9 17 0.007017075 ubox
9 18 0.032671551 ubox
9 31 0.089013362 ubox
9 33 0.945222614 ubox
9 36 0.005825042 ubox
9 37 0.003692908 ubox
9 45 0.005763720 ubox
9 46 0.005743844 ubox
9 47 0.030381721 ubox
9 48 0.042459421 ubox
9 49 0.003392182 ubox
10 16 0.007474939 ubox
10 17 0.031835393 ubox
10 18 0.009200903 ubox
10 30 0.087371914 ubox
10 31 0.036499414 ubox
10 35 0.005579411 ubox
10 36 0.004503361 ubox
10 44 0.007163685 ubox
10 45 0.006241262 ubox
10 46 0.027709131 ubox
10 47 0.050508784 ubox
11 16 0.028543652 ubox
11 17 0.015321922 ubox
11 30 0.031944906 ubox
11 31 0.941776852 ubox
11 35 0.004068039 ubox
11 43 0.007030619 ubox
11 44 0.006077585 ubox
11 45 0.023555923 ubox
11 46 0.054369108 ubox
12 16 0.016084010 ubox
12 30 0.959642546 ubox
12 45 0.055952226 ubox
14 45 0.004081287 ubox
15 24 0.205624715 ubox
15 30 0.009929473 ubox
15 42 0.058770327 ubox
15 44 0.003794937 ubox
15 52 0.004713654 ubox
16 23 0.212381857 ubox
16 28 0.963056724 ubox
16 29 0.007161203 ubox
16 41 0.060560640 ubox
17 22 0.198713035 ubox
17 27 0.963228549 ubox
17 29 0.020101107 ubox
17 40 0.060507869 ubox
18 26 0.957447911 ubox
18 28 0.020096457 ubox
18 38 0.046067884 ubox
18 39 0.043474174 ubox
18 51 0.112726865 ubox
19 37 0.062417130 ubox
19 50 0.115365830 ubox
20 31 0.021353357 ubox
20 36 0.058705749 ubox
20 49 0.115394255 ubox
21 30 0.024403737 ubox
21 37 0.005330128 ubox
21 48 0.115400651 ubox
21 50 0.018497106 ubox
22 31 0.056776164 ubox
22 36 0.004629769 ubox
22 46 0.023954461 ubox
22 47 0.111502536 ubox
22 49 0.018748426 ubox
23 30 0.058772155 ubox
23 45 0.033766071 ubox
23 48 0.018780540 ubox
24 29 0.050117034 ubox
24 51 0.006231548 ubox
25 50 0.005571934 ubox
26 37 0.004796592 ubox
26 45 0.073219175 ubox
26 48 0.004960309 ubox
26 50 0.023352084 ubox
27 36 0.004816462 ubox
27 44 0.072017702 ubox
27 46 0.079989998 ubox
27 47 0.003632639 ubox
27 49 0.023886223 ubox
28 37 0.027554284 ubox
28 45 0.080470233 ubox
28 48 0.023952035 ubox
29 35 0.007324476 ubox
29 36 0.027551157 ubox
29 42 0.068888868 ubox
29 44 0.079548386 ubox
29 47 0.023778721 ubox
30 34 0.007849139 ubox
30 41 0.073236910 ubox
31 40 0.072304403 ubox
32 42 0.020208850 ubox
32 52 0.003836835 ubox
33 41 0.020198258 ubox
33 51 0.004048392 ubox
34 50 0.004047227 ubox
35 41 0.006422905 ubox
36 40 0.005344331 ubox
37 51 0.030338101 ubox
38 50 0.030964411 ubox
39 45 0.008140381 ubox
39 48 0.040914275 ubox
39 50 0.027543281 ubox
40 44 0.009535007 ubox
40 46 0.019457115 ubox
40 47 0.048380259 ubox
40 48 0.018802217 ubox
40 49 0.049055018 ubox
40 50 0.012345884 ubox
40 53 0.031207605 ubox
41 45 0.021463000 ubox
41 46 0.050094242 ubox
41 47 0.027959994 ubox
41 48 0.055019963 ubox
41 49 0.020595440 ubox
41 52 0.070265615 ubox
42 51 0.071863723 ubox
1 40 0.9500000 lbox
2 39 0.9500000 lbox
3 38 0.9500000 lbox
4 37 0.9500000 lbox
7 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
showpage
end
%%EOF
