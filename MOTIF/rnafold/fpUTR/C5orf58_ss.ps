%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCGGAGAAGCUGGCCAAUCAGGGGGCGCGGCUUCGCCUUCACCGUCGGCUCCCUGCUCCUGUCAGAACCUCGGUGACGGUUGGCCAGUUUUUUUACAGUGGCUCUGAA\
) } def
/len { sequence length } bind def

/coor [
[154.86344910 414.88613892]
[163.13674927 400.72686768]
[162.71977234 385.73266602]
[162.30279541 370.73846436]
[161.67744446 355.75152588]
[160.84382629 340.77468872]
[158.76541138 325.91937256]
[155.45663452 311.28887939]
[152.14787292 296.65835571]
[148.83911133 282.02783203]
[145.53033447 267.39730835]
[142.22157288 252.76679993]
[138.91279602 238.13627625]
[135.60403442 223.50575256]
[132.29527283 208.87524414]
[128.98649597 194.24472046]
[125.67773438 179.61419678]
[122.36897278 164.98368835]
[119.06020355 150.35316467]
[115.75143433 135.72265625]
[112.44267273 121.09213257]
[86.54808807 117.00895691]
[81.96386719 94.41130066]
[70.57810974 84.64581299]
[59.19235992 74.88033295]
[47.80660629 65.11485291]
[36.42085648 55.34936523]
[25.03510284 45.58388519]
[13.64935112 35.81840134]
[2.26359963 26.05291939]
[-6.41781378 22.77643204]
[-9.29803658 15.85425091]
[-20.40792656 5.77603960]
[-31.51781654 -4.30217171]
[-42.62770844 -14.38038349]
[-56.75265121 -8.59690285]
[-71.98763275 -9.52332115]
[-85.30771637 -16.97569847]
[-94.06821442 -29.47436142]
[-96.52970123 -44.53768921]
[-92.20346069 -59.17484665]
[-81.94846344 -70.47961426]
[-67.80085754 -76.20742798]
[-52.56964493 -75.22102356]
[-39.27900314 -67.71624756]
[-30.56779861 -55.18318558]
[-28.16564751 -40.11028290]
[-32.54949570 -25.49027252]
[-21.43960571 -15.41206169]
[-10.32971573 -5.33385038]
[0.78017449 4.74436092]
[12.02908230 14.66716671]
[23.41483498 24.43264961]
[34.80058670 34.19813156]
[46.18633652 43.96361542]
[57.57209015 53.72909927]
[68.95783997 63.49457932]
[80.34359741 73.26006317]
[91.72934723 83.02554321]
[99.33000183 79.72726440]
[108.19065857 79.92086792]
[116.68447876 84.04250336]
[123.06407928 91.76919556]
[134.97496033 82.65156555]
[146.88581848 73.53393555]
[158.79669189 64.41630554]
[170.70756531 55.29867935]
[182.61843872 46.18104935]
[181.25018311 30.81447983]
[188.42715454 17.15818214]
[201.85922241 9.56982803]
[217.26025391 10.47083569]
[229.71583557 19.57369614]
[235.25143433 33.97372055]
[232.10066223 49.07591248]
[221.26892090 60.06121826]
[206.21258545 63.42426300]
[191.73606873 58.09191895]
[179.82519531 67.20954895]
[167.91432190 76.32717896]
[156.00344849 85.44480896]
[144.09259033 94.56243896]
[132.18171692 103.68006897]
[127.07318878 117.78336334]
[130.38195801 132.41387939]
[133.69071960 147.04440308]
[136.99948120 161.67491150]
[140.30825806 176.30543518]
[143.61701965 190.93595886]
[146.92578125 205.56646729]
[150.23455811 220.19699097]
[153.54331970 234.82751465]
[156.85208130 249.45802307]
[160.16085815 264.08853149]
[163.46961975 278.71905518]
[166.77838135 293.34957886]
[170.08715820 307.98010254]
[173.39591980 322.61062622]
[183.03216553 311.11529541]
[197.94979858 309.54553223]
[209.76776123 318.78326416]
[211.84645081 333.63854980]
[203.01800537 345.76531982]
[188.24246216 348.35049438]
[175.82064819 339.94107056]
[176.65426636 354.91787720]
[180.29899597 363.45126343]
[177.29701233 370.32150269]
[177.71397400 385.31570435]
[178.13095093 400.30990601]
[187.17835999 413.98748779]
[179.61579895 428.53878784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[5 106]
[6 105]
[7 98]
[8 97]
[9 96]
[10 95]
[11 94]
[12 93]
[13 92]
[14 91]
[15 90]
[16 89]
[17 88]
[18 87]
[19 86]
[20 85]
[21 84]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[32 51]
[33 50]
[34 49]
[35 48]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
