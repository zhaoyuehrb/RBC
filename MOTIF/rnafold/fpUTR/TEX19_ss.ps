%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCCCUGGGUGCCCACAUGAACAGAGACACCAGGAUGCUCUCCUGAGACCACAGCAACUGCAGAAGCUGAAGACAUUUCCAGAAGUUCAAGCUUCCACCCUCUGCAGGUCCCCACUGAGCUGGGACCCAGGUCAUCCACCCCACCCCAAAUCCCUGGAUAGGAAACCCCUUUCUCCUCCUGCUCCUUGUCCCCUUCAUCCCUGCCGCCCAGCAUCCUACUGGCCUCAGCACCUGUGGCCAGACCGUCCAAGAU\
CCUCUGAAGGCCCAGCUCUUGCUGUCCACCCCGGCAGUAGGCAGGCAGCCUGGCC\
) } def
/len { sequence length } bind def

/coor [
[573.64160156 528.15435791]
[557.08898926 522.41882324]
[543.45104980 511.86224365]
[534.05126953 497.72814941]
[529.73059082 481.59417725]
[530.77459717 465.19674683]
[536.90087891 450.24435425]
[524.97375488 441.14804077]
[513.04656982 432.05172729]
[501.11944580 422.95541382]
[489.19229126 413.85906982]
[477.26513672 404.76275635]
[465.29220581 395.72680664]
[453.27377319 386.75143433]
[439.64245605 392.75585938]
[424.73675537 391.12014771]
[412.57067871 382.18408203]
[406.47091675 368.26684570]
[408.16732788 353.06588745]
[396.14889526 344.09051514]
[384.13046265 335.11514282]
[372.11203003 326.13973999]
[360.09359741 317.16436768]
[347.79452515 322.28329468]
[334.46356201 320.65658569]
[323.58261108 312.60171509]
[318.04660034 300.12908936]
[319.39352417 286.44110107]
[307.46636963 277.34478760]
[295.53921509 268.24847412]
[283.61209106 259.15216064]
[278.89135742 258.88009644]
[274.27871704 255.67387390]
[271.53833008 249.74961853]
[259.79736328 240.41419983]
[248.05641174 231.07879639]
[236.31546021 221.74337769]
[229.16207886 220.04895020]
[224.50367737 212.25387573]
[212.85762024 202.80033875]
[200.63862610 209.31259155]
[186.81777954 210.68975830]
[173.47113037 206.69190979]
[162.61611938 197.88897705]
[155.90660095 185.57980347]
[154.38092041 171.60052490]
[158.30131531 158.05073547]
[146.75134277 148.48004150]
[135.20137024 138.90934753]
[123.65140533 129.33865356]
[117.01271057 136.53263855]
[108.23797607 142.11648560]
[97.74726105 145.47370911]
[86.13344574 146.10421753]
[74.12876129 143.67127991]
[62.55885315 138.03890991]
[52.28723907 129.29612732]
[44.15384293 117.76583862]
[38.91183090 103.99704742]
[37.16725922 88.74008942]
[22.30652046 86.70085907]
[7.44578314 84.66162109]
[-7.41495419 82.62238312]
[-22.27569199 80.58314514]
[-37.13642883 78.54390717]
[-51.99716568 76.50467682]
[-66.92070007 74.99201202]
[-81.88837433 74.00781250]
[-96.85605621 73.02362061]
[-111.82373047 72.03942108]
[-126.79618835 71.13083649]
[-141.77304077 70.29788208]
[-156.74989319 69.46492767]
[-163.30636597 83.17919922]
[-174.61532593 93.33675385]
[-188.95222473 98.38864899]
[-204.13081360 97.56450653]
[-217.83644104 90.98999786]
[-227.97911072 79.66769409]
[-233.01214600 65.32415771]
[-232.16802979 50.14667511]
[-225.57550049 36.44970703]
[-214.23986816 26.32193756]
[-199.88970947 21.30777740]
[-184.71336365 22.17185211]
[-171.02507019 28.78239632]
[-160.91223145 40.13134766]
[-155.91694641 54.48807526]
[-140.94009399 55.32102585]
[-125.96323395 56.15398026]
[-119.14621735 53.40258026]
[-110.83953094 57.07174301]
[-95.87185669 58.05594254]
[-80.90418243 59.04013824]
[-65.93650055 60.02433395]
[-76.17989349 49.06655121]
[-77.06848145 34.09289551]
[-68.19297791 22.00052452]
[-53.64160919 18.35942268]
[-40.11701965 24.84675598]
[-33.84889984 38.47432709]
[-37.72447586 52.96501160]
[-49.95793152 61.64393616]
[-35.09719086 63.68317413]
[-20.23645592 65.72241211]
[-5.37571764 67.76164246]
[9.48501968 69.80088043]
[24.34575653 71.84011841]
[39.20649338 73.87935638]
[46.19797516 60.60836411]
[36.11231613 49.50523376]
[26.02665901 38.40210342]
[15.94100094 27.29897118]
[5.85534334 16.19584084]
[-9.34204483 18.84969330]
[-23.55280495 12.84487343]
[-32.24233246 0.09749502]
[-32.63783264 -15.32479763]
[-24.61310196 -28.50080872]
[-10.72880363 -35.22612000]
[4.58463335 -33.35470963]
[16.44074821 -23.48373604]
[21.05629539 -8.76299286]
[16.95847321 6.11018372]
[27.04413223 17.21331406]
[37.12979126 28.31644440]
[47.21544647 39.41957474]
[57.30110550 50.52270508]
[70.57209778 43.53122330]
[67.11831665 28.93425941]
[63.66454315 14.33729267]
[60.21076584 -0.25967363]
[56.75698853 -14.85663986]
[41.67264557 -15.46099472]
[27.31108284 -20.11374283]
[14.73801899 -28.46961594]
[4.88645983 -39.90855789]
[-1.51254344 -53.58171844]
[-3.98414230 -68.47445679]
[-2.34492755 -83.48164368]
[3.28346014 -97.48963165]
[12.48335743 -109.45894623]
[24.57206917 -118.50138092]
[38.65253448 -123.94593048]
[53.67988968 -125.38856506]
[68.53900146 -122.72223663]
[82.12723541 -116.14479828]
[93.43624115 -106.14435577]
[101.62681580 -93.46298981]
[106.09117889 -79.04175568]
[106.49803162 -63.95079422]
[102.81718445 -49.30996323]
[95.32179260 -36.20570374]
[84.56804657 -25.61044312]
[71.35395050 -18.31041718]
[74.80773163 -3.71345067]
[78.26150513 10.88351536]
[81.71528625 25.48048210]
[85.16905975 40.07744980]
[92.66905975 40.07744980]
[107.66905975 40.07744980]
[115.16905975 40.07744980]
[118.62284088 25.48048210]
[122.07661438 10.88351536]
[114.90670776 -3.46820903]
[121.78741455 -17.96080780]
[137.44044495 -21.47680092]
[149.85813904 -11.31901646]
[149.51469421 4.72035980]
[136.67358398 14.33729267]
[133.21980286 28.93425941]
[129.76602173 43.53122330]
[148.53631592 85.14311218]
[133.22210693 117.78868103]
[144.77207947 127.35937500]
[156.32203674 136.93006897]
[167.87200928 146.50077820]
[182.63136292 139.59465027]
[198.86654663 139.82829285]
[213.31690979 147.10383606]
[223.10244751 159.91423035]
[226.29786682 175.65513611]
[222.31115723 191.15428162]
[233.95721436 200.60781860]
[245.65086365 210.00242615]
[257.39181519 219.33782959]
[269.13278198 228.67324829]
[280.87374878 238.00866699]
[292.70840454 247.22499084]
[304.63555908 256.32131958]
[316.56271362 265.41763306]
[328.48986816 274.51394653]
[344.65292358 269.44506836]
[360.48867798 274.97250366]
[369.79995728 288.72256470]
[369.06896973 305.14593506]
[381.08740234 314.12133789]
[393.10583496 323.09671021]
[405.12426758 332.07208252]
[417.14270020 341.04745483]
[431.23638916 335.10476685]
[446.31277466 337.00192261]
[458.33541870 346.13000488]
[464.13604736 359.95782471]
[462.24914551 374.73300171]
[474.26757812 383.70837402]
[482.96630859 386.31527710]
[486.36145020 392.83560181]
[498.28860474 401.93191528]
[510.21575928 411.02825928]
[522.14294434 420.12457275]
[534.07006836 429.22088623]
[545.99725342 438.31719971]
[557.42718506 429.12915039]
[571.26391602 423.57003784]
[586.36480713 422.25286865]
[601.43768311 425.43392944]
[615.15087891 432.97833252]
[626.25109863 444.35974121]
[633.67742920 458.69519043]
[636.66162109 474.81268311]
[651.65679932 474.43392944]
[666.65203857 474.05514526]
[681.64727783 473.67639160]
[696.64245605 473.29760742]
[711.63769531 472.91885376]
[725.23809814 464.83554077]
[738.15667725 472.24899292]
[753.15191650 471.87023926]
[768.14709473 471.49145508]
[783.82849121 465.04708862]
[794.36206055 478.33169556]
[784.51263428 492.13113403]
[768.52587891 486.48666382]
[753.53063965 486.86544800]
[738.53546143 487.24420166]
[726.00762939 495.30041504]
[712.01647949 487.91406250]
[697.02124023 488.29284668]
[682.02600098 488.67160034]
[667.03082275 489.05038452]
[652.03558350 489.42913818]
[637.04040527 489.80792236]
[633.24670410 496.27770996]
[646.58782959 503.13439941]
[659.92901611 509.99108887]
[673.27014160 516.84777832]
[686.61126709 523.70446777]
[699.95239258 530.56115723]
[713.29351807 537.41784668]
[726.63464355 544.27453613]
[740.97753906 548.66571045]
[746.42541504 562.64141846]
[738.83831787 575.58111572]
[723.98187256 577.65148926]
[713.14581299 567.27874756]
[700.64770508 558.98425293]
[688.14965820 550.68975830]
[675.65161133 542.39526367]
[663.15356445 534.10076904]
[650.65551758 525.80627441]
[638.15747070 517.51177979]
[625.65942383 509.21728516]
[621.86578369 515.68707275]
[628.85723877 528.95806885]
[635.84869385 542.22906494]
[642.84020996 555.50006104]
[657.66809082 560.27197266]
[664.56939697 573.83020020]
[659.92877197 587.93695068]
[666.92022705 601.20794678]
[673.91168213 614.47894287]
[681.23608398 627.56915283]
[688.88861084 640.47021484]
[696.54119873 653.37133789]
[704.19378662 666.27239990]
[711.84631348 679.17352295]
[719.49890137 692.07458496]
[727.15148926 704.97570801]
[734.80407715 717.87677002]
[742.45660400 730.77789307]
[757.82965088 734.44482422]
[766.03576660 747.95166016]
[762.20654297 763.28503418]
[748.61370850 771.34790039]
[733.32165527 767.35675049]
[725.40289307 753.67944336]
[729.55554199 738.43048096]
[721.90295410 725.52935791]
[714.25036621 712.62829590]
[706.59783936 699.72717285]
[698.94525146 686.82611084]
[691.29266357 673.92498779]
[683.64013672 661.02392578]
[675.98754883 648.12280273]
[668.33496094 635.22174072]
[662.42761230 649.00952148]
[647.99261475 653.08758545]
[635.74389648 644.42913818]
[634.77264404 629.46063232]
[645.79980469 619.29193115]
[660.64068604 621.47039795]
[653.64923096 608.19940186]
[646.65777588 594.92840576]
[632.39898682 590.77838135]
[625.11956787 577.41931152]
[629.56921387 562.49151611]
[622.57769775 549.22052002]
[615.58624268 535.94952393]
[608.59478760 522.67852783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 213]
[8 212]
[9 211]
[10 210]
[11 209]
[12 208]
[13 206]
[14 205]
[19 200]
[20 199]
[21 198]
[22 197]
[23 196]
[28 192]
[29 191]
[30 190]
[31 189]
[34 188]
[35 187]
[36 186]
[37 185]
[39 184]
[40 183]
[47 177]
[48 176]
[49 175]
[50 174]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[65 104]
[66 103]
[67 95]
[68 94]
[69 93]
[70 92]
[71 90]
[72 89]
[73 88]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[129 159]
[130 158]
[131 157]
[132 156]
[133 155]
[162 172]
[163 171]
[164 170]
[221 243]
[222 242]
[223 241]
[224 240]
[225 239]
[226 238]
[228 236]
[229 235]
[230 234]
[264 310]
[265 309]
[266 308]
[267 307]
[270 304]
[271 303]
[272 302]
[273 296]
[274 295]
[275 294]
[276 293]
[277 292]
[278 291]
[279 290]
[280 289]
[281 288]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
