%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCGGCGCGUCAUUGUCGUCAUCGUUGCCCGACCGCUUUCCGGGAGACUGGAGUCGAAGGCCGUGAGGUAUUUUUCUAAGCCAGUGUUUUAGAAGGAGUAUGUGGAAGGGCAAGGAGUACCUAUAGAACCCCGGAGGAGGGUGAGGAGCAGAGCUGGUCAGCCAUA\
) } def
/len { sequence length } bind def

/coor [
[131.02018738 458.21380615]
[133.06311035 443.08804321]
[141.47370911 430.35128784]
[154.58207703 422.53250122]
[153.19804382 407.59646606]
[151.81402588 392.66046143]
[150.42999268 377.72445679]
[149.04597473 362.78845215]
[147.66194153 347.85241699]
[145.86447144 332.96051025]
[143.65495300 318.12414551]
[130.53526306 303.95092773]
[138.11315918 285.29879761]
[135.35691833 270.55419922]
[132.60067749 255.80961609]
[129.84442139 241.06501770]
[127.08818817 226.32041931]
[117.14399719 215.23158264]
[122.21378326 200.24465942]
[119.45753479 185.50006104]
[109.51335144 174.41122437]
[114.58312988 159.42430115]
[111.82688904 144.67970276]
[105.60409546 137.92733765]
[105.92276001 127.58987427]
[98.98970032 114.28826904]
[87.29790497 106.62058258]
[87.70869446 92.64479065]
[80.77563477 79.34318542]
[73.84257507 66.04158020]
[66.90951538 52.73997116]
[59.97645950 39.43836594]
[53.04339981 26.13676071]
[38.23662567 21.29970360]
[31.39500427 7.71121979]
[36.09764862 -6.37496948]
[29.16459084 -19.67657471]
[22.23153114 -32.97817993]
[15.29847336 -46.27978516]
[-2.17694473 -56.27657318]
[-0.60391170 -75.52577972]
[-8.02374935 -88.56211090]
[-15.44358730 -101.59844971]
[-22.86342430 -114.63478088]
[-30.75990677 -127.38803864]
[-39.12224960 -139.84080505]
[-47.48458862 -152.29356384]
[-55.84693146 -164.74632263]
[-69.96376801 -171.88954163]
[-70.63570404 -186.76898193]
[-78.99804688 -199.22174072]
[-87.36038208 -211.67449951]
[-95.72272491 -224.12725830]
[-104.08506775 -236.58001709]
[-119.35191345 -235.64688110]
[-132.94627380 -242.43583679]
[-141.26196289 -255.03408813]
[-142.14926147 -270.00302124]
[-135.46983337 -283.31655884]
[-143.83216858 -295.76931763]
[-152.19451904 -308.22207642]
[-160.55685425 -320.67483521]
[-169.26113892 -332.89105225]
[-178.30064392 -344.86129761]
[-187.34016418 -356.83157349]
[-202.64492798 -362.72195435]
[-204.92843628 -378.96133423]
[-191.84162903 -388.84402466]
[-176.84709167 -382.20358276]
[-175.36991882 -365.87109375]
[-166.33039856 -353.90081787]
[-157.29087830 -341.93057251]
[-153.82806396 -341.09155273]
[-150.60839844 -338.51031494]
[-148.45693970 -334.32385254]
[-148.10409546 -329.03720093]
[-139.74176025 -316.58444214]
[-131.37940979 -304.13168335]
[-123.01707458 -291.67892456]
[-108.16596985 -292.82363892]
[-94.64593506 -286.33792114]
[-86.13127899 -273.87329102]
[-84.99140930 -258.72082520]
[-91.63230896 -244.94236755]
[-83.26996613 -232.48960876]
[-74.90762329 -220.03684998]
[-66.54528046 -207.58409119]
[-58.18294144 -195.13131714]
[-44.66423798 -188.87881470]
[-43.39417267 -173.10865784]
[-35.03182983 -160.65589905]
[-26.66948891 -148.20314026]
[-18.30714607 -135.75038147]
[-15.54417229 -135.09107971]
[-12.88161373 -133.27592468]
[-10.76916695 -130.33967590]
[-9.63477612 -126.48195648]
[-9.82709026 -122.05461884]
[-2.40725279 -109.01828766]
[5.01258469 -95.98194885]
[12.43242264 -82.94561768]
[22.53540421 -81.12242889]
[30.11124802 -73.87207031]
[32.47348022 -63.42961884]
[28.60007858 -53.21284485]
[35.53313828 -39.91123962]
[42.46619415 -26.60963249]
[49.39925385 -13.30802727]
[63.63964081 -9.09531975]
[70.86023712 4.29563522]
[66.34500885 19.20370293]
[73.27806854 32.50530624]
[80.21112061 45.80691147]
[87.14418030 59.10851669]
[94.07723999 72.41012573]
[101.01029968 85.71173096]
[112.70209503 93.37941742]
[112.29130554 107.35520935]
[119.22436523 120.65681458]
[120.29291534 105.69492340]
[126.04253387 91.84061432]
[135.88192749 80.51867676]
[148.79920959 72.89345551]
[163.46594238 69.74914551]
[178.37380981 71.40910339]
[191.98966980 77.70261383]
[202.91326904 87.98246002]
[210.02119446 101.19144440]
[212.58247375 115.97115326]
[210.33372498 130.80163574]
[203.50617981 144.15769958]
[192.80198669 154.66581726]
[179.32200623 161.24531555]
[164.45248413 163.21957397]
[149.72264099 160.38552856]
[136.64730835 153.03465271]
[126.57148743 141.92346191]
[129.32772827 156.66804504]
[139.46905518 168.81152344]
[134.20213318 182.74382019]
[136.95837402 197.48841858]
[147.09971619 209.63188171]
[141.83277893 223.56417847]
[144.58901978 238.30877686]
[147.34526062 253.05337524]
[150.10151672 267.79797363]
[152.85775757 282.54257202]
[162.21173096 288.18960571]
[166.79914856 297.86328125]
[165.31437683 308.24386597]
[158.49133301 315.91461182]
[160.70085144 330.75097656]
[164.00169373 334.89559937]
[165.23214722 339.43884277]
[164.59176636 343.51547241]
[162.59796143 346.46841431]
[163.98197937 361.40441895]
[165.36601257 376.34042358]
[166.75003052 391.27642822]
[168.13406372 406.21246338]
[169.51808167 421.14846802]
[183.83995056 426.42547607]
[194.44772339 437.39990234]
[199.23521423 451.89276123]
[197.25186157 467.02645874]
[188.89147949 479.79623413]
[175.81401062 487.66659546]
[160.61601257 489.07489014]
[146.31503296 483.74151611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[9 156]
[10 152]
[11 151]
[13 147]
[14 146]
[15 145]
[16 144]
[17 143]
[19 141]
[20 140]
[22 138]
[23 137]
[25 119]
[26 118]
[28 116]
[29 115]
[30 114]
[31 113]
[32 112]
[33 111]
[36 108]
[37 107]
[38 106]
[39 105]
[41 101]
[42 100]
[43 99]
[44 98]
[45 93]
[46 92]
[47 91]
[48 90]
[50 88]
[51 87]
[52 86]
[53 85]
[54 84]
[59 79]
[60 78]
[61 77]
[62 76]
[63 72]
[64 71]
[65 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
