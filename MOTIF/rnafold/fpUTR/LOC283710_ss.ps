%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGUUUGAAAGAAGGAUGAGCAGGCUCUCUGCCAUCUGCCCACCAACUUUUCAAGUUACUUUUACCCACCUUCAAAAUUACAUCUGCUUUUAGCAAGAAUUACUGAUGUGAUAAAG\
) } def
/len { sequence length } bind def

/coor [
[275.03747559 192.79359436]
[258.09899902 184.01724243]
[243.75039673 171.43347168]
[232.82975769 155.77230835]
[225.97618103 137.94371033]
[223.59228516 118.98464203]
[208.65626526 117.60061646]
[193.72026062 116.21659088]
[178.78424072 114.83256531]
[163.84823608 113.44853973]
[148.91221619 112.06451416]
[133.97621155 110.68048859]
[119.04019165 109.29646301]
[106.65306091 120.11690521]
[90.25702667 118.81562042]
[79.73176575 106.17671967]
[64.76441956 105.18743896]
[55.86753082 107.76731110]
[49.41669846 103.96935272]
[34.48068237 102.58532715]
[20.02547264 109.01630402]
[8.06640148 100.13768768]
[-6.86961126 98.75366211]
[-21.80562401 97.36963654]
[-36.78472137 96.57800293]
[-51.78341293 96.38001251]
[-66.78210449 96.18201447]
[-79.23197174 106.30033112]
[-94.87376404 102.73467255]
[-101.70843506 88.22030640]
[-94.49301147 73.89141846]
[-78.76255035 70.73989105]
[-66.58411407 81.18332672]
[-51.58541870 81.38131714]
[-36.58672714 81.57930756]
[-33.76075363 79.27621460]
[-29.63583946 78.29742432]
[-24.88076591 79.25774384]
[-20.42159843 82.43362427]
[-5.48558569 83.81764984]
[9.45042706 85.20167542]
[22.83731461 78.67169952]
[35.86470795 87.64931488]
[50.80072403 89.03334045]
[65.75370026 90.22010040]
[80.72104645 91.20937347]
[89.25388336 81.73872375]
[101.67637634 78.87790680]
[113.49208832 83.66240692]
[120.42421722 94.36045074]
[135.36022949 95.74447632]
[150.29624939 97.12850189]
[165.23225403 98.51252747]
[180.16827393 99.89655304]
[195.10427856 101.28057861]
[210.04029846 102.66460419]
[224.97630310 104.04862976]
[227.99945068 92.78890991]
[232.64210510 82.09728241]
[238.80297852 72.20520782]
[246.34796143 63.32672882]
[255.11296082 55.65383148]
[264.90756226 49.35231018]
[275.51904297 44.55815506]
[286.71713257 41.37464905]
[298.25894165 39.87011719]
[309.89416504 40.07648087]
[321.37066650 41.98856354]
[332.43975830 45.56423569]
[342.86175537 50.72532654]
[352.41107178 57.35934067]
[360.88113403 65.32191467]
[368.08880615 74.43993378]
[373.87838745 84.51535034]
[378.12506104 95.32941437]
[380.73739624 106.64747620]
[381.65942383 118.22406006]
[380.87188721 129.80818176]
[378.39257812 141.14881897]
[392.30691528 146.75158691]
[406.22125244 152.35437012]
[420.13558960 157.95713806]
[434.04992676 163.55992126]
[447.96426392 169.16268921]
[461.87860107 174.76547241]
[475.79296875 180.36825562]
[490.27325439 184.28239441]
[505.11541748 186.45274353]
[519.95758057 188.62309265]
[534.79974365 190.79345703]
[551.34704590 187.10249329]
[559.47448730 201.98136902]
[547.42700195 213.91007996]
[532.62939453 205.63560486]
[517.78723145 203.46525574]
[502.94506836 201.29490662]
[488.10290527 199.12455750]
[497.52740479 210.79412842]
[499.33297729 225.68505859]
[492.97048950 239.26882935]
[480.37487793 247.41439819]
[465.37661743 247.64462280]
[452.53695679 239.88945007]
[445.76055908 226.50735474]
[447.10821533 211.56802368]
[456.17013550 199.61470032]
[470.19018555 194.28259277]
[456.27584839 188.67980957]
[442.36151123 183.07704163]
[428.44714355 177.47425842]
[414.53280640 171.87149048]
[400.61846924 166.26870728]
[386.70413208 160.66592407]
[372.78979492 155.06315613]
[362.08627319 170.79800415]
[347.91912842 183.51571655]
[331.11093140 192.47282410]
[312.63879395 197.14437866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 57]
[7 56]
[8 55]
[9 54]
[10 53]
[11 52]
[12 51]
[13 50]
[16 46]
[17 45]
[19 44]
[20 43]
[22 41]
[23 40]
[24 39]
[25 35]
[26 34]
[27 33]
[79 114]
[80 113]
[81 112]
[82 111]
[83 110]
[84 109]
[85 108]
[86 107]
[87 97]
[88 96]
[89 95]
[90 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
