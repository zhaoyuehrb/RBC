%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FFAR4)
} def

/sequence { (\
AGUCGCCUCCCAGAUGAGCACUCUCUCAGACCGCUGCGGGCCGCCAGGCGCCGGGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.050025495 ubox
1 22 0.183008275 ubox
1 24 0.031860240 ubox
1 26 0.011544179 ubox
1 35 0.121858268 ubox
2 7 0.067625889 ubox
2 15 0.252517335 ubox
2 19 0.018847673 ubox
2 21 0.213562430 ubox
2 23 0.036686903 ubox
2 25 0.013169364 ubox
2 31 0.123914949 ubox
2 34 0.128978507 ubox
2 37 0.076493340 ubox
2 44 0.007099078 ubox
2 49 0.014085745 ubox
2 51 0.120928363 ubox
3 14 0.274281874 ubox
3 17 0.030905896 ubox
3 18 0.010921691 ubox
3 20 0.212506709 ubox
3 30 0.124400437 ubox
3 33 0.063603487 ubox
3 36 0.078743247 ubox
3 39 0.035951881 ubox
3 43 0.006851059 ubox
3 48 0.014089830 ubox
3 50 0.025664536 ubox
3 54 0.015797663 ubox
3 55 0.024934972 ubox
3 56 0.049351290 ubox
4 13 0.278472431 ubox
4 16 0.045285695 ubox
4 29 0.124299662 ubox
4 33 0.120504924 ubox
4 36 0.028514104 ubox
4 38 0.060711803 ubox
4 43 0.003799011 ubox
4 47 0.013724596 ubox
4 50 0.160775528 ubox
4 53 0.018931727 ubox
4 54 0.031220494 ubox
4 55 0.057659354 ubox
5 15 0.042650253 ubox
5 19 0.232809417 ubox
5 32 0.122942006 ubox
5 34 0.189554610 ubox
5 35 0.009539015 ubox
5 37 0.070838073 ubox
5 41 0.016173203 ubox
5 42 0.003518334 ubox
5 44 0.013331046 ubox
5 49 0.166610393 ubox
5 51 0.017078389 ubox
5 52 0.014387652 ubox
6 18 0.168841799 ubox
6 33 0.189761736 ubox
6 36 0.071522569 ubox
6 39 0.004815250 ubox
6 40 0.016494006 ubox
6 43 0.013381173 ubox
6 48 0.166631862 ubox
6 50 0.019635839 ubox
6 54 0.054011501 ubox
6 55 0.109568646 ubox
7 13 0.061554997 ubox
7 18 0.188838591 ubox
7 29 0.064894394 ubox
7 38 0.004853955 ubox
7 39 0.016465647 ubox
7 40 0.004431912 ubox
7 47 0.166611511 ubox
7 53 0.052455356 ubox
7 54 0.109634636 ubox
7 55 0.039939590 ubox
8 12 0.055680538 ubox
8 14 0.047498733 ubox
8 17 0.248313543 ubox
8 28 0.063865869 ubox
8 30 0.202912201 ubox
8 38 0.012220880 ubox
8 39 0.005382020 ubox
8 40 0.022595692 ubox
8 46 0.160460422 ubox
8 53 0.052937993 ubox
8 54 0.035863728 ubox
8 55 0.035411624 ubox
8 56 0.674422801 ubox
9 13 0.049435342 ubox
9 16 0.248543355 ubox
9 29 0.207961565 ubox
9 38 0.012781581 ubox
9 39 0.057335232 ubox
9 40 0.147316970 ubox
9 48 0.004211981 ubox
9 53 0.031643362 ubox
9 54 0.045419620 ubox
9 55 0.811572977 ubox
10 38 0.057618770 ubox
10 39 0.147577208 ubox
10 40 0.016465123 ubox
10 47 0.004223556 ubox
10 48 0.005411842 ubox
10 53 0.043259817 ubox
10 54 0.811984632 ubox
10 55 0.141170609 ubox
11 36 0.104861853 ubox
11 38 0.147055074 ubox
11 39 0.016607392 ubox
11 47 0.005435944 ubox
11 53 0.789316269 ubox
11 54 0.141773074 ubox
12 22 0.025045153 ubox
12 24 0.080326918 ubox
12 26 0.273571268 ubox
12 35 0.108900612 ubox
13 21 0.026611475 ubox
13 23 0.085706968 ubox
13 25 0.286334543 ubox
13 27 0.330232742 ubox
13 34 0.107869792 ubox
14 22 0.082710119 ubox
14 24 0.281868202 ubox
14 26 0.327147891 ubox
15 28 0.432062590 ubox
15 33 0.024999138 ubox
15 36 0.040297022 ubox
15 38 0.055482367 ubox
15 43 0.004088593 ubox
15 46 0.043997889 ubox
15 50 0.005275970 ubox
15 53 0.005708772 ubox
16 23 0.287619067 ubox
16 25 0.433779204 ubox
16 27 0.485287637 ubox
16 32 0.022971596 ubox
16 35 0.022363078 ubox
16 37 0.270087870 ubox
16 42 0.004589123 ubox
16 45 0.053930281 ubox
16 52 0.030153321 ubox
17 22 0.269193742 ubox
17 24 0.433461865 ubox
17 26 0.485533130 ubox
17 35 0.607757721 ubox
18 23 0.424077554 ubox
18 25 0.478939243 ubox
18 34 0.621420672 ubox
18 37 0.098963005 ubox
18 41 0.005174254 ubox
18 44 0.057913996 ubox
18 49 0.011636571 ubox
18 51 0.032437128 ubox
19 33 0.620972460 ubox
19 36 0.099136582 ubox
19 40 0.004925156 ubox
19 43 0.057840249 ubox
19 48 0.011628469 ubox
19 50 0.032411108 ubox
20 35 0.093351546 ubox
21 29 0.097067081 ubox
21 39 0.005074255 ubox
21 40 0.018210344 ubox
21 47 0.011334414 ubox
21 48 0.009426671 ubox
21 54 0.003967422 ubox
21 55 0.012920179 ubox
22 28 0.093217959 ubox
22 30 0.597021127 ubox
22 38 0.003735264 ubox
22 39 0.018358264 ubox
22 40 0.007708132 ubox
22 46 0.011278119 ubox
22 47 0.008595764 ubox
22 54 0.012715331 ubox
22 55 0.006818500 ubox
22 56 0.032244737 ubox
23 29 0.606083048 ubox
23 38 0.018975693 ubox
23 39 0.018662531 ubox
23 40 0.057889939 ubox
23 47 0.003819619 ubox
23 53 0.010961402 ubox
23 54 0.009686553 ubox
23 55 0.045497451 ubox
24 28 0.546069833 ubox
24 30 0.057724106 ubox
24 38 0.010944885 ubox
24 39 0.067243875 ubox
24 40 0.003691211 ubox
24 46 0.003699653 ubox
24 53 0.004280210 ubox
24 54 0.044271354 ubox
24 55 0.010692638 ubox
24 56 0.047880364 ubox
25 29 0.058915384 ubox
25 38 0.081773922 ubox
25 39 0.023263115 ubox
25 53 0.036480760 ubox
25 54 0.014400816 ubox
25 55 0.057715232 ubox
26 38 0.024024504 ubox
26 53 0.007093206 ubox
26 54 0.056422622 ubox
26 55 0.007415717 ubox
26 56 0.010314989 ubox
27 36 0.374596200 ubox
27 38 0.003734636 ubox
27 53 0.045456237 ubox
27 54 0.010194375 ubox
27 55 0.012343833 ubox
28 35 0.391126159 ubox
29 34 0.392101378 ubox
31 39 0.364055281 ubox
31 40 0.017908402 ubox
31 48 0.010166812 ubox
31 54 0.085581737 ubox
31 55 0.111751950 ubox
32 38 0.366257728 ubox
32 39 0.028054383 ubox
32 47 0.010194759 ubox
32 50 0.155594111 ubox
32 53 0.085487118 ubox
32 54 0.112262784 ubox
33 37 0.343782152 ubox
33 41 0.009547584 ubox
33 44 0.004896991 ubox
33 49 0.161018770 ubox
33 51 0.025343595 ubox
33 52 0.081870916 ubox
34 40 0.009704189 ubox
34 43 0.004903402 ubox
34 47 0.018812827 ubox
34 48 0.160092463 ubox
34 50 0.028397116 ubox
34 54 0.027925714 ubox
34 55 0.181270458 ubox
35 39 0.008803044 ubox
35 46 0.025595336 ubox
35 47 0.155788061 ubox
35 50 0.049090323 ubox
35 53 0.017760076 ubox
35 54 0.165224992 ubox
36 44 0.080857079 ubox
36 45 0.019804980 ubox
36 49 0.054835260 ubox
36 51 0.085072067 ubox
36 52 0.018464419 ubox
37 43 0.083243465 ubox
37 48 0.054677500 ubox
37 50 0.085357988 ubox
37 53 0.553521933 ubox
38 42 0.077881457 ubox
38 45 0.146251837 ubox
38 49 0.036140072 ubox
38 52 0.876501532 ubox
39 44 0.146365843 ubox
39 45 0.035374762 ubox
39 51 0.876582316 ubox
39 52 0.127862585 ubox
40 44 0.034888034 ubox
40 49 0.959482906 ubox
40 51 0.129542033 ubox
41 48 0.960977848 ubox
41 50 0.095656408 ubox
41 54 0.014827934 ubox
41 55 0.003307537 ubox
42 47 0.960661593 ubox
42 50 0.090766794 ubox
42 53 0.015169763 ubox
42 54 0.003304527 ubox
43 49 0.125967077 ubox
43 51 0.012186945 ubox
43 52 0.012701934 ubox
44 48 0.125080604 ubox
44 50 0.014704855 ubox
44 54 0.005254957 ubox
44 55 0.006666601 ubox
45 53 0.005320741 ubox
45 54 0.006752859 ubox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
11 53 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
24 28 0.9500000 lbox
38 52 0.9500000 lbox
39 51 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
