%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SIGLEC14)
} def

/sequence { (\
ACUCACCCUCCGGCUUCCUGUCGGGGCUUUCUCAGCCCCACCCCACGUUUGGACAUUUGGAGCAUUUCCUUCCCUGACAGCCGGACCUGGGACUGGGCUGGGGCCCUGGCGGAUGGAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.007589433 ubox
2 118 0.018297824 ubox
3 12 0.007307903 ubox
3 13 0.004476928 ubox
3 117 0.018159021 ubox
3 119 0.024859784 ubox
4 12 0.006139284 ubox
4 115 0.003653567 ubox
4 116 0.017534498 ubox
4 118 0.023220912 ubox
5 114 0.003875653 ubox
6 13 0.042379495 ubox
6 116 0.017581034 ubox
7 12 0.042442999 ubox
7 13 0.014826150 ubox
7 115 0.017751289 ubox
7 116 0.009042699 ubox
8 12 0.014877586 ubox
8 115 0.009150456 ubox
8 118 0.993990664 ubox
9 113 0.019864864 ubox
9 117 0.997235709 ubox
9 119 0.006009484 ubox
10 112 0.020082774 ubox
10 116 0.997710378 ubox
10 118 0.006411492 ubox
11 111 0.019989976 ubox
11 115 0.997371109 ubox
12 18 0.020315879 ubox
12 19 0.003899745 ubox
12 110 0.007944727 ubox
12 114 0.960613537 ubox
13 17 0.022278463 ubox
13 18 0.004260042 ubox
13 21 0.003384510 ubox
14 20 0.003609197 ubox
14 109 0.004069595 ubox
14 112 0.074157203 ubox
14 116 0.016603114 ubox
14 118 0.056314938 ubox
15 111 0.063677112 ubox
15 112 0.013520007 ubox
15 113 0.099284484 ubox
15 115 0.016541657 ubox
15 117 0.056487903 ubox
15 118 0.009096876 ubox
16 111 0.009487765 ubox
16 112 0.052661432 ubox
16 113 0.950289683 ubox
16 116 0.056270279 ubox
16 117 0.011043116 ubox
17 109 0.005012464 ubox
17 111 0.048053510 ubox
17 112 0.946958575 ubox
17 115 0.054643087 ubox
17 116 0.011513738 ubox
18 108 0.004780208 ubox
18 111 0.933595250 ubox
18 112 0.302390525 ubox
18 115 0.010114540 ubox
19 111 0.345982907 ubox
20 110 0.999263313 ubox
21 109 0.999529788 ubox
22 108 0.999763222 ubox
23 107 0.999230029 ubox
24 106 0.999984056 ubox
25 105 0.999991029 ubox
26 104 0.999979824 ubox
27 102 0.006928339 ubox
27 103 0.991723741 ubox
28 101 0.008069882 ubox
28 102 0.491171636 ubox
28 103 0.018303741 ubox
29 101 0.256871660 ubox
29 102 0.037635085 ubox
29 103 0.012080269 ubox
30 100 0.046540737 ubox
30 101 0.027754060 ubox
30 102 0.097628766 ubox
30 103 0.121487550 ubox
31 100 0.019062613 ubox
31 101 0.195832989 ubox
31 102 0.860116396 ubox
32 100 0.030778781 ubox
32 101 0.940803113 ubox
32 102 0.005580422 ubox
33 100 0.998012684 ubox
33 101 0.007272865 ubox
34 99 0.999681810 ubox
35 98 0.999986291 ubox
36 97 0.993641336 ubox
37 96 0.987244224 ubox
37 97 0.112526087 ubox
38 95 0.979410246 ubox
38 96 0.159121146 ubox
39 95 0.194853682 ubox
40 94 0.218127976 ubox
41 91 0.061414615 ubox
42 90 0.054459230 ubox
42 91 0.996625242 ubox
43 89 0.046242885 ubox
43 90 0.998478775 ubox
43 91 0.006868396 ubox
44 89 0.998871912 ubox
44 90 0.006299334 ubox
45 88 0.993088921 ubox
46 83 0.004202648 ubox
47 82 0.004185494 ubox
47 86 0.997553844 ubox
48 85 0.999651818 ubox
49 80 0.004392938 ubox
49 84 0.998587415 ubox
50 79 0.005963887 ubox
50 83 0.996586188 ubox
51 73 0.003428577 ubox
51 78 0.006174395 ubox
51 82 0.999913033 ubox
52 72 0.003570929 ubox
52 81 0.999434043 ubox
53 71 0.003625636 ubox
54 76 0.153974625 ubox
55 75 0.152986375 ubox
56 77 0.612319143 ubox
56 80 0.010541333 ubox
57 76 0.621253371 ubox
57 77 0.170794139 ubox
57 79 0.008935429 ubox
57 80 0.026832380 ubox
58 76 0.166596082 ubox
58 79 0.027728227 ubox
59 68 0.008133815 ubox
59 69 0.160929812 ubox
59 70 0.017041428 ubox
59 72 0.300064223 ubox
59 73 0.867273447 ubox
59 74 0.348096001 ubox
59 75 0.067970354 ubox
59 78 0.025994279 ubox
60 67 0.008170963 ubox
60 68 0.161342173 ubox
60 69 0.017440808 ubox
60 71 0.305572898 ubox
60 72 0.874973808 ubox
60 73 0.328768904 ubox
60 74 0.067176448 ubox
61 66 0.011372108 ubox
61 67 0.158891001 ubox
61 70 0.430954487 ubox
61 71 0.834173069 ubox
61 75 0.012311396 ubox
62 66 0.108191649 ubox
62 69 0.504220909 ubox
62 70 0.689942529 ubox
62 74 0.012524789 ubox
63 76 0.006456886 ubox
64 75 0.006006780 ubox
69 80 0.003905442 ubox
70 77 0.008250831 ubox
70 79 0.006028965 ubox
70 80 0.003788644 ubox
71 76 0.008085118 ubox
71 77 0.021680261 ubox
71 79 0.004180128 ubox
72 76 0.023233353 ubox
74 80 0.023412576 ubox
75 79 0.021345177 ubox
8 118 0.9500000 lbox
9 117 0.9500000 lbox
10 116 0.9500000 lbox
11 115 0.9500000 lbox
12 114 0.9500000 lbox
16 113 0.9500000 lbox
17 112 0.9500000 lbox
18 111 0.9500000 lbox
20 110 0.9500000 lbox
21 109 0.9500000 lbox
22 108 0.9500000 lbox
23 107 0.9500000 lbox
24 106 0.9500000 lbox
25 105 0.9500000 lbox
26 104 0.9500000 lbox
27 103 0.9500000 lbox
31 102 0.9500000 lbox
32 101 0.9500000 lbox
33 100 0.9500000 lbox
34 99 0.9500000 lbox
35 98 0.9500000 lbox
36 97 0.9500000 lbox
37 96 0.9500000 lbox
38 95 0.9500000 lbox
42 91 0.9500000 lbox
43 90 0.9500000 lbox
44 89 0.9500000 lbox
45 88 0.9500000 lbox
47 86 0.9500000 lbox
48 85 0.9500000 lbox
49 84 0.9500000 lbox
50 83 0.9500000 lbox
51 82 0.9500000 lbox
52 81 0.9500000 lbox
59 73 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
showpage
end
%%EOF
