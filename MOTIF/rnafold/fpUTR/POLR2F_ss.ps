%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAUUUCCUCUGGGUUACGGCGCAGGCGCAAGAUAAGCUAGGAGCCGCGCGAGUCGUAGUGUCGCUGUUUGCGGGUCUCCGCGCGGGACCGGGGCGCAGCGGGGUCGCUGAGGCGAGGGUGUCAUGUCAGACAACGAGGACAAUUUUGAUGGCGACGACUUUGAUGAUGUGGAGGAGGAUGAAGGGCUAGAUGACUUGGAGAAUGCCGAAGAGUUUUAGUAGUGACGGGGUUCACCGUGUUAGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[286.32247925 541.99896240]
[276.76486206 533.35290527]
[269.75839233 522.51965332]
[265.78469849 510.23120117]
[265.12023926 497.31979370]
[267.81707764 484.66195679]
[273.69891357 473.11868286]
[262.79785156 462.81494141]
[251.89680481 452.51123047]
[240.99574280 442.20748901]
[230.09469604 431.90374756]
[219.19363403 421.60000610]
[208.29257202 411.29626465]
[197.39152527 400.99252319]
[182.82727051 397.87295532]
[178.11305237 382.77041626]
[167.21199036 372.46667480]
[156.31092834 362.16293335]
[156.95399475 377.14916992]
[143.79293823 384.34542847]
[131.52349854 375.71636963]
[133.84661865 360.89633179]
[121.85641479 369.90939331]
[109.86621857 378.92245483]
[97.87602234 387.93551636]
[92.91342163 395.57269287]
[85.67888641 396.98522949]
[73.57682037 405.84750366]
[61.47475815 414.70980835]
[65.73149109 429.25820923]
[64.75256348 444.38491821]
[58.65618896 458.26330566]
[48.17853928 469.21752930]
[34.58483124 475.92474365]
[19.51658058 477.57507324]
[4.79334688 473.96923828]
[-7.80696630 465.54260254]
[-16.76280975 453.31277466]
[-20.99272346 438.75656128]
[-19.98592186 423.63168335]
[-13.86398315 409.76452637]
[-3.36616087 398.82965088]
[10.23988152 392.14749146]
[25.31114960 390.52493286]
[40.02771378 394.15789795]
[52.61247635 402.60772705]
[64.71453857 393.74545288]
[76.81660461 384.88317871]
[88.86296844 375.94531250]
[100.85316467 366.93225098]
[112.84336090 357.91921997]
[124.83355713 348.90615845]
[131.37435913 345.29013062]
[138.02246094 343.72619629]
[144.26818848 344.10916138]
[138.94236755 330.08648682]
[133.61654663 316.06378174]
[128.29072571 302.04110718]
[116.53865814 292.89025879]
[118.87201691 277.24206543]
[113.54619598 263.21936035]
[108.22036743 249.19668579]
[102.80689240 235.20761108]
[97.30597687 221.25268555]
[91.80506134 207.29776001]
[86.30415344 193.34283447]
[80.80323792 179.38790894]
[75.30232239 165.43298340]
[69.80140686 151.47805786]
[64.30049133 137.52313232]
[58.79957581 123.56821442]
[48.29300690 112.86251068]
[34.44380951 107.10058594]
[20.59461594 101.33866119]
[6.74542093 95.57673645]
[-7.10377455 89.81480408]
[-23.28731346 92.46530151]
[-33.46368027 79.60552979]
[-27.16430283 64.46453094]
[-10.86943817 62.61806107]
[-1.34184825 75.96561432]
[12.50734711 81.72753906]
[26.35654259 87.48946381]
[40.20573807 93.25138855]
[54.05493164 99.01331329]
[64.15264893 87.92024994]
[74.24947357 76.82817078]
[67.21476746 63.58004379]
[53.90910721 55.02025604]
[54.77391815 40.15077972]
[47.73921585 26.90264893]
[40.70450974 13.65452003]
[25.46980095 11.37201595]
[14.62704659 0.68145555]
[12.18722630 -14.16816616]
[18.87920189 -27.44805527]
[11.84449768 -40.69618607]
[-3.99320936 -50.11364746]
[-2.65710020 -67.62272644]
[-9.85706711 -80.78176880]
[-17.05703354 -93.94081879]
[-24.25700188 -107.09986115]
[-31.45696831 -120.25890350]
[-45.74076843 -128.31527710]
[-45.63505554 -144.71408081]
[-31.24858093 -152.58563232]
[-17.38091469 -143.83236694]
[-18.29792404 -127.45886993]
[-11.09795666 -114.29982758]
[-3.89798927 -101.14078522]
[3.30197787 -87.98173523]
[10.50194550 -74.82269287]
[22.00533295 -71.13410187]
[28.11681938 -60.25206757]
[25.09262657 -47.73088837]
[32.12733078 -34.48276138]
[46.87686539 -32.58823013]
[57.81193542 -22.24955177]
[60.59496689 -7.27930975]
[53.95264053 6.61981487]
[60.98734283 19.86794472]
[68.02204895 33.11607361]
[80.82453918 40.72826767]
[80.46289825 56.54534149]
[87.49760437 69.79347229]
[93.23841858 74.13323975]
[97.53444672 79.36665344]
[101.25024414 64.83417511]
[104.96604156 50.30170059]
[108.68183899 35.76922607]
[97.64164734 25.09169388]
[93.43475342 10.32017994]
[97.19279480 -4.57185411]
[107.90487671 -15.57852650]
[122.68950653 -19.73909760]
[137.56968689 -15.93439388]
[148.54272461 -5.18786192]
[152.65693665 9.60973454]
[148.80560303 24.47791672]
[138.02473450 35.41721725]
[123.21431732 39.48502350]
[119.49851990 54.01749802]
[115.78271484 68.54997253]
[112.06691742 83.08245087]
[121.25208282 91.83837891]
[124.16553497 105.34989929]
[118.58071899 119.22407532]
[105.25038147 128.23716736]
[88.02246857 128.27404785]
[72.75450134 118.06729889]
[78.25541687 132.02221680]
[83.75633240 145.97714233]
[89.25724792 159.93206787]
[94.75816345 173.88699341]
[100.25907135 187.84191895]
[105.75998688 201.79684448]
[111.26090240 215.75177002]
[116.76181793 229.70669556]
[122.80477142 236.52114868]
[122.24304962 243.87086487]
[127.56887817 257.89355469]
[132.89469910 271.91622925]
[145.02769470 282.07009888]
[142.31340027 296.71530151]
[147.63922119 310.73797607]
[152.96504211 324.76065063]
[158.29087830 338.78332520]
[166.61466980 351.26190186]
[177.51573181 361.56561279]
[188.41677856 371.86935425]
[203.76075745 375.72592163]
[207.69525146 390.09149170]
[218.59631348 400.39520264]
[229.49737549 410.69894409]
[240.39842224 421.00268555]
[251.29948425 431.30642700]
[262.20053101 441.61016846]
[273.10159302 451.91390991]
[284.00265503 462.21762085]
[299.32727051 454.17733765]
[316.45516968 451.88171387]
[333.30783081 455.59228516]
[347.84597778 464.84259033]
[358.31640625 478.49707031]
[363.46334839 494.89010620]
[362.67904663 512.02947998]
[356.07556152 527.83825684]
[367.35574341 537.72552490]
[378.63592529 547.61279297]
[389.91610718 557.50000000]
[401.19628906 567.38726807]
[405.42431641 568.07629395]
[408.87658691 569.88128662]
[411.29956055 572.42596436]
[412.58621216 575.29058838]
[412.77755737 578.06268311]
[423.54879761 588.50207520]
[438.84329224 592.55035400]
[442.59768677 606.96405029]
[453.36892700 617.40338135]
[464.14016724 627.84277344]
[479.43469238 631.89111328]
[483.18908691 646.30474854]
[493.96032715 656.74414062]
[504.73156738 667.18347168]
[515.50280762 677.62286377]
[530.79730225 681.67114258]
[534.55169678 696.08483887]
[545.32293701 706.52416992]
[556.09417725 716.96356201]
[569.58227539 710.08239746]
[584.57415771 707.95605469]
[599.44372559 710.81524658]
[612.57800293 718.34985352]
[622.55224609 729.74255371]
[628.28454590 743.75750732]
[629.15313721 758.87451172]
[625.06372070 773.45379639]
[616.46002197 785.91394043]
[604.27514648 794.90325928]
[589.83093262 799.44677734]
[574.69415283 799.05157471]
[560.50671387 793.76049805]
[548.80755615 784.14758301]
[540.86572266 771.25549316]
[537.54272461 756.48266602]
[539.19897461 741.43157959]
[545.65484619 727.73480225]
[534.88360596 717.29541016]
[524.11236572 706.85607910]
[509.58825684 703.55444336]
[505.06344604 688.39410400]
[494.29220581 677.95471191]
[483.52096558 667.51538086]
[472.74972534 657.07598877]
[458.22564697 653.77435303]
[453.70080566 638.61401367]
[442.92956543 628.17462158]
[432.15832520 617.73529053]
[417.63427734 614.43365479]
[413.10943604 599.27331543]
[402.33819580 588.83392334]
[391.30902100 578.66741943]
[380.02883911 568.78021240]
[368.74868774 558.89294434]
[357.46850586 549.00573730]
[346.18832397 539.11846924]
[335.40368652 546.05114746]
[323.18121338 549.96612549]
[310.34875488 550.59082031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[16 170]
[17 169]
[18 168]
[22 52]
[23 51]
[24 50]
[25 49]
[27 48]
[28 47]
[29 46]
[55 167]
[56 166]
[57 165]
[58 164]
[60 162]
[61 161]
[62 160]
[63 158]
[64 157]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[70 151]
[71 150]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[87 125]
[88 124]
[90 122]
[91 121]
[92 120]
[96 116]
[97 115]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[127 144]
[128 143]
[129 142]
[130 141]
[187 247]
[188 246]
[189 245]
[190 244]
[191 243]
[196 242]
[197 241]
[199 239]
[200 238]
[201 237]
[203 235]
[204 234]
[205 233]
[206 232]
[208 230]
[209 229]
[210 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
