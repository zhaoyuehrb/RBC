%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYB5R4)
} def

/sequence { (\
AAUGCGCCUCACCCCUGGCGACCCCGGAAGUGGGUCGGGGGCUUGGCCUCUGCCCGGCCACAGAGCCGGAGCUGGAGGUGCUGUCCCGUCUGGCGGCGAUCCCCGGGCAGGGCCCGGGGCCGGGGUUUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 127 0.005283896 ubox
1 128 0.015741633 ubox
2 126 0.003218090 ubox
2 127 0.014942267 ubox
3 11 0.007111830 ubox
3 20 0.004819189 ubox
3 129 0.007003798 ubox
4 10 0.008723767 ubox
4 19 0.014568912 ubox
4 126 0.007087791 ubox
4 128 0.009893132 ubox
5 18 0.014310186 ubox
5 20 0.886322034 ubox
5 125 0.007232448 ubox
5 129 0.021419244 ubox
6 19 0.972989680 ubox
6 126 0.022620779 ubox
6 128 0.009205164 ubox
7 18 0.973236156 ubox
7 123 0.006628452 ubox
7 125 0.023563317 ubox
8 17 0.973128116 ubox
8 18 0.003585912 ubox
8 122 0.006617704 ubox
8 123 0.003171070 ubox
8 124 0.023561473 ubox
8 132 0.057099742 ubox
9 18 0.003405175 ubox
9 99 0.003389801 ubox
9 123 0.023500568 ubox
9 130 0.189279260 ubox
9 131 0.041795132 ubox
10 17 0.010401823 ubox
10 20 0.003352499 ubox
10 98 0.003667450 ubox
10 122 0.023367833 ubox
10 129 0.202428283 ubox
11 16 0.015955683 ubox
11 126 0.080532356 ubox
11 128 0.190536586 ubox
12 18 0.006127214 ubox
12 41 0.016220175 ubox
12 96 0.004600804 ubox
12 119 0.015860673 ubox
12 125 0.095151831 ubox
13 17 0.006126497 ubox
13 40 0.016296933 ubox
13 41 0.003353802 ubox
13 95 0.004607807 ubox
13 118 0.015867529 ubox
13 119 0.006453249 ubox
13 124 0.094091781 ubox
13 125 0.206103757 ubox
14 39 0.016296474 ubox
14 40 0.003390087 ubox
14 93 0.004525737 ubox
14 117 0.015865525 ubox
14 118 0.006464553 ubox
14 123 0.092913036 ubox
14 124 0.207047102 ubox
14 125 0.003199003 ubox
15 38 0.016287766 ubox
15 39 0.003395296 ubox
15 92 0.004520644 ubox
15 116 0.015851556 ubox
15 117 0.006469044 ubox
15 122 0.091628163 ubox
15 123 0.207586650 ubox
15 132 0.007792353 ubox
16 37 0.011094291 ubox
16 116 0.006462498 ubox
16 122 0.207960195 ubox
16 131 0.007919594 ubox
17 36 0.009199558 ubox
17 90 0.004463652 ubox
17 114 0.015837901 ubox
17 115 0.006467073 ubox
17 121 0.226108820 ubox
18 35 0.008648522 ubox
18 89 0.004386327 ubox
18 113 0.015917738 ubox
18 114 0.006235244 ubox
18 120 0.225375007 ubox
19 34 0.005902232 ubox
19 37 0.194115279 ubox
19 45 0.016984906 ubox
19 88 0.004248309 ubox
19 98 0.005818032 ubox
19 112 0.015483193 ubox
19 119 0.113819124 ubox
19 129 0.013054825 ubox
20 36 0.225149980 ubox
20 44 0.018869176 ubox
20 97 0.006822035 ubox
20 127 0.372628882 ubox
20 128 0.030381122 ubox
21 35 0.225171737 ubox
21 43 0.018896430 ubox
21 126 0.926073085 ubox
21 127 0.044360641 ubox
22 34 0.218151637 ubox
22 40 0.023210428 ubox
22 41 0.027306150 ubox
22 96 0.007803502 ubox
22 125 0.973046956 ubox
23 33 0.210859231 ubox
23 34 0.057349892 ubox
23 39 0.023322334 ubox
23 40 0.027365295 ubox
23 95 0.007810419 ubox
23 107 0.005208029 ubox
23 124 0.973456915 ubox
24 32 0.202973750 ubox
24 33 0.080277483 ubox
24 38 0.023355205 ubox
24 39 0.027350834 ubox
24 93 0.007758489 ubox
24 106 0.005221003 ubox
24 123 0.973460191 ubox
25 32 0.097823867 ubox
25 37 0.023373388 ubox
25 38 0.027323277 ubox
25 92 0.007762198 ubox
25 98 0.006433041 ubox
25 105 0.005223510 ubox
25 122 0.973441944 ubox
26 31 0.099889641 ubox
26 36 0.023121367 ubox
26 91 0.007736798 ubox
26 97 0.009057659 ubox
26 104 0.005224865 ubox
26 121 0.972971884 ubox
27 35 0.019939378 ubox
27 36 0.027893394 ubox
27 90 0.007734263 ubox
27 103 0.005219016 ubox
27 120 0.970008863 ubox
28 35 0.026692781 ubox
28 44 0.009766246 ubox
28 89 0.007508856 ubox
28 100 0.009116011 ubox
29 43 0.010244229 ubox
30 42 0.010307055 ubox
30 58 0.004066819 ubox
30 61 0.004352457 ubox
30 94 0.917072102 ubox
30 97 0.077490531 ubox
30 100 0.017456409 ubox
31 37 0.007644093 ubox
31 41 0.010241351 ubox
31 45 0.013040647 ubox
31 56 0.030184014 ubox
31 57 0.003507769 ubox
31 60 0.004302083 ubox
31 88 0.004865396 ubox
31 92 0.022441988 ubox
31 93 0.916964432 ubox
31 95 0.011016457 ubox
31 96 0.076263913 ubox
31 98 0.024077227 ubox
31 99 0.017993682 ubox
31 116 0.279365424 ubox
32 36 0.009590052 ubox
32 44 0.020809054 ubox
32 55 0.040141549 ubox
32 59 0.003568626 ubox
32 87 0.007046501 ubox
32 91 0.037181173 ubox
32 94 0.014520005 ubox
32 97 0.031934748 ubox
32 102 0.016544917 ubox
32 115 0.284749839 ubox
33 43 0.023229978 ubox
33 54 0.040196261 ubox
33 55 0.003382999 ubox
33 59 0.003827875 ubox
33 86 0.007174444 ubox
33 90 0.041304750 ubox
33 91 0.916161109 ubox
33 101 0.024840369 ubox
33 114 0.284776304 ubox
34 42 0.023531948 ubox
34 53 0.040225234 ubox
34 54 0.003400619 ubox
34 58 0.004494466 ubox
34 85 0.007053003 ubox
34 89 0.039786085 ubox
34 90 0.917358845 ubox
34 94 0.098178630 ubox
34 97 0.055371894 ubox
34 100 0.031061980 ubox
34 113 0.284774983 ubox
35 41 0.023493071 ubox
35 52 0.006371684 ubox
35 57 0.005070599 ubox
35 88 0.016800774 ubox
35 93 0.098220705 ubox
35 96 0.055399591 ubox
35 99 0.031596264 ubox
35 111 0.011132937 ubox
35 112 0.284365826 ubox
36 40 0.022674946 ubox
36 45 0.003252839 ubox
36 52 0.039870296 ubox
36 56 0.005132698 ubox
36 83 0.004740966 ubox
36 88 0.899667180 ubox
36 92 0.097849521 ubox
36 95 0.055419422 ubox
36 98 0.031677895 ubox
36 110 0.015680609 ubox
36 111 0.282962263 ubox
37 50 0.003722899 ubox
37 51 0.040530254 ubox
37 55 0.005122481 ubox
37 82 0.003231262 ubox
37 85 0.008669603 ubox
37 86 0.007100185 ubox
37 87 0.830820089 ubox
37 90 0.017841009 ubox
37 91 0.093429674 ubox
37 94 0.055135478 ubox
37 97 0.023064239 ubox
38 49 0.003716217 ubox
38 50 0.040682494 ubox
38 54 0.005101796 ubox
38 84 0.009880408 ubox
38 85 0.007935660 ubox
38 86 0.753751709 ubox
38 87 0.545869011 ubox
38 89 0.005243510 ubox
38 90 0.052325102 ubox
39 48 0.003739129 ubox
39 49 0.040684556 ubox
39 53 0.004937991 ubox
39 84 0.006754457 ubox
39 85 0.667388173 ubox
39 86 0.653055933 ubox
39 87 0.030598225 ubox
39 89 0.008937592 ubox
40 47 0.003712835 ubox
40 48 0.041006543 ubox
40 82 0.217221437 ubox
40 84 0.511926769 ubox
40 85 0.740755245 ubox
40 86 0.030959526 ubox
40 87 0.004468611 ubox
41 47 0.041016235 ubox
41 81 0.269609412 ubox
41 84 0.818808385 ubox
41 85 0.030854161 ubox
41 86 0.004319850 ubox
42 46 0.040728466 ubox
42 80 0.269691599 ubox
42 83 0.891500912 ubox
44 80 0.026487600 ubox
44 83 0.009449999 ubox
45 79 0.029415795 ubox
45 82 0.021033966 ubox
46 79 0.994692217 ubox
46 81 0.020882791 ubox
47 78 0.998989101 ubox
47 80 0.015825873 ubox
48 77 0.999112242 ubox
48 78 0.005113897 ubox
49 75 0.019145779 ubox
49 76 0.998782161 ubox
50 74 0.043703274 ubox
50 75 0.998040963 ubox
51 74 0.934647672 ubox
52 72 0.990796142 ubox
52 73 0.120538724 ubox
53 71 0.997781797 ubox
54 69 0.999033849 ubox
55 68 0.999144128 ubox
56 67 0.999163337 ubox
57 66 0.999177654 ubox
57 79 0.008794008 ubox
57 97 0.038112414 ubox
58 65 0.997179853 ubox
58 78 0.009427512 ubox
58 96 0.038162292 ubox
59 77 0.009428907 ubox
59 95 0.038142346 ubox
60 84 0.003413586 ubox
61 74 0.008284711 ubox
61 83 0.003831452 ubox
61 92 0.014123439 ubox
62 73 0.008190320 ubox
62 82 0.003859748 ubox
62 91 0.014132011 ubox
63 72 0.008103273 ubox
63 81 0.003829547 ubox
63 90 0.014139278 ubox
64 73 0.005133032 ubox
64 89 0.013053970 ubox
65 72 0.005345041 ubox
65 79 0.003762573 ubox
65 89 0.004528270 ubox
65 94 0.036042059 ubox
66 71 0.005362647 ubox
66 78 0.003958132 ubox
66 88 0.008431394 ubox
66 93 0.036055174 ubox
67 77 0.003957706 ubox
67 88 0.009467623 ubox
67 92 0.036054050 ubox
68 86 0.009587043 ubox
68 87 0.009754075 ubox
68 91 0.036023253 ubox
69 85 0.009630596 ubox
69 86 0.009701002 ubox
69 90 0.036037193 ubox
70 82 0.011446802 ubox
70 84 0.007598555 ubox
70 89 0.032072986 ubox
71 81 0.013723078 ubox
71 84 0.004904808 ubox
71 89 0.016095458 ubox
71 94 0.003779567 ubox
72 80 0.013730878 ubox
72 83 0.005199452 ubox
72 88 0.030743074 ubox
72 93 0.003867357 ubox
73 88 0.005921870 ubox
73 92 0.003851560 ubox
74 82 0.003517676 ubox
74 86 0.035074472 ubox
74 87 0.007910010 ubox
74 91 0.003846333 ubox
75 81 0.003725066 ubox
75 85 0.035145940 ubox
75 86 0.007734224 ubox
75 90 0.003862517 ubox
75 101 0.004042809 ubox
76 84 0.034791490 ubox
76 89 0.003734354 ubox
76 100 0.004056030 ubox
77 85 0.006530452 ubox
78 84 0.005351667 ubox
78 85 0.003165639 ubox
79 98 0.014536269 ubox
79 99 0.003212633 ubox
80 97 0.048245827 ubox
81 96 0.048294128 ubox
82 95 0.048258132 ubox
82 98 0.003871130 ubox
83 94 0.048278237 ubox
83 97 0.005184358 ubox
83 100 0.011347627 ubox
84 93 0.045827085 ubox
84 96 0.005162599 ubox
84 99 0.012157735 ubox
85 92 0.045161616 ubox
85 93 0.014597404 ubox
85 95 0.005164970 ubox
85 98 0.012548651 ubox
86 92 0.014604744 ubox
86 93 0.006638818 ubox
86 96 0.013807546 ubox
87 92 0.006940626 ubox
87 95 0.015077687 ubox
87 98 0.064086416 ubox
87 110 0.004224937 ubox
88 94 0.025762056 ubox
88 97 0.223246778 ubox
88 100 0.054984138 ubox
88 108 0.284645368 ubox
89 93 0.024133637 ubox
89 96 0.223110038 ubox
89 99 0.057772512 ubox
89 107 0.284803067 ubox
90 95 0.221496111 ubox
90 96 0.011732715 ubox
90 98 0.057863091 ubox
90 106 0.285095078 ubox
90 110 0.008028195 ubox
91 95 0.010746306 ubox
91 98 0.024100329 ubox
91 105 0.284896118 ubox
91 109 0.008049135 ubox
92 97 0.050103453 ubox
92 101 0.004312257 ubox
92 104 0.285087094 ubox
92 108 0.008014943 ubox
92 121 0.004070116 ubox
93 100 0.003746278 ubox
93 102 0.004145627 ubox
93 103 0.285016744 ubox
93 120 0.004079531 ubox
94 105 0.008053808 ubox
94 122 0.003637357 ubox
95 101 0.060451003 ubox
95 102 0.279987362 ubox
95 103 0.003466087 ubox
95 104 0.008106661 ubox
95 121 0.029066869 ubox
96 100 0.043550765 ubox
96 101 0.275697199 ubox
96 102 0.004772365 ubox
96 103 0.008045679 ubox
96 120 0.030383840 ubox
97 119 0.023066858 ubox
98 121 0.009792416 ubox
100 119 0.014439458 ubox
101 118 0.019401899 ubox
101 119 0.938990489 ubox
102 117 0.015871356 ubox
102 118 0.957918153 ubox
102 119 0.006243310 ubox
103 116 0.011232146 ubox
103 117 0.958281996 ubox
103 118 0.005334885 ubox
104 116 0.958341084 ubox
104 117 0.003789143 ubox
105 115 0.958413663 ubox
106 114 0.958428713 ubox
107 113 0.958390901 ubox
108 112 0.951418396 ubox
126 132 0.004289453 ubox
127 131 0.011773598 ubox
5 20 0.9500000 lbox
6 19 0.9500000 lbox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
21 126 0.9500000 lbox
22 125 0.9500000 lbox
23 124 0.9500000 lbox
24 123 0.9500000 lbox
25 122 0.9500000 lbox
26 121 0.9500000 lbox
27 120 0.9500000 lbox
30 94 0.9500000 lbox
31 93 0.9500000 lbox
33 91 0.9500000 lbox
34 90 0.9500000 lbox
36 88 0.9500000 lbox
37 87 0.9500000 lbox
38 86 0.9500000 lbox
39 85 0.9500000 lbox
40 84 0.9500000 lbox
46 79 0.9500000 lbox
47 78 0.9500000 lbox
48 77 0.9500000 lbox
49 76 0.9500000 lbox
50 75 0.9500000 lbox
51 74 0.9500000 lbox
52 72 0.9500000 lbox
53 71 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
101 119 0.9500000 lbox
102 118 0.9500000 lbox
103 117 0.9500000 lbox
104 116 0.9500000 lbox
105 115 0.9500000 lbox
106 114 0.9500000 lbox
107 113 0.9500000 lbox
108 112 0.9500000 lbox
showpage
end
%%EOF
