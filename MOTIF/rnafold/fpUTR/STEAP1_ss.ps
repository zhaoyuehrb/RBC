%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGACGCGGGGCGCCAGCAGGUGGCGCUGGACGCGCAACGGACAAGGAGGCGGGGCCUGCAGCUGGCUUGGAGGCUCCGCGCUCUGGAGGCUCAGGCGCCGCGUGGGGCCCGCACCUCUGGGCAGCAGCGGCAGCCGAGACUCACGGUCAAGCUAAGGCGAAGAGUGGGUGGCUGAAGCCAUACUAUUUUAUAGAAUUA\
) } def
/len { sequence length } bind def

/coor [
[84.43283081 119.29913330]
[76.93856049 119.59211731]
[67.59931183 131.33001709]
[69.89705658 148.66796875]
[59.15910721 162.04266357]
[42.40716934 163.48791504]
[33.25251389 175.37036133]
[24.09786034 187.25279236]
[14.94320774 199.13523865]
[13.18605995 219.21163940]
[-4.98436165 225.81028748]
[-13.76316261 237.97303772]
[-22.54196358 250.13580322]
[-31.32076645 262.29855347]
[-40.09956741 274.46130371]
[-48.87836838 286.62408447]
[-57.65716934 298.78683472]
[-56.52772141 314.79006958]
[-68.43243408 325.54449463]
[-84.23902893 322.80020142]
[-91.82203674 308.66238403]
[-85.36443329 293.97637939]
[-69.81992340 290.00802612]
[-61.04112625 277.84527588]
[-52.26232529 265.68252563]
[-43.48352051 253.51976013]
[-34.70471954 241.35699463]
[-25.92591858 229.19424438]
[-17.14711761 217.03147888]
[-19.67900467 207.12165833]
[-16.26247215 197.24824524]
[-7.79882097 190.75502014]
[3.06077027 189.98057556]
[12.21542454 178.09814453]
[21.37007713 166.21569824]
[30.52473259 154.33326721]
[27.09610939 141.90768433]
[31.51858330 129.59313965]
[42.38755798 121.96403503]
[55.86140442 121.99076843]
[65.20065308 110.25286865]
[69.13951874 95.77925873]
[67.03644562 80.92742157]
[64.93337250 66.07558441]
[49.93644714 59.41929245]
[40.94702911 45.90896988]
[40.60787201 29.86487961]
[27.50185776 22.56882477]
[14.39584446 15.27276993]
[1.28983152 7.97671556]
[-11.87279892 0.78330451]
[-25.09124184 -6.30702305]
[-38.30968475 -13.39735031]
[-51.52812958 -20.48767853]
[-64.74657440 -27.57800674]
[-77.96501923 -34.66833496]
[-91.18346405 -41.75865936]
[-104.40190887 -48.84898758]
[-117.62034607 -55.93931580]
[-133.43879700 -55.64416122]
[-140.99711609 -68.47853088]
[-154.21556091 -75.56886292]
[-167.43400574 -82.65918732]
[-183.14662170 -79.41985321]
[-195.38319397 -89.79509735]
[-194.75688171 -105.82592010]
[-181.74813843 -115.21485138]
[-166.33615112 -110.75949860]
[-160.34367371 -95.87763214]
[-147.12522888 -88.78730774]
[-133.90678406 -81.69697571]
[-119.03380585 -82.49928284]
[-110.53002167 -69.15776062]
[-97.31157684 -62.06743240]
[-84.09313202 -54.97710419]
[-70.87468719 -47.88677597]
[-57.65624619 -40.79644775]
[-44.43780136 -33.70612335]
[-31.21935844 -26.61579514]
[-18.00091553 -19.52546692]
[-4.78247118 -12.43513966]
[2.60390353 -12.04341984]
[8.58588600 -5.12929773]
[21.69190025 2.16675711]
[34.79791260 9.46281242]
[47.90392685 16.75886726]
[60.20289230 9.33248234]
[74.56122589 8.82861233]
[81.54804230 -4.44483805]
[88.53485107 -17.71828842]
[88.11608887 -33.53395081]
[100.89099884 -41.19233322]
[107.87781525 -54.46578217]
[114.86462402 -67.73923492]
[116.09459686 -76.79883575]
[122.06577301 -81.16427612]
[129.25918579 -94.32690430]
[136.45259094 -107.48954010]
[143.54292297 -120.70798492]
[150.52972412 -133.98143005]
[157.51654053 -147.25488281]
[164.50335693 -160.52833557]
[171.49015808 -173.80178833]
[172.72013855 -182.86137390]
[178.69131470 -187.22682190]
[185.88471985 -200.38945007]
[181.66366577 -215.38346863]
[189.14631653 -228.62977600]
[203.46682739 -232.56150818]
[210.66023254 -245.72413635]
[217.85365295 -258.88674927]
[225.04705811 -272.04940796]
[232.24047852 -285.21203613]
[227.55332947 -300.30526733]
[234.98539734 -314.25302124]
[250.12736511 -318.78033447]
[263.99575806 -311.20123291]
[268.36273193 -296.01223755]
[260.63742065 -282.22473145]
[245.40310669 -278.01861572]
[238.20968628 -264.85598755]
[231.01628113 -251.69335938]
[223.82287598 -238.53071594]
[216.62945557 -225.36808777]
[221.05406189 -211.19210815]
[213.94642639 -197.74085999]
[199.04734802 -193.19604492]
[191.85394287 -180.03341675]
[184.76361084 -166.81497192]
[177.77680969 -153.54151917]
[170.78999329 -140.26806641]
[163.80317688 -126.99462128]
[156.81637573 -113.72116852]
[156.48239136 -106.33196259]
[149.61521912 -100.29612732]
[142.42181396 -87.13349915]
[135.22839355 -73.97086334]
[128.13807678 -60.75242233]
[121.15126038 -47.47897339]
[114.16445160 -34.20552444]
[115.08296204 -19.33926582]
[101.80830383 -10.73147678]
[94.82148743 2.54197335]
[87.83467865 15.81542301]
[95.69129944 27.59999084]
[96.96533203 41.82583237]
[91.23274994 55.03789902]
[79.78520966 63.97251129]
[81.88828278 78.82434845]
[83.99135590 93.67618561]
[86.24285126 76.21823120]
[105.47881317 62.66385651]
[134.95709229 67.10945129]
[149.71543884 69.79109955]
[164.96379089 63.75622559]
[177.64448547 74.15489197]
[174.71270752 90.28984070]
[159.18441772 95.56282806]
[147.03379822 84.54944611]
[132.27545166 81.86779785]
[128.67874146 88.44911194]
[121.48533630 101.61174011]
[117.88862610 108.19306183]
[128.11573792 119.16603088]
[138.34286499 130.13899231]
[148.56997681 141.11196899]
[158.79710388 152.08494568]
[169.02421570 163.05790710]
[179.25132751 174.03088379]
[189.56388855 184.92358398]
[199.96125793 195.73538208]
[210.35862732 206.54716492]
[220.75598145 217.35896301]
[231.15335083 228.17074585]
[247.04942322 232.20150757]
[251.24571228 248.05468750]
[239.42543030 259.42187500]
[223.74829102 254.60949707]
[220.34156799 238.56811523]
[209.94419861 227.75631714]
[199.54682922 216.94453430]
[189.14945984 206.13275146]
[178.75210571 195.32095337]
[171.84414673 192.67668152]
[168.27836609 184.25799561]
[158.05123901 173.28501892]
[147.82412720 162.31205750]
[137.59701538 151.33908081]
[127.36989594 140.36611938]
[117.14277649 129.39314270]
[106.91565704 118.42017365]
[99.42137909 118.71315765]
[103.13580322 133.24598694]
[106.85021973 147.77882385]
[113.16859436 161.38316345]
[107.99961090 175.46441650]
[94.38003540 181.74987793]
[80.31132507 176.54685974]
[74.05880737 162.91212463]
[79.29581451 148.85604858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[6 36]
[7 35]
[8 34]
[9 33]
[11 29]
[12 28]
[13 27]
[14 26]
[15 25]
[16 24]
[17 23]
[42 150]
[43 149]
[44 148]
[47 86]
[48 85]
[49 84]
[50 83]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[57 75]
[58 74]
[59 73]
[61 71]
[62 70]
[63 69]
[88 144]
[89 143]
[90 142]
[92 140]
[93 139]
[94 138]
[96 137]
[97 136]
[98 135]
[99 133]
[100 132]
[101 131]
[102 130]
[103 129]
[105 128]
[106 127]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
[153 160]
[154 159]
[163 191]
[164 190]
[165 189]
[166 188]
[167 187]
[168 186]
[169 185]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
