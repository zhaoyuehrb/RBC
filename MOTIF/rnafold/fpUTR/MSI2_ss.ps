%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCGCUGCCCCGGCUCCGCCGCUCGCAGAGAGAUUCGGAGGAGCCCGGGCGGGGGGGAGGAGGAGGGGGAGGAGGGAGCGGAGAUCUCGGGGCUCGGAGCCGGCCGCCGCUCCGCUCCGAUCGCUGUGGGGCUUGGUUUUUUGGGGGUGGGGGGGCGGGGGGGCUCAGAU\
) } def
/len { sequence length } bind def

/coor [
[67.77854919 103.96710205]
[54.16491699 110.26543427]
[40.55128479 116.56377411]
[31.27539444 129.38049316]
[16.47562790 127.70236206]
[2.86199617 134.00070190]
[-6.41389275 146.81742859]
[-21.21365929 145.13928223]
[-34.82728958 151.43762207]
[-48.44092178 157.73594666]
[-62.05455399 164.03428650]
[-75.66818237 170.33262634]
[-89.28181458 176.63096619]
[-98.55770874 189.44769287]
[-113.35747528 187.76954651]
[-126.97110748 194.06788635]
[-140.58473206 200.36622620]
[-154.19836426 206.66455078]
[-167.81199646 212.96289062]
[-181.42562866 219.26123047]
[-190.70152283 232.07795715]
[-205.50128174 230.39981079]
[-219.11491394 236.69815063]
[-232.72854614 242.99649048]
[-246.16662598 249.66116333]
[-259.41931152 256.68728638]
[-272.67199707 263.71340942]
[-278.73657227 278.56604004]
[-294.16998291 282.94659424]
[-307.13305664 273.49465942]
[-307.68161011 257.46099854]
[-295.39483643 247.14521790]
[-279.69812012 250.46073914]
[-266.44543457 243.43461609]
[-253.19276428 236.40847778]
[-251.81488037 233.12745667]
[-248.76033020 230.36170959]
[-244.29396057 228.90063477]
[-239.02688599 229.38285828]
[-225.41325378 223.08451843]
[-211.79962158 216.78617859]
[-203.49746704 204.41995239]
[-187.72396851 205.64759827]
[-174.11033630 199.34925842]
[-160.49670410 193.05091858]
[-146.88307190 186.75259399]
[-133.26943970 180.45425415]
[-119.65580750 174.15591431]
[-111.35366058 161.78968811]
[-95.58015442 163.01733398]
[-81.96652222 156.71899414]
[-68.35289001 150.42065430]
[-54.73925781 144.12232971]
[-41.12562943 137.82398987]
[-27.51199722 131.52565002]
[-19.20984650 119.15942383]
[-3.43634033 120.38706207]
[10.17729092 114.08872986]
[18.47944260 101.72250366]
[34.25294876 102.95014191]
[47.86657715 96.65180969]
[61.48020935 90.35346985]
[47.38891983 95.49501801]
[32.67413712 92.58379364]
[21.60222054 82.46388245]
[17.38332558 68.06940460]
[21.24066544 53.57385635]
[32.05585480 43.18002701]
[46.69317245 39.90147018]
[60.90872192 44.68875885]
[70.58089447 56.15388107]
[72.90565491 70.97025299]
[71.82328796 56.00935364]
[70.74092102 41.04845428]
[55.95748901 29.24410248]
[54.48582458 10.70282936]
[66.79336548 -2.81471062]
[65.17157745 -17.72677994]
[63.54979324 -32.63885117]
[61.92800903 -47.55091858]
[48.83260727 -56.09752655]
[44.34410095 -71.07709503]
[50.58182144 -85.41671753]
[64.60050964 -92.34567261]
[79.78096771 -88.59231567]
[88.95545197 -75.92887115]
[87.79204559 -60.33462143]
[76.84008026 -49.17270279]
[78.46186066 -34.26063538]
[80.08364868 -19.34856606]
[81.70543671 -4.43649578]
[91.96939087 0.63689071]
[98.56493378 10.14221096]
[99.74929047 21.77160454]
[95.11105347 32.63228226]
[85.70182037 39.96608734]
[86.78418732 54.92698669]
[87.86655426 69.88788605]
[114.41799164 74.71813965]
[125.44990540 96.12286377]
[140.29370117 98.28195953]
[155.13749695 100.44104767]
[169.98129272 102.60013580]
[184.82508850 104.75922394]
[198.63354492 94.04627228]
[215.58660889 96.56770325]
[225.28981018 110.28494263]
[240.17016602 112.17568207]
[255.05052185 114.06642914]
[269.93087769 115.95717621]
[284.81124878 117.84792328]
[299.47662354 111.91184235]
[311.12710571 121.19169617]
[326.00744629 123.08244324]
[340.88781738 124.97319031]
[355.76818848 126.86393738]
[370.64852905 128.75468445]
[385.52890015 130.64543152]
[400.40924072 132.53617859]
[415.28961182 134.42692566]
[430.16998291 136.31765747]
[445.12048340 137.53504944]
[460.11071777 138.07658386]
[475.10092163 138.61811829]
[490.09115601 139.15965271]
[505.08871460 139.43046570]
[520.08868408 139.43046570]
[535.08868408 139.43046570]
[549.01251221 130.76676941]
[563.34796143 138.73089600]
[563.34796143 155.13003540]
[549.01251221 163.09416199]
[535.08868408 154.43046570]
[520.08868408 154.43046570]
[505.08871460 154.43046570]
[501.11700439 157.13905334]
[495.39456177 157.35783386]
[489.54962158 154.14987183]
[474.55938721 153.60833740]
[459.56918335 153.06680298]
[444.57894897 152.52526855]
[452.56042480 165.22550964]
[447.78265381 179.44425964]
[433.75155640 184.74787903]
[420.76306152 177.24459839]
[418.34808350 162.44027710]
[428.27923584 151.19802856]
[413.39886475 149.30728149]
[398.51849365 147.41653442]
[383.63815308 145.52578735]
[368.75778198 143.63504028]
[353.87744141 141.74429321]
[338.99707031 139.85354614]
[324.11669922 137.96279907]
[309.23635864 136.07205200]
[295.63531494 142.14337158]
[282.92050171 132.72828674]
[268.04013062 130.83753967]
[253.15977478 128.94679260]
[238.27941895 127.05604553]
[223.39906311 125.16529846]
[214.39872742 134.41415405]
[201.52062988 136.81567383]
[189.43754578 131.27001953]
[182.66600037 119.60302734]
[167.82220459 117.44393158]
[152.97840881 115.28484344]
[138.13461304 113.12575531]
[123.29080963 110.96666718]
[117.32448578 120.53102112]
[107.49271393 126.96219635]
[95.39823914 128.73803711]
[83.21908569 125.13785553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[5 58]
[6 57]
[8 55]
[9 54]
[10 53]
[11 52]
[12 51]
[13 50]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[22 41]
[23 40]
[24 39]
[25 35]
[26 34]
[27 33]
[72 98]
[73 97]
[74 96]
[77 91]
[78 90]
[79 89]
[80 88]
[100 169]
[101 168]
[102 167]
[103 166]
[104 165]
[107 161]
[108 160]
[109 159]
[110 158]
[111 157]
[113 155]
[114 154]
[115 153]
[116 152]
[117 151]
[118 150]
[119 149]
[120 148]
[121 147]
[122 141]
[123 140]
[124 139]
[125 138]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
