%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAUUCUUACAAAAACUGAAAGUGAAAUGAGGAAGACAGAUUGAGCAAUCCAAUCGGAGGGUAAAUGCCAGCAAACCUACUGUACAGUAGGGGUAGAGAUGCAGAAAGGCAGAAAGGAGAAAAUUCAGGAUAACUCUCCUGAGGGGUGAGCCAAGCCCUGCCAUGUAGUGCACGCAGGACAUCAACAAACACAGAUAACAGGAAAUGAUCCAUUCCCUGUGGUCACUUAUUCUAAAGGCCCCAACCUUCAAAGU\
UCAAGUAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[107.83164978 440.51083374]
[102.44207001 454.63327026]
[93.12795258 466.53869629]
[80.71751404 475.16842651]
[66.31426239 479.75512695]
[51.19894028 479.89096069]
[36.71558762 475.56384277]
[24.15205574 467.15853882]
[14.62548256 455.42245483]
[8.98296642 441.39913940]
[7.72623539 426.33554077]
[10.96703720 411.57110596]
[18.41720200 398.41867065]
[29.41426659 388.04776001]
[42.98037720 381.38052368]
[57.90924835 379.00982666]
[60.01232147 364.15798950]
[62.11539459 349.30615234]
[64.21846771 334.45431519]
[55.57553864 327.06875610]
[51.51431274 316.32226562]
[53.14606857 304.82958984]
[60.18163300 295.44677734]
[70.97468567 290.56137085]
[73.42534637 275.76293945]
[75.87600708 260.96447754]
[78.32666779 246.16601562]
[70.24383545 228.57849121]
[83.36299133 213.24375916]
[85.46606445 198.39192200]
[87.56913757 183.54008484]
[89.67221069 168.68824768]
[91.77528381 153.83641052]
[86.08367157 148.95219421]
[77.11770630 160.97763062]
[68.15173340 173.00308228]
[59.18576050 185.02853394]
[54.17280197 199.16607666]
[39.67857742 203.02838135]
[28.29533577 193.25997925]
[29.91257668 178.34741211]
[43.12534714 171.24638367]
[53.65038300 160.55883789]
[64.17542267 149.87129211]
[74.70045471 139.18374634]
[69.00884247 134.29953003]
[54.64837646 138.63276672]
[47.13715744 152.27899170]
[32.51187134 156.46893311]
[19.54857254 149.22402954]
[5.18810272 153.55726624]
[-9.17236710 157.89050293]
[-19.99973488 170.20716858]
[-36.02466965 166.72383118]
[-40.76208878 151.02388000]
[-29.33854675 139.25804138]
[-13.50559998 143.53002930]
[0.85487026 139.19679260]
[15.21534061 134.86357117]
[22.00761032 121.65748596]
[36.50944138 117.05839539]
[50.31514359 124.27230072]
[64.67561340 119.93906403]
[65.55278015 112.49053955]
[53.52852631 103.52296448]
[67.30710602 97.59347534]
[68.18427277 90.14495087]
[55.22329712 82.59424591]
[42.26232147 75.04354858]
[29.30134392 67.49284363]
[19.53015900 77.20811462]
[6.68276310 83.30382538]
[-7.89990044 84.82122040]
[-22.58579063 81.29743195]
[-35.63441467 72.85028839]
[-45.40251923 60.19620132]
[-50.54858017 44.59577179]
[-64.30370331 38.61274338]
[-78.05882263 32.62971878]
[-91.81394196 26.64669037]
[-105.56906891 20.66366196]
[-119.32418823 14.68063450]
[-135.54811096 17.07155418]
[-145.51718140 4.05042887]
[-138.97607422 -10.98772240]
[-122.65372467 -12.57293987]
[-113.34116364 0.92551243]
[-99.58603668 6.90854025]
[-85.83091736 12.89156818]
[-72.07579803 18.87459564]
[-58.32067490 24.85762405]
[-44.56555176 30.84065056]
[-36.41528320 18.24727440]
[-28.26572609 5.65502691]
[-39.35782623 -4.44276190]
[-50.44992447 -14.54055023]
[-66.57848358 -17.50728226]
[-71.81781769 -33.04695511]
[-60.77814484 -45.17368698]
[-44.81613159 -41.41253281]
[-40.35213470 -25.63265038]
[-29.26003647 -15.53486156]
[-18.16793633 -5.43707275]
[0.11710177 -6.90082932]
[17.09166908 -1.65303004]
[30.46188545 9.15306759]
[38.58700180 23.64599228]
[40.67654037 39.54860306]
[36.85204697 54.53186798]
[49.81302261 62.08256912]
[62.77399826 69.63327026]
[75.73497772 77.18397522]
[82.25926971 73.48484802]
[74.50494385 60.64466095]
[66.75061798 47.80447388]
[58.99629211 34.96428299]
[51.24196243 22.12409782]
[41.18586731 10.99418449]
[47.82421112 -2.45692706]
[62.77520752 -1.24543142]
[67.16153717 13.09806538]
[74.19812012 26.34519768]
[81.23470306 39.59233093]
[88.27128601 52.83946228]
[95.30786896 66.08659363]
[101.83216858 62.38746643]
[102.00799561 47.38849640]
[102.18383026 32.38952637]
[102.35965729 17.39055824]
[102.53549194 2.39158893]
[102.71131897 -12.60738087]
[91.48986816 -23.73637390]
[91.50803375 -39.54065323]
[102.75505066 -50.64381790]
[118.55825043 -50.45855713]
[129.54188538 -39.09478760]
[129.18955994 -23.29442406]
[117.71028900 -12.43154907]
[117.53446198 2.56742024]
[117.35862732 17.56638908]
[117.18280029 32.56535721]
[117.00696564 47.56432724]
[116.83113861 62.56329727]
[128.27140808 72.26484680]
[143.04013062 69.64088440]
[157.80883789 67.01692200]
[172.57754517 64.39296722]
[187.34625244 61.76900482]
[172.73651123 58.36972046]
[160.36712646 49.88452148]
[151.93609619 37.47817230]
[148.60070801 22.85369682]
[150.81884766 8.01860714]
[158.28601074 -4.99067831]
[169.97717285 -14.38836765]
[184.28750610 -18.88443565]
[199.25259399 -17.86170387]
[212.81834412 -11.46045303]
[223.67068481 -21.81549454]
[234.52301025 -32.17053604]
[245.37535095 -42.52557373]
[256.22769165 -52.88061523]
[257.30319214 -65.71115112]
[266.52621460 -74.11153412]
[278.60049438 -73.99387360]
[289.57345581 -84.22098541]
[300.54641724 -94.44810486]
[308.01080322 -109.67044067]
[324.70458984 -106.71173096]
[326.48281860 -89.85129547]
[310.77355957 -83.47513580]
[299.80056763 -73.24801636]
[288.82760620 -63.02090073]
[284.58474731 -45.97742844]
[266.58270264 -42.02828217]
[255.73037720 -31.67324257]
[244.87805176 -21.31820107]
[234.02571106 -10.96316051]
[223.17338562 -0.60812008]
[225.21342468 6.60909986]
[239.64785767 2.52903199]
[254.08230591 -1.55103576]
[268.51672363 -5.63110352]
[282.95117188 -9.71117115]
[297.38562012 -13.79123878]
[309.85287476 -22.13194466]
[321.63784790 -12.85214806]
[316.45379639 1.22356844]
[301.46569824 0.64320070]
[287.03125000 4.72326851]
[272.59680176 8.80333614]
[258.16235352 12.88340378]
[243.72792053 16.96347237]
[229.29348755 21.04353905]
[231.33352661 28.26075935]
[246.00083923 31.40236282]
[260.66815186 34.54396820]
[275.78277588 29.86857986]
[286.60726929 40.09988022]
[301.27459717 43.24148560]
[315.94192505 46.38309097]
[330.60922241 49.52469254]
[345.27655029 52.66629791]
[360.39117432 47.99090958]
[371.21566772 58.22221375]
[385.88299561 61.36381531]
[400.55029297 64.50541687]
[415.21762085 67.64702606]
[431.97180176 65.05213928]
[439.10330200 80.43322754]
[426.29751587 91.54393768]
[412.07601929 82.31434631]
[397.40869141 79.17274475]
[382.74136353 76.03113556]
[368.07406616 72.88953400]
[354.00854492 77.78962708]
[342.13494873 67.33361816]
[327.46762085 64.19201660]
[312.80029297 61.05041122]
[298.13299561 57.90880585]
[283.46566772 54.76720428]
[269.40017700 59.66729736]
[257.52655029 49.21128845]
[242.85923767 46.06968307]
[228.19190979 42.92808151]
[221.33480835 56.26974487]
[214.47828674 69.61021423]
[225.57038879 79.70800018]
[236.66247559 89.80579376]
[252.43566895 88.81474304]
[264.23434448 99.32981110]
[265.05856323 115.11259460]
[254.41935730 126.79944611]
[238.62873840 127.45676422]
[227.05502319 116.69457245]
[226.56469727 100.89788818]
[215.47259521 90.80010223]
[204.38049316 80.70231628]
[189.97021484 76.53771210]
[175.20150757 79.16167450]
[160.43280029 81.78563690]
[145.66407776 84.40959930]
[130.89537048 87.03355408]
[139.12886047 102.55468750]
[138.80670166 122.62071228]
[127.76375580 142.33218384]
[106.62712097 155.93948364]
[104.52404785 170.79132080]
[102.42097473 185.64315796]
[100.31790161 200.49499512]
[98.21482849 215.34683228]
[105.21770477 223.61254883]
[106.50836182 234.14804077]
[101.90173340 243.46672058]
[93.12512207 248.61668396]
[90.67446136 263.41513062]
[88.22380066 278.21359253]
[85.77313995 293.01205444]
[97.37875366 308.01998901]
[94.34509277 326.42300415]
[79.07030487 336.55737305]
[76.96723175 351.40921021]
[74.86415863 366.26104736]
[72.76108551 381.11288452]
[86.44483185 387.53524780]
[97.62650299 397.70684814]
[105.31183624 410.72326660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 264]
[17 263]
[18 262]
[19 261]
[24 258]
[25 257]
[26 256]
[27 255]
[29 251]
[30 250]
[31 249]
[32 248]
[33 247]
[46 63]
[47 62]
[50 59]
[51 58]
[52 57]
[67 112]
[68 111]
[69 110]
[70 109]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[94 103]
[95 102]
[96 101]
[126 143]
[127 142]
[128 141]
[129 140]
[130 139]
[131 138]
[144 243]
[145 242]
[146 241]
[147 240]
[148 239]
[158 179]
[159 178]
[160 177]
[161 176]
[162 175]
[165 173]
[166 172]
[167 171]
[195 225]
[196 224]
[197 223]
[199 221]
[200 220]
[201 219]
[202 218]
[203 217]
[205 215]
[206 214]
[207 213]
[208 212]
[227 238]
[228 237]
[229 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
