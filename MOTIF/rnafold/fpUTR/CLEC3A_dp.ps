%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CLEC3A)
} def

/sequence { (\
GCAAGAUGUAGCUGUGUAGUCUCCUUCCAUAGCUGCUCUAAGGGGGCUGGCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.140997242 ubox
1 12 0.365769122 ubox
1 15 0.051507678 ubox
1 17 0.022974385 ubox
1 47 0.178441621 ubox
1 51 0.463426513 ubox
2 8 0.146211898 ubox
2 11 0.366309577 ubox
2 14 0.057732874 ubox
2 16 0.026184982 ubox
2 35 0.003185783 ubox
2 46 0.178565910 ubox
2 49 0.097292992 ubox
2 50 0.458263919 ubox
3 7 0.118663976 ubox
3 13 0.045603048 ubox
3 15 0.024331005 ubox
3 48 0.112066256 ubox
4 13 0.064369060 ubox
4 22 0.009258901 ubox
4 37 0.004542666 ubox
4 39 0.769299971 ubox
4 48 0.210485150 ubox
5 12 0.074868228 ubox
5 21 0.009806348 ubox
5 38 0.802219421 ubox
5 47 0.224541994 ubox
6 15 0.008369787 ubox
6 20 0.009780658 ubox
6 37 0.791677354 ubox
7 14 0.008657921 ubox
7 19 0.009384319 ubox
7 40 0.008921309 ubox
7 52 0.053710159 ubox
8 13 0.005503631 ubox
8 36 0.855162509 ubox
8 47 0.005908116 ubox
8 51 0.059552231 ubox
8 54 0.079935258 ubox
9 16 0.006128663 ubox
9 18 0.004943971 ubox
9 35 0.857000747 ubox
9 46 0.005314900 ubox
9 49 0.004355880 ubox
9 50 0.058366490 ubox
9 53 0.079975577 ubox
10 15 0.006767904 ubox
10 17 0.005484292 ubox
10 34 0.875908788 ubox
10 48 0.004823445 ubox
11 17 0.005314868 ubox
11 20 0.004095705 ubox
11 33 0.878356728 ubox
11 47 0.004211480 ubox
11 51 0.146355101 ubox
12 16 0.005724846 ubox
12 19 0.005017344 ubox
12 32 0.878369723 ubox
12 46 0.004184243 ubox
12 50 0.146478271 ubox
13 18 0.004732200 ubox
13 31 0.878000157 ubox
13 45 0.003686929 ubox
13 49 0.125076181 ubox
13 52 0.337979233 ubox
14 30 0.877979383 ubox
14 48 0.026282443 ubox
14 51 0.365745228 ubox
14 54 0.068434228 ubox
15 29 0.878024732 ubox
15 49 0.005421088 ubox
15 50 0.347968658 ubox
15 52 0.217889438 ubox
15 53 0.050978758 ubox
16 28 0.876549507 ubox
16 36 0.003637584 ubox
16 47 0.004094822 ubox
16 48 0.003412281 ubox
16 51 0.248257232 ubox
16 54 0.018620930 ubox
17 35 0.003643907 ubox
17 46 0.003654367 ubox
17 49 0.358649475 ubox
17 50 0.180777725 ubox
17 53 0.018483315 ubox
18 25 0.735157935 ubox
18 26 0.301006023 ubox
18 34 0.003663319 ubox
18 48 0.468992171 ubox
19 24 0.737929649 ubox
19 25 0.268522462 ubox
19 33 0.003666251 ubox
19 47 0.476245509 ubox
19 51 0.034980577 ubox
20 46 0.475810552 ubox
20 50 0.034989322 ubox
21 45 0.475950207 ubox
21 46 0.017144709 ubox
21 49 0.034992953 ubox
22 44 0.475182286 ubox
22 45 0.017229294 ubox
23 43 0.475435049 ubox
23 44 0.027398224 ubox
23 46 0.009087265 ubox
24 42 0.475416917 ubox
24 43 0.027368877 ubox
24 45 0.009095768 ubox
24 46 0.033910492 ubox
25 41 0.471580021 ubox
25 42 0.027086272 ubox
25 44 0.006855619 ubox
25 45 0.033924621 ubox
26 31 0.003764956 ubox
26 40 0.388536305 ubox
26 41 0.029594982 ubox
26 43 0.003534206 ubox
26 44 0.034602195 ubox
27 42 0.003624741 ubox
27 43 0.035867378 ubox
27 50 0.005087267 ubox
28 35 0.179705474 ubox
28 42 0.035973062 ubox
28 49 0.005121361 ubox
29 34 0.157016691 ubox
29 48 0.003556208 ubox
30 40 0.204697000 ubox
30 49 0.006262698 ubox
31 37 0.132995921 ubox
31 39 0.251436102 ubox
31 48 0.008268095 ubox
32 36 0.134229721 ubox
32 38 0.249641221 ubox
32 47 0.009164887 ubox
32 51 0.015530385 ubox
33 46 0.009180119 ubox
33 50 0.015708029 ubox
34 40 0.007920631 ubox
34 41 0.004705742 ubox
34 45 0.009130886 ubox
34 49 0.015418090 ubox
34 52 0.012553039 ubox
35 39 0.008991750 ubox
35 47 0.188226376 ubox
35 51 0.020906271 ubox
36 43 0.009725720 ubox
36 44 0.012063610 ubox
36 45 0.050040456 ubox
36 46 0.191276857 ubox
36 50 0.020917243 ubox
37 41 0.004081653 ubox
37 42 0.010117544 ubox
37 43 0.020401122 ubox
37 44 0.085702890 ubox
37 45 0.201260621 ubox
37 46 0.096267351 ubox
37 49 0.019333682 ubox
37 50 0.016041158 ubox
38 42 0.022486016 ubox
38 43 0.097639736 ubox
38 44 0.205542928 ubox
38 45 0.129127933 ubox
38 46 0.034012717 ubox
38 49 0.025036446 ubox
38 50 0.050887391 ubox
39 43 0.185251955 ubox
39 44 0.124137627 ubox
39 45 0.034370650 ubox
39 49 0.054227942 ubox
40 48 0.046514230 ubox
41 48 0.467304465 ubox
42 47 0.482931694 ubox
42 48 0.057834760 ubox
43 47 0.061379507 ubox
4 39 0.9500000 lbox
5 38 0.9500000 lbox
6 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
showpage
end
%%EOF
