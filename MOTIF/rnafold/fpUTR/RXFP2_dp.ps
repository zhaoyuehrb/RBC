%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RXFP2)
} def

/sequence { (\
GAACUUACUACAUCAGAACUCCUGCUGAGGUAUAAGAGGAUACGUCUAAUAACUCAAUUGCUGUAAACCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.024795655 ubox
1 21 0.011150100 ubox
1 46 0.011414620 ubox
1 55 0.032446173 ubox
1 59 0.005309517 ubox
2 13 0.023643503 ubox
2 20 0.010921188 ubox
2 45 0.010903203 ubox
2 54 0.030901847 ubox
2 58 0.005205060 ubox
2 59 0.005869096 ubox
3 31 0.019260171 ubox
3 45 0.004379975 ubox
3 58 0.005272581 ubox
3 64 0.024075124 ubox
4 16 0.011133667 ubox
4 29 0.007366994 ubox
4 30 0.019984162 ubox
4 36 0.879317158 ubox
4 38 0.067689784 ubox
4 39 0.031900671 ubox
4 44 0.004902535 ubox
4 63 0.024851530 ubox
5 15 0.010599233 ubox
5 16 0.004673345 ubox
5 17 0.006619656 ubox
5 18 0.007707106 ubox
5 28 0.007301718 ubox
5 29 0.018913868 ubox
5 35 0.885937283 ubox
5 36 0.031733283 ubox
5 37 0.067748023 ubox
5 38 0.031869998 ubox
5 52 0.004130128 ubox
5 57 0.003765925 ubox
5 66 0.212151504 ubox
5 67 0.021038247 ubox
6 15 0.005466820 ubox
6 16 0.006540784 ubox
6 17 0.008866716 ubox
6 27 0.005873884 ubox
6 28 0.015852347 ubox
6 32 0.198387525 ubox
6 34 0.882610906 ubox
6 35 0.037471078 ubox
6 36 0.062665790 ubox
6 37 0.030292851 ubox
6 51 0.004547221 ubox
6 56 0.003750497 ubox
6 60 0.003810600 ubox
6 65 0.235331942 ubox
6 66 0.020968920 ubox
7 26 0.005375640 ubox
7 31 0.217355790 ubox
7 33 0.870562781 ubox
7 50 0.004242321 ubox
7 59 0.003609009 ubox
7 64 0.237406101 ubox
8 16 0.022800764 ubox
8 29 0.061870389 ubox
8 30 0.222163014 ubox
8 36 0.024849385 ubox
8 38 0.005025193 ubox
8 39 0.003175106 ubox
8 63 0.237357499 ubox
9 15 0.022299422 ubox
9 27 0.004110087 ubox
9 28 0.063257481 ubox
9 29 0.216695581 ubox
9 32 0.884779267 ubox
9 34 0.008121401 ubox
9 35 0.019881230 ubox
9 37 0.004098822 ubox
9 51 0.004026257 ubox
9 60 0.006751673 ubox
9 63 0.006363364 ubox
9 65 0.198944089 ubox
10 26 0.006268889 ubox
10 31 0.897280902 ubox
10 33 0.007225140 ubox
10 50 0.003859497 ubox
10 59 0.006936144 ubox
10 62 0.022000204 ubox
10 64 0.207518903 ubox
11 24 0.008630247 ubox
11 27 0.220046679 ubox
11 30 0.888823913 ubox
11 60 0.203749595 ubox
11 63 0.208390310 ubox
12 23 0.007919382 ubox
12 26 0.219886044 ubox
12 41 0.003687845 ubox
12 50 0.021534810 ubox
12 58 0.022398103 ubox
12 59 0.186886240 ubox
12 62 0.199719734 ubox
12 64 0.005970249 ubox
13 28 0.861787980 ubox
13 37 0.004085669 ubox
13 40 0.004207416 ubox
13 49 0.025930411 ubox
13 57 0.028512315 ubox
14 24 0.323853597 ubox
14 27 0.910988129 ubox
14 36 0.004809109 ubox
14 39 0.004254660 ubox
14 60 0.165582788 ubox
14 63 0.027525853 ubox
15 23 0.327818762 ubox
15 26 0.910888541 ubox
15 47 0.056183955 ubox
15 54 0.008786967 ubox
15 59 0.162360921 ubox
15 62 0.028162661 ubox
15 70 0.023137726 ubox
16 22 0.327918294 ubox
16 25 0.910413125 ubox
16 46 0.060435223 ubox
16 53 0.009058933 ubox
16 55 0.069719152 ubox
16 58 0.138756142 ubox
16 59 0.011466618 ubox
16 61 0.027987392 ubox
16 69 0.025570626 ubox
17 45 0.057953745 ubox
17 54 0.068077514 ubox
17 58 0.013011225 ubox
17 59 0.009644617 ubox
18 31 0.005270235 ubox
18 45 0.022983748 ubox
18 58 0.009497882 ubox
18 64 0.040785787 ubox
19 29 0.025826620 ubox
19 30 0.004836874 ubox
19 36 0.004603277 ubox
19 38 0.005807958 ubox
19 44 0.028359169 ubox
19 63 0.042195470 ubox
20 28 0.026033312 ubox
20 29 0.004225856 ubox
20 35 0.004685746 ubox
20 37 0.005853841 ubox
20 40 0.074271807 ubox
21 27 0.026011316 ubox
21 30 0.033389996 ubox
21 36 0.005719386 ubox
21 39 0.076505980 ubox
22 29 0.034044355 ubox
22 38 0.076515051 ubox
23 28 0.033720365 ubox
23 32 0.006870282 ubox
23 37 0.076189663 ubox
23 48 0.018723815 ubox
23 51 0.030975756 ubox
23 56 0.003684756 ubox
23 60 0.004332718 ubox
23 63 0.006014162 ubox
23 65 0.021687287 ubox
24 31 0.007909959 ubox
24 47 0.017493746 ubox
24 50 0.030122032 ubox
24 55 0.003397358 ubox
24 59 0.005208018 ubox
24 61 0.110254393 ubox
24 64 0.023104062 ubox
25 30 0.007932000 ubox
25 36 0.074306496 ubox
25 60 0.110975229 ubox
25 63 0.023374189 ubox
26 34 0.009514001 ubox
26 35 0.074353187 ubox
26 48 0.028717764 ubox
26 56 0.268507006 ubox
26 65 0.010191396 ubox
27 33 0.008689406 ubox
27 46 0.169087312 ubox
27 47 0.005216780 ubox
27 55 0.286220498 ubox
27 64 0.009162361 ubox
28 45 0.169295235 ubox
28 47 0.004041719 ubox
28 54 0.286431219 ubox
28 62 0.008406195 ubox
28 70 0.024710555 ubox
29 46 0.004373703 ubox
29 53 0.285801197 ubox
29 54 0.025235585 ubox
29 55 0.010607113 ubox
29 61 0.008059533 ubox
29 62 0.091571135 ubox
29 69 0.031078714 ubox
30 43 0.173577675 ubox
30 50 0.004650417 ubox
30 53 0.031029973 ubox
30 54 0.005615373 ubox
30 61 0.108353214 ubox
30 68 0.031122666 ubox
31 42 0.173601989 ubox
31 49 0.004911385 ubox
31 51 0.213973015 ubox
31 52 0.025669624 ubox
31 60 0.108424145 ubox
31 65 0.006713230 ubox
31 67 0.029788755 ubox
32 41 0.173374640 ubox
32 50 0.279961376 ubox
32 58 0.008714444 ubox
32 59 0.105971098 ubox
32 64 0.010734309 ubox
33 40 0.167337290 ubox
33 48 0.016571063 ubox
33 49 0.272145324 ubox
33 51 0.017358880 ubox
33 57 0.011002330 ubox
33 60 0.018570415 ubox
33 63 0.011026182 ubox
33 65 0.020168496 ubox
34 47 0.014343563 ubox
34 50 0.017755475 ubox
34 59 0.020934595 ubox
34 62 0.009914628 ubox
34 64 0.019615963 ubox
35 47 0.285316292 ubox
35 54 0.004173959 ubox
35 58 0.018647340 ubox
35 59 0.004601732 ubox
35 62 0.020467175 ubox
35 70 0.009230751 ubox
36 46 0.290739299 ubox
36 53 0.004419575 ubox
36 55 0.198541293 ubox
36 59 0.003884520 ubox
36 61 0.020822512 ubox
36 69 0.010119952 ubox
37 45 0.287852629 ubox
37 47 0.078482712 ubox
37 54 0.200710369 ubox
37 58 0.004783266 ubox
37 59 0.009564815 ubox
37 62 0.033423924 ubox
37 70 0.791373617 ubox
38 46 0.080459602 ubox
38 47 0.121544468 ubox
38 53 0.200686749 ubox
38 54 0.013977701 ubox
38 55 0.014247772 ubox
38 58 0.009158066 ubox
38 59 0.006228894 ubox
38 61 0.034090764 ubox
38 62 0.009485525 ubox
38 69 0.865984004 ubox
38 70 0.048634663 ubox
39 45 0.068450288 ubox
39 46 0.127952770 ubox
39 53 0.016169439 ubox
39 54 0.011840920 ubox
39 55 0.026872988 ubox
39 58 0.006576110 ubox
39 59 0.024577609 ubox
39 61 0.010225399 ubox
39 68 0.865049734 ubox
39 69 0.054318121 ubox
40 45 0.113603573 ubox
40 50 0.043395714 ubox
40 54 0.026032224 ubox
40 58 0.026161755 ubox
40 64 0.072600956 ubox
41 48 0.027941772 ubox
41 49 0.044421771 ubox
41 51 0.038482716 ubox
41 57 0.025008193 ubox
41 60 0.004350005 ubox
41 63 0.073566191 ubox
41 65 0.831243187 ubox
42 47 0.027248064 ubox
42 50 0.038366380 ubox
42 59 0.004173546 ubox
42 62 0.072444286 ubox
42 64 0.862026252 ubox
43 60 0.038700138 ubox
43 63 0.863900907 ubox
44 50 0.015500180 ubox
44 53 0.073727197 ubox
44 58 0.013648660 ubox
44 59 0.035848486 ubox
44 61 0.317355451 ubox
44 62 0.721562150 ubox
44 64 0.008526369 ubox
44 68 0.015513281 ubox
45 49 0.015291221 ubox
45 52 0.070788721 ubox
45 57 0.015903469 ubox
45 60 0.294106018 ubox
45 63 0.008375477 ubox
45 67 0.015253706 ubox
47 60 0.719774635 ubox
47 63 0.010038190 ubox
47 65 0.011848790 ubox
48 59 0.794058891 ubox
48 62 0.014262804 ubox
48 64 0.010883820 ubox
49 58 0.807045786 ubox
49 64 0.019532612 ubox
50 57 0.780335845 ubox
50 60 0.039489739 ubox
50 63 0.020443372 ubox
50 65 0.011083571 ubox
51 59 0.046395522 ubox
51 62 0.019732572 ubox
51 64 0.009206493 ubox
52 58 0.041717137 ubox
52 64 0.059417668 ubox
53 63 0.061949661 ubox
55 63 0.035613342 ubox
56 62 0.034684620 ubox
57 64 0.031231369 ubox
58 63 0.031470713 ubox
58 66 0.018132695 ubox
58 67 0.029379356 ubox
59 65 0.020454986 ubox
59 66 0.034617261 ubox
60 64 0.017345868 ubox
4 36 0.9500000 lbox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
37 70 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
43 63 0.9500000 lbox
44 62 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
showpage
end
%%EOF
