%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL27)
} def

/sequence { (\
CCCAGAUAAAAGGUAGGGGAGGAGGAGAGAGAGAGAAGGAAGAGUCUAGGCUGAGCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.011464748 ubox
1 17 0.016873541 ubox
1 18 0.405062720 ubox
1 19 0.905338355 ubox
1 22 0.012638111 ubox
1 25 0.007258943 ubox
1 50 0.018995567 ubox
2 12 0.011503273 ubox
2 13 0.049175479 ubox
2 16 0.016265826 ubox
2 17 0.406689626 ubox
2 18 0.909297292 ubox
2 19 0.030570630 ubox
2 21 0.011555017 ubox
2 22 0.018724535 ubox
2 24 0.006916033 ubox
2 25 0.014567630 ubox
2 39 0.004214431 ubox
2 49 0.019323909 ubox
2 50 0.015957672 ubox
3 12 0.049938790 ubox
3 16 0.406717563 ubox
3 17 0.909024267 ubox
3 18 0.030454748 ubox
3 21 0.018798936 ubox
3 24 0.014596741 ubox
3 38 0.004222816 ubox
3 49 0.016152549 ubox
3 53 0.012177506 ubox
4 47 0.025041736 ubox
4 52 0.012179706 ubox
5 46 0.025408958 ubox
5 51 0.012147872 ubox
6 14 0.905692587 ubox
6 45 0.025300534 ubox
7 13 0.895846537 ubox
7 15 0.076237882 ubox
7 44 0.024702645 ubox
8 14 0.076366933 ubox
11 52 0.006301333 ubox
12 51 0.006449891 ubox
12 52 0.009694120 ubox
13 51 0.010523316 ubox
13 56 0.026810587 ubox
13 59 0.003889015 ubox
14 48 0.010995501 ubox
14 50 0.010367725 ubox
14 53 0.013287264 ubox
14 55 0.026664669 ubox
14 58 0.003924831 ubox
15 47 0.011445581 ubox
15 52 0.014849540 ubox
16 46 0.011478232 ubox
16 47 0.005989634 ubox
16 51 0.014970586 ubox
16 52 0.011167260 ubox
17 45 0.010727068 ubox
17 46 0.006128655 ubox
17 47 0.003175583 ubox
17 51 0.011446621 ubox
17 52 0.024232688 ubox
18 45 0.005755188 ubox
18 46 0.003345661 ubox
18 47 0.012413741 ubox
18 51 0.024266822 ubox
18 52 0.008548757 ubox
19 46 0.016537188 ubox
19 51 0.015932082 ubox
20 45 0.016388715 ubox
20 47 0.035248860 ubox
20 52 0.225417442 ubox
21 46 0.035847593 ubox
21 47 0.101468483 ubox
21 51 0.230711768 ubox
21 52 0.177120301 ubox
22 45 0.028748576 ubox
22 46 0.105488197 ubox
22 51 0.191728059 ubox
23 45 0.103929224 ubox
23 47 0.043206602 ubox
23 52 0.400185416 ubox
24 46 0.043971896 ubox
24 47 0.146679138 ubox
24 51 0.410368891 ubox
24 52 0.136336904 ubox
25 45 0.035200713 ubox
25 46 0.153783106 ubox
25 51 0.147498290 ubox
26 45 0.151481315 ubox
26 47 0.304073890 ubox
26 52 0.280466897 ubox
27 46 0.308721082 ubox
27 51 0.287449551 ubox
28 45 0.303737566 ubox
28 47 0.416212993 ubox
28 52 0.314236869 ubox
29 46 0.421318164 ubox
29 51 0.322075377 ubox
30 45 0.414511887 ubox
30 47 0.275044366 ubox
30 52 0.158796088 ubox
31 46 0.282073484 ubox
31 51 0.162172857 ubox
32 45 0.278247288 ubox
32 47 0.353148127 ubox
32 52 0.210795567 ubox
33 46 0.361101296 ubox
33 51 0.216205590 ubox
34 45 0.356170590 ubox
34 47 0.418271570 ubox
34 52 0.113556675 ubox
35 46 0.427647516 ubox
35 51 0.116226816 ubox
36 45 0.421823304 ubox
37 47 0.180650154 ubox
37 52 0.055572342 ubox
38 46 0.185937901 ubox
38 47 0.287879055 ubox
38 51 0.057013601 ubox
38 52 0.018246555 ubox
39 45 0.157961201 ubox
39 46 0.301648944 ubox
39 51 0.019686271 ubox
40 45 0.276224066 ubox
41 47 0.035051976 ubox
41 52 0.065337105 ubox
42 46 0.035821589 ubox
42 51 0.067271538 ubox
43 52 0.213360041 ubox
44 51 0.218941358 ubox
44 56 0.137255779 ubox
44 59 0.018248562 ubox
45 50 0.208487669 ubox
45 54 0.167200293 ubox
45 55 0.076331909 ubox
45 58 0.016670081 ubox
46 53 0.185083624 ubox
46 55 0.068429904 ubox
47 53 0.028969130 ubox
47 54 0.067134469 ubox
48 52 0.026096869 ubox
50 56 0.309494683 ubox
51 55 0.307622104 ubox
1 19 0.9500000 lbox
2 18 0.9500000 lbox
3 17 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
showpage
end
%%EOF
