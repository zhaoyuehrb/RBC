%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC6A19)
} def

/sequence { (\
ACUCGCCCUCCAGCUUCUGCCCUGCCUGCUGUGUGCGGAGCCGUCCAGCGACCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.012721107 ubox
1 34 0.009653511 ubox
1 44 0.005900710 ubox
2 13 0.012518657 ubox
2 31 0.013508668 ubox
2 33 0.010861989 ubox
2 38 0.044963662 ubox
2 40 0.167977549 ubox
2 43 0.006726138 ubox
2 48 0.009745968 ubox
3 12 0.012724315 ubox
3 37 0.009065303 ubox
3 38 0.146578809 ubox
3 39 0.160693083 ubox
3 47 0.009470837 ubox
3 51 0.860145397 ubox
4 28 0.003517411 ubox
4 31 0.010259671 ubox
4 33 0.015720038 ubox
4 35 0.015115314 ubox
4 37 0.209300595 ubox
4 38 0.118861136 ubox
4 43 0.016913715 ubox
4 50 0.929498637 ubox
5 14 0.101731636 ubox
5 20 0.015595010 ubox
5 25 0.062724155 ubox
5 29 0.063608140 ubox
5 30 0.004090894 ubox
5 32 0.016324586 ubox
5 34 0.020746066 ubox
5 36 0.240984405 ubox
5 41 0.037473143 ubox
5 42 0.020337686 ubox
5 44 0.010438652 ubox
5 49 0.930656217 ubox
6 13 0.101681818 ubox
6 19 0.015494984 ubox
6 24 0.062740385 ubox
6 28 0.063610504 ubox
6 31 0.014916116 ubox
6 33 0.021365952 ubox
6 35 0.240862003 ubox
6 38 0.005806975 ubox
6 40 0.037162772 ubox
6 43 0.011082659 ubox
6 48 0.928619412 ubox
7 37 0.006009751 ubox
7 38 0.034559057 ubox
8 37 0.034519984 ubox
8 38 0.006752131 ubox
8 40 0.112017089 ubox
8 48 0.012353886 ubox
9 37 0.006309071 ubox
9 39 0.113241452 ubox
9 47 0.024447829 ubox
9 51 0.026129685 ubox
10 38 0.113329359 ubox
10 50 0.028035047 ubox
11 19 0.109280149 ubox
11 24 0.074804392 ubox
11 28 0.026496231 ubox
11 31 0.324557748 ubox
11 33 0.005031823 ubox
11 35 0.004525683 ubox
11 37 0.112488969 ubox
12 18 0.110225154 ubox
12 23 0.077033068 ubox
12 27 0.027672982 ubox
12 30 0.328679581 ubox
12 32 0.004030233 ubox
12 34 0.004063115 ubox
13 17 0.107949849 ubox
13 20 0.289576473 ubox
13 22 0.067848730 ubox
13 25 0.050049303 ubox
13 26 0.020625449 ubox
13 29 0.329168454 ubox
13 32 0.004582060 ubox
13 34 0.038900268 ubox
13 36 0.097109283 ubox
13 41 0.857538758 ubox
13 44 0.030776049 ubox
13 49 0.092565414 ubox
14 19 0.290765591 ubox
14 24 0.053440532 ubox
14 28 0.329036423 ubox
14 31 0.004764430 ubox
14 33 0.039040434 ubox
14 35 0.097099736 ubox
14 40 0.855097965 ubox
14 43 0.031279195 ubox
14 48 0.092458225 ubox
15 39 0.652920748 ubox
15 40 0.105724352 ubox
15 47 0.087461907 ubox
15 48 0.003351006 ubox
15 51 0.026238115 ubox
16 38 0.340778184 ubox
16 39 0.561339214 ubox
16 47 0.014581873 ubox
16 50 0.028126368 ubox
16 51 0.017251309 ubox
17 37 0.333162658 ubox
17 38 0.787179418 ubox
17 40 0.005637276 ubox
17 48 0.085538869 ubox
17 50 0.017891174 ubox
18 24 0.025980311 ubox
18 31 0.011301067 ubox
18 33 0.014162431 ubox
18 35 0.061568030 ubox
18 37 0.789102346 ubox
18 39 0.005763321 ubox
18 43 0.013929809 ubox
18 47 0.105729544 ubox
18 50 0.026787663 ubox
18 54 0.003838048 ubox
19 23 0.017164206 ubox
19 25 0.253839381 ubox
19 27 0.003893725 ubox
19 29 0.101975203 ubox
19 32 0.018257285 ubox
19 34 0.066980335 ubox
19 36 0.849155173 ubox
19 41 0.033703413 ubox
19 42 0.016330977 ubox
19 44 0.090336377 ubox
19 46 0.106522043 ubox
19 49 0.036922664 ubox
19 53 0.004280937 ubox
20 24 0.252356849 ubox
20 28 0.101884314 ubox
20 31 0.018477717 ubox
20 33 0.067213662 ubox
20 35 0.847740837 ubox
20 38 0.011151233 ubox
20 40 0.034083534 ubox
20 43 0.094428819 ubox
20 48 0.036862863 ubox
21 37 0.011279189 ubox
21 38 0.015542023 ubox
22 37 0.015573684 ubox
22 38 0.043987417 ubox
22 40 0.018565281 ubox
22 48 0.006768573 ubox
23 31 0.046936127 ubox
23 33 0.497272158 ubox
23 35 0.017306135 ubox
23 37 0.045111200 ubox
23 39 0.018278701 ubox
23 43 0.039516848 ubox
23 47 0.010228320 ubox
23 50 0.003807338 ubox
23 54 0.033879153 ubox
24 30 0.049072474 ubox
24 32 0.701957900 ubox
24 34 0.281180121 ubox
24 36 0.054866407 ubox
24 41 0.324762922 ubox
24 42 0.037776277 ubox
24 44 0.008811253 ubox
24 46 0.006821131 ubox
24 49 0.004636755 ubox
24 53 0.038137600 ubox
25 31 0.709431111 ubox
25 33 0.282806698 ubox
25 35 0.054764508 ubox
25 38 0.029491629 ubox
25 40 0.327889153 ubox
25 43 0.009252601 ubox
25 48 0.004518012 ubox
26 37 0.029555178 ubox
26 38 0.344370315 ubox
26 40 0.004082966 ubox
27 33 0.022174670 ubox
27 35 0.005780069 ubox
27 37 0.345377235 ubox
27 39 0.004185918 ubox
27 50 0.075287171 ubox
27 54 0.005421276 ubox
28 32 0.016570868 ubox
28 34 0.081594856 ubox
28 36 0.364845763 ubox
28 41 0.010953906 ubox
28 49 0.090622060 ubox
28 53 0.006021151 ubox
29 33 0.081854349 ubox
29 35 0.364822053 ubox
29 38 0.005501447 ubox
29 40 0.011077920 ubox
29 48 0.090666569 ubox
30 37 0.005581770 ubox
30 39 0.011057003 ubox
30 47 0.090520019 ubox
30 54 0.033288188 ubox
31 36 0.007866387 ubox
31 46 0.090165691 ubox
31 49 0.003553923 ubox
31 52 0.024102321 ubox
31 53 0.038370553 ubox
31 55 0.077464744 ubox
32 43 0.016325024 ubox
32 47 0.076691490 ubox
32 50 0.025422965 ubox
32 51 0.026057937 ubox
32 54 0.084336651 ubox
33 41 0.006130437 ubox
33 42 0.020648679 ubox
33 44 0.007516996 ubox
33 46 0.085144538 ubox
33 49 0.033763677 ubox
33 52 0.082457833 ubox
33 53 0.082128674 ubox
33 55 0.015646029 ubox
34 40 0.006197468 ubox
34 43 0.008888603 ubox
34 47 0.006371633 ubox
34 48 0.033679141 ubox
34 50 0.116063927 ubox
34 51 0.070067894 ubox
34 54 0.015048417 ubox
35 41 0.024383400 ubox
35 42 0.008776646 ubox
35 44 0.124017543 ubox
35 46 0.005556294 ubox
35 49 0.160336068 ubox
35 53 0.012307086 ubox
36 40 0.024447681 ubox
36 43 0.125493602 ubox
36 48 0.160435538 ubox
36 50 0.005777187 ubox
37 42 0.123801258 ubox
37 45 0.004709293 ubox
37 46 0.225388279 ubox
37 49 0.004273697 ubox
37 53 0.037376225 ubox
37 56 0.007538737 ubox
38 44 0.003998188 ubox
38 45 0.226257160 ubox
38 52 0.038883155 ubox
38 55 0.009483426 ubox
39 44 0.220439517 ubox
40 49 0.077956289 ubox
41 48 0.077970668 ubox
42 50 0.133287674 ubox
43 49 0.134454298 ubox
43 52 0.219440902 ubox
43 55 0.007973674 ubox
44 48 0.125785498 ubox
44 51 0.219985377 ubox
44 54 0.007422555 ubox
45 50 0.219432515 ubox
3 51 0.9500000 lbox
4 50 0.9500000 lbox
5 49 0.9500000 lbox
6 48 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
23 33 0.9500000 lbox
24 32 0.9500000 lbox
25 31 0.9500000 lbox
showpage
end
%%EOF
