%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAUUUAUGAGAUGUCAUAAAUCUCUCCAAAAUAGGAUGAGAUGAACACUUUUAACAAGAGAACAGGACUCUAUAUAAAUCGCUGUGGGCUCACCACCUCUAAGGAGGAGCACUGACUGAAGACAGAAAAAUUGAUGAACUGAAGAAGACAUGGUCCAUUAUGCCUUACAAACUUACACAGUGCUUUGGGAAUUCCAAAGUACUCAGUGGAGAGAGGUGUUUCAGGAGCCGUAGAGCCAGAUCGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[143.29211426 160.90704346]
[131.27972412 169.30488586]
[117.63335419 175.31138611]
[102.83338928 178.60855103]
[87.42192841 178.97567749]
[71.98294067 176.30125427]
[67.00977325 190.45283508]
[62.03660202 204.60443115]
[57.06343460 218.75602722]
[52.09026718 232.90762329]
[47.11709976 247.05921936]
[50.67441940 263.06787109]
[38.40790939 273.95202637]
[22.93630409 268.51498413]
[20.17546463 252.34991455]
[32.96550369 242.08604431]
[37.93867493 227.93444824]
[42.91184235 213.78285217]
[47.88500977 199.63127136]
[52.85817719 185.47967529]
[57.83134460 171.32807922]
[45.30094147 163.08253479]
[34.27177429 173.24902344]
[23.24261284 183.41552734]
[12.21344852 193.58201599]
[1.18428445 203.74850464]
[-9.78104019 213.98382568]
[-20.68209648 224.28755188]
[-31.58315277 234.59129333]
[-31.77758026 250.39437866]
[-43.14772415 261.37142944]
[-58.94787598 261.00991821]
[-69.80409241 249.52436829]
[-69.27556610 233.72891235]
[-57.67586899 222.99473572]
[-41.88689041 223.69023132]
[-30.98583221 213.38650513]
[-20.08477592 203.08276367]
[-17.38967896 196.22198486]
[-8.98220730 192.71934509]
[2.04695702 182.55285645]
[13.07612038 172.38635254]
[24.10528374 162.21986389]
[35.13444901 152.05337524]
[31.82605553 145.32250977]
[18.36432648 151.93930054]
[3.39773273 150.93876648]
[11.74754143 138.47756958]
[25.20927048 131.86077881]
[21.90087891 125.12991333]
[7.11450148 127.65242767]
[-7.67187548 130.17492676]
[-22.45825195 132.69744873]
[-37.24462891 135.21995544]
[-51.84139252 143.84381104]
[-64.16900635 132.20480347]
[-56.39749527 117.13696289]
[-39.76713943 120.43357086]
[-24.98076057 117.91106415]
[-10.19438362 115.38855743]
[4.59199333 112.86605072]
[19.37837029 110.34353638]
[23.12298775 91.47557831]
[30.99843597 74.93235779]
[42.13155365 61.54660034]
[30.60743523 51.94479370]
[19.08331490 42.34298706]
[3.55619287 43.58645630]
[-7.99412155 33.68469620]
[-9.08388996 18.87429237]
[-20.60800934 9.27248764]
[-32.13212967 -0.32931831]
[-26.62211418 13.62201595]
[-21.32691956 27.65629387]
[-21.75641060 42.65014267]
[-27.84627151 56.35829926]
[-38.68457031 66.72802734]
[-52.64832306 72.20650482]
[-67.64650726 71.97335052]
[-81.43321991 66.06347656]
[-91.94395447 55.36186600]
[-97.60477448 41.47103882]
[-97.56799316 26.47108269]
[-91.83912659 12.60818100]
[-81.27822113 1.95972037]
[-66.68079376 5.41156244]
[-77.83634186 -4.61609173]
[-88.99188232 -14.64374638]
[-100.14743042 -24.67140007]
[-116.17976379 -25.25767326]
[-125.60115051 -38.24293518]
[-121.18430328 -53.66600418]
[-106.31745911 -59.69562149]
[-92.40517426 -51.70637894]
[-90.11977386 -35.82694244]
[-78.96422577 -25.79928970]
[-67.80868530 -15.77163506]
[-56.65314102 -5.74398136]
[-45.12902451 -15.34578705]
[-52.97850418 -28.12802696]
[-60.82798386 -40.91026688]
[-75.49706268 -48.24172211]
[-76.21215057 -64.62526703]
[-62.23762512 -73.20692444]
[-47.94928360 -65.15860748]
[-48.04574585 -48.75974655]
[-40.19626236 -35.97750854]
[-32.34678268 -23.19526863]
[-22.53032303 -11.85343742]
[-11.00620365 -2.25163198]
[0.51791555 7.35017395]
[15.28177261 5.74888897]
[27.10564995 15.32231998]
[28.68512154 30.81886864]
[40.20923996 40.42067337]
[51.73336029 50.02248001]
[68.18601227 38.23195648]
[87.33872986 31.68372536]
[86.21332550 16.72600365]
[85.08791351 1.76828170]
[75.40396118 -11.46626282]
[82.27009583 -26.35881996]
[98.62302399 -27.58920288]
[107.64025116 -13.89169979]
[100.04563141 0.64287275]
[101.17104340 15.60059452]
[102.29645538 30.55831718]
[116.99548340 32.63105774]
[130.91871643 37.77899170]
[143.43060303 45.76713562]
[153.96000671 56.23085022]
[162.02629089 68.69250488]
[167.26126099 82.58324432]
[169.42594910 97.26902008]
[184.39042664 98.30079651]
[199.35488892 99.33258057]
[214.31936646 100.36435699]
[229.28384399 101.39614105]
[244.24830627 102.42791748]
[258.54800415 95.65819550]
[270.71292114 104.25261688]
[285.67739868 105.28439331]
[300.64187622 106.31617737]
[305.68225098 95.00118256]
[313.92697144 85.78948212]
[324.57391357 79.55484009]
[336.59414673 76.88251495]
[348.83120728 78.01430511]
[360.11251831 82.82675934]
[369.36166382 90.84446716]
[375.70108032 101.28694916]
[378.53530884 113.14465332]
[393.45050049 114.73747253]
[408.36569214 116.33029938]
[423.28088379 117.92311859]
[438.20574951 119.42256165]
[453.13970947 120.82858276]
[468.07366943 122.23459625]
[479.09295654 109.38590240]
[495.43917847 105.68321228]
[510.61532593 112.39475250]
[518.71032715 126.68941498]
[533.66070557 127.90840912]
[548.61108398 129.12739563]
[563.56152344 130.34638977]
[578.51190186 131.56538391]
[593.46228027 132.78437805]
[608.41265869 134.00337219]
[613.62884521 127.55986023]
[620.87664795 123.73215485]
[628.95257568 123.07255554]
[636.54766846 125.61402130]
[642.46014404 130.87666321]
[645.78503418 137.95639038]
[660.65570068 139.92204285]
[675.52630615 141.88769531]
[684.41760254 139.91291809]
[690.57037354 143.97212219]
[705.41522217 146.12374878]
[720.26013184 148.27536011]
[735.13073730 150.24101257]
[750.02484131 152.02038574]
[764.91894531 153.79975891]
[779.81304932 155.57913208]
[794.70709229 157.35850525]
[809.60119629 159.13787842]
[824.49530029 160.91725159]
[839.38934326 162.69662476]
[854.28344727 164.47599792]
[869.17755127 166.25537109]
[882.62548828 157.50709534]
[897.80377197 162.70318604]
[903.06890869 177.85765076]
[894.38195801 191.34527588]
[878.40673828 192.81951904]
[867.39819336 181.14945984]
[852.50408936 179.37008667]
[837.60998535 177.59071350]
[822.71588135 175.81134033]
[807.82183838 174.03196716]
[792.92773438 172.25259399]
[778.03363037 170.47322083]
[763.13958740 168.69384766]
[748.24548340 166.91447449]
[733.35137939 165.13510132]
[729.12829590 167.31468201]
[723.49432373 166.88240051]
[718.10852051 163.12023926]
[703.26361084 160.96862793]
[688.41876221 158.81701660]
[673.56066895 156.75834656]
[658.69000244 154.79269409]
[643.81939697 152.82704163]
[624.69165039 162.97183228]
[607.19366455 148.95376587]
[592.24328613 147.73477173]
[577.29290771 146.51577759]
[562.34252930 145.29678345]
[547.39208984 144.07778931]
[532.44171143 142.85879517]
[517.49133301 141.63980103]
[509.78015137 152.52084351]
[497.60440063 158.22239685]
[484.09329224 157.16125488]
[472.77774048 149.50765991]
[466.66766357 137.16856384]
[451.73370361 135.76254272]
[436.79974365 134.35652161]
[429.86389160 136.85205078]
[421.68807983 132.83830261]
[406.77288818 131.24548340]
[391.85769653 129.65266418]
[376.94250488 128.05984497]
[368.15438843 143.45245361]
[353.46228027 153.46208191]
[335.81610107 156.02255249]
[318.78372192 150.56904602]
[305.82958984 138.16186523]
[299.61007690 121.28064728]
[284.64562988 120.24887085]
[269.68115234 119.21708679]
[256.45181274 126.06061554]
[243.21653748 117.39238739]
[228.25205994 116.36061096]
[213.28758240 115.32882690]
[198.32312012 114.29705048]
[183.35864258 113.26526642]
[168.39416504 112.23348999]
[165.97576904 125.66269684]
[160.89962769 138.60058594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[22 44]
[23 43]
[24 42]
[25 41]
[26 40]
[27 38]
[28 37]
[29 36]
[50 62]
[51 61]
[52 60]
[53 59]
[54 58]
[65 116]
[66 115]
[67 114]
[70 111]
[71 110]
[72 109]
[86 98]
[87 97]
[88 96]
[89 95]
[99 108]
[100 107]
[101 106]
[118 127]
[119 126]
[120 125]
[134 248]
[135 247]
[136 246]
[137 245]
[138 244]
[139 243]
[141 241]
[142 240]
[143 239]
[152 233]
[153 232]
[154 231]
[155 230]
[156 228]
[157 227]
[158 226]
[162 221]
[163 220]
[164 219]
[165 218]
[166 217]
[167 216]
[168 215]
[174 213]
[175 212]
[176 211]
[178 210]
[179 209]
[180 208]
[181 205]
[182 204]
[183 203]
[184 202]
[185 201]
[186 200]
[187 199]
[188 198]
[189 197]
[190 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
