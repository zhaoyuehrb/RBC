%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGACAGGCGUAAAAGAAAACCAUAUUCAGGACAUUCCCUUUCUUGAGCAAAACUGCAAUUUGCAAAAUCAUCGGUGACAGGUAAUGGUGACUGGUGAUUCAUUCCUGGUGAUGUCUUGGGCCAAAUUCCAGAAUCCAAUGUAUAUUCAGAAGGGGCAGGGAGAAGAUCUGCAUGUAUGACUUCACCCAGAAGCCCUGGCAUAUAAACAAGAGGUGAGUUGUCAGUUUCACCCAAUUCCAGGCCUAGCACUUUC\
CAAACAGACUGAGACC\
) } def
/len { sequence length } bind def

/coor [
[85.14063263 342.54977417]
[73.69583893 332.38732910]
[68.29554749 318.06619263]
[70.18070221 302.87722778]
[78.91812134 290.31076050]
[92.50000000 283.25445557]
[92.50000000 268.25445557]
[92.50000000 253.25445557]
[78.26325989 248.68540955]
[66.11937714 239.92778015]
[57.26499176 227.82901001]
[52.57740021 213.56655884]
[52.52762985 198.53326416]
[57.13313675 184.20132446]
[65.95487213 171.97817993]
[78.13909912 163.06823730]
[92.50000000 158.35421753]
[92.50000000 143.35421753]
[92.50000000 128.35421753]
[92.50000000 113.35422516]
[91.83122253 128.33930969]
[82.85807037 140.35939026]
[68.68141937 145.26068115]
[54.20032883 141.34941101]
[44.41906357 129.97720337]
[42.71776581 115.07399750]
[49.68434906 101.78992462]
[62.91135406 94.71558380]
[77.82822418 96.29582214]
[62.99699402 94.05203247]
[48.16576385 91.80824280]
[33.33453369 89.56444550]
[18.50330162 87.32065582]
[3.67207098 85.07686615]
[-11.15915966 82.83307648]
[-25.99039078 80.58928680]
[-40.82162094 78.34548950]
[-55.62391663 83.93142700]
[-67.05059814 74.37735748]
[-81.88182831 72.13356018]
[-90.53182220 84.66109467]
[-103.70951080 92.16011810]
[-118.77470398 93.18979645]
[-132.73564148 87.59934998]
[-142.84317017 76.54731750]
[-147.13203430 62.26197052]
[-161.96325684 60.01818085]
[-176.79449463 57.77438736]
[-191.77423096 58.55366135]
[-206.29258728 62.32426834]
[-220.81094360 66.09487915]
[-235.32928467 69.86548615]
[-249.84764099 73.63609314]
[-256.40145874 87.83403015]
[-270.57019043 94.45075989]
[-285.66378784 90.36206055]
[-294.55551147 77.49850464]
[-293.04696655 61.93385315]
[-281.85043335 51.01726532]
[-266.25259399 49.90322495]
[-253.61825562 59.11774063]
[-239.09989929 55.34713364]
[-224.58154297 51.57652283]
[-210.06320190 47.80591583]
[-195.54484558 44.03530884]
[-195.06872559 36.55043793]
[-207.55696106 28.24116707]
[-194.11650085 21.58069229]
[-193.64038086 14.09582043]
[-207.56394958 8.51600933]
[-221.48751831 2.93619919]
[-235.41108704 -2.64361119]
[-249.33465576 -8.22342205]
[-263.25820923 -13.80323219]
[-277.18179321 -19.38304329]
[-291.10534668 -24.96285248]
[-305.02893066 -30.54266357]
[-320.71694946 -28.49409866]
[-329.65267944 -40.41053772]
[-343.57626343 -45.99034882]
[-356.64004517 -37.61674118]
[-372.12875366 -38.55465317]
[-384.08663940 -48.44344330]
[-387.91571045 -63.48066330]
[-382.14355469 -77.88420105]
[-368.98968506 -86.11559296]
[-353.51208496 -85.00971222]
[-341.66213989 -74.99179077]
[-337.99645996 -59.91391373]
[-324.07287598 -54.33410263]
[-309.38076782 -56.78177261]
[-299.44909668 -44.46622849]
[-285.52554321 -38.88642120]
[-271.60195923 -33.30661011]
[-257.67840576 -27.72679901]
[-243.75483704 -22.14698792]
[-229.83126831 -16.56717873]
[-215.90769958 -10.98736763]
[-201.98413086 -5.40755749]
[-188.06057739 0.17225313]
[-174.55070496 42.94315720]
[-159.71946716 45.18695068]
[-144.88824463 47.43074036]
[-136.56561279 35.05336380]
[-123.64116669 27.48580360]
[-108.65132141 26.27526665]
[-94.56491089 31.71524429]
[-84.19520569 42.77671432]
[-79.63803864 57.30233383]
[-64.80680847 59.54612350]
[-51.06533813 53.79970169]
[-38.57782745 63.51425934]
[-23.74659920 65.75804901]
[-8.91536808 68.00184631]
[5.91586256 70.24563599]
[20.74709320 72.48942566]
[35.57832336 74.73321533]
[50.40955353 76.97701263]
[65.24078369 79.22080231]
[80.07201385 81.46459198]
[112.12855530 80.81937408]
[125.39798737 73.82493591]
[138.66741943 66.83050537]
[151.93684387 59.83606339]
[148.17932129 47.87015533]
[146.41517639 35.45637894]
[146.69012451 22.92440224]
[148.99574280 10.60684395]
[153.26968384 -1.16955256]
[159.39746094 -12.09258747]
[167.21539307 -21.87288094]
[176.51510620 -30.25154114]
[187.04896545 -37.00701141]
[198.53675842 -41.96094131]
[210.67311096 -44.98287582]
[223.13558960 -45.99371338]
[235.59332275 -44.96775818]
[247.71571350 -41.93337250]
[259.18127441 -36.97220993]
[269.68609619 -30.21700668]
[278.95199585 -21.84802437]
[290.81704712 -31.02519417]
[302.68212891 -40.20236206]
[308.86434937 -54.76569748]
[323.66543579 -56.43215179]
[335.53048706 -65.60932159]
[347.39553833 -74.78649139]
[343.93182373 -88.46878052]
[345.93173218 -102.39656067]
[353.06146240 -114.47687531]
[364.21884155 -122.90705872]
[377.70361328 -126.44372559]
[391.47647095 -124.58609772]
[403.46749878 -117.64659119]
[415.43777466 -126.68611145]
[427.40802002 -135.72563171]
[439.37829590 -144.76515198]
[451.34854126 -153.80467224]
[458.55081177 -174.01177979]
[479.15246582 -175.53291321]
[490.80236816 -184.98168945]
[502.45230103 -194.43048096]
[508.29647827 -209.13272095]
[523.05511475 -211.14060974]
[534.70507812 -220.58938599]
[546.35498047 -230.03816223]
[558.00488281 -239.48693848]
[562.67620850 -247.29313660]
[569.84436035 -248.97663879]
[581.60266113 -258.29022217]
[579.98010254 -273.63204956]
[586.92999268 -287.40530396]
[600.23461914 -295.21502686]
[615.64843750 -294.56915283]
[628.25305176 -285.67376709]
[634.02630615 -271.36737061]
[631.12603760 -256.21508789]
[620.47766113 -245.05192566]
[605.47906494 -241.44004822]
[590.91619873 -246.53196716]
[579.15795898 -237.21836853]
[567.45367432 -227.83702087]
[555.80377197 -218.38824463]
[544.15380859 -208.93946838]
[532.50390625 -199.49069214]
[527.49298096 -185.46427917]
[511.90109253 -182.78056335]
[500.25115967 -173.33178711]
[488.60125732 -163.88299561]
[489.13092041 -155.08348083]
[485.51577759 -146.89323425]
[478.44400024 -141.18231201]
[469.40750122 -139.31694031]
[460.38806152 -141.83441162]
[448.41778564 -132.79489136]
[436.44754028 -123.75537109]
[424.47729492 -114.71585083]
[412.50701904 -105.67633057]
[415.94857788 -90.05450439]
[412.21090698 -74.44095612]
[401.99456787 -61.98084641]
[387.31048584 -55.20691681]
[371.08410645 -55.52475357]
[356.57269287 -62.92143631]
[344.70764160 -53.74426651]
[332.84259033 -44.56709671]
[327.50903320 -30.66017532]
[311.85928345 -28.33730698]
[299.99423218 -19.16013718]
[288.12918091 -9.98296738]
[295.65856934 5.75554419]
[299.43261719 22.78930092]
[299.25567627 40.23524857]
[295.13693237 57.18895721]
[308.64071655 63.71950531]
[322.14450073 70.25005341]
[335.64825439 76.78059387]
[349.15203857 83.31114197]
[362.65582275 89.84169006]
[376.26806641 82.39277649]
[391.65466309 84.40093994]
[402.89910889 95.09401703]
[405.67773438 110.36028290]
[398.92205811 124.32955170]
[385.22979736 131.63037109]
[369.86590576 129.45539856]
[358.73812866 118.64097595]
[356.12527466 103.34546661]
[342.62149048 96.81491852]
[329.11773682 90.28437042]
[315.61395264 83.75382996]
[302.11016846 77.22328186]
[288.60638428 70.69273376]
[278.16027832 84.21347046]
[264.97146606 95.08989716]
[249.69279480 102.77843475]
[233.08168030 106.89341736]
[215.96264648 107.22646332]
[199.18629456 103.75701141]
[183.58711243 96.65352631]
[169.94194031 86.26534271]
[158.93128967 73.10549927]
[145.66184998 80.09993744]
[132.39242554 87.09437561]
[119.12298584 94.08880615]
[134.06048584 92.72087097]
[146.05914307 101.72265625]
[148.92402649 116.44652557]
[141.17601013 129.29051208]
[126.81538391 133.62324524]
[113.25658417 127.20771027]
[107.50000000 113.35422516]
[107.50000000 128.35421753]
[107.50000000 143.35421753]
[107.50000000 158.35421753]
[121.86090088 163.06823730]
[134.04513550 171.97817993]
[142.86686707 184.20132446]
[147.47236633 198.53326416]
[147.42259216 213.56655884]
[142.73501587 227.82901001]
[133.88063049 239.92778015]
[121.73674011 248.68540955]
[107.50000000 253.25445557]
[107.50000000 268.25445557]
[107.50000000 283.25445557]
[121.08187866 290.31076050]
[129.81929016 302.87722778]
[131.70445251 318.06619263]
[126.30416107 332.38732910]
[114.85936737 342.54977417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 266]
[7 265]
[8 264]
[17 255]
[18 254]
[19 253]
[20 252]
[29 120]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[35 114]
[36 113]
[37 112]
[39 110]
[40 109]
[46 103]
[47 102]
[48 101]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[69 100]
[70 99]
[71 98]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[77 92]
[79 90]
[80 89]
[121 245]
[122 244]
[123 243]
[124 242]
[141 210]
[142 209]
[143 208]
[145 206]
[146 205]
[147 204]
[154 198]
[155 197]
[156 196]
[157 195]
[158 194]
[160 189]
[161 188]
[162 187]
[164 185]
[165 184]
[166 183]
[167 182]
[169 181]
[170 180]
[214 233]
[215 232]
[216 231]
[217 230]
[218 229]
[219 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
