%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FBXW8)
} def

/sequence { (\
GCGGCGGACACUUCCCUGGGCGGGACUGUCUCGUGGCACCCGGUGGAACCGAGGAGAACGUGGAGCGCCGGGAGCGGCGAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.014146228 ubox
1 29 0.020841445 ubox
1 34 0.011911895 ubox
1 37 0.620975915 ubox
1 61 0.004570689 ubox
1 66 0.009389370 ubox
1 75 0.012633099 ubox
1 78 0.024066936 ubox
2 18 0.064872232 ubox
2 20 0.013942632 ubox
2 28 0.022812003 ubox
2 33 0.012690397 ubox
2 35 0.010554276 ubox
2 36 0.621423286 ubox
2 60 0.004735753 ubox
2 65 0.009635726 ubox
2 70 0.074101261 ubox
2 74 0.011559134 ubox
2 77 0.023924201 ubox
2 79 0.009149534 ubox
3 12 0.003481897 ubox
3 16 0.005580924 ubox
3 17 0.066150971 ubox
3 27 0.022829015 ubox
3 30 0.529553059 ubox
3 31 0.009810733 ubox
3 32 0.018352671 ubox
3 34 0.008553033 ubox
3 59 0.004696027 ubox
3 69 0.076124556 ubox
3 78 0.008295898 ubox
4 11 0.003712254 ubox
4 15 0.005532180 ubox
4 16 0.066348419 ubox
4 26 0.022820734 ubox
4 29 0.532666534 ubox
4 30 0.014558523 ubox
4 31 0.010453798 ubox
4 34 0.621037127 ubox
4 66 0.058228493 ubox
4 68 0.076140935 ubox
4 75 0.011475765 ubox
5 18 0.007249962 ubox
5 22 0.003558510 ubox
5 28 0.533247139 ubox
5 33 0.622152613 ubox
5 65 0.060136675 ubox
5 67 0.076141896 ubox
5 74 0.011420363 ubox
5 76 0.005904926 ubox
6 12 0.003588519 ubox
6 14 0.007010221 ubox
6 15 0.067043650 ubox
6 16 0.004690597 ubox
6 17 0.007009742 ubox
6 21 0.003576238 ubox
6 27 0.532789077 ubox
6 30 0.032834588 ubox
6 31 0.366909916 ubox
6 32 0.613634069 ubox
6 66 0.076030784 ubox
7 11 0.003812510 ubox
7 13 0.006801697 ubox
7 14 0.067044230 ubox
7 15 0.004634337 ubox
7 16 0.007010783 ubox
7 26 0.532817156 ubox
7 29 0.017948603 ubox
7 30 0.832610596 ubox
7 31 0.060563996 ubox
7 32 0.006394006 ubox
8 12 0.006762283 ubox
8 13 0.060405210 ubox
8 29 0.835670785 ubox
8 31 0.008137972 ubox
9 18 0.003641178 ubox
9 28 0.835859170 ubox
9 62 0.101439764 ubox
10 17 0.003281661 ubox
10 27 0.813050340 ubox
10 29 0.022585976 ubox
10 61 0.101513007 ubox
11 19 0.003937443 ubox
11 20 0.003314638 ubox
11 23 0.056323305 ubox
11 24 0.020615523 ubox
11 28 0.024283503 ubox
11 60 0.101477468 ubox
12 18 0.003897135 ubox
12 19 0.003236879 ubox
12 22 0.055273984 ubox
12 23 0.020049186 ubox
12 25 0.343470785 ubox
12 57 0.003321009 ubox
12 58 0.100027087 ubox
13 20 0.005581840 ubox
13 22 0.018735515 ubox
13 24 0.313127317 ubox
13 25 0.914171555 ubox
13 56 0.003448476 ubox
13 57 0.101401467 ubox
14 19 0.006020993 ubox
14 20 0.059134960 ubox
14 23 0.313515396 ubox
14 24 0.939303602 ubox
14 56 0.101473623 ubox
15 19 0.058760790 ubox
15 22 0.312679549 ubox
15 23 0.939433647 ubox
15 24 0.020212755 ubox
15 54 0.101580384 ubox
16 22 0.938808259 ubox
16 23 0.021697667 ubox
16 53 0.101599618 ubox
17 22 0.021555788 ubox
17 51 0.004672326 ubox
17 52 0.101181917 ubox
18 31 0.007901836 ubox
18 50 0.009024741 ubox
19 26 0.004345409 ubox
19 30 0.062699918 ubox
19 49 0.008997364 ubox
19 50 0.101156897 ubox
20 29 0.063412586 ubox
20 34 0.004908555 ubox
20 44 0.007868457 ubox
20 49 0.101035931 ubox
21 28 0.063515032 ubox
21 33 0.006024628 ubox
21 42 0.100723640 ubox
21 43 0.010318893 ubox
22 27 0.048393425 ubox
22 30 0.005560332 ubox
22 32 0.007188715 ubox
22 41 0.101328332 ubox
23 29 0.005326655 ubox
23 30 0.003837019 ubox
23 31 0.007721594 ubox
23 40 0.101333213 ubox
23 41 0.006668257 ubox
24 30 0.008363681 ubox
24 39 0.100994189 ubox
24 40 0.006668306 ubox
25 29 0.007281897 ubox
27 38 0.094076057 ubox
28 37 0.101607313 ubox
28 82 0.004393237 ubox
29 36 0.101537312 ubox
29 81 0.004970897 ubox
30 35 0.101291947 ubox
31 80 0.657377025 ubox
32 79 0.773384362 ubox
33 78 0.775933486 ubox
34 77 0.774648701 ubox
35 75 0.003165733 ubox
36 75 0.776573067 ubox
37 62 0.003849146 ubox
37 74 0.775697892 ubox
38 61 0.008100843 ubox
39 46 0.004787038 ubox
39 54 0.564684652 ubox
39 60 0.005311668 ubox
39 63 0.028595101 ubox
39 71 0.004069452 ubox
39 72 0.810357386 ubox
40 45 0.004783214 ubox
40 46 0.003870536 ubox
40 53 0.567174115 ubox
40 54 0.021165896 ubox
40 62 0.028695535 ubox
40 63 0.017083170 ubox
40 71 0.812151027 ubox
41 45 0.003854468 ubox
41 51 0.572913132 ubox
41 53 0.019423859 ubox
41 60 0.018926008 ubox
41 62 0.017069962 ubox
41 70 0.812146880 ubox
42 50 0.573600774 ubox
42 59 0.018654364 ubox
42 61 0.014996449 ubox
42 69 0.812152935 ubox
43 49 0.573315201 ubox
43 59 0.021073323 ubox
43 68 0.812164531 ubox
44 48 0.516491538 ubox
44 51 0.005473484 ubox
44 58 0.021132196 ubox
44 67 0.811732406 ubox
45 50 0.006132858 ubox
45 59 0.005330921 ubox
45 66 0.808710504 ubox
48 61 0.168640711 ubox
49 60 0.155028696 ubox
49 63 0.742765222 ubox
50 60 0.239581586 ubox
50 62 0.744504864 ubox
51 59 0.253695268 ubox
51 61 0.601907161 ubox
59 67 0.005650985 ubox
59 79 0.004544198 ubox
60 66 0.022522126 ubox
60 78 0.004226022 ubox
60 82 0.016102210 ubox
61 65 0.021708162 ubox
61 77 0.004094131 ubox
61 81 0.015294815 ubox
62 66 0.004083453 ubox
66 76 0.004285976 ubox
66 79 0.566959400 ubox
67 75 0.004609916 ubox
67 78 0.578334976 ubox
68 74 0.004605344 ubox
68 77 0.578390782 ubox
69 76 0.578379472 ubox
70 75 0.575804642 ubox
1 37 0.9500000 lbox
2 36 0.9500000 lbox
4 34 0.9500000 lbox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
13 25 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
16 22 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
66 79 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
