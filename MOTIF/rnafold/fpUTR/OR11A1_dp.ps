%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR11A1)
} def

/sequence { (\
CUCUAAUAACGUUAGGCUUGGUAUAGAAGAUGCAGAGACAUGCUAAAAUUUCUCCCCCAAUUAUUGCCAAGCAGAAACUUGGACGAUCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.014914012 ubox
1 16 0.071777980 ubox
1 29 0.006218871 ubox
1 74 0.029286036 ubox
1 82 0.027079279 ubox
2 14 0.013348533 ubox
2 15 0.009389010 ubox
2 16 0.306706719 ubox
2 27 0.012249767 ubox
2 28 0.004456755 ubox
2 30 0.003372822 ubox
2 73 0.027616577 ubox
2 75 0.027760195 ubox
2 81 0.024456542 ubox
2 82 0.017257640 ubox
2 83 0.630366815 ubox
2 86 0.195948776 ubox
2 90 0.043863453 ubox
3 15 0.569693425 ubox
3 16 0.008853979 ubox
3 26 0.013539136 ubox
3 29 0.003606008 ubox
3 74 0.028952414 ubox
3 81 0.020960368 ubox
3 82 0.681216854 ubox
3 85 0.208925836 ubox
3 89 0.047010539 ubox
4 14 0.571021697 ubox
4 15 0.007320014 ubox
4 25 0.013500279 ubox
4 28 0.003552212 ubox
4 66 0.009112493 ubox
4 73 0.028399218 ubox
4 81 0.679948296 ubox
5 13 0.570533422 ubox
5 24 0.011652303 ubox
5 62 0.003210562 ubox
5 65 0.010767102 ubox
5 80 0.672981150 ubox
6 12 0.559837797 ubox
6 22 0.003290713 ubox
6 24 0.006806851 ubox
6 61 0.003236838 ubox
6 64 0.011291650 ubox
6 79 0.639791528 ubox
6 87 0.029868937 ubox
7 11 0.518346885 ubox
7 14 0.014626237 ubox
7 20 0.003647142 ubox
7 21 0.003175787 ubox
7 23 0.009325902 ubox
7 63 0.011495985 ubox
7 81 0.215031854 ubox
7 86 0.028482433 ubox
8 13 0.014741579 ubox
8 19 0.004015854 ubox
8 22 0.007206686 ubox
8 62 0.011470939 ubox
8 80 0.228524933 ubox
9 18 0.004146031 ubox
9 22 0.007823382 ubox
9 61 0.010003824 ubox
9 79 0.229054452 ubox
10 20 0.009768038 ubox
10 21 0.008385114 ubox
10 66 0.007902422 ubox
10 81 0.043621299 ubox
10 85 0.258451508 ubox
10 89 0.023089762 ubox
11 17 0.018779428 ubox
11 19 0.009228841 ubox
11 43 0.004712134 ubox
11 61 0.015391162 ubox
11 65 0.007743543 ubox
11 72 0.025467408 ubox
11 78 0.538510136 ubox
11 80 0.035828824 ubox
11 84 0.263355206 ubox
11 87 0.003894588 ubox
11 88 0.022771969 ubox
11 91 0.015341290 ubox
12 16 0.017589610 ubox
12 42 0.004672625 ubox
12 60 0.016515992 ubox
12 71 0.025460822 ubox
12 74 0.063404464 ubox
12 75 0.187524704 ubox
12 76 0.469997653 ubox
12 77 0.507230337 ubox
12 82 0.027502184 ubox
12 83 0.260880880 ubox
12 86 0.006493283 ubox
12 90 0.015329002 ubox
13 59 0.016406003 ubox
13 63 0.012595833 ubox
13 66 0.004578413 ubox
13 70 0.024255873 ubox
13 73 0.052206499 ubox
13 74 0.188837339 ubox
13 75 0.509311839 ubox
13 76 0.415756216 ubox
13 81 0.048073551 ubox
13 82 0.249082154 ubox
13 85 0.006098658 ubox
13 89 0.014395023 ubox
14 62 0.014403643 ubox
14 65 0.005341866 ubox
14 79 0.105698794 ubox
14 80 0.059624218 ubox
15 57 0.011581820 ubox
15 58 0.028965709 ubox
15 61 0.012923125 ubox
15 62 0.018656090 ubox
15 64 0.005580759 ubox
15 68 0.026214923 ubox
15 78 0.112338003 ubox
15 79 0.061643106 ubox
15 80 0.042242015 ubox
15 88 0.007269129 ubox
16 33 0.008973006 ubox
16 43 0.003559458 ubox
16 56 0.011649642 ubox
16 57 0.029155828 ubox
16 61 0.034825583 ubox
16 67 0.026370876 ubox
16 72 0.905230310 ubox
16 78 0.028791430 ubox
16 79 0.004083544 ubox
16 87 0.003397995 ubox
17 26 0.007109856 ubox
17 29 0.012792577 ubox
17 32 0.008977340 ubox
17 37 0.011582399 ubox
17 42 0.003603446 ubox
17 66 0.026504808 ubox
17 71 0.906647168 ubox
18 25 0.007027724 ubox
18 28 0.012850632 ubox
18 30 0.003340415 ubox
18 36 0.011631990 ubox
18 46 0.006807661 ubox
18 60 0.354477433 ubox
18 70 0.906160811 ubox
18 90 0.010864392 ubox
19 27 0.012754398 ubox
19 29 0.003364445 ubox
19 34 0.004983647 ubox
19 35 0.010140119 ubox
19 40 0.003349218 ubox
19 45 0.007552504 ubox
19 59 0.406588120 ubox
19 69 0.906163968 ubox
19 89 0.011774712 ubox
20 33 0.004375308 ubox
20 39 0.003399960 ubox
20 44 0.007665228 ubox
20 55 0.035646670 ubox
20 56 0.040646362 ubox
20 57 0.031757600 ubox
20 58 0.414678278 ubox
20 68 0.906661171 ubox
20 88 0.012032157 ubox
21 33 0.029145160 ubox
21 43 0.007677676 ubox
21 54 0.035715755 ubox
21 55 0.040827229 ubox
21 56 0.033925686 ubox
21 57 0.413864736 ubox
21 67 0.906649074 ubox
21 87 0.007084240 ubox
22 32 0.029542346 ubox
22 42 0.007670424 ubox
22 66 0.904015417 ubox
22 86 0.006717056 ubox
23 31 0.029833036 ubox
23 41 0.007502510 ubox
23 61 0.012597107 ubox
23 62 0.004308266 ubox
23 64 0.208449070 ubox
23 65 0.847916313 ubox
24 30 0.029339739 ubox
24 32 0.012668106 ubox
24 40 0.007115928 ubox
24 45 0.006863611 ubox
24 60 0.017036825 ubox
24 63 0.293288222 ubox
24 66 0.019700562 ubox
25 31 0.014703020 ubox
25 44 0.006996534 ubox
25 50 0.008881786 ubox
25 51 0.012102996 ubox
25 53 0.426537097 ubox
25 62 0.283817664 ubox
25 65 0.048974683 ubox
26 43 0.006780673 ubox
26 49 0.008918082 ubox
26 50 0.015261460 ubox
26 51 0.035040971 ubox
26 52 0.443645990 ubox
26 54 0.031126108 ubox
26 61 0.236706974 ubox
26 62 0.416149583 ubox
26 64 0.074471217 ubox
26 65 0.078864859 ubox
27 49 0.015286779 ubox
27 50 0.049923577 ubox
27 51 0.438576294 ubox
27 53 0.028975734 ubox
27 61 0.404103643 ubox
27 62 0.367105597 ubox
27 64 0.099017423 ubox
27 65 0.021035987 ubox
28 44 0.012443530 ubox
28 49 0.059275134 ubox
28 50 0.426952553 ubox
28 51 0.064032261 ubox
28 53 0.024788678 ubox
28 61 0.391083067 ubox
28 62 0.144307640 ubox
28 64 0.030232327 ubox
28 65 0.004290135 ubox
29 43 0.013343734 ubox
29 49 0.385289876 ubox
29 50 0.085625695 ubox
29 51 0.005862517 ubox
29 52 0.027530911 ubox
29 54 0.005413161 ubox
29 61 0.153230307 ubox
29 62 0.206024801 ubox
29 64 0.004724612 ubox
29 65 0.009834267 ubox
30 41 0.021535704 ubox
30 49 0.100069949 ubox
30 50 0.006081319 ubox
30 51 0.026397477 ubox
30 53 0.005000568 ubox
30 61 0.216587662 ubox
30 64 0.012512512 ubox
31 40 0.021935756 ubox
31 45 0.126026898 ubox
31 48 0.110578734 ubox
31 59 0.441627143 ubox
31 60 0.203910017 ubox
31 63 0.011739429 ubox
32 39 0.021907027 ubox
32 43 0.449446529 ubox
32 44 0.025246901 ubox
32 58 0.455866806 ubox
32 62 0.010451515 ubox
33 42 0.450358413 ubox
34 41 0.440386616 ubox
34 44 0.025091433 ubox
34 53 0.095284656 ubox
35 43 0.025952990 ubox
35 52 0.099357942 ubox
35 54 0.883094034 ubox
36 44 0.031897624 ubox
36 51 0.099122362 ubox
36 53 0.885333891 ubox
37 43 0.032143902 ubox
37 50 0.096087870 ubox
37 51 0.004342324 ubox
37 52 0.885598269 ubox
37 54 0.004987160 ubox
38 49 0.086255895 ubox
38 50 0.020218445 ubox
38 51 0.873476234 ubox
38 53 0.004836408 ubox
40 49 0.828720419 ubox
41 48 0.858049932 ubox
44 63 0.004687531 ubox
45 51 0.003936397 ubox
45 62 0.004837511 ubox
46 50 0.004743211 ubox
46 61 0.004221914 ubox
47 62 0.022295208 ubox
47 65 0.003169192 ubox
48 61 0.024273547 ubox
48 64 0.004089218 ubox
49 60 0.024624834 ubox
49 63 0.004127765 ubox
50 59 0.024170777 ubox
50 60 0.003694919 ubox
51 59 0.004028726 ubox
57 82 0.009433007 ubox
58 66 0.008812419 ubox
58 81 0.009477048 ubox
59 65 0.009633753 ubox
59 80 0.009455241 ubox
60 64 0.008157924 ubox
60 79 0.009052799 ubox
60 87 0.010028061 ubox
61 77 0.007238217 ubox
61 86 0.011593043 ubox
61 90 0.115986583 ubox
62 76 0.007312866 ubox
62 85 0.011209928 ubox
62 89 0.126931401 ubox
63 87 0.372496393 ubox
64 74 0.009208025 ubox
64 86 0.404452658 ubox
64 90 0.008707551 ubox
65 73 0.010243479 ubox
65 85 0.411254285 ubox
65 89 0.009540502 ubox
66 72 0.010345929 ubox
66 84 0.414962779 ubox
66 88 0.009763871 ubox
67 71 0.010271053 ubox
67 82 0.420784689 ubox
68 81 0.420879249 ubox
69 80 0.420643174 ubox
70 79 0.420536301 ubox
71 78 0.418548343 ubox
72 81 0.017029833 ubox
73 79 0.035107050 ubox
73 80 0.024442013 ubox
74 78 0.037437875 ubox
74 79 0.021517208 ubox
74 80 0.012318978 ubox
74 88 0.048314319 ubox
75 79 0.011440923 ubox
75 87 0.046162296 ubox
79 86 0.023448517 ubox
79 90 0.217778253 ubox
80 85 0.023432049 ubox
80 89 0.238114713 ubox
81 88 0.247162579 ubox
82 87 0.144703408 ubox
82 88 0.102581043 ubox
83 87 0.090273952 ubox
2 83 0.9500000 lbox
3 82 0.9500000 lbox
4 81 0.9500000 lbox
5 80 0.9500000 lbox
6 79 0.9500000 lbox
12 76 0.9500000 lbox
13 75 0.9500000 lbox
16 72 0.9500000 lbox
17 71 0.9500000 lbox
18 70 0.9500000 lbox
19 69 0.9500000 lbox
20 68 0.9500000 lbox
21 67 0.9500000 lbox
22 66 0.9500000 lbox
23 65 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
showpage
end
%%EOF
