%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF253)
} def

/sequence { (\
CUGUGCUUAUAGAGGCCCGUCCUCUGUGGCCGUGUGACCUGCAAGUAUUGGGAGAGCCACAGCUAAACCCCGGGACCCCUGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.010630173 ubox
1 62 0.009345047 ubox
1 85 0.003303396 ubox
1 90 0.979326441 ubox
2 11 0.010689921 ubox
2 32 0.018457920 ubox
2 43 0.005610846 ubox
2 61 0.009637934 ubox
2 84 0.003207417 ubox
2 89 0.984152996 ubox
3 10 0.010585641 ubox
3 18 0.004095131 ubox
3 31 0.025053721 ubox
3 42 0.006125905 ubox
3 48 0.003448242 ubox
3 60 0.009687060 ubox
3 86 0.004431574 ubox
3 88 0.963611635 ubox
4 9 0.010084318 ubox
4 32 0.003491549 ubox
4 41 0.006063497 ubox
4 43 0.007834707 ubox
4 47 0.003716279 ubox
4 59 0.009584069 ubox
4 85 0.004182362 ubox
4 89 0.007528276 ubox
5 16 0.005378431 ubox
5 30 0.030067189 ubox
5 31 0.004582623 ubox
5 40 0.003328438 ubox
5 42 0.008687379 ubox
5 46 0.003785528 ubox
5 57 0.006350126 ubox
5 58 0.006907862 ubox
5 86 0.998783623 ubox
6 15 0.005387832 ubox
6 29 0.030046838 ubox
6 41 0.008684188 ubox
6 45 0.003790971 ubox
6 56 0.008932342 ubox
6 85 0.999250608 ubox
7 14 0.005312761 ubox
7 28 0.021521658 ubox
7 29 0.012442845 ubox
7 37 0.010613332 ubox
7 44 0.003678809 ubox
7 55 0.008557728 ubox
7 83 0.023393658 ubox
7 84 0.994770712 ubox
8 13 0.004646448 ubox
8 28 0.044176907 ubox
8 36 0.012947263 ubox
8 43 0.003162853 ubox
8 54 0.007101722 ubox
8 82 0.029725940 ubox
8 83 0.900163138 ubox
8 84 0.010531497 ubox
9 27 0.089864531 ubox
9 35 0.015210637 ubox
10 26 0.098671948 ubox
10 34 0.015321381 ubox
10 81 0.906062633 ubox
11 25 0.104428811 ubox
11 33 0.014537495 ubox
11 80 0.985517233 ubox
12 24 0.106932827 ubox
12 79 0.986707528 ubox
13 23 0.107224370 ubox
13 80 0.087629359 ubox
13 88 0.011516992 ubox
14 22 0.107264616 ubox
14 31 0.029563923 ubox
14 77 0.968772673 ubox
14 78 0.197320477 ubox
14 79 0.088371292 ubox
14 87 0.011881127 ubox
15 21 0.106481550 ubox
15 30 0.029597397 ubox
15 76 0.970096544 ubox
15 77 0.193242336 ubox
15 78 0.088348484 ubox
15 86 0.011884041 ubox
16 29 0.029564429 ubox
16 73 0.006061574 ubox
16 74 0.977582750 ubox
16 85 0.011834280 ubox
17 28 0.029521085 ubox
17 72 0.006278105 ubox
17 73 0.977755954 ubox
17 74 0.016286315 ubox
17 82 0.009171551 ubox
18 26 0.028119318 ubox
18 32 0.004742927 ubox
18 72 0.977661796 ubox
18 73 0.016049112 ubox
18 81 0.009213703 ubox
19 25 0.023423116 ubox
19 30 0.013733370 ubox
19 31 0.012674441 ubox
19 38 0.003704118 ubox
19 48 0.006497807 ubox
19 63 0.011372489 ubox
19 68 0.234494735 ubox
19 71 0.942006691 ubox
19 76 0.175669274 ubox
20 29 0.010385354 ubox
20 37 0.003810456 ubox
20 47 0.008929317 ubox
20 53 0.016604951 ubox
20 62 0.007009286 ubox
20 67 0.290276530 ubox
20 75 0.176532992 ubox
21 28 0.010455082 ubox
21 29 0.029954448 ubox
21 36 0.003787081 ubox
21 52 0.017718822 ubox
21 54 0.004369034 ubox
21 74 0.176569032 ubox
22 28 0.030429160 ubox
22 45 0.034004878 ubox
22 51 0.017708574 ubox
22 52 0.006323895 ubox
22 54 0.023273169 ubox
22 62 0.012353811 ubox
22 72 0.003417378 ubox
22 73 0.176553339 ubox
23 44 0.033735267 ubox
23 50 0.015933351 ubox
23 51 0.006349805 ubox
23 53 0.023381677 ubox
23 61 0.008458958 ubox
23 72 0.174545602 ubox
24 45 0.020913314 ubox
24 50 0.009554111 ubox
24 52 0.023377277 ubox
24 62 0.970807505 ubox
24 72 0.005941338 ubox
25 32 0.003337648 ubox
25 43 0.058850744 ubox
25 44 0.015694881 ubox
25 51 0.022989951 ubox
25 61 0.974424693 ubox
25 65 0.008703315 ubox
26 31 0.003955362 ubox
26 38 0.020818805 ubox
26 42 0.064148857 ubox
26 48 0.015090252 ubox
26 60 0.975342041 ubox
26 63 0.003862038 ubox
26 64 0.003976959 ubox
26 68 0.016217875 ubox
27 37 0.020938395 ubox
27 41 0.062768338 ubox
27 43 0.003968739 ubox
27 47 0.015578827 ubox
27 59 0.975170547 ubox
27 62 0.003386541 ubox
27 65 0.175424755 ubox
27 67 0.013914777 ubox
28 39 0.059148875 ubox
28 40 0.040643447 ubox
28 42 0.005208995 ubox
28 46 0.014956499 ubox
28 58 0.975379288 ubox
28 64 0.188616459 ubox
28 69 0.004825146 ubox
28 87 0.005746818 ubox
29 35 0.021569262 ubox
29 38 0.059350115 ubox
29 39 0.040155976 ubox
29 42 0.024643684 ubox
29 46 0.021372313 ubox
29 57 0.975215746 ubox
29 63 0.190735312 ubox
29 68 0.004780169 ubox
29 86 0.005812421 ubox
30 34 0.021836524 ubox
30 41 0.024487966 ubox
30 45 0.022245661 ubox
30 51 0.078852013 ubox
30 52 0.079628262 ubox
30 56 0.967148873 ubox
30 62 0.190649981 ubox
30 82 0.003338679 ubox
30 85 0.005797296 ubox
31 41 0.017479830 ubox
31 50 0.115944308 ubox
31 51 0.116936789 ubox
31 81 0.003358079 ubox
32 38 0.048514103 ubox
32 40 0.015101384 ubox
32 42 0.036858555 ubox
32 46 0.008887592 ubox
32 48 0.029498968 ubox
32 49 0.106750397 ubox
32 57 0.017633967 ubox
32 60 0.185346123 ubox
32 63 0.003453254 ubox
33 37 0.044505266 ubox
33 41 0.036638008 ubox
33 43 0.179277522 ubox
33 45 0.009703650 ubox
33 47 0.035092685 ubox
33 50 0.057704467 ubox
33 56 0.027068182 ubox
33 59 0.185324918 ubox
33 61 0.038816098 ubox
34 40 0.026131215 ubox
34 42 0.183043162 ubox
34 46 0.031652351 ubox
34 48 0.098856248 ubox
34 49 0.050564772 ubox
34 57 0.103543678 ubox
34 58 0.154258301 ubox
34 60 0.041961315 ubox
34 76 0.003513333 ubox
34 86 0.007404128 ubox
35 41 0.180258145 ubox
35 43 0.061201023 ubox
35 45 0.013684081 ubox
35 47 0.101484429 ubox
35 50 0.072340810 ubox
35 56 0.145199667 ubox
35 59 0.041924741 ubox
35 75 0.003305392 ubox
35 85 0.007406243 ubox
36 40 0.083681300 ubox
36 42 0.062626773 ubox
36 46 0.078387232 ubox
36 49 0.070536376 ubox
36 58 0.041731787 ubox
37 46 0.184164661 ubox
37 48 0.063509819 ubox
38 45 0.195302038 ubox
38 51 0.781577690 ubox
38 52 0.494996261 ubox
38 74 0.010462952 ubox
38 82 0.007972245 ubox
39 45 0.070672616 ubox
39 50 0.781458636 ubox
39 51 0.495606446 ubox
39 52 0.060820211 ubox
39 54 0.080478366 ubox
39 56 0.013361631 ubox
39 62 0.003454997 ubox
39 73 0.010506243 ubox
39 81 0.007973080 ubox
39 90 0.006478510 ubox
40 44 0.065834423 ubox
40 47 0.066077481 ubox
40 50 0.472832481 ubox
40 51 0.056554198 ubox
40 53 0.079671031 ubox
40 55 0.014160656 ubox
40 61 0.003528710 ubox
40 72 0.010461674 ubox
40 89 0.006196119 ubox
41 46 0.066205341 ubox
41 49 0.335377259 ubox
41 57 0.015937484 ubox
41 60 0.003529279 ubox
41 71 0.010319923 ubox
41 86 0.008524217 ubox
41 88 0.003777425 ubox
42 50 0.168539834 ubox
42 56 0.015935722 ubox
42 85 0.008566901 ubox
43 49 0.175936196 ubox
44 48 0.136465861 ubox
44 64 0.062242649 ubox
45 57 0.003420218 ubox
45 63 0.064528688 ubox
45 76 0.013860049 ubox
46 56 0.003346362 ubox
46 62 0.064231415 ubox
46 75 0.013581491 ubox
48 54 0.005449893 ubox
48 55 0.030597150 ubox
48 62 0.005253386 ubox
48 73 0.013121329 ubox
48 90 0.004329759 ubox
49 53 0.005891991 ubox
49 54 0.031771813 ubox
49 55 0.017882623 ubox
49 59 0.064532163 ubox
49 61 0.009377816 ubox
49 72 0.016054292 ubox
49 89 0.006509312 ubox
50 58 0.065377300 ubox
50 60 0.009762953 ubox
50 69 0.039700730 ubox
50 70 0.062824402 ubox
50 71 0.029492510 ubox
50 88 0.006770611 ubox
51 57 0.065372795 ubox
51 58 0.011428496 ubox
51 68 0.039854196 ubox
51 69 0.063808976 ubox
51 70 0.029729551 ubox
51 87 0.006805545 ubox
52 57 0.011851002 ubox
52 68 0.063649448 ubox
52 69 0.029658508 ubox
52 86 0.006782768 ubox
53 64 0.003328452 ubox
54 63 0.003372162 ubox
55 64 0.085995912 ubox
56 63 0.087529349 ubox
57 62 0.087250626 ubox
62 86 0.004905370 ubox
63 85 0.004980838 ubox
63 90 0.006408912 ubox
64 84 0.004833245 ubox
64 89 0.006426612 ubox
65 88 0.006176182 ubox
69 82 0.013194646 ubox
70 81 0.012360555 ubox
70 82 0.108623653 ubox
71 81 0.109240897 ubox
72 79 0.013164222 ubox
72 80 0.109133010 ubox
73 78 0.013173544 ubox
73 79 0.109209024 ubox
74 78 0.107445476 ubox
79 90 0.017383056 ubox
80 89 0.017435945 ubox
81 88 0.017347254 ubox
82 87 0.017280469 ubox
1 90 0.9500000 lbox
2 89 0.9500000 lbox
3 88 0.9500000 lbox
5 86 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
8 83 0.9500000 lbox
10 81 0.9500000 lbox
11 80 0.9500000 lbox
12 79 0.9500000 lbox
14 77 0.9500000 lbox
15 76 0.9500000 lbox
16 74 0.9500000 lbox
17 73 0.9500000 lbox
18 72 0.9500000 lbox
19 71 0.9500000 lbox
24 62 0.9500000 lbox
25 61 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
30 56 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
showpage
end
%%EOF
