%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGCCAGCCCGCCACAGCGGGGCGUCACCUCGGACAUACGAACAGCGGGCGGUGUUCCCGGCUCCGUGGGGCCGUCUUCCCGGCGAGUCCGCGACGGUCGCCGCCCACGGCGAGGAACCCUUAACAUUCAGGGAUGUGGCCAUAGAAUUCUCUCCAGAAGAGUGGAAAUGCCUGGACCCUGCCCAGCAGAAUUUGUAUAGAGAUGUG\
) } def
/len { sequence length } bind def

/coor [
[-62.01529694 608.46398926]
[-65.92635345 616.74182129]
[-73.09856415 622.20794678]
[-81.84614563 623.73657227]
[-88.35440826 637.25109863]
[-94.86266327 650.76562500]
[-101.37091827 664.28021240]
[-100.97888184 669.48687744]
[-102.47416687 673.88336182]
[-105.23194122 676.88635254]
[-108.48637390 678.24505615]
[-115.59440613 691.45397949]
[-122.70243835 704.66290283]
[-129.81047058 717.87182617]
[-128.77929688 734.23852539]
[-142.58558655 743.08831787]
[-157.02661133 735.31726074]
[-157.24667358 718.91961670]
[-143.01939392 710.76385498]
[-135.91136169 697.55487061]
[-128.80334473 684.34594727]
[-121.69530487 671.13702393]
[-114.88545227 657.77191162]
[-108.37719727 644.25738525]
[-101.86893463 630.74285889]
[-95.36067963 617.22833252]
[-98.69129181 596.86035156]
[-80.79467773 585.07464600]
[-74.89929962 571.28173828]
[-69.00392151 557.48883057]
[-71.11644745 542.74475098]
[-58.57797623 533.09606934]
[-52.68259811 519.30316162]
[-60.56428528 508.52670288]
[-62.10400009 495.15563965]
[-56.79328918 482.67053223]
[-45.92098236 474.37457275]
[-32.26218796 472.51974487]
[-26.16113853 458.81655884]
[-20.06008911 445.11337280]
[-13.95903969 431.41021729]
[-7.85799026 417.70703125]
[-1.75694072 404.00384521]
[4.34410906 390.30065918]
[-3.23328114 373.63696289]
[3.89750266 356.43106079]
[21.63918495 349.78845215]
[27.32756805 335.90890503]
[32.91197205 321.98718262]
[38.39208603 308.02407837]
[43.87220383 294.06097412]
[49.35231781 280.09786987]
[54.83243561 266.13473511]
[60.31254959 252.17164612]
[57.75989532 237.49740601]
[70.00411224 227.47793579]
[75.48423004 213.51483154]
[75.00167084 206.13935852]
[81.15217590 199.38484192]
[86.84055328 185.50527954]
[84.50770569 170.79449463]
[96.90043640 160.95932007]
[102.58882141 147.07975769]
[108.27720642 133.20019531]
[64.04486084 134.08016968]
[37.99227905 80.96393585]
[28.63993073 69.23646545]
[19.28758430 57.50899124]
[9.84777832 45.85180283]
[0.32104218 34.26554871]
[-9.29209232 22.75087547]
[-18.99108696 11.30843258]
[-28.69008064 -0.13401084]
[-38.38907242 -11.57645416]
[-48.17338562 -22.94602966]
[-58.04246521 -34.24210358]
[-67.91154480 -45.53817368]
[-77.78062439 -56.83424759]
[-93.62619781 -59.34371567]
[-101.41812897 -73.36746216]
[-95.17911530 -88.14765930]
[-79.69519806 -92.34621429]
[-66.84431458 -82.74234772]
[-66.48455811 -66.70332336]
[-56.61547470 -55.40725327]
[-46.74639511 -44.11118317]
[-36.87731171 -32.81510925]
[-30.10866356 -29.84597015]
[-26.94663048 -21.27544785]
[-17.24763680 -9.83300495]
[-7.54864264 1.60943878]
[2.15035152 13.05188274]
[8.87382698 16.12194633]
[11.90729618 24.73881149]
[21.43403244 36.32506561]
[28.11083031 39.49536514]
[31.01505661 48.15664291]
[40.36740494 59.88411713]
[49.71974945 71.61158752]
[64.05334473 67.19026184]
[65.17429352 52.23220444]
[66.29524231 37.27414703]
[67.41619873 22.31608963]
[68.53714752 7.35803318]
[69.65809631 -7.60002375]
[62.05915070 -22.13233185]
[71.07229614 -35.83252335]
[87.42559052 -34.60701370]
[94.29615784 -19.71650314]
[84.61615753 -6.47907209]
[83.49520874 8.47898483]
[82.37425232 23.43704224]
[81.25330353 38.39509964]
[80.13235474 53.35315704]
[79.01139832 68.31121063]
[85.99295044 71.05126953]
[91.47329712 57.08825302]
[105.43622589 62.56883240]
[99.95606232 76.53138733]
[106.93761444 79.27144623]
[116.28996277 67.54396820]
[125.64230347 55.81649780]
[134.99465942 44.08902740]
[130.73687744 29.16753197]
[136.09451294 14.60472393]
[149.00743103 6.00029945]
[164.51036072 6.66283607]
[176.64210510 16.33757401]
[180.73774719 31.30438042]
[175.22245789 45.80821228]
[162.21694946 54.27204895]
[146.72212219 53.44137192]
[137.36978149 65.16884613]
[128.01742554 76.89631653]
[118.66508484 88.62378693]
[122.21910095 95.22825623]
[129.32713318 108.43718719]
[132.88114929 115.04165649]
[147.82075500 113.69706726]
[157.93247986 101.84840393]
[173.10253906 100.69762421]
[184.33610535 110.41062927]
[199.27571106 109.06604004]
[214.21533203 107.72144318]
[229.15495300 106.37685394]
[234.85246277 95.94148254]
[244.77847290 89.61719513]
[256.40466309 88.87772369]
[266.83505249 93.79134369]
[273.52737427 103.03254700]
[288.50051880 102.13548279]
[303.47366333 101.23841858]
[318.44683838 100.34136200]
[331.82757568 90.86046600]
[346.61364746 97.95301819]
[347.59439087 114.32281494]
[333.76089478 123.13000488]
[319.34390259 115.31451416]
[304.37072754 116.21157074]
[289.39758301 117.10863495]
[274.42443848 118.00569916]
[263.12445068 132.40728760]
[244.56799316 134.00387573]
[230.49954224 121.31647491]
[215.55992126 122.66106415]
[200.62031555 124.00565338]
[185.68069458 125.35024261]
[176.36196899 136.91297913]
[161.23023987 138.48941040]
[149.16534424 128.63668823]
[134.22573853 129.98127747]
[122.15676880 138.88858032]
[116.46838379 152.76814270]
[110.78000641 166.64770508]
[112.70598602 182.35124207]
[100.72012329 191.19366455]
[95.03173828 205.07322693]
[89.44733429 218.99494934]
[83.96721649 232.95805359]
[86.12789917 248.63102722]
[74.27565765 257.65176392]
[68.79553986 271.61486816]
[63.31542587 285.57797241]
[57.83530807 299.54107666]
[52.35519409 313.50418091]
[46.87508011 327.46728516]
[46.65283585 336.59982300]
[41.20713043 341.59729004]
[35.51874924 355.47683716]
[42.15652084 365.34085083]
[43.19752502 377.06427002]
[38.49835205 387.72415161]
[29.33241272 394.71859741]
[18.04729080 396.40170288]
[11.94624138 410.10488892]
[5.84519148 423.80807495]
[-0.25585818 437.51126099]
[-6.35690784 451.21444702]
[-12.45795727 464.91760254]
[-18.55900764 478.62078857]
[-9.90336895 493.15225220]
[-11.59761524 509.81414795]
[-22.77701759 522.06042480]
[-38.88968277 525.19854736]
[-44.78505707 538.99145508]
[-43.09420776 554.72204590]
[-55.21100616 563.38415527]
[-61.10638428 577.17712402]
[-67.00176239 590.97003174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 26]
[5 25]
[6 24]
[7 23]
[11 22]
[12 21]
[13 20]
[14 19]
[28 209]
[29 208]
[30 207]
[32 205]
[33 204]
[38 200]
[39 199]
[40 198]
[41 197]
[42 196]
[43 195]
[44 194]
[47 189]
[48 188]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[54 181]
[56 179]
[57 178]
[59 177]
[60 176]
[62 174]
[63 173]
[64 172]
[66 99]
[67 98]
[68 97]
[69 95]
[70 94]
[71 92]
[72 91]
[73 90]
[74 89]
[75 87]
[76 86]
[77 85]
[78 84]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[120 135]
[121 134]
[122 133]
[123 132]
[138 171]
[139 170]
[142 167]
[143 166]
[144 165]
[145 164]
[150 161]
[151 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
