%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C9orf116)
} def

/sequence { (\
UCACGUGACCUGGCCGUCGCUUGGCAACAGGACGCCGCCGAGUCCCGCUUCUCCUCCAGGCACA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.009741628 ubox
1 24 0.006041956 ubox
1 41 0.003966961 ubox
2 7 0.010831492 ubox
2 23 0.008853639 ubox
2 40 0.004238249 ubox
3 22 0.008933228 ubox
4 34 0.020607039 ubox
4 37 0.005980028 ubox
4 47 0.120125150 ubox
5 20 0.014120725 ubox
5 28 0.005433635 ubox
5 33 0.024320985 ubox
5 35 0.082429928 ubox
5 36 0.006868196 ubox
5 46 0.149522007 ubox
5 48 0.020987657 ubox
5 61 0.004091265 ubox
5 63 0.978131034 ubox
6 19 0.014156201 ubox
6 27 0.005158625 ubox
6 32 0.022780489 ubox
6 34 0.082800640 ubox
6 47 0.020322765 ubox
6 62 0.979329302 ubox
6 64 0.008311802 ubox
7 18 0.017132402 ubox
7 25 0.003587882 ubox
7 33 0.083767956 ubox
7 44 0.172205045 ubox
7 46 0.009435190 ubox
7 61 0.979689634 ubox
7 63 0.010497484 ubox
8 17 0.017136671 ubox
8 43 0.172916260 ubox
9 16 0.017099461 ubox
9 24 0.006197792 ubox
9 31 0.090390671 ubox
9 42 0.172487349 ubox
9 60 0.980360473 ubox
10 23 0.006197950 ubox
10 30 0.090534139 ubox
10 42 0.011481845 ubox
10 59 0.980457564 ubox
11 29 0.090430984 ubox
11 37 0.007253507 ubox
11 40 0.167571202 ubox
11 41 0.013451586 ubox
11 58 0.979540595 ubox
12 21 0.006446686 ubox
12 28 0.089436338 ubox
12 36 0.023693406 ubox
12 39 0.205137272 ubox
12 49 0.056617169 ubox
12 50 0.006124376 ubox
12 51 0.005934287 ubox
12 52 0.014994437 ubox
12 53 0.005852196 ubox
12 54 0.022150204 ubox
12 55 0.004817123 ubox
12 56 0.013572150 ubox
12 57 0.971711063 ubox
13 20 0.016566047 ubox
13 25 0.195556222 ubox
13 35 0.027291313 ubox
13 38 0.216771966 ubox
13 45 0.003399413 ubox
13 48 0.138902727 ubox
13 49 0.028967387 ubox
13 50 0.009599766 ubox
13 51 0.036959035 ubox
13 52 0.006447414 ubox
13 53 0.025144276 ubox
13 54 0.011322052 ubox
13 55 0.009263479 ubox
13 56 0.941601682 ubox
14 19 0.019033206 ubox
14 24 0.203710675 ubox
14 31 0.006588691 ubox
14 34 0.019930869 ubox
14 37 0.208773765 ubox
14 42 0.007117125 ubox
14 47 0.146244355 ubox
15 23 0.203798589 ubox
15 30 0.006657818 ubox
15 34 0.092987306 ubox
15 37 0.158458251 ubox
15 40 0.008543535 ubox
15 47 0.858313755 ubox
16 22 0.190669794 ubox
16 25 0.069608328 ubox
16 28 0.033584643 ubox
16 33 0.097688827 ubox
16 35 0.188208691 ubox
16 36 0.175754678 ubox
16 38 0.024371114 ubox
16 39 0.010403388 ubox
16 43 0.003582862 ubox
16 46 0.868701061 ubox
16 48 0.219585585 ubox
16 63 0.003986552 ubox
17 24 0.069620522 ubox
17 27 0.033340531 ubox
17 32 0.097134436 ubox
17 34 0.113115872 ubox
17 37 0.023421954 ubox
17 41 0.039218240 ubox
17 47 0.215843139 ubox
17 62 0.003971789 ubox
18 23 0.069220803 ubox
18 31 0.093010539 ubox
18 34 0.236234370 ubox
18 37 0.006129052 ubox
18 40 0.040155326 ubox
18 47 0.070653229 ubox
19 25 0.036994518 ubox
19 33 0.238865870 ubox
19 35 0.003988272 ubox
19 36 0.005793701 ubox
19 38 0.033265257 ubox
19 39 0.039564182 ubox
19 43 0.915429943 ubox
19 46 0.057857197 ubox
19 48 0.035875483 ubox
19 61 0.010732838 ubox
20 24 0.036775339 ubox
20 30 0.077990356 ubox
20 31 0.265417804 ubox
20 34 0.003794015 ubox
20 37 0.034283339 ubox
20 42 0.924639710 ubox
20 47 0.034529675 ubox
20 60 0.010751822 ubox
21 29 0.057010305 ubox
21 30 0.267626946 ubox
21 41 0.924615053 ubox
21 59 0.010792278 ubox
22 29 0.275172804 ubox
22 37 0.051549677 ubox
22 40 0.923786574 ubox
22 47 0.014521809 ubox
22 58 0.010813048 ubox
23 28 0.280646392 ubox
23 36 0.077553329 ubox
23 39 0.924187878 ubox
23 44 0.014926867 ubox
23 45 0.007290238 ubox
23 46 0.017593701 ubox
23 49 0.102963713 ubox
23 51 0.003814296 ubox
23 52 0.005642557 ubox
23 54 0.010289694 ubox
23 57 0.010823854 ubox
24 35 0.078293163 ubox
24 38 0.924160758 ubox
24 43 0.014998282 ubox
24 44 0.007294713 ubox
24 45 0.016256971 ubox
24 48 0.104540528 ubox
24 50 0.003242369 ubox
24 51 0.006042316 ubox
24 53 0.010283630 ubox
24 56 0.010799463 ubox
25 34 0.078799764 ubox
25 37 0.923474073 ubox
25 42 0.015337977 ubox
25 47 0.104406678 ubox
26 50 0.015238632 ubox
27 43 0.011449695 ubox
27 49 0.015642247 ubox
28 42 0.011768251 ubox
29 49 0.005345151 ubox
29 50 0.004054558 ubox
29 52 0.009760422 ubox
29 55 0.049404172 ubox
30 36 0.489610891 ubox
30 39 0.035374481 ubox
30 45 0.217165865 ubox
30 46 0.019732338 ubox
30 51 0.010208385 ubox
30 52 0.008975206 ubox
30 54 0.052675579 ubox
31 35 0.482007965 ubox
31 38 0.035307887 ubox
31 44 0.218241074 ubox
31 45 0.014088574 ubox
31 50 0.010134154 ubox
31 51 0.009784324 ubox
31 53 0.052673408 ubox
32 43 0.218656298 ubox
32 49 0.010098734 ubox
32 50 0.009752892 ubox
32 52 0.051827898 ubox
33 40 0.005772471 ubox
33 42 0.218621582 ubox
33 47 0.009237002 ubox
34 39 0.008554349 ubox
34 46 0.009184603 ubox
34 48 0.032144732 ubox
34 61 0.029022779 ubox
35 42 0.003352672 ubox
35 47 0.029632373 ubox
35 60 0.029233841 ubox
36 47 0.017536960 ubox
36 59 0.029246373 ubox
37 43 0.018057373 ubox
37 46 0.021391081 ubox
37 48 0.053304537 ubox
37 61 0.085767706 ubox
38 42 0.018137278 ubox
38 47 0.050333958 ubox
38 60 0.085880778 ubox
39 47 0.027191225 ubox
39 59 0.085729931 ubox
40 46 0.033115659 ubox
40 50 0.063272026 ubox
40 51 0.046077144 ubox
40 53 0.220017414 ubox
40 56 0.057224839 ubox
41 49 0.070889624 ubox
41 50 0.041490990 ubox
41 52 0.220524429 ubox
41 55 0.057560968 ubox
42 48 0.074456806 ubox
42 49 0.030345648 ubox
42 51 0.220521633 ubox
42 54 0.057270059 ubox
42 63 0.007217468 ubox
43 47 0.069703979 ubox
43 62 0.007107163 ubox
45 60 0.014754592 ubox
46 59 0.014862404 ubox
47 61 0.118510110 ubox
48 59 0.022460146 ubox
48 60 0.120203282 ubox
49 58 0.022686464 ubox
49 59 0.118612239 ubox
50 58 0.106905045 ubox
50 59 0.005910141 ubox
50 60 0.024944908 ubox
51 59 0.033968039 ubox
51 60 0.013327988 ubox
52 58 0.032877174 ubox
52 59 0.012741269 ubox
52 60 0.009104762 ubox
53 59 0.012190037 ubox
53 60 0.053962345 ubox
54 59 0.054454978 ubox
54 60 0.009284956 ubox
55 59 0.008474188 ubox
5 63 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
12 57 0.9500000 lbox
13 56 0.9500000 lbox
15 47 0.9500000 lbox
16 46 0.9500000 lbox
19 43 0.9500000 lbox
20 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
showpage
end
%%EOF
