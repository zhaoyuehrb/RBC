%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LEXM)
} def

/sequence { (\
ACAAGGCCCGGGUUGCCGUGGCAGCAGCGGAGGCGGGCAGCGCGCAGGCCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 20 0.004346911 ubox
2 52 0.417615813 ubox
3 19 0.004199858 ubox
3 51 0.295746591 ubox
4 51 0.832915575 ubox
5 17 0.005476941 ubox
5 50 0.905936812 ubox
5 54 0.101626106 ubox
6 13 0.003589651 ubox
6 16 0.005486748 ubox
6 22 0.287603718 ubox
6 28 0.004181571 ubox
6 34 0.196940532 ubox
6 38 0.012023512 ubox
6 49 0.906072007 ubox
6 53 0.102474088 ubox
7 12 0.003673947 ubox
7 15 0.005477327 ubox
7 21 0.287961539 ubox
7 27 0.004142880 ubox
7 30 0.026656568 ubox
7 33 0.196732641 ubox
7 37 0.012575402 ubox
7 48 0.906053653 ubox
7 52 0.101618472 ubox
8 20 0.287939235 ubox
8 29 0.025403326 ubox
8 30 0.240914298 ubox
8 32 0.163364196 ubox
8 33 0.007908187 ubox
8 36 0.013515026 ubox
8 47 0.901415922 ubox
8 48 0.005496939 ubox
9 18 0.287665186 ubox
9 29 0.265170494 ubox
9 32 0.010355619 ubox
9 35 0.013695062 ubox
9 42 0.008285191 ubox
9 44 0.885161591 ubox
9 47 0.007144431 ubox
9 52 0.016632527 ubox
10 17 0.288049702 ubox
10 28 0.265712373 ubox
10 34 0.012794326 ubox
10 41 0.008217797 ubox
10 43 0.904829062 ubox
10 50 0.086396679 ubox
10 51 0.043075856 ubox
11 16 0.287743187 ubox
11 17 0.015051946 ubox
11 49 0.086514602 ubox
11 50 0.046030924 ubox
11 54 0.004298643 ubox
12 16 0.015037516 ubox
12 25 0.268165639 ubox
12 28 0.118155503 ubox
12 34 0.008430096 ubox
12 38 0.006385319 ubox
12 41 0.905373380 ubox
12 43 0.003660319 ubox
12 45 0.004493043 ubox
12 49 0.045980687 ubox
12 53 0.004354994 ubox
13 24 0.268243311 ubox
13 27 0.118212363 ubox
13 30 0.004266646 ubox
13 32 0.004834741 ubox
13 33 0.008803776 ubox
13 36 0.012590008 ubox
13 37 0.005343518 ubox
13 40 0.904940251 ubox
13 42 0.003396521 ubox
13 44 0.003417456 ubox
13 47 0.089719131 ubox
13 48 0.036893748 ubox
13 52 0.004341690 ubox
14 23 0.268260406 ubox
14 26 0.118171329 ubox
14 29 0.005219261 ubox
14 31 0.005489267 ubox
14 32 0.006947628 ubox
14 35 0.038245308 ubox
14 36 0.004248291 ubox
14 39 0.903864582 ubox
14 46 0.097824200 ubox
14 47 0.024155829 ubox
15 22 0.268507797 ubox
15 25 0.118271082 ubox
15 28 0.005472291 ubox
15 34 0.048200198 ubox
15 38 0.904087677 ubox
15 43 0.004264172 ubox
15 45 0.099127929 ubox
15 49 0.005569089 ubox
16 21 0.267638095 ubox
16 24 0.118123083 ubox
16 27 0.005474512 ubox
16 30 0.020660369 ubox
16 33 0.050206153 ubox
16 36 0.340998737 ubox
16 37 0.837311195 ubox
16 42 0.003283094 ubox
16 44 0.093421420 ubox
16 48 0.005900085 ubox
17 29 0.025078926 ubox
17 32 0.052445919 ubox
17 35 0.481862907 ubox
17 36 0.763860304 ubox
17 42 0.086705421 ubox
17 44 0.038235138 ubox
17 47 0.005932941 ubox
18 25 0.283050891 ubox
18 28 0.041465613 ubox
18 34 0.588694280 ubox
18 41 0.086730313 ubox
18 43 0.050635272 ubox
18 45 0.014369810 ubox
19 24 0.278727050 ubox
19 26 0.220815284 ubox
19 27 0.034294418 ubox
19 29 0.029173741 ubox
19 33 0.545972652 ubox
19 35 0.210938357 ubox
19 39 0.004136602 ubox
19 40 0.082565114 ubox
19 42 0.049247398 ubox
19 44 0.014569278 ubox
19 46 0.004512070 ubox
20 25 0.247139065 ubox
20 28 0.064633514 ubox
20 34 0.220498184 ubox
20 38 0.004379579 ubox
20 41 0.038006187 ubox
20 43 0.014952098 ubox
20 45 0.004967008 ubox
20 54 0.004673286 ubox
21 28 0.651584046 ubox
21 34 0.288518148 ubox
21 38 0.085989070 ubox
21 41 0.038176301 ubox
21 43 0.006529971 ubox
21 45 0.003491686 ubox
21 53 0.004872326 ubox
22 27 0.654362029 ubox
22 33 0.298116435 ubox
22 37 0.086471045 ubox
22 40 0.049261069 ubox
22 42 0.006576817 ubox
22 44 0.003514893 ubox
22 52 0.004890616 ubox
23 51 0.004941101 ubox
24 34 0.085982268 ubox
24 38 0.053403909 ubox
24 41 0.007417624 ubox
24 49 0.003453061 ubox
24 50 0.004341756 ubox
24 53 0.056861727 ubox
25 33 0.086573195 ubox
25 37 0.053452505 ubox
25 40 0.007419798 ubox
25 48 0.004152344 ubox
25 52 0.056994760 ubox
26 51 0.056519826 ubox
27 34 0.420279187 ubox
27 38 0.007552707 ubox
27 45 0.007236281 ubox
27 49 0.038849199 ubox
27 50 0.040959499 ubox
27 53 0.019783170 ubox
28 33 0.421006580 ubox
28 35 0.163341653 ubox
28 37 0.007559703 ubox
28 44 0.007256032 ubox
28 48 0.054620389 ubox
28 52 0.019791112 ubox
29 34 0.174256493 ubox
29 43 0.006852119 ubox
29 50 0.003808161 ubox
29 51 0.010921854 ubox
29 54 0.037044154 ubox
30 49 0.004128871 ubox
30 50 0.006713425 ubox
30 53 0.037266123 ubox
31 51 0.054299110 ubox
32 50 0.056341014 ubox
32 54 0.264913757 ubox
33 41 0.007624467 ubox
33 43 0.054224706 ubox
33 45 0.020528026 ubox
33 49 0.056652043 ubox
33 53 0.267198474 ubox
34 40 0.007640864 ubox
34 42 0.054249345 ubox
34 44 0.020536787 ubox
34 48 0.056638348 ubox
34 52 0.267203898 ubox
35 41 0.054144832 ubox
35 43 0.020459343 ubox
35 51 0.267011767 ubox
35 54 0.023587857 ubox
36 50 0.267211677 ubox
36 53 0.016826433 ubox
36 54 0.297814914 ubox
37 43 0.008262858 ubox
37 45 0.056076924 ubox
37 49 0.267097543 ubox
37 53 0.301776799 ubox
38 42 0.008234689 ubox
38 44 0.056090078 ubox
38 48 0.266763254 ubox
38 52 0.302281182 ubox
39 51 0.302276068 ubox
40 49 0.025729109 ubox
40 50 0.301295324 ubox
40 53 0.005897313 ubox
41 48 0.035946954 ubox
41 52 0.005888308 ubox
42 49 0.300445456 ubox
43 48 0.300391775 ubox
44 53 0.005078255 ubox
45 52 0.005088867 ubox
46 51 0.004585192 ubox
4 51 0.9500000 lbox
5 50 0.9500000 lbox
6 49 0.9500000 lbox
7 48 0.9500000 lbox
8 47 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
12 41 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
showpage
end
%%EOF
