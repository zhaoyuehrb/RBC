%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MARVELD3)
} def

/sequence { (\
GGGCUUGGCCACCUGCCCAAGAAACUUGUUGGUUGUUGCCCUCAGGUCGCUCCCGGGCGGGGACACGGAACCCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.120821239 ubox
1 18 0.191968821 ubox
1 41 0.005653608 ubox
1 52 0.005764219 ubox
1 53 0.004753570 ubox
1 54 0.078780181 ubox
1 72 0.120979955 ubox
1 73 0.674177748 ubox
1 77 0.040514855 ubox
2 9 0.119957523 ubox
2 10 0.248936941 ubox
2 17 0.192118594 ubox
2 40 0.005663832 ubox
2 48 0.003321321 ubox
2 51 0.005856034 ubox
2 52 0.004773093 ubox
2 53 0.078834406 ubox
2 54 0.008489371 ubox
2 71 0.121894603 ubox
2 72 0.674574596 ubox
2 73 0.032331516 ubox
2 76 0.029660896 ubox
2 77 0.591634797 ubox
3 9 0.249731725 ubox
3 16 0.192120310 ubox
3 39 0.005663925 ubox
3 47 0.003364745 ubox
3 50 0.006637886 ubox
3 52 0.078657641 ubox
3 53 0.008495078 ubox
3 71 0.673454955 ubox
3 72 0.032320736 ubox
3 76 0.599080974 ubox
4 8 0.248343966 ubox
4 15 0.192016243 ubox
4 21 0.026032276 ubox
4 38 0.005645925 ubox
4 46 0.003551476 ubox
4 49 0.006381069 ubox
4 68 0.191082281 ubox
4 75 0.599321054 ubox
5 20 0.026683388 ubox
5 45 0.003540397 ubox
5 67 0.170076700 ubox
5 68 0.431890079 ubox
5 69 0.378809159 ubox
5 70 0.114411312 ubox
5 74 0.562430404 ubox
5 75 0.021288877 ubox
6 19 0.027187554 ubox
6 44 0.003411121 ubox
6 49 0.005715872 ubox
6 65 0.167802462 ubox
6 67 0.518432459 ubox
6 68 0.343499244 ubox
6 69 0.101589154 ubox
6 74 0.155983077 ubox
7 13 0.169594724 ubox
7 14 0.022446835 ubox
7 17 0.017299936 ubox
7 18 0.024557113 ubox
7 37 0.003900402 ubox
7 40 0.003514679 ubox
7 48 0.006159326 ubox
7 51 0.072768511 ubox
7 64 0.176045177 ubox
7 66 0.563336704 ubox
7 72 0.539779684 ubox
7 73 0.221194463 ubox
7 77 0.215670711 ubox
8 12 0.166963274 ubox
8 13 0.023841140 ubox
8 16 0.021037967 ubox
8 17 0.021445455 ubox
8 36 0.005109110 ubox
8 39 0.003875235 ubox
8 47 0.006028019 ubox
8 50 0.073806969 ubox
8 71 0.537933079 ubox
8 72 0.220628076 ubox
8 76 0.218168388 ubox
9 15 0.024132267 ubox
9 35 0.005138448 ubox
9 38 0.003879282 ubox
9 46 0.005988091 ubox
9 49 0.073764155 ubox
9 61 0.003745717 ubox
9 62 0.108062055 ubox
9 68 0.515320312 ubox
9 75 0.218130170 ubox
10 45 0.005948839 ubox
10 60 0.003264619 ubox
10 61 0.097845228 ubox
10 67 0.513987368 ubox
10 74 0.207439237 ubox
11 33 0.005360058 ubox
11 36 0.004155810 ubox
11 47 0.072945043 ubox
12 32 0.005458725 ubox
12 35 0.004225462 ubox
12 46 0.073816609 ubox
12 60 0.086603720 ubox
12 61 0.967091926 ubox
12 62 0.074614783 ubox
12 68 0.011133769 ubox
12 75 0.005265890 ubox
13 31 0.005456284 ubox
13 45 0.073819473 ubox
13 59 0.085835079 ubox
13 60 0.970486377 ubox
13 61 0.061270423 ubox
13 67 0.010751628 ubox
13 74 0.005268767 ubox
14 44 0.073773589 ubox
14 59 0.971515615 ubox
14 60 0.043009516 ubox
14 65 0.009289085 ubox
15 33 0.005802587 ubox
15 39 0.006315765 ubox
15 43 0.073200532 ubox
15 58 0.977980355 ubox
15 64 0.009338560 ubox
16 32 0.008190370 ubox
16 35 0.003452705 ubox
16 38 0.006855813 ubox
16 57 0.978019055 ubox
16 62 0.009455239 ubox
17 31 0.008037637 ubox
17 32 0.014289425 ubox
17 55 0.003809426 ubox
17 56 0.978013235 ubox
17 61 0.009454665 ubox
18 28 0.018170546 ubox
18 31 0.014423189 ubox
18 38 0.057435868 ubox
18 55 0.977422473 ubox
18 60 0.009437923 ubox
19 27 0.018632620 ubox
19 30 0.014520913 ubox
19 37 0.057365098 ubox
20 26 0.018688735 ubox
20 29 0.014377434 ubox
20 36 0.055228674 ubox
20 37 0.019771096 ubox
20 51 0.946347387 ubox
21 25 0.018298014 ubox
21 36 0.016558750 ubox
21 37 0.019381819 ubox
21 48 0.018158277 ubox
21 50 0.959079901 ubox
21 52 0.259244712 ubox
22 34 0.037570529 ubox
22 36 0.017940290 ubox
22 47 0.013606649 ubox
22 51 0.257675048 ubox
23 33 0.027002818 ubox
23 34 0.057279214 ubox
23 37 0.005270828 ubox
24 33 0.064547423 ubox
24 36 0.005398192 ubox
24 47 0.992995796 ubox
25 32 0.070012948 ubox
25 35 0.005430658 ubox
25 45 0.005317167 ubox
25 46 0.997028615 ubox
26 31 0.068198270 ubox
26 44 0.004056709 ubox
26 45 0.996166421 ubox
27 44 0.996124267 ubox
28 43 0.996751247 ubox
30 55 0.007089031 ubox
31 40 0.995838447 ubox
31 41 0.045418231 ubox
31 42 0.004737513 ubox
31 54 0.012648152 ubox
32 39 0.996197833 ubox
32 40 0.041923136 ubox
32 41 0.005091946 ubox
32 53 0.012649974 ubox
32 64 0.005614653 ubox
33 38 0.980249722 ubox
33 63 0.005710574 ubox
34 62 0.005711100 ubox
35 50 0.013495058 ubox
35 64 0.003345629 ubox
36 49 0.013351723 ubox
36 60 0.005713992 ubox
36 63 0.003346261 ubox
37 59 0.006040037 ubox
37 62 0.003322433 ubox
38 47 0.013393696 ubox
38 58 0.006361461 ubox
39 46 0.013572527 ubox
39 57 0.006365100 ubox
39 60 0.003330633 ubox
40 45 0.013524856 ubox
40 56 0.006364684 ubox
40 59 0.003330479 ubox
41 55 0.006357387 ubox
41 57 0.003319584 ubox
42 56 0.003339934 ubox
43 55 0.003722731 ubox
45 53 0.007527220 ubox
45 54 0.004679050 ubox
46 52 0.007533353 ubox
46 53 0.004658512 ubox
48 55 0.010226932 ubox
48 59 0.009701809 ubox
49 54 0.010620525 ubox
49 58 0.009844472 ubox
50 57 0.009838189 ubox
51 56 0.009044213 ubox
51 63 0.006030721 ubox
52 61 0.003349787 ubox
52 62 0.007996390 ubox
53 60 0.003369671 ubox
53 61 0.008002469 ubox
53 75 0.041138517 ubox
54 59 0.003375817 ubox
54 60 0.007999184 ubox
54 74 0.041538227 ubox
55 73 0.041580302 ubox
55 77 0.173810894 ubox
56 72 0.041578705 ubox
56 76 0.174980203 ubox
56 77 0.102796875 ubox
57 71 0.041536396 ubox
57 76 0.104171631 ubox
58 67 0.040646152 ubox
58 74 0.175651190 ubox
58 75 0.103107787 ubox
59 66 0.040796198 ubox
59 73 0.179860146 ubox
60 72 0.179805872 ubox
60 73 0.111357923 ubox
61 71 0.179677994 ubox
61 72 0.113180502 ubox
61 73 0.020868354 ubox
61 77 0.011201548 ubox
62 71 0.115557513 ubox
62 72 0.024658198 ubox
62 76 0.027997024 ubox
66 74 0.291582630 ubox
67 73 0.352280012 ubox
67 77 0.023260569 ubox
68 72 0.346707980 ubox
68 76 0.023393086 ubox
2 77 0.9500000 lbox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 68 0.9500000 lbox
10 67 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
16 57 0.9500000 lbox
17 56 0.9500000 lbox
18 55 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
24 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
31 40 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
showpage
end
%%EOF
