%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KIAA1143)
} def

/sequence { (\
AGUGACGUCACAGCUAAGCGCCUCUGUAUCGUCGCGAAUCCGUCGCGGAACCUGUCUUCUGUCUUUACCCAGAGCUACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.003638458 ubox
1 53 0.012419366 ubox
1 57 0.003721090 ubox
1 76 0.060189105 ubox
2 11 0.032314416 ubox
2 14 0.003832751 ubox
2 35 0.983994728 ubox
2 46 0.023141628 ubox
2 51 0.014346143 ubox
2 52 0.010032647 ubox
2 56 0.003513927 ubox
2 68 0.004456829 ubox
2 75 0.061480375 ubox
2 78 0.035392833 ubox
3 10 0.032351521 ubox
3 13 0.003409403 ubox
3 34 0.984763084 ubox
3 45 0.023171435 ubox
3 50 0.014064085 ubox
3 67 0.004293549 ubox
3 74 0.055845238 ubox
3 77 0.034275726 ubox
4 9 0.032284652 ubox
4 30 0.003778469 ubox
4 33 0.997455280 ubox
4 44 0.023377369 ubox
4 56 0.015960218 ubox
4 76 0.020427528 ubox
5 29 0.003614115 ubox
5 32 0.998485432 ubox
5 43 0.023370021 ubox
5 55 0.015908827 ubox
6 20 0.003458262 ubox
6 31 0.998906312 ubox
6 42 0.023369674 ubox
6 47 0.003387312 ubox
6 54 0.015796878 ubox
7 14 0.004214631 ubox
7 19 0.003605588 ubox
7 29 0.022412316 ubox
7 30 0.997922617 ubox
7 41 0.023184542 ubox
7 46 0.003374143 ubox
7 53 0.010728773 ubox
8 13 0.004024836 ubox
8 18 0.003514523 ubox
8 28 0.097299827 ubox
8 37 0.003220614 ubox
8 45 0.003338817 ubox
8 49 0.003630771 ubox
9 26 0.076679106 ubox
9 36 0.003250588 ubox
9 48 0.003778541 ubox
10 25 0.075275778 ubox
10 27 0.986779682 ubox
10 55 0.003905709 ubox
11 26 0.995235717 ubox
11 42 0.003184280 ubox
11 54 0.004141581 ubox
12 23 0.076294537 ubox
12 25 0.990257970 ubox
12 53 0.004164671 ubox
12 76 0.017859969 ubox
13 19 0.096579394 ubox
13 21 0.446649152 ubox
13 22 0.074272591 ubox
13 24 0.875756550 ubox
13 27 0.020136032 ubox
13 35 0.022606258 ubox
13 52 0.004052582 ubox
13 75 0.018753725 ubox
14 18 0.107557333 ubox
14 20 0.503984637 ubox
14 26 0.020510946 ubox
14 31 0.003285813 ubox
14 34 0.022599473 ubox
14 74 0.018707639 ubox
15 73 0.015014002 ubox
16 25 0.003428991 ubox
17 23 0.349464173 ubox
17 25 0.008376276 ubox
17 57 0.003613476 ubox
17 76 0.011803897 ubox
18 22 0.346525056 ubox
18 24 0.010939445 ubox
18 27 0.015613233 ubox
18 32 0.022376526 ubox
18 35 0.005266556 ubox
18 56 0.003679232 ubox
18 75 0.012289787 ubox
19 26 0.015959727 ubox
19 31 0.022687439 ubox
19 34 0.005271242 ubox
19 36 0.003415174 ubox
19 74 0.012011755 ubox
20 25 0.010864939 ubox
20 27 0.007545489 ubox
20 30 0.021752906 ubox
20 33 0.005136877 ubox
20 35 0.003503529 ubox
20 55 0.003894542 ubox
20 75 0.014688471 ubox
21 26 0.008642151 ubox
21 31 0.004920147 ubox
21 34 0.003497347 ubox
21 54 0.003977754 ubox
21 74 0.010701462 ubox
22 74 0.015009241 ubox
23 49 0.003654777 ubox
23 73 0.018780872 ubox
24 48 0.003803178 ubox
24 72 0.018842417 ubox
25 47 0.003647347 ubox
25 71 0.018787124 ubox
26 46 0.003602519 ubox
26 51 0.011020057 ubox
26 68 0.004425823 ubox
26 70 0.018428974 ubox
27 45 0.003201541 ubox
27 50 0.010987313 ubox
27 67 0.005200335 ubox
28 53 0.003213919 ubox
28 66 0.005160414 ubox
29 37 0.004182828 ubox
29 48 0.011042588 ubox
29 49 0.005937203 ubox
30 36 0.004475173 ubox
30 47 0.013367793 ubox
30 48 0.006021361 ubox
31 35 0.004193135 ubox
31 44 0.004002231 ubox
31 46 0.013539692 ubox
31 51 0.006637788 ubox
32 45 0.012870883 ubox
32 48 0.031762365 ubox
32 49 0.004609371 ubox
32 50 0.005420442 ubox
33 42 0.003667032 ubox
33 45 0.004501208 ubox
33 47 0.063207190 ubox
33 48 0.004175358 ubox
34 41 0.003706304 ubox
34 43 0.031082491 ubox
34 44 0.009487131 ubox
34 46 0.154127173 ubox
34 55 0.032519601 ubox
34 75 0.020509691 ubox
35 42 0.034342038 ubox
35 45 0.154597997 ubox
35 54 0.035100358 ubox
35 74 0.020504303 ubox
36 41 0.045178043 ubox
36 44 0.171122796 ubox
36 46 0.004685075 ubox
36 53 0.046695382 ubox
36 56 0.123100432 ubox
36 59 0.037213291 ubox
36 63 0.011279865 ubox
36 66 0.006325948 ubox
37 43 0.164120562 ubox
37 55 0.120529757 ubox
37 58 0.037334420 ubox
37 62 0.009205796 ubox
37 65 0.006600509 ubox
37 66 0.005665402 ubox
38 55 0.019045683 ubox
38 57 0.036933955 ubox
38 64 0.006280919 ubox
38 65 0.005824506 ubox
39 48 0.006567735 ubox
39 49 0.890269158 ubox
39 54 0.013748904 ubox
39 73 0.018733307 ubox
40 47 0.010063707 ubox
40 48 0.951510735 ubox
40 72 0.019988919 ubox
41 47 0.951710229 ubox
41 54 0.005069125 ubox
42 46 0.890332827 ubox
42 51 0.024003627 ubox
42 53 0.004004054 ubox
42 68 0.036609802 ubox
42 75 0.022220766 ubox
42 78 0.043220736 ubox
43 49 0.020464718 ubox
43 50 0.022284675 ubox
43 67 0.035414971 ubox
43 73 0.020496744 ubox
43 74 0.018014035 ubox
43 77 0.042506448 ubox
44 48 0.021447042 ubox
44 54 0.003935425 ubox
44 61 0.004321707 ubox
44 72 0.022619720 ubox
45 53 0.003361518 ubox
45 55 0.116414797 ubox
45 60 0.004265109 ubox
45 62 0.198333193 ubox
45 75 0.047550830 ubox
46 54 0.121561907 ubox
46 61 0.209504203 ubox
46 74 0.047242209 ubox
47 53 0.121572724 ubox
47 56 0.030477893 ubox
47 57 0.062285097 ubox
47 59 0.007019896 ubox
47 60 0.211588728 ubox
47 64 0.003413968 ubox
47 69 0.004707603 ubox
47 70 0.007402997 ubox
47 76 0.008811992 ubox
47 79 0.032039869 ubox
48 52 0.119084865 ubox
48 55 0.024843691 ubox
48 56 0.070552080 ubox
48 58 0.007177110 ubox
48 59 0.212286977 ubox
48 63 0.004168181 ubox
48 68 0.004713332 ubox
48 69 0.007396854 ubox
48 75 0.009271303 ubox
48 78 0.032243374 ubox
49 55 0.067845477 ubox
49 57 0.008205061 ubox
49 58 0.211719995 ubox
49 62 0.003674330 ubox
50 57 0.184470397 ubox
50 62 0.006035143 ubox
51 61 0.006651705 ubox
52 72 0.049444015 ubox
52 74 0.020004220 ubox
53 71 0.049571839 ubox
53 73 0.013341956 ubox
53 77 0.144956614 ubox
54 68 0.004627522 ubox
54 70 0.049373664 ubox
54 75 0.384895535 ubox
54 76 0.147624235 ubox
54 78 0.338781252 ubox
55 67 0.004775412 ubox
55 73 0.024599009 ubox
55 74 0.298397951 ubox
55 77 0.329971951 ubox
56 72 0.026755977 ubox
56 74 0.313315983 ubox
57 71 0.025069583 ubox
57 72 0.006755491 ubox
57 73 0.224723994 ubox
57 74 0.682969708 ubox
58 71 0.006969168 ubox
58 72 0.032566097 ubox
58 73 0.924719834 ubox
59 72 0.967907478 ubox
59 74 0.009601730 ubox
60 67 0.012941468 ubox
60 71 0.968030632 ubox
60 73 0.008801790 ubox
60 77 0.028169458 ubox
61 66 0.013897305 ubox
61 68 0.044461545 ubox
61 70 0.966733557 ubox
61 75 0.061141208 ubox
61 76 0.029637345 ubox
61 78 0.023337885 ubox
62 67 0.048610994 ubox
62 73 0.064518599 ubox
62 74 0.019873572 ubox
62 77 0.021926922 ubox
63 72 0.081923235 ubox
63 74 0.129157039 ubox
64 71 0.077415448 ubox
64 72 0.007706131 ubox
64 73 0.130942269 ubox
64 74 0.014903668 ubox
65 71 0.008291967 ubox
65 72 0.129018706 ubox
65 73 0.019345750 ubox
65 74 0.007379040 ubox
66 71 0.107546600 ubox
66 72 0.019638991 ubox
66 73 0.008520651 ubox
66 77 0.008138184 ubox
67 76 0.008587152 ubox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
42 46 0.9500000 lbox
57 74 0.9500000 lbox
58 73 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
showpage
end
%%EOF
