%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCAUCCUCAGCGCCUAGAACAGCACCUGGCAAACAAUAGGUGCUCAUUCAGUAUUUGUCCAAUAAGUGAAUGAGUGAUUUACUGAGCAUUUACUCUGCGCCAGUCGUGGUCCUGCGGCAGACGGAGCCGAGCCCCAACCAGGAAGGGAGUCCGAGCACUGGGACUUCAACGCCACCAUCUCCAAGACUCGGUUUGGGGUGAAAG\
) } def
/len { sequence length } bind def

/coor [
[244.00619507 109.84131622]
[237.51405334 112.82772827]
[230.46472168 114.12690735]
[223.29063416 113.64813995]
[216.43466187 111.41013336]
[210.32264709 107.54051971]
[205.33706665 102.26860809]
[201.79302979 95.91187286]
[186.89009094 97.61557770]
[171.98716736 99.31928253]
[157.08422852 101.02297974]
[142.18128967 102.72668457]
[141.09315491 111.55290985]
[138.16085815 120.04081726]
[133.47895813 127.80577850]
[127.22203064 134.48806763]
[119.63840485 139.76945496]
[111.04039001 143.38832092]
[101.79145050 145.15234375]
[92.29086304 144.94848633]
[82.95649719 142.74948120]
[74.20644379 138.61659241]
[66.44025421 132.69847107]
[60.02078247 125.22605896]
[47.03040314 132.72605896]
[34.04001999 140.22605896]
[21.04964066 147.72605896]
[8.05925941 155.22605896]
[-4.93112135 162.72605896]
[-17.92150307 170.22605896]
[-19.40949059 185.67161560]
[-29.71716309 197.27040100]
[-44.88101196 200.56240845]
[-59.07022476 194.28181458]
[-66.82875824 180.84362793]
[-65.17330933 165.41511536]
[-54.74041748 153.92884827]
[-39.54174805 150.80152893]
[-25.42150307 157.23567200]
[-12.43112183 149.73567200]
[0.55925953 142.23567200]
[13.54964066 134.73567200]
[26.54002190 127.23567200]
[39.53040314 119.73567200]
[52.52078247 112.23567200]
[51.04344559 97.30860138]
[36.83492661 92.50048828]
[22.62640953 87.69236755]
[8.41788960 82.88425446]
[-5.79062939 78.07613373]
[-19.99914742 73.26802063]
[-34.20766830 68.45989990]
[-52.17425537 72.48852539]
[-63.23641586 58.86690521]
[-77.51626587 54.27497101]
[-91.79611969 49.68304062]
[-106.07597351 45.09111023]
[-120.35581970 40.49917603]
[-134.63568115 35.90724564]
[-148.91552734 31.31531334]
[-165.84518433 32.22255325]
[-171.40356445 16.20566559]
[-157.55133057 6.43059206]
[-144.32359314 17.03546143]
[-130.04374695 21.62739372]
[-115.76389313 26.21932602]
[-101.48403931 30.81125641]
[-87.20418549 35.40318680]
[-72.92433929 39.99512100]
[-58.64448547 44.58705139]
[-47.74149704 39.34309769]
[-35.80577087 43.05423355]
[-29.39955139 54.25138474]
[-15.19103146 59.05950165]
[-0.98251259 63.86761856]
[13.22600651 68.67573547]
[27.43452644 73.48384857]
[41.64304352 78.29196930]
[55.85156250 83.10008240]
[69.89295197 64.86236572]
[90.48806763 55.73930359]
[112.45010376 57.51609802]
[130.48719788 69.29460907]
[140.47760010 87.82375336]
[155.38052368 86.12004852]
[170.28346252 84.41634369]
[185.18638611 82.71264648]
[200.08932495 81.00894165]
[212.87472534 61.18440247]
[235.88032532 57.32200623]
[254.02626038 71.56053925]
[268.61312866 68.06439209]
[283.20001221 64.56824493]
[297.78689575 61.07210159]
[312.37374878 57.57595444]
[326.96063232 54.07981110]
[341.54751587 50.58366394]
[356.13439941 47.08751678]
[370.72125244 43.59136963]
[382.33798218 32.85067368]
[396.51809692 37.40845108]
[411.10498047 33.91230392]
[425.69186401 30.41615677]
[440.25177002 26.80942154]
[454.78390503 23.09230614]
[469.31607056 19.37518883]
[483.84820557 15.65807152]
[495.30056763 4.74231386]
[509.54821777 9.08436489]
[524.08038330 5.36724758]
[538.61248779 1.65013099]
[551.54559326 -5.94822836]
[561.86676025 -16.83275986]
[572.18798828 -27.71729279]
[582.50915527 -38.60182571]
[592.83038330 -49.48635864]
[602.38470459 -61.04985809]
[611.12762451 -73.23841095]
[619.87060547 -85.42697144]
[628.61352539 -97.61552429]
[624.56341553 -112.71950531]
[631.21630859 -126.87129974]
[645.43090820 -133.38885498]
[660.49554443 -129.19477844]
[669.29718018 -116.26938629]
[667.67987061 -100.71566010]
[656.40734863 -89.87758636]
[640.80212402 -88.87257385]
[632.05914307 -76.68402100]
[623.31622314 -64.49546814]
[614.57324219 -52.30691147]
[629.00347900 -56.40193176]
[643.38800049 -52.14931107]
[653.27185059 -40.86613083]
[655.59375000 -26.04693794]
[649.63470459 -12.28141212]
[637.24023438 -3.83290601]
[622.24908447 -3.31802607]
[609.30419922 -10.89623642]
[602.41473389 -24.22047424]
[603.71490479 -39.16516876]
[593.39367676 -28.28063583]
[583.07250977 -17.39610291]
[572.75134277 -6.51157093]
[562.43011475 4.37296152]
[565.04870605 11.40098763]
[570.28582764 25.45704079]
[572.90435791 32.48506927]
[587.83142090 33.96240616]
[602.75848389 35.43974304]
[617.68554688 36.91707993]
[632.61267090 38.39441299]
[647.53973389 39.87174988]
[662.46679688 41.34908676]
[672.67852783 29.66577148]
[687.81475830 26.24891663]
[702.05523682 32.41237259]
[709.92425537 45.78616714]
[708.39599609 61.22779846]
[698.05810547 72.79965210]
[682.88568115 76.05210114]
[668.71289062 69.73452759]
[660.98944092 56.27616119]
[646.06237793 54.79882431]
[631.13531494 53.32148743]
[616.20825195 51.84415054]
[601.28118896 50.36681366]
[586.35412598 48.88947678]
[571.42700195 47.41213989]
[583.81848145 55.86504364]
[583.95251465 70.86444855]
[578.51013184 84.84230804]
[568.26873779 95.80197906]
[554.69134521 102.17794800]
[539.71722412 103.05945587]
[525.48547363 98.32057953]
[514.02893066 88.63824463]
[506.98413086 75.39549255]
[505.35733032 60.48396683]
[509.38092041 46.03368378]
[518.48016357 34.10876465]
[531.35852051 26.41142464]
[542.32965088 16.18227005]
[527.79748535 19.89938545]
[513.26531982 23.61650276]
[502.85241699 34.26638794]
[487.56530762 30.19021034]
[473.03317261 33.90732574]
[458.50103760 37.62444305]
[443.96890259 41.34156036]
[438.26593018 46.04611206]
[429.18798828 45.00303268]
[414.60113525 48.49917984]
[400.01425171 51.99532700]
[389.44088745 62.48595428]
[374.21740723 58.17824936]
[359.63052368 61.67439270]
[345.04367065 65.17053986]
[330.45678711 68.66668701]
[315.86990356 72.16283417]
[301.28302002 75.65898132]
[286.69616699 79.15512848]
[272.10928345 82.65126801]
[257.52239990 86.14741516]
[256.50888062 93.13245392]
[253.79757690 99.67289734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 88]
[9 87]
[10 86]
[11 85]
[12 84]
[24 45]
[25 44]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[46 79]
[47 78]
[48 77]
[49 76]
[50 75]
[51 74]
[52 73]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[60 64]
[91 204]
[92 203]
[93 202]
[94 201]
[95 200]
[96 199]
[97 198]
[98 197]
[99 196]
[101 194]
[102 193]
[103 192]
[104 190]
[105 189]
[106 188]
[107 187]
[109 185]
[110 184]
[111 183]
[112 145]
[113 144]
[114 143]
[115 142]
[116 141]
[117 131]
[118 130]
[119 129]
[120 128]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
