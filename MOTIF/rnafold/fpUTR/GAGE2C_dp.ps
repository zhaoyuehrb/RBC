%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAGE2C)
} def

/sequence { (\
ACGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 42 0.012700928 ubox
1 76 0.018177476 ubox
1 78 0.275787811 ubox
2 41 0.014630467 ubox
2 64 0.003464399 ubox
2 75 0.019195723 ubox
2 77 0.292011605 ubox
2 79 0.786820049 ubox
3 39 0.004161231 ubox
3 40 0.014493970 ubox
3 63 0.003194031 ubox
3 74 0.014103353 ubox
3 76 0.291133511 ubox
3 78 0.797462845 ubox
4 38 0.004503755 ubox
4 75 0.240272519 ubox
4 77 0.798263873 ubox
5 38 0.013032500 ubox
5 64 0.029284915 ubox
5 75 0.813748647 ubox
5 77 0.013097681 ubox
5 79 0.011557894 ubox
6 13 0.003476515 ubox
6 37 0.012590639 ubox
6 51 0.018904901 ubox
6 52 0.029046948 ubox
6 53 0.426045624 ubox
6 54 0.034929206 ubox
6 55 0.021058613 ubox
6 58 0.024244826 ubox
6 60 0.004621444 ubox
6 63 0.029245572 ubox
6 74 0.827093201 ubox
6 76 0.014221495 ubox
6 78 0.009043799 ubox
7 12 0.003480101 ubox
7 36 0.010833958 ubox
7 37 0.008701715 ubox
7 50 0.020192462 ubox
7 51 0.031294058 ubox
7 52 0.522379446 ubox
7 53 0.033908653 ubox
7 54 0.018680560 ubox
7 55 0.007028561 ubox
7 56 0.015877372 ubox
7 57 0.027718827 ubox
7 58 0.005511386 ubox
7 59 0.005010511 ubox
7 62 0.028766635 ubox
7 70 0.012540138 ubox
7 73 0.820185697 ubox
7 74 0.028742974 ubox
8 35 0.008724260 ubox
8 36 0.011672643 ubox
8 49 0.020448707 ubox
8 50 0.033328400 ubox
8 51 0.917729351 ubox
8 52 0.042143430 ubox
8 53 0.015742080 ubox
8 54 0.007587926 ubox
8 55 0.009829175 ubox
8 56 0.029068546 ubox
8 57 0.008832807 ubox
8 60 0.012148054 ubox
8 69 0.007941840 ubox
8 70 0.028504174 ubox
8 72 0.282012409 ubox
8 73 0.030912885 ubox
8 74 0.009901433 ubox
9 34 0.005789665 ubox
9 35 0.013332134 ubox
9 48 0.020542134 ubox
9 49 0.025933405 ubox
9 50 0.995813577 ubox
9 51 0.006147696 ubox
9 52 0.014029028 ubox
9 55 0.010868616 ubox
9 56 0.009168758 ubox
9 59 0.013425599 ubox
9 69 0.007971795 ubox
9 70 0.066095745 ubox
9 73 0.009075538 ubox
10 33 0.004988739 ubox
10 34 0.014790608 ubox
10 49 0.996505174 ubox
10 51 0.014390499 ubox
10 54 0.009045197 ubox
10 55 0.008613662 ubox
10 58 0.013406021 ubox
10 68 0.006957028 ubox
10 69 0.062270896 ubox
10 72 0.007719743 ubox
11 20 0.004875291 ubox
11 23 0.004641719 ubox
11 33 0.015100563 ubox
11 48 0.996758632 ubox
11 50 0.014534038 ubox
11 53 0.007487611 ubox
11 54 0.007423959 ubox
11 57 0.013333252 ubox
11 68 0.046032348 ubox
12 19 0.004884301 ubox
12 22 0.004948657 ubox
12 32 0.015709441 ubox
12 46 0.999066901 ubox
12 66 0.016183257 ubox
13 18 0.004757368 ubox
13 21 0.004962723 ubox
13 31 0.015482735 ubox
13 45 0.998435585 ubox
13 65 0.015340219 ubox
14 20 0.004969630 ubox
14 30 0.011390765 ubox
14 44 0.997274589 ubox
14 62 0.012488076 ubox
15 19 0.004649071 ubox
15 29 0.009317891 ubox
15 41 0.003988046 ubox
15 45 0.005162844 ubox
15 61 0.012341392 ubox
16 28 0.005463843 ubox
16 43 0.937010510 ubox
16 44 0.005873565 ubox
16 53 0.009832783 ubox
16 59 0.015092558 ubox
17 26 0.003362665 ubox
17 42 0.912972575 ubox
17 52 0.010085621 ubox
17 58 0.015212475 ubox
18 25 0.003363723 ubox
18 26 0.015168982 ubox
18 40 0.998211244 ubox
18 51 0.010187816 ubox
18 57 0.015047903 ubox
19 25 0.015280555 ubox
19 39 0.999673492 ubox
19 50 0.010244371 ubox
19 56 0.014995183 ubox
20 24 0.015175396 ubox
20 38 0.999669289 ubox
21 37 0.999224183 ubox
21 49 0.015643110 ubox
21 54 0.006241288 ubox
22 36 0.997954273 ubox
22 48 0.016281401 ubox
22 53 0.005906519 ubox
23 31 0.026529451 ubox
23 32 0.013818025 ubox
23 47 0.016245524 ubox
24 30 0.030241300 ubox
24 33 0.990613876 ubox
25 29 0.030265197 ubox
25 32 0.994888534 ubox
25 46 0.017458870 ubox
26 31 0.930748630 ubox
26 45 0.017483202 ubox
27 33 0.007400993 ubox
27 44 0.017400864 ubox
27 48 0.008078996 ubox
28 32 0.003359790 ubox
28 47 0.008079159 ubox
29 42 0.010728710 ubox
30 41 0.016555895 ubox
30 45 0.008033800 ubox
31 40 0.017760066 ubox
31 44 0.008029304 ubox
32 39 0.017763787 ubox
32 43 0.008013795 ubox
33 38 0.017479969 ubox
39 46 0.003675487 ubox
40 45 0.003697099 ubox
44 79 0.008268924 ubox
45 56 0.005732272 ubox
45 57 0.012226119 ubox
45 70 0.003601681 ubox
45 78 0.008316716 ubox
46 55 0.005777544 ubox
46 56 0.012544002 ubox
46 69 0.003625038 ubox
47 54 0.005809718 ubox
47 55 0.012062727 ubox
47 68 0.003955761 ubox
47 76 0.008385747 ubox
48 66 0.015911812 ubox
48 75 0.008385424 ubox
49 65 0.016018307 ubox
49 67 0.011822841 ubox
50 64 0.016029196 ubox
50 66 0.012795652 ubox
51 65 0.012916262 ubox
51 66 0.003789231 ubox
51 67 0.010771578 ubox
52 64 0.012815377 ubox
52 65 0.006278227 ubox
52 66 0.013494822 ubox
52 67 0.025267861 ubox
52 82 0.006314078 ubox
53 64 0.006494267 ubox
53 65 0.014460107 ubox
53 66 0.024458008 ubox
53 67 0.071969120 ubox
53 81 0.008146110 ubox
53 82 0.076257047 ubox
54 64 0.014435869 ubox
54 65 0.024610562 ubox
54 66 0.076883643 ubox
54 67 0.027055617 ubox
54 80 0.007930338 ubox
54 81 0.102206932 ubox
54 82 0.012561383 ubox
55 64 0.024081625 ubox
55 65 0.079136685 ubox
55 66 0.010101677 ubox
55 67 0.163209103 ubox
55 79 0.006415634 ubox
55 80 0.107266730 ubox
55 81 0.012400881 ubox
56 64 0.079357851 ubox
56 66 0.124167036 ubox
56 79 0.107638375 ubox
57 66 0.956101912 ubox
58 65 0.966930742 ubox
58 67 0.102717122 ubox
58 80 0.109093094 ubox
59 64 0.966890396 ubox
59 66 0.109891922 ubox
59 79 0.114345655 ubox
60 65 0.104678830 ubox
60 75 0.003729349 ubox
60 77 0.143226267 ubox
60 79 0.071221512 ubox
61 74 0.003640559 ubox
61 76 0.148963079 ubox
61 78 0.098487681 ubox
62 75 0.148435304 ubox
62 77 0.099449787 ubox
63 71 0.054307649 ubox
63 75 0.007150157 ubox
64 70 0.059773028 ubox
64 73 0.145607025 ubox
64 74 0.004157324 ubox
64 76 0.004336449 ubox
65 69 0.052018100 ubox
65 72 0.144522912 ubox
65 74 0.106806863 ubox
66 73 0.108682368 ubox
67 72 0.098825781 ubox
67 76 0.023863580 ubox
67 78 0.014872089 ubox
67 83 0.057005850 ubox
68 75 0.024076679 ubox
68 77 0.015096636 ubox
68 80 0.010615548 ubox
68 81 0.405294211 ubox
68 82 0.051982489 ubox
69 79 0.005842559 ubox
69 80 0.466778392 ubox
69 81 0.038793319 ubox
70 77 0.016809247 ubox
70 79 0.474211051 ubox
71 76 0.014337212 ubox
71 78 0.465115476 ubox
72 77 0.430505511 ubox
72 80 0.053712719 ubox
73 79 0.057327719 ubox
75 83 0.008945998 ubox
76 82 0.009902420 ubox
2 79 0.9500000 lbox
3 78 0.9500000 lbox
4 77 0.9500000 lbox
5 75 0.9500000 lbox
6 74 0.9500000 lbox
7 73 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
59 64 0.9500000 lbox
showpage
end
%%EOF
