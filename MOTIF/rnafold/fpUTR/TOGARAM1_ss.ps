%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGUGGUGCCCUUGGUUACGCCCGGUGGCAGCUGUGGGGUCUAGGGCUCAGACGGGGGCCAUUUUGCCAGAGGCUGCCUCCCGGAGUUGGGGGCGGCCUGGCGGCAGGCUGAAGCUGUUCUUUUGCCUCUUCUGCAGCUUGGGGCUUGGAGAGGAUCUGGAAGUCUGGGCUCCAUCGAGCCCUUUGGAGACGGCAAUGGUUUCUUCCAACCACCACCACCUGACAACCCUGC\
) } def
/len { sequence length } bind def

/coor [
[80.99068451 659.86108398]
[91.05159760 648.52294922]
[104.38512421 641.31231689]
[102.16854095 626.47698975]
[99.95195007 611.64166260]
[97.73536682 596.80633545]
[95.51878357 581.97100830]
[93.30220032 567.13574219]
[78.74179840 563.53088379]
[69.85970306 575.61840820]
[60.97760391 587.70593262]
[63.16444778 603.12847900]
[53.98454666 615.26043701]
[39.26800919 617.25024414]
[30.38591194 629.33776855]
[21.50381279 641.42529297]
[12.62171364 653.51281738]
[11.52095985 660.00689697]
[7.86237097 664.33038330]
[3.33356309 665.80218506]
[-5.87122536 677.64581299]
[-15.07601357 689.48944092]
[-16.77973747 705.79986572]
[-31.86499977 712.23156738]
[-44.81337738 702.16821289]
[-42.30468750 685.96203613]
[-26.91965675 680.28466797]
[-17.71486855 668.44104004]
[-8.51007938 656.59735107]
[0.53418612 644.63067627]
[9.41628551 632.54315186]
[18.29838371 620.45562744]
[27.18048286 608.36810303]
[24.68297195 593.72918701]
[33.51849365 581.34417725]
[48.89007568 578.82385254]
[57.77217484 566.73632812]
[66.65427399 554.64880371]
[122.94323730 526.36926270]
[122.33665466 511.38153076]
[121.73007202 496.39379883]
[121.12349701 481.40606689]
[120.11302185 466.44012451]
[118.69937897 451.50689697]
[117.28574371 436.57366943]
[115.87210083 421.64041138]
[114.45846558 406.70718384]
[113.04483032 391.77395630]
[111.63118744 376.84069824]
[107.87748718 370.48770142]
[110.30055237 361.69680786]
[109.08838654 346.74584961]
[100.34788513 334.68548584]
[106.94467163 320.30517578]
[105.73250580 305.35424805]
[104.52033997 290.40328979]
[103.30817413 275.45236206]
[94.56767273 263.39196777]
[101.16445923 249.01167297]
[99.95228577 234.06072998]
[98.74011993 219.10978699]
[84.78578186 213.84272766]
[74.45963287 202.99467468]
[69.84860992 188.68037415]
[71.91825867 173.72253418]
[80.31113434 161.09532166]
[93.40717316 153.33291626]
[92.19500732 138.38197327]
[90.98284149 123.43102264]
[89.77066803 108.48008728]
[83.04203033 95.07391357]
[71.77833557 85.16790009]
[60.51464081 75.26187897]
[49.25094604 65.35586548]
[37.98725128 55.44984818]
[26.72355461 45.54383087]
[15.45985985 35.63781357]
[4.19616461 25.73179626]
[-4.30051422 22.42159271]
[-7.15145826 15.61548424]
[-18.28056908 5.55850172]
[-29.40967941 -4.49848080]
[-40.53878784 -14.55546379]
[-56.67813873 -17.46294022]
[-61.97450638 -32.98326492]
[-50.97944641 -45.15045929]
[-35.00372696 -41.44795609]
[-30.48180580 -25.68457413]
[-19.35269547 -15.62759113]
[-8.22358608 -5.57060862]
[2.90552449 4.48637438]
[14.10218143 14.46810150]
[25.36587715 24.37411880]
[36.62957382 34.28013611]
[47.89326859 44.18615341]
[59.15696335 54.09216690]
[70.42065430 63.99818420]
[81.68434906 73.90420532]
[92.94805145 83.81021881]
[99.71780396 80.58214569]
[100.89633942 65.62851715]
[113.25730896 74.12599945]
[120.02705383 70.89792633]
[119.42047882 55.91019821]
[118.81389618 40.92247009]
[118.20732117 25.93473816]
[117.60073853 10.94700718]
[116.99415588 -4.04072285]
[108.06434631 -13.33385181]
[107.85945129 -25.81968498]
[115.94441223 -34.80451202]
[115.53996277 -49.79905701]
[115.13551331 -64.79360199]
[106.09953308 -78.47874451]
[113.67423248 -93.02370453]
[130.06741333 -93.46588135]
[138.41517639 -79.35039520]
[130.13006592 -65.19805145]
[130.53451538 -50.20350647]
[130.93894958 -35.20896149]
[140.91035461 -20.76018524]
[131.98188782 -4.64730263]
[132.58847046 10.34042740]
[133.19505310 25.32815742]
[133.80162048 40.31588745]
[134.40820312 55.30361938]
[135.01478577 70.29135132]
[149.26808167 74.96505737]
[158.63171387 63.24659729]
[167.99536133 51.52813721]
[177.35899353 39.80967712]
[186.72262573 28.09121895]
[196.08627319 16.37275887]
[198.65631104 0.76168954]
[212.64582825 -4.35129356]
[222.00946045 -16.06975365]
[231.29388428 -27.85107231]
[240.49867249 -39.69471359]
[249.70346069 -51.53835678]
[254.64913940 -67.75491333]
[271.60104370 -67.49169922]
[276.04086304 -51.12942123]
[261.54711914 -42.33356857]
[252.34231567 -30.48992729]
[243.13752747 -18.64628410]
[241.51716614 -11.44729996]
[233.72792053 -6.70611620]
[224.36428833 5.01234341]
[222.46400452 19.78523064]
[207.80473328 25.73639679]
[198.44108582 37.45485687]
[189.07745361 49.17331696]
[179.71382141 60.89177322]
[170.35017395 72.61023712]
[160.98654175 84.32869720]
[133.37313843 113.00461578]
[104.72161102 107.26791382]
[105.93377686 122.21885681]
[107.14595032 137.16979980]
[108.35811615 152.12074280]
[122.53358459 157.67208862]
[132.85101318 168.78233337]
[137.30323792 183.21139526]
[135.05838013 198.08155823]
[126.61465454 210.45140076]
[113.69106293 217.89761353]
[114.90322876 232.84855652]
[116.11540222 247.79949951]
[124.94260406 260.92929077]
[118.25910950 274.24017334]
[119.47128296 289.19113159]
[120.68344879 304.14205933]
[121.89561462 319.09301758]
[130.72282410 332.22277832]
[124.03932953 345.53369141]
[125.25149536 360.48461914]
[126.56443024 375.42706299]
[127.97806549 390.36029053]
[129.39170837 405.29354858]
[130.80534363 420.22677612]
[132.21897888 435.16003418]
[133.63261414 450.09326172]
[135.04626465 465.02648926]
[137.66323853 468.44787598]
[138.93681335 472.15078735]
[138.94242859 475.68115234]
[137.89440918 478.65539551]
[136.11122131 480.79946899]
[136.71780396 495.78720093]
[137.32438660 510.77493286]
[137.93096924 525.76269531]
[144.38711548 539.30218506]
[155.65080261 549.20819092]
[166.42771912 547.88665771]
[175.96026611 552.60925293]
[181.21661377 561.60504150]
[180.67379761 571.79010010]
[191.66630554 581.99621582]
[202.65879822 592.20233154]
[218.44094849 591.36608887]
[230.13591003 601.99639893]
[230.80525208 617.78649902]
[220.05189514 629.36840820]
[204.25558472 629.87078857]
[192.78802490 618.99554443]
[192.45268250 603.19482422]
[181.46017456 592.98870850]
[170.46768188 582.78259277]
[151.34677124 579.84667969]
[145.74478149 560.47186279]
[134.48109436 550.56585693]
[127.89520264 554.15417480]
[114.72341156 561.33081055]
[108.13751984 564.91912842]
[110.35410309 579.75445557]
[112.57068634 594.58978271]
[114.78727722 609.42510986]
[117.00386047 624.26043701]
[119.22044373 639.09576416]
[134.07931519 642.09405518]
[147.01498413 649.99621582]
[156.46540833 661.84802246]
[161.28939819 676.21832275]
[160.90444946 691.37176514]
[155.35702515 705.47857666]
[145.31701660 716.83526611]
[131.99679565 724.07043457]
[117.00485992 726.31042480]
[102.15154266 723.28472900]
[89.23046112 715.35870361]
[79.80189514 703.48950195]
[75.00439453 689.11035156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 219]
[4 218]
[5 217]
[6 216]
[7 215]
[8 214]
[9 38]
[10 37]
[11 36]
[14 33]
[15 32]
[16 31]
[17 30]
[20 29]
[21 28]
[22 27]
[39 191]
[40 190]
[41 189]
[42 188]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[51 176]
[52 175]
[54 173]
[55 172]
[56 171]
[57 170]
[59 168]
[60 167]
[61 166]
[67 160]
[68 159]
[69 158]
[70 157]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[78 92]
[80 91]
[81 90]
[82 89]
[83 88]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[111 120]
[112 119]
[113 118]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[135 148]
[136 147]
[137 145]
[138 144]
[139 143]
[192 211]
[193 210]
[197 208]
[198 207]
[199 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
