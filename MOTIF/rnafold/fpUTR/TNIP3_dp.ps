%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNIP3)
} def

/sequence { (\
AAGAGUCUUAAAGACAGGUCUCCGUAUUAGACCUUGUAAUACGCUUACCUAGAUCUGAGAAGGACUUUCAGGAUAGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.012429007 ubox
1 35 0.010730980 ubox
1 46 0.073655270 ubox
1 67 0.009836029 ubox
1 68 0.031768302 ubox
2 8 0.013760906 ubox
2 9 0.003486880 ubox
2 21 0.028000355 ubox
2 34 0.011839040 ubox
2 45 0.081661515 ubox
2 46 0.008179418 ubox
2 50 0.009414203 ubox
2 56 0.005979971 ubox
2 66 0.011586649 ubox
2 67 0.031578192 ubox
2 68 0.719219262 ubox
3 7 0.013621641 ubox
3 20 0.029704955 ubox
3 22 0.130523814 ubox
3 33 0.011932766 ubox
3 44 0.082330640 ubox
3 45 0.006031828 ubox
3 46 0.155088537 ubox
3 49 0.009652276 ubox
3 55 0.006653530 ubox
3 65 0.011265285 ubox
3 66 0.021486505 ubox
3 67 0.865717561 ubox
3 68 0.028969232 ubox
3 69 0.052311006 ubox
4 19 0.029449387 ubox
4 21 0.130881514 ubox
4 45 0.160843387 ubox
4 46 0.004691605 ubox
4 54 0.006348618 ubox
4 66 0.890276991 ubox
4 67 0.022987909 ubox
4 68 0.040499765 ubox
5 15 0.374142899 ubox
5 20 0.130700834 ubox
5 32 0.012325511 ubox
5 42 0.077355454 ubox
5 44 0.161556046 ubox
5 45 0.003324701 ubox
5 48 0.009718601 ubox
5 54 0.036071645 ubox
5 65 0.894785782 ubox
5 66 0.004283478 ubox
5 67 0.011059588 ubox
5 74 0.028050405 ubox
5 79 0.006463824 ubox
6 14 0.374700625 ubox
6 18 0.027961165 ubox
6 31 0.012364375 ubox
6 41 0.076013400 ubox
6 43 0.158521420 ubox
6 47 0.009414269 ubox
6 53 0.038941712 ubox
6 60 0.019744964 ubox
6 63 0.071391936 ubox
6 64 0.891905483 ubox
6 73 0.028788495 ubox
6 77 0.013965473 ubox
6 78 0.005364394 ubox
7 13 0.374958453 ubox
7 17 0.028926814 ubox
7 18 0.127511608 ubox
7 30 0.012351329 ubox
7 52 0.039582359 ubox
7 59 0.022383662 ubox
7 62 0.135065822 ubox
7 63 0.884561006 ubox
7 71 0.003471584 ubox
7 72 0.028894754 ubox
7 76 0.015252869 ubox
8 12 0.337798630 ubox
8 16 0.027839182 ubox
8 17 0.127144354 ubox
8 29 0.011161652 ubox
8 39 0.070543136 ubox
8 51 0.039171879 ubox
8 58 0.025057643 ubox
8 59 0.015607357 ubox
8 60 0.090505758 ubox
8 61 0.174795417 ubox
8 62 0.864692708 ubox
8 70 0.003505521 ubox
8 71 0.026260411 ubox
8 75 0.014111472 ubox
9 13 0.003738781 ubox
9 16 0.112819004 ubox
9 29 0.004854128 ubox
9 38 0.073870163 ubox
9 41 0.053261985 ubox
9 51 0.003335593 ubox
9 57 0.028187379 ubox
9 58 0.035146137 ubox
9 59 0.149662671 ubox
9 60 0.188556931 ubox
9 61 0.765568050 ubox
9 62 0.019268379 ubox
9 70 0.024767187 ubox
9 75 0.003871205 ubox
10 28 0.006784983 ubox
10 35 0.003210796 ubox
10 37 0.063682424 ubox
10 40 0.051731033 ubox
10 56 0.022405340 ubox
10 68 0.018255594 ubox
10 74 0.004122997 ubox
11 27 0.006716753 ubox
11 28 0.004033718 ubox
11 35 0.006861302 ubox
11 46 0.011828318 ubox
11 67 0.018578409 ubox
11 68 0.004982354 ubox
12 21 0.005545436 ubox
12 27 0.004157685 ubox
12 34 0.003831580 ubox
12 35 0.018038628 ubox
12 45 0.012664289 ubox
12 56 0.777347699 ubox
12 66 0.018578763 ubox
12 67 0.004533984 ubox
13 20 0.005869158 ubox
13 34 0.007910479 ubox
13 35 0.017615293 ubox
13 44 0.012811209 ubox
13 55 0.782520253 ubox
13 65 0.018515164 ubox
13 69 0.015636456 ubox
14 19 0.005205831 ubox
14 25 0.010882884 ubox
14 34 0.010604982 ubox
14 37 0.169031342 ubox
14 54 0.776620576 ubox
14 68 0.015493573 ubox
15 24 0.011017447 ubox
15 36 0.173005547 ubox
15 57 0.430571064 ubox
16 34 0.208405996 ubox
16 35 0.123026948 ubox
16 45 0.005154655 ubox
16 46 0.016824886 ubox
16 50 0.837386293 ubox
16 56 0.432104181 ubox
16 66 0.005264412 ubox
16 67 0.018500804 ubox
17 23 0.012307333 ubox
17 33 0.249569575 ubox
17 34 0.019418119 ubox
17 44 0.005490744 ubox
17 45 0.019294566 ubox
17 49 0.853183289 ubox
17 50 0.007164696 ubox
17 55 0.432283949 ubox
17 65 0.005331955 ubox
17 66 0.021363637 ubox
18 22 0.012179339 ubox
18 32 0.250005439 ubox
18 33 0.013855373 ubox
18 44 0.019586178 ubox
18 48 0.853814324 ubox
18 49 0.007077795 ubox
18 54 0.432029032 ubox
18 65 0.021716319 ubox
18 74 0.004283364 ubox
19 31 0.250341123 ubox
19 43 0.011485773 ubox
19 47 0.831662092 ubox
19 53 0.432233515 ubox
19 60 0.006002686 ubox
19 64 0.020544434 ubox
19 73 0.004378682 ubox
20 30 0.250329545 ubox
20 52 0.432201315 ubox
20 59 0.006043549 ubox
20 63 0.019687280 ubox
20 72 0.004384700 ubox
21 29 0.240029116 ubox
21 51 0.417033209 ubox
21 53 0.003814473 ubox
21 58 0.006041501 ubox
21 62 0.017228461 ubox
21 64 0.015971573 ubox
22 52 0.004471394 ubox
22 57 0.006027067 ubox
22 62 0.006906289 ubox
22 63 0.017776608 ubox
23 43 0.959154009 ubox
23 62 0.018278803 ubox
24 42 0.966031845 ubox
24 44 0.003288118 ubox
24 48 0.054656137 ubox
25 38 0.003315214 ubox
25 41 0.965866628 ubox
25 47 0.054366451 ubox
26 37 0.004757361 ubox
26 40 0.965622468 ubox
26 46 0.052723003 ubox
27 36 0.005652853 ubox
27 39 0.965003336 ubox
27 58 0.025935938 ubox
28 36 0.019838804 ubox
28 38 0.963389115 ubox
28 41 0.004513660 ubox
28 57 0.026139665 ubox
29 35 0.026702255 ubox
29 37 0.953560839 ubox
29 40 0.005026736 ubox
29 45 0.021821517 ubox
29 50 0.003469569 ubox
29 56 0.026214149 ubox
30 34 0.027589859 ubox
30 44 0.022886585 ubox
30 49 0.003478277 ubox
30 55 0.026229821 ubox
31 37 0.070371087 ubox
31 54 0.025803698 ubox
32 36 0.084603864 ubox
33 52 0.025935042 ubox
34 51 0.025789054 ubox
35 41 0.004733375 ubox
35 43 0.028245187 ubox
35 47 0.003966134 ubox
36 40 0.004278727 ubox
36 42 0.036987352 ubox
36 44 0.029756726 ubox
36 46 0.004186058 ubox
36 48 0.109057634 ubox
37 41 0.033345759 ubox
37 43 0.029250326 ubox
37 47 0.109479480 ubox
38 46 0.109133658 ubox
39 45 0.099820675 ubox
40 47 0.005441172 ubox
41 46 0.005401622 ubox
44 52 0.016150051 ubox
44 59 0.023079133 ubox
44 76 0.016257161 ubox
45 51 0.017036545 ubox
45 58 0.023175955 ubox
45 75 0.015886339 ubox
45 76 0.008982387 ubox
45 77 0.004861504 ubox
45 78 0.011094469 ubox
46 51 0.004359033 ubox
46 57 0.023144466 ubox
46 75 0.010963012 ubox
46 77 0.011279203 ubox
47 56 0.022645252 ubox
47 74 0.011433723 ubox
48 63 0.003318279 ubox
48 72 0.024707645 ubox
49 59 0.004401732 ubox
49 62 0.003371057 ubox
49 71 0.024747100 ubox
49 76 0.280036254 ubox
50 58 0.004302201 ubox
50 61 0.003292680 ubox
50 70 0.024399657 ubox
50 75 0.283354331 ubox
51 66 0.014667309 ubox
51 67 0.003831188 ubox
51 68 0.013822164 ubox
51 74 0.283729485 ubox
52 65 0.015304768 ubox
52 66 0.004201320 ubox
52 67 0.014232073 ubox
52 68 0.006751355 ubox
52 69 0.014578895 ubox
53 66 0.014053993 ubox
53 67 0.006648013 ubox
53 68 0.014454957 ubox
53 74 0.151067012 ubox
54 60 0.008167516 ubox
54 63 0.013427978 ubox
54 64 0.024075892 ubox
54 72 0.330869493 ubox
54 73 0.147252460 ubox
54 77 0.008060370 ubox
55 59 0.008650102 ubox
55 62 0.017605570 ubox
55 63 0.024466373 ubox
55 71 0.426740266 ubox
55 72 0.117701967 ubox
55 76 0.008292725 ubox
56 61 0.017665762 ubox
56 62 0.024108644 ubox
56 70 0.436639587 ubox
56 71 0.074680810 ubox
56 75 0.007677542 ubox
57 67 0.011309113 ubox
57 68 0.004071494 ubox
57 69 0.439969840 ubox
57 74 0.006482070 ubox
58 66 0.014065945 ubox
58 67 0.010825376 ubox
58 68 0.439072949 ubox
59 65 0.017671522 ubox
59 66 0.012706344 ubox
59 67 0.435104248 ubox
59 68 0.029370106 ubox
59 69 0.047417337 ubox
60 66 0.419699836 ubox
60 67 0.036805444 ubox
60 68 0.047409180 ubox
61 66 0.038587474 ubox
61 67 0.045997533 ubox
62 66 0.031584873 ubox
62 67 0.004104318 ubox
62 69 0.004655742 ubox
63 68 0.003714915 ubox
63 69 0.004770607 ubox
64 68 0.004162395 ubox
65 71 0.003396418 ubox
65 72 0.003258103 ubox
65 76 0.005785008 ubox
66 71 0.003191923 ubox
66 75 0.006102397 ubox
66 77 0.005944719 ubox
66 78 0.004543069 ubox
67 72 0.004002568 ubox
67 73 0.005562704 ubox
67 75 0.004475373 ubox
67 76 0.008407822 ubox
67 77 0.008411831 ubox
67 78 0.117821797 ubox
68 72 0.007703813 ubox
68 75 0.011226135 ubox
68 76 0.009650097 ubox
68 77 0.238806326 ubox
69 76 0.267833421 ubox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 65 0.9500000 lbox
6 64 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
12 56 0.9500000 lbox
13 55 0.9500000 lbox
14 54 0.9500000 lbox
16 50 0.9500000 lbox
17 49 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
showpage
end
%%EOF
