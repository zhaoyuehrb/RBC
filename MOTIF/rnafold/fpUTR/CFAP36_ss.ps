%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCACUUCCGGGCCGCGGUCUAGGGCGGCUACGUGUGUUGCCAUAGCGACCAUUUUGCAUUAACUGGUUGGUAGCUUCUAUCCUGGGGGCUGAGCGACUGCGGGCCAGCUCUUCCCCUACUCCCUCUCGGCUCCUUGUGGCCCAAAGGCCUAACCGGGGUCCGGCGGUCUGGCCUAGGGAUCUUCCCCGUUGCCCCUUUGGGGCGGG\
) } def
/len { sequence length } bind def

/coor [
[132.77694702 303.00671387]
[126.14460754 292.71734619]
[122.33093262 281.30728149]
[121.47446442 269.51892090]
[123.52478027 258.09307861]
[128.25199890 247.72242737]
[135.26724243 239.00938416]
[144.05270386 232.43142700]
[137.89651489 218.75292969]
[131.74032593 205.07443237]
[125.58412933 191.39593506]
[119.42794037 177.71743774]
[113.27174377 164.03894043]
[107.11555481 150.36044312]
[100.95935822 136.68194580]
[94.80316925 123.00344849]
[80.84149170 100.82910919]
[67.35517120 94.26259613]
[53.69714355 101.38751984]
[38.63863754 99.13037109]
[27.92341423 88.56401062]
[25.51359749 73.88985443]
[12.02727604 67.32334137]
[-1.45904541 60.75682449]
[-14.94536686 54.19030762]
[-28.43168831 47.62379456]
[-41.96721649 41.15931320]
[-55.55117416 34.79723358]
[-69.13513184 28.43515205]
[-82.71909332 22.07307243]
[-91.82028198 21.26679230]
[-96.45905304 15.51095390]
[-109.94537354 8.94443798]
[-123.43170166 2.37792277]
[-136.91801453 -4.18859291]
[-146.00599670 -5.13223839]
[-150.55731201 -10.95748138]
[-163.94291687 -17.72693443]
[-177.32852173 -24.49638939]
[-190.71412659 -31.26584244]
[-204.09973145 -38.03529739]
[-217.53608704 -44.70347214]
[-231.02239990 -51.26998520]
[-258.71347046 -37.44405746]
[-273.42526245 -40.37041473]
[-288.46972656 -35.47406387]
[-299.44299316 -45.54566193]
[-314.15475464 -48.47201538]
[-328.86654663 -51.39837265]
[-343.57830811 -54.32472610]
[-358.29010010 -57.25107956]
[-373.00186157 -60.17743683]
[-388.04635620 -55.28108597]
[-399.01959229 -65.35268402]
[-413.73138428 -68.27903748]
[-426.73126221 -59.29135513]
[-442.26361084 -62.21056747]
[-451.11334229 -75.30474854]
[-448.03009033 -90.80536652]
[-434.84307861 -99.51616669]
[-419.37591553 -96.26919556]
[-410.80502319 -82.99081421]
[-396.09326172 -80.06446075]
[-382.10104370 -85.17012787]
[-370.07553101 -74.88921356]
[-355.36373901 -71.96286011]
[-340.65197754 -69.03650665]
[-325.94018555 -66.11015320]
[-311.22839355 -63.18379593]
[-296.51663208 -60.25744247]
[-282.52444458 -65.36310577]
[-270.49890137 -55.08219147]
[-255.78712463 -52.15583801]
[-247.93032837 -64.93358612]
[-257.18112183 -76.74134064]
[-266.43188477 -88.54909515]
[-275.68267822 -100.35684204]
[-284.93347168 -112.16459656]
[-294.18423462 -123.97235107]
[-303.43502808 -135.78010559]
[-317.96289062 -144.51951599]
[-313.58673096 -160.89894104]
[-296.63598633 -161.22807312]
[-291.62728882 -145.03088379]
[-282.37649536 -133.22312927]
[-273.12570190 -121.41538239]
[-263.87493896 -109.60762787]
[-254.62414551 -97.79987335]
[-245.37336731 -85.99212646]
[-236.12257385 -74.18437195]
[-224.45588684 -64.75630951]
[-210.96957397 -58.18979263]
[-203.57785034 -58.08795929]
[-197.33027649 -51.42090225]
[-183.94467163 -44.65145111]
[-170.55906677 -37.88199615]
[-157.17346191 -31.11254311]
[-143.78785706 -24.34309006]
[-130.35150146 -17.67491531]
[-116.86518097 -11.10839939]
[-103.37886047 -4.54188347]
[-89.89253998 2.02463222]
[-76.35700989 8.48911381]
[-62.77305222 14.85119343]
[-49.18909454 21.21327400]
[-35.60513687 27.57535172]
[-28.21271896 27.56553459]
[-21.86517334 34.13747025]
[-8.37885189 40.70398712]
[5.10747004 47.27050400]
[18.59379196 53.83701706]
[32.08011246 60.40353394]
[45.11754227 53.25067520]
[60.04348755 55.16904831]
[71.10714722 65.63082886]
[73.92168427 80.77627563]
[87.40800476 87.34278870]
[75.94017792 77.67382050]
[70.53717041 63.68069839]
[72.53125763 48.81383514]
[81.43074036 36.73910141]
[95.04118347 30.43387413]
[110.00653076 31.45289993]
[122.63662720 39.54490280]
[129.81715393 52.71456528]
[129.77754211 67.71451569]
[122.52755737 80.84606934]
[109.85605621 88.87087250]
[124.10784149 84.19254303]
[138.35961914 79.51422119]
[152.57566833 74.72840118]
[166.75515747 69.83535767]
[180.93466187 64.94231415]
[195.11415100 60.04927063]
[198.09014893 43.78586197]
[208.79986572 31.31344032]
[224.24885559 25.97398376]
[240.19024658 29.13511467]
[252.29211426 39.84130096]
[266.39608765 34.73466110]
[280.50006104 29.62802124]
[294.60406494 24.52138138]
[304.74661255 11.63494492]
[320.93707275 14.24294567]
[326.52005005 29.66249466]
[315.75225830 42.03128052]
[299.71069336 38.62535858]
[285.60671997 43.73199844]
[271.50274658 48.83863831]
[257.39874268 53.94528198]
[255.89582825 67.52072144]
[248.65524292 79.17992401]
[237.04179382 86.61711884]
[223.29151917 88.33266449]
[210.08116150 83.93514252]
[200.00720215 74.22876740]
[185.82769775 79.12181091]
[171.64820862 84.01485443]
[157.46870422 88.90789795]
[152.16996765 94.06262207]
[143.03794861 93.76599884]
[128.78616333 98.44432831]
[114.53438568 103.12265778]
[108.48166656 116.84725189]
[114.63785553 130.52575684]
[120.79405212 144.20425415]
[126.95024109 157.88275146]
[133.10643005 171.56124878]
[139.26261902 185.23974609]
[145.41882324 198.91824341]
[151.57501221 212.59674072]
[157.73120117 226.27523804]
[177.51582336 224.10289001]
[196.97366333 231.05014038]
[211.97248840 246.34017944]
[219.03041077 267.36318970]
[216.10726929 290.11013794]
[226.71386719 300.71673584]
[237.32046509 311.32336426]
[247.92707825 321.92996216]
[263.40243530 328.85449219]
[261.03250122 345.64199829]
[244.24502563 348.01193237]
[237.32046509 332.53656006]
[226.71386719 321.92996216]
[216.10726929 311.32336426]
[205.50067139 300.71673584]
[199.08230591 304.59677124]
[186.24559021 312.35684204]
[179.82722473 316.23687744]
[184.28976440 330.55770874]
[188.75231934 344.87850952]
[193.21485901 359.19931030]
[197.67741394 373.52014160]
[202.13995361 387.84094238]
[206.60249329 402.16177368]
[217.08724976 415.48492432]
[207.18725586 429.24813843]
[191.22131348 423.54507446]
[192.28169250 406.62429810]
[187.81913757 392.30349731]
[183.35659790 377.98269653]
[178.89404297 363.66186523]
[174.43150330 349.34106445]
[169.96896362 335.02023315]
[165.50640869 320.69943237]
[153.02668762 317.53280640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 172]
[9 171]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 117]
[18 116]
[22 112]
[23 111]
[24 110]
[25 109]
[26 108]
[27 106]
[28 105]
[29 104]
[30 103]
[32 102]
[33 101]
[34 100]
[35 99]
[37 98]
[38 97]
[39 96]
[40 95]
[41 94]
[42 92]
[43 91]
[44 73]
[45 72]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[54 63]
[55 62]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[80 84]
[128 163]
[129 162]
[130 161]
[131 159]
[132 158]
[133 157]
[134 156]
[139 150]
[140 149]
[141 148]
[142 147]
[177 187]
[178 186]
[179 185]
[180 184]
[190 206]
[191 205]
[192 204]
[193 203]
[194 202]
[195 201]
[196 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
