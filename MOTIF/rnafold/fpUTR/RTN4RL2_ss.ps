%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCUAGCAGCCUGGGCACACGGACAGACGGACUGACGGACUCUCGAGCGGACAGCGCAGCUAGCGGGGCGCGGGCGCUGGGCGUCGACGGCCAGCCCCAGCCUUCCCCGCCCCGUCGCGCCCCGCCCCGUCCCGUCGGGGCCGAUGGCUCCUCCCGAGGCCCGCAGCCCGGGCGGCGCAGGGUAGAGCGCCGCGGCCCGGCCACGCAGCCCGGGGACUCCCGGGCCCUCCCGGAGCCCCGCGGGGUCCCCGCCG\
UGCAUCCGGCGGGCUCAGGGAGCGAGUGGGAGCGCCCUCCCCCCGCUGCCCCCUCCCCCGAGCAUCGAGACAAG\
) } def
/len { sequence length } bind def

/coor [
[293.08804321 204.25738525]
[306.97167969 209.94165039]
[293.51071167 203.32333374]
[280.04974365 196.70501709]
[266.58874512 190.08670044]
[259.24337769 189.95588684]
[253.03158569 183.34077454]
[239.63423157 176.59461975]
[220.42086792 179.04977417]
[209.73504639 161.91201782]
[196.21168518 155.42214966]
[182.68830872 148.93228149]
[175.34201050 148.87139893]
[169.06753540 142.31571960]
[155.60655212 135.69740295]
[142.14558411 129.07908630]
[128.68460083 122.46076202]
[122.92648315 131.54895020]
[114.26670074 139.04194641]
[103.18690491 144.01921082]
[90.45639038 145.71636963]
[77.07926941 143.61317444]
[64.21537018 137.50355530]
[53.08092117 127.53953552]
[44.83764267 114.24410248]
[40.47994614 98.48953247]
[40.73080826 81.44190216]
[25.73148918 81.58470154]
[10.73216915 81.72750092]
[-4.26715088 81.87030029]
[-19.26647186 82.01309204]
[-23.66414642 84.60348511]
[-28.16888618 85.22510529]
[-32.02560425 84.15857697]
[-34.69467926 81.93965912]
[-49.69196320 81.65407562]
[-64.68923950 81.36849213]
[-79.68652344 81.08290863]
[-94.68380737 80.79732513]
[-84.31185150 91.63349915]
[-81.82073975 106.42519379]
[-88.07131958 120.06082153]
[-100.90357208 127.82826996]
[-115.88301849 127.04333496]
[-127.83318329 117.97726440]
[-132.62440491 103.76303864]
[-128.60098267 89.31271362]
[-117.15296936 79.61976624]
[-132.09794617 78.33614349]
[-147.04292297 77.05252075]
[-161.98789978 75.76889038]
[-169.83258057 83.19636536]
[-180.24888611 85.07427979]
[-189.79049683 81.02464294]
[-195.43263245 72.59138489]
[-210.35046387 71.02346039]
[-225.26829529 69.45553589]
[-240.18612671 67.88760376]
[-254.71946716 74.14001465]
[-266.56823730 65.11473083]
[-281.48608398 63.54680634]
[-294.90914917 74.80818176]
[-311.98397827 72.88574982]
[-322.15768433 59.46111679]
[-337.08975220 58.03527451]
[-352.02185059 56.60943604]
[-366.95391846 55.18359375]
[-381.88598633 53.75775528]
[-396.81808472 52.33191299]
[-414.81875610 61.48967743]
[-430.00427246 49.46548462]
[-444.96078491 48.32418823]
[-459.92257690 47.25410080]
[-474.88928223 46.25524521]
[-489.85598755 45.25638580]
[-498.56765747 47.79653549]
[-504.96020508 44.17611313]
[-519.91668701 43.03481674]
[-534.87322998 41.89352417]
[-549.82977295 40.75223160]
[-564.78625488 39.61093903]
[-579.13513184 46.27580643]
[-591.23681641 37.59256363]
[-606.19335938 36.45127106]
[-620.73596191 44.03045273]
[-634.42388916 34.99868011]
[-633.17614746 18.64706993]
[-618.27630615 11.79675579]
[-605.05206299 21.49475288]
[-590.09552002 22.63604736]
[-576.81646729 15.88954544]
[-563.64495850 24.65441895]
[-548.68847656 25.79571342]
[-533.73193359 26.93700600]
[-518.77539062 28.07830048]
[-503.81890869 29.21959305]
[-488.85711670 30.28968048]
[-473.89041138 31.28853798]
[-458.92370605 32.28739548]
[-452.08099365 29.61357307]
[-443.81948853 33.36767197]
[-428.86297607 34.50896454]
[-421.79577637 27.22828293]
[-411.68133545 24.96120262]
[-401.77276611 28.68231773]
[-395.39224243 37.39983368]
[-380.46014404 38.82567596]
[-365.52807617 40.25151443]
[-350.59600830 41.67735672]
[-335.66390991 43.10319519]
[-320.73184204 44.52903748]
[-312.07028198 35.03538132]
[-299.33590698 32.20386887]
[-287.10867310 37.28150940]
[-279.91815186 48.62897873]
[-265.00030518 50.19690704]
[-251.53399658 43.83235550]
[-238.61819458 52.96977997]
[-223.70036316 54.53770447]
[-208.78253174 56.10563278]
[-193.86471558 57.67356110]
[-176.76385498 48.57732391]
[-160.70426941 60.82391739]
[-145.75929260 62.10754395]
[-130.81431580 63.39116669]
[-115.86934662 64.67479706]
[-105.59979248 59.77557373]
[-94.39822388 65.80004883]
[-79.40093994 66.08563232]
[-64.40366364 66.37120819]
[-49.40637970 66.65679169]
[-34.40909958 66.94237518]
[-19.40926933 67.01377869]
[-4.40994835 66.87097931]
[10.58937168 66.72817993]
[25.58869171 66.58538055]
[40.58801270 66.44258881]
[48.93640137 53.98046494]
[43.36146545 40.05494690]
[37.78652954 26.12942886]
[32.21158981 12.20390987]
[26.63665390 -1.72160935]
[21.06171799 -15.64712811]
[9.56167889 -28.10447311]
[18.34865952 -42.60362244]
[34.71365356 -38.17380524]
[34.98723602 -21.22206497]
[40.56217194 -7.29654598]
[46.13711166 6.62897301]
[51.71204758 20.55449104]
[57.28698349 34.48001099]
[62.86191940 48.40552902]
[70.20536804 46.88113022]
[84.89225769 43.83232880]
[92.23570251 42.30792999]
[91.80736542 27.31404495]
[91.37902069 12.32016277]
[88.02227783 3.88937545]
[91.01866150 -2.81834817]
[90.73307800 -17.81562996]
[90.44749451 -32.81291199]
[79.93312073 -44.93015289]
[82.99272919 -60.67874908]
[97.27923584 -67.97772980]
[111.83327484 -61.22793961]
[115.49021912 -45.60723877]
[105.44477844 -33.09849167]
[105.73036194 -18.10121155]
[106.01594543 -3.10393023]
[106.37290955 11.89182186]
[106.80124664 26.88570404]
[107.22959137 41.87958908]
[122.03357697 44.29660034]
[127.20858002 30.21755981]
[132.38359070 16.13852119]
[137.55859375 2.05948377]
[142.73359680 -12.01955414]
[147.90859985 -26.09859276]
[153.08360291 -40.17763138]
[144.33587646 -52.99390411]
[144.82568359 -68.50325012]
[154.36468506 -80.74200439]
[169.28494263 -85.00411224]
[183.84931946 -79.65071869]
[192.45748901 -66.74030304]
[191.79946899 -51.23718262]
[182.12826538 -39.10263062]
[167.16264343 -35.00262451]
[161.98764038 -20.92358780]
[156.81263733 -6.84454918]
[151.63763428 7.23448944]
[146.46263123 21.31352806]
[141.28761292 35.39256668]
[136.11260986 49.47160339]
[146.27671814 83.09038544]
[135.30291748 108.99978638]
[148.76390076 115.61810303]
[162.22486877 122.23641968]
[175.68585205 128.85473633]
[189.17817688 135.40890503]
[202.70155334 141.89877319]
[216.22492981 148.38864136]
[226.19059753 144.21829224]
[236.59735107 146.14848328]
[244.08813477 153.31297302]
[246.38038635 163.19725037]
[259.77774048 169.94342041]
[273.20706177 176.62573242]
[286.66806030 183.24404907]
[300.12902832 189.86236572]
[313.58999634 196.48068237]
[328.54092407 197.69314575]
[342.89242554 193.33033752]
[357.24392700 188.96752930]
[371.59545898 184.60472107]
[385.94696045 180.24191284]
[400.29846191 175.87910461]
[414.64999390 171.51629639]
[429.00149536 167.15348816]
[443.35299683 162.79067993]
[457.70452881 158.42785645]
[472.03509521 153.99679565]
[486.34442139 149.49755859]
[500.65374756 144.99832153]
[514.94152832 140.43101501]
[529.20733643 135.79576111]
[543.45098877 131.09265137]
[557.67205811 126.32180023]
[568.11724854 113.67942810]
[584.24133301 116.67050934]
[589.45721436 132.21807861]
[578.39923096 144.32812500]
[562.44293213 140.54287720]
[548.22186279 145.31373596]
[542.91113281 150.38998413]
[533.84259033 150.06161499]
[519.57678223 154.69686890]
[514.21795654 159.72233582]
[505.15298462 159.30764771]
[490.84365845 163.80688477]
[476.53433228 168.30612183]
[471.12796021 173.28033447]
[462.06732178 172.77937317]
[447.71582031 177.14218140]
[433.36431885 181.50498962]
[419.01278687 185.86779785]
[404.66128540 190.23062134]
[390.30978394 194.59342957]
[375.95825195 198.95623779]
[361.60675049 203.31904602]
[347.25524902 207.68185425]
[332.90371704 212.04466248]
[331.13552856 219.33325195]
[325.83096313 241.19900513]
[336.58792114 251.65307617]
[347.39456177 262.05581665]
[358.25054932 272.40701294]
[369.10656738 282.75817871]
[379.87319946 281.87152100]
[389.17416382 286.92309570]
[394.08435059 296.05169678]
[393.21002197 306.16055298]
[403.86697388 316.71655273]
[414.52395630 327.27255249]
[422.77124023 331.05776978]
[425.23153687 337.98013306]
[435.78753662 348.63708496]
[446.34350586 359.29406738]
[459.74057007 356.19650269]
[472.81927490 360.07769775]
[482.20812988 369.82595825]
[485.54180908 382.83184814]
[482.05639648 395.68597412]
[492.51046753 406.44293213]
[502.96453857 417.19992065]
[513.46966553 427.90701294]
[524.02569580 438.56399536]
[534.58166504 449.22094727]
[545.13763428 459.87792969]
[558.48864746 458.38833618]
[570.09942627 464.75054932]
[575.85729980 476.45651245]
[573.86975098 489.15304565]
[584.32385254 499.91000366]
[594.77789307 510.66699219]
[605.23199463 521.42395020]
[615.68603516 532.18096924]
[631.60308838 536.12811279]
[635.88262939 551.95898438]
[624.12231445 563.38818359]
[608.42004395 558.65826416]
[604.92907715 542.63500977]
[594.47497559 531.87805176]
[584.02093506 521.12103271]
[573.56689453 510.36407471]
[563.11279297 499.60711670]
[546.27502441 500.06890869]
[534.09295654 487.95095825]
[534.48071289 470.43392944]
[523.92468262 459.77694702]
[513.36871338 449.11996460]
[502.81271362 438.46301270]
[495.91409302 435.93695068]
[492.20755005 427.65399170]
[481.75347900 416.89700317]
[471.29940796 406.14001465]
[455.10537720 408.98764038]
[440.26577759 401.52783203]
[432.74124146 386.53433228]
[435.68655396 369.85006714]
[425.13055420 359.19308472]
[414.57455444 348.53613281]
[403.96795654 337.92953491]
[393.31097412 327.37353516]
[382.65402222 316.81753540]
[363.62234497 313.21527100]
[358.75540161 293.61419678]
[347.89938354 283.26300049]
[337.04336548 272.91183472]
[330.07543945 270.58380127]
[326.13388062 262.41006470]
[315.37689209 251.95599365]
[304.75057983 262.54281616]
[290.43942261 267.03631592]
[275.66870117 264.42376709]
[263.76715088 255.29397583]
[257.41696167 241.70445251]
[258.04925537 226.71777344]
[265.52148438 213.71142578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 211]
[3 210]
[4 209]
[5 208]
[7 207]
[8 206]
[10 202]
[11 201]
[12 200]
[14 199]
[15 198]
[16 197]
[17 196]
[27 137]
[28 136]
[29 135]
[30 134]
[31 133]
[35 132]
[36 131]
[37 130]
[38 129]
[39 128]
[48 126]
[49 125]
[50 124]
[51 123]
[55 121]
[56 120]
[57 119]
[58 118]
[60 116]
[61 115]
[64 111]
[65 110]
[66 109]
[67 108]
[68 107]
[69 106]
[71 102]
[72 101]
[73 99]
[74 98]
[75 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[83 90]
[84 89]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
[155 172]
[156 171]
[157 170]
[159 169]
[160 168]
[161 167]
[173 194]
[174 193]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
[212 252]
[213 251]
[214 250]
[215 249]
[216 248]
[217 247]
[218 246]
[219 245]
[220 244]
[221 243]
[222 241]
[223 240]
[224 239]
[225 237]
[226 236]
[227 234]
[228 233]
[254 322]
[255 321]
[256 319]
[257 318]
[258 317]
[262 315]
[263 314]
[264 313]
[266 312]
[267 311]
[268 310]
[273 306]
[274 305]
[275 304]
[276 302]
[277 301]
[278 300]
[279 299]
[283 296]
[284 295]
[285 294]
[286 293]
[287 292]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
