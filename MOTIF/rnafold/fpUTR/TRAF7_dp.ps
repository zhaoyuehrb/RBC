%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRAF7)
} def

/sequence { (\
GGCCGAGGGGGCAUCAUGAAGCGGGCUGGCGGCGCUGCCGCUCCCGGGCGGCCGCGGGCGGGAGGUGCUUCCCAAGGACCGUAGAUGCCUCUCUAGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 93 0.022984127 ubox
1 94 0.067604319 ubox
2 92 0.012099262 ubox
2 93 0.070338963 ubox
2 99 0.499772989 ubox
3 9 0.003725984 ubox
3 98 0.504300074 ubox
4 8 0.003793404 ubox
4 9 0.003278230 ubox
5 91 0.004915859 ubox
5 93 0.662026662 ubox
6 90 0.004169129 ubox
6 92 0.647789988 ubox
6 94 0.622762992 ubox
7 91 0.579876386 ubox
7 92 0.397459063 ubox
7 93 0.636305997 ubox
7 94 0.025100815 ubox
8 90 0.500107068 ubox
8 91 0.675812208 ubox
8 92 0.452721136 ubox
8 93 0.024389880 ubox
8 94 0.003230869 ubox
9 89 0.408735321 ubox
9 90 0.736640924 ubox
9 91 0.450868182 ubox
9 92 0.009998256 ubox
10 88 0.289357306 ubox
10 89 0.910851896 ubox
10 90 0.055703501 ubox
10 91 0.005151159 ubox
11 88 0.956381067 ubox
11 89 0.039579415 ubox
12 87 0.999768230 ubox
13 86 0.999465054 ubox
14 85 0.999357524 ubox
15 84 0.997530003 ubox
15 87 0.013062247 ubox
16 82 0.075273053 ubox
16 86 0.013978174 ubox
17 81 0.060080805 ubox
17 83 0.487837170 ubox
17 85 0.015560075 ubox
18 22 0.003909877 ubox
18 71 0.004803349 ubox
18 80 0.055333833 ubox
18 82 0.200354043 ubox
19 70 0.005310654 ubox
20 69 0.005665276 ubox
21 26 0.003328530 ubox
21 30 0.014351252 ubox
21 68 0.005711094 ubox
21 82 0.957062296 ubox
22 29 0.014362532 ubox
22 46 0.105173811 ubox
22 67 0.005709284 ubox
22 81 0.991803583 ubox
23 45 0.106456677 ubox
23 66 0.004960832 ubox
23 73 0.040446311 ubox
23 80 0.992030394 ubox
24 44 0.106459490 ubox
24 72 0.040511201 ubox
24 73 0.011439598 ubox
24 79 0.989972082 ubox
24 80 0.028528730 ubox
25 43 0.106098345 ubox
25 59 0.177260879 ubox
25 71 0.040475830 ubox
25 72 0.011081573 ubox
25 79 0.037082793 ubox
26 58 0.177417189 ubox
26 62 0.006330586 ubox
26 76 0.733494657 ubox
26 77 0.429781245 ubox
27 40 0.003347318 ubox
27 57 0.176842127 ubox
27 61 0.006346043 ubox
27 74 0.694574479 ubox
27 75 0.542387507 ubox
27 76 0.361195844 ubox
28 39 0.004067953 ubox
28 42 0.098595003 ubox
28 69 0.041508170 ubox
28 71 0.012935728 ubox
28 72 0.404235872 ubox
28 73 0.887656703 ubox
29 38 0.004069939 ubox
29 41 0.106508048 ubox
29 55 0.177399865 ubox
29 59 0.011671986 ubox
29 68 0.041931127 ubox
29 70 0.012372111 ubox
29 71 0.411011957 ubox
29 72 0.885183745 ubox
30 37 0.004068416 ubox
30 40 0.106515135 ubox
30 54 0.177411656 ubox
30 58 0.011688062 ubox
30 67 0.041862942 ubox
31 39 0.106515691 ubox
31 53 0.176929422 ubox
31 66 0.030045296 ubox
31 69 0.965638764 ubox
31 70 0.072041677 ubox
31 71 0.052538851 ubox
31 72 0.005512525 ubox
32 38 0.106513247 ubox
32 52 0.165518037 ubox
32 66 0.029088566 ubox
32 68 0.977182786 ubox
32 69 0.010298685 ubox
32 70 0.009193057 ubox
32 71 0.003911627 ubox
33 37 0.105738665 ubox
33 50 0.045934024 ubox
33 51 0.148032200 ubox
33 56 0.011718715 ubox
33 65 0.040675865 ubox
33 67 0.977264579 ubox
34 49 0.064898157 ubox
34 52 0.062299173 ubox
34 55 0.011797284 ubox
34 66 0.961380585 ubox
34 68 0.004817951 ubox
35 47 0.003417130 ubox
35 48 0.064677210 ubox
35 51 0.084080029 ubox
35 54 0.011790375 ubox
35 64 0.493964937 ubox
35 65 0.844175090 ubox
35 67 0.004522129 ubox
36 46 0.004597168 ubox
36 47 0.024964193 ubox
36 50 0.136602986 ubox
36 63 0.673280444 ubox
36 64 0.696025461 ubox
37 45 0.005491188 ubox
37 49 0.157157142 ubox
37 52 0.017574775 ubox
38 47 0.076922345 ubox
38 48 0.156207126 ubox
38 51 0.021193984 ubox
38 61 0.971953418 ubox
38 62 0.103435449 ubox
39 46 0.080650855 ubox
39 47 0.155134427 ubox
39 50 0.024772665 ubox
39 60 0.975364316 ubox
39 61 0.074807268 ubox
40 45 0.078747602 ubox
40 49 0.024785775 ubox
40 59 0.978033225 ubox
41 48 0.024765115 ubox
41 58 0.976622191 ubox
42 47 0.022765198 ubox
42 57 0.865830330 ubox
42 58 0.053309746 ubox
43 56 0.861578769 ubox
43 57 0.453418209 ubox
43 58 0.017227524 ubox
44 51 0.005669948 ubox
44 56 0.455106743 ubox
44 57 0.023689436 ubox
45 50 0.005669286 ubox
45 54 0.976564575 ubox
45 56 0.024543474 ubox
46 53 0.977561562 ubox
46 55 0.024963047 ubox
47 52 0.976521941 ubox
47 53 0.032797602 ubox
48 52 0.033470796 ubox
48 55 0.007853971 ubox
48 82 0.104104951 ubox
49 54 0.007876343 ubox
49 81 0.106217105 ubox
50 80 0.106316375 ubox
51 59 0.004034769 ubox
51 79 0.106304421 ubox
52 58 0.004070181 ubox
52 77 0.106300847 ubox
53 57 0.004040989 ubox
53 76 0.106286241 ubox
54 82 0.003652147 ubox
55 81 0.003777259 ubox
56 72 0.003775969 ubox
56 73 0.105159089 ubox
56 80 0.003829632 ubox
57 69 0.003527894 ubox
57 71 0.003719677 ubox
57 72 0.105256180 ubox
57 73 0.005997941 ubox
57 79 0.003829674 ubox
58 68 0.006175290 ubox
58 71 0.105054341 ubox
58 72 0.005530117 ubox
59 67 0.007265808 ubox
60 66 0.006875192 ubox
60 69 0.099877376 ubox
60 70 0.023504347 ubox
60 72 0.026382263 ubox
60 73 0.175967235 ubox
61 68 0.101715711 ubox
61 69 0.025022697 ubox
61 71 0.026676555 ubox
61 72 0.176146144 ubox
61 73 0.003221875 ubox
62 68 0.025143147 ubox
62 70 0.027485741 ubox
62 71 0.176138383 ubox
62 72 0.003182176 ubox
63 69 0.032472766 ubox
63 70 0.172652378 ubox
64 68 0.036009058 ubox
64 69 0.139301041 ubox
64 80 0.008619548 ubox
65 69 0.003707896 ubox
65 79 0.008744690 ubox
66 78 0.008733366 ubox
68 76 0.008690676 ubox
69 75 0.008590160 ubox
70 74 0.007153968 ubox
70 78 0.015979286 ubox
71 77 0.017347317 ubox
72 76 0.017236027 ubox
90 97 0.003604036 ubox
91 96 0.003926356 ubox
7 92 0.9500000 lbox
8 91 0.9500000 lbox
9 90 0.9500000 lbox
10 89 0.9500000 lbox
11 88 0.9500000 lbox
12 87 0.9500000 lbox
13 86 0.9500000 lbox
14 85 0.9500000 lbox
15 84 0.9500000 lbox
21 82 0.9500000 lbox
22 81 0.9500000 lbox
23 80 0.9500000 lbox
24 79 0.9500000 lbox
26 76 0.9500000 lbox
27 75 0.9500000 lbox
28 73 0.9500000 lbox
29 72 0.9500000 lbox
31 69 0.9500000 lbox
32 68 0.9500000 lbox
33 67 0.9500000 lbox
34 66 0.9500000 lbox
35 65 0.9500000 lbox
36 64 0.9500000 lbox
38 61 0.9500000 lbox
39 60 0.9500000 lbox
40 59 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
