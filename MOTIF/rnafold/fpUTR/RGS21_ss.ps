%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:11:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUACCACUUGGAAAACAAUUCAUCUGAAAGAAGCACAGAUUUUCUCAUCUAUCCUGUCAACAAAGAAGGAAUCAAGAGAGCAAGGACAGUGAUUUCCCCUGCAUUGCAUUUGUCUUGAAGAUCAGUCAGAAAGAGAAACUCGGCAUCAUCUGUGACAGACAGUGGAACGAAAA\
) } def
/len { sequence length } bind def

/coor [
[62.83293152 582.04296875]
[61.48834229 567.10339355]
[60.14375305 552.16375732]
[56.39993668 545.76226807]
[58.91158295 536.94427490]
[57.83539200 521.98297119]
[56.75920105 507.02160645]
[55.68300629 492.06027222]
[54.60681534 477.09890747]
[40.11213684 473.23831177]
[31.73665047 485.68222046]
[23.36116219 498.12615967]
[14.98567581 510.57006836]
[18.26234627 526.03094482]
[9.57688427 539.23468018]
[-5.91778040 542.34771729]
[-19.02893639 533.52313232]
[-21.97797012 517.99639893]
[-13.01526928 504.97930908]
[2.54175258 502.19458008]
[10.91724014 489.75067139]
[19.29272652 477.30673218]
[27.66821289 464.86282349]
[33.19008255 450.91616821]
[35.60306549 436.11154175]
[38.01604843 421.30688477]
[40.42903519 406.50222778]
[35.24586487 402.44216919]
[31.55740356 396.92599487]
[29.75780869 390.48522949]
[30.05734253 383.75274658]
[32.45833969 377.40054321]
[36.75179672 372.07263184]
[42.53517532 368.31991577]
[49.25000763 366.54309082]
[53.24056244 352.08364868]
[57.23111343 337.62420654]
[61.22166824 323.16476440]
[65.21221924 308.70532227]
[69.20277405 294.24588013]
[73.19332123 279.78643799]
[76.00404358 265.05212402]
[77.61660004 250.13906860]
[79.22914886 235.22599792]
[80.84170532 220.31292725]
[82.45426178 205.39985657]
[84.06681061 190.48678589]
[76.11466217 174.85891724]
[87.06307983 160.07229614]
[88.40766907 145.13267517]
[89.75225830 130.19305420]
[70.79475403 112.79415894]
[70.85784912 87.06275940]
[58.96438217 77.92243958]
[47.07091522 68.78211975]
[35.17744827 59.64179993]
[26.43455124 56.88016510]
[23.15447617 50.22910309]
[11.42700481 40.87675476]
[-4.24787331 42.89510727]
[-16.70765305 33.17248535]
[-18.56016922 17.47714233]
[-8.70635700 5.12085199]
[7.00769281 3.43437982]
[19.25911140 13.41828060]
[20.77935219 29.14928246]
[32.50682449 38.50162888]
[44.31776810 47.74833679]
[56.21123505 56.88865662]
[68.10470581 66.02897644]
[79.99816895 75.16929626]
[90.41965485 69.58858490]
[102.15809631 68.18836975]
[106.66511536 53.88149261]
[111.17213440 39.57461548]
[115.67916107 25.26773643]
[120.18618011 10.96085739]
[119.03544617 5.80077887]
[119.91285706 1.18602860]
[122.26380157 -2.19637966]
[125.34012604 -3.98308659]
[130.61074829 -18.02660942]
[135.88137817 -32.07013321]
[141.15199280 -46.11365509]
[146.42262268 -60.15718079]
[140.13465881 -74.40847015]
[145.67987061 -88.57551575]
[159.30505371 -94.48229980]
[164.57566833 -108.52582550]
[169.84629822 -122.56935120]
[175.11691284 -136.61286926]
[180.38754272 -150.65638733]
[170.57101440 -162.46873474]
[167.99165344 -177.60949707]
[173.34329224 -192.00587463]
[185.18634033 -201.78530884]
[200.33511353 -204.31719971]
[214.71464539 -198.92047119]
[224.45692444 -187.04682922]
[226.94131470 -171.89019775]
[221.49954224 -157.52764893]
[209.59539795 -147.82264709]
[194.43106079 -145.38577271]
[189.16044617 -131.34225464]
[183.88981628 -117.29872131]
[178.61920166 -103.25520325]
[173.34857178 -89.21167755]
[179.72300720 -75.79891968]
[174.57789612 -61.48170471]
[160.46614075 -54.88655472]
[155.19551086 -40.84303284]
[149.92489624 -26.79951096]
[144.65426636 -12.75598717]
[139.38365173 1.28753567]
[134.49305725 15.46787739]
[129.98603821 29.77475548]
[125.47901917 44.08163452]
[120.97200012 58.38851166]
[116.46497345 72.69538879]
[122.59906006 77.50734711]
[127.38201141 83.66407013]
[130.52786255 90.79747772]
[131.84854126 98.48107910]
[131.26509094 106.25548553]
[128.81237793 113.65589905]
[124.63706207 120.23986816]
[118.98876190 125.61374664]
[112.20517731 129.45625305]
[104.69187164 131.53764343]
[103.34728241 146.47726440]
[102.00269318 161.41688538]
[109.66392517 171.82038879]
[108.21581268 184.25511169]
[98.97988129 192.09933472]
[97.36733246 207.01240540]
[95.75477600 221.92547607]
[94.14221954 236.83854675]
[92.52967072 251.75161743]
[90.91711426 266.66470337]
[101.65794373 256.19403076]
[116.32840729 253.06713867]
[130.40525818 258.24807739]
[139.54827881 270.13949585]
[140.93846130 285.07492065]
[134.14717102 298.44946289]
[121.26834106 306.13943481]
[106.27279663 305.77383423]
[93.78401947 297.46536255]
[87.65277100 283.77700806]
[83.66221619 298.23645020]
[79.67166138 312.69589233]
[75.68110657 327.15533447]
[71.69055939 341.61477661]
[67.70000458 356.07421875]
[63.70944977 370.53366089]
[71.94719696 392.91906738]
[55.23368073 408.91522217]
[52.82069397 423.71987915]
[50.40771103 438.52450562]
[47.99472809 453.32916260]
[61.58688354 458.66156006]
[69.56816101 476.02273560]
[70.64434814 490.98406982]
[71.72054291 505.94540405]
[72.79673767 520.90673828]
[73.87292480 535.86810303]
[75.08336639 550.81915283]
[76.42795563 565.75878906]
[77.77254486 580.69842529]
[90.06372833 590.63330078]
[91.64675140 606.35815430]
[81.58244324 618.54357910]
[65.84178162 619.96026611]
[53.76341248 609.76770020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 169]
[2 168]
[3 167]
[5 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 23]
[11 22]
[12 21]
[13 20]
[24 160]
[25 159]
[26 158]
[27 157]
[35 155]
[36 154]
[37 153]
[38 152]
[39 151]
[40 150]
[41 149]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[49 131]
[50 130]
[51 129]
[53 71]
[54 70]
[55 69]
[56 68]
[58 67]
[59 66]
[73 119]
[74 118]
[75 117]
[76 116]
[77 115]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
