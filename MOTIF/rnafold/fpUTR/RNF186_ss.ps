%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAACAAGCUGGGCAGCUCUGGGAGAGAGGAGUGUCAGACAGCUGUUGUCAACAGGCACCUGGCCAGAGUGAAAAGGAGGGGCAGAUUCCAUCCAAGUCCCAGCGGCGCCAGCUGACACUCUCUGCCAAUGCCCAGGUGCUGAGCGACAGUGUCCCACCGGUCCCUGUGCCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-87.94676971 869.71649170]
[-93.63022614 883.88195801]
[-104.90280914 894.17230225]
[-119.52633667 898.54443359]
[-134.59730530 896.13012695]
[-147.12335205 887.40881348]
[-154.61743164 874.11218262]
[-155.59158325 858.88018799]
[-149.85238647 844.73718262]
[-138.53936768 834.49127197]
[-123.89872742 830.17681885]
[-121.52606964 815.36566162]
[-119.15340424 800.55450439]
[-116.78074646 785.74334717]
[-114.40808105 770.93218994]
[-112.03542328 756.12103271]
[-109.66275787 741.30987549]
[-117.73712921 734.88800049]
[-122.43981934 725.61450195]
[-122.85616302 715.14416504]
[-118.84317780 705.37689209]
[-111.06773376 698.11309814]
[-100.89674377 694.72204590]
[-97.74354553 680.05718994]
[-94.59035492 665.39233398]
[-91.43715668 650.72753906]
[-99.57997894 642.68609619]
[-102.85044861 631.59393311]
[-100.32090759 620.18670654]
[-92.50933838 611.33666992]
[-81.27834320 607.32952881]
[-77.60956573 592.78515625]
[-79.26202393 588.27502441]
[-78.07737732 582.67797852]
[-73.54614258 577.79675293]
[-69.36635590 563.39086914]
[-75.09384155 554.88421631]
[-75.17915344 544.40948486]
[-69.35155487 535.44171143]
[-59.34193420 531.08923340]
[-54.65635300 516.83984375]
[-49.97077179 502.59045410]
[-45.28518677 488.34106445]
[-46.18542099 480.98251343]
[-40.38912964 473.88281250]
[-35.45279694 459.71832275]
[-30.51646423 445.55383301]
[-25.58012962 431.38934326]
[-20.64379692 417.22488403]
[-15.70746422 403.06039429]
[-10.77113056 388.89590454]
[-17.59251785 381.15609741]
[-20.59392929 371.20101929]
[-19.16543198 360.82022095]
[-13.49984932 351.90924072]
[-4.56983280 346.12350464]
[6.03856087 344.57092285]
[11.71760941 330.68756104]
[17.39665794 316.80416870]
[23.07570648 302.92077637]
[28.75475502 289.03738403]
[34.43380356 275.15399170]
[40.11285400 261.27062988]
[45.79190063 247.38723755]
[51.47095108 233.50384521]
[49.12820816 218.79463196]
[61.51432800 208.95112610]
[67.19337463 195.06774902]
[71.87895966 180.81834412]
[75.54772949 166.27392578]
[79.21650696 151.72950745]
[82.88527679 137.18508911]
[86.55405426 122.64067841]
[79.69146729 119.20094299]
[73.77458191 113.64851379]
[69.45571136 106.26623535]
[67.29615784 97.53705597]
[67.70562744 88.11337280]
[70.89214325 78.76830292]
[76.82781982 70.33251190]
[85.23448944 63.62185669]
[86.81996918 48.70588303]
[88.40544891 33.78990936]
[89.99092102 18.87393570]
[91.57640076 3.95796227]
[82.55735779 -14.04825020]
[94.53996277 -29.20174599]
[95.59804535 -44.16437912]
[96.65612793 -59.12701797]
[91.74212646 -75.35319519]
[105.97385406 -84.56700897]
[118.76731873 -73.44210815]
[111.61876678 -58.06893158]
[110.56068420 -43.10629654]
[109.50259399 -28.14366150]
[116.89031219 -21.03109360]
[119.17562866 -10.80838299]
[115.36339569 -0.81589764]
[106.49237823 5.54344082]
[104.90689850 20.45941353]
[103.32141876 35.37538910]
[101.73593903 50.29135895]
[100.15045929 65.20733643]
[106.90361786 68.46997833]
[120.40993500 74.99526978]
[127.16309357 78.25791168]
[137.86288452 67.74532318]
[148.56266785 57.23273087]
[159.26246643 46.72014236]
[163.12271118 30.78180695]
[178.93002319 26.41593552]
[190.42318726 38.11376190]
[185.77902222 53.84156418]
[169.77505493 57.41992950]
[159.07525635 67.93251801]
[148.37547302 78.44510651]
[137.67568970 88.95769501]
[126.65449524 119.10877228]
[101.09847260 126.30944824]
[97.42969513 140.85386658]
[93.76092529 155.39828491]
[90.09214783 169.94270325]
[86.42337799 184.48712158]
[98.90082550 176.16166687]
[113.89369965 176.62405396]
[125.83440399 185.70257568]
[130.28877258 200.02592468]
[125.60269165 214.27516174]
[113.51631927 223.15882874]
[98.51792145 223.37800598]
[86.17713165 214.85127258]
[81.07675934 200.74679565]
[75.39771271 214.63017273]
[77.33425140 230.33242798]
[65.35433960 239.18289185]
[59.67528915 253.06628418]
[53.99623871 266.94967651]
[48.31718826 280.83306885]
[42.63814163 294.71643066]
[36.95909119 308.59982300]
[31.28004456 322.48321533]
[25.60099602 336.36660767]
[19.92194748 350.24996948]
[28.68125725 368.30068970]
[21.49787521 386.70840454]
[3.39335346 393.83224487]
[-1.54297972 407.99673462]
[-6.47931290 422.16119385]
[-11.41564560 436.32568359]
[-16.35197830 450.49017334]
[-21.28831291 464.65466309]
[-26.22464561 478.81915283]
[-31.03578949 493.02664185]
[-35.72137451 507.27603149]
[-40.40695572 521.52545166]
[-45.09253693 535.77484131]
[-40.06015778 555.27459717]
[-54.96047974 567.57061768]
[-59.14025879 581.97650146]
[-63.06514740 596.45391846]
[-66.73392487 610.99835205]
[-56.40385056 626.85119629]
[-60.83496094 644.91870117]
[-76.77232361 653.88073730]
[-79.92551422 668.54553223]
[-83.07871246 683.21038818]
[-86.23190308 697.87524414]
[-74.43934631 714.10754395]
[-78.27912140 733.49053955]
[-94.85160065 743.68249512]
[-97.22425842 758.49365234]
[-99.59692383 773.30480957]
[-101.96958160 788.11596680]
[-104.34224701 802.92718506]
[-106.71490479 817.73834229]
[-109.08757019 832.54949951]
[-96.52727509 841.22137451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[16 171]
[17 170]
[23 167]
[24 166]
[25 165]
[26 164]
[31 161]
[32 160]
[35 159]
[36 158]
[40 156]
[41 155]
[42 154]
[43 153]
[45 152]
[46 151]
[47 150]
[48 149]
[49 148]
[50 147]
[51 146]
[57 143]
[58 142]
[59 141]
[60 140]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
[67 133]
[68 132]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[87 95]
[88 94]
[89 93]
[106 117]
[107 116]
[108 115]
[109 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
