%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGGGGAUGGGGUCCGCCCGCGGCGUUGGGCGCGCUCGCCAGCCCAGGGGUCGCCAUGACCGAGUGGCCCAGGCCCGAGCGAAGCCCGCGCGCGGUCACAUGGGAGCCCGACACCAUUUGGAGGAGAUUCAGAGAAGCCCCUGAUUGCUGAUUCUGUCCGCCUGCCACACCGGCUCUGUCCGGAGCCACUGGGACUCGGGAUCCAGUCCACACACACCCCUCAGAGGGGCACUGUGGCCAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[-62.10624313 73.67858887]
[-68.03250122 68.15918732]
[-72.86436462 61.67097473]
[-76.44677734 54.42737961]
[-78.66573334 46.66597366]
[-93.66091919 47.04596329]
[-102.50493622 59.65903091]
[-116.91172028 64.58832550]
[-131.28851318 60.14179230]
[-140.18377686 48.22489166]
[-155.17895508 48.60488129]
[-170.17414856 48.98487473]
[-185.16932678 49.36486435]
[-198.76905823 57.44927597]
[-211.68826294 50.03687668]
[-226.68344116 50.41686630]
[-241.67863464 50.79685593]
[-255.53456116 67.66970825]
[-277.05661011 68.70140839]
[-292.05889893 53.63687897]
[-306.99996948 54.96524429]
[-321.94104004 56.29361343]
[-336.88208008 57.62197876]
[-351.82315063 58.95034790]
[-360.07040405 62.81920242]
[-366.96170044 60.19968033]
[-381.91839600 61.33867645]
[-396.87509155 62.47767639]
[-405.17068481 66.24174500]
[-412.02825928 63.53514481]
[-426.99816895 64.48458862]
[-441.96810913 65.43402863]
[-456.93801880 66.38347626]
[-472.04473877 76.93243408]
[-487.44729614 68.50093079]
[-502.40399170 69.63993073]
[-517.36065674 70.77892303]
[-532.31738281 71.91792297]
[-547.27404785 73.05692291]
[-562.23077393 74.19591522]
[-568.80639648 82.82176971]
[-578.83251953 86.34508514]
[-588.93304443 83.83457184]
[-595.84509277 76.34916687]
[-610.82586670 77.10890961]
[-625.80664062 77.86864471]
[-632.59869385 86.32514954]
[-642.71081543 89.59334564]
[-652.74450684 86.82775879]
[-659.46472168 79.16966248]
[-674.45996094 79.54965210]
[-689.45513916 79.92964172]
[-704.45031738 80.30963135]
[-719.44549561 80.68962860]
[-734.44067383 81.06961823]
[-749.43585205 81.44960785]
[-757.35699463 94.68814850]
[-771.18811035 101.52214050]
[-786.51580811 99.77088928]
[-798.44897461 89.99320984]
[-803.17980957 75.30911255]
[-799.19873047 60.40425873]
[-787.77612305 50.03471756]
[-772.55688477 47.50938034]
[-758.39733887 53.63407135]
[-749.81585693 66.45442200]
[-734.82067871 66.07443237]
[-719.82550049 65.69443512]
[-704.83032227 65.31444550]
[-689.83508301 64.93445587]
[-674.83990479 64.55446625]
[-659.84472656 64.17447662]
[-644.10522461 52.91866302]
[-626.56634521 62.88789749]
[-611.58563232 62.12815857]
[-596.60485840 61.36841965]
[-581.15551758 49.71749878]
[-563.36975098 59.23922348]
[-548.41302490 58.10022354]
[-533.45635986 56.96122742]
[-518.49969482 55.82223129]
[-503.54296875 54.68323517]
[-488.58627319 53.54423904]
[-480.48501587 44.58164215]
[-468.05041504 43.49722290]
[-457.88748169 51.41355133]
[-442.91754150 50.46410751]
[-427.94763184 49.51466370]
[-412.97769165 48.56522369]
[-398.01409912 47.52098083]
[-383.05740356 46.38198471]
[-368.10070801 45.24298859]
[-353.15151978 44.00928116]
[-338.21044922 42.68091202]
[-323.26940918 41.35254669]
[-308.32833862 40.02417755]
[-293.38726807 38.69581223]
[-290.43316650 30.67311668]
[-285.01745605 24.00204849]
[-277.69958496 19.41628265]
[-269.25018311 17.43175316]
[-260.56973267 18.28873253]
[-252.59260559 21.92311859]
[-246.18664551 27.97032356]
[-242.05862427 35.80167007]
[-227.06343079 35.42168045]
[-212.06825256 35.04169083]
[-199.54107666 26.98445702]
[-185.54931641 34.36967850]
[-170.55413818 33.98968506]
[-155.55894470 33.60969543]
[-140.56376648 33.22970581]
[-132.28350830 20.87756157]
[-118.15037537 15.70856285]
[-103.51242065 19.90184021]
[-94.04090881 32.05077744]
[-79.04572296 31.67078590]
[-74.21777344 16.97117805]
[-64.66593170 4.79949665]
[-51.53557587 -3.38471627]
[-36.40120697 -6.60006952]
[-21.07763290 -4.46100044]
[-14.13268280 -17.75640106]
[-14.60128307 -33.57066727]
[-1.85056472 -41.26926804]
[5.09438515 -54.56466675]
[12.03933430 -67.86006927]
[11.71019840 -72.13492584]
[12.65060806 -75.91862488]
[14.55401421 -78.87525177]
[17.03681564 -80.80140686]
[19.68768501 -81.63975525]
[27.29712105 -94.56633759]
[34.90655899 -107.49291229]
[42.51599503 -120.41949463]
[50.12543106 -133.34606934]
[49.86382675 -151.76956177]
[65.48268890 -159.79325867]
[72.92776489 -172.81518555]
[80.37284851 -185.83712769]
[73.87913513 -199.93006897]
[76.94224548 -215.14181519]
[88.38436127 -225.62310791]
[103.80574799 -227.34370422]
[117.27657318 -219.64196777]
[123.61702728 -205.47940063]
[120.38906860 -190.30178833]
[108.83392334 -179.94523621]
[93.39478302 -178.39204407]
[85.94969940 -165.37010193]
[78.50462341 -152.34817505]
[81.38166046 -140.61441040]
[75.30584717 -129.71119690]
[63.05201340 -125.73664093]
[55.44257355 -112.81005859]
[47.83313751 -99.88347626]
[40.22370148 -86.95690155]
[32.61426544 -74.03031921]
[25.33473587 -60.91511917]
[18.38978577 -47.61971664]
[11.44483566 -34.32431793]
[12.41018581 -19.46102905]
[-0.83728188 -10.81145096]
[-7.78223133 2.48394918]
[7.76837635 23.55011177]
[8.90794373 49.89202499]
[22.53803444 56.15465927]
[36.16812897 62.41729736]
[49.79821777 68.67993164]
[63.42831039 74.94256592]
[77.05840302 81.20520020]
[89.85132599 62.44106674]
[116.81118774 54.87539291]
[147.58154297 67.88940430]
[162.48416138 66.18296814]
[177.38677979 64.47652435]
[192.28939819 62.77008820]
[207.19201660 61.06364822]
[222.09463501 59.35721207]
[234.94244385 49.16574478]
[250.09082031 55.44733429]
[251.95643616 71.74002075]
[238.62008667 81.28327942]
[223.80107117 74.25982666]
[208.89845276 75.96627045]
[193.99583435 77.67270660]
[179.09321594 79.37914276]
[164.19059753 81.08558655]
[149.28797913 82.79202271]
[148.10533142 90.19819641]
[145.74005127 105.01053619]
[144.55740356 112.41670227]
[158.18750000 118.67933655]
[171.85699463 124.85552216]
[185.56532288 130.94499207]
[199.27365112 137.03446960]
[212.98197937 143.12394714]
[226.69030762 149.21342468]
[235.77880859 149.83309937]
[240.53294373 155.46783447]
[254.16304016 161.73046875]
[271.08001709 162.84930420]
[274.68801880 179.41490173]
[259.76858521 187.46768188]
[247.90040588 175.36056519]
[234.27030945 169.09793091]
[220.60083008 162.92175293]
[206.89250183 156.83227539]
[193.18417358 150.74279785]
[179.47584534 144.65332031]
[165.76751709 138.56384277]
[158.39678955 138.72030640]
[151.92486572 132.30943298]
[138.29476929 126.04679871]
[133.40948486 131.73748779]
[144.79069519 141.50825500]
[135.01972961 152.88931274]
[123.63889313 143.11885071]
[118.75360107 148.80953979]
[127.00799561 161.33412170]
[135.26239014 173.85868835]
[143.51676941 186.38327026]
[151.77116394 198.90785217]
[165.53584290 208.80581665]
[159.83512878 224.77261353]
[142.91423035 223.71472168]
[139.24658203 207.16224670]
[130.99220276 194.63766479]
[122.73780823 182.11308289]
[114.48341370 169.58851624]
[106.22902679 157.06393433]
[82.46246338 147.32128906]
[68.21611023 129.74320984]
[64.91964722 110.41506195]
[70.79576874 94.83528900]
[57.16567612 88.57265472]
[43.53558350 82.31002045]
[29.90549278 76.04738617]
[16.27540016 69.78475189]
[2.64530849 63.52211761]
[-2.57999539 69.81118011]
[-8.84445572 75.05243683]
[-15.94180202 79.07736969]
[-23.63907051 81.75746155]
[-31.68424606 83.00827789]
[-39.81451797 82.79209900]
[-47.76486588 81.11911774]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 117]
[6 116]
[10 112]
[11 111]
[12 110]
[13 109]
[15 107]
[16 106]
[17 105]
[20 97]
[21 96]
[22 95]
[23 94]
[24 93]
[26 92]
[27 91]
[28 90]
[30 89]
[31 88]
[32 87]
[33 86]
[35 83]
[36 82]
[37 81]
[38 80]
[39 79]
[40 78]
[44 76]
[45 75]
[46 74]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[122 164]
[123 163]
[125 161]
[126 160]
[127 159]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[138 151]
[139 150]
[140 149]
[166 240]
[167 239]
[168 238]
[169 237]
[170 236]
[171 235]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
[192 214]
[193 213]
[194 211]
[195 210]
[196 209]
[197 208]
[198 207]
[200 206]
[201 205]
[219 231]
[220 230]
[221 229]
[222 228]
[223 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
