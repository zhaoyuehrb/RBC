%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PLGLB2)
} def

/sequence { (\
UCUCAUGUAAGUCAACAACAUCCUGGGAUUGGGACACACUUUCUGGGCACUGCUGGCCAGUCCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.021845596 ubox
1 27 0.063226202 ubox
1 28 0.852299503 ubox
1 34 0.019347193 ubox
2 11 0.031949401 ubox
2 25 0.027610589 ubox
2 26 0.080435864 ubox
2 27 0.932599772 ubox
2 33 0.021476567 ubox
3 10 0.030819467 ubox
3 25 0.076611394 ubox
3 26 0.932339484 ubox
3 27 0.011775256 ubox
3 28 0.015574902 ubox
3 32 0.021470612 ubox
4 25 0.932529913 ubox
4 26 0.018909374 ubox
4 27 0.016596729 ubox
4 31 0.021485946 ubox
5 12 0.018119584 ubox
5 21 0.419184174 ubox
5 24 0.835663011 ubox
5 30 0.019909404 ubox
6 11 0.020876855 ubox
6 14 0.122565737 ubox
6 17 0.517805431 ubox
6 20 0.714918539 ubox
6 28 0.004137755 ubox
6 36 0.004489274 ubox
6 38 0.010254892 ubox
7 13 0.125833289 ubox
7 16 0.527331515 ubox
7 19 0.720622278 ubox
7 21 0.080257572 ubox
7 24 0.005824036 ubox
7 35 0.005156156 ubox
7 37 0.011784666 ubox
7 39 0.011186177 ubox
8 15 0.511589383 ubox
8 18 0.701866613 ubox
8 20 0.078999283 ubox
8 34 0.004890359 ubox
8 36 0.011111889 ubox
8 38 0.011054687 ubox
9 24 0.003714283 ubox
9 41 0.003918561 ubox
10 24 0.021356677 ubox
10 29 0.003313716 ubox
10 30 0.039975440 ubox
10 40 0.004509321 ubox
11 19 0.237313400 ubox
11 21 0.023898131 ubox
11 23 0.027752468 ubox
11 29 0.062657463 ubox
11 35 0.019432505 ubox
11 39 0.004570109 ubox
11 57 0.004692504 ubox
12 18 0.229775672 ubox
12 20 0.024086524 ubox
12 26 0.016710408 ubox
12 27 0.006031043 ubox
12 28 0.067951172 ubox
12 32 0.004945577 ubox
12 34 0.019459802 ubox
12 38 0.004417745 ubox
12 56 0.004700096 ubox
13 25 0.020801652 ubox
13 26 0.007541377 ubox
13 27 0.068806964 ubox
13 31 0.005207183 ubox
13 33 0.019388385 ubox
13 55 0.004707383 ubox
14 24 0.019754693 ubox
14 30 0.005261225 ubox
14 54 0.004649245 ubox
15 29 0.004895776 ubox
16 25 0.073535143 ubox
16 31 0.018244788 ubox
16 52 0.004524862 ubox
17 24 0.068978088 ubox
17 30 0.017791864 ubox
17 51 0.004394814 ubox
18 29 0.012549085 ubox
19 25 0.022439668 ubox
20 24 0.018372631 ubox
20 29 0.027059974 ubox
21 27 0.004866116 ubox
21 28 0.034838500 ubox
21 33 0.003257972 ubox
21 34 0.021000876 ubox
22 26 0.007030616 ubox
22 27 0.036079185 ubox
22 32 0.006155877 ubox
22 33 0.023379678 ubox
22 47 0.004628913 ubox
23 31 0.006177637 ubox
23 32 0.023394172 ubox
23 46 0.004640547 ubox
24 31 0.022752469 ubox
24 45 0.004620053 ubox
24 65 0.290159297 ubox
25 30 0.014103944 ubox
25 43 0.006294897 ubox
25 44 0.005114024 ubox
25 64 0.313652227 ubox
26 42 0.006337440 ubox
26 43 0.005497498 ubox
26 63 0.313708828 ubox
27 41 0.006385745 ubox
27 42 0.005454559 ubox
27 62 0.313707760 ubox
28 40 0.006464177 ubox
28 41 0.005331772 ubox
28 61 0.313488422 ubox
29 60 0.311486317 ubox
29 66 0.806260100 ubox
29 67 0.035091065 ubox
30 38 0.018462551 ubox
30 45 0.003944471 ubox
30 59 0.310734374 ubox
30 65 0.927773694 ubox
30 66 0.032444728 ubox
31 35 0.003247793 ubox
31 37 0.020682954 ubox
31 40 0.019566365 ubox
31 41 0.007350963 ubox
31 43 0.011578348 ubox
31 44 0.016237195 ubox
31 58 0.310046350 ubox
31 64 0.948377417 ubox
32 39 0.021534829 ubox
32 40 0.009773247 ubox
32 42 0.011752471 ubox
32 43 0.018771490 ubox
32 44 0.008713101 ubox
32 54 0.007076639 ubox
32 57 0.309122381 ubox
32 58 0.018610575 ubox
32 63 0.948426564 ubox
33 39 0.016263476 ubox
33 40 0.005755082 ubox
33 41 0.015329274 ubox
33 42 0.022675335 ubox
33 43 0.020926348 ubox
33 50 0.003651594 ubox
33 53 0.028881153 ubox
33 57 0.024578583 ubox
33 62 0.948399320 ubox
34 40 0.015064520 ubox
34 41 0.021662954 ubox
34 42 0.020262683 ubox
34 61 0.945372115 ubox
35 45 0.024635394 ubox
35 52 0.071583509 ubox
35 55 0.163913580 ubox
35 60 0.702220441 ubox
36 44 0.023965613 ubox
36 51 0.069000160 ubox
36 54 0.158638620 ubox
36 61 0.011887453 ubox
37 45 0.086768715 ubox
37 52 0.168912780 ubox
37 55 0.009493238 ubox
37 60 0.013998496 ubox
38 44 0.080735783 ubox
38 51 0.162031891 ubox
38 54 0.008284537 ubox
38 61 0.019903502 ubox
39 46 0.117533978 ubox
39 47 0.102243561 ubox
39 56 0.033935530 ubox
39 60 0.028277433 ubox
40 45 0.115271243 ubox
40 46 0.100463065 ubox
40 47 0.024949861 ubox
40 55 0.033505910 ubox
40 56 0.005493170 ubox
40 59 0.031899224 ubox
40 60 0.005229759 ubox
41 45 0.074134848 ubox
41 46 0.021209874 ubox
41 47 0.014972337 ubox
41 55 0.005911186 ubox
41 56 0.005902176 ubox
41 59 0.014012150 ubox
41 60 0.005342649 ubox
41 67 0.004112771 ubox
42 46 0.012902060 ubox
42 55 0.005562375 ubox
42 56 0.025646944 ubox
42 59 0.013078916 ubox
42 66 0.005441649 ubox
43 55 0.026328758 ubox
43 56 0.176507388 ubox
43 60 0.636796958 ubox
44 52 0.006408637 ubox
44 55 0.174805231 ubox
44 59 0.935979468 ubox
44 65 0.040217815 ubox
45 51 0.011076262 ubox
45 54 0.176458358 ubox
45 58 0.941154668 ubox
45 64 0.044067507 ubox
46 50 0.011776158 ubox
46 53 0.176371352 ubox
46 54 0.145302641 ubox
46 57 0.940530330 ubox
46 58 0.110109211 ubox
46 63 0.044076814 ubox
47 53 0.155307136 ubox
47 57 0.115045138 ubox
47 62 0.044069141 ubox
48 52 0.155656187 ubox
48 55 0.938236202 ubox
48 56 0.117943586 ubox
49 54 0.799620667 ubox
49 61 0.043965744 ubox
50 56 0.009569862 ubox
50 60 0.044126396 ubox
51 55 0.009096091 ubox
51 59 0.044139164 ubox
52 58 0.043921515 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
3 26 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 20 0.9500000 lbox
7 19 0.9500000 lbox
8 18 0.9500000 lbox
29 66 0.9500000 lbox
30 65 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
33 62 0.9500000 lbox
34 61 0.9500000 lbox
35 60 0.9500000 lbox
44 59 0.9500000 lbox
45 58 0.9500000 lbox
46 57 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
