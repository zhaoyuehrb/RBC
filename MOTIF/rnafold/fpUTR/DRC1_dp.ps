%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DRC1)
} def

/sequence { (\
AACGGUUUGUUCCUAGCAACCAGCCUGAGGUCUGGAGGUGGUGCGGAGGGAGCCGCCUAGGGACCAGGGACUCCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004679455 ubox
1 11 0.025614369 ubox
2 7 0.004212077 ubox
2 10 0.032588417 ubox
3 9 0.033342163 ubox
3 27 0.016831935 ubox
3 55 0.877956369 ubox
3 76 0.079900932 ubox
4 8 0.020614971 ubox
4 12 0.013087813 ubox
4 13 0.141117347 ubox
4 14 0.008323008 ubox
4 21 0.317475584 ubox
4 25 0.065475601 ubox
4 26 0.005502696 ubox
4 54 0.897245163 ubox
4 57 0.061553102 ubox
4 65 0.007658795 ubox
4 72 0.015903212 ubox
4 73 0.006725319 ubox
4 74 0.084138454 ubox
4 75 0.076862333 ubox
4 78 0.185409987 ubox
5 11 0.012503167 ubox
5 12 0.141052457 ubox
5 13 0.008645544 ubox
5 17 0.006384305 ubox
5 20 0.317874117 ubox
5 24 0.065650815 ubox
5 25 0.004796147 ubox
5 53 0.897298007 ubox
5 56 0.061621482 ubox
5 64 0.007853250 ubox
5 71 0.017577956 ubox
5 72 0.004934459 ubox
5 73 0.084176434 ubox
5 74 0.076378091 ubox
5 77 0.186750962 ubox
6 16 0.006376356 ubox
6 19 0.259723473 ubox
6 23 0.065506445 ubox
6 52 0.896853170 ubox
6 55 0.060606110 ubox
6 63 0.007400555 ubox
6 68 0.004244268 ubox
6 70 0.017574745 ubox
6 76 0.184310751 ubox
7 15 0.006517069 ubox
7 16 0.007132970 ubox
7 18 0.183460776 ubox
7 19 0.184102631 ubox
7 22 0.058187181 ubox
7 23 0.004634572 ubox
7 50 0.003423872 ubox
7 51 0.895558563 ubox
7 62 0.006393305 ubox
7 66 0.003809988 ubox
7 67 0.005527256 ubox
7 69 0.017044094 ubox
8 15 0.012208419 ubox
8 18 0.260629437 ubox
8 22 0.005809530 ubox
8 45 0.003168902 ubox
8 49 0.004529783 ubox
8 50 0.894186995 ubox
8 61 0.004103684 ubox
8 66 0.007292686 ubox
8 68 0.015597376 ubox
9 14 0.011500661 ubox
9 17 0.318862120 ubox
9 20 0.057259100 ubox
9 21 0.005652000 ubox
9 44 0.005171100 ubox
9 53 0.056772976 ubox
9 64 0.102602548 ubox
9 65 0.005933614 ubox
9 71 0.218254405 ubox
10 16 0.315798777 ubox
10 19 0.057316901 ubox
10 43 0.005078677 ubox
10 47 0.004919290 ubox
10 48 0.889509104 ubox
10 51 0.041013009 ubox
10 52 0.056799077 ubox
10 63 0.103175220 ubox
10 70 0.218366969 ubox
11 15 0.240714709 ubox
11 18 0.051672350 ubox
11 46 0.004484803 ubox
11 47 0.895532140 ubox
11 49 0.003854891 ubox
11 50 0.045481129 ubox
11 51 0.057224996 ubox
11 62 0.103277729 ubox
11 63 0.005507840 ubox
11 69 0.218123860 ubox
11 70 0.013704868 ubox
12 41 0.005170479 ubox
12 45 0.005125885 ubox
12 46 0.895782162 ubox
12 48 0.004226169 ubox
12 49 0.051937520 ubox
12 50 0.056987404 ubox
12 61 0.103507312 ubox
12 62 0.006112779 ubox
12 68 0.218284947 ubox
12 69 0.016114381 ubox
13 40 0.005178292 ubox
13 41 0.005610221 ubox
13 45 0.891569005 ubox
13 46 0.022803479 ubox
13 48 0.052308484 ubox
13 49 0.056642489 ubox
13 60 0.103507132 ubox
13 61 0.006093912 ubox
13 67 0.218221528 ubox
13 68 0.016095343 ubox
14 27 0.036990392 ubox
14 28 0.004198485 ubox
14 40 0.010396091 ubox
14 43 0.303153161 ubox
14 45 0.028077760 ubox
14 47 0.051111183 ubox
14 48 0.053202468 ubox
14 59 0.102485166 ubox
14 60 0.005860194 ubox
14 66 0.205580876 ubox
14 67 0.015232646 ubox
14 76 0.004864077 ubox
15 26 0.058417767 ubox
15 39 0.009811597 ubox
15 42 0.303632278 ubox
15 58 0.092665730 ubox
15 75 0.005503482 ubox
16 24 0.195695206 ubox
16 25 0.047853976 ubox
16 39 0.156450233 ubox
16 42 0.121808443 ubox
16 44 0.817115074 ubox
16 57 0.082580420 ubox
16 74 0.005537632 ubox
16 77 0.158740362 ubox
17 23 0.199381687 ubox
17 27 0.031024659 ubox
17 38 0.160219232 ubox
17 40 0.300537692 ubox
17 41 0.120356101 ubox
17 43 0.820141111 ubox
17 55 0.004038189 ubox
17 76 0.159097592 ubox
18 26 0.029844495 ubox
18 39 0.295178195 ubox
18 42 0.580898052 ubox
18 75 0.153029025 ubox
19 39 0.105251251 ubox
19 42 0.585664304 ubox
20 35 0.351862345 ubox
20 38 0.116676133 ubox
20 41 0.823602129 ubox
21 27 0.031265013 ubox
21 29 0.003217740 ubox
21 34 0.352747436 ubox
21 37 0.115740815 ubox
21 40 0.822253701 ubox
21 76 0.017272187 ubox
22 26 0.025403814 ubox
22 33 0.353375876 ubox
22 39 0.668254234 ubox
22 72 0.267620376 ubox
22 75 0.028076861 ubox
23 31 0.057884324 ubox
23 32 0.349922126 ubox
23 39 0.479138790 ubox
23 71 0.284706493 ubox
23 74 0.028766139 ubox
23 77 0.030599857 ubox
24 30 0.351840916 ubox
24 35 0.174536019 ubox
24 38 0.813532503 ubox
24 68 0.075054244 ubox
24 69 0.339375239 ubox
24 76 0.030466612 ubox
25 29 0.349318527 ubox
25 34 0.174880102 ubox
25 35 0.019193808 ubox
25 37 0.814262862 ubox
25 38 0.007073579 ubox
25 67 0.075617140 ubox
25 68 0.339604622 ubox
25 69 0.059262669 ubox
26 34 0.020748700 ubox
26 36 0.809879147 ubox
26 37 0.007152452 ubox
26 66 0.071555554 ubox
26 67 0.337774400 ubox
26 68 0.059415707 ubox
27 33 0.035154841 ubox
27 65 0.035582834 ubox
27 73 0.025716477 ubox
28 72 0.025730690 ubox
29 65 0.420502089 ubox
29 71 0.025161944 ubox
30 64 0.423176894 ubox
31 62 0.006488474 ubox
31 63 0.423115760 ubox
31 68 0.022645129 ubox
32 61 0.012180242 ubox
32 62 0.423018812 ubox
32 67 0.024858015 ubox
32 68 0.003867507 ubox
33 60 0.015724247 ubox
33 61 0.417185433 ubox
33 66 0.025119437 ubox
34 65 0.025240535 ubox
35 64 0.025218486 ubox
36 58 0.418141980 ubox
37 57 0.427554872 ubox
37 65 0.006901175 ubox
38 56 0.427859945 ubox
38 64 0.006908545 ubox
39 55 0.427689641 ubox
39 59 0.019415037 ubox
39 63 0.006144948 ubox
40 54 0.427786227 ubox
40 57 0.006750944 ubox
40 58 0.023087695 ubox
40 65 0.006449519 ubox
41 53 0.426927546 ubox
41 56 0.006538737 ubox
41 57 0.025607350 ubox
41 64 0.006455787 ubox
42 52 0.422572584 ubox
42 55 0.006222476 ubox
42 63 0.006412136 ubox
43 53 0.028203077 ubox
43 54 0.004373574 ubox
43 56 0.086833874 ubox
44 52 0.037813111 ubox
44 55 0.087188323 ubox
45 54 0.087276848 ubox
45 57 0.010156751 ubox
45 78 0.006748476 ubox
46 53 0.087039490 ubox
46 56 0.010158685 ubox
46 77 0.006798817 ubox
47 58 0.005985498 ubox
48 54 0.010197712 ubox
48 57 0.006609599 ubox
48 75 0.007053774 ubox
49 53 0.010058078 ubox
49 56 0.006608694 ubox
49 65 0.005606263 ubox
49 74 0.007763654 ubox
50 64 0.005630997 ubox
50 73 0.007771973 ubox
51 72 0.007774305 ubox
52 71 0.007755672 ubox
53 61 0.006683463 ubox
53 69 0.005773281 ubox
54 60 0.006895253 ubox
54 61 0.003577399 ubox
54 68 0.005657180 ubox
55 77 0.065179842 ubox
56 62 0.281649624 ubox
56 68 0.047781993 ubox
56 69 0.075873601 ubox
56 76 0.068261557 ubox
57 61 0.280528229 ubox
57 67 0.048012916 ubox
57 68 0.076094509 ubox
57 69 0.003267801 ubox
58 66 0.046815295 ubox
58 67 0.075519698 ubox
58 68 0.003196364 ubox
58 76 0.154419802 ubox
59 72 0.004627138 ubox
59 75 0.174017332 ubox
60 71 0.004953794 ubox
60 72 0.006504344 ubox
60 73 0.025473127 ubox
60 74 0.174827132 ubox
60 75 0.157725183 ubox
60 78 0.385645388 ubox
61 71 0.007092028 ubox
61 72 0.026780605 ubox
61 73 0.173414639 ubox
61 74 0.170312804 ubox
61 77 0.387820975 ubox
61 78 0.465420437 ubox
62 71 0.090224171 ubox
62 72 0.129425621 ubox
62 73 0.171585332 ubox
62 77 0.469038223 ubox
63 72 0.169891086 ubox
65 76 0.857812675 ubox
66 72 0.014322397 ubox
66 75 0.867374984 ubox
67 71 0.017647023 ubox
67 73 0.005458237 ubox
67 74 0.868516231 ubox
67 75 0.031750325 ubox
67 78 0.033450802 ubox
68 72 0.004233326 ubox
68 73 0.865592417 ubox
68 74 0.037245290 ubox
68 75 0.007641340 ubox
68 77 0.033740122 ubox
68 78 0.009522050 ubox
69 73 0.039249386 ubox
69 74 0.010709051 ubox
69 77 0.010488218 ubox
3 55 0.9500000 lbox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
20 41 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
65 76 0.9500000 lbox
66 75 0.9500000 lbox
67 74 0.9500000 lbox
68 73 0.9500000 lbox
showpage
end
%%EOF
