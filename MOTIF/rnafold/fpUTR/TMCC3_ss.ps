%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUACUGACAUUUGUAUUGGGUACAGUGCAGGGCGUGGAGUUUCUCUGAGACAAACACAGGAAUACCCCGAGAUAAUGUGAGCAGUAUCUCCAAAGUCCAGGCUGAGUCAUAUGGUAGGUGCUGUUUGGAAUAUCUAGCCUGCCUGCCUUGCAGAUUCAAAUGCCUCGGGCAGGAGGGUGAGCUAGCUGCCGAUCCUGCUCUGCUCCUGGGUUUGCUGUGUGGCCCUUGGUAGAACGUCAUGAC\
) } def
/len { sequence length } bind def

/coor [
[-98.57669830 710.92864990]
[-90.88880920 723.80871582]
[-88.89804077 738.67602539]
[-92.92652130 753.12493896]
[-102.32240295 764.81756592]
[-115.56539154 771.86193848]
[-130.51269531 773.11828613]
[-144.74572754 768.38323975]
[-155.96153259 758.42303467]
[-162.34530640 744.84924316]
[-162.86369324 729.85565186]
[-170.72166443 742.63269043]
[-178.57963562 755.40972900]
[-186.43759155 768.18676758]
[-194.29556274 780.96374512]
[-202.15353394 793.74078369]
[-210.01150513 806.51782227]
[-217.86947632 819.29486084]
[-225.72743225 832.07183838]
[-225.64187622 848.47076416]
[-239.93554688 856.50958252]
[-253.90437317 847.91864014]
[-253.17840576 831.53558350]
[-238.50445557 824.21386719]
[-230.64649963 811.43688965]
[-222.78852844 798.65985107]
[-214.93055725 785.88281250]
[-207.07258606 773.10577393]
[-199.21461487 760.32879639]
[-191.35665894 747.55175781]
[-183.49868774 734.77471924]
[-175.64071655 721.99768066]
[-175.54902649 711.50561523]
[-166.41511536 704.03405762]
[-160.60830688 690.20361328]
[-154.80148315 676.37316895]
[-148.99465942 662.54272461]
[-143.18783569 648.71234131]
[-145.39483643 633.98211670]
[-132.91848755 624.25323486]
[-127.11166382 610.42285156]
[-121.30484009 596.59240723]
[-115.49801636 582.76196289]
[-121.35189056 569.11395264]
[-115.65996552 555.00524902]
[-101.30500793 548.95770264]
[-95.49818420 535.12725830]
[-89.69136047 521.29681396]
[-83.88453674 507.46640015]
[-78.07771301 493.63595581]
[-87.19674683 481.85848999]
[-89.20967102 466.99902344]
[-83.47664642 453.03482056]
[-71.44473267 443.75418091]
[-56.28408432 441.72888184]
[-50.47726440 427.89843750]
[-44.67044067 414.06802368]
[-38.86361694 400.23757935]
[-33.05679321 386.40716553]
[-27.24997139 372.57672119]
[-29.45698357 357.84652710]
[-16.98062706 348.11764526]
[-11.17380428 334.28723145]
[-11.48159981 326.91998291]
[-5.20283365 320.31744385]
[0.78085214 306.56262207]
[6.76453781 292.80776978]
[12.74822330 279.05294800]
[9.83693695 261.73739624]
[24.75692177 250.92727661]
[30.56374550 237.09684753]
[36.37056732 223.26641846]
[30.65483665 216.90260315]
[27.28646469 208.99276733]
[26.65300941 200.37548828]
[28.85045624 191.97424316]
[33.66991043 184.69842529]
[40.61711121 179.34495544]
[48.96302795 176.51101685]
[57.82030869 176.52749634]
[64.50131989 163.09753418]
[71.18232727 149.66755676]
[77.86334229 136.23759460]
[84.54434967 122.80761719]
[91.22536469 109.37764740]
[85.21760559 104.16127014]
[82.77533722 95.23656464]
[86.00358582 85.17886353]
[95.16851044 77.61580658]
[98.97333527 63.10638046]
[102.77815247 48.59695816]
[106.58296967 34.08753586]
[100.57452393 25.05484390]
[100.51747131 14.42574406]
[106.18988037 5.69698620]
[115.52435303 1.60823369]
[119.69998169 -12.79885197]
[123.87561035 -27.20593643]
[128.05123901 -41.61302185]
[132.13441467 -56.04658508]
[136.12496948 -70.50602722]
[140.11552429 -84.96546936]
[144.10607910 -99.42491150]
[147.81779480 -113.95842743]
[151.24929810 -128.56065369]
[154.68080139 -143.16287231]
[158.11230469 -157.76509094]
[161.54380798 -172.36730957]
[164.97531128 -186.96952820]
[152.80551147 -198.17848206]
[147.98301697 -213.90704346]
[151.73536682 -229.82810974]
[162.94458008 -241.61152649]
[178.47793579 -246.10171509]
[181.72192383 -260.74673462]
[184.96591187 -275.39175415]
[188.20989990 -290.03677368]
[191.45388794 -304.68179321]
[194.69787598 -319.32681274]
[197.94186401 -333.97183228]
[200.99778748 -348.65722656]
[203.86517334 -363.38061523]
[206.73255920 -378.10400391]
[209.59992981 -392.82739258]
[197.61738586 -402.34985352]
[191.44328308 -416.35482788]
[192.49638367 -431.62405396]
[200.53469849 -444.64880371]
[213.71109009 -452.43606567]
[228.99769592 -453.19641113]
[242.88179016 -446.75509644]
[252.17289734 -434.59228516]
[254.73597717 -419.50289917]
[249.98208618 -404.95440674]
[239.00360107 -394.28988647]
[224.32331848 -389.96002197]
[221.45593262 -375.23663330]
[218.58856201 -360.51324463]
[215.72117615 -345.78985596]
[217.58699036 -341.41577148]
[216.74060059 -335.82476807]
[212.58688354 -330.72784424]
[209.34289551 -316.08282471]
[206.09890747 -301.43780518]
[202.85491943 -286.79278564]
[199.61093140 -272.14776611]
[196.36694336 -257.50274658]
[193.12295532 -242.85774231]
[203.77185059 -234.32609558]
[209.73890686 -221.98141479]
[209.81019592 -208.20428467]
[203.91490173 -195.67887878]
[193.15020752 -186.86996460]
[179.57752991 -183.53800964]
[176.14602661 -168.93580627]
[172.71452332 -154.33358765]
[169.28302002 -139.73136902]
[165.85151672 -125.12914276]
[162.42001343 -110.52692413]
[163.93814087 -107.36805725]
[164.01493835 -103.32147980]
[162.25170898 -99.06656647]
[158.56552124 -95.43435669]
[154.57496643 -80.97491455]
[150.58441162 -66.51547241]
[146.59385681 -52.05603027]
[147.84123230 -44.78863907]
[142.45832825 -37.43739319]
[138.28269958 -23.03030586]
[134.10707092 -8.62322140]
[129.93144226 5.78386402]
[135.89785767 24.19011116]
[121.09239197 37.89235306]
[117.28757477 52.40177536]
[113.48275757 66.91120148]
[109.67793274 81.42062378]
[118.49471283 93.55587769]
[133.46975708 94.42093658]
[148.44477844 95.28599548]
[160.18768311 85.05163574]
[175.36216736 86.14225006]
[185.04670715 97.40037537]
[200.02174377 98.26543427]
[212.90942383 88.71100616]
[228.37710571 92.96900940]
[234.55929565 107.77306366]
[226.71354675 121.76677704]
[210.85844421 124.21535492]
[199.15667725 113.24047089]
[184.18164062 112.37541199]
[173.26516724 122.44348145]
[158.06602478 121.77951050]
[147.57972717 110.26103210]
[132.60469055 109.39597321]
[117.62965393 108.53091431]
[104.65533447 116.05865479]
[97.97431946 129.48863220]
[91.29331207 142.91859436]
[84.61229706 156.34857178]
[77.93128967 169.77853394]
[71.25027466 183.20851135]
[79.68087006 203.34661865]
[70.52971649 222.85208130]
[50.20099640 229.07324219]
[44.39417648 242.90367126]
[38.58735275 256.73410034]
[42.73263550 268.93240356]
[37.62855530 280.32412720]
[26.50305939 285.03662109]
[20.51937294 298.79147339]
[14.53568745 312.54629517]
[8.55200195 326.30114746]
[2.65662646 340.09405518]
[-3.15019631 353.92446899]
[-1.35852706 369.64392090]
[-13.41954041 378.38354492]
[-19.22636414 392.21398926]
[-25.03318596 406.04440308]
[-30.84000969 419.87484741]
[-36.64683151 433.70526123]
[-42.45365524 447.53570557]
[-33.28287125 459.77676392]
[-31.48243141 474.86502075]
[-37.43643188 488.73645020]
[-49.45383072 497.70516968]
[-64.24728394 499.44277954]
[-70.05410767 513.27319336]
[-75.86093140 527.10363770]
[-81.66775513 540.93408203]
[-87.47457123 554.76452637]
[-81.73935699 569.24707031]
[-87.82531738 583.19036865]
[-101.66758728 588.56878662]
[-107.47441101 602.39923096]
[-113.28123474 616.22967529]
[-119.08805847 630.06005859]
[-117.29638672 645.77954102]
[-129.35740662 654.51916504]
[-135.16423035 668.34954834]
[-140.97103882 682.17999268]
[-146.77786255 696.01043701]
[-152.58468628 709.84088135]
[-140.09877014 701.52813721]
[-125.34751892 698.80773926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[34 242]
[35 241]
[36 240]
[37 239]
[38 238]
[40 236]
[41 235]
[42 234]
[43 233]
[46 230]
[47 229]
[48 228]
[49 227]
[50 226]
[55 221]
[56 220]
[57 219]
[58 218]
[59 217]
[60 216]
[62 214]
[63 213]
[65 212]
[66 211]
[67 210]
[68 209]
[70 206]
[71 205]
[72 204]
[80 201]
[81 200]
[82 199]
[83 198]
[84 197]
[85 196]
[89 176]
[90 175]
[91 174]
[92 173]
[96 171]
[97 170]
[98 169]
[99 168]
[100 166]
[101 165]
[102 164]
[103 163]
[104 159]
[105 158]
[106 157]
[107 156]
[108 155]
[109 154]
[114 148]
[115 147]
[116 146]
[117 145]
[118 144]
[119 143]
[120 142]
[121 139]
[122 138]
[123 137]
[124 136]
[177 195]
[178 194]
[179 193]
[182 190]
[183 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
