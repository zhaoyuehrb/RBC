%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAGAGGCGGAGGGGGUUUCCGGGAUCUGGCGGGGCCUUUGUCUUGUGCUCCAGCUGGAGCUUUGGUCCCGUAUUCUCGGCUAUUUAUCCCCAGCUGCGGGAGGCCCUGGUGACUCUGCUGCUGCAGUGUCUGGUUUCCCUGUGACCUGCAGGUACUGGGAGUUACAUAGCUAAG\
) } def
/len { sequence length } bind def

/coor [
[18.86392975 157.18534851]
[18.24077797 142.19830322]
[22.68416023 127.87152863]
[31.67852974 115.86730957]
[44.18031311 107.57843781]
[58.73898315 103.96662903]
[73.66673279 105.45133209]
[88.44631195 102.88933563]
[74.24771881 98.05198669]
[60.04912567 93.21464539]
[45.85053253 88.37729645]
[27.89098930 92.37786865]
[16.83964348 78.76287842]
[2.55743217 74.17829132]
[-11.72478008 69.59371185]
[-26.00699234 65.00912476]
[-40.28920364 60.42454147]
[-54.57141495 55.83995438]
[-72.55927277 66.67284393]
[-92.43126678 60.85605621]
[-101.47950745 42.55720901]
[-116.05095673 38.99730682]
[-130.62240601 35.43740463]
[-145.19384766 31.87750626]
[-159.76530457 28.31760597]
[-174.33674622 24.75770569]
[-183.13252258 32.81112671]
[-194.60987854 35.57599640]
[-205.87652588 32.47502518]
[-214.15078735 24.39428520]
[-217.44824219 13.43410110]
[-231.88417053 9.35929108]
[-246.32009888 5.28448153]
[-260.75601196 1.20967197]
[-275.19195557 -2.86513782]
[-289.62786865 -6.93994761]
[-304.06378174 -11.01475716]
[-318.49972534 -15.08956623]
[-323.72952271 -7.91070986]
[-330.59652710 -2.30785775]
[-338.64419556 1.35894740]
[-347.34048462 2.85798120]
[-356.11331177 2.10046005]
[-364.38796997 -0.85426080]
[-371.62493896 -5.80321550]
[-377.35485840 -12.41374016]
[-381.20922852 -20.24582291]
[-382.94384766 -28.78138161]
[-382.45443726 -37.45853806]
[-396.27413940 -43.29090118]
[-410.09381104 -49.12326431]
[-423.91348267 -54.95562744]
[-437.73315430 -60.78799057]
[-453.92999268 -58.21992874]
[-464.04074097 -71.13134003]
[-457.66436768 -86.24006653]
[-441.36032104 -88.00355530]
[-431.90081787 -74.60766602]
[-418.08111572 -68.77530670]
[-404.26144409 -62.94294357]
[-390.44177246 -57.11058044]
[-376.62210083 -51.27821732]
[-359.29812622 -64.05061340]
[-337.64593506 -63.85851669]
[-320.34521484 -50.62311554]
[-314.42489624 -29.52549171]
[-299.98898315 -25.45068169]
[-285.55307007 -21.37587166]
[-271.11712646 -17.30106163]
[-256.68121338 -13.22625256]
[-242.24528503 -9.15144348]
[-227.80935669 -5.07663345]
[-213.37342834 -1.00182390]
[-197.99702454 -10.89397240]
[-179.95629883 -6.35851336]
[-170.77685547 10.18625641]
[-156.20539856 13.74615669]
[-141.63395691 17.30605698]
[-127.06250000 20.86595726]
[-112.49105072 24.42585945]
[-97.91960907 27.98575974]
[-91.75896454 20.85412979]
[-83.36452484 16.44456291]
[-73.88101196 15.40634823]
[-64.61933899 17.92572021]
[-56.87543106 23.69417381]
[-51.74885559 31.94557953]
[-49.98683167 41.55774307]
[-35.70462036 46.14232635]
[-21.42240715 50.72691345]
[-7.14019537 55.31149673]
[7.14201689 59.89608002]
[21.42422867 64.48066711]
[32.34252167 59.22791672]
[44.29233551 62.95430374]
[50.68787766 74.17870331]
[64.88647461 79.01604462]
[79.08506775 83.85339355]
[93.28366089 88.69074249]
[108.26239777 87.89241028]
[121.86637878 81.57324982]
[135.47035217 75.25408936]
[149.07434082 68.93492889]
[162.67831421 62.61576843]
[176.28228760 56.29661179]
[189.88627625 49.97745132]
[203.49024963 43.65829086]
[204.86390686 35.35389709]
[209.37287903 28.35800362]
[216.21195984 23.78184319]
[224.21362305 22.31667137]
[232.04696655 24.13015938]
[238.43908691 28.85085869]
[252.45706177 23.51264000]
[266.47503662 18.17442322]
[276.61816406 6.03245354]
[291.26574707 8.73380661]
[305.28372192 3.39558911]
[319.30169678 -1.94262826]
[333.31967163 -7.28084564]
[343.24862671 -20.33256531]
[359.47982788 -17.99154854]
[365.31597900 -2.66603374]
[354.75335693 9.87840462]
[338.65786743 6.73712301]
[324.63992310 12.07534027]
[310.62194824 17.41355705]
[296.60397339 22.75177383]
[287.46350098 34.51192093]
[271.81323242 32.19239044]
[257.79528809 37.53060913]
[243.77731323 42.86882782]
[231.89712524 60.94756699]
[209.80940247 57.26227188]
[196.20542908 63.58142853]
[182.60145569 69.90058899]
[168.99746704 76.21974945]
[155.39349365 82.53890991]
[141.78952026 88.85807037]
[128.18553162 95.17722321]
[114.58155823 101.49638367]
[111.93315125 116.26073456]
[122.49258423 126.91429138]
[133.05201721 137.56785583]
[143.61145020 148.22142029]
[154.17088318 158.87498474]
[164.73031616 169.52853394]
[175.38388062 180.08796692]
[186.13072205 190.55244446]
[194.49011230 194.31330872]
[196.97337341 201.29930115]
[207.53280640 211.95286560]
[218.09223938 222.60641479]
[233.53672791 229.59956360]
[231.09233093 246.37637329]
[214.29449463 248.67179871]
[207.43869019 233.16584778]
[196.87925720 222.51229858]
[186.31982422 211.85873413]
[175.66625977 201.29930115]
[164.91940308 190.83482361]
[157.91165161 188.41365051]
[154.07675171 180.08796692]
[143.51731873 169.43441772]
[132.95788574 158.78085327]
[122.39845276 148.12728882]
[111.83901978 137.47372437]
[101.27958679 126.82016754]
[105.43877411 141.23200989]
[105.14789581 156.22918701]
[99.84010315 170.25869751]
[90.13124847 181.69277954]
[77.14779663 189.20477295]
[62.39616013 191.92308044]
[47.58790970 189.53233337]
[34.44117355 182.30992126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 99]
[9 98]
[10 97]
[11 96]
[13 93]
[14 92]
[15 91]
[16 90]
[17 89]
[18 88]
[21 81]
[22 80]
[23 79]
[24 78]
[25 77]
[26 76]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[100 141]
[101 140]
[102 139]
[103 138]
[104 137]
[105 136]
[106 135]
[107 134]
[113 132]
[114 131]
[115 130]
[117 128]
[118 127]
[119 126]
[120 125]
[142 168]
[143 167]
[144 166]
[145 165]
[146 164]
[147 163]
[148 161]
[149 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
