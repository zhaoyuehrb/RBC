%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCAGUGGGACGGCUAGAGUCUAGGACGUGGAUUCCCAGGGAGUUGAUCGCUCGCAUUAAAAUAGUCACCAUUGCCUCUACUGGAAGCUUCUCAAGAACAAUCACUCGACAGCGGCUCAGAAGAGCAGCGUUGACCUGGAAGGAAGGGUUUUCAGUGGUUGCCCCAAUCAGAGUGAUCGUCCCACAUUCCACGUGAGGAAGGAAAGUGUCCUAAUC\
) } def
/len { sequence length } bind def

/coor [
[28.98273849 899.71569824]
[13.63819885 899.05194092]
[0.68996161 890.79125977]
[-6.37896013 877.15576172]
[-5.66706276 861.81341553]
[2.63415718 848.89111328]
[16.29171371 841.86499023]
[16.94000435 826.87896729]
[17.58829689 811.89300537]
[18.23658943 796.90704346]
[18.88488007 781.92102051]
[19.53317261 766.93505859]
[20.18146515 751.94903564]
[6.34888601 746.29705811]
[-4.73611641 736.23468018]
[-11.72268200 722.96203613]
[-13.75049591 708.07214355]
[-10.55569077 693.35943604]
[-2.50499654 680.60382080]
[9.44624138 671.35504150]
[23.86739731 666.74462891]
[24.51568985 651.75866699]
[25.16398239 636.77270508]
[15.21389866 628.59057617]
[11.73976898 615.98370361]
[16.22537613 603.49340820]
[27.24459076 595.75341797]
[28.10877037 580.77832031]
[28.97294998 565.80328369]
[29.83712959 550.82818604]
[30.70130920 535.85308838]
[31.56548882 520.87799072]
[32.42966843 505.90292358]
[21.18994904 500.14590454]
[12.93064404 490.53134155]
[8.90463638 478.46347046]
[9.74308300 465.72259521]
[15.35675335 454.20242310]
[24.94404602 445.62857056]
[37.10527039 441.30017090]
[38.40064240 426.35620117]
[39.69601822 411.41226196]
[40.99139023 396.46829224]
[38.66234589 392.30422974]
[38.92080688 386.63363647]
[42.54551315 381.11441040]
[44.27099991 366.21398926]
[45.99649048 351.31356812]
[47.72198105 336.41314697]
[49.44746780 321.51272583]
[51.17295837 306.61230469]
[52.89844513 291.71188354]
[54.62393570 276.81143188]
[56.34942245 261.91101074]
[46.83938980 258.98880005]
[37.85852051 254.70140076]
[29.60163307 249.14085388]
[22.24798775 242.42687988]
[15.95737839 234.70420837]
[10.86667252 226.13951111]
[7.08682871 216.91778564]
[4.70047665 207.23840332]
[3.76011443 197.31071472]
[4.28695250 187.34960938]
[6.27043486 177.57080078]
[9.66845131 168.18620300]
[14.40822887 159.39930725]
[20.38789368 151.40074158]
[27.47865295 144.36424255]
[35.52758026 138.44274902]
[44.36090851 133.76516724]
[53.78776932 130.43351746]
[63.60433578 128.52075195]
[73.59822845 128.06913757]
[83.55309296 129.08927917]
[87.81677246 114.70800018]
[80.99845886 101.92297363]
[85.11704254 88.03112793]
[97.80195618 81.02831268]
[102.06563568 66.64704132]
[106.32932281 52.26576996]
[110.59300232 37.88449860]
[114.85668945 23.50322533]
[119.12037659 9.12195301]
[123.38405609 -5.25931978]
[127.64774323 -19.64059258]
[131.91142273 -34.02186584]
[136.17510986 -48.40313721]
[140.43879700 -62.78440857]
[144.70248413 -77.16567993]
[148.96617126 -91.54695129]
[145.47065735 -106.97718048]
[156.50646973 -116.98017883]
[160.77015686 -131.36145020]
[150.63197327 -140.99476624]
[145.65611267 -153.99392700]
[146.76004028 -167.80265808]
[153.67161560 -179.73170471]
[164.99316406 -187.48246765]
[178.48388672 -189.58992004]
[182.95437622 -203.90826416]
[175.80754089 -211.81726074]
[172.61010742 -221.90147400]
[173.87449646 -232.32331848]
[179.30633545 -241.21263123]
[187.86958313 -247.00230408]
[197.98342896 -248.70436096]
[203.06857300 -262.81610107]
[208.15370178 -276.92785645]
[213.23884583 -291.03961182]
[218.32397461 -305.15133667]
[218.28860474 -314.28036499]
[223.58540344 -319.42892456]
[228.87338257 -333.46591187]
[226.49780273 -349.10775757]
[238.22512817 -358.29031372]
[243.51309204 -372.32730103]
[248.80105591 -386.36431885]
[254.08901978 -400.40130615]
[250.89009094 -416.48544312]
[263.39660645 -427.09292603]
[278.74295044 -421.31173706]
[281.14208984 -405.08901978]
[268.12600708 -395.11334229]
[262.83804321 -381.07635498]
[257.55007935 -367.03933716]
[252.26213074 -353.00234985]
[255.01593018 -338.36453247]
[242.91036987 -328.17794800]
[237.62240601 -314.14096069]
[232.43572998 -300.06622314]
[227.35058594 -285.95446777]
[222.26545715 -271.84271240]
[217.18031311 -257.73098755]
[212.09518433 -243.61923218]
[221.65324402 -226.63900757]
[215.53961182 -207.81591797]
[197.27270508 -199.43777466]
[192.80223083 -185.11944580]
[204.04066467 -173.50532532]
[207.90933228 -157.71711731]
[203.25997925 -142.04293823]
[191.27117920 -130.78926086]
[175.15142822 -127.09777069]
[170.88774109 -112.71649933]
[174.68823242 -98.31491089]
[163.34744263 -87.28327179]
[159.08375549 -72.90200043]
[154.82006836 -58.52072525]
[150.55638123 -44.13945389]
[146.29269409 -29.75818062]
[142.02902222 -15.37690735]
[137.76533508 -0.99563527]
[133.50164795 13.38563728]
[129.23796082 27.76690865]
[124.97428131 42.14818192]
[120.71059418 56.52945328]
[116.44690704 70.91072845]
[112.18322754 85.29199982]
[119.00154114 98.07702637]
[114.88295746 111.96887207]
[102.19804382 118.97168732]
[97.93436432 133.35295105]
[115.52026367 144.22044373]
[129.01843262 159.85969543]
[137.18748474 178.81951904]
[139.27998352 199.34393311]
[135.11088562 219.53479004]
[125.07383728 237.52734375]
[110.10400391 251.66246033]
[91.59100342 260.63958740]
[71.24984741 263.63650513]
[69.52436066 278.53692627]
[67.79887390 293.43734741]
[66.07337952 308.33779907]
[64.34789276 323.23822021]
[62.62240601 338.13864136]
[60.89691544 353.03906250]
[59.17142868 367.93948364]
[57.44593811 382.83990479]
[55.93535233 397.76367188]
[54.63998032 412.70761108]
[53.34460831 427.65158081]
[52.04923248 442.59555054]
[66.68735504 452.32766724]
[74.33822632 468.05435181]
[72.97386932 485.40066528]
[63.06040955 499.59170532]
[47.40475464 506.76708984]
[46.54057312 521.74218750]
[45.67639542 536.71728516]
[44.81221390 551.69238281]
[43.94803619 566.66741943]
[43.08385468 581.64251709]
[42.21967697 596.61761475]
[54.09404373 609.46697998]
[53.01997375 626.59136963]
[40.14996719 637.42095947]
[39.50167465 652.40698242]
[38.85338211 667.39294434]
[52.82252121 673.23144531]
[63.93040085 683.47778320]
[70.84946442 696.88104248]
[72.76177216 711.81463623]
[69.45567322 726.47381592]
[61.34900665 739.09350586]
[49.43644714 748.16101074]
[35.16744995 752.59735107]
[34.51915741 767.58331299]
[33.87086487 782.56933594]
[33.22257233 797.55529785]
[32.57427979 812.54132080]
[31.92598915 827.52728271]
[31.27769661 842.51324463]
[44.27746582 850.69262695]
[51.43172836 864.28350830]
[50.81602859 879.63000488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 214]
[8 213]
[9 212]
[10 211]
[11 210]
[12 209]
[13 208]
[21 200]
[22 199]
[23 198]
[27 195]
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[40 184]
[41 183]
[42 182]
[43 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[75 163]
[76 162]
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[85 153]
[86 152]
[87 151]
[88 150]
[89 149]
[90 148]
[91 147]
[93 145]
[94 144]
[100 139]
[101 138]
[107 135]
[108 134]
[109 133]
[110 132]
[111 131]
[113 130]
[114 129]
[116 127]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
