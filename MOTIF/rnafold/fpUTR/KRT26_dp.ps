%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRT26)
} def

/sequence { (\
CUUUGCUCCUCUUUCUGGGAAGGGGUUGCCCGGCUGUGCUGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.003194565 ubox
1 19 0.004784272 ubox
1 22 0.034467789 ubox
1 23 0.021672548 ubox
1 24 0.015255380 ubox
1 25 0.015215767 ubox
1 33 0.018597905 ubox
2 18 0.004644164 ubox
2 20 0.004102472 ubox
2 21 0.036812465 ubox
2 22 0.023509995 ubox
2 23 0.015526799 ubox
2 24 0.015320398 ubox
2 25 0.005394348 ubox
2 32 0.019423136 ubox
3 17 0.004380958 ubox
3 19 0.003291170 ubox
3 20 0.029815855 ubox
3 21 0.033230350 ubox
3 22 0.017890291 ubox
3 23 0.015476310 ubox
3 24 0.006878375 ubox
3 25 0.011411122 ubox
3 32 0.003843375 ubox
4 19 0.020986040 ubox
4 20 0.030533552 ubox
4 21 0.025586288 ubox
4 22 0.018630954 ubox
4 23 0.009180674 ubox
4 24 0.015512730 ubox
4 28 0.023854157 ubox
4 32 0.003582211 ubox
4 44 0.009196573 ubox
5 26 0.314130535 ubox
5 27 0.030325809 ubox
5 29 0.847198890 ubox
5 31 0.020957075 ubox
5 34 0.012062731 ubox
5 39 0.004119890 ubox
5 42 0.009193044 ubox
5 43 0.003461189 ubox
6 18 0.014451780 ubox
6 19 0.051359957 ubox
6 22 0.072672043 ubox
6 23 0.004255515 ubox
6 24 0.011250876 ubox
6 25 0.330752108 ubox
6 28 0.849677107 ubox
6 33 0.012077359 ubox
6 38 0.004120060 ubox
6 41 0.009328477 ubox
7 17 0.012297795 ubox
7 18 0.036640010 ubox
7 19 0.084318384 ubox
7 20 0.328724019 ubox
7 21 0.062442815 ubox
7 22 0.003388835 ubox
7 23 0.010432385 ubox
7 24 0.330535718 ubox
7 25 0.024219769 ubox
7 32 0.010949269 ubox
8 17 0.036936680 ubox
8 18 0.108925039 ubox
8 19 0.347549958 ubox
8 22 0.011949988 ubox
8 23 0.331200357 ubox
8 24 0.033228862 ubox
8 25 0.740504515 ubox
9 17 0.109340969 ubox
9 18 0.347230436 ubox
9 19 0.099890681 ubox
9 22 0.331089896 ubox
9 23 0.033166085 ubox
9 24 0.741067181 ubox
9 25 0.438861262 ubox
10 17 0.291775920 ubox
10 18 0.101382426 ubox
10 19 0.041587377 ubox
10 20 0.222521105 ubox
10 21 0.240658293 ubox
10 22 0.010651257 ubox
10 23 0.734490203 ubox
10 24 0.439031509 ubox
11 17 0.184202757 ubox
11 18 0.080938069 ubox
11 19 0.313478309 ubox
11 22 0.735554175 ubox
11 23 0.449569035 ubox
11 24 0.003398315 ubox
12 17 0.081592836 ubox
12 18 0.307445466 ubox
12 19 0.037231710 ubox
12 20 0.040507829 ubox
12 21 0.730864555 ubox
12 22 0.449222996 ubox
12 23 0.003218999 ubox
13 17 0.226302137 ubox
13 18 0.033446244 ubox
13 19 0.044947290 ubox
13 20 0.716886385 ubox
13 21 0.454973610 ubox
13 22 0.003600988 ubox
14 18 0.039065537 ubox
14 19 0.660053516 ubox
14 20 0.461890141 ubox
14 21 0.004054401 ubox
14 23 0.004020897 ubox
15 19 0.464135713 ubox
15 22 0.008058750 ubox
15 33 0.004226776 ubox
16 21 0.008611875 ubox
16 32 0.004323684 ubox
17 31 0.011934868 ubox
17 46 0.006576070 ubox
18 30 0.011942899 ubox
18 45 0.006640285 ubox
18 46 0.004525886 ubox
19 29 0.011920768 ubox
19 34 0.003558285 ubox
19 45 0.004785250 ubox
20 27 0.008948002 ubox
21 26 0.008530422 ubox
21 27 0.003498787 ubox
22 26 0.003215548 ubox
22 30 0.016607071 ubox
22 31 0.359675696 ubox
22 46 0.030934431 ubox
23 29 0.016684568 ubox
23 30 0.360485269 ubox
23 31 0.115155593 ubox
23 45 0.031352594 ubox
24 29 0.360109015 ubox
24 30 0.115423847 ubox
24 31 0.022937417 ubox
24 43 0.035554701 ubox
24 46 0.020554826 ubox
25 29 0.113611423 ubox
25 30 0.022860696 ubox
25 42 0.035626562 ubox
25 45 0.021553851 ubox
26 41 0.034342009 ubox
26 44 0.021049763 ubox
27 44 0.024304564 ubox
28 34 0.005809005 ubox
28 37 0.003421608 ubox
28 39 0.035485896 ubox
28 42 0.023810200 ubox
28 43 0.026931530 ubox
29 33 0.005777617 ubox
29 36 0.003482409 ubox
29 38 0.035468892 ubox
29 41 0.023178921 ubox
31 38 0.005159276 ubox
31 41 0.106933685 ubox
32 37 0.005468830 ubox
32 40 0.112391264 ubox
32 43 0.990933294 ubox
32 46 0.018092206 ubox
33 39 0.113143043 ubox
33 42 0.991999240 ubox
33 45 0.018081233 ubox
34 38 0.112326388 ubox
34 41 0.991666943 ubox
35 41 0.004535325 ubox
35 44 0.015560282 ubox
36 40 0.017309140 ubox
36 42 0.009584527 ubox
36 43 0.015642655 ubox
36 45 0.028542234 ubox
37 41 0.009125043 ubox
37 44 0.028692673 ubox
38 43 0.028403717 ubox
5 29 0.9500000 lbox
6 28 0.9500000 lbox
8 25 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
showpage
end
%%EOF
