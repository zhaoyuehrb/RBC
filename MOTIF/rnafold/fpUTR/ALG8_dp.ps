%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ALG8)
} def

/sequence { (\
UUUCUCCGCAUGCGCGGGAUCCCGGAUGUGGAUCAAGUUGGUGGGAAGCGUGCGGUGCCGCAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.003402210 ubox
1 36 0.097170926 ubox
1 37 0.043879984 ubox
1 41 0.003732182 ubox
1 44 0.005878553 ubox
1 45 0.005120669 ubox
1 46 0.059043326 ubox
1 47 0.123423315 ubox
1 48 0.078643917 ubox
1 63 0.003540243 ubox
2 19 0.007541467 ubox
2 35 0.108245097 ubox
2 36 0.065176095 ubox
2 37 0.019964297 ubox
2 40 0.004644431 ubox
2 43 0.006564871 ubox
2 44 0.005580085 ubox
2 45 0.063365285 ubox
2 46 0.138640058 ubox
2 47 0.536944472 ubox
2 48 0.011122931 ubox
2 62 0.004105726 ubox
2 63 0.003499143 ubox
3 18 0.005108702 ubox
3 19 0.099491559 ubox
3 32 0.005522782 ubox
3 35 0.064883744 ubox
3 36 0.029044147 ubox
3 41 0.012234690 ubox
3 43 0.004646385 ubox
3 44 0.064726218 ubox
3 45 0.137019501 ubox
3 46 0.594430408 ubox
3 47 0.061526864 ubox
3 62 0.003832911 ubox
4 18 0.105991327 ubox
4 31 0.004227237 ubox
4 37 0.018192624 ubox
4 40 0.016640252 ubox
4 41 0.009869441 ubox
4 43 0.065490367 ubox
4 44 0.135914138 ubox
4 45 0.598110973 ubox
4 48 0.021898864 ubox
4 63 0.020308440 ubox
5 17 0.014515105 ubox
5 18 0.084296821 ubox
5 19 0.011803074 ubox
5 32 0.436433565 ubox
5 36 0.011580436 ubox
5 40 0.006420436 ubox
5 43 0.104501853 ubox
5 44 0.146608224 ubox
5 45 0.190122170 ubox
5 46 0.447193756 ubox
5 47 0.025932224 ubox
5 62 0.020016515 ubox
6 16 0.011216330 ubox
6 17 0.163125599 ubox
6 18 0.010358627 ubox
6 31 0.494755720 ubox
6 41 0.027421407 ubox
6 43 0.093731446 ubox
6 44 0.618298822 ubox
6 45 0.469974682 ubox
6 55 0.211161689 ubox
7 14 0.006561888 ubox
7 16 0.164078496 ubox
7 17 0.007439604 ubox
7 30 0.496097820 ubox
7 40 0.027487764 ubox
7 43 0.620704817 ubox
7 44 0.469385336 ubox
7 54 0.213134040 ubox
7 57 0.007776180 ubox
7 60 0.019487492 ubox
8 13 0.006944949 ubox
8 15 0.164550634 ubox
8 29 0.495987843 ubox
8 39 0.026412777 ubox
8 42 0.622280307 ubox
8 53 0.213186513 ubox
8 56 0.008291450 ubox
8 58 0.032240456 ubox
8 59 0.013958429 ubox
8 64 0.028767700 ubox
9 14 0.164317081 ubox
9 28 0.496184634 ubox
9 40 0.084945886 ubox
9 41 0.620337596 ubox
9 43 0.469480549 ubox
9 52 0.213186784 ubox
9 55 0.008351835 ubox
9 57 0.035141114 ubox
9 63 0.028747698 ubox
10 27 0.495926326 ubox
10 38 0.005739809 ubox
10 39 0.095724804 ubox
10 42 0.470624688 ubox
10 51 0.212963284 ubox
10 56 0.034501988 ubox
11 26 0.492432896 ubox
11 37 0.005827413 ubox
11 40 0.098683491 ubox
11 41 0.469196885 ubox
11 43 0.003296207 ubox
11 50 0.212765981 ubox
11 54 0.026113347 ubox
11 55 0.024271804 ubox
11 62 0.019750212 ubox
11 65 0.202745928 ubox
12 38 0.421988066 ubox
12 39 0.106466615 ubox
12 42 0.009296329 ubox
12 49 0.212887265 ubox
12 51 0.008214085 ubox
12 53 0.036089128 ubox
12 61 0.018209424 ubox
12 64 0.250169354 ubox
13 24 0.491864159 ubox
13 37 0.424278091 ubox
13 40 0.096529777 ubox
13 41 0.009990761 ubox
13 43 0.009997716 ubox
13 48 0.212527999 ubox
13 50 0.010395082 ubox
13 52 0.036163280 ubox
13 60 0.017700024 ubox
13 63 0.250145363 ubox
14 23 0.490643593 ubox
14 38 0.676352375 ubox
14 39 0.070097592 ubox
14 42 0.033953790 ubox
14 49 0.010772760 ubox
14 51 0.036164376 ubox
14 58 0.009225472 ubox
14 59 0.010943944 ubox
14 61 0.252064821 ubox
15 24 0.067415679 ubox
15 37 0.687175089 ubox
15 40 0.006586761 ubox
15 41 0.033889551 ubox
15 48 0.010789079 ubox
15 50 0.036185090 ubox
15 57 0.013040348 ubox
15 60 0.252906695 ubox
16 22 0.484095801 ubox
16 23 0.074532433 ubox
16 34 0.012507078 ubox
16 39 0.006889952 ubox
16 49 0.036083512 ubox
16 56 0.012778589 ubox
16 59 0.252980039 ubox
17 21 0.476333735 ubox
17 22 0.075748410 ubox
17 23 0.009039672 ubox
17 33 0.008481952 ubox
17 34 0.034416920 ubox
17 38 0.007018614 ubox
17 39 0.025851781 ubox
17 58 0.252866612 ubox
17 59 0.010109459 ubox
18 22 0.009697789 ubox
18 33 0.019505646 ubox
18 34 0.813865358 ubox
18 38 0.004440112 ubox
18 58 0.012830506 ubox
19 33 0.814460077 ubox
19 42 0.012613014 ubox
19 56 0.203654425 ubox
20 32 0.814406176 ubox
20 41 0.012149047 ubox
20 44 0.014589104 ubox
20 46 0.136844359 ubox
20 55 0.052093110 ubox
21 30 0.004423275 ubox
21 31 0.787364984 ubox
21 40 0.012054065 ubox
21 41 0.008302840 ubox
21 43 0.015437837 ubox
21 44 0.003571055 ubox
21 45 0.146266788 ubox
21 54 0.031340555 ubox
21 55 0.052541236 ubox
22 30 0.757921781 ubox
22 31 0.210848154 ubox
22 40 0.008272597 ubox
22 41 0.017008091 ubox
22 43 0.003341955 ubox
22 44 0.146301715 ubox
22 54 0.037568398 ubox
22 55 0.246943347 ubox
23 30 0.296742410 ubox
23 40 0.017121960 ubox
23 43 0.146235783 ubox
23 52 0.006297291 ubox
23 54 0.253722168 ubox
24 29 0.321687376 ubox
24 39 0.016511018 ubox
24 42 0.134373266 ubox
24 51 0.003889858 ubox
24 53 0.258169996 ubox
25 34 0.083037366 ubox
25 38 0.009957623 ubox
25 39 0.076050120 ubox
26 33 0.082967381 ubox
26 38 0.080005339 ubox
26 42 0.006388678 ubox
26 51 0.258068478 ubox
27 32 0.082055327 ubox
27 35 0.029113887 ubox
27 37 0.077399049 ubox
27 40 0.011518313 ubox
27 41 0.007772811 ubox
27 50 0.258272079 ubox
28 34 0.031753705 ubox
28 38 0.015998508 ubox
28 39 0.011397316 ubox
28 42 0.004812692 ubox
28 49 0.258471413 ubox
29 35 0.071845204 ubox
29 37 0.017217188 ubox
29 40 0.004467660 ubox
29 41 0.027393441 ubox
29 48 0.257627320 ubox
30 34 0.074190655 ubox
30 39 0.008725367 ubox
31 38 0.007790468 ubox
31 39 0.035891246 ubox
32 38 0.036148543 ubox
32 42 0.185958596 ubox
33 37 0.033615952 ubox
33 41 0.198166161 ubox
33 44 0.255464395 ubox
33 45 0.019560618 ubox
33 46 0.040918673 ubox
34 40 0.207651953 ubox
34 43 0.276858954 ubox
34 44 0.025998300 ubox
34 45 0.043432565 ubox
35 39 0.168350202 ubox
35 42 0.253233149 ubox
37 49 0.037585194 ubox
37 61 0.007113600 ubox
37 64 0.278121449 ubox
38 44 0.007193927 ubox
38 45 0.016187831 ubox
38 46 0.026860289 ubox
38 47 0.034503839 ubox
38 48 0.037480175 ubox
38 60 0.005082708 ubox
38 63 0.278064557 ubox
39 43 0.007436823 ubox
39 44 0.021696310 ubox
39 45 0.030005057 ubox
39 46 0.041961466 ubox
39 47 0.039851551 ubox
39 50 0.007045261 ubox
39 60 0.008655582 ubox
39 62 0.262531541 ubox
39 65 0.076786878 ubox
40 49 0.011268408 ubox
40 59 0.012046626 ubox
40 61 0.195099696 ubox
40 64 0.097517926 ubox
41 49 0.022133236 ubox
41 58 0.012251873 ubox
41 61 0.205476909 ubox
41 64 0.010305392 ubox
42 48 0.022025543 ubox
42 50 0.006287276 ubox
42 57 0.012167410 ubox
42 60 0.270077718 ubox
42 62 0.097300142 ubox
42 63 0.008960246 ubox
42 65 0.010486437 ubox
43 49 0.010374332 ubox
43 56 0.007692781 ubox
43 59 0.276850288 ubox
43 61 0.097247829 ubox
43 64 0.013403299 ubox
44 58 0.274643242 ubox
44 59 0.112202063 ubox
45 58 0.115287663 ubox
48 56 0.265107155 ubox
48 58 0.017866579 ubox
48 61 0.142505046 ubox
48 64 0.867416214 ubox
49 55 0.271875840 ubox
49 57 0.021811255 ubox
49 60 0.142824033 ubox
49 63 0.867581733 ubox
50 56 0.017376201 ubox
50 58 0.005616399 ubox
50 59 0.142649587 ubox
50 61 0.030493289 ubox
50 64 0.090073696 ubox
51 55 0.005036394 ubox
51 57 0.007719481 ubox
51 60 0.030522501 ubox
51 62 0.841739449 ubox
51 63 0.052801165 ubox
51 65 0.014142348 ubox
52 56 0.003692601 ubox
52 58 0.140482393 ubox
52 59 0.028057870 ubox
52 61 0.879962405 ubox
52 64 0.017964704 ubox
53 57 0.139888677 ubox
53 60 0.880025024 ubox
53 63 0.017925247 ubox
54 59 0.867904848 ubox
55 61 0.014276489 ubox
55 64 0.008129985 ubox
56 60 0.013413501 ubox
56 62 0.008631556 ubox
56 63 0.008447830 ubox
56 65 0.154949835 ubox
57 61 0.009431890 ubox
57 64 0.196910548 ubox
58 63 0.196350012 ubox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
9 43 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
48 64 0.9500000 lbox
49 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
