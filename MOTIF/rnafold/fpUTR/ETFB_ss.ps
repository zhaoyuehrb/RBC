%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAACAAAAGGCUUCUGUGCUGGGCAGCUUGAGUUUUCCCCAGGCUGCUCUAUUGUUGCCUGUAGCUGUGAUUUUUCAGGCAGGCUGCUCCUCUGAGGACCACCCUUAACUGUCUACCUAACUGGUUUUUCCUUUUCUUCUCCUCAUUUGUAUUUAUGUAUCAGUGUAUUAUGUAUUUAUAUACACUUGGAGAUACAGUAAA\
) } def
/len { sequence length } bind def

/coor [
[272.56497192 283.94769287]
[265.88128662 264.06207275]
[270.20532227 243.45799255]
[258.41665649 234.18286133]
[246.62802124 224.90774536]
[234.83938599 215.63262939]
[220.05259705 213.84364319]
[213.99121094 199.22959900]
[202.20256042 189.95448303]
[190.41392517 180.67936707]
[178.62527466 171.40423584]
[166.83663940 162.12911987]
[155.04798889 152.85398865]
[145.30145264 161.41339111]
[134.24607849 168.19847107]
[122.20130157 173.01319885]
[109.51509094 175.71849060]
[96.55397797 176.23616028]
[83.69242859 174.55125427]
[71.30202484 170.71246338]
[59.74074173 164.83068848]
[49.34260941 157.07586670]
[40.40803528 147.67204285]
[33.19515991 136.89091492]
[19.41518402 142.81646729]
[5.63520622 148.74203491]
[-8.14477062 154.66758728]
[-21.92474747 160.59313965]
[-35.70472336 166.51870728]
[-49.48470306 172.44425964]
[-63.26467896 178.36981201]
[-77.04465485 184.29537964]
[-90.82463074 190.22093201]
[-93.25849915 205.45509338]
[-103.55923462 216.93980408]
[-118.43991089 221.01031494]
[-133.15216064 216.36775208]
[-143.00134277 204.49353027]
[-144.84465027 189.17668152]
[-138.09385681 175.30476379]
[-124.90313721 167.30422974]
[-109.48159790 167.72804260]
[-96.75019073 176.44094849]
[-82.97021484 170.51539612]
[-69.19023895 164.58984375]
[-55.41025925 158.66427612]
[-41.63028336 152.73872375]
[-27.85030556 146.81317139]
[-14.07032871 140.88760376]
[-0.29035157 134.96205139]
[13.48962498 129.03649902]
[27.26960182 123.11093903]
[24.32435417 109.85001373]
[23.77687073 96.27700043]
[25.64449692 82.82195282]
[29.86805916 69.91117859]
[36.31373215 57.95376968]
[24.66860962 48.49908447]
[9.07804489 45.80745316]
[4.07424927 31.77850723]
[-7.57087517 22.32382202]
[-19.21599960 12.86913776]
[-30.86112404 3.41445231]
[-42.50624847 -6.04023266]
[-54.15137482 -15.49491787]
[-60.61652374 -16.91443443]
[-64.76808167 -20.80412674]
[-66.00267029 -25.42215347]
[-77.35258484 -35.22925949]
[-88.70250702 -45.03636932]
[-103.78015900 -41.36975861]
[-118.12058258 -47.29695892]
[-126.20960236 -60.53883743]
[-124.93682098 -76.00362396]
[-114.79164886 -87.74479675]
[-99.67510223 -91.24762726]
[-85.39981842 -85.16520691]
[-77.45492554 -71.83635712]
[-78.89539337 -56.38628769]
[-67.54547882 -46.57917786]
[-56.19556046 -36.77207184]
[-44.69668961 -27.14004326]
[-33.05156326 -17.68535805]
[-21.40643883 -8.23067188]
[-9.76131439 1.22401297]
[1.88380992 10.67869854]
[13.52893448 20.13338280]
[28.28656197 22.14875221]
[34.12329483 36.85395813]
[45.76841736 46.30864334]
[52.28236008 39.28882980]
[59.70872498 33.06671524]
[67.94879913 27.76120567]
[76.88836670 23.47885513]
[86.39923096 20.31184578]
[96.34109497 18.33615303]
[96.57096100 3.33791423]
[96.80081940 -11.66032410]
[97.03068542 -26.65856361]
[97.26055145 -41.65680313]
[87.16870880 -54.12814331]
[90.76759338 -69.76232147]
[105.29645538 -76.56613922]
[119.60998535 -69.32028198]
[122.72807312 -53.58315659]
[112.25878906 -41.42693710]
[112.02892303 -26.42869949]
[111.79906464 -11.43046093]
[111.56919861 3.56777787]
[111.33933258 18.56601715]
[118.45429230 20.93823051]
[123.19871521 6.70831871]
[127.94314575 -7.52159309]
[139.16688538 -17.47286606]
[142.17306519 -2.77716446]
[137.42863464 11.45274734]
[132.68420410 25.68265915]
[139.79916382 28.05487442]
[148.61593628 15.91961861]
[157.43270874 3.78436399]
[156.35330200 -12.22233486]
[168.29156494 -22.93948174]
[184.08950806 -20.14579964]
[191.62829590 -5.98436213]
[185.12480164 8.68138885]
[169.56797791 12.60114288]
[160.75119019 24.73639870]
[151.93441772 36.87165451]
[166.92141724 54.97261429]
[175.96832275 76.32118988]
[178.48101807 99.05541992]
[174.42697144 121.24710083]
[164.32312012 141.06535339]
[176.11175537 150.34046936]
[187.90040588 159.61560059]
[199.68904114 168.89071655]
[211.47769165 178.16583252]
[223.26632690 187.44096375]
[238.89631653 189.89335632]
[244.11450195 203.84397888]
[255.90315247 213.11911011]
[267.69180298 222.39422607]
[279.48043823 231.66934204]
[287.43704224 226.33354187]
[296.41799927 223.03938293]
[305.90975952 221.96812439]
[315.37118530 223.17416382]
[324.26446533 226.58226013]
[332.08569336 231.99214172]
[338.39334106 239.09036255]
[342.83331299 247.46841431]
[345.15869141 256.64617920]
[345.24359131 266.09951782]
[343.08975220 275.29022217]
[338.82632446 283.69656372]
[349.55413818 294.18054199]
[365.13098145 294.17022705]
[375.86114502 304.95529175]
[375.77499390 319.80548096]
[386.50280762 330.28948975]
[397.23062134 340.77346802]
[407.95843506 351.25747681]
[418.68621826 361.74145508]
[429.41403198 372.22546387]
[440.45809937 382.37579346]
[451.80801392 392.18289185]
[463.15792847 401.98999023]
[474.50784302 411.79711914]
[485.85775757 421.60421753]
[497.20767212 431.41131592]
[508.55758667 441.21844482]
[517.10137939 444.46347046]
[520.00482178 451.26385498]
[531.20312500 461.24371338]
[542.40142822 471.22360229]
[558.56042480 474.01956177]
[563.96386719 489.50292969]
[553.05310059 501.74578857]
[537.05218506 498.15368652]
[532.42150879 482.42190552]
[521.22320557 472.44201660]
[510.02493286 462.46212769]
[498.75048828 452.56835938]
[487.40057373 442.76123047]
[476.05065918 432.95413208]
[464.70074463 423.14703369]
[453.35083008 413.33990479]
[442.00088501 403.53280640]
[430.65097046 393.72570801]
[427.84414673 393.79760742]
[424.83969116 392.75936890]
[422.06130981 390.53009033]
[419.95410156 387.18399048]
[418.93005371 382.95327759]
[408.20223999 372.46926880]
[397.47442627 361.98529053]
[386.74661255 351.50128174]
[376.01882935 341.01730347]
[365.29101562 330.53329468]
[350.44671631 330.96075439]
[339.41784668 320.48132324]
[339.07015991 304.90835571]
[328.34234619 294.42434692]
[308.82138062 301.47848511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 143]
[4 142]
[5 141]
[6 140]
[8 138]
[9 137]
[10 136]
[11 135]
[12 134]
[13 133]
[24 52]
[25 51]
[26 50]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[57 90]
[58 89]
[60 87]
[61 86]
[62 85]
[63 84]
[64 83]
[65 82]
[68 81]
[69 80]
[70 79]
[96 110]
[97 109]
[98 108]
[99 107]
[100 106]
[118 128]
[119 127]
[120 126]
[155 203]
[156 202]
[159 199]
[160 198]
[161 197]
[162 196]
[163 195]
[164 194]
[165 189]
[166 188]
[167 187]
[168 186]
[169 185]
[170 184]
[171 183]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
