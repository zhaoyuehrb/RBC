%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCCCUACUCCGCGUGGAUUGGUUGACCGCCCUUCGAGCCCGGUGCUGACUGGCUUGCGUCUCUGCCACUUUCUUUCAGCUUAGUGGCGCGCGGCGCGGCGACGACCGCCGGGAGCGUGUGCAGCGGCGGCGGCGGAAGUGGCCGGCGAGCCCGGUCCCCGCCGGCACC\
) } def
/len { sequence length } bind def

/coor [
[389.69259644 417.04080200]
[404.64721680 418.22079468]
[395.05212402 406.69107056]
[385.45703125 395.16137695]
[375.86193848 383.63168335]
[366.26684570 372.10195923]
[356.56686401 360.66036987]
[346.76278687 349.30783081]
[324.14535522 344.43716431]
[319.41888428 321.05679321]
[308.43200684 310.84463501]
[297.44509888 300.63247681]
[286.45819092 290.42031860]
[271.62927246 291.21926880]
[260.34152222 281.01919556]
[259.60406494 265.45983887]
[248.61715698 255.24768066]
[237.63026428 245.03552246]
[226.64335632 234.82337952]
[215.56018066 237.70651245]
[204.34983826 234.83549500]
[195.84210205 226.81507874]
[192.24232483 215.56459045]
[194.56059265 203.85951233]
[183.95399475 193.25289917]
[173.34739685 182.64630127]
[162.74079895 172.03970337]
[155.76184082 169.52412415]
[152.03955078 161.14118958]
[141.62843323 150.34263611]
[131.21731567 139.54408264]
[120.80620575 128.74552917]
[110.29691315 118.04251099]
[99.69030762 107.43590546]
[96.44236755 112.27313995]
[90.95764160 115.69606781]
[83.79074097 116.94641876]
[75.71994781 115.46403503]
[60.96945953 112.73947906]
[46.21897507 110.01493073]
[31.46849060 107.29037476]
[16.71800613 104.56581879]
[7.67280817 106.08687592]
[1.72406793 101.65445709]
[-12.97419548 98.66094971]
[-27.67245865 95.66744995]
[-43.04516220 101.37814331]
[-55.50285339 90.71334839]
[-52.23012543 74.64408112]
[-36.59368515 69.70103455]
[-24.67895699 80.96918488]
[-9.98069382 83.96269226]
[4.71756983 86.95619202]
[19.44255829 89.81533813]
[34.19304276 92.53988647]
[48.94352722 95.26444244]
[63.69401550 97.98899841]
[78.44449615 100.71354675]
[88.14448547 89.27194977]
[83.04280090 75.16617584]
[77.94111633 61.06040573]
[72.83943176 46.95463181]
[69.35100555 44.23038864]
[67.15421295 40.86793137]
[66.29036713 37.35929108]
[66.63424683 34.15827560]
[67.92155457 31.62868118]
[63.86313248 17.18814087]
[59.80471039 2.74760008]
[55.74628830 -11.69294071]
[51.68787003 -26.13348198]
[47.62944794 -40.57402420]
[32.59010696 -43.17804337]
[20.17496109 -52.05649948]
[12.84905148 -65.44656372]
[12.06694031 -80.68962860]
[17.98391724 -94.75917053]
[29.42516136 -104.86167908]
[44.11900711 -108.99129486]
[59.14797974 -106.32806396]
[71.52806091 -97.40078735]
[78.80118561 -83.98197937]
[79.52326202 -68.73595428]
[73.55092621 -54.68981934]
[62.06998825 -44.63244247]
[66.12841034 -30.19190216]
[70.18682861 -15.75136089]
[74.24525452 -1.31082046]
[78.30367279 13.12972069]
[82.36209106 27.57026100]
[86.94520569 41.85294724]
[92.04689026 55.95871735]
[97.14857483 70.06449127]
[102.25025940 84.17026520]
[110.29691315 96.82930756]
[120.90351105 107.43590546]
[129.21707153 111.31068420]
[131.60476685 118.33441925]
[142.01586914 129.13296509]
[152.42698669 139.93151855]
[162.83810425 150.73007202]
[173.34739685 161.43310547]
[183.95399475 172.03970337]
[194.56059265 182.64630127]
[205.16720581 193.25289917]
[224.06874084 192.50703430]
[237.31365967 205.56275940]
[236.85551453 223.83647156]
[247.84240723 234.04862976]
[258.82931519 244.26077271]
[269.81622314 254.47293091]
[285.38790894 254.07264709]
[296.38470459 264.58572388]
[296.67034912 279.43344116]
[307.65725708 289.64556885]
[318.64416504 299.85772705]
[329.63104248 310.06988525]
[336.28851318 308.05368042]
[343.19100952 308.21334839]
[349.65057373 310.50073242]
[355.03350830 314.65722656]
[358.82238770 320.24255371]
[360.66586304 326.68133545]
[360.41094971 333.32220459]
[358.11532593 339.50375366]
[367.91940308 350.85629272]
[375.92794800 355.32757568]
[377.79653931 362.50686646]
[387.39166260 374.03656006]
[396.98675537 385.56628418]
[406.58184814 397.09597778]
[416.17694092 408.62570190]
[426.48898315 419.51889038]
[437.47589111 429.73101807]
[448.46279907 439.94317627]
[459.44970703 450.15533447]
[470.43658447 460.36749268]
[481.42349243 470.57962036]
[490.78146362 468.97409058]
[499.69049072 471.83370972]
[506.17184448 478.38949585]
[508.84805298 487.06704712]
[507.23471069 495.86322021]
[517.64581299 506.66177368]
[528.05694580 517.46032715]
[538.46807861 528.25891113]
[548.87915039 539.05743408]
[559.29028320 549.85601807]
[575.23986816 551.58544922]
[583.71008301 565.21026611]
[578.20330811 580.27862549]
[562.94390869 585.23138428]
[549.63751221 576.26916504]
[548.49176025 560.26708984]
[538.08062744 549.46856689]
[527.66949463 538.66998291]
[517.25842285 527.87145996]
[506.84729004 517.07287598]
[496.43615723 506.27435303]
[476.18698120 502.38552856]
[471.21133423 481.56652832]
[460.22445679 471.35437012]
[449.23754883 461.14224243]
[438.25064087 450.93008423]
[427.26373291 440.71792603]
[416.27685547 430.50576782]
[416.63638306 445.50146484]
[407.39355469 457.31542969]
[392.75192261 460.57470703]
[379.37048340 453.79699707]
[373.33508301 440.06478882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 132]
[3 131]
[4 130]
[5 129]
[6 128]
[7 126]
[8 125]
[10 117]
[11 116]
[12 115]
[13 114]
[16 111]
[17 110]
[18 109]
[19 108]
[24 105]
[25 104]
[26 103]
[27 102]
[29 101]
[30 100]
[31 99]
[32 98]
[33 96]
[34 95]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[44 53]
[45 52]
[46 51]
[59 94]
[60 93]
[61 92]
[62 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[133 166]
[134 165]
[135 164]
[136 163]
[137 162]
[138 161]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
