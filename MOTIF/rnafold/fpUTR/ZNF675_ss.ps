%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGACAAGAUGGCUUCCGGGAUUUGGCGGCGCCUUUGUCUCUCGCUGCAGCCGGAGCUCCAGGUCUCGCUUUCAUUGCUCUGUGUCCUCUGCUCCUAGAGGUCCAGCCUCUGUGGGCCUGUGACCUGCAGAAAUUGAGAGAUCCACAGCUAAGACUCCAGGACCCCCUGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

/coor [
[100.62703705 359.34906006]
[87.41251373 366.71325684]
[72.56869507 369.63156128]
[57.54983521 367.81799316]
[43.82732391 361.45025635]
[32.74555206 351.15222168]
[25.39019966 337.93276978]
[22.48186874 323.08700562]
[24.30549049 308.06936646]
[30.68240356 294.35113525]
[40.98786163 283.27624512]
[54.21224213 275.92977905]
[69.05995178 273.03137207]
[70.85816956 258.13955688]
[72.65638733 243.24774170]
[74.45460510 228.35591125]
[76.25282288 213.46409607]
[78.05104065 198.57226562]
[79.84925842 183.68045044]
[81.64747620 168.78862000]
[83.44569397 153.89678955]
[85.24391174 139.00497437]
[79.65312958 134.00566101]
[73.59914398 147.72969055]
[58.67602539 146.21295166]
[55.50706482 131.55151367]
[68.47156525 124.00703430]
[62.88077927 119.00772095]
[48.28181458 122.45303345]
[33.68284988 125.89835358]
[19.08388329 129.34367371]
[4.48491669 132.78898621]
[-10.11404896 136.23429871]
[-13.86209106 151.07380676]
[-24.08570862 162.46397400]
[-38.43559265 167.78746033]
[-53.61424255 165.82093811]
[-66.13371277 157.01632690]
[-73.11712646 143.39683533]
[-72.95974731 128.09213257]
[-65.69773102 114.61913300]
[-52.99984360 106.07382965]
[-37.78396225 104.41986847]
[-23.54658890 110.03731537]
[-13.55936527 121.63533020]
[1.03960073 118.19001770]
[15.63856602 114.74469757]
[30.23753166 111.29938507]
[44.83649826 107.85407257]
[59.43546295 104.40875244]
[68.32810974 80.27711487]
[88.44785309 68.21594238]
[109.44180298 71.18152618]
[117.49224854 58.52489471]
[125.43375397 45.79962921]
[133.26574707 33.00666428]
[141.09773254 20.21369934]
[148.92971802 7.42073345]
[150.74914551 -1.55666339]
[157.00756836 -5.52298832]
[165.05799866 -18.17962265]
[161.84054565 -33.42054749]
[170.18515015 -46.14149094]
[184.73486328 -49.11491394]
[192.78530884 -61.77154922]
[200.83575439 -74.42818451]
[191.74807739 -90.46556091]
[192.03431702 -108.81169891]
[201.52966309 -124.41279602]
[217.54432678 -133.01480103]
[235.62490845 -132.32319641]
[243.01312256 -145.37748718]
[250.40135193 -158.43176270]
[257.78958130 -171.48603821]
[265.17779541 -184.54031372]
[272.56600952 -197.59458923]
[265.92974854 -209.69165039]
[266.14221191 -223.37947083]
[273.04077148 -235.07807922]
[284.72796631 -241.78074646]
[298.09237671 -241.82650757]
[305.70361328 -254.75204468]
[313.31481934 -267.67758179]
[320.92605591 -280.60308838]
[328.53729248 -293.52862549]
[335.92550659 -306.58288574]
[343.08853149 -319.76208496]
[350.25158691 -332.94125366]
[342.35314941 -346.03942871]
[342.07318115 -361.23214722]
[349.38674927 -374.43734741]
[362.24212646 -382.15716553]
[377.13522339 -382.40414429]
[384.29827881 -395.58334351]
[391.46130371 -408.76251221]
[398.62435913 -421.94171143]
[398.41635132 -437.76153564]
[411.29214478 -445.24905396]
[418.45520020 -458.42822266]
[425.61822510 -471.60742188]
[432.78128052 -484.78659058]
[439.94430542 -497.96578979]
[447.10736084 -511.14495850]
[454.27038574 -524.32415771]
[456.52175903 -541.12792969]
[473.29208374 -543.61633301]
[480.32571411 -528.19024658]
[467.44955444 -517.16113281]
[460.28652954 -503.98193359]
[453.12350464 -490.80273438]
[445.96044922 -477.62356567]
[438.79742432 -464.44436646]
[431.63436890 -451.26519775]
[424.47134399 -438.08599854]
[425.19168091 -423.20883179]
[411.80352783 -414.77865601]
[404.64050293 -401.59948730]
[397.47744751 -388.42028809]
[390.31442261 -375.24111938]
[398.20779419 -362.60940552]
[398.72210693 -347.62304688]
[391.61907959 -334.30337524]
[378.71804810 -326.27468872]
[363.43075562 -325.77822876]
[356.26773071 -312.59902954]
[349.10467529 -299.41986084]
[349.58453369 -294.64538574]
[347.05288696 -289.52239990]
[341.46279907 -285.91738892]
[333.85159302 -272.99188232]
[326.24035645 -260.06634521]
[318.62911987 -247.14080811]
[311.01791382 -234.21528625]
[318.04458618 -219.39202881]
[314.82788086 -203.13682556]
[302.43936157 -191.88365173]
[285.62030029 -190.20637512]
[278.23205566 -177.15209961]
[270.84384155 -164.09782410]
[263.45562744 -151.04353333]
[256.06741333 -137.98925781]
[248.67918396 -124.93498230]
[256.03552246 -115.68663788]
[259.84359741 -104.46313477]
[259.63281250 -92.57840729]
[255.40455627 -81.43217468]
[247.63476562 -72.34511566]
[237.22044373 -66.40235901]
[225.37615967 -64.32397461]
[213.49238586 -66.37773895]
[205.44194031 -53.72110367]
[197.39149475 -41.06447220]
[200.86630249 -26.62627983]
[192.88229370 -13.67597198]
[177.71463013 -10.12917900]
[169.66419983 2.52745438]
[161.72268677 15.25272274]
[153.89070129 28.04568672]
[146.05871582 40.83865356]
[138.22671509 53.63161850]
[137.41374207 60.99630737]
[130.14888000 66.57534027]
[122.09843445 79.23197174]
[131.06747437 90.72894287]
[133.99343872 105.98806763]
[129.39428711 121.82750702]
[117.45067596 134.55104065]
[100.13574219 140.80319214]
[98.33752441 155.69500732]
[96.53930664 170.58683777]
[94.74108124 185.47866821]
[92.94286346 200.37048340]
[91.14464569 215.26231384]
[89.34642792 230.15412903]
[87.54821014 245.04595947]
[85.74999237 259.93777466]
[83.95177460 274.82958984]
[97.68280792 281.17892456]
[108.77837372 291.46209717]
[116.15143585 304.67169189]
[119.07965851 319.51354980]
[117.27616119 334.53363037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[22 168]
[28 50]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[53 163]
[54 162]
[55 160]
[56 159]
[57 158]
[58 157]
[60 156]
[61 155]
[64 152]
[65 151]
[66 150]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[81 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 126]
[87 125]
[88 124]
[93 119]
[94 118]
[95 117]
[96 116]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
