%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OIP5)
} def

/sequence { (\
GAGCUGUGCUUGGGGCGGGGCCUGGCGUGUAUUCGAAAGGAAGGCGCCGGCUGCGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.769591779 ubox
2 10 0.816458230 ubox
2 11 0.021556792 ubox
2 23 0.006435454 ubox
2 52 0.009531402 ubox
3 9 0.822761151 ubox
3 10 0.009964593 ubox
3 16 0.244111853 ubox
3 21 0.201829317 ubox
3 22 0.004879800 ubox
3 51 0.009464747 ubox
3 54 0.027760573 ubox
4 8 0.816868628 ubox
4 13 0.089556421 ubox
4 14 0.067958501 ubox
4 15 0.256355576 ubox
4 18 0.031778310 ubox
4 19 0.006665049 ubox
4 20 0.202508725 ubox
4 50 0.009315932 ubox
4 53 0.027715802 ubox
4 56 0.202000458 ubox
4 57 0.032407547 ubox
4 60 0.055138263 ubox
5 12 0.088239534 ubox
5 13 0.068036998 ubox
5 14 0.255643652 ubox
5 17 0.031810392 ubox
5 18 0.006424231 ubox
5 19 0.202557514 ubox
5 49 0.009047277 ubox
5 55 0.202701972 ubox
5 56 0.029766290 ubox
5 59 0.054559552 ubox
6 11 0.068684845 ubox
6 16 0.035293833 ubox
6 48 0.007317152 ubox
6 51 0.005360121 ubox
6 52 0.005678075 ubox
6 54 0.203080934 ubox
7 15 0.035369504 ubox
7 17 0.203070266 ubox
7 50 0.005023534 ubox
7 53 0.196691168 ubox
7 55 0.026306743 ubox
8 16 0.223645839 ubox
8 21 0.005317255 ubox
8 26 0.006798717 ubox
8 51 0.187538034 ubox
8 52 0.059555216 ubox
8 54 0.034963991 ubox
9 15 0.225097838 ubox
9 19 0.004550855 ubox
9 20 0.005335557 ubox
9 25 0.006800961 ubox
9 50 0.188174119 ubox
9 53 0.034992020 ubox
9 56 0.034412260 ubox
9 57 0.247234712 ubox
9 60 0.195985883 ubox
10 14 0.202808996 ubox
10 18 0.004717134 ubox
10 19 0.005325626 ubox
10 24 0.006265500 ubox
10 49 0.137181575 ubox
10 50 0.061928641 ubox
10 55 0.032120006 ubox
10 56 0.248267631 ubox
10 57 0.006537230 ubox
10 58 0.011790826 ubox
10 59 0.201795731 ubox
10 60 0.027991236 ubox
11 17 0.004768122 ubox
11 18 0.005145573 ubox
11 49 0.141413900 ubox
11 55 0.247638757 ubox
11 56 0.009004664 ubox
11 57 0.011500397 ubox
11 58 0.202403299 ubox
11 59 0.060663478 ubox
12 16 0.007179726 ubox
12 23 0.006282005 ubox
12 48 0.191144277 ubox
12 52 0.005817109 ubox
12 54 0.251899418 ubox
13 22 0.006720766 ubox
13 23 0.016120489 ubox
13 47 0.191190062 ubox
13 48 0.009164314 ubox
13 51 0.005062453 ubox
13 52 0.087407123 ubox
14 21 0.006675975 ubox
14 22 0.017165193 ubox
14 47 0.008504099 ubox
14 48 0.054724974 ubox
14 51 0.093058389 ubox
14 52 0.242286869 ubox
15 21 0.017200047 ubox
15 45 0.191359086 ubox
15 47 0.054911722 ubox
15 51 0.242950821 ubox
15 54 0.083233048 ubox
16 20 0.017094909 ubox
16 44 0.191333358 ubox
16 46 0.055054081 ubox
16 49 0.165096047 ubox
16 50 0.201262768 ubox
16 53 0.083184120 ubox
16 55 0.869844199 ubox
17 45 0.054977811 ubox
17 48 0.213872857 ubox
17 52 0.056369360 ubox
17 54 0.916515417 ubox
18 47 0.214172772 ubox
18 48 0.147658241 ubox
18 51 0.046057818 ubox
18 52 0.009276320 ubox
19 47 0.147592404 ubox
19 51 0.009296367 ubox
19 52 0.917176120 ubox
20 45 0.260077755 ubox
20 51 0.921253739 ubox
20 54 0.011105575 ubox
21 40 0.199721907 ubox
21 44 0.259713247 ubox
21 50 0.909101276 ubox
21 53 0.011223875 ubox
21 57 0.004409679 ubox
22 39 0.200485243 ubox
22 40 0.003552299 ubox
22 43 0.259153922 ubox
22 49 0.896131592 ubox
22 50 0.252794812 ubox
22 55 0.003712347 ubox
22 56 0.006632963 ubox
22 57 0.011296781 ubox
23 35 0.003539314 ubox
23 38 0.202299034 ubox
23 39 0.006594224 ubox
23 42 0.254212151 ubox
23 49 0.295741918 ubox
23 53 0.003712819 ubox
23 55 0.006284279 ubox
23 56 0.011234502 ubox
24 30 0.004763312 ubox
24 34 0.007219312 ubox
24 48 0.944160074 ubox
24 52 0.006516744 ubox
24 54 0.004392045 ubox
25 33 0.006161270 ubox
25 47 0.944619232 ubox
25 51 0.007831724 ubox
25 54 0.011013451 ubox
26 35 0.276923990 ubox
26 46 0.944580551 ubox
26 50 0.007660330 ubox
26 53 0.011021628 ubox
27 34 0.275203912 ubox
27 45 0.943320453 ubox
27 47 0.016674567 ubox
28 35 0.091447403 ubox
28 44 0.927400067 ubox
28 46 0.017959702 ubox
29 34 0.093777211 ubox
29 45 0.048180841 ubox
30 44 0.052534863 ubox
32 38 0.024427023 ubox
32 39 0.055940814 ubox
32 40 0.038705225 ubox
32 41 0.567124773 ubox
32 42 0.626209781 ubox
32 43 0.023444373 ubox
33 37 0.020718413 ubox
33 38 0.046383428 ubox
33 39 0.033996570 ubox
33 40 0.611254752 ubox
33 41 0.703079646 ubox
33 42 0.018033815 ubox
33 44 0.010476251 ubox
34 39 0.618793956 ubox
34 40 0.705618738 ubox
34 43 0.025827995 ubox
48 55 0.003339973 ubox
49 54 0.005918260 ubox
51 57 0.028118378 ubox
51 60 0.052898269 ubox
52 56 0.025447114 ubox
52 59 0.053986333 ubox
1 11 0.9500000 lbox
2 10 0.9500000 lbox
3 9 0.9500000 lbox
4 8 0.9500000 lbox
16 55 0.9500000 lbox
17 54 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
showpage
end
%%EOF
