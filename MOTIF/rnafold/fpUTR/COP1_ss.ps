%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:28:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCUACAGGGACCGCGGUGGCGGCGGCGGCCUCGACAGCGGUAGUGCCUUCUACUCCGCUUUUUUAGUUUCCUCCGCCCCCUCCCGUGGGACGCUGUUGUGUGGCUGCCUUAAAAAAAAACGCAACUUUAUUGUUCCUCAGCCCCACCUCCGGCUCGGCGGGCGUCCUCAGGAUGCACUGAGGCUGAGGGGAGGGGAGGCGGCGGAGGGUCGAGGUCGCGGUCCCUCUCCUCCGAGCGCCCGGCUGGAGGGG\
AGGGAGUCACG\
) } def
/len { sequence length } bind def

/coor [
[63.95762253 518.40240479]
[56.50442886 519.23901367]
[51.48485184 533.37420654]
[46.46527100 547.50939941]
[41.44569397 561.64459229]
[36.42611313 575.77978516]
[31.40653610 589.91497803]
[26.38695717 604.05017090]
[21.36737823 618.18536377]
[31.39279366 629.82098389]
[34.24150467 644.91339111]
[29.14721870 659.40283203]
[17.48027420 669.39172363]
[2.37902308 672.19311523]
[-12.09437561 667.05340576]
[-22.04665184 655.35522461]
[-24.80068970 640.24523926]
[-19.61567116 625.78802490]
[-7.88633633 615.87249756]
[7.23218060 613.16583252]
[12.25175953 599.03063965]
[17.27133751 584.89544678]
[22.29091644 570.76019287]
[27.31049538 556.62500000]
[32.33007431 542.48980713]
[37.34965134 528.35461426]
[42.36923218 514.21942139]
[59.81804657 497.19268799]
[78.73751831 496.72213745]
[75.93026733 481.98718262]
[73.12301636 467.25219727]
[70.31576538 452.51724243]
[67.50851440 437.78225708]
[64.70126343 423.04730225]
[61.89400864 408.31231689]
[59.08675385 393.57736206]
[56.27950287 378.84237671]
[53.47225189 364.10742188]
[50.66499710 349.37243652]
[37.58727264 342.02581787]
[23.54286385 347.29406738]
[9.49845409 352.56234741]
[-4.54595470 357.83059692]
[-18.59036255 363.09884644]
[-25.49737930 369.02294922]
[-32.83113480 368.34542847]
[-46.93655777 373.44805908]
[-61.04198074 378.55072021]
[-75.14739990 383.65338135]
[-83.23054504 397.51129150]
[-99.12507629 399.68927002]
[-110.63806915 388.51651001]
[-108.93773651 372.56381226]
[-95.32843781 364.06872559]
[-80.25005341 369.54794312]
[-66.14463043 364.44531250]
[-52.03920746 359.34265137]
[-37.93378448 354.23999023]
[-23.85862541 349.05444336]
[-9.81421661 343.78619385]
[4.23019266 338.51791382]
[18.27460098 333.24966431]
[32.31901169 327.98141479]
[17.70182419 331.34857178]
[3.26711297 327.26947021]
[-7.42581511 316.74990845]
[-11.74030304 302.38378906]
[-8.61248589 287.71353149]
[1.18638003 276.35647583]
[15.24009418 271.11309814]
[30.08329773 273.27627563]
[42.05595779 282.31262207]
[48.20586395 295.99392700]
[47.01696396 310.94555664]
[50.17015839 296.28073120]
[53.32335281 281.61587524]
[56.47654724 266.95104980]
[59.62974167 252.28622437]
[62.78293610 237.62138367]
[65.93612671 222.95655823]
[69.08932495 208.29171753]
[64.20034790 194.22235107]
[74.66573334 182.35700989]
[77.81893158 167.69218445]
[80.97212219 153.02734375]
[84.12532043 138.36250305]
[87.27851105 123.69767761]
[90.43170929 109.03283691]
[75.94565582 87.82122803]
[71.09273529 73.62794495]
[66.23982239 59.43466949]
[61.38690567 45.24138641]
[56.53398895 31.04810715]
[51.85236359 26.45783234]
[50.38581848 21.01157761]
[51.73814392 16.46339417]
[47.22054291 2.15985298]
[42.70294189 -12.14368820]
[37.10567093 -26.06024361]
[30.46144867 -39.50845337]
[23.81722641 -52.95666122]
[17.17300415 -66.40486908]
[10.52878284 -79.85308075]
[3.88456130 -93.30128479]
[-2.75966072 -106.74949646]
[-17.77464676 -104.79273224]
[-32.61093903 -107.81978607]
[-45.65921402 -115.50231934]
[-55.50408936 -127.00697327]
[-61.07766342 -141.08583069]
[-61.77536011 -156.21170044]
[-57.52149963 -170.74385071]
[-48.77750778 -183.10594177]
[-36.49186325 -191.95701599]
[-21.99722672 -196.33700562]
[-6.86586475 -195.77076721]
[7.26088428 -190.31974792]
[18.85065651 -180.57521057]
[26.64628220 -167.59419250]
[29.80214691 -152.78475952]
[27.97592735 -137.75334167]
[21.36571884 -124.13041687]
[10.68854809 -113.39371490]
[17.33276939 -99.94551086]
[23.97699165 -86.49729919]
[30.62121391 -73.04909515]
[37.26543427 -59.60088348]
[43.90965652 -46.15267563]
[50.55387878 -32.70446777]
[51.51966858 -47.67334366]
[58.43319702 -60.98510742]
[70.12311554 -70.38435364]
[84.60879517 -74.27857971]
[99.43594360 -72.00798035]
[112.09240723 -63.95726013]
[120.43379211 -51.49045181]
[123.04683685 -36.71980667]
[119.48880005 -22.14790154]
[110.36253357 -10.24365044]
[97.21428680 -3.02398396]
[82.27175903 -1.71212757]
[68.06666565 -6.53034830]
[57.00648499 -16.66128731]
[61.52408600 -2.35774684]
[66.04168701 11.94579411]
[70.72726440 26.19519043]
[75.58018494 40.38846970]
[80.43309784 54.58175278]
[85.28601837 68.77503204]
[90.13893127 82.96831512]
[104.44247437 87.48590851]
[116.56734467 78.65486145]
[128.69221497 69.82380676]
[140.81709290 60.99275589]
[143.57786560 48.41636276]
[153.82994080 41.30770874]
[165.78314209 43.01948547]
[178.01107788 34.33170700]
[190.23902893 25.64393044]
[202.46696472 16.95615005]
[214.69490051 8.26837158]
[226.92283630 -0.41940707]
[238.99554443 -9.32163715]
[250.90927124 -18.43554688]
[262.76916504 -27.61938667]
[274.57482910 -36.87284088]
[286.38049316 -46.12629700]
[298.18612671 -55.37974930]
[309.99179077 -64.63320923]
[321.79745483 -73.88665771]
[330.53356934 -88.41651154]
[346.91400146 -84.04405975]
[347.24697876 -67.09337616]
[331.05090332 -62.08100128]
[319.24523926 -52.82754517]
[307.43960571 -43.57409286]
[295.63394165 -34.32063675]
[283.82827759 -25.06718254]
[272.02261353 -15.81372833]
[268.70831299 -9.23662090]
[260.02316284 -6.52182865]
[248.10945129 2.59208012]
[247.27781677 5.98557043]
[244.78097534 9.15222645]
[240.73985291 11.32259178]
[235.61062622 11.80853176]
[223.38267517 20.49631119]
[211.15473938 29.18408966]
[198.92680359 37.87186813]
[186.69886780 46.55964661]
[174.47091675 55.24742508]
[168.01383972 71.58085632]
[149.64814758 73.11763000]
[137.52326965 81.94868469]
[125.39839935 90.77973175]
[113.27352905 99.61078644]
[105.09654236 112.18603516]
[101.94334412 126.85086823]
[98.79015350 141.51570129]
[95.63695526 156.18054199]
[92.48376465 170.84536743]
[89.33057404 185.51020813]
[93.99401093 200.62850952]
[83.75415802 211.44491577]
[80.60096741 226.10974121]
[77.44776917 240.77458191]
[74.29457855 255.43940735]
[71.14138031 270.10424805]
[67.98818970 284.76907349]
[64.83499146 299.43392944]
[61.68180084 314.09875488]
[65.39997101 346.56518555]
[68.20722198 361.30017090]
[71.01447296 376.03512573]
[73.82172394 390.77011108]
[76.62897491 405.50506592]
[79.43623352 420.24005127]
[82.24348450 434.97500610]
[85.05073547 449.70999146]
[87.85798645 464.44494629]
[90.66523743 479.17993164]
[93.47248840 493.91488647]
[98.98779297 507.86413574]
[107.01625061 520.53472900]
[115.11911774 533.15789795]
[123.29610443 545.73309326]
[131.47308350 558.30834961]
[139.65007019 570.88360596]
[147.82705688 583.45886230]
[156.00404358 596.03411865]
[164.18103027 608.60937500]
[172.35801697 621.18463135]
[180.53500366 633.75988770]
[188.71197510 646.33514404]
[196.88896179 658.91033936]
[205.06594849 671.48559570]
[212.34188843 676.95025635]
[213.26416016 684.25726318]
[221.29261780 696.92785645]
[229.32107544 709.59844971]
[244.59762573 714.49810791]
[250.15678406 729.54718018]
[241.73403931 743.20135498]
[225.79058838 744.98632812]
[214.55690002 733.53277588]
[216.65048218 717.62695312]
[208.62202454 704.95635986]
[200.59356689 692.28576660]
[192.49070740 679.66259766]
[184.31372070 667.08734131]
[176.13673401 654.51208496]
[167.95974731 641.93682861]
[159.78276062 629.36163330]
[151.60577393 616.78637695]
[143.42878723 604.21112061]
[135.25180054 591.63586426]
[127.07482147 579.06060791]
[118.89783478 566.48535156]
[110.72084808 553.91009521]
[102.54386902 541.33483887]
[96.28444672 537.45379639]
[94.34566498 528.56317139]
[86.31720734 515.89257812]
[78.86401367 516.72918701]
[85.06163025 530.38897705]
[73.98555756 540.50433350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[29 222]
[30 221]
[31 220]
[32 219]
[33 218]
[34 217]
[35 216]
[36 215]
[37 214]
[38 213]
[39 212]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[46 58]
[47 57]
[48 56]
[49 55]
[74 211]
[75 210]
[76 209]
[77 208]
[78 207]
[79 206]
[80 205]
[81 204]
[83 202]
[84 201]
[85 200]
[86 199]
[87 198]
[88 197]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
[96 145]
[97 144]
[98 143]
[99 129]
[100 128]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[151 196]
[152 195]
[153 194]
[154 193]
[157 191]
[158 190]
[159 189]
[160 188]
[161 187]
[162 186]
[163 182]
[164 181]
[165 179]
[166 178]
[167 177]
[168 176]
[169 175]
[170 174]
[223 263]
[224 262]
[225 260]
[226 259]
[227 258]
[228 257]
[229 256]
[230 255]
[231 254]
[232 253]
[233 252]
[234 251]
[235 250]
[236 249]
[238 248]
[239 247]
[240 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
