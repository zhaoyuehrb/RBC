%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPATA32)
} def

/sequence { (\
AGCGCCCACCAGUCCCUCAGCCAAAGAGCACACUGGAGGCGGAGAGGCAGCAUCCACCAGCCCGCUCCCCGCCUCCAGGACAGAGCCUCGGUCUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.036089093 ubox
1 88 0.014168163 ubox
1 94 0.050467432 ubox
2 13 0.322944146 ubox
2 16 0.040842637 ubox
2 21 0.105648528 ubox
2 29 0.133214692 ubox
2 86 0.012672442 ubox
2 87 0.016237383 ubox
2 92 0.010642330 ubox
2 93 0.053290842 ubox
2 96 0.352700088 ubox
3 12 0.335036111 ubox
3 20 0.105880644 ubox
3 28 0.133129156 ubox
3 85 0.012747158 ubox
3 90 0.019216305 ubox
3 91 0.012112953 ubox
3 95 0.355329570 ubox
4 13 0.123121617 ubox
4 21 0.051237832 ubox
4 29 0.101723035 ubox
4 86 0.021105419 ubox
4 89 0.019421467 ubox
4 92 0.088925521 ubox
4 94 0.330911960 ubox
4 96 0.412494985 ubox
5 12 0.127951285 ubox
5 20 0.051223821 ubox
5 28 0.101386982 ubox
5 79 0.019985492 ubox
5 85 0.021096932 ubox
5 91 0.094586382 ubox
5 95 0.414807639 ubox
6 78 0.016136142 ubox
6 79 0.031598873 ubox
6 90 0.094182645 ubox
6 91 0.059106059 ubox
7 78 0.028458308 ubox
7 90 0.059555519 ubox
7 95 0.022892236 ubox
8 92 0.536720107 ubox
8 94 0.016708907 ubox
9 36 0.014085017 ubox
9 79 0.022511281 ubox
9 91 0.546076819 ubox
10 35 0.019958304 ubox
10 78 0.020136475 ubox
10 90 0.545820882 ubox
10 95 0.443630539 ubox
11 17 0.040561544 ubox
11 34 0.037690313 ubox
11 88 0.479185888 ubox
11 94 0.448165721 ubox
12 16 0.042243691 ubox
12 21 0.122058322 ubox
12 29 0.049884263 ubox
12 31 0.261610649 ubox
12 33 0.042496441 ubox
12 81 0.131438986 ubox
12 86 0.070494387 ubox
12 87 0.480377995 ubox
12 93 0.448057082 ubox
12 96 0.017164725 ubox
13 20 0.118617465 ubox
13 27 0.021013256 ubox
13 28 0.032620129 ubox
13 30 0.255239887 ubox
13 32 0.042512657 ubox
13 80 0.138128876 ubox
13 84 0.103228229 ubox
13 85 0.056398014 ubox
13 91 0.019846225 ubox
13 95 0.010681008 ubox
14 26 0.022885471 ubox
14 79 0.139469986 ubox
14 83 0.108463753 ubox
14 90 0.020268038 ubox
14 91 0.440061699 ubox
15 78 0.106503838 ubox
15 79 0.022394112 ubox
15 90 0.439710482 ubox
15 91 0.048748863 ubox
16 26 0.044178470 ubox
16 28 0.459460154 ubox
16 78 0.017450793 ubox
16 79 0.011477794 ubox
16 83 0.036862179 ubox
16 85 0.609121123 ubox
16 90 0.050048447 ubox
16 91 0.006095709 ubox
17 25 0.043149829 ubox
17 27 0.464996778 ubox
17 77 0.012860351 ubox
17 79 0.003384173 ubox
17 80 0.099313779 ubox
17 82 0.033791311 ubox
17 84 0.610177026 ubox
17 90 0.005853461 ubox
18 26 0.465246875 ubox
18 79 0.100835190 ubox
18 83 0.609514245 ubox
18 95 0.415211056 ubox
19 88 0.036700783 ubox
19 94 0.420035520 ubox
20 29 0.689204444 ubox
20 86 0.056236339 ubox
20 87 0.034773446 ubox
20 92 0.143545682 ubox
20 93 0.416337511 ubox
20 96 0.023174415 ubox
21 28 0.688548805 ubox
21 79 0.031937364 ubox
21 85 0.057196406 ubox
21 91 0.438880140 ubox
21 95 0.023031283 ubox
22 78 0.028315375 ubox
22 90 0.438347422 ubox
22 95 0.008137338 ubox
23 94 0.008361092 ubox
25 34 0.011109647 ubox
25 88 0.356551544 ubox
25 94 0.006585053 ubox
26 33 0.012709352 ubox
26 87 0.367671141 ubox
26 89 0.259337682 ubox
26 93 0.006756206 ubox
27 34 0.010631536 ubox
27 88 0.259206759 ubox
27 92 0.006391855 ubox
28 33 0.012024768 ubox
28 86 0.409170528 ubox
28 87 0.199083918 ubox
28 96 0.027581895 ubox
29 85 0.440980436 ubox
29 95 0.028113212 ubox
30 94 0.024304381 ubox
31 95 0.007920482 ubox
32 92 0.004609860 ubox
32 94 0.006863637 ubox
33 78 0.986570906 ubox
33 79 0.035216455 ubox
33 83 0.007160832 ubox
33 91 0.004647229 ubox
34 77 0.996157984 ubox
34 78 0.017455693 ubox
34 82 0.005401851 ubox
34 90 0.004277956 ubox
35 76 0.999774282 ubox
36 75 0.999892438 ubox
37 74 0.999834554 ubox
38 73 0.999983996 ubox
39 72 0.999991268 ubox
40 71 0.999951123 ubox
41 68 0.075423545 ubox
41 69 0.041581649 ubox
41 70 0.996225655 ubox
42 67 0.084688701 ubox
42 68 0.056813244 ubox
42 69 0.994009223 ubox
43 66 0.099597626 ubox
44 65 0.101369551 ubox
44 67 0.989302488 ubox
45 66 0.984050485 ubox
46 62 0.122582076 ubox
46 63 0.099695594 ubox
46 65 0.948392878 ubox
46 66 0.128703203 ubox
46 67 0.017580465 ubox
46 68 0.049465570 ubox
47 61 0.138927272 ubox
47 62 0.100463858 ubox
47 65 0.267827523 ubox
47 67 0.049483660 ubox
47 68 0.004201929 ubox
48 60 0.139974267 ubox
48 64 0.354364398 ubox
49 66 0.049600315 ubox
50 61 0.984479233 ubox
50 65 0.050065240 ubox
51 60 0.985523916 ubox
51 64 0.050097212 ubox
75 91 0.007208741 ubox
76 90 0.007399258 ubox
76 95 0.003709944 ubox
77 88 0.053515839 ubox
77 94 0.003703730 ubox
78 87 0.070998986 ubox
78 88 0.006666349 ubox
78 89 0.007825809 ubox
78 94 0.024918988 ubox
79 86 0.082046907 ubox
79 87 0.028531488 ubox
79 88 0.012008206 ubox
79 89 0.115128857 ubox
79 93 0.130690950 ubox
80 88 0.110206838 ubox
80 92 0.131087609 ubox
81 91 0.130171648 ubox
81 95 0.511714120 ubox
82 88 0.042758906 ubox
82 94 0.519527779 ubox
83 87 0.045972100 ubox
83 89 0.163128345 ubox
83 93 0.520371410 ubox
84 88 0.142679733 ubox
84 92 0.455308864 ubox
84 94 0.037421036 ubox
85 92 0.254060581 ubox
85 93 0.038237129 ubox
85 96 0.014860411 ubox
86 91 0.479703449 ubox
86 95 0.014986918 ubox
10 95 0.9500000 lbox
11 94 0.9500000 lbox
12 93 0.9500000 lbox
14 91 0.9500000 lbox
15 90 0.9500000 lbox
16 85 0.9500000 lbox
17 84 0.9500000 lbox
18 83 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
33 78 0.9500000 lbox
34 77 0.9500000 lbox
35 76 0.9500000 lbox
36 75 0.9500000 lbox
37 74 0.9500000 lbox
38 73 0.9500000 lbox
39 72 0.9500000 lbox
40 71 0.9500000 lbox
41 70 0.9500000 lbox
42 69 0.9500000 lbox
44 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
50 61 0.9500000 lbox
51 60 0.9500000 lbox
showpage
end
%%EOF
