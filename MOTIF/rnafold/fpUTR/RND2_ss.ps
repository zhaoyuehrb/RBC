%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGCCGGUGUUGGCGGCCCGAGCGGCUGCAGUUGCAGGGGCGGGGGAGGCGGCGGCGGGGCCCGGGAGAGGGGUGGCGUGGGGGACCGGCGCGUAGCCGGGACC\
) } def
/len { sequence length } bind def

/coor [
[196.85226440 264.74530029]
[189.41259766 255.54586792]
[187.38900757 243.76631165]
[191.41256714 232.38352966]
[182.45520020 220.35168457]
[173.49781799 208.31982422]
[164.54043579 196.28797913]
[155.58305359 184.25613403]
[146.62567139 172.22428894]
[130.29840088 172.97103882]
[116.57478333 163.79347229]
[110.91632843 148.10813904]
[115.71430206 131.96615601]
[106.41077423 120.19992065]
[90.04415894 118.70871735]
[79.66454315 105.96692657]
[81.51376343 89.63689423]
[71.87194824 78.14622498]
[62.23013687 66.65555573]
[52.42222214 55.30633545]
[42.45028305 44.10095978]
[32.47834778 32.89558411]
[19.57298279 31.33494186]
[11.49940014 21.66601944]
[12.21947193 9.49374294]
[2.57765818 -1.99692357]
[-12.22003746 -7.59502792]
[-14.47385406 -22.31812477]
[-24.11566925 -33.80879211]
[-33.75748062 -45.29945755]
[-43.39929581 -56.79012299]
[-53.04111099 -68.28079224]
[-72.97751617 -68.79512787]
[-86.09737396 -83.41596222]
[-84.50656891 -102.69604492]
[-95.11317444 -113.30265045]
[-105.71977234 -123.90924835]
[-116.32637787 -134.51585388]
[-132.29815674 -138.23530579]
[-136.80334473 -154.00347900]
[-125.20739746 -165.59942627]
[-109.43922424 -161.09423828]
[-105.71977234 -145.12245178]
[-95.11317444 -134.51585388]
[-84.50656891 -123.90924835]
[-73.89997101 -113.30265045]
[-63.75252151 -116.11874390]
[-53.28445435 -114.37335205]
[-44.46500778 -108.32494354]
[-38.98268509 -99.04795837]
[-37.92219162 -88.24243164]
[-41.55044556 -77.92260742]
[-31.90863037 -66.43193817]
[-22.26681519 -54.94127274]
[-12.62500191 -43.45060730]
[-2.98318768 -31.95993805]
[11.12486076 -27.18372345]
[14.06832504 -11.63873768]
[23.71013832 -0.14807101]
[40.45761490 4.86764717]
[43.68372345 22.92364502]
[53.65566254 34.12902069]
[63.62759781 45.33439636]
[70.53200531 48.28434372]
[73.72080231 57.01374435]
[83.36261749 68.50440979]
[93.00443268 79.99507904]
[105.76308441 79.60584259]
[116.43103790 86.61508179]
[121.13822937 98.48003387]
[118.17700958 110.89639282]
[127.48053741 122.66262817]
[141.26162720 121.08377838]
[153.90708923 126.51498413]
[162.11979675 137.42257690]
[163.81697083 150.86079407]
[158.65753174 163.26690674]
[167.61489868 175.29875183]
[176.57228088 187.33059692]
[185.52966309 199.36245728]
[194.48704529 211.39430237]
[203.44442749 223.42614746]
[222.16894531 225.34115601]
[233.48413086 239.98625183]
[230.70733643 257.96505737]
[240.34915161 269.45571899]
[255.85110474 270.98132324]
[265.46557617 282.77182007]
[263.91564941 297.54116821]
[273.55743408 309.03182983]
[283.19924927 320.52249146]
[292.84106445 332.01315308]
[302.48287964 343.50384521]
[318.27526855 346.32885742]
[325.78591919 360.50521851]
[319.25335693 375.15802002]
[303.68878174 379.04690552]
[291.03201294 369.18865967]
[290.99221802 353.14566040]
[281.35040283 341.65496826]
[271.70858765 330.16430664]
[262.06677246 318.67364502]
[252.42497253 307.18298340]
[237.61087036 306.14471436]
[227.66900635 294.62887573]
[228.85848999 279.09753418]
[219.21667480 267.60687256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 82]
[5 81]
[6 80]
[7 79]
[8 78]
[9 77]
[13 72]
[14 71]
[17 67]
[18 66]
[19 65]
[20 63]
[21 62]
[22 61]
[25 59]
[26 58]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[35 46]
[36 45]
[37 44]
[38 43]
[85 107]
[86 106]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
