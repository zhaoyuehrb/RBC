%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUGGCAGCGCUUGCAGUCGGGCUACGGAGGCCGGGUUGCCAGAUUACGGGAAAGCCAUUUAAGAAGUUCCUGGAAUAAUAUUAGUCAGAGUAAUAUAGGAUCUGCAGGAAGUGUCUCAAGAUAGUUGGAAAAGAAGAAUUUCUAGACUCUUCAUCAAGAUCUUCAUUUAUACAGCUGUUAAAUCCAAGGCUACUUUGGUGAAAGC\
) } def
/len { sequence length } bind def

/coor [
[-75.43164062 269.34341431]
[-87.64629364 278.04986572]
[-99.86095428 286.75628662]
[-112.07560730 295.46273804]
[-124.29026031 304.16918945]
[-136.50491333 312.87564087]
[-148.71957397 321.58209229]
[-147.81874084 335.33764648]
[-153.78559875 347.64419556]
[-164.96513367 355.33337402]
[-178.37609863 356.48455811]
[-190.50578308 350.90356445]
[-202.85054016 359.42453003]
[-215.19529724 367.94549561]
[-227.54005432 376.46649170]
[-234.50209045 390.67355347]
[-249.37171936 391.53579712]
[-261.71646118 400.05676270]
[-274.06121826 408.57772827]
[-286.40597534 417.09869385]
[-293.36801147 431.30575562]
[-308.23764038 432.16799927]
[-320.58239746 440.68896484]
[-332.92715454 449.20996094]
[-335.62686157 467.95980835]
[-350.91076660 478.60168457]
[-368.80792236 474.76171875]
[-380.88967896 483.65164185]
[-392.97146606 492.54159546]
[-402.14566040 506.79885864]
[-418.38543701 501.92999268]
[-418.20248413 484.97705078]
[-401.86138916 480.45980835]
[-389.77963257 471.56988525]
[-377.69784546 462.67996216]
[-378.46649170 451.29409790]
[-373.59197998 440.84332275]
[-364.18090820 433.97384644]
[-352.50384521 432.48632812]
[-341.44812012 436.86520386]
[-329.10336304 428.34420776]
[-316.75860596 419.82324219]
[-310.67956543 406.22564697]
[-294.92697144 404.75393677]
[-282.58221436 396.23297119]
[-270.23745728 387.71200562]
[-257.89270020 379.19104004]
[-251.81362915 365.59344482]
[-236.06101990 364.12173462]
[-223.71626282 355.60073853]
[-211.37150574 347.07977295]
[-199.02674866 338.55880737]
[-199.15643311 322.14462280]
[-189.37957764 308.75286865]
[-173.38873291 303.77725220]
[-157.42602539 309.36743164]
[-145.21136475 300.66098022]
[-132.99670410 291.95452881]
[-120.78205109 283.24807739]
[-108.56739807 274.54162598]
[-96.35273743 265.83520508]
[-84.13808441 257.12875366]
[-82.95977020 234.09358215]
[-64.93679047 219.28311157]
[-41.59085464 222.66725159]
[-30.51470566 212.55197144]
[-19.43855286 202.43669128]
[-8.36240292 192.32141113]
[2.71374846 182.20613098]
[7.10848761 165.21736145]
[25.12344360 161.40908813]
[36.04555893 151.12767029]
[46.96767426 140.84626770]
[57.81183243 130.48266602]
[68.57741547 120.03746796]
[79.34300232 109.59226990]
[77.27320099 98.51145935]
[80.77064514 87.79528809]
[88.97859192 80.06882477]
[99.88638306 77.22479248]
[110.82200623 79.95986176]
[121.89815521 69.84458160]
[126.87068176 54.82510757]
[141.48629761 51.95574570]
[152.56243896 41.84046555]
[163.63859558 31.72518730]
[174.71473694 21.60990715]
[172.16242981 8.06320763]
[176.60240173 -4.87283611]
[186.77357483 -13.85349274]
[199.94801331 -16.61279297]
[212.66197205 -12.53456593]
[223.88963318 -22.48140526]
[235.11729431 -32.42824554]
[246.34495544 -42.37508392]
[244.98907471 -57.72004700]
[252.83705139 -70.76851654]
[266.69964600 -76.62451935]
[281.17898560 -73.23534393]
[292.40664673 -83.18218994]
[303.63430786 -93.12902832]
[314.86196899 -103.07586670]
[326.08963013 -113.02270508]
[337.31729126 -122.96954346]
[348.54495239 -132.91638184]
[345.58618164 -147.92280579]
[350.50347900 -162.30046082]
[361.88153076 -172.22044373]
[376.59881592 -175.09410095]
[390.68356323 -170.24794006]
[401.91122437 -180.19477844]
[413.13888550 -190.14161682]
[424.36654663 -200.08845520]
[429.56533813 -215.03112793]
[444.22262573 -217.67941284]
[455.45028687 -227.62625122]
[466.67794800 -237.57308960]
[477.90560913 -247.51992798]
[479.01446533 -263.05725098]
[490.54260254 -272.98480225]
[505.34820557 -271.83197021]
[516.57586670 -281.77880859]
[527.80352783 -291.72564697]
[539.03118896 -301.67248535]
[540.14001465 -317.20980835]
[551.66815186 -327.13735962]
[566.47381592 -325.98449707]
[577.70147705 -335.93133545]
[577.10076904 -351.55737305]
[586.72564697 -363.88198853]
[602.03155518 -367.08584595]
[615.79138184 -359.65618896]
[621.50830078 -345.10107422]
[616.48291016 -330.29299927]
[603.08801270 -322.22387695]
[587.64831543 -324.70367432]
[576.42065430 -314.75683594]
[575.78045654 -299.92019653]
[564.53570557 -289.67276001]
[548.97802734 -290.44482422]
[537.75036621 -280.49798584]
[526.52270508 -270.55114746]
[515.29504395 -260.60430908]
[514.65490723 -245.76765442]
[503.41015625 -235.52020264]
[487.85244751 -236.29226685]
[476.62478638 -226.34542847]
[465.39712524 -216.39859009]
[454.16946411 -206.45175171]
[449.77374268 -192.22055054]
[434.31338501 -188.86079407]
[423.08572388 -178.91395569]
[411.85806274 -168.96711731]
[400.63040161 -159.02027893]
[403.74349976 -144.45408630]
[399.11682129 -130.19049072]
[387.89770508 -120.09111023]
[373.03216553 -116.94268799]
[358.49179077 -121.68872833]
[347.26412964 -111.74188232]
[336.03646851 -101.79504395]
[324.80880737 -91.84820557]
[313.58114624 -81.90136719]
[302.35348511 -71.95452881]
[291.12582397 -62.00768661]
[292.74499512 -47.22539139]
[285.26074219 -34.16974258]
[271.36145020 -27.95180702]
[256.29177856 -31.14742470]
[245.06413269 -21.20058441]
[233.83647156 -11.25374413]
[222.60881042 -1.30690467]
[224.71604919 14.97197151]
[216.62467957 29.44454765]
[201.35017395 36.31138992]
[184.83001709 32.68605804]
[173.75387573 42.80133820]
[162.67771912 52.91661835]
[151.60157776 63.03189468]
[147.42129517 77.32785797]
[132.01344299 80.92073059]
[120.93728638 91.03601074]
[120.89788818 109.05545807]
[107.77715302 121.40651703]
[89.78820038 120.35785675]
[79.02261353 130.80305481]
[68.25702667 141.24824524]
[64.27581787 149.47209167]
[57.24908447 151.76838684]
[46.32696915 162.04978943]
[35.40485764 172.33120728]
[34.23547745 185.17779541]
[24.92478371 193.51640320]
[12.82902813 193.28228760]
[1.75287676 203.39756775]
[-9.32327461 213.51284790]
[-20.39942551 223.62812805]
[-31.47557640 233.74340820]
[-29.01328278 240.58888245]
[-28.31475639 247.80804443]
[-29.41225052 254.95516968]
[-32.22747040 261.59167480]
[-36.57704544 267.31298828]
[-42.18444061 271.77328491]
[-48.69752884 274.70623779]
[-55.71067429 275.94110107]
[-62.79002380 275.41241455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[4 59]
[5 58]
[6 57]
[7 56]
[12 52]
[13 51]
[14 50]
[15 49]
[17 47]
[18 46]
[19 45]
[20 44]
[22 42]
[23 41]
[24 40]
[27 35]
[28 34]
[29 33]
[65 198]
[66 197]
[67 196]
[68 195]
[69 194]
[71 191]
[72 190]
[73 189]
[74 187]
[75 186]
[76 185]
[81 182]
[82 181]
[84 179]
[85 178]
[86 177]
[87 176]
[92 172]
[93 171]
[94 170]
[95 169]
[99 165]
[100 164]
[101 163]
[102 162]
[103 161]
[104 160]
[105 159]
[110 154]
[111 153]
[112 152]
[113 151]
[115 149]
[116 148]
[117 147]
[118 146]
[121 143]
[122 142]
[123 141]
[124 140]
[127 137]
[128 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
