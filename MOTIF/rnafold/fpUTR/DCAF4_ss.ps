%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGAUCGUCCCUAUUGACGUCGACAGACAGAAGCCGCGUCCAGUGAGAAGGAAAGAACGGCCGCUAUAGCCCUAUCGGCUGCUACAACACCAAAACGCAUCCACCUAACUGGCUGACGCUACACCUUGGUCUUUCCGGGUCCUUGCACGCUUCGCUCCAACUCCUGCAGAGCUGAGCCGGAGGGGAAUCCGGAAGGGACACGCUGAACAGGAACAGAA\
) } def
/len { sequence length } bind def

/coor [
[102.10928345 301.11318970]
[97.68512726 294.23626709]
[94.98043823 286.50271606]
[94.15110779 278.33609009]
[95.25012207 270.18548584]
[98.22421265 262.50085449]
[102.91641998 255.70805359]
[109.07431793 250.18544006]
[116.36362457 246.24266052]
[114.02764130 231.42567444]
[111.69165039 216.60868835]
[109.35566711 201.79170227]
[107.01968384 186.97470093]
[104.68369293 172.15771484]
[97.48477173 170.05403137]
[93.27738953 184.45187378]
[89.06977844 198.84965515]
[74.67206573 194.64181519]
[78.87953949 180.24449158]
[83.08692932 165.84663391]
[75.88800812 163.74295044]
[65.94116974 174.97061157]
[55.99432755 186.19827271]
[53.24601364 202.36547852]
[37.77862549 207.81451416]
[25.50368690 196.93986511]
[29.04860115 180.92845154]
[44.76666641 176.25143433]
[54.71350479 165.02377319]
[64.66034698 153.79611206]
[57.31475449 140.71778870]
[42.55093765 143.36917114]
[33.51881409 156.06005859]
[18.50843811 158.53860474]
[6.46528339 149.84963989]
[-8.29853058 152.50102234]
[-23.06234550 155.15238953]
[-37.82616043 157.80377197]
[-48.41833115 174.88468933]
[-67.85947418 178.59976196]
[-83.51231384 166.99189758]
[-98.14967346 170.27029419]
[-112.78702545 173.54867554]
[-118.81967926 187.84506226]
[-132.12077332 195.83633423]
[-147.57577515 194.44969177]
[-159.24189758 184.21832275]
[-162.63330078 169.07638550]
[-156.44592285 154.84628296]
[-143.05891418 146.99977112]
[-127.61987305 148.55400085]
[-116.06541443 158.91133118]
[-101.42806244 155.63293457]
[-86.79071045 152.35453796]
[-83.83715057 142.53678894]
[-77.02443695 134.76759338]
[-67.52942657 130.49058533]
[-57.03497696 130.53720093]
[-47.43173599 134.96597290]
[-40.47753525 143.03994751]
[-25.71372032 140.38858032]
[-10.94990540 137.73721313]
[3.81390929 135.08583069]
[12.08119869 122.74940491]
[27.01603699 119.85021210]
[39.89956665 128.60534668]
[54.66337967 125.95397949]
[51.24470520 102.29248047]
[58.67661285 81.24981689]
[46.21197891 72.90518951]
[33.74734116 64.56055450]
[21.28270721 56.21592712]
[8.81807232 47.87129593]
[-7.13541889 49.56412888]
[-18.30276871 38.04588699]
[-16.11734390 22.15238380]
[-2.25561309 14.07575226]
[12.64888859 20.01169205]
[17.16270256 35.40666199]
[29.62733841 43.75129318]
[42.09197235 52.09592438]
[54.55661011 60.44055557]
[67.02124786 68.78518677]
[73.68676758 65.34705353]
[66.74864960 52.04808426]
[56.13227844 41.45126343]
[62.89377594 28.06163406]
[77.72360992 30.31464577]
[80.20354462 45.10793304]
[87.01782227 58.47077942]
[93.68334961 55.03264618]
[94.10974884 40.03870773]
[94.53615570 25.04476929]
[94.96255493 10.05083179]
[95.38896179 -4.94310617]
[79.74481201 -15.98364449]
[73.96991730 -34.08197021]
[80.22834778 -51.85954285]
[95.81663513 -62.18289566]
[95.60341644 -77.18138123]
[87.67073059 -90.87017059]
[95.22633362 -103.70614624]
[95.01310730 -118.70462799]
[83.96140289 -129.68176270]
[83.95882416 -144.89540100]
[94.49195099 -155.36386108]
[94.27872467 -170.36235046]
[83.82293701 -182.53016663]
[86.95848083 -198.26382446]
[101.28004456 -205.49380493]
[115.80134583 -198.67387390]
[119.38288116 -183.03570557]
[109.27721405 -170.57557678]
[109.49043274 -155.57708740]
[120.31689453 -145.41227722]
[120.74678802 -130.20471191]
[110.01158905 -118.91784668]
[110.22481537 -103.91936493]
[118.14225006 -91.30336761]
[110.60189819 -77.39459991]
[110.81512451 -62.39611816]
[120.97183990 -57.81177139]
[128.72216797 -49.73383331]
[132.92062378 -39.30097961]
[132.92614746 -28.00374031]
[128.69970703 -17.47159004]
[120.81543732 -9.23789406]
[110.38289642 -4.51670313]
[109.95649719 10.47723484]
[109.53009033 25.47117233]
[109.10369110 40.46511078]
[108.67728424 55.45904922]
[133.18699646 66.58676910]
[147.84397888 90.34140015]
[146.72303772 119.22734070]
[129.09925842 143.38491821]
[144.09887695 143.27830505]
[159.09849548 143.17169189]
[174.09811401 143.06507874]
[189.09774780 142.95846558]
[204.09736633 142.85185242]
[219.09698486 142.74523926]
[234.09547424 142.53201294]
[249.09205627 142.21218872]
[264.08865356 141.89236450]
[279.08523560 141.57255554]
[286.53857422 128.21609497]
[299.59045410 120.43498993]
[314.68432617 120.23295593]
[327.76522827 127.56411743]
[335.36904907 140.37222290]
[350.36563110 140.05239868]
[365.36224365 139.73258972]
[380.35882568 139.41276550]
[393.99087524 131.38298035]
[406.88021851 138.84716797]
[421.87683105 138.52734375]
[436.87341309 138.20751953]
[451.86999512 137.88769531]
[458.63510132 124.15845490]
[471.01242065 115.15509033]
[486.15774536 112.94651031]
[500.59078979 118.04022217]
[510.99493408 129.26574707]
[514.97937012 144.04351807]
[511.62857056 158.97772217]
[501.71246338 170.63659668]
[487.50970459 176.34100342]
[472.28399658 174.78012085]
[459.53408813 166.31262207]
[452.18981934 152.88429260]
[437.19323730 153.20410156]
[422.19665527 153.52392578]
[407.20004272 153.84375000]
[394.64065552 161.85066223]
[380.67864990 154.40934753]
[365.68203735 154.72917175]
[350.68545532 155.04899597]
[335.68887329 155.36882019]
[328.63803101 168.48945618]
[315.88156128 176.37162781]
[300.79278564 176.81327820]
[287.42105103 169.59570312]
[279.40505981 156.56913757]
[264.40847778 156.88896179]
[249.41188049 157.20878601]
[234.41528320 157.52861023]
[227.79991150 160.81138611]
[219.20359802 157.74485779]
[204.20397949 157.85147095]
[189.20436096 157.95808411]
[174.20474243 158.06469727]
[159.20510864 158.17131042]
[144.20549011 158.27792358]
[129.20587158 158.38453674]
[119.50068665 169.82173157]
[121.83666992 184.63871765]
[124.17265320 199.45570374]
[126.50864410 214.27270508]
[128.84463501 229.08969116]
[131.18061829 243.90667725]
[151.95953369 252.45597839]
[163.28474426 271.71331787]
[160.68690491 293.77331543]
[145.37580872 309.68807983]
[149.37809753 324.14428711]
[153.38040161 338.60049438]
[167.95912170 343.91467285]
[176.60200500 356.80187988]
[175.98570251 372.30670166]
[166.34718323 384.46722412]
[151.39265442 388.60751343]
[136.87245178 383.13546753]
[128.36987305 370.15527344]
[129.15432739 354.65805054]
[138.92420959 342.60278320]
[134.92190552 328.14657593]
[130.91961670 313.69039917]
[122.81916809 313.21853638]
[115.03672028 310.86715698]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 201]
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[21 30]
[22 29]
[23 28]
[31 67]
[32 66]
[35 63]
[36 62]
[37 61]
[38 60]
[41 54]
[42 53]
[43 52]
[69 83]
[70 82]
[71 81]
[72 80]
[73 79]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[99 121]
[100 120]
[102 118]
[103 117]
[106 114]
[107 113]
[136 195]
[137 194]
[138 193]
[139 192]
[140 191]
[141 190]
[142 189]
[143 187]
[144 186]
[145 185]
[146 184]
[151 179]
[152 178]
[153 177]
[154 176]
[156 174]
[157 173]
[158 172]
[159 171]
[205 218]
[206 217]
[207 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
