%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUCUAAGACCUCAAAUACUGGUUAACUGCAUUUGCAGCUAGAAGUUAGGCUCUGAUUCACUGUUUUGUAUUUUCUAAAAGGGUUAUAUGUAAUUUGAAAGAUAGACCUGCCAAGACGUGAGAUCUGUGUUCUCCUUGGUUAGAGCUAACAUUUUUGGUGAGGAAAGCACUGCAGGAGCAGGCUGGCACAGAGAAGAGGAC\
) } def
/len { sequence length } bind def

/coor [
[101.56974792 797.10272217]
[92.39785004 809.25982666]
[79.07100677 816.62976074]
[63.89817429 817.93548584]
[49.50813293 812.95080566]
[38.39404297 802.53942871]
[32.48149490 788.50512695]
[32.79486847 773.27947998]
[39.27986908 759.50030518]
[50.81293488 749.55505371]
[65.39588928 745.16674805]
[67.24824524 730.28155518]
[69.10060883 715.39636230]
[70.95296478 700.51116943]
[59.53754425 693.00793457]
[52.43571472 681.26116943]
[51.08282852 667.53472900]
[55.79978561 654.50305176]
[65.71928406 644.72979736]
[78.94467163 640.16369629]
[81.02716064 625.30895996]
[83.10964966 610.45422363]
[85.07713318 595.58386230]
[86.92948914 580.69866943]
[88.78185272 565.81347656]
[90.63420868 550.92828369]
[82.94100189 535.15850830]
[94.16056061 520.56072998]
[95.78234863 505.64868164]
[97.40413666 490.73663330]
[99.02591705 475.82455444]
[92.71003723 462.33532715]
[101.89404297 449.45260620]
[103.51582336 434.54055786]
[105.13761139 419.62847900]
[106.75939178 404.71640015]
[108.38117981 389.80432129]
[110.00296783 374.89227295]
[111.62474823 359.98019409]
[111.97292328 344.98422241]
[111.04496765 330.01296997]
[110.11701202 315.04168701]
[109.18905640 300.07043457]
[108.26110077 285.09915161]
[107.33314514 270.12789917]
[106.40518951 255.15661621]
[105.47722626 240.18534851]
[92.40916443 229.60388184]
[91.00675201 212.50868225]
[102.62399292 199.43382263]
[101.46446991 184.47871399]
[100.30493927 169.52359009]
[99.14540863 154.56848145]
[97.98587799 139.61335754]
[96.82635498 124.65824127]
[95.66682434 109.70313263]
[78.65911102 111.06807709]
[63.24807358 92.78276825]
[53.62602997 81.27554321]
[44.00399017 69.76831055]
[34.38194656 58.26108551]
[21.62368965 56.33812332]
[13.84655762 46.55024338]
[14.79480362 34.48688507]
[5.35199165 22.83213043]
[-4.09082079 11.17737579]
[-18.79007149 5.32565975]
[-20.79039955 -9.43401337]
[-30.23321152 -21.08876801]
[-39.67602539 -32.74352264]
[-49.11883545 -44.39827728]
[-58.56164932 -56.05303192]
[-74.03507233 -57.84493637]
[-83.44539642 -69.79903412]
[-81.64173126 -84.53953552]
[-91.08454132 -96.19429016]
[-100.52735901 -107.84904480]
[-116.02423859 -113.21363068]
[-118.86069489 -129.36561584]
[-106.11882019 -139.68920898]
[-90.90637207 -133.56440735]
[-88.87260437 -117.29185486]
[-79.42978668 -105.63710022]
[-69.98697662 -93.98234558]
[-55.19292068 -92.68950653]
[-45.45053864 -81.00444794]
[-46.90689468 -65.49584198]
[-37.46408081 -53.84108734]
[-28.02126884 -42.18633270]
[-18.57845688 -30.53157997]
[-9.13564491 -18.87682533]
[4.88819313 -13.85873604]
[7.56393337 1.73456359]
[17.00674629 13.38931751]
[26.44955826 25.04407120]
[43.14775848 30.43307877]
[45.88917923 48.63904190]
[55.51121902 60.14627075]
[65.13326263 71.65350342]
[74.75530243 83.16072845]
[82.25170898 83.39282990]
[79.32443237 68.68123627]
[70.63635254 56.45351028]
[72.46318817 41.56517029]
[83.84976959 31.80065536]
[98.84256744 32.26538849]
[109.60253143 42.71638107]
[110.50375366 57.68928528]
[101.07630920 69.35470581]
[97.24452209 83.85703278]
[104.74092865 84.08913422]
[115.05642700 73.19919586]
[125.37191772 62.30926514]
[135.68740845 51.41933441]
[146.00289917 40.52940369]
[156.31838989 29.63946915]
[157.17895508 25.36868095]
[159.15771484 21.94137573]
[161.85098267 19.60597610]
[164.81585693 18.45382881]
[167.62496948 18.42004967]
[178.59439087 8.18913078]
[189.56381226 -2.04178739]
[200.53324890 -12.27270603]
[199.53286743 -27.87825775]
[208.83918762 -40.44513702]
[224.05802917 -44.03964996]
[238.00354004 -36.96457672]
[244.09107971 -22.56054688]
[239.44627380 -7.62870836]
[226.26226807 0.78058469]
[210.76416016 -1.30328000]
[199.79473877 8.92763901]
[188.82530212 19.15855789]
[177.85588074 29.38947487]
[167.20832825 39.95495987]
[156.89283752 50.84489441]
[146.57734680 61.73482513]
[136.26185608 72.62475586]
[125.94635773 83.51469421]
[115.63086700 94.40462494]
[110.62194061 108.54360199]
[111.78146362 123.49871826]
[112.94099426 138.45382690]
[114.10052490 153.40895081]
[115.26005554 168.36405945]
[116.41958618 183.31918335]
[117.57910919 198.27429199]
[128.75395203 205.80032349]
[133.48291016 218.20790100]
[130.24818420 230.88533020]
[120.44850159 239.25740051]
[121.37645721 254.22866821]
[122.30441284 269.19992065]
[123.23236847 284.17120361]
[124.16032410 299.14248657]
[125.08827972 314.11373901]
[126.01623535 329.08502197]
[126.94419861 344.05627441]
[134.67811584 331.20379639]
[147.44900513 323.33584595]
[162.40658569 322.20849609]
[176.21250916 328.07333374]
[185.78550720 339.62139893]
[188.98901367 354.27532959]
[185.10804749 368.76455688]
[175.00877380 379.85531616]
[160.94522095 385.07226562]
[146.05619812 383.25106812]
[133.66470337 374.79821777]
[126.53681946 361.60198975]
[124.91503143 376.51403809]
[123.29325104 391.42611694]
[121.67146301 406.33819580]
[120.04968262 421.25024414]
[118.42789459 436.16232300]
[116.80610657 451.07440186]
[123.00598907 465.63021851]
[113.93798828 477.44635010]
[112.31620026 492.35839844]
[110.69441986 507.27047729]
[109.07263184 522.18255615]
[116.53209686 532.71002197]
[114.87030029 545.10052490]
[105.51939392 552.78063965]
[103.66703796 567.66583252]
[101.81467438 582.55102539]
[99.96231842 597.43621826]
[102.00883484 606.34515381]
[97.96438599 612.53674316]
[95.88190460 627.39147949]
[93.79941559 642.24621582]
[106.93473053 652.28387451]
[113.18162537 667.48828125]
[110.92337036 683.67529297]
[100.86981201 696.44183350]
[85.83815002 702.36352539]
[83.98579407 717.24871826]
[82.13343048 732.13391113]
[80.28107452 747.01910400]
[93.34371948 754.84771729]
[102.08753204 767.31628418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 200]
[12 199]
[13 198]
[14 197]
[20 192]
[21 191]
[22 190]
[23 188]
[24 187]
[25 186]
[26 185]
[28 182]
[29 181]
[30 180]
[31 179]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[58 100]
[59 99]
[60 98]
[61 97]
[64 95]
[65 94]
[66 93]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[75 84]
[76 83]
[77 82]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[116 136]
[121 135]
[122 134]
[123 133]
[124 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
