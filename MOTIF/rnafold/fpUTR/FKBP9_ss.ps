%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUGGAGCUGCGGCCGGGAGGGCGGGCGGCCGGGGAGACGGGGUGGCGGCUGCAGCCCGGGUAGGGCCAGGAGACCCGGUCCACGUUUGCAAACGCAGCCGAACGCCCAGGCCGACCCGUGCCGCCCGAGCGCCGCGCUGCGUCCGCGCCACUCUUCUCGCCGCCCCG\
) } def
/len { sequence length } bind def

/coor [
[82.76089478 378.12060547]
[67.72039795 382.40051270]
[53.46884155 375.96411133]
[46.73537064 361.85049438]
[50.69932175 346.72366333]
[63.48904037 337.72604370]
[64.59036255 322.76654053]
[57.72457886 317.03302002]
[54.23440933 308.64746094]
[55.02832031 299.46084595]
[60.05340576 291.56555176]
[68.27873230 286.81872559]
[70.20246887 271.94256592]
[72.12619781 257.06643677]
[74.04993439 242.19032288]
[75.97367096 227.31419373]
[69.93252563 213.69972229]
[79.37579346 201.00581360]
[81.29952240 186.12968445]
[83.22325897 171.25355530]
[85.14699554 156.37742615]
[87.07073212 141.50129700]
[88.99446869 126.62516022]
[90.91819763 111.74903107]
[89.67951202 96.80026245]
[85.33348083 82.44365692]
[80.98745728 68.08705902]
[76.64142609 53.73045731]
[72.29539490 39.37385178]
[67.94937134 25.01725006]
[63.60334015 10.66064739]
[59.25731277 -3.69595480]
[54.77959061 -18.01202965]
[50.17055130 -32.28636932]
[45.56151199 -46.56070709]
[40.95247650 -60.83504868]
[24.93565178 -62.01732635]
[10.62962627 -69.23114777]
[0.20633531 -81.34828186]
[-4.76444721 -96.49860382]
[-3.55147505 -112.35874176]
[3.63055539 -126.50832367]
[15.65829182 -136.79937744]
[10.78779984 -150.98663330]
[5.91730785 -165.17388916]
[1.04681599 -179.36114502]
[-3.82367611 -193.54841614]
[-17.98370361 -205.29266357]
[-13.99572754 -222.36587524]
[-19.12602997 -236.46125793]
[-24.25633240 -250.55664062]
[-29.38663292 -264.65203857]
[-34.51693726 -278.74743652]
[-39.64723969 -292.84280396]
[-44.77753830 -306.93820190]
[-62.01854706 -319.62295532]
[-57.72358322 -339.78924561]
[-63.62257767 -353.58059692]
[-78.79640961 -355.50469971]
[-90.88999176 -364.70480347]
[-96.71607208 -378.63043213]
[-94.80236816 -393.50302124]
[-85.76213837 -405.34109497]
[-91.66113281 -419.13244629]
[-97.93700409 -425.82308960]
[-97.53923798 -433.23178101]
[-103.18387604 -447.12918091]
[-108.82852173 -461.02661133]
[-114.47315979 -474.92401123]
[-120.11779785 -488.82144165]
[-126.26969910 -495.62622070]
[-125.73589325 -503.02636719]
[-131.12428284 -517.02514648]
[-144.21147156 -526.90728760]
[-141.92858887 -543.14678955]
[-126.62406921 -549.03778076]
[-114.04189301 -538.52014160]
[-117.12551117 -522.41351318]
[-111.73712921 -508.41473389]
[-106.22039032 -494.46606445]
[-100.57575226 -480.56866455]
[-94.93110657 -466.67123413]
[-89.28646851 -452.77383423]
[-83.64183044 -438.87643433]
[-77.86976624 -425.03146362]
[-71.97077179 -411.24008179]
[-57.16604996 -409.60122681]
[-45.08906555 -400.71292114]
[-39.04262161 -386.88153076]
[-40.74232483 -371.78161621]
[-49.83120728 -359.47958374]
[-43.93221283 -345.68823242]
[-35.19917297 -343.75274658]
[-28.24473190 -337.91027832]
[-24.72660065 -329.38696289]
[-25.55967140 -320.06530762]
[-30.68214989 -312.06851196]
[-25.55184937 -297.97311401]
[-20.42154694 -283.87771606]
[-15.29124451 -269.78234863]
[-10.16094208 -255.68695068]
[-5.03064013 -241.59155273]
[0.09966215 -227.49617004]
[10.94500542 -222.08485413]
[15.32172012 -210.35296631]
[10.36358261 -198.41889954]
[15.23407459 -184.23164368]
[20.10456657 -170.04438782]
[24.97505951 -155.85713196]
[29.84555054 -141.66987610]
[43.89434814 -141.33081055]
[57.00922775 -136.20002747]
[67.60341644 -126.87634277]
[74.38763428 -114.46717834]
[76.52698517 -100.45708466]
[73.74363708 -86.53009796]
[66.35272217 -74.36734009]
[55.22681427 -65.44408417]
[59.83585358 -51.16974640]
[64.44489288 -36.89540863]
[69.05393219 -22.62106705]
[74.12084961 -17.20135880]
[73.61391449 -8.04198360]
[77.95994568 6.31461954]
[82.30596924 20.67122269]
[86.65200043 35.02782440]
[90.99803162 49.38442612]
[95.34405518 63.74102783]
[99.69008636 78.09763336]
[104.03610992 92.45423126]
[119.15150452 83.76237488]
[139.45413208 86.62432861]
[152.71125793 93.64205170]
[165.96838379 100.65978241]
[179.22550964 107.67751312]
[192.67097473 114.32728577]
[206.29457092 120.60405731]
[219.91815186 126.88082123]
[236.83398438 128.01719666]
[240.42477417 144.58653259]
[225.49700928 152.62384033]
[213.64138794 140.50440979]
[200.01780701 134.22764587]
[186.39421082 127.95087433]
[182.94696045 128.84729004]
[178.89112854 128.09458923]
[175.01760864 125.42385864]
[172.20777893 120.93463898]
[158.95065308 113.91691589]
[145.69352722 106.89918518]
[132.43640137 99.88145447]
[125.77587891 103.32928467]
[112.45484924 110.22493744]
[105.79433441 113.67276764]
[103.87059784 128.54888916]
[101.94686127 143.42501831]
[100.02312469 158.30116272]
[98.09938812 173.17729187]
[96.17565155 188.05342102]
[94.25192261 202.92955017]
[100.15546417 217.60806274]
[90.84980011 229.23793030]
[88.92606354 244.11405945]
[87.00233459 258.99017334]
[85.07859802 273.86630249]
[83.15486145 288.74243164]
[92.63475800 307.93322754]
[79.54988098 323.86785889]
[78.44855499 338.82736206]
[89.78271484 349.60098267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 169]
[7 168]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 130]
[26 129]
[27 128]
[28 127]
[29 126]
[30 125]
[31 124]
[32 123]
[33 121]
[34 120]
[35 119]
[36 118]
[43 110]
[44 109]
[45 108]
[46 107]
[47 106]
[49 103]
[50 102]
[51 101]
[52 100]
[53 99]
[54 98]
[55 97]
[57 92]
[58 91]
[63 86]
[64 85]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[72 79]
[73 78]
[132 151]
[133 150]
[134 149]
[135 148]
[136 144]
[137 143]
[138 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
