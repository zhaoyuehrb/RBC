%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGCUUGCGCGCUGGGGACAACCGUUGCUGGGUGUCCCAGGGCCUGAGGCAGGACGGUACUCCGCUGACACCUUCCCUUUCGGCCUUGAGGUUCCCAGCCUGGUGGCCCCAGGACGUUCCGGUCGCAUGGCAGAGUGCUACGGACGACGCCUAUGAAGCCCUUAGUCCUUCUAGUUGCGCUUUUGCU\
) } def
/len { sequence length } bind def

/coor [
[230.46261597 203.06889343]
[227.25762939 190.56312561]
[214.83750916 182.15240479]
[202.41737366 173.74168396]
[189.99723816 165.33094788]
[177.50799561 157.02319336]
[164.95050049 148.81896973]
[145.62826538 149.18789673]
[136.76538086 131.09539795]
[123.94349670 123.31085205]
[111.12160492 115.52630615]
[97.02198029 118.86498260]
[84.63643646 111.34536743]
[81.09384918 97.29558563]
[68.27196503 89.51103973]
[55.45007324 81.72649384]
[42.62818146 73.94195557]
[29.80628967 66.15740967]
[16.98439980 58.37286758]
[1.17268932 57.82478333]
[-5.69106627 44.60593033]
[-18.51295662 36.82138443]
[-27.49023438 35.03732681]
[-31.48098564 28.80064392]
[-44.17241287 20.80516815]
[-56.86384201 12.80969238]
[-69.60371399 14.89816952]
[-80.01396942 7.96288157]
[-82.80809784 -3.81812429]
[-95.36559296 -12.02234650]
[-107.92308807 -20.22656822]
[-120.48058319 -28.43079185]
[-133.03808594 -36.63501358]
[-145.59558105 -44.83923721]
[-158.38299561 -40.57465363]
[-171.10444641 -44.40324402]
[-179.17395020 -54.71057510]
[-179.81805420 -67.59015656]
[-192.23818970 -76.00088501]
[-204.72743225 -84.30863953]
[-217.28492737 -92.51286316]
[-229.84242249 -100.71708679]
[-242.39991760 -108.92131042]
[-254.95741272 -117.12553406]
[-267.51492310 -125.32975769]
[-280.07241821 -133.53398132]
[-298.46914673 -134.11344910]
[-305.79156494 -150.05335999]
[-318.48297119 -158.04884338]
[-331.17440796 -166.04431152]
[-343.86584473 -174.03979492]
[-362.26965332 -174.31501770]
[-369.85458374 -190.13168335]
[-382.67648315 -197.91622925]
[-395.49838257 -205.70077515]
[-415.63925171 -205.21730042]
[-424.22610474 -222.53063965]
[-437.29837036 -229.88699341]
[-450.37060547 -237.24333191]
[-463.44287109 -244.59968567]
[-479.21783447 -241.67897034]
[-491.24197388 -252.29969788]
[-490.29138184 -268.31457520]
[-477.09530640 -277.43832397]
[-461.77664185 -272.67202759]
[-456.08651733 -257.67196655]
[-443.01428223 -250.31559753]
[-429.94201660 -242.95924377]
[-416.86975098 -235.60290527]
[-407.29534912 -239.23512268]
[-397.09017944 -236.94017029]
[-389.68762207 -229.24208069]
[-387.71383667 -218.52265930]
[-374.89193726 -210.73812866]
[-362.07003784 -202.95358276]
[-350.23730469 -205.51980591]
[-339.48706055 -199.12419128]
[-335.87036133 -186.73121643]
[-323.17892456 -178.73574829]
[-310.48751831 -170.74026489]
[-297.79608154 -162.74479675]
[-285.92251587 -165.11502075]
[-275.27951050 -158.54254150]
[-271.86819458 -146.09147644]
[-259.31069946 -137.88725281]
[-246.75318909 -129.68302917]
[-234.19569397 -121.47880554]
[-221.63819885 -113.27458191]
[-209.08070374 -105.07035828]
[-196.52320862 -96.86614227]
[-189.19075012 -95.83786011]
[-183.82745361 -88.42102051]
[-171.40733337 -80.01029205]
[-155.05265808 -83.89504242]
[-140.66058350 -74.57319641]
[-137.39135742 -57.39673233]
[-124.83386230 -49.19251251]
[-112.27636719 -40.98828888]
[-99.71886444 -32.78406525]
[-87.16136932 -24.57984352]
[-74.60387421 -16.37562180]
[-57.06253815 -16.36297607]
[-48.86836624 0.11826399]
[-36.17693710 8.11373997]
[-23.48550987 16.10921669]
[-10.72841358 23.99949455]
[2.09347701 31.78403854]
[16.98807907 31.77531815]
[24.76894379 45.55097580]
[37.59083557 53.33551788]
[50.41272354 61.12006378]
[63.23461533 68.90460968]
[76.05650330 76.68914795]
[88.87839508 84.47369385]
[102.97801971 81.13501740]
[115.36356354 88.65463257]
[118.90615082 102.70441437]
[131.72804260 110.48896027]
[144.54992676 118.27350616]
[154.97103882 115.07939911]
[165.21606445 118.09566498]
[171.96025085 126.09115601]
[173.15472412 136.26147461]
[185.71221924 144.46569824]
[194.62559509 146.54559326]
[198.40795898 152.91082764]
[210.82809448 161.32154846]
[223.24822998 169.73226929]
[235.66836548 178.14300537]
[254.05300903 179.02656555]
[261.11087036 195.08537292]
[273.66836548 203.28959656]
[286.22586060 211.49382019]
[298.78335571 219.69804382]
[311.34085083 227.90226746]
[323.89834595 236.10647583]
[336.52322388 244.20660400]
[349.21466064 252.20208740]
[361.90609741 260.19757080]
[374.59753418 268.19302368]
[390.39801025 269.00247192]
[397.04226685 282.33300781]
[409.73370361 290.32849121]
[422.74468994 297.79266357]
[436.05303955 304.71276855]
[449.36138916 311.63290405]
[462.66970825 318.55300903]
[478.62686157 309.97463989]
[496.38552856 312.65490723]
[508.87973022 325.33691406]
[511.25247192 342.82238770]
[524.78234863 349.29870605]
[538.94512939 342.66921997]
[554.04235840 346.74429321]
[562.94567871 359.59985352]
[561.45117188 375.16583252]
[550.26452637 386.09252930]
[534.66766357 387.22061157]
[522.02502441 378.01748657]
[518.30603027 362.82858276]
[504.77618408 356.35226440]
[495.05639648 363.65924072]
[483.08001709 366.14807129]
[471.11325073 363.28503418]
[461.44726562 355.55505371]
[455.95962524 344.38082886]
[455.74960327 331.86135864]
[442.44125366 324.94122314]
[429.13293457 318.02111816]
[415.82458496 311.10098267]
[417.68087769 325.98568726]
[407.32312012 336.83544922]
[392.36834717 335.67141724]
[383.81417847 323.34963989]
[387.95129395 308.93145752]
[401.73822021 303.01989746]
[389.04678345 295.02444458]
[374.15408325 294.78689575]
[366.60205078 280.88446045]
[353.91061401 272.88897705]
[341.21917725 264.89352417]
[328.52777100 256.89804077]
[321.17929077 255.99113464]
[315.69412231 248.66398621]
[303.13662720 240.45976257]
[290.57913208 232.25553894]
[278.02163696 224.05131531]
[265.46414185 215.84709167]
[252.90663147 207.64286804]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 129]
[3 128]
[4 127]
[5 126]
[6 124]
[7 123]
[9 119]
[10 118]
[11 117]
[14 114]
[15 113]
[16 112]
[17 111]
[18 110]
[19 109]
[21 107]
[22 106]
[24 105]
[25 104]
[26 103]
[29 101]
[30 100]
[31 99]
[32 98]
[33 97]
[34 96]
[38 93]
[39 92]
[40 90]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
[48 81]
[49 80]
[50 79]
[51 78]
[53 75]
[54 74]
[55 73]
[57 69]
[58 68]
[59 67]
[60 66]
[131 189]
[132 188]
[133 187]
[134 186]
[135 185]
[136 184]
[137 182]
[138 181]
[139 180]
[140 179]
[142 177]
[143 176]
[144 170]
[145 169]
[146 168]
[147 167]
[151 161]
[152 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
