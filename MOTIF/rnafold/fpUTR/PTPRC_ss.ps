%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACAACUUUUUUGACUUCCUGCAAAGAGGACCCUUACAGUAUUUUUGGAGAAGUUAGUAAAACCGAAUCUGACAUCAUCACCUAGCAGUUCAUGCAGCUAGCAAGUGGUUUGUUCUUAGGGUAACAGAGGAGGAAAUUGUUCCUCGUCUGAUAAGACAACAGUGGAGAAAGGACGCAUGCUGUUUCUUAGGGACACGGCUGACUUCCAGAU\
) } def
/len { sequence length } bind def

/coor [
[-15.89880562 305.04275513]
[-19.19490242 322.46511841]
[-27.21736717 338.26373291]
[-39.32218552 351.18591309]
[-54.54197693 360.20922852]
[-71.66327667 364.62243652]
[-89.32331848 364.08160400]
[-106.11846161 358.63671875]
[-114.24490356 371.24468994]
[-122.37135315 383.85266113]
[-130.49780273 396.46063232]
[-138.62423706 409.06860352]
[-146.75068665 421.67657471]
[-154.87713623 434.28454590]
[-163.00358582 446.89251709]
[-157.26782227 461.31057739]
[-161.13484192 476.33807373]
[-173.11769104 486.19662476]
[-188.60871887 487.09542847]
[-201.65130615 478.68884277]
[-207.23031616 464.20941162]
[-203.20050049 449.22473145]
[-191.11140442 439.49676514]
[-175.61155701 438.76608276]
[-167.48510742 426.15811157]
[-159.35865784 413.55014038]
[-151.23220825 400.94216919]
[-143.10577393 388.33419800]
[-134.97932434 375.72622681]
[-126.85287476 363.11825562]
[-118.72643280 350.51028442]
[-127.45975494 341.70632935]
[-134.28997803 331.34893799]
[-138.94721985 319.84313965]
[-141.24667358 307.63931274]
[-141.09582520 295.21572876]
[-138.49827576 283.05978394]
[-133.55361938 271.64874268]
[-126.45370483 261.43112183]
[-117.47507477 252.80906677]
[-106.96833038 246.12243652]
[-95.34432983 241.63546753]
[-83.05819702 239.52636719]
[-70.59145355 239.88012695]
[-58.43317032 242.68522644]
[-47.06078720 247.83390808]
[-38.03160858 235.85583496]
[-29.00242805 223.87777710]
[-19.97324944 211.89971924]
[-10.94406891 199.92166138]
[-1.91488993 187.94360352]
[-1.67942655 183.17559814]
[1.55225646 178.50433350]
[7.55937910 175.75163269]
[16.93630028 164.04380798]
[26.31322098 152.33596802]
[35.69014359 140.62814331]
[45.06706238 128.92030334]
[54.44398499 117.21247101]
[63.82090759 105.50463867]
[49.97885132 111.28369141]
[39.84806824 122.34566498]
[26.75037193 129.65664673]
[12.01721954 132.47341919]
[-2.85367870 130.50964355]
[-16.35060883 123.96496582]
[-27.10153008 113.50467682]
[-34.01354599 100.19212341]
[-36.38401413 85.38060760]
[-33.97195816 70.57581329]
[-27.02258110 57.28273010]
[-16.24232483 46.85267258]
[-2.72706699 40.34592056]
[12.14928818 38.42392349]
[26.87447166 41.28206635]
[39.95158386 48.62979507]
[50.05125809 59.72018051]
[56.14629745 73.42388153]
[67.43852234 83.29737091]
[62.26226044 69.21878815]
[57.08600235 55.14021301]
[51.90974426 41.06163406]
[46.73348618 26.98305893]
[41.24849319 13.02186871]
[35.45741653 -0.81516427]
[29.66634560 -14.65219688]
[23.87527084 -28.48922920]
[18.08419800 -42.32626343]
[5.61892557 -52.06933975]
[7.84270620 -66.79700470]
[2.05163240 -80.63403320]
[-11.31594753 -90.13349915]
[-9.50379086 -106.43221283]
[5.62391186 -112.76345825]
[18.50507545 -102.61418915]
[15.88866520 -86.42510986]
[21.67973900 -72.58807373]
[33.73079300 -63.83471680]
[31.92123032 -48.11733627]
[37.71230316 -34.28030396]
[43.50337601 -20.44326973]
[49.29444885 -6.60623789]
[55.08552551 7.23079491]
[58.18940735 8.89906502]
[60.64027405 12.15244579]
[61.70244217 16.66803360]
[60.81206512 21.80680084]
[65.98831940 35.88537598]
[71.16458130 49.96395493]
[76.34084320 64.04253387]
[81.51709747 78.12110901]
[104.46170807 75.19754791]
[118.95520782 89.31329346]
[133.76005554 86.90155029]
[148.56491089 84.48980713]
[163.36975098 82.07806396]
[178.17459106 79.66632080]
[192.97944641 77.25457764]
[207.78428650 74.84284210]
[222.58914185 72.43109894]
[237.39398193 70.01935577]
[252.19883728 67.60761261]
[248.84559631 61.24740219]
[247.67724609 53.28901672]
[249.20185852 44.43592834]
[253.71380615 35.52858734]
[261.26049805 27.48253059]
[273.49844360 18.80887794]
[285.73641968 10.13522243]
[297.97436523 1.46156847]
[304.75939941 -12.83087921]
[319.61715698 -13.87775707]
[331.85513306 -22.55141068]
[344.09307861 -31.22506523]
[356.33105469 -39.89871979]
[368.56900024 -48.57237244]
[380.80697632 -57.24602890]
[387.15716553 -72.36578369]
[403.45816040 -74.15750885]
[412.94085693 -60.77803421]
[405.85028076 -45.99101257]
[389.48062134 -45.00806427]
[377.24267578 -36.33441162]
[365.00469971 -27.66075706]
[352.76675415 -18.98710251]
[340.52877808 -10.31344891]
[328.29080200 -1.63979471]
[322.38113403 12.03225517]
[306.64801025 13.69953060]
[294.41006470 22.37318420]
[282.17208862 31.04683876]
[269.93414307 39.72049332]
[271.03121948 47.13982010]
[284.97906494 52.65867233]
[273.22537231 61.97847748]
[274.32244873 69.39780426]
[288.54690552 74.15853882]
[302.77136230 78.91926575]
[316.99584961 83.67999268]
[331.22030640 88.44072723]
[346.76266479 85.48338318]
[356.37622070 96.86006165]
[370.60067749 101.62078857]
[384.85971069 106.27697754]
[399.15252686 110.82838440]
[413.44534302 115.37979126]
[425.26495361 105.46511078]
[440.57138062 103.53717804]
[454.48040771 110.21118164]
[462.55371094 123.35748291]
[462.21514893 138.78112793]
[453.57275391 151.56050110]
[439.38427734 157.61773682]
[424.17718506 155.02001953]
[412.80404663 144.59623718]
[408.89395142 129.67260742]
[394.60113525 125.12120819]
[380.30831909 120.56980133]
[372.98272705 121.53526306]
[365.83996582 115.84525299]
[351.61547852 111.08452606]
[337.09057617 114.38238525]
[326.45956421 102.66519165]
[312.23510742 97.90446472]
[298.01065063 93.14373016]
[283.78616333 88.38300323]
[269.56170654 83.62226868]
[254.61058044 82.41246033]
[239.80572510 84.82420349]
[225.00088501 87.23594666]
[210.19602966 89.64768219]
[195.39118958 92.05942535]
[180.58633423 94.47116852]
[165.78149414 96.88291168]
[150.97663879 99.29465485]
[136.17179871 101.70639801]
[121.36695099 104.11814117]
[113.15768433 120.13601685]
[94.17780304 125.69601440]
[75.52873993 114.88156128]
[66.15181732 126.58939362]
[56.77489853 138.29722595]
[47.39797592 150.00506592]
[38.02105331 161.71289062]
[28.64413261 173.42073059]
[19.26721191 185.12855530]
[10.06317043 196.97277832]
[1.03399074 208.95083618]
[-7.99518871 220.92889404]
[-17.02436829 232.90696716]
[-26.05354691 244.88502502]
[-35.08272552 256.86306763]
[-24.16446686 270.88232422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[46 212]
[47 211]
[48 210]
[49 209]
[50 208]
[51 207]
[54 206]
[55 205]
[56 204]
[57 203]
[58 202]
[59 201]
[60 200]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[90 97]
[91 96]
[113 197]
[114 196]
[115 195]
[116 194]
[117 193]
[118 192]
[119 191]
[120 190]
[121 189]
[122 188]
[127 152]
[128 151]
[129 150]
[130 149]
[132 147]
[133 146]
[134 145]
[135 144]
[136 143]
[137 142]
[156 187]
[157 186]
[158 185]
[159 184]
[160 183]
[162 181]
[163 180]
[164 178]
[165 177]
[166 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
