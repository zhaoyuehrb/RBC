%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IMPDH2)
} def

/sequence { (\
CGAAAUCGGCUGGUUUAUAUUGGCGCGGCCCAGACGGCAGAGGUCUCUGCGGCGCGGUCCUCGGAGACACGCGGCGGUGUCCUGUGUUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.129630331 ubox
1 12 0.003178867 ubox
1 22 0.010915654 ubox
1 27 0.004077642 ubox
1 36 0.050949094 ubox
1 89 0.008745223 ubox
2 7 0.169628905 ubox
2 16 0.004315122 ubox
2 21 0.010921574 ubox
2 26 0.005405162 ubox
2 35 0.053017545 ubox
2 55 0.003770218 ubox
2 88 0.006320106 ubox
3 15 0.003753896 ubox
3 16 0.048170559 ubox
3 20 0.009010885 ubox
3 87 0.004282555 ubox
4 15 0.051652543 ubox
5 14 0.052392858 ubox
6 13 0.052493663 ubox
6 28 0.057489660 ubox
6 34 0.296741920 ubox
6 90 0.018958902 ubox
7 12 0.052208163 ubox
7 22 0.003227592 ubox
7 25 0.025188710 ubox
7 27 0.121275143 ubox
7 33 0.322335103 ubox
7 36 0.004955492 ubox
7 89 0.024680319 ubox
8 24 0.019172344 ubox
8 26 0.146091736 ubox
8 30 0.954919283 ubox
8 31 0.102659758 ubox
8 35 0.003446810 ubox
8 88 0.022743278 ubox
8 92 0.049621286 ubox
9 24 0.251447318 ubox
9 26 0.013472785 ubox
9 29 0.960955922 ubox
9 30 0.072782009 ubox
9 85 0.005335731 ubox
9 87 0.022736918 ubox
9 91 0.050155726 ubox
10 23 0.252416008 ubox
10 25 0.013391103 ubox
10 28 0.963715577 ubox
10 33 0.008850438 ubox
10 84 0.005605616 ubox
10 86 0.022724185 ubox
10 90 0.050118075 ubox
11 19 0.003408356 ubox
11 22 0.251325965 ubox
11 27 0.962820426 ubox
11 32 0.009135472 ubox
11 84 0.012187621 ubox
11 89 0.048039229 ubox
12 18 0.004206495 ubox
12 21 0.247541122 ubox
12 24 0.005582009 ubox
12 26 0.958495596 ubox
12 30 0.004035343 ubox
12 31 0.008848075 ubox
12 82 0.021568896 ubox
12 83 0.017893656 ubox
12 85 0.004823116 ubox
12 88 0.038027662 ubox
12 92 0.027102128 ubox
13 20 0.248292951 ubox
13 24 0.952654832 ubox
13 26 0.011562085 ubox
13 29 0.004735710 ubox
13 30 0.007869667 ubox
13 35 0.004042802 ubox
13 81 0.021597148 ubox
13 82 0.018105966 ubox
13 87 0.029297799 ubox
13 91 0.027423944 ubox
14 19 0.244011181 ubox
14 23 0.951540584 ubox
14 25 0.014969998 ubox
14 28 0.005280362 ubox
14 34 0.004070365 ubox
14 84 0.004448469 ubox
14 86 0.014105435 ubox
14 90 0.027338150 ubox
15 22 0.898576576 ubox
15 23 0.090961480 ubox
15 27 0.004483833 ubox
15 28 0.003218769 ubox
15 33 0.003941707 ubox
15 89 0.022731485 ubox
16 22 0.098417169 ubox
16 32 0.003267362 ubox
16 84 0.008842017 ubox
16 86 0.018935370 ubox
17 21 0.088115627 ubox
17 80 0.037402770 ubox
17 83 0.005658745 ubox
17 85 0.020203466 ubox
17 87 0.031875950 ubox
18 79 0.038612320 ubox
18 84 0.020018616 ubox
18 86 0.032981228 ubox
19 78 0.038843784 ubox
19 83 0.018614869 ubox
19 85 0.032993782 ubox
20 33 0.006417567 ubox
20 77 0.038853222 ubox
20 84 0.031617360 ubox
21 32 0.009576174 ubox
21 76 0.038783878 ubox
22 30 0.013400000 ubox
22 31 0.009464154 ubox
22 59 0.012584864 ubox
22 60 0.018585730 ubox
22 75 0.038897869 ubox
22 81 0.029141190 ubox
22 82 0.024954521 ubox
22 88 0.003363614 ubox
22 92 0.012888857 ubox
23 29 0.014196562 ubox
23 30 0.008794108 ubox
23 55 0.050719540 ubox
23 58 0.012650148 ubox
23 59 0.018564150 ubox
23 80 0.029439317 ubox
23 81 0.024755263 ubox
23 87 0.003820453 ubox
23 91 0.013043865 ubox
24 28 0.014482882 ubox
24 54 0.050835228 ubox
24 56 0.018959995 ubox
24 57 0.012558577 ubox
24 73 0.038913360 ubox
24 79 0.038371210 ubox
24 86 0.003858410 ubox
24 90 0.013028954 ubox
25 53 0.050991672 ubox
25 55 0.121115210 ubox
25 72 0.038915375 ubox
25 78 0.038357339 ubox
25 85 0.003860100 ubox
25 91 0.004481275 ubox
26 52 0.050960746 ubox
26 54 0.121045668 ubox
26 56 0.019101685 ubox
26 71 0.038913701 ubox
26 77 0.038327941 ubox
26 84 0.003857112 ubox
26 89 0.013164172 ubox
26 90 0.004201593 ubox
27 53 0.085704105 ubox
27 55 0.022816287 ubox
27 70 0.038563002 ubox
27 83 0.003285476 ubox
27 88 0.013278514 ubox
27 92 0.183992217 ubox
28 38 0.038044595 ubox
28 50 0.050861467 ubox
28 53 0.111146574 ubox
28 55 0.003583375 ubox
28 75 0.037273650 ubox
28 87 0.013425931 ubox
28 91 0.197514613 ubox
29 37 0.038040333 ubox
29 49 0.050440352 ubox
29 52 0.140333456 ubox
29 54 0.003563354 ubox
29 74 0.037087192 ubox
29 86 0.013429689 ubox
29 90 0.195103944 ubox
30 36 0.037943060 ubox
30 37 0.004244126 ubox
30 51 0.140426920 ubox
30 52 0.004470039 ubox
30 73 0.035081348 ubox
30 89 0.184264540 ubox
30 90 0.039702034 ubox
31 36 0.013674491 ubox
31 49 0.141312126 ubox
31 51 0.004584477 ubox
31 84 0.018240797 ubox
31 89 0.057264753 ubox
32 46 0.048089363 ubox
32 48 0.141834350 ubox
32 83 0.018230911 ubox
32 88 0.060435805 ubox
33 45 0.049107778 ubox
33 47 0.141930192 ubox
33 81 0.011704331 ubox
33 82 0.014758863 ubox
33 87 0.021157909 ubox
33 88 0.033230618 ubox
34 44 0.049148534 ubox
34 46 0.141355248 ubox
34 78 0.003596376 ubox
34 80 0.015838610 ubox
34 85 0.015015346 ubox
34 87 0.035253998 ubox
35 43 0.049212318 ubox
35 51 0.013217783 ubox
35 54 0.004741492 ubox
35 77 0.003676789 ubox
35 79 0.015848363 ubox
35 84 0.015096016 ubox
35 86 0.035385806 ubox
35 89 0.957758880 ubox
36 45 0.141587599 ubox
36 50 0.009486493 ubox
36 53 0.005145755 ubox
36 78 0.012060352 ubox
36 83 0.012689435 ubox
36 85 0.024504192 ubox
36 88 0.976315063 ubox
36 92 0.021052131 ubox
37 44 0.141641618 ubox
37 50 0.043427574 ubox
37 72 0.016344505 ubox
37 75 0.004242317 ubox
37 82 0.007681951 ubox
37 85 0.024516974 ubox
37 87 0.984787537 ubox
37 91 0.021128555 ubox
38 43 0.141499641 ubox
38 49 0.045126782 ubox
38 71 0.016371739 ubox
38 74 0.004247415 ubox
38 84 0.033737895 ubox
38 86 0.985858314 ubox
38 89 0.003531696 ubox
38 90 0.019462286 ubox
39 48 0.045171273 ubox
39 83 0.032263559 ubox
39 85 0.984583121 ubox
39 88 0.004644694 ubox
40 47 0.045171907 ubox
40 62 0.003551503 ubox
40 81 0.005895086 ubox
40 82 0.030625360 ubox
40 87 0.004738960 ubox
41 46 0.042258221 ubox
41 61 0.003599044 ubox
41 80 0.007091513 ubox
41 83 0.982393693 ubox
42 60 0.003605580 ubox
42 81 0.027219818 ubox
42 82 0.986197495 ubox
43 59 0.003600825 ubox
43 68 0.045416865 ubox
43 78 0.005152201 ubox
43 80 0.023440990 ubox
43 81 0.985593466 ubox
44 67 0.045981856 ubox
44 79 0.110752315 ubox
45 66 0.046299529 ubox
45 77 0.013970253 ubox
46 65 0.046302191 ubox
46 76 0.008494569 ubox
46 77 0.015607437 ubox
47 57 0.003371575 ubox
47 64 0.046309311 ubox
47 76 0.016408797 ubox
47 77 0.966273804 ubox
48 56 0.003411674 ubox
48 63 0.046269557 ubox
48 76 0.965077453 ubox
48 79 0.016355280 ubox
49 55 0.003599114 ubox
49 62 0.046207655 ubox
49 75 0.965748166 ubox
49 78 0.033433203 ubox
49 80 0.003473624 ubox
50 54 0.003575690 ubox
50 73 0.006404355 ubox
50 74 0.964908026 ubox
50 76 0.196271402 ubox
50 77 0.029763171 ubox
50 79 0.003220004 ubox
50 89 0.005712952 ubox
51 59 0.007614834 ubox
51 60 0.045614018 ubox
51 72 0.006297206 ubox
51 75 0.200560613 ubox
51 81 0.015747984 ubox
51 82 0.006758425 ubox
51 88 0.006498210 ubox
51 92 0.011162165 ubox
52 58 0.007967059 ubox
52 59 0.045205990 ubox
52 72 0.903886673 ubox
52 75 0.025411590 ubox
52 80 0.016121885 ubox
52 81 0.006732005 ubox
52 87 0.006860271 ubox
52 91 0.011254264 ubox
53 57 0.021164795 ubox
53 71 0.904188673 ubox
53 73 0.388663479 ubox
53 74 0.018046681 ubox
53 79 0.017497266 ubox
53 86 0.006894452 ubox
53 90 0.011239506 ubox
54 70 0.901882400 ubox
54 72 0.396363658 ubox
54 78 0.017499258 ubox
54 85 0.006933726 ubox
54 91 0.007522489 ubox
55 63 0.015584819 ubox
55 71 0.396507751 ubox
55 77 0.017500591 ubox
55 84 0.006932886 ubox
55 89 0.010494287 ubox
55 90 0.007518075 ubox
56 62 0.015585828 ubox
56 70 0.395546297 ubox
56 83 0.006862850 ubox
56 88 0.010323895 ubox
56 92 0.145520088 ubox
57 61 0.010100234 ubox
57 68 0.957266518 ubox
57 75 0.017452470 ubox
57 82 0.006808269 ubox
57 87 0.009271356 ubox
57 91 0.147186352 ubox
58 64 0.005317824 ubox
58 65 0.242245736 ubox
58 67 0.956116936 ubox
58 74 0.006508270 ubox
58 86 0.004134980 ubox
58 90 0.145317177 ubox
59 63 0.006163493 ubox
59 64 0.247584957 ubox
59 66 0.949816669 ubox
59 73 0.006185611 ubox
59 74 0.016285538 ubox
59 89 0.144685450 ubox
59 90 0.023193140 ubox
60 66 0.079634218 ubox
60 73 0.016385818 ubox
60 89 0.023295010 ubox
61 65 0.100698764 ubox
61 67 0.005975538 ubox
62 66 0.006719800 ubox
62 71 0.017530856 ubox
62 84 0.095694717 ubox
62 86 0.114555708 ubox
63 70 0.017546862 ubox
63 82 0.005316254 ubox
63 83 0.097254801 ubox
63 85 0.112952635 ubox
64 81 0.005295283 ubox
64 82 0.097858763 ubox
65 80 0.005152765 ubox
65 83 0.111158308 ubox
66 81 0.127434398 ubox
66 82 0.079371005 ubox
66 88 0.004596536 ubox
67 78 0.004968663 ubox
67 80 0.149491278 ubox
67 87 0.004830188 ubox
68 77 0.004982486 ubox
68 79 0.149685501 ubox
68 86 0.004876956 ubox
69 78 0.149631523 ubox
69 80 0.022049151 ubox
69 85 0.004883020 ubox
70 76 0.008747754 ubox
70 77 0.149434126 ubox
70 79 0.023283831 ubox
70 84 0.004883413 ubox
71 75 0.010677450 ubox
71 78 0.023393437 ubox
71 83 0.004771817 ubox
72 77 0.023451543 ubox
73 81 0.004288146 ubox
74 80 0.004298693 ubox
75 79 0.004456258 ubox
75 84 0.003238129 ubox
76 82 0.005855975 ubox
76 83 0.003460138 ubox
77 81 0.005791401 ubox
77 82 0.003485381 ubox
79 91 0.004640872 ubox
81 90 0.007238649 ubox
82 89 0.007455381 ubox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
35 89 0.9500000 lbox
36 88 0.9500000 lbox
37 87 0.9500000 lbox
38 86 0.9500000 lbox
39 85 0.9500000 lbox
41 83 0.9500000 lbox
42 82 0.9500000 lbox
43 81 0.9500000 lbox
47 77 0.9500000 lbox
48 76 0.9500000 lbox
49 75 0.9500000 lbox
50 74 0.9500000 lbox
52 72 0.9500000 lbox
53 71 0.9500000 lbox
54 70 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
showpage
end
%%EOF
