%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGGCAGUUAUAUAGACCGGCGGCGGAGCACGCGUGUGUGCGGACGCAGUUGCGUGAGGGGUUUGUACUAUCCUCGGUGCUGUGGUGCAGAGCUAGUUCCUCUCCAGCUCAGCCGCGUAGGUUUGGACAUAUUUGACUCUUUUCCCCCCAGGUUGAAUUGACCAAAGCA\
) } def
/len { sequence length } bind def

/coor [
[309.16061401 451.67681885]
[301.34649658 438.87292480]
[293.53240967 426.06903076]
[285.71829224 413.26513672]
[271.37271118 417.52581787]
[256.40155029 417.92816162]
[241.82525635 414.43878174]
[228.63880920 407.28967285]
[217.74394226 396.96289062]
[209.88745117 384.15802002]
[205.61003113 369.74478149]
[205.20898438 354.70397949]
[208.71768188 340.06072998]
[215.90277100 326.81457520]
[226.27975464 315.87139893]
[218.46565247 303.06750488]
[210.65155029 290.26361084]
[202.83743286 277.45971680]
[195.02333069 264.65582275]
[187.20922852 251.85191345]
[169.60476685 243.90570068]
[169.32499695 223.77339172]
[161.04849243 211.26342773]
[152.77197266 198.75346375]
[144.49545288 186.24348450]
[136.21893311 173.73352051]
[122.74354553 167.38819885]
[121.58194733 151.60969543]
[113.30543518 139.09973145]
[105.02891541 126.58975983]
[96.75240326 114.07978821]
[83.73925018 106.61936951]
[68.76176453 105.79785156]
[53.78427505 104.97633362]
[38.80678940 104.15481567]
[23.82930183 103.33329773]
[8.83930969 102.78546906]
[-6.15818834 102.51151276]
[-21.15568542 102.23754883]
[-36.15318298 101.96358490]
[-51.15068054 101.68962860]
[-65.23040009 110.09757996]
[-79.41798401 101.87295532]
[-79.11846924 85.47654724]
[-64.63996887 77.77556610]
[-50.87672043 86.69213104]
[-35.87922287 86.96608734]
[-20.88172531 87.24005127]
[-5.88422728 87.51401520]
[9.11327076 87.78797150]
[13.13519859 85.15074921]
[18.86360741 85.03735352]
[24.65081978 88.35581207]
[39.62830734 89.17733002]
[54.60579300 89.99884796]
[69.58328247 90.82036591]
[84.56076813 91.64188385]
[94.67215729 80.56217957]
[92.48813629 65.72203064]
[90.30412292 50.88187790]
[88.12010193 36.04172897]
[85.93608856 21.20157623]
[83.75206757 6.36142635]
[80.62445831 -8.30888557]
[76.56604004 -22.74942780]
[72.50762177 -37.18996811]
[68.44919586 -51.63050842]
[64.39077759 -66.07105255]
[60.33235550 -80.51158905]
[56.27393723 -94.95213318]
[52.21551514 -109.39266968]
[48.15709686 -123.83321381]
[44.09867477 -138.27375793]
[29.19620132 -141.99018860]
[18.15965271 -152.67149353]
[13.95780277 -167.44444275]
[17.72093010 -182.33518982]
[28.43676949 -193.33819580]
[43.22281647 -197.49372864]
[58.10169983 -193.68394470]
[69.07106781 -182.93367004]
[73.18022919 -168.13465881]
[69.32382202 -153.26779175]
[58.53921509 -142.33216858]
[62.59763718 -127.89163208]
[66.65605927 -113.45109558]
[70.71447754 -99.01055145]
[74.77289581 -84.57001495]
[78.83132172 -70.12947083]
[82.88973999 -55.68893051]
[86.94815826 -41.24839020]
[91.00657654 -26.80784798]
[95.06500244 -12.36730671]
[102.56995392 -25.35482597]
[116.61396027 -30.62417221]
[130.80982971 -25.77886009]
[138.70133972 -13.02252579]
[136.69944763 1.84328783]
[125.71460724 12.05765057]
[110.74269104 12.97510052]
[98.59221649 4.17740917]
[100.77623749 19.01755905]
[102.96025085 33.85771179]
[105.14427185 48.69786072]
[107.32828522 63.53800964]
[109.51230621 78.37815857]
[116.17395020 89.30310059]
[115.15957642 99.81340790]
[109.26236725 105.80327606]
[117.53888702 118.31324005]
[125.81539917 130.82321167]
[134.09191895 143.33317566]
[148.15930176 150.57330322]
[148.72891235 165.45700073]
[157.00541687 177.96697998]
[165.28193665 190.47694397]
[173.55845642 202.98690796]
[181.83497620 215.49687195]
[192.64622498 217.05828857]
[200.63522339 224.18136597]
[203.30880737 234.31803894]
[200.01312256 244.03781128]
[207.82722473 256.84170532]
[215.64134216 269.64559937]
[223.45544434 282.44949341]
[231.26954651 295.25338745]
[239.08364868 308.05728149]
[253.56068420 303.83230591]
[268.62634277 303.49899292]
[283.25354004 307.07406616]
[296.44659424 314.30801392]
[307.30908203 324.70245361]
[315.10467529 337.54449463]
[319.30709839 351.95559692]
[319.63571167 366.95175171]
[316.07406616 381.51055908]
[308.87078857 394.64105225]
[298.52218628 405.45104980]
[306.33630371 418.25494385]
[314.15042114 431.05883789]
[321.96450806 443.86273193]
[334.00936890 440.44213867]
[346.51248169 440.02612305]
[358.73638916 442.63385010]
[369.96130371 448.10632324]
[379.52761841 456.11599731]
[386.87466431 466.18646240]
[391.57345581 477.72067261]
[393.35186768 490.03640747]
[392.11035156 502.40667725]
[387.92736816 514.10247803]
[381.05468750 524.43591309]
[371.90200806 532.80053711]
[378.76065063 546.14062500]
[385.61929321 559.48077393]
[392.47793579 572.82092285]
[407.25299072 579.07208252]
[411.43878174 594.55944824]
[401.82431030 607.40246582]
[385.78500366 607.74896240]
[375.62481689 595.33325195]
[379.13778687 579.67956543]
[372.27914429 566.33941650]
[365.42053223 552.99926758]
[358.56188965 539.65911865]
[341.15350342 542.42895508]
[323.81716919 539.11083984]
[308.62130737 530.08422852]
[297.38449097 516.41076660]
[291.45782471 499.70922852]
[291.56253052 481.96392822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 141]
[2 140]
[3 139]
[4 138]
[15 127]
[16 126]
[17 125]
[18 124]
[19 123]
[20 122]
[22 118]
[23 117]
[24 116]
[25 115]
[26 114]
[28 112]
[29 111]
[30 110]
[31 109]
[32 57]
[33 56]
[34 55]
[35 54]
[36 53]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[58 106]
[59 105]
[60 104]
[61 103]
[62 102]
[63 101]
[64 93]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
