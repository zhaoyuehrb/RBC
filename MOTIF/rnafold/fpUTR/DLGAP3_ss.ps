%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGCCGGCGCGGCCCCUCAGCUGGGGGCUCCGCAGUGCCGGGCCCCGGUCCCUGCCCGCCUGCCCAACGCCGCAGCGCCCCCGGCCCGGGCCGCCGGCACCAUGUAACCCGGCCGGAGCCCGAGCCGGGCCAGGAUUCAGUGGUCCUGAGCCUUCUGAAGUUAGGCUUCUGCCUGGUGGUGGGGAUCCUGACAUCAAGGAUGGGACACCCUGGAUGGAGGUUCCUGGGGCCUGGCCCCCAAGACUAUGAAGAG\
CCUUUGCUGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[95.34903717 743.72906494]
[93.00651550 749.83270264]
[88.94035339 754.88635254]
[83.56536865 758.42462158]
[77.41481781 760.13397217]
[73.95558167 774.72967529]
[70.49634552 789.32537842]
[67.03710175 803.92102051]
[69.26770782 820.72760010]
[53.73543930 827.52355957]
[42.90531540 814.47961426]
[52.44142914 800.46179199]
[55.90066910 785.86608887]
[59.35990524 771.27044678]
[62.81914520 756.67474365]
[53.79691696 735.40100098]
[70.45190430 718.33984375]
[72.88457489 703.53839111]
[75.31723785 688.73699951]
[77.74990845 673.93554688]
[80.18257904 659.13415527]
[82.61524963 644.33270264]
[85.04791260 629.53131104]
[83.03887939 622.44671631]
[87.59596252 614.57220459]
[90.20068359 599.80010986]
[92.80540466 585.02795410]
[95.41012573 570.25585938]
[98.01485443 555.48376465]
[100.61957550 540.71160889]
[103.22429657 525.93951416]
[105.82901764 511.16738892]
[108.26168823 496.36596680]
[110.52197266 481.53726196]
[104.79084015 467.78939819]
[114.51927948 455.31271362]
[116.77956390 440.48397827]
[119.03985596 425.65524292]
[120.69454193 410.74679565]
[121.74089050 395.78332520]
[122.78723145 380.81988525]
[123.83358002 365.85641479]
[124.87992859 350.89294434]
[125.92627716 335.92950439]
[126.97262573 320.96603394]
[128.01896667 306.00256348]
[129.06532288 291.03912354]
[130.11166382 276.07565308]
[131.15800476 261.11218262]
[117.84230042 240.04121399]
[120.75780487 219.06254578]
[133.97914124 207.61848450]
[128.52223206 193.64630127]
[123.06533813 179.67410278]
[117.60844421 165.70190430]
[112.15154266 151.72970581]
[106.69464111 137.75750732]
[101.23774719 123.78531647]
[86.00042725 119.26876068]
[76.99633789 106.17289734]
[62.02171326 105.30072784]
[47.04227066 104.51568604]
[32.05851364 103.81781006]
[17.07475853 103.11992645]
[2.09100103 102.42205048]
[-7.49837828 114.62136841]
[-22.43607903 118.82192993]
[-36.97824860 113.40853119]
[-45.53313065 100.46273804]
[-44.81119537 84.96246338]
[-35.09003830 72.86788940]
[-20.10764885 68.82962036]
[-5.62505913 74.40045166]
[2.78888083 87.43829346]
[17.77263832 88.13616943]
[32.75639343 88.83405304]
[47.74015045 89.53192902]
[54.54356766 86.71401215]
[62.89388657 90.32610321]
[77.86850739 91.19828033]
[76.89167023 85.06332397]
[77.57256317 78.29091644]
[68.33764648 66.47075653]
[59.10272217 54.65059280]
[49.86779785 42.83043289]
[40.63287735 31.01027107]
[31.39795494 19.19011116]
[16.80464554 13.07898426]
[15.06602955 -1.71380091]
[5.83110762 -13.53396225]
[-3.40381432 -25.35412407]
[-12.63873672 -37.17428589]
[-21.87365913 -48.99444580]
[-34.53511810 -51.32917023]
[-41.98554611 -61.33448029]
[-40.67926025 -73.33786774]
[-49.77602768 -85.26468658]
[-58.87279510 -97.19149780]
[-67.96955872 -109.11830902]
[-77.06632233 -121.04512024]
[-91.87495422 -117.49204254]
[-106.84729767 -120.27573395]
[-119.38928986 -128.91390991]
[-127.32797241 -141.90995789]
[-129.28791809 -157.01223755]
[-124.92954254 -171.60415649]
[-115.00797272 -183.15762329]
[-101.24217224 -189.67088318]
[-86.01715851 -190.01551819]
[-71.97074890 -184.13179016]
[-61.53657532 -173.03909302]
[-56.52241516 -158.65931702]
[-57.79700470 -143.48382568]
[-65.13951111 -130.14189148]
[-56.04274750 -118.21507263]
[-46.94598007 -106.28826141]
[-37.84921646 -94.36145020]
[-28.75244904 -82.43463898]
[-12.20944214 -76.53337097]
[-10.05349731 -58.22937012]
[-0.81857514 -46.40920639]
[8.41634655 -34.58904648]
[17.65126991 -22.76888466]
[26.88619041 -10.94872284]
[40.81895828 -5.68305349]
[43.21811676 9.95518875]
[52.45303726 21.77534866]
[61.68796158 33.59551239]
[70.92288208 45.41567230]
[80.15780640 57.23583221]
[89.39273071 69.05599213]
[104.31942749 67.57488251]
[111.05141449 54.17039108]
[117.78340149 40.76590347]
[124.51538849 27.36141396]
[131.24737549 13.95692348]
[130.94979858 8.81615067]
[132.48045349 4.49446011]
[135.22933960 1.54643857]
[138.45538330 0.20825624]
[145.65107727 -12.95312500]
[152.84678650 -26.11450577]
[152.67799377 -41.93481064]
[165.57234192 -49.39035797]
[172.76803589 -62.55173874]
[174.12980652 -71.54733276]
[180.12480164 -75.82368469]
[187.47314453 -88.90045166]
[194.82148743 -101.97721863]
[202.16983032 -115.05398560]
[209.51818848 -128.13075256]
[201.13452148 -140.93592834]
[199.67355347 -156.17155457]
[205.47102356 -170.33657837]
[217.19470215 -180.17599487]
[232.15057373 -183.42877197]
[246.90188599 -179.34742737]
[258.05889893 -168.86985779]
[263.05783081 -154.40371704]
[260.74990845 -139.27320862]
[251.66554260 -126.95522308]
[237.89222717 -120.28034210]
[222.59495544 -120.78240204]
[215.24659729 -107.70563507]
[207.89825439 -94.62886810]
[200.54991150 -81.55210876]
[193.20156860 -68.47534180]
[185.92942810 -55.35604477]
[178.73371887 -42.19466400]
[179.41719055 -27.31574631]
[166.00816345 -18.91880989]
[158.81246948 -5.75742817]
[151.61677551 7.40395308]
[144.65187073 20.68891144]
[137.91987610 34.09340286]
[131.18789673 47.49789047]
[124.45590210 60.90238190]
[117.72391510 74.30686951]
[127.48830414 98.77852631]
[115.20994568 118.32841492]
[120.66683960 132.30061340]
[126.12374115 146.27281189]
[131.58064270 160.24501038]
[137.03753662 174.21719360]
[142.49443054 188.18939209]
[147.95132446 202.16159058]
[161.02809143 209.50993347]
[175.80021667 206.90521240]
[190.57232666 204.30049133]
[205.34445190 201.69577026]
[220.11656189 199.09104919]
[227.77813721 185.45893860]
[242.42796326 179.98931885]
[257.14883423 185.26475525]
[264.98999023 198.79435730]
[262.24908447 214.18984985]
[250.22032166 224.18197632]
[234.58326721 224.05273438]
[222.72128296 213.86315918]
[207.94917297 216.46788025]
[193.17704773 219.07261658]
[178.40493774 221.67733765]
[163.63281250 224.28205872]
[162.76065063 239.25668335]
[177.13049316 243.55873108]
[191.50033569 247.86077881]
[205.87017822 252.16282654]
[220.24002075 256.46487427]
[234.03002930 249.22102356]
[248.54180908 253.78862000]
[255.36273193 266.97991943]
[269.73257446 271.28198242]
[284.47927856 264.96420288]
[298.54440308 272.68118286]
[301.13836670 288.51315308]
[290.27133179 300.31512451]
[274.27954102 299.03369141]
[265.43051147 285.65182495]
[251.06068420 281.34976196]
[238.11314392 288.62277222]
[223.47879028 284.46459961]
[215.93797302 270.83471680]
[201.56813049 266.53265381]
[187.19828796 262.23062134]
[172.82844543 257.92855835]
[158.45860291 253.62652588]
[146.12147522 262.15853882]
[145.07511902 277.12200928]
[144.02877808 292.08544922]
[142.98243713 307.04891968]
[141.93608093 322.01239014]
[140.88973999 336.97583008]
[139.84338379 351.93930054]
[138.79704285 366.90277100]
[137.75070190 381.86621094]
[136.70434570 396.82968140]
[135.65800476 411.79315186]
[146.74322510 401.68780518]
[161.72622681 400.97387695]
[173.72210693 409.97937012]
[177.21856689 424.56616211]
[170.60896301 438.03143311]
[156.93048096 444.18765259]
[142.46859741 440.20599365]
[133.86857605 427.91552734]
[131.60829163 442.74426270]
[129.34800720 457.57299805]
[134.91746521 472.38150024]
[125.35070038 483.79754639]
[123.09041595 498.62625122]
[125.11811066 504.85897827]
[123.90129852 510.36456299]
[120.60113525 513.77209473]
[117.99641418 528.54425049]
[115.39169312 543.31634521]
[112.78696442 558.08843994]
[110.18224335 572.86059570]
[107.57752228 587.63269043]
[104.97280121 602.40484619]
[102.36808014 617.17694092]
[99.84934235 631.96392822]
[97.41667175 646.76538086]
[94.98400116 661.56677246]
[92.55133057 676.36822510]
[90.11865997 691.16967773]
[87.68599701 705.97106934]
[85.25332642 720.77252197]
[90.44126892 725.08007812]
[94.03418732 730.72552490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[8 12]
[17 267]
[18 266]
[19 265]
[20 264]
[21 263]
[22 262]
[23 261]
[25 260]
[26 259]
[27 258]
[28 257]
[29 256]
[30 255]
[31 254]
[32 253]
[33 250]
[34 249]
[36 247]
[37 246]
[38 245]
[39 237]
[40 236]
[41 235]
[42 234]
[43 233]
[44 232]
[45 231]
[46 230]
[47 229]
[48 228]
[49 227]
[52 186]
[53 185]
[54 184]
[55 183]
[56 182]
[57 181]
[58 180]
[60 80]
[61 79]
[62 77]
[63 76]
[64 75]
[65 74]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
[132 178]
[133 177]
[134 176]
[135 175]
[136 174]
[140 173]
[141 172]
[142 171]
[144 169]
[145 168]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[187 203]
[188 202]
[189 201]
[190 200]
[191 199]
[204 226]
[205 225]
[206 224]
[207 223]
[208 222]
[211 219]
[212 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
