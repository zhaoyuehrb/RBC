%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAGGCUCCGCCCCUCCCUUUGCAGGACGUCACGGAGGACUGCAGGGGCCUGAGCCGCUGCUGCCGCCGCCGCCGCGCAGCCCCACAUCAACGCACCGGGGUCCUGUCACCGCCACCGCCAAAAAAGUCACCGCCGCUAGGGUCGCCGUUGCAUCGGUGCAGGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[108.33957672 162.69267273]
[94.28137970 157.46133423]
[84.55098724 146.04556274]
[81.61244202 131.33622742]
[86.20962524 117.05851746]
[72.54428864 123.24386597]
[58.87894440 129.42921448]
[45.21360779 135.61454773]
[31.54826546 141.79989624]
[21.19092178 157.00315857]
[3.81827068 154.64268494]
[-9.73043728 161.07949829]
[-23.27914619 167.51631165]
[-36.82785416 173.95312500]
[-50.37656021 180.38992310]
[-63.92527008 186.82673645]
[-50.30035019 193.10061646]
[-44.94235992 207.11103821]
[-50.90406799 220.87541199]
[-64.78872681 226.55134583]
[-78.68540955 220.90492249]
[-84.67633057 207.15322876]
[-79.34856415 193.13195801]
[-93.52632141 198.03002930]
[-107.70407867 202.92811584]
[-121.88183594 207.82620239]
[-122.75932312 223.00178528]
[-129.38195801 236.68421936]
[-140.73983765 246.78703308]
[-155.10098267 251.76962280]
[-170.27539062 250.87217712]
[-183.94911194 244.23155212]
[-194.03697205 232.86038208]
[-199.00067139 218.49270630]
[-198.08326721 203.31948853]
[-191.42465210 189.65451050]
[-180.04023743 179.58161926]
[-165.66603088 174.63682556]
[-150.49403381 175.57418823]
[-136.83782959 182.25077820]
[-126.77991486 193.64843750]
[-112.60215759 188.75035095]
[-98.42440033 183.85227966]
[-84.24664307 178.95419312]
[-70.36207581 173.27803040]
[-56.81336975 166.84121704]
[-43.26466370 160.40441895]
[-29.71595383 153.96760559]
[-16.16724586 147.53079224]
[-2.61853838 141.09397888]
[1.74625885 129.78601074]
[13.01406860 124.32264709]
[25.36292076 128.13455200]
[39.02825928 121.94921112]
[52.69359970 115.76387024]
[66.35894012 109.57852173]
[80.02427673 103.39318085]
[84.39512634 89.04411316]
[76.49864197 76.29085541]
[68.60216522 63.53760147]
[60.70568085 50.78434372]
[52.80919647 38.03108597]
[45.60185623 32.35414886]
[44.88714981 24.96839714]
[37.22768021 12.07139874]
[23.52835274 4.15691948]
[23.68194008 -10.73689365]
[16.02247238 -23.63389206]
[1.46349406 -31.18161964]
[0.99093086 -47.57395554]
[15.09091568 -55.94787216]
[29.25859261 -47.68899918]
[28.91946983 -31.29335976]
[36.57893753 -18.39636230]
[49.73041153 -11.40436268]
[50.12467957 4.41193056]
[57.78414536 17.30892754]
[65.56245422 30.13460350]
[73.45893860 42.88785934]
[81.35541534 55.64111710]
[89.25189972 68.39437103]
[97.14838409 81.14762878]
[111.98475647 78.93810272]
[115.82240295 64.43733215]
[119.66004181 49.93655396]
[107.76908112 40.42209625]
[100.78179169 26.89073944]
[99.90876007 11.68686676]
[105.30125427 -2.55535507]
[116.02499390 -13.36837578]
[130.22201538 -18.87877464]
[145.43260193 -18.13184166]
[159.02142334 -11.25698662]
[168.63415527 0.55467916]
[172.60530090 15.25671387]
[170.24687195 30.30190086]
[161.96743774 43.08356857]
[149.20150757 51.38722229]
[134.16081238 53.77419662]
[130.32318115 68.27497101]
[126.48553467 82.77574921]
[134.14500427 95.67274475]
[148.71421814 99.24177551]
[163.28343201 102.81079865]
[177.85264587 106.37982941]
[192.42185974 109.94886017]
[206.99107361 113.51788330]
[216.11125183 112.51995087]
[221.79530334 117.28981781]
[236.29608154 121.12745667]
[250.79685974 124.96510315]
[265.29763794 128.80274963]
[279.79840088 132.64038086]
[298.95922852 126.46068573]
[312.12484741 140.59127808]
[326.75750732 143.89047241]
[341.92153931 139.37794495]
[352.63534546 149.72508240]
[367.26803589 153.02429199]
[358.69067383 140.71862793]
[358.84167480 125.71939850]
[367.66503906 113.58892822]
[381.88870239 108.82573700]
[396.23788452 113.19622040]
[405.39129639 125.07960510]
[405.95446777 140.06903076]
[397.71856689 152.60575867]
[383.73651123 158.04072571]
[397.72360229 163.45935059]
[413.38693237 161.22973633]
[422.45971680 173.04217529]
[436.44680786 178.46080017]
[450.43386841 183.87942505]
[463.40008545 175.35548401]
[478.89859009 176.11445618]
[490.96990967 185.86447144]
[494.97238159 200.85646057]
[489.36694336 215.32569885]
[476.30905151 223.70848083]
[460.81970215 222.78143311]
[448.85485840 212.90103149]
[445.01525879 197.86650085]
[431.02816772 192.44787598]
[417.04107666 187.02925110]
[402.37823486 189.64645386]
[392.30499268 177.44644165]
[378.31790161 172.02781677]
[363.96884155 167.65696716]
[349.33615112 164.35777283]
[335.21875000 169.10627747]
[323.45831299 158.52314758]
[308.82562256 155.22395325]
[300.67193604 161.46186829]
[290.21005249 162.17596436]
[280.90155029 156.88662720]
[275.96078491 147.14115906]
[261.45999146 143.30351257]
[246.95921326 139.46588135]
[232.45845032 135.62823486]
[217.95767212 131.79058838]
[203.42205811 128.08709717]
[188.85282898 124.51807404]
[174.28361511 120.94904327]
[159.71440125 117.38002014]
[145.14518738 113.81098938]
[130.57597351 110.24195862]
[139.24742126 122.48148346]
[140.85990906 137.39456177]
[135.00511169 151.20474243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 57]
[6 56]
[7 55]
[8 54]
[9 53]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[23 44]
[24 43]
[25 42]
[26 41]
[58 82]
[59 81]
[60 80]
[61 79]
[62 78]
[64 77]
[65 76]
[67 74]
[68 73]
[83 101]
[84 100]
[85 99]
[102 166]
[103 165]
[104 164]
[105 163]
[106 162]
[107 161]
[109 160]
[110 159]
[111 158]
[112 157]
[113 156]
[115 152]
[116 151]
[118 149]
[119 148]
[128 147]
[129 146]
[131 144]
[132 143]
[133 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
