%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGCCGGGAGGCAGCGGAGGAGCGACCGCCGCCAUAUUAGGGACCGCGGAGCCCGGGAUCCCGUCAGCGGCGGCCGCGGCCGGGCCUGCGGGAGCUGCGGAGGCCGGAGGCGGGCGCUGUGCGGUGCCAGGAGAGGCGGGGUCGGCGGGAGCCAGCGAGCCACGGGAGCGAGCCAGGCUAACCUUGCCGCGGGCCGAGCCCUGCCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[109.19300079 144.80969238]
[94.80904388 149.06430054]
[83.93253326 138.73466492]
[87.43967438 124.15100861]
[80.24774170 126.27847290]
[76.09900665 140.69332886]
[71.95027161 155.10816956]
[76.42492676 170.88504028]
[64.80654144 182.45851135]
[49.04712296 177.92280579]
[45.35860443 161.94384766]
[57.53541565 150.95944214]
[61.68415070 136.54458618]
[65.83288574 122.12973022]
[59.05518723 118.91838074]
[38.72208405 109.28433228]
[30.19411087 121.62425232]
[33.28029251 137.12428284]
[24.43301773 150.22013855]
[8.90122128 153.14227295]
[-4.10035849 144.15702820]
[-6.85811520 128.59521484]
[2.26407933 115.68935394]
[17.85418892 113.09628296]
[26.38216209 100.75636292]
[95.03645325 66.44929504]
[86.32740784 54.23648834]
[77.61837006 42.02368546]
[68.90932465 29.81088257]
[61.38006973 24.64178085]
[60.16346359 17.35311508]
[51.63549042 5.01319265]
[43.10751724 -7.32672930]
[34.57954407 -19.66665268]
[26.05157280 -32.00657272]
[11.20277691 -28.87784004]
[-3.67253828 -31.66495514]
[-16.31334686 -39.91259766]
[-24.81040573 -52.33787918]
[-27.89459991 -67.02980042]
[-25.12642288 -81.74314880]
[-16.95830536 -94.24159241]
[-25.48627853 -106.58151245]
[-39.69728851 -113.53548431]
[-40.56796646 -128.40461731]
[-49.09593964 -140.74453735]
[-57.62391281 -153.08447266]
[-66.15188599 -165.42439270]
[-74.67985535 -177.76431274]
[-83.20783234 -190.10423279]
[-97.41883850 -197.05821228]
[-98.28952026 -211.92733765]
[-106.81748962 -224.26725769]
[-115.34546661 -236.60717773]
[-122.16863251 -236.08959961]
[-128.76806641 -237.69226074]
[-134.50610352 -241.22763062]
[-138.83847046 -246.32296753]
[-141.36585999 -252.45954895]
[-141.87059021 -259.02532959]
[-140.33502197 -265.37591553]
[-136.94021606 -270.89794922]
[-144.34420776 -283.94329834]
[-151.74821472 -296.98861694]
[-159.15220642 -310.03396606]
[-166.55621338 -323.07928467]
[-173.96020508 -336.12463379]
[-188.93038940 -340.42944336]
[-196.25326538 -353.76473999]
[-192.05702209 -368.00997925]
[-199.46102905 -381.05532837]
[-206.86502075 -394.10067749]
[-214.26901245 -407.14599609]
[-229.23919678 -411.45080566]
[-236.56207275 -424.78610229]
[-232.36584473 -439.03137207]
[-239.76983643 -452.07669067]
[-247.17382812 -465.12203979]
[-254.57783508 -478.16738892]
[-261.98184204 -491.21270752]
[-269.38583374 -504.25805664]
[-276.78982544 -517.30340576]
[-286.12954712 -518.57843018]
[-293.72335815 -523.92779541]
[-297.94158936 -532.04882812]
[-297.95074463 -541.06250000]
[-293.87521362 -548.94769287]
[-300.69491577 -562.30773926]
[-314.74185181 -570.77032471]
[-314.16598511 -587.15936279]
[-299.55975342 -594.61523438]
[-285.94876099 -585.46789551]
[-287.33483887 -569.12744141]
[-280.51513672 -555.76739502]
[-262.28588867 -546.08789062]
[-263.74447632 -524.70739746]
[-256.34048462 -511.66204834]
[-248.93649292 -498.61669922]
[-241.53250122 -485.57138062]
[-234.12849426 -472.52603149]
[-226.72450256 -459.48071289]
[-219.32049561 -446.43536377]
[-204.93865967 -442.73425293]
[-197.24411011 -429.60992432]
[-201.22367859 -414.54998779]
[-193.81968689 -401.50466919]
[-186.41567993 -388.45932007]
[-179.01168823 -375.41400146]
[-164.62983704 -371.71289062]
[-156.93530273 -358.58853149]
[-160.91487122 -343.52862549]
[-153.51086426 -330.48330688]
[-146.10687256 -317.43795776]
[-138.70288086 -304.39260864]
[-131.29887390 -291.34729004]
[-123.89488220 -278.30194092]
[-102.73416901 -268.98229980]
[-103.00553894 -245.13516235]
[-94.47756958 -232.79524231]
[-85.94959259 -220.45530701]
[-72.34856415 -214.38397217]
[-70.86790466 -198.63220215]
[-62.33993530 -186.29228210]
[-53.81196213 -173.95236206]
[-45.28398895 -161.61244202]
[-36.75601578 -149.27252197]
[-28.22804451 -136.93260193]
[-14.62701035 -130.86125183]
[-13.14635658 -115.10948944]
[-4.61838341 -102.76956940]
[9.96067429 -105.99142456]
[24.70247650 -103.37901306]
[37.35516739 -95.29975891]
[45.97391510 -82.95858002]
[49.21982956 -68.21823883]
[46.56786728 -53.31823349]
[38.39149475 -40.53454590]
[46.91946793 -28.19462395]
[55.44744110 -15.85470200]
[63.97541428 -3.51478004]
[72.50338745 8.82514191]
[81.12213135 21.10183907]
[89.83116913 33.31464386]
[98.54021454 45.52744675]
[107.24925995 57.74024963]
[121.39440918 62.73170853]
[135.83946228 58.68938828]
[150.28453064 54.64706802]
[161.35842896 42.55158997]
[177.30975342 46.35784912]
[181.72912598 62.15028763]
[170.07028198 73.68300629]
[154.32684326 69.09212494]
[139.88179016 73.13444519]
[125.43672943 77.17676544]
[123.79093933 84.49395752]
[118.85357666 106.44555664]
[130.17663574 116.28365326]
[141.49969482 126.12175751]
[152.82276917 135.95985413]
[164.14582825 145.79795837]
[179.63786316 149.00846863]
[184.17062378 163.19660950]
[195.49368286 173.03471375]
[204.02281189 176.30017090]
[206.90982056 183.10238647]
[218.08654785 193.10641479]
[229.26327515 203.11044312]
[244.82470703 202.41781616]
[256.01699829 212.72254944]
[256.58139038 227.56227112]
[267.75811768 237.56629944]
[276.23815918 240.95719910]
[279.02453613 247.80123901]
[290.05252075 257.96902466]
[301.08047485 268.13681030]
[320.92788696 271.66989136]
[325.87530518 290.36331177]
[337.19836426 300.20141602]
[348.52142334 310.03952026]
[363.93649292 307.41091919]
[377.40859985 315.35052490]
[382.57656860 330.10943604]
[377.00030518 344.71899414]
[363.31271362 352.28100586]
[347.97665405 349.22488403]
[338.23336792 336.99368286]
[338.68331909 321.36257935]
[327.36026001 311.52447510]
[316.03720093 301.68637085]
[305.95153809 303.31558228]
[296.43377686 299.03524780]
[290.72476196 290.03820801]
[290.91268921 279.16479492]
[279.88470459 268.99700928]
[268.85675049 258.82922363]
[257.75408936 248.74302673]
[246.57736206 238.73899841]
[231.76605225 239.81625366]
[220.28874207 229.82995605]
[219.25924683 214.28717041]
[208.08251953 204.28314209]
[196.90577698 194.27911377]
[185.65557861 184.35777283]
[174.33251953 174.51966858]
[159.65037537 172.01284790]
[154.30772400 157.12101746]
[142.98466492 147.28292847]
[131.66159058 137.44482422]
[120.33853912 127.60671997]
[109.01547241 117.76861572]
[101.82353973 119.89608002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 14]
[6 13]
[7 12]
[16 25]
[17 24]
[26 145]
[27 144]
[28 143]
[29 142]
[31 141]
[32 140]
[33 139]
[34 138]
[35 137]
[42 130]
[43 129]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[52 120]
[53 119]
[54 118]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[70 108]
[71 107]
[72 106]
[73 105]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[87 94]
[88 93]
[146 155]
[147 154]
[148 153]
[157 211]
[158 210]
[159 209]
[160 208]
[161 207]
[163 205]
[164 204]
[166 203]
[167 202]
[168 201]
[171 198]
[172 197]
[174 196]
[175 195]
[176 194]
[178 190]
[179 189]
[180 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
