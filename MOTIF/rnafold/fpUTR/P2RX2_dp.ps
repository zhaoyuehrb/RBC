%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (P2RX2)
} def

/sequence { (\
CUGCAGCGCCUUCCUGGAGGUGGGGGCCGCCCGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.019062797 ubox
1 19 0.452103928 ubox
1 23 0.004653658 ubox
1 24 0.003834148 ubox
1 25 0.004575258 ubox
2 8 0.014113161 ubox
2 16 0.014503413 ubox
2 18 0.502694410 ubox
2 19 0.003361115 ubox
2 22 0.004715018 ubox
2 23 0.003874081 ubox
2 24 0.004653166 ubox
2 29 0.009413439 ubox
2 33 0.032042187 ubox
2 35 0.401511359 ubox
3 7 0.018399409 ubox
3 9 0.051496311 ubox
3 15 0.008432388 ubox
3 21 0.005431653 ubox
3 27 0.016282428 ubox
3 28 0.014880295 ubox
3 30 0.473609939 ubox
3 32 0.033626380 ubox
3 34 0.545926771 ubox
3 36 0.148869119 ubox
4 8 0.051901627 ubox
4 16 0.525432684 ubox
4 20 0.005517161 ubox
4 22 0.009037564 ubox
4 26 0.016392079 ubox
4 29 0.474825774 ubox
4 33 0.545527405 ubox
4 35 0.149014481 ubox
5 11 0.011122214 ubox
5 12 0.004769447 ubox
5 15 0.525175057 ubox
5 21 0.007961629 ubox
6 10 0.011897364 ubox
6 11 0.004987695 ubox
6 14 0.522048616 ubox
6 21 0.007241271 ubox
6 27 0.483899237 ubox
6 30 0.505194090 ubox
6 34 0.108760799 ubox
6 36 0.145466101 ubox
7 16 0.021754048 ubox
7 20 0.008020128 ubox
7 22 0.323618483 ubox
7 26 0.484068574 ubox
7 29 0.505743949 ubox
7 33 0.106675795 ubox
7 35 0.145725618 ubox
8 15 0.016762320 ubox
8 21 0.339679733 ubox
8 27 0.315420086 ubox
8 28 0.397982094 ubox
8 30 0.010832762 ubox
8 32 0.059038487 ubox
8 34 0.141678513 ubox
8 36 0.007883963 ubox
9 17 0.267617536 ubox
9 20 0.341961031 ubox
9 23 0.005474212 ubox
9 24 0.483966455 ubox
9 25 0.035140716 ubox
9 26 0.443230732 ubox
9 29 0.011558946 ubox
9 33 0.137855058 ubox
9 35 0.007803370 ubox
10 16 0.269284080 ubox
10 17 0.070602353 ubox
10 19 0.344194656 ubox
10 20 0.081342937 ubox
10 22 0.014652306 ubox
10 23 0.484768907 ubox
10 24 0.036126918 ubox
10 25 0.442623031 ubox
10 26 0.247233341 ubox
11 16 0.069056650 ubox
11 17 0.008030918 ubox
11 18 0.339877072 ubox
11 19 0.082249445 ubox
11 22 0.470224414 ubox
11 23 0.036518211 ubox
11 24 0.402982076 ubox
11 25 0.246449773 ubox
11 26 0.021732784 ubox
12 16 0.011555962 ubox
12 17 0.312819401 ubox
12 18 0.092420605 ubox
12 20 0.015143781 ubox
12 22 0.031559011 ubox
12 23 0.362408256 ubox
12 24 0.295327672 ubox
12 25 0.036843276 ubox
12 26 0.011223761 ubox
13 17 0.098433151 ubox
13 19 0.018332384 ubox
13 20 0.492634903 ubox
13 22 0.357045752 ubox
13 23 0.340548606 ubox
13 24 0.082585723 ubox
13 25 0.012228461 ubox
13 26 0.006232079 ubox
14 19 0.491740357 ubox
14 20 0.299557537 ubox
14 22 0.340986020 ubox
14 23 0.084790330 ubox
14 24 0.012467858 ubox
14 25 0.006244957 ubox
15 19 0.270001471 ubox
15 22 0.083399678 ubox
15 23 0.012403436 ubox
15 24 0.006232895 ubox
15 33 0.004645515 ubox
15 35 0.005298252 ubox
16 21 0.074123893 ubox
16 31 0.047985988 ubox
16 32 0.033757216 ubox
16 34 0.007469268 ubox
16 37 0.037293312 ubox
17 30 0.048110238 ubox
17 31 0.031610632 ubox
17 36 0.038335162 ubox
19 28 0.056746183 ubox
19 31 0.087158000 ubox
19 32 0.006967448 ubox
19 37 0.392079525 ubox
20 27 0.056841752 ubox
20 30 0.088413590 ubox
20 31 0.004969648 ubox
20 34 0.341699292 ubox
20 36 0.498558485 ubox
21 26 0.056173696 ubox
21 29 0.088533456 ubox
21 33 0.342179362 ubox
21 35 0.498778595 ubox
22 28 0.088575650 ubox
22 31 0.005367119 ubox
22 32 0.353856886 ubox
22 34 0.499845809 ubox
23 27 0.087147285 ubox
23 30 0.005655732 ubox
23 31 0.353653391 ubox
23 32 0.397293824 ubox
23 37 0.119475590 ubox
24 30 0.353057754 ubox
24 31 0.398077166 ubox
24 32 0.442117860 ubox
24 36 0.120856322 ubox
24 37 0.013643845 ubox
25 30 0.398097173 ubox
25 31 0.442135841 ubox
25 32 0.010276221 ubox
25 36 0.013788878 ubox
25 37 0.019499358 ubox
26 30 0.435006718 ubox
26 31 0.010380798 ubox
26 34 0.121800135 ubox
26 36 0.019819192 ubox
27 33 0.121665019 ubox
27 35 0.018298639 ubox
28 35 0.019902921 ubox
29 34 0.021475644 ubox
29 36 0.056400208 ubox
30 35 0.056413863 ubox
3 30 0.9500000 lbox
4 29 0.9500000 lbox
6 27 0.9500000 lbox
7 26 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
showpage
end
%%EOF
