%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCUCGCAGUGCCUGCCGGGAGCCACGUCUCCGAAGACCGAUAGCUGCUUCGGGAUUGGCGUCCGGGCGGCUAUCUAGGGGCUGCUGGGAAGAUGGCGGACUCGGUGGCUAGCCG\
) } def
/len { sequence length } bind def

/coor [
[104.20758820 142.41548157]
[91.34529877 134.69787598]
[90.18756866 119.74254608]
[83.27117920 133.05282593]
[76.35479736 146.36311340]
[82.51642609 160.73559570]
[77.94859314 175.69116211]
[64.80808258 184.16824341]
[49.29943848 182.16423035]
[38.74537659 170.62535095]
[38.12919617 154.99990845]
[47.74184036 142.66575623]
[63.04451370 139.44671631]
[69.96089935 126.13644409]
[76.87728882 112.82615662]
[83.06182098 104.38391876]
[91.44921112 100.00067139]
[80.42759705 89.82598877]
[69.40598297 79.65131378]
[54.01767349 75.97566223]
[49.91430664 61.65743637]
[38.89269257 51.48275757]
[27.87108231 41.30807877]
[16.71500587 31.28101730]
[5.42644453 21.40334702]
[-5.86211681 11.52567577]
[-17.15067863 1.64800549]
[-25.78740883 -1.70815992]
[-28.60375977 -8.64600658]
[-39.62537384 -18.82068443]
[-50.64698410 -28.99536133]
[-59.19131088 -32.58025360]
[-61.82197571 -39.59061050]
[-72.56882477 -50.05508423]
[-83.31568146 -60.51955795]
[-94.06253052 -70.98403168]
[-104.80937958 -81.44850159]
[-115.55622864 -91.91297913]
[-130.08689880 -87.10483551]
[-145.18572998 -89.61161804]
[-157.38311768 -98.85728455]
[-163.87619019 -112.71724701]
[-163.17289734 -128.00659180]
[-155.43482971 -141.21192932]
[-142.44017029 -149.29878235]
[-127.17496490 -150.40884399]
[-113.14706421 -144.28703308]
[-103.57997131 -132.34008789]
[-100.67213440 -117.31334686]
[-105.09175873 -102.65982819]
[-94.34490967 -92.19535828]
[-83.59806061 -81.73088074]
[-72.85120392 -71.26641083]
[-62.10435486 -60.80193710]
[-51.35750198 -50.33746338]
[-40.47230911 -40.01697540]
[-29.45069504 -29.84229660]
[-18.42908287 -19.66761780]
[-7.27300787 -9.64055634]
[4.01555395 0.23711468]
[15.30411530 10.11478519]
[26.59267616 19.99245644]
[33.79058075 22.05540466]
[38.04575729 30.28646851]
[49.06737137 40.46114731]
[60.08898544 50.63582230]
[74.68895721 53.58371353]
[79.58066559 68.62969971]
[90.60227966 78.80438232]
[101.62388611 88.97905731]
[114.74533844 96.24732208]
[129.21685791 100.19385529]
[143.68836975 104.14039612]
[158.15988159 108.08693695]
[172.63140869 112.03347778]
[187.98107910 108.19963837]
[198.22422791 119.01291656]
[212.69575500 122.95944977]
[227.16726685 126.90599060]
[244.78889465 121.77097321]
[256.71649170 134.56845093]
[271.28793335 138.12834167]
[285.85940552 141.68824768]
[300.47692871 145.05386353]
[315.13800049 148.22460938]
[329.79904175 151.39533997]
[344.46008301 154.56608582]
[359.12115479 157.73681641]
[373.78219604 160.90756226]
[386.92984009 152.13743591]
[402.41143799 155.31468201]
[411.04208374 168.55430603]
[407.70132446 184.00146484]
[394.37121582 192.49163818]
[378.96023560 188.98776245]
[370.61145020 175.56861877]
[355.95040894 172.39787292]
[341.28936768 169.22712708]
[326.62829590 166.05639648]
[311.96725464 162.88565063]
[297.30621338 159.71492004]
[290.01013184 161.39807129]
[282.29949951 156.25968933]
[267.72805786 152.69979858]
[253.15660095 149.13989258]
[242.57728577 155.16911316]
[230.34645081 152.22889709]
[223.22073364 141.37750244]
[208.74920654 137.43096924]
[194.27769470 133.48443604]
[179.96313477 137.60055542]
[168.68487549 126.50498962]
[154.21334839 122.55845642]
[139.74183655 118.61191559]
[125.27031708 114.66537476]
[110.79879761 110.71884155]
[121.00225830 121.71380615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[17 70]
[18 69]
[19 68]
[21 66]
[22 65]
[23 64]
[24 62]
[25 61]
[26 60]
[27 59]
[29 58]
[30 57]
[31 56]
[33 55]
[34 54]
[35 53]
[36 52]
[37 51]
[38 50]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[77 110]
[78 109]
[79 108]
[81 105]
[82 104]
[83 103]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
