%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DONSON)
} def

/sequence { (\
AGGGGCGGGCCCGGCGCGCGCGGGAAGUCUCUGUAGGGCGGCCGGCUACCCUCAGCCGCCGCGCGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 32 0.228052126 ubox
1 52 0.004790132 ubox
2 11 0.054049799 ubox
2 12 0.851745551 ubox
2 31 0.245830274 ubox
2 32 0.011597214 ubox
2 51 0.005477269 ubox
2 52 0.017285230 ubox
2 53 0.008448270 ubox
2 60 0.035821355 ubox
2 67 0.023580144 ubox
3 10 0.054215478 ubox
3 11 0.852607261 ubox
3 12 0.447496746 ubox
3 30 0.246101364 ubox
3 31 0.012821037 ubox
3 50 0.005451807 ubox
3 51 0.019275058 ubox
3 52 0.005952591 ubox
3 59 0.035833517 ubox
3 66 0.024138135 ubox
3 67 0.004582834 ubox
4 10 0.852050501 ubox
4 11 0.448210422 ubox
4 12 0.020536954 ubox
4 29 0.246415284 ubox
4 30 0.010256842 ubox
4 49 0.005412313 ubox
4 50 0.019295522 ubox
4 51 0.005936938 ubox
4 57 0.036226494 ubox
4 60 0.008003134 ubox
4 66 0.003592517 ubox
4 67 0.063133984 ubox
5 10 0.445775945 ubox
5 11 0.020420897 ubox
5 15 0.006677239 ubox
5 19 0.013659566 ubox
5 21 0.007857423 ubox
5 28 0.246281121 ubox
5 29 0.010226257 ubox
5 34 0.004750756 ubox
5 49 0.019299860 ubox
5 50 0.005853182 ubox
5 56 0.036266731 ubox
5 59 0.008018736 ubox
5 64 0.025350493 ubox
5 66 0.066808443 ubox
6 13 0.005473849 ubox
6 14 0.006540088 ubox
6 18 0.013685062 ubox
6 20 0.007875738 ubox
6 27 0.246097898 ubox
6 33 0.004843840 ubox
6 55 0.036239391 ubox
6 58 0.008024219 ubox
6 63 0.025349363 ubox
6 65 0.067160277 ubox
7 12 0.006182972 ubox
7 17 0.013725833 ubox
7 19 0.008026168 ubox
7 30 0.004408194 ubox
7 31 0.003215201 ubox
7 32 0.004667341 ubox
7 47 0.003665724 ubox
7 50 0.004330260 ubox
7 51 0.035674711 ubox
7 52 0.003810904 ubox
7 53 0.003584163 ubox
7 57 0.007402601 ubox
7 62 0.024440670 ubox
7 64 0.066810252 ubox
8 29 0.005194778 ubox
8 31 0.004646390 ubox
8 46 0.003326658 ubox
8 47 0.020348301 ubox
8 49 0.004327912 ubox
8 50 0.035733593 ubox
8 51 0.004599257 ubox
8 56 0.006768510 ubox
8 60 0.016124127 ubox
9 15 0.013807988 ubox
9 17 0.008043474 ubox
9 28 0.005279147 ubox
9 29 0.003456007 ubox
9 30 0.004116125 ubox
9 46 0.021291839 ubox
9 49 0.035700387 ubox
9 50 0.004531488 ubox
9 56 0.003845712 ubox
9 59 0.016139358 ubox
9 62 0.066299163 ubox
9 64 0.011306350 ubox
10 14 0.013709455 ubox
10 16 0.008034536 ubox
10 23 0.037957846 ubox
10 24 0.240070046 ubox
10 27 0.005317197 ubox
10 45 0.017484143 ubox
10 55 0.004652309 ubox
10 58 0.016047735 ubox
10 61 0.060479067 ubox
10 63 0.011705083 ubox
11 22 0.037873461 ubox
11 23 0.240461808 ubox
11 24 0.040952401 ubox
11 44 0.012366271 ubox
11 45 0.039739323 ubox
12 20 0.036943555 ubox
12 22 0.240286062 ubox
12 23 0.041122527 ubox
12 44 0.041846971 ubox
12 61 0.034943515 ubox
13 19 0.037061142 ubox
13 21 0.215201193 ubox
13 43 0.045533213 ubox
13 57 0.003692931 ubox
13 60 0.069619215 ubox
13 64 0.004250057 ubox
13 67 0.920409314 ubox
14 21 0.114593681 ubox
14 42 0.045539170 ubox
14 56 0.003702890 ubox
14 59 0.069892220 ubox
14 64 0.093230022 ubox
14 66 0.953764029 ubox
15 20 0.156090763 ubox
15 40 0.007697214 ubox
15 41 0.044853347 ubox
15 55 0.003700696 ubox
15 58 0.069891124 ubox
15 63 0.093407223 ubox
15 65 0.956498383 ubox
16 39 0.010882435 ubox
16 56 0.004069273 ubox
16 57 0.069733080 ubox
16 62 0.093406256 ubox
16 64 0.956588175 ubox
16 66 0.085154338 ubox
17 38 0.010894842 ubox
17 40 0.044042564 ubox
17 55 0.005750755 ubox
17 61 0.093404416 ubox
17 63 0.956578735 ubox
17 65 0.088864861 ubox
18 28 0.003550719 ubox
18 34 0.035483144 ubox
18 39 0.044274244 ubox
18 56 0.069557906 ubox
18 59 0.005296010 ubox
18 60 0.092303466 ubox
18 62 0.953302586 ubox
18 64 0.089180729 ubox
18 66 0.004353809 ubox
19 27 0.003757978 ubox
19 33 0.036873654 ubox
19 38 0.044275187 ubox
19 55 0.069546089 ubox
19 58 0.007416131 ubox
19 61 0.952494397 ubox
19 63 0.089207970 ubox
19 65 0.004574021 ubox
20 28 0.039647113 ubox
20 32 0.039165956 ubox
20 34 0.705267968 ubox
20 39 0.012154200 ubox
20 46 0.004710069 ubox
20 56 0.009304016 ubox
20 57 0.005523657 ubox
20 59 0.421574362 ubox
20 60 0.434533278 ubox
20 62 0.087539328 ubox
20 64 0.005244349 ubox
21 27 0.041425235 ubox
21 33 0.727666815 ubox
21 38 0.012129243 ubox
21 45 0.004746948 ubox
21 55 0.010989500 ubox
21 58 0.589012950 ubox
21 61 0.087514204 ubox
21 63 0.005235463 ubox
22 29 0.022929245 ubox
22 30 0.024625884 ubox
22 31 0.210578419 ubox
22 32 0.709920680 ubox
22 43 0.021393645 ubox
22 51 0.074656841 ubox
22 52 0.006332235 ubox
22 57 0.584668527 ubox
22 60 0.076906331 ubox
23 28 0.020929884 ubox
23 29 0.028561323 ubox
23 30 0.213053099 ubox
23 31 0.706809668 ubox
23 32 0.087811005 ubox
23 42 0.021301479 ubox
23 43 0.069269837 ubox
23 50 0.075619692 ubox
23 51 0.007581522 ubox
23 56 0.582851498 ubox
23 57 0.133617960 ubox
23 59 0.074866399 ubox
23 60 0.005421665 ubox
24 28 0.020416314 ubox
24 29 0.351543341 ubox
24 30 0.574170584 ubox
24 31 0.114702026 ubox
24 42 0.076042034 ubox
24 49 0.076390369 ubox
24 50 0.008288212 ubox
24 51 0.005678316 ubox
24 53 0.020043894 ubox
24 56 0.137148122 ubox
24 59 0.006907229 ubox
25 30 0.123020472 ubox
25 52 0.019577160 ubox
26 32 0.012197435 ubox
26 47 0.079693972 ubox
26 52 0.011479264 ubox
27 31 0.012580916 ubox
27 39 0.090870623 ubox
27 42 0.046589324 ubox
27 46 0.080865948 ubox
27 49 0.003484299 ubox
27 51 0.012475750 ubox
27 56 0.018607307 ubox
27 59 0.011778698 ubox
28 37 0.007238905 ubox
28 38 0.089224955 ubox
28 41 0.046640972 ubox
28 45 0.080608519 ubox
28 48 0.003392451 ubox
28 55 0.011218617 ubox
28 58 0.013427350 ubox
29 36 0.024441168 ubox
29 37 0.089230737 ubox
29 38 0.019161342 ubox
29 40 0.046558469 ubox
29 44 0.080033688 ubox
29 45 0.005867146 ubox
29 55 0.020669938 ubox
30 35 0.022381964 ubox
30 36 0.083608212 ubox
30 37 0.019530428 ubox
30 38 0.013585803 ubox
30 41 0.004146181 ubox
30 44 0.005452772 ubox
30 54 0.015521705 ubox
31 36 0.030334249 ubox
31 37 0.014857276 ubox
31 38 0.044495236 ubox
31 40 0.004958330 ubox
31 41 0.079501975 ubox
31 55 0.595850442 ubox
32 36 0.014083600 ubox
32 37 0.043834321 ubox
32 40 0.079710074 ubox
32 54 0.597424107 ubox
32 63 0.003740512 ubox
32 65 0.046736831 ubox
33 39 0.080140607 ubox
33 42 0.010230558 ubox
33 46 0.032641071 ubox
33 49 0.009397173 ubox
33 53 0.597923319 ubox
33 62 0.010855907 ubox
33 64 0.127709986 ubox
33 66 0.008501949 ubox
34 38 0.074974634 ubox
34 41 0.010109247 ubox
34 45 0.031118930 ubox
34 48 0.009383106 ubox
34 61 0.010408123 ubox
34 63 0.127151693 ubox
34 65 0.007907122 ubox
35 47 0.008591637 ubox
35 52 0.587580171 ubox
36 43 0.037164924 ubox
36 46 0.007903338 ubox
36 50 0.059036286 ubox
36 51 0.595854218 ubox
36 53 0.003330702 ubox
36 60 0.040854532 ubox
36 67 0.011814279 ubox
37 42 0.037185550 ubox
37 43 0.006225938 ubox
37 47 0.026757031 ubox
37 49 0.057419411 ubox
37 50 0.595672156 ubox
37 52 0.003621565 ubox
37 59 0.029065162 ubox
37 60 0.744732519 ubox
37 66 0.011865045 ubox
37 67 0.008026002 ubox
38 42 0.006163452 ubox
38 46 0.082742275 ubox
38 49 0.592300201 ubox
38 51 0.003639624 ubox
38 59 0.746904582 ubox
38 62 0.238432922 ubox
38 64 0.005298424 ubox
38 66 0.007822906 ubox
39 45 0.098467168 ubox
39 58 0.747466417 ubox
39 61 0.239133335 ubox
39 63 0.005095003 ubox
39 65 0.007851965 ubox
40 47 0.563659347 ubox
40 50 0.004424209 ubox
40 57 0.747441218 ubox
40 60 0.250468352 ubox
40 62 0.003748094 ubox
40 64 0.007764846 ubox
41 46 0.571499778 ubox
41 49 0.004542410 ubox
41 56 0.747442215 ubox
41 59 0.250595813 ubox
41 62 0.007673079 ubox
42 55 0.747060459 ubox
42 58 0.177214775 ubox
42 61 0.007710353 ubox
43 58 0.187730221 ubox
44 50 0.101449532 ubox
44 51 0.510804182 ubox
44 52 0.100525982 ubox
44 53 0.511145671 ubox
44 57 0.268557753 ubox
45 49 0.101467120 ubox
45 50 0.505102173 ubox
45 51 0.137824471 ubox
45 52 0.397275783 ubox
45 56 0.269359880 ubox
46 55 0.269393319 ubox
47 54 0.258398027 ubox
55 62 0.006699806 ubox
55 64 0.007935131 ubox
55 66 0.005257639 ubox
56 61 0.006689793 ubox
56 63 0.007855675 ubox
56 65 0.004502441 ubox
57 63 0.003308807 ubox
57 65 0.016541119 ubox
58 62 0.003275101 ubox
58 64 0.017439245 ubox
59 63 0.017314106 ubox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
13 67 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
18 62 0.9500000 lbox
19 61 0.9500000 lbox
20 60 0.9500000 lbox
21 58 0.9500000 lbox
22 57 0.9500000 lbox
23 56 0.9500000 lbox
31 55 0.9500000 lbox
32 54 0.9500000 lbox
33 53 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
