%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HCFC2)
} def

/sequence { (\
ACGUGACCCCAGCACAGCUGGAGGCGGGUCCCCGCCCUCCCCAGGGAGCAGCCGGUUGAGGCGGGAGCGGUGCAUUGUGGGCAGAGGGGCGGGGGUUGGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.741753743 ubox
1 96 0.008703353 ubox
2 26 0.117622272 ubox
2 28 0.965989116 ubox
2 95 0.009619627 ubox
2 98 0.014967609 ubox
3 25 0.117885194 ubox
3 29 0.003848049 ubox
3 97 0.010030151 ubox
4 24 0.085835765 ubox
4 26 0.968629122 ubox
4 28 0.005305147 ubox
4 98 0.003172345 ubox
5 25 0.977670026 ubox
5 30 0.011338772 ubox
5 97 0.004840233 ubox
6 29 0.018349419 ubox
6 96 0.004904254 ubox
7 21 0.006882794 ubox
7 24 0.988715578 ubox
7 27 0.011567857 ubox
7 28 0.019708440 ubox
7 95 0.004372979 ubox
7 99 0.007154131 ubox
7 100 0.010286119 ubox
8 20 0.006033905 ubox
8 21 0.006951913 ubox
8 23 0.989174059 ubox
8 26 0.011601517 ubox
8 27 0.019675162 ubox
8 98 0.007121586 ubox
8 99 0.009719249 ubox
8 100 0.103781817 ubox
9 20 0.005059257 ubox
9 21 0.994246741 ubox
9 26 0.013991316 ubox
9 98 0.006038243 ubox
9 99 0.104081125 ubox
10 20 0.994502573 ubox
10 98 0.104137232 ubox
11 19 0.994297248 ubox
11 97 0.104060681 ubox
12 18 0.994478479 ubox
12 96 0.103883920 ubox
13 17 0.987248843 ubox
13 28 0.003300321 ubox
13 95 0.103713692 ubox
14 29 0.046615451 ubox
15 28 0.049687655 ubox
17 25 0.069972920 ubox
17 29 0.024996515 ubox
18 24 0.070013044 ubox
18 27 0.072618672 ubox
18 28 0.024089981 ubox
19 23 0.063074323 ubox
19 26 0.073469401 ubox
19 27 0.021919832 ubox
20 25 0.074069576 ubox
25 95 0.003477935 ubox
25 98 0.072001299 ubox
26 97 0.069521950 ubox
27 96 0.061014496 ubox
27 97 0.099123710 ubox
28 96 0.108903003 ubox
29 94 0.015530696 ubox
29 95 0.489550885 ubox
29 99 0.006337766 ubox
29 100 0.004821852 ubox
29 101 0.005448904 ubox
30 93 0.016406523 ubox
30 94 0.997067593 ubox
30 95 0.041856476 ubox
30 98 0.003819385 ubox
30 99 0.003904797 ubox
30 100 0.005545137 ubox
31 92 0.015270101 ubox
31 93 0.999159907 ubox
31 94 0.036723745 ubox
31 99 0.004780753 ubox
32 91 0.014024972 ubox
32 92 0.999412662 ubox
32 93 0.030223164 ubox
32 98 0.003866859 ubox
33 91 0.999635570 ubox
33 92 0.021848359 ubox
34 90 0.999219620 ubox
35 88 0.450519933 ubox
35 89 0.892698184 ubox
36 87 0.635976277 ubox
36 88 0.771582682 ubox
36 89 0.007802540 ubox
37 84 0.026846932 ubox
37 86 0.778430046 ubox
37 87 0.626870408 ubox
37 88 0.010984765 ubox
38 83 0.053164481 ubox
38 85 0.898319734 ubox
38 86 0.411942199 ubox
38 87 0.013395515 ubox
39 81 0.050880317 ubox
39 84 0.918215292 ubox
39 86 0.088539531 ubox
40 80 0.045842273 ubox
40 81 0.993923081 ubox
41 79 0.039858330 ubox
41 80 0.998900495 ubox
41 81 0.008281927 ubox
42 77 0.031115597 ubox
42 79 0.999164769 ubox
42 80 0.006824475 ubox
43 76 0.030821671 ubox
43 78 0.998376661 ubox
44 75 0.029053715 ubox
44 76 0.017839220 ubox
45 75 0.023529205 ubox
45 76 0.977198493 ubox
46 75 0.976376539 ubox
46 76 0.056268458 ubox
47 75 0.067627253 ubox
48 68 0.007861757 ubox
48 71 0.003712373 ubox
48 73 0.998743788 ubox
49 67 0.007875522 ubox
49 70 0.003728424 ubox
49 72 0.997343588 ubox
50 71 0.806414667 ubox
51 62 0.047429194 ubox
51 68 0.011487419 ubox
51 71 0.585270260 ubox
52 61 0.047662371 ubox
52 64 0.012158088 ubox
52 65 0.014843555 ubox
52 67 0.008903310 ubox
52 70 0.997513929 ubox
53 60 0.047675307 ubox
53 63 0.013100106 ubox
53 64 0.016196851 ubox
53 69 0.998381706 ubox
54 62 0.013093105 ubox
54 68 0.989682437 ubox
55 62 0.027650508 ubox
55 68 0.128100412 ubox
56 61 0.026366321 ubox
56 64 0.031497268 ubox
56 65 0.058514185 ubox
56 66 0.966621892 ubox
56 67 0.179838863 ubox
57 63 0.050879498 ubox
57 64 0.093230782 ubox
57 65 0.957858044 ubox
57 66 0.185151100 ubox
58 62 0.069158249 ubox
61 68 0.021753530 ubox
62 67 0.023701346 ubox
62 69 0.004484516 ubox
63 68 0.014441676 ubox
96 102 0.026066235 ubox
96 103 0.046421274 ubox
97 101 0.024945408 ubox
97 102 0.069561588 ubox
1 29 0.9500000 lbox
2 28 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
13 17 0.9500000 lbox
30 94 0.9500000 lbox
31 93 0.9500000 lbox
32 92 0.9500000 lbox
33 91 0.9500000 lbox
34 90 0.9500000 lbox
35 89 0.9500000 lbox
36 88 0.9500000 lbox
37 87 0.9500000 lbox
38 85 0.9500000 lbox
39 84 0.9500000 lbox
40 81 0.9500000 lbox
41 80 0.9500000 lbox
42 79 0.9500000 lbox
43 78 0.9500000 lbox
45 76 0.9500000 lbox
46 75 0.9500000 lbox
48 73 0.9500000 lbox
49 72 0.9500000 lbox
50 71 0.9500000 lbox
52 70 0.9500000 lbox
53 69 0.9500000 lbox
54 68 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
showpage
end
%%EOF
