%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCCAGCAAUACGGCUCCCACAGCACAAGGGGGUGGAGGUUUGGCCCUAAAGCUUCAGGACACCAAAGAAAUUCAGUCGAACAGCCCACCAGUUCUCUCCAUAGGGACCUGGGUCCCGUGAAUGCUGGUUAUCUCACACCCUGAGGAAUAAAGAUUGGAAUCCGCACUGGAUGCUGGAAGUUGACUCGGAGAAAAUUGCGACAGGAGGGAA\
) } def
/len { sequence length } bind def

/coor [
[190.59019470 449.38598633]
[201.48561096 438.96710205]
[214.55818176 431.45901489]
[210.40945435 417.04415894]
[206.26071167 402.62930298]
[202.00578308 388.24545288]
[197.64489746 373.89334106]
[193.17829895 359.57379150]
[188.60621643 345.28759766]
[184.03411865 331.00137329]
[179.46203613 316.71514893]
[164.23744202 304.79321289]
[168.82232666 285.16207886]
[163.83085632 271.01690674]
[158.83940125 256.87176514]
[153.84794617 242.72660828]
[140.34242249 236.55114746]
[135.07887268 222.27705383]
[141.64784241 208.15309143]
[136.65638733 194.00793457]
[131.66493225 179.86277771]
[118.15940094 173.68731689]
[112.89585114 159.41322327]
[119.46482086 145.28926086]
[114.47336578 131.14410400]
[99.30320740 133.36779785]
[85.12741089 128.79301453]
[74.74691010 118.72756195]
[70.03267670 105.52101135]
[71.59449005 92.02474976]
[78.72854614 80.97813416]
[70.56823730 68.39205170]
[62.40793228 55.80597305]
[54.24762344 43.21989441]
[46.08731842 30.63381386]
[37.92701340 18.04773331]
[29.67411232 5.52217436]
[21.32906532 -6.94218254]
[12.98401833 -19.40653992]
[4.63897085 -31.87089539]
[-3.70607615 -44.33525467]
[-9.45781422 -47.59047318]
[-12.27969074 -52.52121735]
[-12.10709000 -57.29259109]
[-20.08087921 -69.99765778]
[-28.05467033 -82.70272064]
[-36.02846146 -95.40778351]
[-39.93297577 -97.29954529]
[-42.74991226 -100.05749512]
[-44.34055710 -103.23366547]
[-44.72581863 -106.38104248]
[-44.07210541 -109.10550690]
[-51.28289795 -122.25862122]
[-58.49368668 -135.41174316]
[-65.80127716 -148.51132202]
[-73.20527649 -161.55665588]
[-80.60927582 -174.60198975]
[-88.01327515 -187.64733887]
[-95.60886383 -200.58204651]
[-103.39440918 -213.40333557]
[-111.17994690 -226.22462463]
[-118.96548462 -239.04591370]
[-118.27988434 -224.06158447]
[-117.77373505 -209.07012939]
[-123.86862183 -195.36421204]
[-135.33943176 -185.69877625]
[-149.88047791 -182.01664734]
[-164.56892395 -185.05795288]
[-176.45231628 -194.21136475]
[-183.14202881 -207.63700867]
[-183.29339600 -222.63623047]
[-176.87487793 -236.19557190]
[-162.22131348 -232.99038696]
[-173.54437256 -242.82849121]
[-184.86743164 -252.66659546]
[-201.06040955 -255.25886536]
[-206.65834045 -270.67300415]
[-195.90257263 -283.05221558]
[-179.85771179 -279.66189575]
[-175.02934265 -263.98965454]
[-163.70626831 -254.15155029]
[-152.38320923 -244.31344604]
[-145.80665588 -247.91883850]
[-153.01744080 -261.07196045]
[-163.93983459 -271.35308838]
[-157.53709412 -284.91790771]
[-142.65760803 -283.02029419]
[-139.86431885 -268.28274536]
[-132.65353394 -255.12963867]
[-126.07697296 -258.73504639]
[-128.28135681 -273.57217407]
[-130.48573303 -288.40930176]
[-132.69010925 -303.24645996]
[-142.37144470 -315.75973511]
[-136.58853149 -329.48587036]
[-138.79290771 -344.32302856]
[-140.99728394 -359.16015625]
[-143.20166016 -373.99728394]
[-145.40603638 -388.83444214]
[-156.02189636 -401.33386230]
[-150.25094604 -416.68405151]
[-134.02986145 -419.09405518]
[-124.04548645 -406.08465576]
[-130.56890869 -391.03881836]
[-128.36453247 -376.20166016]
[-126.16014862 -361.36453247]
[-123.95577240 -346.52740479]
[-121.75139618 -331.69024658]
[-112.22772217 -320.23822021]
[-117.85296631 -305.45083618]
[-115.64859009 -290.61367798]
[-113.44421387 -275.77655029]
[-111.23983765 -260.93942261]
[-106.14419556 -246.83145142]
[-98.35865784 -234.01016235]
[-90.57312012 -221.18887329]
[-82.78758240 -208.36758423]
[-78.44463348 -206.38400269]
[-75.30094147 -201.65194702]
[-74.96793365 -195.05133057]
[-67.56393433 -182.00599670]
[-60.15993881 -168.96066284]
[-52.75594330 -155.91531372]
[-46.72143936 -151.65040588]
[-45.34056854 -142.62252808]
[-38.12977982 -129.46940613]
[-30.91898918 -116.31629181]
[-23.32339478 -103.38157654]
[-15.34960461 -90.67650604]
[-7.37581491 -77.97144318]
[0.59797466 -65.26638031]
[8.75828075 -52.68030167]
[17.10332680 -40.21594238]
[25.44837379 -27.75158691]
[33.79342270 -15.28722954]
[42.13846970 -2.82287264]
[48.47080994 0.98583519]
[50.51309204 9.88742733]
[58.67339706 22.47350693]
[66.83370209 35.05958557]
[74.99401093 47.64566803]
[83.15431976 60.23174667]
[91.31462097 72.81782532]
[109.08192444 70.91321564]
[125.67607880 80.22702789]
[134.30915833 98.47837067]
[149.16215515 96.38346863]
[164.01513672 94.28856659]
[168.16502380 79.63597870]
[177.92085266 67.94223022]
[191.59237671 61.23334885]
[206.81092834 60.67167664]
[220.93980408 66.35453033]
[231.53108215 77.29732513]
[236.74977112 91.60414886]
[235.69168091 106.79626465]
[228.54014587 120.24153900]
[216.53421021 129.61050415]
[201.75398254 133.27992249]
[186.76022339 130.61405945]
[174.15068054 122.07477570]
[166.11004639 109.14156342]
[151.25704956 111.23646545]
[136.40405273 113.33135986]
[128.61851501 126.15264893]
[133.60997009 140.29780579]
[147.58834839 147.17114258]
[152.44889832 161.58743286]
[145.81007385 174.87132263]
[150.80154419 189.01647949]
[155.79299927 203.16163635]
[169.77137756 210.03495789]
[174.63191223 224.45126343]
[167.99310303 237.73515320]
[172.98455811 251.88031006]
[177.97601318 266.02545166]
[182.96746826 280.17062378]
[193.03283691 284.28829956]
[199.04725647 293.08413696]
[199.22482300 303.51855469]
[193.74826050 312.14306641]
[198.32034302 326.42929077]
[202.89242554 340.71551514]
[207.46450806 355.00170898]
[213.05990601 362.21981812]
[211.99699402 369.53247070]
[216.35787964 383.88455200]
[221.84622192 391.18438721]
[220.67556763 398.48059082]
[224.82431030 412.89541626]
[228.97303772 427.31027222]
[244.03675842 426.72045898]
[258.80377197 429.75347900]
[272.41552734 436.23294067]
[284.08065796 445.78219604]
[293.12097168 457.84600830]
[299.01089478 471.72305298]
[301.40795898 486.60650635]
[300.17285156 501.63110352]
[295.37734985 515.92327881]
[287.30023193 528.65216064]
[276.41113281 539.07763672]
[263.34310913 546.59362793]
[248.85594177 550.76318359]
[233.79187012 551.34387207]
[219.02671814 548.30194092]
[205.41888428 541.81420898]
[193.75953674 532.25787354]
[184.72653198 520.18859863]
[178.84503174 506.30798340]
[176.45697021 491.42306519]
[177.70120239 476.39923096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 191]
[4 190]
[5 189]
[6 187]
[7 186]
[8 184]
[9 183]
[10 182]
[11 181]
[13 177]
[14 176]
[15 175]
[16 174]
[19 171]
[20 170]
[21 169]
[24 166]
[25 165]
[31 143]
[32 142]
[33 141]
[34 140]
[35 139]
[36 138]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[44 131]
[45 130]
[46 129]
[47 128]
[52 127]
[53 126]
[54 125]
[55 123]
[56 122]
[57 121]
[58 120]
[59 117]
[60 116]
[61 115]
[62 114]
[73 82]
[74 81]
[75 80]
[90 113]
[91 112]
[92 111]
[93 110]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[146 164]
[147 163]
[148 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
