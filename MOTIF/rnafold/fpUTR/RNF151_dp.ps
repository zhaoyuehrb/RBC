%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:21:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RNF151)
} def

/sequence { (\
UGUGAAAUGCAGGCUCCUGAGCUCUGGGGGCCUGUGGAGCUGCUGUCUAGACGCAGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.004841869 ubox
1 11 0.005865798 ubox
1 36 0.008516277 ubox
1 42 0.012215823 ubox
1 53 0.006958499 ubox
1 55 0.053556545 ubox
2 8 0.029529515 ubox
2 10 0.009559846 ubox
2 40 0.217604199 ubox
2 41 0.007844268 ubox
2 43 0.039626595 ubox
2 52 0.010260106 ubox
2 54 0.059444893 ubox
2 58 0.017992593 ubox
3 7 0.028703499 ubox
3 9 0.009900581 ubox
3 36 0.013831324 ubox
3 39 0.222360172 ubox
3 42 0.039985778 ubox
3 51 0.010135117 ubox
3 53 0.059379069 ubox
3 57 0.018689348 ubox
4 8 0.009829561 ubox
4 35 0.003441632 ubox
4 41 0.029360709 ubox
4 47 0.006544566 ubox
4 52 0.058505980 ubox
4 59 0.031487773 ubox
5 46 0.006434417 ubox
5 58 0.029831228 ubox
7 35 0.012022338 ubox
7 46 0.006487207 ubox
7 58 0.014285106 ubox
8 34 0.004588361 ubox
8 36 0.565870097 ubox
8 45 0.006311612 ubox
8 49 0.005916863 ubox
8 55 0.004806524 ubox
8 57 0.014713400 ubox
9 35 0.977896794 ubox
9 43 0.023638987 ubox
9 46 0.019136419 ubox
9 54 0.004890773 ubox
10 34 0.999201873 ubox
10 36 0.004695646 ubox
10 42 0.023943194 ubox
10 45 0.019565528 ubox
10 53 0.004556267 ubox
11 33 0.999212044 ubox
11 35 0.003207254 ubox
11 41 0.022164876 ubox
11 44 0.019372202 ubox
12 32 0.999487597 ubox
12 40 0.015684341 ubox
12 41 0.013539013 ubox
12 43 0.017545962 ubox
13 31 0.999494753 ubox
13 40 0.027382581 ubox
14 29 0.034361765 ubox
14 30 0.998870301 ubox
14 39 0.031596303 ubox
15 28 0.048495593 ubox
15 29 0.995458692 ubox
15 30 0.007363042 ubox
15 38 0.031604000 ubox
16 27 0.059723175 ubox
16 28 0.995465279 ubox
16 29 0.066200108 ubox
16 37 0.031607960 ubox
17 26 0.068878752 ubox
17 27 0.994838387 ubox
17 28 0.066437044 ubox
17 36 0.031590171 ubox
18 26 0.981647619 ubox
18 27 0.066481894 ubox
18 34 0.010583401 ubox
19 25 0.750752310 ubox
19 33 0.011201372 ubox
20 33 0.019882735 ubox
21 31 0.028142804 ubox
21 32 0.014313571 ubox
22 30 0.031454938 ubox
23 29 0.031285919 ubox
24 28 0.030200916 ubox
24 29 0.003363479 ubox
35 49 0.022485945 ubox
36 44 0.008325702 ubox
36 47 0.005901491 ubox
36 48 0.046156394 ubox
36 52 0.003240651 ubox
36 54 0.006443901 ubox
36 59 0.067346670 ubox
37 43 0.008928122 ubox
37 46 0.004975301 ubox
37 47 0.048658654 ubox
37 58 0.062899490 ubox
37 59 0.681044069 ubox
38 44 0.006904876 ubox
38 46 0.044928094 ubox
38 48 0.014615139 ubox
38 58 0.632538607 ubox
39 43 0.007108621 ubox
39 46 0.026566942 ubox
39 47 0.014920147 ubox
39 54 0.047870180 ubox
40 45 0.042378465 ubox
40 50 0.017289782 ubox
40 53 0.047768153 ubox
40 56 0.952784024 ubox
41 49 0.017352912 ubox
41 53 0.006653018 ubox
41 55 0.963238450 ubox
42 48 0.016254882 ubox
42 52 0.017833079 ubox
42 54 0.964510316 ubox
43 50 0.049271880 ubox
43 53 0.948960069 ubox
43 56 0.237926681 ubox
44 49 0.050493793 ubox
44 53 0.169329972 ubox
44 55 0.239406392 ubox
45 52 0.806427750 ubox
45 54 0.239701782 ubox
45 58 0.061471474 ubox
46 51 0.746989087 ubox
46 53 0.231235183 ubox
46 57 0.065115280 ubox
47 56 0.065868006 ubox
48 55 0.063162677 ubox
50 59 0.004694875 ubox
51 58 0.004390775 ubox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
