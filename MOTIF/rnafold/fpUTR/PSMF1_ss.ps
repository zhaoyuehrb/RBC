%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGGCAACCAGGAACUGGUGGCUGCAGCCACCAGCCAAGUUCUUUCCAUCAUCCUGGGCCCUCACCUCUGGCAUAGGCUCUUGGUAGUGGGGGCCCAGACAGGGAGGCACCUGCCACCUGCUUCCCUUCUCAGCCACCCACAGCCCUCAUAGGGCAGAAUGGGACUCUUGCUGAUGUAGACGCCGAAGUCGCGGGCGCUC\
) } def
/len { sequence length } bind def

/coor [
[66.54443359 154.77172852]
[57.28311157 166.57121277]
[48.02178955 178.37069702]
[38.76046753 190.17018127]
[29.49914551 201.96968079]
[20.23782349 213.76916504]
[10.97650242 225.56864929]
[25.43259621 221.56597900]
[39.97871017 225.22802734]
[50.81631470 235.59848022]
[55.11531067 249.96923828]
[51.75306702 264.58755493]
[41.60759354 275.63604736]
[27.32824898 280.22955322]
[12.64389896 277.16854858]
[1.38917315 267.25231934]
[-3.49690127 253.07043457]
[-0.73780018 238.32502747]
[-11.70722580 248.55593872]
[-22.67665291 258.78686523]
[-33.64607620 269.01776123]
[-44.61550522 279.24868774]
[-55.58493042 289.47961426]
[-66.55435944 299.71054077]
[-70.82759094 315.54315186]
[-86.74304199 319.49664307]
[-97.92826843 307.50402832]
[-92.87686157 291.90228271]
[-76.78527069 288.74111938]
[-65.81584930 278.51019287]
[-54.84642410 268.27926636]
[-43.87699509 258.04833984]
[-32.90756989 247.81742859]
[-21.93814468 237.58651733]
[-10.96871853 227.35559082]
[-0.82298607 216.30732727]
[8.43833542 204.50784302]
[17.69965744 192.70835876]
[26.96097946 180.90887451]
[36.22230148 169.10937500]
[45.48362350 157.30989075]
[54.74494553 145.51040649]
[50.09577942 140.35821533]
[46.03006744 134.73417664]
[42.59534454 128.70404053]
[39.83176804 122.33831787]
[37.77164841 115.71142578]
[36.43907166 108.90084076]
[35.84961700 101.98619843]
[36.01017380 95.04832458]
[36.91887283 88.16835022]
[38.56507874 81.42670441]
[40.92955399 74.90220642]
[43.98465347 68.67113495]
[47.69465256 62.80635071]
[52.01618195 57.37641525]
[42.04263687 46.17247009]
[32.06909180 34.96852112]
[22.09555054 23.76457596]
[12.12200642 12.56062794]
[2.14846301 1.35668111]
[-7.82508039 -9.84726620]
[-17.79862404 -21.05121231]
[-27.77216721 -32.25516129]
[-37.74571228 -43.45910645]
[-47.71925354 -54.66305542]
[-57.69279861 -65.86700439]
[-73.23271179 -66.93884277]
[-83.18769836 -78.44331360]
[-82.07009125 -93.25164032]
[-92.04364014 -104.45558929]
[-102.27455902 -115.42501831]
[-112.75733948 -126.15400696]
[-123.24011993 -136.88301086]
[-139.16764832 -140.78758240]
[-143.48951721 -156.60697937]
[-131.75976562 -168.06756592]
[-116.04494476 -163.37965393]
[-112.51112366 -147.36578369]
[-102.02834320 -136.63679504]
[-91.54556274 -125.90779877]
[-88.03678131 -125.50353241]
[-84.55042267 -123.37576294]
[-81.89617920 -119.55402374]
[-80.83969116 -114.42913055]
[-70.86614990 -103.22518921]
[-56.02802658 -102.62034607]
[-45.75383377 -91.40002441]
[-46.48884964 -75.84054565]
[-36.51530838 -64.63659668]
[-26.54176331 -53.43265152]
[-16.56822014 -42.22870255]
[-6.59467697 -31.02475739]
[3.37886643 -19.82081032]
[13.35241032 -8.61686230]
[23.32595444 2.58708453]
[33.29949570 13.79103184]
[43.27304077 24.99497795]
[53.24658585 36.19892502]
[63.22012711 47.40287399]
[81.26213074 38.61507416]
[101.13615417 35.82893372]
[120.89909363 39.31684875]
[127.40734863 25.80231667]
[133.91560364 12.28778362]
[140.42385864 -1.22674930]
[146.93211365 -14.74128246]
[153.44036865 -28.25581551]
[159.94862366 -41.77034760]
[166.45687866 -55.28488159]
[172.96514893 -68.79941559]
[164.80351257 -81.89106750]
[165.03823853 -97.31664276]
[173.59443665 -110.15390015]
[187.74183655 -116.30651855]
[202.96604919 -113.81121063]
[214.40910339 -103.46423340]
[218.41955566 -88.56726074]
[213.71768188 -73.87386322]
[201.80383301 -64.07265472]
[186.47967529 -62.29115677]
[179.97142029 -48.77662659]
[173.46316528 -35.26209259]
[166.95491028 -21.74755859]
[160.44665527 -8.23302650]
[153.93840027 5.28150702]
[147.43014526 18.79603958]
[140.92187500 32.31057358]
[134.41362000 45.82510757]
[149.46258545 59.10171127]
[159.67553711 76.37697601]
[164.05397034 95.96189117]
[179.03196716 96.77397156]
[194.00996399 97.58605957]
[208.98797607 98.39813995]
[223.96597290 99.21022034]
[238.66270447 84.17951965]
[259.37976074 84.85982513]
[272.67654419 100.37656403]
[287.67608643 100.26049805]
[302.67565918 100.14443207]
[317.67520142 100.02835846]
[330.43612671 86.03248596]
[349.05554199 85.80571747]
[361.71182251 99.02558136]
[376.70059204 98.44538879]
[391.68936157 97.86518860]
[406.67813110 97.28498840]
[421.66690063 96.70478821]
[437.26031494 90.05031586]
[447.97140503 103.19219208]
[438.30825806 117.12272644]
[422.24710083 111.69356537]
[407.25833130 112.27376556]
[392.26956177 112.85395813]
[377.28079224 113.43415833]
[362.29202271 114.01435852]
[356.53713989 123.87429047]
[346.63323975 129.79051208]
[334.98382568 130.19239807]
[324.48187256 124.86428833]
[317.79125977 115.02790833]
[302.79171753 115.14398193]
[287.79217529 115.26004791]
[272.79260254 115.37611389]
[268.59228516 123.75073242]
[261.58483887 130.05639648]
[252.70658875 133.39373779]
[243.16476440 133.26387024]
[234.27334595 129.64242554]
[227.27212524 122.98880768]
[223.15388489 114.18822479]
[208.17588806 113.37614441]
[193.19789124 112.56405640]
[178.21987915 111.75197601]
[163.24188232 110.93988800]
[159.23497009 124.70698547]
[152.27166748 137.24096680]
[142.69950867 147.91625977]
[130.99624634 156.20008850]
[136.65597534 170.09135437]
[142.79597473 176.86322021]
[142.29397583 184.24165344]
[147.73805237 198.21885681]
[153.18212891 212.19604492]
[158.62622070 226.17323303]
[173.76681519 229.13398743]
[184.88735962 239.82682800]
[188.43933105 254.83972168]
[183.28932190 269.38211060]
[171.08065796 278.81356812]
[155.70910645 280.12454224]
[142.07965088 272.89669800]
[134.54141235 259.43646240]
[135.49980164 244.03889465]
[144.64901733 231.61732483]
[139.20494080 217.64012146]
[133.76086426 203.66293335]
[128.31677246 189.68574524]
[122.76470184 175.75108337]
[117.10497284 161.85981750]
[99.81187439 164.18084717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 42]
[2 41]
[3 40]
[4 39]
[5 38]
[6 37]
[7 36]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[56 100]
[57 99]
[58 98]
[59 97]
[60 96]
[61 95]
[62 94]
[63 93]
[64 92]
[65 91]
[66 90]
[67 89]
[70 86]
[71 85]
[72 81]
[73 80]
[74 79]
[103 129]
[104 128]
[105 127]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[132 176]
[133 175]
[134 174]
[135 173]
[136 172]
[139 165]
[140 164]
[141 163]
[142 162]
[145 157]
[146 156]
[147 155]
[148 154]
[149 153]
[180 201]
[181 200]
[183 199]
[184 198]
[185 197]
[186 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
