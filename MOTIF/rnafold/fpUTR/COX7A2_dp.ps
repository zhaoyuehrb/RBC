%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COX7A2)
} def

/sequence { (\
AGAGCGGAUAGAGCCGUACUGCCGCUCUAGUUUUUCUUUUGCUCUCUAUGGUUAGGAGCGCAAGCCUCUCUUCGGCCCGGAAAGAUUUAAGUUCGUGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.022163813 ubox
1 28 0.933947668 ubox
1 34 0.004027438 ubox
1 37 0.008550143 ubox
1 45 0.020862667 ubox
1 71 0.008083030 ubox
2 19 0.023736376 ubox
2 27 0.993260202 ubox
2 33 0.005736209 ubox
2 36 0.009947757 ubox
2 38 0.003427417 ubox
2 44 0.024619131 ubox
2 70 0.010640761 ubox
2 94 0.054443036 ubox
3 26 0.993505789 ubox
3 32 0.005944268 ubox
3 35 0.009914994 ubox
3 37 0.003581709 ubox
3 43 0.024638704 ubox
3 69 0.010655917 ubox
3 93 0.054461726 ubox
4 17 0.032028880 ubox
4 22 0.006896974 ubox
4 25 0.993697512 ubox
4 31 0.006070407 ubox
4 34 0.008980920 ubox
4 36 0.003597228 ubox
4 42 0.024649166 ubox
4 68 0.010654201 ubox
4 92 0.054381956 ubox
4 96 0.081327760 ubox
5 16 0.032770052 ubox
5 21 0.006919093 ubox
5 24 0.993691004 ubox
5 30 0.006093775 ubox
5 41 0.024648336 ubox
5 79 0.009018226 ubox
5 91 0.054344310 ubox
5 95 0.085417126 ubox
6 15 0.032827215 ubox
6 20 0.006981673 ubox
6 23 0.993683836 ubox
6 32 0.007646261 ubox
6 33 0.010078809 ubox
6 34 0.003881864 ubox
6 36 0.006074234 ubox
6 37 0.007690361 ubox
6 40 0.023556238 ubox
6 66 0.011371826 ubox
6 78 0.009277461 ubox
6 88 0.004625419 ubox
6 94 0.085533888 ubox
7 14 0.032744240 ubox
7 19 0.007243438 ubox
7 22 0.993433373 ubox
7 31 0.007306321 ubox
7 32 0.012631480 ubox
7 33 0.004545998 ubox
7 35 0.006114339 ubox
7 36 0.008656247 ubox
7 39 0.022800951 ubox
7 65 0.011332342 ubox
7 77 0.009250722 ubox
7 87 0.005636348 ubox
7 88 0.012650992 ubox
7 93 0.084708711 ubox
8 17 0.022374761 ubox
8 31 0.012787838 ubox
8 32 0.004405360 ubox
8 34 0.006093154 ubox
8 35 0.008621700 ubox
8 38 0.022520059 ubox
8 86 0.004922821 ubox
8 87 0.011982562 ubox
8 92 0.083064848 ubox
9 16 0.021913891 ubox
9 18 0.093575245 ubox
9 21 0.972575357 ubox
9 29 0.066770505 ubox
9 30 0.009160929 ubox
9 85 0.003873954 ubox
9 91 0.075415558 ubox
10 17 0.097003884 ubox
10 20 0.977499428 ubox
10 28 0.103427210 ubox
11 19 0.975027083 ubox
11 27 0.106728379 ubox
12 20 0.048561134 ubox
12 26 0.106732484 ubox
13 19 0.056538607 ubox
13 22 0.008884049 ubox
13 25 0.106748185 ubox
14 21 0.011978702 ubox
14 24 0.104745140 ubox
14 80 0.003801427 ubox
15 21 0.015362835 ubox
15 24 0.020243708 ubox
15 79 0.003803440 ubox
16 20 0.009665211 ubox
16 22 0.098150637 ubox
16 23 0.027934787 ubox
16 78 0.003770423 ubox
17 21 0.091903746 ubox
18 96 0.005261598 ubox
19 95 0.005417026 ubox
20 95 0.004633059 ubox
20 97 0.010379321 ubox
21 76 0.004214247 ubox
21 94 0.007911949 ubox
21 96 0.019530558 ubox
22 75 0.004224854 ubox
22 95 0.019856637 ubox
23 74 0.004224678 ubox
23 95 0.008565106 ubox
23 97 0.007419388 ubox
24 73 0.004171273 ubox
24 92 0.030589983 ubox
24 94 0.008277044 ubox
24 96 0.007065430 ubox
25 91 0.031897014 ubox
25 95 0.006990849 ubox
26 90 0.031874918 ubox
27 91 0.014921608 ubox
28 89 0.090100709 ubox
28 90 0.025653100 ubox
28 97 0.006264663 ubox
29 37 0.017053140 ubox
29 67 0.004501524 ubox
29 69 0.007663484 ubox
29 71 0.009655168 ubox
29 87 0.777630624 ubox
29 88 0.099063053 ubox
29 93 0.010803776 ubox
29 96 0.007791038 ubox
30 36 0.018808490 ubox
30 61 0.004252269 ubox
30 65 0.009777194 ubox
30 66 0.005513047 ubox
30 68 0.009117826 ubox
30 70 0.011263204 ubox
30 86 0.962822995 ubox
30 87 0.075373976 ubox
30 92 0.010337379 ubox
31 60 0.003943573 ubox
31 64 0.008735022 ubox
31 82 0.003211293 ubox
31 83 0.007422866 ubox
31 84 0.049528880 ubox
31 85 0.980278118 ubox
31 90 0.012004692 ubox
31 91 0.014953036 ubox
32 63 0.007514463 ubox
32 81 0.003627149 ubox
32 82 0.008239115 ubox
32 83 0.064547037 ubox
32 84 0.982729824 ubox
32 85 0.014156934 ubox
32 89 0.012509501 ubox
32 90 0.018248560 ubox
32 91 0.008110080 ubox
33 62 0.006341801 ubox
33 80 0.003590485 ubox
33 81 0.008201457 ubox
33 82 0.068931441 ubox
33 83 0.983080300 ubox
33 84 0.013298544 ubox
33 89 0.017705335 ubox
33 90 0.010392139 ubox
33 91 0.003644881 ubox
34 80 0.007871538 ubox
34 81 0.071290591 ubox
34 82 0.984163262 ubox
34 83 0.011361119 ubox
34 85 0.004068889 ubox
34 89 0.010583162 ubox
34 90 0.004606362 ubox
35 79 0.006283398 ubox
35 80 0.072878213 ubox
35 81 0.985085882 ubox
35 82 0.008722180 ubox
35 85 0.082101224 ubox
35 98 0.008460879 ubox
36 64 0.076838326 ubox
36 79 0.076131991 ubox
36 80 0.984829904 ubox
36 84 0.087517053 ubox
36 91 0.008880187 ubox
36 97 0.009910758 ubox
37 63 0.136352095 ubox
37 64 0.013746070 ubox
37 79 0.915017241 ubox
37 80 0.006011018 ubox
37 81 0.003845780 ubox
37 82 0.004983533 ubox
37 83 0.087310442 ubox
37 90 0.008873429 ubox
38 62 0.193188052 ubox
38 63 0.188366280 ubox
38 64 0.083280760 ubox
38 79 0.040949415 ubox
38 80 0.004325761 ubox
38 81 0.006482244 ubox
38 82 0.086407797 ubox
38 89 0.008040972 ubox
39 62 0.203215029 ubox
39 63 0.575736369 ubox
39 79 0.009499605 ubox
39 80 0.007235325 ubox
39 81 0.083376897 ubox
39 82 0.003589442 ubox
40 60 0.579655323 ubox
40 62 0.637037584 ubox
40 63 0.016402519 ubox
40 79 0.008259936 ubox
40 80 0.074731362 ubox
40 81 0.003650250 ubox
41 52 0.004155284 ubox
41 59 0.760990636 ubox
41 61 0.647282963 ubox
41 76 0.016253361 ubox
41 78 0.003725431 ubox
42 51 0.004465234 ubox
42 58 0.761664051 ubox
42 60 0.646806988 ubox
42 75 0.016259016 ubox
42 84 0.007473243 ubox
43 50 0.003755375 ubox
43 56 0.004408115 ubox
43 57 0.762252034 ubox
43 74 0.014558418 ubox
43 83 0.007352863 ubox
44 50 0.003733682 ubox
44 55 0.008663728 ubox
44 56 0.758945915 ubox
44 58 0.645053929 ubox
44 74 0.004465264 ubox
45 51 0.004016022 ubox
45 54 0.011157553 ubox
45 55 0.123590287 ubox
45 56 0.115987467 ubox
45 57 0.639232494 ubox
45 81 0.009543083 ubox
46 50 0.007398427 ubox
46 55 0.779142627 ubox
46 56 0.612638538 ubox
46 80 0.010343096 ubox
47 54 0.803296748 ubox
47 55 0.574090048 ubox
47 79 0.010032482 ubox
48 53 0.801203658 ubox
49 74 0.003930116 ubox
50 66 0.006980661 ubox
50 71 0.009022293 ubox
50 73 0.007674895 ubox
50 77 0.015784722 ubox
51 65 0.006985488 ubox
51 70 0.009148082 ubox
51 72 0.007198804 ubox
51 76 0.015879784 ubox
52 64 0.006935380 ubox
52 75 0.015877258 ubox
52 98 0.017967181 ubox
53 63 0.006402690 ubox
53 74 0.014007716 ubox
53 97 0.021622857 ubox
54 67 0.007723435 ubox
54 69 0.007190237 ubox
54 71 0.011542613 ubox
54 72 0.009461172 ubox
54 96 0.022007597 ubox
55 66 0.007797900 ubox
55 67 0.003386564 ubox
55 68 0.007508315 ubox
55 69 0.008605606 ubox
55 70 0.011963701 ubox
55 71 0.009798094 ubox
55 78 0.003822183 ubox
56 65 0.007598721 ubox
56 66 0.004439368 ubox
56 67 0.006730257 ubox
56 68 0.015338644 ubox
56 70 0.009865412 ubox
56 77 0.003840010 ubox
56 94 0.023379413 ubox
57 67 0.015383420 ubox
57 69 0.009808515 ubox
57 93 0.023378578 ubox
58 65 0.016011973 ubox
58 66 0.011081699 ubox
58 68 0.006889517 ubox
58 76 0.003688719 ubox
58 92 0.023373135 ubox
59 64 0.019675692 ubox
59 75 0.003686637 ubox
59 79 0.012893235 ubox
59 91 0.023378583 ubox
59 97 0.005409087 ubox
60 73 0.007878117 ubox
60 76 0.029352500 ubox
60 78 0.110391302 ubox
60 92 0.008624984 ubox
60 96 0.015190449 ubox
61 75 0.029376939 ubox
61 91 0.009406664 ubox
61 95 0.016061781 ubox
61 97 0.006771441 ubox
62 72 0.022113747 ubox
62 87 0.003255593 ubox
62 88 0.019826694 ubox
62 93 0.003436075 ubox
62 96 0.006432442 ubox
63 69 0.005830519 ubox
63 71 0.025290053 ubox
63 72 0.009691536 ubox
63 86 0.003525312 ubox
63 87 0.020514610 ubox
63 88 0.004561061 ubox
63 92 0.003497101 ubox
63 93 0.017208830 ubox
64 68 0.006276064 ubox
64 70 0.025419381 ubox
64 71 0.008237286 ubox
64 76 0.987944866 ubox
64 86 0.017807014 ubox
64 87 0.004735548 ubox
64 92 0.018663970 ubox
65 75 0.991499294 ubox
65 80 0.007434842 ubox
65 91 0.018829159 ubox
66 74 0.990807332 ubox
66 75 0.017807950 ubox
66 79 0.007796537 ubox
66 84 0.015112320 ubox
66 91 0.007503410 ubox
67 74 0.019080900 ubox
67 75 0.012370087 ubox
67 81 0.003687930 ubox
67 83 0.014900649 ubox
67 85 0.082128388 ubox
67 90 0.006563066 ubox
68 74 0.018978230 ubox
68 75 0.011438538 ubox
68 80 0.003966829 ubox
68 84 0.087505009 ubox
69 74 0.010654601 ubox
69 75 0.005319641 ubox
69 81 0.012211669 ubox
69 83 0.085984385 ubox
69 85 0.037653556 ubox
69 98 0.003435599 ubox
70 74 0.007110399 ubox
70 79 0.005629214 ubox
70 80 0.012599129 ubox
70 84 0.040181303 ubox
70 97 0.004176325 ubox
71 79 0.011889015 ubox
71 81 0.074031581 ubox
71 82 0.053168514 ubox
71 83 0.032963498 ubox
72 80 0.075765565 ubox
72 81 0.059665165 ubox
72 82 0.023316102 ubox
72 85 0.003626457 ubox
72 98 0.004356860 ubox
73 79 0.077275368 ubox
73 80 0.063836464 ubox
73 84 0.003786413 ubox
73 95 0.006187964 ubox
73 97 0.005113197 ubox
74 78 0.072512193 ubox
74 94 0.006300150 ubox
74 96 0.004770038 ubox
75 92 0.004637047 ubox
75 93 0.005019883 ubox
76 91 0.005648311 ubox
78 95 0.044501635 ubox
78 97 0.017414125 ubox
79 88 0.006125101 ubox
79 94 0.045374672 ubox
79 96 0.016039996 ubox
80 87 0.006639777 ubox
80 88 0.006751065 ubox
80 93 0.044264432 ubox
80 94 0.023191441 ubox
81 86 0.006069386 ubox
81 87 0.006871880 ubox
81 88 0.004064363 ubox
81 92 0.041632747 ubox
81 93 0.022991616 ubox
82 86 0.005355382 ubox
82 87 0.004447574 ubox
82 88 0.005243442 ubox
82 92 0.020475240 ubox
82 93 0.010281583 ubox
83 87 0.004172496 ubox
83 92 0.011612344 ubox
84 93 0.012382424 ubox
84 94 0.037505354 ubox
85 92 0.014575406 ubox
85 93 0.037169779 ubox
85 96 0.009166564 ubox
86 91 0.014704109 ubox
86 95 0.009637476 ubox
86 98 0.006964391 ubox
87 97 0.012583822 ubox
87 98 0.053041557 ubox
88 97 0.077892327 ubox
89 96 0.074845025 ubox
92 98 0.020586178 ubox
93 97 0.022290271 ubox
1 28 0.9500000 lbox
2 27 0.9500000 lbox
3 26 0.9500000 lbox
4 25 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
29 87 0.9500000 lbox
30 86 0.9500000 lbox
31 85 0.9500000 lbox
32 84 0.9500000 lbox
33 83 0.9500000 lbox
34 82 0.9500000 lbox
35 81 0.9500000 lbox
36 80 0.9500000 lbox
37 79 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
44 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
64 76 0.9500000 lbox
65 75 0.9500000 lbox
66 74 0.9500000 lbox
showpage
end
%%EOF
