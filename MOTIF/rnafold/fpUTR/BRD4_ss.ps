%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUUUGGAAUACUACUGCUAGAAGUCUGACUUAAGACCCAGCUUAUGGGCCACAUGGCACCCAGCUGCUUCUGCAGAGAAGGCAGGCCACUGAUGGGUACAGCAAAGUGUGGUGCUGCUGGCCAAGCCAAAGACCCGUGUAGGAUGACUGGGCCUCUGCCCCUUGUGGGUGUUGCCACUGUGCUUGAGUGCCUGGUGAAGAAUGUGAUGGGAUCACUAGC\
) } def
/len { sequence length } bind def

/coor [
[73.56672668 237.03669739]
[70.83493042 251.78584290]
[68.10312653 266.53500366]
[65.37132263 281.28414917]
[71.35433197 296.55291748]
[60.91262436 309.19818115]
[44.78773117 306.21157837]
[39.56756210 290.66543579]
[50.62218094 278.55233765]
[53.35398102 263.80319214]
[56.08578110 249.05404663]
[58.81758499 234.30490112]
[53.47505188 229.65769958]
[50.03746033 223.38954163]
[48.97058105 216.25189209]
[50.45268250 209.11930847]
[54.34678650 202.88215637]
[60.21189499 198.33557129]
[67.35256958 196.07817078]
[71.11565399 181.55787659]
[74.87874603 167.03756714]
[78.64183044 152.51727295]
[82.40491486 137.99696350]
[78.67589569 136.03663635]
[75.16273499 133.71151733]
[71.90098572 131.04515076]
[60.00604630 140.18356323]
[48.11111069 149.32196045]
[36.21617126 158.46037292]
[34.41126251 174.16125488]
[21.98102379 183.92161560]
[6.30009699 181.95082092]
[-3.32830262 169.41807556]
[-1.19181669 153.75886536]
[11.44201565 144.26350403]
[27.07776642 146.56542969]
[38.97270584 137.42703247]
[50.86764145 128.28862000]
[62.76258087 119.15021515]
[50.21161652 107.46919250]
[42.10290527 89.63281250]
[27.10625458 89.94976807]
[12.10960293 90.26672363]
[-2.88704777 90.58367157]
[-17.88369942 90.90062714]
[-24.93643188 99.16669464]
[-35.16208649 102.13043213]
[-45.12260056 99.04643250]
[-51.60544586 91.16181183]
[-66.60507202 91.05615234]
[-81.60507202 91.05615234]
[-96.60470581 91.16181183]
[-111.60433197 91.26747131]
[-125.46675873 100.02902985]
[-139.85794067 92.16607666]
[-139.97344971 75.76734161]
[-125.69447327 67.70243073]
[-111.70999146 76.26783752]
[-96.71035767 76.16218567]
[-81.71073151 76.05652618]
[-75.05009460 72.86901093]
[-66.49942017 76.05652618]
[-51.49979019 76.16218567]
[-35.42072296 65.41297150]
[-18.20065117 75.90397644]
[-3.20400095 75.58702087]
[11.79265022 75.27007294]
[26.78930092 74.95311737]
[41.78595352 74.63616180]
[45.95661163 60.22763824]
[33.44800186 51.94907379]
[20.93938828 43.67050934]
[8.43077755 35.39194489]
[-4.07783365 27.11337852]
[-20.47053146 26.65349579]
[-28.02952003 12.10036182]
[-18.97875786 -1.57500923]
[-2.62889600 -0.30456671]
[4.20073175 14.60476685]
[16.70934296 22.88333130]
[29.21795464 31.16189766]
[41.72656631 39.44046402]
[54.23517609 47.71902847]
[66.38284302 38.91935349]
[62.41557312 24.45350456]
[58.44830704 9.98765564]
[54.48103714 -4.47819376]
[50.41197586 -18.91573906]
[46.24131393 -33.32426453]
[42.07065582 -47.73278809]
[37.89999390 -62.14131546]
[33.72933578 -76.54984283]
[29.15441513 -90.83515167]
[24.17886353 -104.98590851]
[12.30205631 -115.43827820]
[15.37962055 -130.01145935]
[10.40406990 -144.16221619]
[-2.38769913 -154.42393494]
[0.37041813 -170.58947754]
[15.84110737 -176.02912903]
[28.10944939 -165.14703369]
[24.55482483 -149.13777161]
[29.53037643 -134.98701477]
[41.05130005 -125.54680634]
[38.32962036 -109.96145630]
[43.30517197 -95.81069946]
[45.76175690 -94.47769165]
[47.84075546 -92.09553528]
[49.14148712 -88.80232239]
[49.32028961 -84.87798309]
[48.13785934 -80.72049713]
[52.30852127 -66.31197357]
[56.47917938 -51.90345001]
[60.64984131 -37.49492264]
[64.82050323 -23.08639908]
[69.69532776 -17.54019165]
[68.94689178 -8.44546032]
[72.91415405 6.02038860]
[76.88142395 20.48623657]
[80.84868622 34.95208740]
[95.81149292 36.00780106]
[101.77065277 22.24232292]
[107.72980499 8.47684288]
[113.68896484 -5.28863764]
[114.43276978 -22.22626114]
[130.91436768 -26.20032120]
[139.29568481 -11.46295738]
[127.45444489 0.67052019]
[121.49528503 14.43599987]
[115.53613281 28.20148087]
[109.57697296 41.96696091]
[131.98220825 57.52468491]
[142.92265320 79.60569763]
[141.84242249 101.60240173]
[156.48623657 104.85186005]
[171.15255737 107.99809265]
[185.84068298 111.04093933]
[200.52880859 114.08377838]
[215.21694946 117.12662506]
[229.90507507 120.16947174]
[237.90855408 105.78544617]
[249.95001221 94.58967590]
[264.84393311 87.66866302]
[281.12878418 85.68884277]
[297.21054077 88.83242035]
[311.51861572 96.78062439]
[322.65917969 108.74604797]
[329.55117798 123.55061340]
[331.53097534 139.74154663]
[346.29901123 142.36938477]
[361.06701660 144.99722290]
[375.83505249 147.62506104]
[390.60305786 150.25291443]
[405.37109375 152.88075256]
[420.13909912 155.50859070]
[434.92526245 158.03234863]
[449.72885132 160.45188904]
[464.53240967 162.87142944]
[481.60519409 155.96124268]
[494.74108887 167.60366821]
[509.57727051 169.81442261]
[517.07611084 159.82518005]
[528.04516602 154.00276184]
[540.37670898 153.39656067]
[551.73046875 158.06024170]
[559.97784424 167.05317688]
[563.60089111 178.62947083]
[578.36889648 181.25730896]
[593.13690186 183.88514709]
[607.90490723 186.51298523]
[620.72015381 177.26390076]
[636.30841064 179.86799622]
[645.42150879 192.78028870]
[642.65277100 208.34014893]
[629.64483643 217.31620789]
[614.11511230 214.38310242]
[605.27709961 201.28100586]
[590.50909424 198.65316772]
[575.74102783 196.02532959]
[560.97302246 193.39749146]
[548.82574463 206.22549438]
[531.25384521 209.21348572]
[515.26947021 200.97737122]
[507.36651611 184.65060425]
[492.53033447 182.43984985]
[482.63153076 189.38305664]
[470.25799561 187.66860962]
[462.11288452 177.67500305]
[447.30929565 175.25546265]
[432.50573730 172.83592224]
[425.40374756 174.85734558]
[417.51126099 170.27661133]
[402.74325562 167.64877319]
[387.97521973 165.02093506]
[373.20721436 162.39308167]
[358.43917847 159.76524353]
[343.67117310 157.13740540]
[328.90313721 154.50956726]
[323.00085449 166.79254150]
[314.10974121 177.13682556]
[302.83181763 184.83181763]
[289.93344116 189.34667969]
[276.29302979 190.36689758]
[262.84149170 187.81623840]
[250.49844360 181.86236572]
[240.10952759 172.90583801]
[232.38838196 161.55317688]
[227.86764526 148.57579041]
[226.86222839 134.85758972]
[212.17410278 131.81475830]
[197.48597717 128.77191162]
[182.79783630 125.72906494]
[168.10971069 122.68621826]
[160.92866516 124.40576935]
[153.23677063 119.49566650]
[138.59297180 116.24620819]
[121.86605835 135.71038818]
[96.92521667 141.76005554]
[93.16213226 156.28034973]
[89.39904785 170.80065918]
[85.63595581 185.32095337]
[81.87287140 199.84126282]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[19 222]
[20 221]
[21 220]
[22 219]
[23 218]
[26 39]
[27 38]
[28 37]
[29 36]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[49 63]
[50 62]
[51 60]
[52 59]
[53 58]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[84 120]
[85 119]
[86 118]
[87 117]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 106]
[94 105]
[96 103]
[97 102]
[121 131]
[122 130]
[123 129]
[124 128]
[134 216]
[135 215]
[136 213]
[137 212]
[138 211]
[139 210]
[140 209]
[149 198]
[150 197]
[151 196]
[152 195]
[153 194]
[154 193]
[155 192]
[156 190]
[157 189]
[158 188]
[160 185]
[161 184]
[167 180]
[168 179]
[169 178]
[170 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
