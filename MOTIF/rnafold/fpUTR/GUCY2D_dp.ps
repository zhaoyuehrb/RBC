%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GUCY2D)
} def

/sequence { (\
CAAAAGGGGGACCGGCCCUGUGACCCCUCACCGGGGGCCGUGGGCCCGAGCCCCCGGACUUCCCUAAGCCGGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 61 0.017211918 ubox
3 60 0.018176614 ubox
3 61 0.006767873 ubox
4 60 0.005323339 ubox
4 61 0.007779453 ubox
5 28 0.011485037 ubox
5 60 0.008502623 ubox
5 65 0.008842353 ubox
6 13 0.011539631 ubox
6 27 0.012159953 ubox
6 28 0.005461391 ubox
6 29 0.008601493 ubox
6 47 0.010036266 ubox
6 52 0.005467903 ubox
6 53 0.047680701 ubox
6 54 0.153293024 ubox
6 55 0.925507453 ubox
6 59 0.004352632 ubox
6 64 0.008410115 ubox
6 65 0.008115464 ubox
7 12 0.011807628 ubox
7 26 0.012160184 ubox
7 27 0.006112888 ubox
7 28 0.008430404 ubox
7 46 0.010042338 ubox
7 47 0.008953034 ubox
7 51 0.005472331 ubox
7 52 0.047641737 ubox
7 53 0.172166198 ubox
7 54 0.971086116 ubox
7 55 0.011351764 ubox
7 63 0.008247336 ubox
7 64 0.008416121 ubox
7 65 0.005424428 ubox
8 25 0.012155708 ubox
8 26 0.006124904 ubox
8 27 0.008455022 ubox
8 45 0.010032342 ubox
8 46 0.008966179 ubox
8 47 0.010363943 ubox
8 51 0.047333811 ubox
8 52 0.171625802 ubox
8 53 0.983175607 ubox
8 54 0.011210106 ubox
8 62 0.008177305 ubox
8 63 0.008423049 ubox
8 64 0.005790987 ubox
9 24 0.012142993 ubox
9 25 0.006134592 ubox
9 26 0.008461413 ubox
9 45 0.008963037 ubox
9 46 0.011022786 ubox
9 47 0.003510763 ubox
9 51 0.170933856 ubox
9 52 0.983355009 ubox
9 53 0.010728457 ubox
9 60 0.004200219 ubox
9 61 0.006923360 ubox
9 62 0.008426049 ubox
9 63 0.005797598 ubox
10 24 0.006129785 ubox
10 25 0.008452015 ubox
10 45 0.010950479 ubox
10 46 0.003409240 ubox
10 51 0.983390194 ubox
10 52 0.010089412 ubox
10 59 0.005544100 ubox
10 60 0.005048137 ubox
10 61 0.008204896 ubox
10 62 0.005800780 ubox
11 21 0.005120022 ubox
11 41 0.005215566 ubox
11 60 0.007476192 ubox
11 61 0.005447815 ubox
12 20 0.005180916 ubox
12 40 0.003793840 ubox
12 43 0.008251576 ubox
12 44 0.006020671 ubox
12 57 0.009201337 ubox
12 72 0.008588528 ubox
13 20 0.007516992 ubox
13 22 0.009777845 ubox
13 40 0.022261454 ubox
13 42 0.007472884 ubox
13 43 0.005416089 ubox
13 48 0.940222633 ubox
13 56 0.009143262 ubox
13 71 0.008627844 ubox
14 19 0.005840740 ubox
14 21 0.009043507 ubox
14 39 0.028060181 ubox
14 46 0.616662297 ubox
14 47 0.786059188 ubox
14 55 0.004889351 ubox
14 70 0.008638942 ubox
15 21 0.004474439 ubox
15 38 0.028154677 ubox
15 45 0.805401643 ubox
15 46 0.591488446 ubox
15 54 0.004526269 ubox
15 69 0.008638408 ubox
16 20 0.004644821 ubox
16 35 0.006067821 ubox
16 36 0.006420689 ubox
16 37 0.027965419 ubox
16 43 0.003847480 ubox
16 44 0.956978590 ubox
16 68 0.008567512 ubox
17 34 0.007208734 ubox
17 35 0.007379989 ubox
17 36 0.027754889 ubox
17 42 0.004353737 ubox
17 43 0.956640763 ubox
17 44 0.287541641 ubox
18 33 0.007286241 ubox
18 34 0.008139865 ubox
18 35 0.027538273 ubox
18 42 0.955799197 ubox
18 43 0.289083931 ubox
19 33 0.008739553 ubox
19 34 0.025327963 ubox
19 40 0.314838730 ubox
19 42 0.288265121 ubox
20 31 0.029540985 ubox
20 32 0.006685926 ubox
20 38 0.077453691 ubox
20 39 0.332976164 ubox
20 41 0.317099506 ubox
21 30 0.030578847 ubox
21 37 0.073255665 ubox
21 40 0.767656279 ubox
22 29 0.030645150 ubox
22 39 0.797605516 ubox
22 41 0.008727841 ubox
23 28 0.027608131 ubox
23 41 0.011347514 ubox
24 35 0.031186512 ubox
24 36 0.508861602 ubox
24 37 0.856183107 ubox
24 40 0.010800303 ubox
25 34 0.031209873 ubox
25 35 0.509323016 ubox
25 36 0.857042198 ubox
25 37 0.060487691 ubox
26 33 0.031166855 ubox
26 34 0.509598423 ubox
26 35 0.856828071 ubox
26 36 0.061316798 ubox
26 37 0.008955007 ubox
27 33 0.509492560 ubox
27 34 0.856324486 ubox
27 35 0.062020249 ubox
27 36 0.008980118 ubox
28 33 0.776982017 ubox
28 34 0.062261413 ubox
28 35 0.008985489 ubox
29 33 0.118608887 ubox
29 34 0.010944361 ubox
31 57 0.015764529 ubox
31 72 0.005268790 ubox
32 56 0.016108680 ubox
32 71 0.005300947 ubox
33 55 0.016229985 ubox
33 63 0.004519409 ubox
33 64 0.004141680 ubox
33 70 0.005220276 ubox
34 54 0.016233686 ubox
34 62 0.004554952 ubox
34 63 0.004150074 ubox
34 69 0.005003811 ubox
35 53 0.016258762 ubox
35 61 0.004655786 ubox
35 62 0.004150922 ubox
35 64 0.005526105 ubox
36 46 0.005555614 ubox
36 52 0.016278461 ubox
36 60 0.005530827 ubox
36 61 0.003176562 ubox
36 63 0.005540712 ubox
37 45 0.007300261 ubox
37 51 0.016278840 ubox
37 59 0.006343879 ubox
37 62 0.005524810 ubox
38 44 0.007309952 ubox
38 50 0.016276848 ubox
38 57 0.009690294 ubox
39 43 0.007256999 ubox
39 48 0.016167014 ubox
39 56 0.009718186 ubox
40 47 0.015867519 ubox
40 55 0.011357779 ubox
42 53 0.023953175 ubox
43 52 0.024039088 ubox
44 51 0.024055182 ubox
45 50 0.023990469 ubox
50 73 0.005931141 ubox
51 72 0.005512136 ubox
52 71 0.004969131 ubox
54 72 0.179490635 ubox
55 71 0.374206956 ubox
56 62 0.023859497 ubox
56 63 0.204757876 ubox
56 64 0.236812379 ubox
56 65 0.046773664 ubox
56 70 0.915050299 ubox
57 61 0.015636280 ubox
57 62 0.205236564 ubox
57 63 0.236486272 ubox
57 64 0.048969731 ubox
57 69 0.915719674 ubox
59 68 0.909992940 ubox
59 72 0.012503542 ubox
60 67 0.895628044 ubox
60 68 0.012808302 ubox
60 71 0.011872420 ubox
61 66 0.745685246 ubox
61 67 0.023091118 ubox
61 72 0.017706318 ubox
62 71 0.023251719 ubox
62 72 0.065257875 ubox
63 71 0.065687728 ubox
63 72 0.159967497 ubox
64 71 0.163466176 ubox
64 72 0.032201409 ubox
65 71 0.031924313 ubox
6 55 0.9500000 lbox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
15 46 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
56 70 0.9500000 lbox
57 69 0.9500000 lbox
59 68 0.9500000 lbox
60 67 0.9500000 lbox
61 66 0.9500000 lbox
showpage
end
%%EOF
