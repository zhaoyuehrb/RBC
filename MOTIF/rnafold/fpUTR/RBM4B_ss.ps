%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCCCGCGAGGGGAAGGGGAGGGAAGCAGCGCGCACUCGCGCGUGCGUGAGCUGGCGCGCGAGAAAGGGCCCGGUCGCGUCCAGGCUCGAGCGGCCGUCGCCAUUUUGUAAGGUUCUCUCUGACGUGGGAGCCGCCGUCGCUGCCGCCACCCGGAGGCUCUUGUCAGG\
) } def
/len { sequence length } bind def

/coor [
[378.48864746 404.84924316]
[369.49447632 392.84487915]
[360.50030518 380.84051514]
[351.50613403 368.83615112]
[342.51196289 356.83178711]
[333.51776123 344.82742310]
[324.52359009 332.82305908]
[315.52941895 320.81869507]
[306.53524780 308.81433105]
[297.54104614 296.80993652]
[281.06671143 290.81039429]
[278.97964478 272.53259277]
[269.76644897 260.69549561]
[260.55325317 248.85838318]
[251.34005737 237.02127075]
[242.12687683 225.18417358]
[233.04530334 221.80410767]
[228.80578613 211.74014282]
[217.05380249 202.41860962]
[202.27420044 200.57133484]
[196.27047729 185.93350220]
[184.51849365 176.61196899]
[169.73889160 174.76469421]
[163.73516846 160.12687683]
[151.98320007 150.80534363]
[137.26217651 152.76165771]
[125.21120453 143.47570801]
[123.25905609 128.02168274]
[111.50708008 118.70014191]
[87.99626160 125.85540771]
[65.33789062 105.23383331]
[50.48005676 103.17353058]
[35.62222672 101.11322784]
[20.76439667 99.05292511]
[5.90656471 96.99262238]
[-8.95126629 94.93231964]
[-27.22787285 103.37761688]
[-42.00061417 90.93578339]
[-56.92410278 89.42268372]
[-71.84759521 87.90958405]
[-86.77108002 86.39647675]
[-101.69457245 84.88337708]
[-116.61805725 83.37026978]
[-131.34477234 90.58524323]
[-144.80372620 81.21566772]
[-143.14949036 64.90016937]
[-128.08380127 58.42272949]
[-115.10495758 68.44678497]
[-100.18146515 69.95988464]
[-85.25798035 71.47299194]
[-70.33448792 72.98609161]
[-55.41100311 74.49919891]
[-40.48751450 76.01229858]
[-33.14550781 68.83876038]
[-22.84732819 66.86947632]
[-12.97039700 70.99739075]
[-6.89096308 80.07448578]
[7.96686840 82.13478851]
[22.82469940 84.19509888]
[37.68252945 86.25540161]
[52.54036331 88.31570435]
[67.39819336 90.37600708]
[72.47780609 84.85807800]
[57.84083939 81.57794952]
[53.36294174 67.26193237]
[63.52196121 56.22588348]
[78.15898895 59.50574112]
[82.63703156 73.82221985]
[87.71663666 68.30429077]
[84.43642426 53.66734314]
[81.15620422 39.03039551]
[77.87599182 24.39345169]
[74.59577179 9.75650501]
[64.02790833 -2.01765180]
[68.79472351 -16.12887955]
[65.51451111 -30.76582527]
[52.03334045 -39.01407623]
[48.41438675 -54.39844131]
[56.80470657 -67.79164886]
[72.22647858 -71.24774933]
[85.53022766 -62.71629715]
[88.82308197 -47.25885010]
[80.15145111 -34.04603958]
[83.43167114 -19.40909576]
[93.76491547 -8.68187046]
[89.23271942 6.47628880]
[92.51293945 21.11323547]
[95.79315186 35.75017929]
[99.07337189 50.38712692]
[102.35358429 65.02407074]
[119.19469452 76.05467224]
[125.24966431 92.55997467]
[120.82861328 106.94816589]
[132.58059692 116.26969910]
[148.07327271 114.65271759]
[159.85865784 124.27349091]
[161.30473328 139.05335999]
[173.05670166 148.37489319]
[188.67689514 150.88891602]
[193.84004211 164.86000061]
[205.59201050 174.18153381]
[221.21220398 176.69554138]
[226.37533569 190.66662598]
[238.12731934 199.98817444]
[233.65274048 185.67111206]
[234.81570435 170.71626282]
[241.44984436 157.26307678]
[252.60607910 147.23619080]
[266.68835449 142.07005310]
[281.68209839 142.50373840]
[295.44223022 148.47521973]
[306.00024414 159.13018799]
[311.84570312 172.94433594]
[312.14230347 187.94140625]
[306.84765625 201.97589111]
[296.71920776 213.03999329]
[283.20593262 219.55088806]
[268.24108887 220.57710266]
[253.96397400 215.97097778]
[263.17718506 227.80809021]
[272.39035034 239.64518738]
[281.60354614 251.48229980]
[290.81674194 263.31939697]
[303.51937866 265.69592285]
[310.94708252 275.77670288]
[309.54541016 287.81576538]
[318.53961182 299.82012939]
[327.53378296 311.82449341]
[336.52795410 323.82885742]
[345.52212524 335.83322144]
[354.51632690 347.83758545]
[363.51049805 359.84194946]
[372.50466919 371.84631348]
[381.49884033 383.85067749]
[390.49301147 395.85504150]
[402.24499512 405.17657471]
[415.98159790 411.20202637]
[432.21282959 408.86114502]
[442.14166260 421.91296387]
[435.55419922 436.93087769]
[419.22705078 438.46572876]
[409.95617676 424.93862915]
[396.21957397 418.91317749]
[391.66754150 424.87380981]
[378.01144409 442.75567627]
[387.44052124 454.42150879]
[396.86962891 466.08737183]
[411.56198120 471.95639038]
[413.54495239 486.71838379]
[422.97402954 498.38424683]
[438.46459961 503.76705933]
[441.28204346 519.92236328]
[428.52804565 530.23095703]
[413.32281494 524.08825684]
[411.30816650 507.81335449]
[401.87908936 496.14749146]
[387.86114502 491.11291504]
[385.20376587 475.51647949]
[375.77465820 463.85061646]
[366.34558105 452.18475342]
[352.55096436 458.07617188]
[337.55099487 458.06100464]
[323.76831055 452.14166260]
[313.42910767 441.27426147]
[308.20327759 427.21401978]
[308.93487549 412.23187256]
[315.50570679 398.74765015]
[326.85455322 388.93930054]
[341.14834595 384.39096069]
[356.07846069 385.83731079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 135]
[2 134]
[3 133]
[4 132]
[5 131]
[6 130]
[7 129]
[8 128]
[9 127]
[10 126]
[12 123]
[13 122]
[14 121]
[15 120]
[16 119]
[18 104]
[19 103]
[21 101]
[22 100]
[24 98]
[25 97]
[28 94]
[29 93]
[31 62]
[32 61]
[33 60]
[34 59]
[35 58]
[36 57]
[38 53]
[39 52]
[40 51]
[41 50]
[42 49]
[43 48]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[136 143]
[137 142]
[145 160]
[146 159]
[147 158]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
