%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGGCUCAGACGGUCGCCGCCGCGUUUGCGCAGGGGGAGCUGGUCGCCGCCGCGGCCGCCUGGAAUUGUGGGAGUUGUGUCUGCCACUCGGCUGCCGGAGGCCGAAGGCCAGCUAUUACUUCUCUACUGAGGCCAACUGUGAGCCCUGGUGUGUUUCAUUGGCAGGAGAAGAGGCUAAUUAAGUGAAACUGAAAGGUCCCUGACU\
) } def
/len { sequence length } bind def

/coor [
[253.14285278 245.77372742]
[242.02619934 235.70297241]
[230.90954590 225.63223267]
[219.64134216 215.73135376]
[208.22416687 206.00260925]
[196.80699158 196.27388000]
[185.38981628 186.54515076]
[173.97265625 176.81642151]
[169.22219849 176.29730225]
[164.74830627 172.78643799]
[162.36242676 166.61502075]
[151.24577332 156.54428101]
[140.12911987 146.47352600]
[129.01245117 136.40278625]
[117.89580536 126.33203125]
[101.42465210 133.47560120]
[82.77191925 130.66618347]
[67.74857330 117.81038666]
[56.48036575 127.71126556]
[51.22055435 142.63255310]
[36.55257797 145.22093201]
[25.28436661 155.12181091]
[14.09161091 165.10791016]
[2.97495508 175.17866516]
[-8.14169979 185.24942017]
[-12.64410973 201.01838684]
[-28.61523247 204.74064636]
[-39.62534332 192.58708191]
[-34.34818649 177.06021118]
[-18.21244812 174.13275146]
[-7.09579325 164.06201172]
[4.02086210 153.99125671]
[6.86836290 147.16860962]
[15.38348579 143.85360718]
[26.65169716 133.95272827]
[31.10552979 119.73960876]
[46.57948685 116.44305420]
[57.84769440 106.54217529]
[58.18914413 91.54605865]
[47.38324356 81.14257050]
[36.57734680 70.73908234]
[25.77144814 60.33559799]
[14.96554947 49.93210983]
[4.15965080 39.52862167]
[-6.64624786 29.12513542]
[-17.45214653 18.72164726]
[-28.56880188 8.65089893]
[-39.98597336 -1.07783282]
[-51.40314484 -10.80656433]
[-66.92534637 -13.86790371]
[-71.59436798 -28.01178932]
[-83.01153564 -37.74052048]
[-94.42871094 -47.46925354]
[-105.91937256 -57.11106491]
[-117.48287201 -66.66540527]
[-129.04637146 -76.21974945]
[-140.60987854 -85.77409363]
[-152.17338562 -95.32843018]
[-163.73687744 -104.88277435]
[-161.77392578 -90.01176453]
[-167.80729675 -76.27864838]
[-180.08767700 -67.66515350]
[-195.05453491 -66.66865540]
[-208.36843872 -73.57807159]
[-216.16918945 -86.39010620]
[-216.19506836 -101.39008331]
[-208.43856812 -114.22895813]
[-195.14859009 -121.18426514]
[-180.18069458 -120.24021912]
[-190.50187683 -131.12475586]
[-200.82307434 -142.00929260]
[-211.14425659 -152.89381409]
[-226.25433350 -157.58383179]
[-229.39724731 -172.14306641]
[-239.71842957 -183.02760315]
[-255.52182007 -183.19671631]
[-266.51705933 -194.54925537]
[-266.18087769 -210.34996033]
[-254.71272278 -221.22456360]
[-238.91645813 -220.72135925]
[-228.16371155 -209.13887024]
[-228.83389282 -193.34880066]
[-218.51271057 -182.46426392]
[-204.14088440 -178.55278015]
[-200.25971985 -163.21501160]
[-189.93853760 -152.33047485]
[-179.61734009 -141.44593811]
[-169.29615784 -130.56141663]
[-158.88400269 -127.63986969]
[-154.18254089 -116.44627380]
[-142.61903381 -106.89193726]
[-131.05554199 -97.33759308]
[-119.49203491 -87.78324890]
[-107.92853546 -78.22891235]
[-96.36503601 -68.67456818]
[-89.20404816 -66.83689117]
[-84.69997406 -58.88642120]
[-73.28280640 -49.15769196]
[-61.86563492 -39.42895889]
[-47.16006470 -37.06348419]
[-41.67441177 -22.22373581]
[-30.25724030 -12.49500370]
[-18.84007072 -2.76627207]
[-16.03530502 -2.85655642]
[-13.02576160 -1.83950949]
[-10.23367405 0.36845201]
[-8.10370636 3.69642973]
[-7.04865837 7.91574860]
[3.75724006 18.31923676]
[14.56313896 28.72272301]
[25.36903763 39.12621307]
[36.17493439 49.52969742]
[46.98083496 59.93318558]
[57.78673172 70.33667755]
[68.59262848 80.74016571]
[76.24563599 73.16082764]
[85.53005219 68.30644226]
[95.54321289 66.45521545]
[105.36529541 67.60266113]
[114.14357758 71.47641754]
[123.78539276 59.98574829]
[133.42720032 48.49507904]
[143.06901550 37.00441360]
[141.44207764 21.28409004]
[151.47230530 9.07057285]
[167.20895386 7.60992861]
[179.31575012 17.76873016]
[180.60992432 33.51993942]
[170.32369995 45.51864624]
[154.55969238 46.64622879]
[144.91787720 58.13689423]
[135.27606201 69.62756348]
[125.63423920 81.11822510]
[129.89015198 89.03577423]
[131.76342773 97.82732391]
[131.10472107 106.79206085]
[127.96655273 115.21537781]
[139.08320618 125.28612518]
[150.19985962 135.35687256]
[161.31651306 145.42762756]
[172.43316650 155.49836731]
[183.70138550 165.39924622]
[195.11856079 175.12797546]
[206.53572083 184.85671997]
[217.95289612 194.58544922]
[229.37007141 204.31417847]
[235.79711914 205.88630676]
[239.85437012 209.87136841]
[240.98030090 214.51557922]
[252.09695435 224.58631897]
[263.21359253 234.65707397]
[279.22961426 228.12406921]
[298.25277710 234.89166260]
[309.50436401 255.07005310]
[322.60708618 262.37203979]
[335.70977783 269.67404175]
[348.81250000 276.97601318]
[361.91519165 284.27801514]
[375.01791382 291.58001709]
[388.12060547 298.88198853]
[401.49087524 305.68170166]
[415.10943604 311.96936035]
[428.72802734 318.25701904]
[442.34658813 324.54464722]
[454.84790039 315.62207031]
[470.13717651 314.16149902]
[484.10171509 320.55584717]
[492.98507690 333.08505249]
[494.39770508 348.37884521]
[487.95962524 362.32324219]
[475.40261841 371.16729736]
[460.10449219 372.53201294]
[446.18032837 366.05023193]
[437.37567139 353.46557617]
[436.05892944 338.16323853]
[422.44036865 331.87557983]
[408.82180786 325.58792114]
[395.20321655 319.30029297]
[397.84060669 334.06661987]
[388.05789185 345.43756104]
[373.06329346 345.03469849]
[363.90527344 333.15484619]
[367.33172607 318.55145264]
[380.81863403 311.98471069]
[367.71591187 304.68270874]
[354.61322021 297.38073730]
[341.51049805 290.07873535]
[328.40780640 282.77673340]
[315.30508423 275.47476196]
[302.20239258 268.17276001]
[296.10809326 272.54421997]
[308.18951416 281.43466187]
[303.46737671 295.67199707]
[288.46765137 295.58038330]
[283.91955566 281.28717041]
[277.82525635 285.65866089]
[280.54202271 300.41058350]
[283.25875854 315.16250610]
[285.97549438 329.91442871]
[294.79055786 344.39651489]
[283.31469727 356.87612915]
[268.14596558 349.30343628]
[271.22357178 332.63116455]
[268.50683594 317.87924194]
[265.79010010 303.12731934]
[263.07333374 288.37539673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[11 141]
[12 140]
[13 139]
[14 138]
[15 137]
[18 38]
[19 37]
[21 35]
[22 34]
[23 32]
[24 31]
[25 30]
[39 115]
[40 114]
[41 113]
[42 112]
[43 111]
[44 110]
[45 109]
[46 108]
[47 103]
[48 102]
[49 101]
[51 99]
[52 98]
[53 97]
[54 95]
[55 94]
[56 93]
[57 92]
[58 91]
[59 90]
[69 88]
[70 87]
[71 86]
[72 85]
[74 83]
[75 82]
[120 133]
[121 132]
[122 131]
[123 130]
[154 190]
[155 189]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 178]
[162 177]
[163 176]
[164 175]
[196 206]
[197 205]
[198 204]
[199 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
