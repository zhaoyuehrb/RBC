%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPS9)
} def

/sequence { (\
AUUAGCGCCUGCGCCGUCUCUAGGCCCCGCCCCCUCACCCCUCCGGUCCUGGAGCUCCCACAGCUAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.012335485 ubox
2 16 0.013269712 ubox
2 52 0.003520342 ubox
2 67 0.781303022 ubox
3 11 0.011901426 ubox
3 51 0.005424368 ubox
3 66 0.938310940 ubox
4 10 0.013549182 ubox
4 19 0.007872233 ubox
4 50 0.005659029 ubox
4 56 0.014268680 ubox
4 65 0.950944940 ubox
5 9 0.013424200 ubox
5 12 0.112948826 ubox
5 14 0.208713748 ubox
5 17 0.036242953 ubox
5 18 0.008766244 ubox
5 30 0.040756076 ubox
5 49 0.005669467 ubox
5 55 0.015338290 ubox
5 64 0.952045048 ubox
6 11 0.112934853 ubox
6 13 0.209308453 ubox
6 16 0.038653508 ubox
6 29 0.040853258 ubox
6 54 0.015207757 ubox
6 63 0.942220534 ubox
7 12 0.206149852 ubox
7 14 0.298452428 ubox
7 15 0.037825005 ubox
7 17 0.025381576 ubox
7 25 0.146006823 ubox
7 28 0.037535550 ubox
7 30 0.062001073 ubox
7 47 0.006160631 ubox
7 55 0.010324635 ubox
7 64 0.143383164 ubox
8 13 0.299793020 ubox
8 16 0.026442164 ubox
8 24 0.146479473 ubox
8 29 0.062034880 ubox
8 46 0.006266478 ubox
8 52 0.014096852 ubox
8 54 0.009581574 ubox
8 63 0.108581766 ubox
9 23 0.146478850 ubox
9 45 0.006250053 ubox
9 51 0.014112762 ubox
9 52 0.003345258 ubox
9 63 0.178543899 ubox
10 16 0.008649986 ubox
10 22 0.145637205 ubox
10 29 0.008386959 ubox
10 51 0.003231023 ubox
10 60 0.646792888 ubox
10 62 0.324924540 ubox
10 66 0.015553051 ubox
11 15 0.015307566 ubox
11 17 0.026131864 ubox
11 21 0.133477314 ubox
11 25 0.006566903 ubox
11 28 0.021209183 ubox
11 30 0.068328939 ubox
11 55 0.051756479 ubox
11 59 0.668205576 ubox
11 61 0.326667181 ubox
11 64 0.030146239 ubox
11 65 0.015811991 ubox
12 16 0.028215549 ubox
12 24 0.006515576 ubox
12 29 0.068617276 ubox
12 54 0.047317975 ubox
12 63 0.030212047 ubox
13 25 0.128802937 ubox
13 28 0.060317287 ubox
13 30 0.006282283 ubox
13 47 0.013192910 ubox
13 55 0.172948234 ubox
13 64 0.111692948 ubox
14 24 0.129829632 ubox
14 29 0.006283278 ubox
14 46 0.013426057 ubox
14 52 0.017317743 ubox
14 54 0.153682984 ubox
14 63 0.111795865 ubox
15 23 0.129824195 ubox
15 45 0.013427064 ubox
15 51 0.017300611 ubox
16 25 0.060187297 ubox
16 38 0.010278913 ubox
16 44 0.013153874 ubox
16 50 0.012393391 ubox
16 55 0.762392929 ubox
16 61 0.130965197 ubox
16 64 0.025906131 ubox
16 68 0.006963103 ubox
17 24 0.060059902 ubox
17 37 0.010122376 ubox
17 53 0.013816355 ubox
17 54 0.109424495 ubox
17 60 0.130541422 ubox
17 63 0.025760021 ubox
17 67 0.006890760 ubox
18 23 0.059122533 ubox
18 24 0.003953163 ubox
18 46 0.003616810 ubox
18 52 0.013720691 ubox
18 54 0.953646377 ubox
19 23 0.003591110 ubox
19 45 0.003553998 ubox
19 51 0.009835500 ubox
19 52 0.004823628 ubox
19 53 0.975505043 ubox
20 46 0.003756863 ubox
20 51 0.008979924 ubox
20 52 0.977957561 ubox
21 45 0.003577747 ubox
21 51 0.977525374 ubox
22 35 0.010777895 ubox
22 42 0.005563286 ubox
22 50 0.977582109 ubox
23 31 0.032495935 ubox
23 32 0.003845286 ubox
23 34 0.011351681 ubox
23 41 0.005708387 ubox
23 48 0.055774702 ubox
23 49 0.976452508 ubox
23 50 0.003228237 ubox
23 56 0.005014003 ubox
23 59 0.004320294 ubox
24 30 0.033587246 ubox
24 31 0.003713305 ubox
24 33 0.011343456 ubox
24 40 0.005663402 ubox
24 47 0.078122482 ubox
24 48 0.973931973 ubox
24 49 0.006719298 ubox
24 55 0.005440619 ubox
24 58 0.004314970 ubox
25 29 0.033582721 ubox
25 46 0.493458696 ubox
25 54 0.005459434 ubox
26 45 0.491622904 ubox
26 46 0.480256786 ubox
26 52 0.009439159 ubox
27 45 0.463802245 ubox
27 46 0.637123097 ubox
27 51 0.009436201 ubox
27 52 0.011748678 ubox
28 45 0.650616741 ubox
28 51 0.011781502 ubox
29 44 0.644134191 ubox
29 47 0.234522598 ubox
29 50 0.009791192 ubox
29 55 0.158068176 ubox
29 64 0.007232306 ubox
30 46 0.235467961 ubox
30 52 0.005505800 ubox
30 54 0.158150564 ubox
30 63 0.007231135 ubox
31 45 0.234766419 ubox
31 46 0.019910057 ubox
31 51 0.005547306 ubox
31 52 0.071442683 ubox
32 45 0.023152761 ubox
32 46 0.015676321 ubox
32 51 0.071129686 ubox
32 52 0.145611726 ubox
33 45 0.015914782 ubox
33 46 0.021989820 ubox
33 51 0.145511851 ubox
33 52 0.043310169 ubox
34 45 0.022235310 ubox
34 46 0.003893115 ubox
34 51 0.043775427 ubox
34 52 0.008545242 ubox
34 54 0.009888782 ubox
35 46 0.006606506 ubox
35 51 0.008174196 ubox
35 52 0.004305499 ubox
35 53 0.010091522 ubox
35 62 0.003455612 ubox
36 45 0.009366766 ubox
36 51 0.005861399 ubox
36 52 0.010036758 ubox
37 47 0.211345746 ubox
37 50 0.005595048 ubox
38 46 0.215662221 ubox
39 45 0.215163193 ubox
39 46 0.039229678 ubox
40 45 0.040692732 ubox
40 46 0.013761881 ubox
40 52 0.005042791 ubox
41 45 0.013789165 ubox
41 51 0.005062463 ubox
41 54 0.108896888 ubox
42 53 0.110843524 ubox
43 52 0.111378667 ubox
44 51 0.111338289 ubox
45 50 0.084827038 ubox
45 65 0.005447378 ubox
46 64 0.005734899 ubox
47 63 0.005687907 ubox
50 60 0.032482794 ubox
50 62 0.004406021 ubox
51 58 0.010749469 ubox
51 59 0.036541022 ubox
51 61 0.004575569 ubox
52 57 0.010913814 ubox
52 58 0.036456266 ubox
53 65 0.076355404 ubox
54 64 0.091357208 ubox
55 63 0.093153386 ubox
56 62 0.090247212 ubox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
10 60 0.9500000 lbox
11 59 0.9500000 lbox
18 54 0.9500000 lbox
19 53 0.9500000 lbox
20 52 0.9500000 lbox
21 51 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
showpage
end
%%EOF
