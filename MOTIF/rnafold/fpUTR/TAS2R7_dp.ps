%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TAS2R7)
} def

/sequence { (\
GCAGGUGUGGAUGUCAAACUCCAUCAGGUCAACUAGAAACUAAUUGCAUAUUUAAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.028461130 ubox
1 14 0.008760965 ubox
1 29 0.119378380 ubox
1 47 0.881549776 ubox
2 7 0.031360726 ubox
2 9 0.028382663 ubox
2 13 0.009600497 ubox
2 28 0.131300581 ubox
2 46 0.882134337 ubox
3 8 0.027517497 ubox
3 12 0.009550808 ubox
3 20 0.004224131 ubox
3 34 0.044521321 ubox
3 41 0.033378724 ubox
3 45 0.861809559 ubox
3 52 0.010650389 ubox
3 53 0.170619999 ubox
4 15 0.003420131 ubox
4 19 0.004861155 ubox
4 20 0.039545543 ubox
4 21 0.008154621 ubox
4 22 0.088320766 ubox
4 25 0.196739004 ubox
4 30 0.085477546 ubox
4 33 0.051553085 ubox
4 34 0.164872893 ubox
4 40 0.044157640 ubox
4 41 0.406478066 ubox
4 44 0.615991980 ubox
4 45 0.052673782 ubox
4 51 0.009331951 ubox
4 52 0.195281494 ubox
4 53 0.009737800 ubox
5 12 0.004247019 ubox
5 14 0.003179708 ubox
5 19 0.044489558 ubox
5 20 0.003598520 ubox
5 21 0.088360055 ubox
5 24 0.172395968 ubox
5 29 0.079741135 ubox
5 33 0.180746658 ubox
5 40 0.447591738 ubox
5 44 0.112828943 ubox
5 47 0.024462033 ubox
5 49 0.064505216 ubox
5 51 0.205878214 ubox
5 52 0.007780968 ubox
5 57 0.092642421 ubox
6 11 0.004453522 ubox
6 16 0.007244559 ubox
6 18 0.043228982 ubox
6 23 0.157816302 ubox
6 26 0.271955246 ubox
6 28 0.050560250 ubox
6 31 0.078772564 ubox
6 32 0.169006744 ubox
6 35 0.006334626 ubox
6 39 0.436070201 ubox
6 42 0.188539198 ubox
6 43 0.147234402 ubox
6 46 0.023527910 ubox
6 48 0.066027737 ubox
6 50 0.206953466 ubox
6 54 0.008245662 ubox
6 56 0.091484441 ubox
7 15 0.008132400 ubox
7 19 0.085443698 ubox
7 22 0.147299501 ubox
7 24 0.734891547 ubox
7 25 0.319601608 ubox
7 29 0.009150139 ubox
7 30 0.101903718 ubox
7 33 0.034646410 ubox
7 34 0.005226249 ubox
7 40 0.253972074 ubox
7 41 0.126138214 ubox
7 44 0.013451235 ubox
7 45 0.007368077 ubox
7 47 0.066106041 ubox
7 49 0.206356081 ubox
7 51 0.003481311 ubox
7 53 0.008342599 ubox
7 57 0.011427248 ubox
8 16 0.051128653 ubox
8 18 0.084244633 ubox
8 23 0.866785936 ubox
8 26 0.051574872 ubox
8 28 0.032334778 ubox
8 31 0.035567321 ubox
8 32 0.030030582 ubox
8 35 0.065755184 ubox
8 39 0.236664092 ubox
8 42 0.056149423 ubox
8 43 0.014154482 ubox
8 46 0.060464632 ubox
8 48 0.205932174 ubox
8 50 0.003571628 ubox
8 54 0.112224198 ubox
8 56 0.010405632 ubox
9 15 0.054900517 ubox
9 20 0.126553331 ubox
9 21 0.058963268 ubox
9 22 0.905073718 ubox
9 25 0.040796478 ubox
9 30 0.039365048 ubox
9 34 0.073765131 ubox
9 41 0.061137171 ubox
9 45 0.030642292 ubox
9 47 0.203724088 ubox
9 52 0.004059230 ubox
9 53 0.124836603 ubox
10 14 0.035635552 ubox
10 19 0.132102055 ubox
10 20 0.044575922 ubox
10 21 0.905777117 ubox
10 24 0.021665454 ubox
10 25 0.300693276 ubox
10 29 0.015370410 ubox
10 30 0.030991878 ubox
10 33 0.073681547 ubox
10 40 0.060204557 ubox
10 44 0.009433582 ubox
10 45 0.026180850 ubox
10 51 0.004160607 ubox
10 52 0.128218623 ubox
11 20 0.893347144 ubox
11 24 0.303198895 ubox
11 29 0.031222564 ubox
11 44 0.029023348 ubox
11 49 0.025706371 ubox
11 51 0.128622914 ubox
12 23 0.304001047 ubox
12 26 0.016292999 ubox
12 28 0.029532712 ubox
12 31 0.072392796 ubox
12 35 0.073626040 ubox
12 42 0.007162768 ubox
12 43 0.028416716 ubox
12 48 0.027245579 ubox
12 50 0.128544524 ubox
13 19 0.622245321 ubox
13 22 0.303807688 ubox
13 24 0.005027028 ubox
13 25 0.017007472 ubox
13 30 0.072871085 ubox
13 33 0.094362286 ubox
13 34 0.061179935 ubox
13 40 0.014381692 ubox
13 41 0.006445954 ubox
13 44 0.005722393 ubox
13 47 0.027848123 ubox
13 49 0.128480606 ubox
14 18 0.560904332 ubox
14 23 0.006137951 ubox
14 28 0.043355828 ubox
14 32 0.091678137 ubox
14 37 0.034606382 ubox
14 39 0.013180731 ubox
14 43 0.005706722 ubox
14 46 0.012452851 ubox
14 48 0.127956853 ubox
15 27 0.044729768 ubox
15 36 0.035524060 ubox
15 46 0.131164480 ubox
16 45 0.130326860 ubox
17 44 0.120349783 ubox
17 45 0.009035713 ubox
18 29 0.120911969 ubox
18 44 0.009252881 ubox
19 27 0.051166344 ubox
19 28 0.124222581 ubox
19 36 0.021285020 ubox
20 26 0.049264498 ubox
20 27 0.116403760 ubox
20 28 0.010551952 ubox
20 35 0.021106643 ubox
20 37 0.010898678 ubox
21 27 0.024239858 ubox
21 28 0.124157934 ubox
21 36 0.011154476 ubox
22 27 0.124346485 ubox
22 46 0.006515611 ubox
23 29 0.006797456 ubox
23 44 0.019488008 ubox
23 45 0.006732145 ubox
23 49 0.003722507 ubox
23 51 0.004287031 ubox
24 28 0.007169496 ubox
24 37 0.307941351 ubox
24 43 0.024690260 ubox
24 48 0.004183570 ubox
24 50 0.004677684 ubox
25 36 0.388817228 ubox
25 46 0.017569166 ubox
26 34 0.535467350 ubox
26 41 0.240939470 ubox
26 45 0.018046998 ubox
26 52 0.019398172 ubox
26 53 0.037458435 ubox
27 33 0.556769667 ubox
27 34 0.192797297 ubox
27 40 0.255922368 ubox
27 41 0.238114862 ubox
27 44 0.014965055 ubox
27 45 0.009009820 ubox
27 51 0.020700530 ubox
27 52 0.043773138 ubox
27 53 0.006908794 ubox
28 33 0.201837217 ubox
28 40 0.246906890 ubox
28 44 0.014838212 ubox
28 47 0.189220335 ubox
28 49 0.133068070 ubox
28 51 0.045137494 ubox
28 52 0.005115472 ubox
28 57 0.007567575 ubox
29 37 0.325359853 ubox
29 39 0.221614568 ubox
29 43 0.015203733 ubox
29 46 0.047792598 ubox
29 48 0.135961664 ubox
29 50 0.044600409 ubox
29 56 0.007562368 ubox
30 36 0.348809045 ubox
30 46 0.300607929 ubox
31 45 0.304486588 ubox
31 52 0.003205361 ubox
31 53 0.004958613 ubox
32 44 0.293138633 ubox
32 51 0.003328999 ubox
32 52 0.005078232 ubox
34 42 0.364827281 ubox
34 46 0.009648088 ubox
34 50 0.010509642 ubox
34 54 0.022580817 ubox
35 41 0.380095572 ubox
35 45 0.011986314 ubox
35 49 0.011074070 ubox
35 53 0.023789348 ubox
36 40 0.372969335 ubox
36 44 0.010962843 ubox
36 45 0.021191710 ubox
36 52 0.023741063 ubox
36 53 0.013570891 ubox
37 44 0.024710423 ubox
37 45 0.022100451 ubox
37 51 0.022347615 ubox
37 52 0.013968620 ubox
37 53 0.013319740 ubox
38 44 0.023931954 ubox
38 45 0.024686745 ubox
38 51 0.012706437 ubox
38 52 0.013955169 ubox
38 53 0.009359968 ubox
39 44 0.022768842 ubox
39 51 0.013077467 ubox
39 52 0.009327070 ubox
41 50 0.021229628 ubox
41 54 0.066033129 ubox
42 49 0.021063817 ubox
42 52 0.027631908 ubox
42 53 0.069085923 ubox
43 49 0.009617456 ubox
43 51 0.032175247 ubox
43 52 0.069083102 ubox
44 48 0.008990299 ubox
44 50 0.032748753 ubox
44 55 0.025487439 ubox
44 56 0.011352732 ubox
45 54 0.029203817 ubox
45 55 0.013467429 ubox
46 53 0.027197870 ubox
1 47 0.9500000 lbox
2 46 0.9500000 lbox
3 45 0.9500000 lbox
4 44 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
showpage
end
%%EOF
