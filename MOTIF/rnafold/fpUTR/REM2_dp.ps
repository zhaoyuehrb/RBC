%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (REM2)
} def

/sequence { (\
AGUGAGGGAGAGGGUGCUGCGAGCUGCUGGGCUGCACACGCACACGCACACGCACACGCACACUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 64 0.421847978 ubox
2 37 0.003338832 ubox
2 43 0.010878724 ubox
2 45 0.018968570 ubox
2 47 0.021044162 ubox
2 49 0.109657158 ubox
2 51 0.117896810 ubox
2 53 0.044727881 ubox
2 55 0.247345835 ubox
2 57 0.099288803 ubox
2 59 0.076478028 ubox
2 61 0.332897056 ubox
2 63 0.446604744 ubox
3 36 0.003342011 ubox
3 42 0.010880890 ubox
3 44 0.018981983 ubox
3 46 0.021030746 ubox
3 48 0.109781994 ubox
3 50 0.118041870 ubox
3 52 0.044715847 ubox
3 54 0.247648776 ubox
3 56 0.099371420 ubox
3 58 0.076431718 ubox
3 60 0.333333167 ubox
3 62 0.446406243 ubox
3 65 0.006019787 ubox
4 35 0.003323828 ubox
4 41 0.010700192 ubox
4 43 0.018204670 ubox
4 45 0.020369600 ubox
4 47 0.109626893 ubox
4 49 0.117574272 ubox
4 51 0.044230255 ubox
4 53 0.247490755 ubox
4 55 0.098927332 ubox
4 57 0.075184880 ubox
4 59 0.332916829 ubox
4 61 0.443841663 ubox
4 64 0.004148305 ubox
5 18 0.005995832 ubox
5 64 0.078385185 ubox
6 17 0.006676685 ubox
6 18 0.003700033 ubox
6 63 0.080297484 ubox
6 64 0.044446781 ubox
7 17 0.004908911 ubox
7 18 0.004710670 ubox
7 63 0.048060349 ubox
7 64 0.038468239 ubox
8 17 0.005704592 ubox
8 63 0.040142094 ubox
9 18 0.007081803 ubox
9 64 0.080426308 ubox
10 17 0.007870945 ubox
10 63 0.081870990 ubox
11 18 0.012482566 ubox
11 64 0.332797445 ubox
12 17 0.013907927 ubox
12 63 0.338489135 ubox
12 64 0.183227193 ubox
13 63 0.196994794 ubox
13 64 0.573846995 ubox
14 37 0.033864948 ubox
14 39 0.289193832 ubox
14 41 0.023314834 ubox
14 43 0.332759922 ubox
14 45 0.131332269 ubox
14 47 0.019413581 ubox
14 49 0.360960201 ubox
14 51 0.257522044 ubox
14 53 0.020655398 ubox
14 55 0.149350446 ubox
14 57 0.122004617 ubox
14 59 0.023638740 ubox
14 61 0.419014932 ubox
14 63 0.603152959 ubox
15 36 0.033870642 ubox
15 38 0.289472444 ubox
15 40 0.023289489 ubox
15 42 0.333158800 ubox
15 44 0.131401852 ubox
15 46 0.019358268 ubox
15 48 0.361330022 ubox
15 50 0.257603994 ubox
15 52 0.020604730 ubox
15 54 0.149535902 ubox
15 56 0.122142793 ubox
15 58 0.023617640 ubox
15 60 0.429107847 ubox
15 62 0.603704108 ubox
16 24 0.004604120 ubox
16 35 0.033847485 ubox
16 37 0.289473512 ubox
16 39 0.023150556 ubox
16 41 0.333345717 ubox
16 43 0.131343437 ubox
16 45 0.019099418 ubox
16 47 0.361506835 ubox
16 49 0.257477253 ubox
16 51 0.020344566 ubox
16 53 0.149595045 ubox
16 55 0.122121091 ubox
16 57 0.023335750 ubox
16 59 0.429290814 ubox
16 61 0.603564856 ubox
17 23 0.004626406 ubox
17 34 0.033786338 ubox
17 40 0.333161495 ubox
17 46 0.361301792 ubox
17 52 0.149497221 ubox
17 58 0.429014216 ubox
18 22 0.004183268 ubox
18 36 0.448362064 ubox
18 38 0.051466493 ubox
18 42 0.374992649 ubox
18 44 0.035955160 ubox
18 48 0.292961591 ubox
18 50 0.014553460 ubox
18 54 0.424580921 ubox
18 56 0.059231221 ubox
18 58 0.003223779 ubox
18 60 0.601103546 ubox
19 27 0.004822514 ubox
19 32 0.023754275 ubox
19 35 0.455325882 ubox
19 37 0.047127229 ubox
19 39 0.005988786 ubox
19 41 0.381430467 ubox
19 43 0.028287167 ubox
19 45 0.007111673 ubox
19 47 0.295312761 ubox
19 49 0.011399739 ubox
19 53 0.431036444 ubox
19 55 0.053333766 ubox
19 57 0.013683241 ubox
19 59 0.604502861 ubox
20 26 0.004837227 ubox
20 31 0.023800984 ubox
20 34 0.454990166 ubox
20 40 0.381624207 ubox
20 46 0.295350111 ubox
20 52 0.431263547 ubox
20 58 0.604498646 ubox
21 33 0.223537791 ubox
21 39 0.379838975 ubox
21 45 0.293060835 ubox
21 51 0.427675565 ubox
21 57 0.599849094 ubox
22 28 0.009693372 ubox
22 33 0.481336601 ubox
23 27 0.009663158 ubox
23 32 0.540178388 ubox
23 35 0.213017059 ubox
23 41 0.212659492 ubox
23 47 0.140245628 ubox
23 53 0.238608761 ubox
24 30 0.014365102 ubox
24 31 0.540130911 ubox
24 34 0.212632758 ubox
24 40 0.212604392 ubox
24 46 0.139849391 ubox
24 52 0.238047532 ubox
25 29 0.015124346 ubox
25 30 0.529860446 ubox
25 36 0.310319205 ubox
25 38 0.081889439 ubox
25 40 0.006867206 ubox
25 42 0.174636275 ubox
25 44 0.034450004 ubox
25 46 0.016218378 ubox
25 48 0.418622993 ubox
25 50 0.094970026 ubox
25 52 0.024766481 ubox
25 54 0.524892777 ubox
25 56 0.007429842 ubox
26 32 0.208691249 ubox
26 33 0.003269431 ubox
26 35 0.320648331 ubox
26 37 0.081436742 ubox
26 39 0.020640865 ubox
26 41 0.180208581 ubox
26 43 0.033781108 ubox
26 45 0.050777690 ubox
26 47 0.434330203 ubox
26 49 0.094660259 ubox
26 51 0.079563256 ubox
26 53 0.547270632 ubox
26 55 0.005788890 ubox
27 31 0.207661623 ubox
27 34 0.320634901 ubox
27 40 0.180108479 ubox
27 46 0.432840242 ubox
27 52 0.547119032 ubox
28 36 0.090264997 ubox
28 38 0.173360700 ubox
28 40 0.008635521 ubox
28 42 0.020900750 ubox
28 44 0.386640483 ubox
28 46 0.042672668 ubox
28 48 0.094050987 ubox
28 50 0.540132401 ubox
28 52 0.007704645 ubox
28 54 0.003542683 ubox
28 56 0.004310447 ubox
29 33 0.005693666 ubox
29 35 0.091026119 ubox
29 37 0.174414289 ubox
29 39 0.030136211 ubox
29 41 0.020654809 ubox
29 43 0.386921993 ubox
29 45 0.169841501 ubox
29 47 0.094515654 ubox
29 49 0.539779849 ubox
29 51 0.035191082 ubox
29 53 0.003538642 ubox
29 55 0.004343209 ubox
31 41 0.339275422 ubox
31 47 0.547754643 ubox
31 53 0.004235658 ubox
32 40 0.343384147 ubox
32 46 0.555849363 ubox
32 52 0.004294624 ubox
33 40 0.032160451 ubox
33 42 0.606408577 ubox
33 44 0.138735166 ubox
33 46 0.004303581 ubox
33 48 0.035704706 ubox
33 54 0.019969512 ubox
34 39 0.118587885 ubox
34 41 0.639613866 ubox
34 43 0.135571853 ubox
34 45 0.014613960 ubox
34 47 0.048600388 ubox
34 49 0.003375053 ubox
34 53 0.049476406 ubox
35 40 0.639039333 ubox
35 46 0.048558248 ubox
35 52 0.049449599 ubox
39 46 0.026559389 ubox
39 52 0.006227760 ubox
40 45 0.033711137 ubox
40 47 0.237490671 ubox
40 51 0.007474898 ubox
40 53 0.038432681 ubox
40 57 0.006492052 ubox
40 59 0.121183462 ubox
41 46 0.237419713 ubox
41 52 0.038422852 ubox
41 58 0.121171553 ubox
45 52 0.052895166 ubox
45 58 0.017985436 ubox
45 65 0.003871017 ubox
46 51 0.058541915 ubox
46 53 0.244688130 ubox
46 57 0.017302225 ubox
46 59 0.070004730 ubox
46 64 0.003600655 ubox
47 52 0.244668337 ubox
47 58 0.069998537 ubox
47 65 0.006758497 ubox
48 64 0.006739792 ubox
49 65 0.004806606 ubox
50 64 0.004799908 ubox
51 58 0.079630581 ubox
52 57 0.080297553 ubox
52 59 0.332433636 ubox
53 58 0.332446377 ubox
53 65 0.004115931 ubox
54 64 0.003878088 ubox
55 65 0.009105171 ubox
56 64 0.009094255 ubox
57 65 0.018384957 ubox
58 64 0.015538475 ubox
59 65 0.020048649 ubox
60 64 0.016690323 ubox
13 64 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
18 60 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
21 57 0.9500000 lbox
25 54 0.9500000 lbox
26 53 0.9500000 lbox
27 52 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
