%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGGGAGGCAGCCAGGCCUCCCUCGCCAGCGGGGUGUGGCUCCCCUCCAAAGACGGUCGGCUGACAGGCUCCACAGAGCUCCACUCACGCUCAGCCCUGGACGGACAGGCAGUCCAACGGAACAGAAACAUCCCUCAGCCCACAGGCACGAUCUGUUCCUCCUGGGAAG\
) } def
/len { sequence length } bind def

/coor [
[110.36494446 139.57722473]
[102.27563477 140.84861755]
[94.09516144 140.48359680]
[86.15123749 138.49674988]
[78.57228851 151.44123840]
[70.99333954 164.38571167]
[63.41438675 177.33018494]
[55.83543396 190.27467346]
[48.25648499 203.21914673]
[40.67753220 216.16362000]
[33.09858322 229.10809326]
[37.33799744 244.33317566]
[29.49730873 258.05538940]
[14.22826290 262.13360596]
[0.58971167 254.14826965]
[-3.32683396 238.83695984]
[4.80224323 225.28359985]
[20.15410614 221.52914429]
[27.73305511 208.58467102]
[35.31200790 195.64019775]
[42.89095688 182.69570923]
[50.46990967 169.75123596]
[58.04885864 156.80676270]
[65.62780762 143.86227417]
[73.20675659 130.91780090]
[65.93890381 122.66340637]
[61.13248062 112.77123260]
[59.13483429 101.95613861]
[60.09031677 90.99968719]
[63.92988586 80.69364929]
[52.22685623 71.31072998]
[40.52383041 61.92781448]
[28.82079887 52.54489899]
[17.03256989 43.26925278]
[5.16012239 34.10164642]
[-6.71232510 24.93404007]
[-18.58477211 15.76643467]
[-30.45722008 6.59882927]
[-46.10884094 4.28857279]
[-51.45359802 -9.61404705]
[-63.32604599 -18.78165245]
[-75.19849396 -27.94925880]
[-87.07093811 -37.11686325]
[-98.94338989 -46.28446960]
[-112.22032928 -53.26464844]
[-126.50301361 -57.84775925]
[-142.00730896 -54.69697571]
[-151.76188660 -65.95297241]
[-166.04457092 -70.53607941]
[-181.94964600 -66.54097748]
[-193.16616821 -78.50431061]
[-188.15556335 -94.11923218]
[-172.07229614 -97.32244873]
[-161.46145630 -84.81877136]
[-147.17877197 -80.23565674]
[-132.69607544 -83.71424866]
[-121.91989899 -72.13043976]
[-107.63721466 -67.54733276]
[-103.49896240 -73.80231476]
[-95.22244263 -86.31228638]
[-91.08418274 -92.56726837]
[-100.88825989 -103.91980743]
[-110.69233704 -115.27234650]
[-120.49640656 -126.62488556]
[-136.15406799 -131.50027466]
[-139.49624634 -147.55523682]
[-127.08478546 -158.27380371]
[-111.68753052 -152.62962341]
[-109.14386749 -136.42895508]
[-99.33979797 -125.07641602]
[-89.53572083 -113.72387695]
[-79.73164368 -102.37133789]
[-75.94841766 -92.53294373]
[-74.84146881 -82.94558716]
[-76.13617706 -74.24736786]
[-79.41805267 -66.97322083]
[-84.16344452 -61.52618027]
[-89.77577972 -58.15691757]
[-77.90333557 -48.98931122]
[-66.03089142 -39.82170486]
[-54.15843964 -30.65410042]
[-42.28599167 -21.48649406]
[-27.48356819 -19.83196640]
[-21.28961372 -5.27361822]
[-9.41716671 3.89398766]
[2.45528054 13.06159306]
[14.32772827 22.22919846]
[26.20017433 31.39680481]
[33.44291687 33.00197220]
[38.20371628 40.84186935]
[49.90674591 50.22478485]
[61.60977173 59.60770035]
[73.31280518 68.99061584]
[93.70838928 59.57471085]
[116.00086212 62.34683609]
[133.46914673 76.47120667]
[140.84666443 97.68939209]
[155.72422791 99.60200500]
[170.60179138 101.51461792]
[185.27587891 95.60009766]
[196.91270447 104.89706421]
[211.79026794 106.80967712]
[226.66783142 108.72229004]
[223.54235840 91.57338715]
[233.07620239 72.51577759]
[244.94865417 63.34817505]
[256.82110596 54.18056870]
[268.69354248 45.01296234]
[272.15704346 29.34823608]
[286.62652588 22.41899681]
[301.00219727 29.54076195]
[304.25628662 45.25032425]
[293.89254761 57.49665070]
[277.86114502 56.88541031]
[265.98870850 66.05301666]
[254.11625671 75.22061920]
[242.24380493 84.38822937]
[243.06408691 91.84323120]
[256.79684448 97.87744141]
[244.70466614 106.75325012]
[245.52494812 114.20825958]
[259.10665894 120.57510376]
[272.68838501 126.94195557]
[286.27011108 133.30880737]
[299.85183716 139.67565918]
[313.43356323 146.04251099]
[327.01528931 152.40936279]
[340.59701538 158.77621460]
[334.84677124 144.92214966]
[338.20050049 130.30187988]
[349.41400146 120.33910370]
[364.32742310 118.72975922]
[377.40826416 126.07087708]
[383.80386353 139.63908386]
[381.14163208 154.40093994]
[370.40917969 164.88020325]
[355.58740234 167.18923950]
[368.09738159 175.46574402]
[386.48202515 176.14291382]
[393.72857666 192.10861206]
[406.38760376 200.15525818]
[419.04666138 208.20191956]
[435.44503784 208.35963440]
[443.27093506 222.77099609]
[434.47372437 236.61083984]
[418.10321045 235.64190674]
[411.00000000 220.86096191]
[398.34097290 212.81430054]
[385.68191528 204.76765442]
[373.78665161 207.08892822]
[363.16595459 200.45751953]
[359.82086182 187.97572327]
[347.31091309 179.69920349]
[334.23016357 172.35794067]
[320.64843750 165.99108887]
[307.06671143 159.62423706]
[293.48498535 153.25738525]
[279.90325928 146.89053345]
[266.32153320 140.52368164]
[252.73982239 134.15682983]
[239.15809631 127.78997803]
[224.75521851 123.59985352]
[209.87765503 121.68724060]
[195.00009155 119.77462769]
[181.39013672 125.82595062]
[168.68917847 116.39218140]
[153.81161499 114.47956848]
[138.93405151 112.56695557]
[135.65150452 120.06884766]
[130.94073486 126.76676178]
[124.99044800 132.39237976]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 25]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[30 93]
[31 92]
[32 91]
[33 90]
[34 88]
[35 87]
[36 86]
[37 85]
[38 84]
[40 82]
[41 81]
[42 80]
[43 79]
[44 78]
[45 58]
[46 57]
[48 55]
[49 54]
[61 72]
[62 71]
[63 70]
[64 69]
[97 168]
[98 167]
[99 166]
[101 164]
[102 163]
[103 162]
[105 117]
[106 116]
[107 115]
[108 114]
[121 161]
[122 160]
[123 159]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[137 153]
[138 152]
[140 149]
[141 148]
[142 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
