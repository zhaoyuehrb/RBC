%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCAGCCCAGCCCCGCGGGGAGGCUCCCGCAGCCCAGGGACCUCGAGCUUUCCCCGCGCCGGGCGCUGCAGCCGGGCCCCUCCCGCGAGGCGCCCGGCAGCCUGAGGCUUCCUUUUGGUUCCCGCCCCGGGACGGGAGGCUCCGUCCGCUCCCUGGACAGCCGGGGUGCUCCCUCCUUCUCCCUCCCGCGCUCUCCUCCCCCGUCCGUUUGCAGGGAGGUGCUCUCCUCGGGCGGCGGGGAAGGCGGGGCUGG\
CCUGCCACUCCUCCUGCU\
) } def
/len { sequence length } bind def

/coor [
[36.14241791 347.80450439]
[40.02928162 333.19683838]
[48.05055618 320.38470459]
[59.49299622 310.50738525]
[73.33914948 304.44308472]
[71.62306213 289.54156494]
[69.90698242 274.64007568]
[60.76441193 262.88156128]
[66.87209320 248.28680420]
[65.15600586 233.38528442]
[63.43992233 218.48377991]
[61.72383881 203.58226013]
[60.00775528 188.68075562]
[58.29167175 173.77923584]
[56.57558823 158.87773132]
[54.85950470 143.97621155]
[40.92046738 138.43516541]
[29.44209290 148.09161377]
[17.96371841 157.74804688]
[6.48534441 167.40449524]
[-4.99302959 177.06094360]
[-16.47140312 186.71739197]
[-27.94977760 196.37384033]
[-39.42815018 206.03027344]
[-50.85097885 215.75236511]
[-62.21788406 225.53977966]
[-73.24147034 235.71232605]
[-83.90870667 246.25793457]
[-94.57593536 256.80355835]
[-105.24317169 267.34918213]
[-102.77062988 282.66799927]
[-109.80450439 296.49926758]
[-123.64012146 303.52459717]
[-138.95741272 301.04260254]
[-149.86656189 290.00765991]
[-152.17277527 274.66293335]
[-144.98927307 260.90875244]
[-131.07824707 254.03393555]
[-115.78879547 256.68194580]
[-105.12155914 246.13632202]
[-94.45433044 235.59071350]
[-83.78709412 225.04508972]
[-98.75882721 224.12464905]
[-108.77414703 212.95802307]
[-108.06643677 197.97473145]
[-97.04318237 187.80183411]
[-82.05134583 188.29666138]
[-71.72291565 199.17431641]
[-72.00529480 214.17288208]
[-60.63839340 204.38546753]
[-57.63149261 197.66496277]
[-49.08459854 194.55191040]
[-37.60622406 184.89546204]
[-26.12784958 175.23901367]
[-14.64947510 165.58256531]
[-3.17110062 155.92613220]
[8.30727291 146.26968384]
[19.78564644 136.61323547]
[31.26402092 126.95678711]
[28.02209091 112.31131744]
[13.54064941 108.40135193]
[-0.94079274 104.49138641]
[-15.42223454 100.58142090]
[-29.90367699 96.67145538]
[-44.38512039 92.76148987]
[-58.86656189 88.85151672]
[-73.34799957 84.94155121]
[-87.82944489 81.03158569]
[-102.31089020 77.12162018]
[-113.11737823 85.12355804]
[-126.36565399 85.44793701]
[-137.22737122 78.20009613]
[-141.87242126 66.20452881]
[-156.30807495 62.12878418]
[-165.37873840 62.80974579]
[-170.88537598 57.92266846]
[-185.27336121 53.68168259]
[-199.66134644 49.44069672]
[-214.38108826 55.82104111]
[-228.47883606 48.16384125]
[-231.14002991 32.34304047]
[-220.32321167 20.49500847]
[-204.32611084 21.70853806]
[-195.42034912 35.05271149]
[-181.03237915 39.29370117]
[-166.64439392 43.53468704]
[-152.23233032 47.69312286]
[-137.79667664 51.76886749]
[-123.46502686 42.93664551]
[-106.85729218 47.30612946]
[-98.40092468 62.64017868]
[-83.91947937 66.55014801]
[-69.43803406 70.46011353]
[-54.95659637 74.37007904]
[-40.47515488 78.28004456]
[-25.99371147 82.19001007]
[-11.51226902 86.09997559]
[2.96917319 90.00994110]
[17.45061493 93.91990662]
[31.93205833 97.82987213]
[40.70704269 85.66436768]
[32.42719269 73.15660095]
[24.14733887 60.64884567]
[15.86748791 48.14108276]
[-0.80747306 40.28858185]
[-1.15363634 22.72715569]
[-9.57635021 10.31514931]
[-17.99906349 -2.09685612]
[-26.42177773 -14.50886154]
[-40.31882477 -24.22011566]
[-34.83417511 -40.26240158]
[-17.90052414 -39.43304062]
[-14.00977230 -22.93157578]
[-5.58705854 -10.51957035]
[2.83565569 1.89243579]
[11.25836945 14.30444145]
[23.05461884 16.87508011]
[30.17797661 27.11437607]
[28.37524796 39.86123276]
[36.65509796 52.36899185]
[44.93495178 64.87675476]
[53.21480179 77.38451385]
[66.34534454 64.51031494]
[82.26140594 57.71525574]
[98.47895050 57.22720337]
[112.73283386 62.34984589]
[120.13331604 49.30251694]
[117.45864105 36.70972824]
[123.86129761 26.00499535]
[135.45294189 22.62956619]
[143.00253296 9.66794395]
[150.55212402 -3.29367852]
[158.10171509 -16.25530052]
[165.65130615 -29.21692276]
[167.25573730 -38.17049026]
[173.36250305 -42.28316498]
[181.06021118 -55.15737534]
[188.75791931 -68.03158569]
[196.45562744 -80.90579987]
[204.15332031 -93.78000641]
[211.85102844 -106.65422058]
[201.94448853 -118.06990051]
[196.05941772 -131.96984863]
[194.76057434 -146.98788452]
[198.16262817 -161.65216064]
[205.92013550 -174.52940369]
[217.26260376 -184.36502075]
[231.07099915 -190.20524597]
[245.98811340 -191.48974609]
[260.55197144 -188.10527039]
[268.24969482 -200.97947693]
[268.69088745 -216.79452515]
[281.86306763 -223.74746704]
[289.56076050 -236.62168884]
[297.25848389 -249.49589539]
[304.95617676 -262.37011719]
[312.65390015 -275.24432373]
[320.35159302 -288.11853027]
[320.06112671 -304.51510620]
[334.25326538 -312.73190308]
[348.32830811 -304.31616211]
[347.80712891 -287.92529297]
[333.22579956 -280.42080688]
[325.52810669 -267.54660034]
[317.83038330 -254.67239380]
[310.13269043 -241.79818726]
[302.43496704 -228.92398071]
[294.73727417 -216.04975891]
[294.84664917 -201.15556335]
[281.12390137 -193.28176880]
[273.42620850 -180.40756226]
[283.30056763 -169.18000793]
[289.22918701 -155.43150330]
[290.61987305 -140.50346375]
[287.32394409 -125.85670471]
[279.65185547 -112.92837524]
[268.34417725 -102.99100494]
[254.49996948 -97.02725220]
[239.47007751 -95.63272095]
[224.72525024 -98.95651245]
[217.02754211 -86.08230591]
[209.32983398 -73.20809174]
[201.63212585 -60.33388138]
[193.93441772 -47.45967102]
[186.23670959 -34.58545685]
[178.61293030 -21.66732979]
[171.06333923 -8.70570755]
[163.51374817 4.25591421]
[155.96415710 17.21753693]
[148.41456604 30.17915916]
[149.27638245 47.72284317]
[133.18064880 56.70300293]
[125.78015900 69.75032806]
[132.70191956 77.41143799]
[137.41679382 86.59693146]
[139.60659790 96.68692780]
[139.12355042 107.00051117]
[153.12519836 112.38138580]
[167.12684631 117.76225281]
[182.78408813 115.49038696]
[191.88871765 127.27830505]
[205.89036560 132.65917969]
[219.89201355 138.04005432]
[233.89367676 143.42091370]
[247.89532471 148.80178833]
[256.99023438 148.95452881]
[262.02606201 154.32545471]
[275.96511841 159.86650085]
[289.90414429 165.40756226]
[303.84317017 170.94860840]
[317.78222656 176.48966980]
[331.72125244 182.03071594]
[345.66030884 187.57176208]
[354.75283813 187.82878113]
[359.72677612 193.25708008]
[373.60137939 198.95759583]
[387.47598267 204.65809631]
[401.38302612 210.27896118]
[415.32205200 215.82002258]
[429.26107788 221.36106873]
[446.21343994 221.59342957]
[450.68304443 237.94760132]
[436.20532227 246.76980591]
[423.72003174 235.30010986]
[409.78100586 229.75904846]
[395.84194946 224.21800232]
[388.49307251 224.66574097]
[381.77545166 218.53268433]
[367.90087891 212.83218384]
[354.02627563 207.13166809]
[340.11923218 201.51080322]
[326.18020630 195.96975708]
[312.24118042 190.42869568]
[298.30212402 184.88764954]
[284.36309814 179.34660339]
[270.42407227 173.80554199]
[256.48501587 168.26449585]
[242.51445007 162.80343628]
[228.51280212 157.42257690]
[214.51115417 152.04170227]
[200.50949097 146.66082764]
[186.50784302 141.27995300]
[171.85209656 143.93670654]
[161.74597168 131.76390076]
[147.74432373 126.38303375]
[133.74267578 121.00216675]
[108.95193481 144.97244263]
[69.76101685 142.26013184]
[71.47709656 157.16163635]
[73.19318390 172.06315613]
[74.90927124 186.96466064]
[76.62535095 201.86618042]
[78.34143829 216.76768494]
[80.05751801 231.66920471]
[81.77360535 246.57070923]
[91.03891754 259.39508057]
[84.80849457 272.92398071]
[86.52457428 287.82550049]
[88.24066162 302.72702026]
[103.10282135 305.48519897]
[116.49094391 312.50299072]
[127.21455383 323.15643311]
[134.32011414 336.49819946]
[137.17581177 351.34191895]
[135.52772522 366.36773682]
[129.52238464 380.23956299]
[119.69380188 391.72390747]
[106.91590881 399.79959106]
[92.32491302 403.74853516]
[77.21823120 403.21963501]
[62.93915558 398.25985718]
[50.75735474 389.31027222]
[41.75603485 377.16665649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 259]
[6 258]
[7 257]
[9 255]
[10 254]
[11 253]
[12 252]
[13 251]
[14 250]
[15 249]
[16 248]
[17 59]
[18 58]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[24 52]
[25 50]
[26 49]
[27 42]
[28 41]
[29 40]
[30 39]
[60 100]
[61 99]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
[73 88]
[74 87]
[76 86]
[77 85]
[78 84]
[101 122]
[102 121]
[103 120]
[104 119]
[106 116]
[107 115]
[108 114]
[109 113]
[126 193]
[127 192]
[130 190]
[131 189]
[132 188]
[133 187]
[134 186]
[136 185]
[137 184]
[138 183]
[139 182]
[140 181]
[141 180]
[150 171]
[151 170]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
[197 246]
[198 245]
[199 244]
[201 242]
[202 241]
[203 240]
[204 239]
[205 238]
[207 237]
[208 236]
[209 235]
[210 234]
[211 233]
[212 232]
[213 231]
[215 230]
[216 229]
[217 228]
[218 226]
[219 225]
[220 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
