%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAAAAAAAGGGGGGAAAAGGGGGGGAAAGAAAGAAAGAGAAAAAGGAGGGCGAGUGGCGAGCAGGGGCCUCGGCCGCCACCCACACGCCCCGAAGCGUGCUCGUCCCCCGCGCGGGGCUCCCGGCCGCCGCCCUCGGCCAUCGGCUGCUCCCCGGUGGCCCAGGCCUCGGACUCCGCGGCCGGCCCGGCGCGGCCCAGCGCCCUCAGGGAUC\
) } def
/len { sequence length } bind def

/coor [
[104.37490845 363.12265015]
[89.61065674 366.31539917]
[74.54506683 365.21786499]
[60.39942932 359.91900635]
[48.32047653 350.84841919]
[39.28739166 338.74139404]
[34.03244400 324.57940674]
[32.98163223 309.51046753]
[36.22014236 294.75619507]
[43.48543549 281.51263428]
[54.18855667 270.85336304]
[67.46184540 263.64251709]
[82.22929382 260.46459961]
[83.31916046 245.50424194]
[84.40903473 230.54389954]
[85.49890137 215.58354187]
[86.58877563 200.62318420]
[74.18823242 192.37138367]
[67.53880310 178.93110657]
[68.51604462 163.86752319]
[76.95742035 151.23266602]
[90.67916870 144.47537231]
[91.76903534 129.51502991]
[92.85890961 114.55467224]
[85.07730865 101.73099518]
[71.30406952 95.78979492]
[57.53082657 89.84859467]
[43.75758362 83.90740204]
[29.98434258 77.96620178]
[17.73377991 81.99398041]
[6.38565540 76.76486969]
[1.79339838 65.57645416]
[-11.89197826 59.43557358]
[-2.22631454 70.90618134]
[2.48767090 85.14620972]
[1.57558966 100.11845398]
[-4.83207512 113.68096924]
[-15.81863499 123.89348602]
[-29.81233978 129.29499817]
[-44.81122971 129.11273193]
[-58.66955185 123.37279510]
[-69.40471649 112.89633179]
[-75.48093414 99.18212128]
[-76.02893066 84.19213104]
[-70.97032166 70.07085419]
[-61.02878952 58.83849716]
[-47.62657928 52.10197067]
[-32.67926788 50.82519531]
[-46.69855118 45.49043274]
[-60.97843552 51.71318436]
[-75.11998749 46.10326767]
[-80.96443176 32.45123291]
[-94.98371124 27.11647034]
[-109.00299835 21.78170776]
[-123.02227783 16.44694710]
[-132.15197754 16.32013321]
[-137.20573425 10.93130589]
[-151.14593506 5.39321327]
[-165.20364380 0.16054322]
[-179.37216187 -4.76421452]
[-193.54067993 -9.68897247]
[-206.19995117 -0.71555340]
[-221.71554565 -0.93050760]
[-234.12136841 -10.25118065]
[-238.64715576 -25.09358215]
[-233.55264282 -39.75050735]
[-220.79675293 -48.58607101]
[-205.28440857 -48.20281601]
[-192.98042297 -38.74811172]
[-188.61592102 -23.85748482]
[-174.44740295 -18.93272781]
[-160.27890015 -14.00796986]
[-156.96588135 -15.20436573]
[-152.90933228 -14.85781288]
[-148.83967590 -12.63652134]
[-145.60784912 -8.54699993]
[-131.66763306 -3.00890732]
[-117.68751526 2.42766333]
[-103.66823578 7.76242495]
[-89.64894867 13.09718609]
[-75.62966919 18.43194771]
[-62.18790817 12.11889362]
[-47.89436340 17.32938957]
[-41.36378860 31.47114944]
[-27.34450722 36.80591202]
[-22.11889648 31.42604065]
[-6.44206905 15.28642941]
[-12.18232059 1.42823601]
[-17.92257309 -12.42995739]
[-23.66282463 -26.28815079]
[-29.40307426 -40.14634323]
[-44.09841156 -45.96206665]
[-50.30048752 -60.49856567]
[-44.32971954 -75.13159180]
[-29.72846031 -81.17963409]
[-15.15937710 -75.05448914]
[-9.26604843 -60.39010239]
[-15.54488182 -45.88659286]
[-9.80463028 -32.02840042]
[-4.06437922 -18.17020798]
[1.67587221 -4.31201553]
[7.41612387 9.54617786]
[6.17012978 32.02014923]
[-5.75109339 45.75019455]
[7.93428326 51.89107895]
[25.27277756 49.17084122]
[35.92554092 64.19296265]
[49.69878006 70.13416290]
[63.47202301 76.07535553]
[77.24526215 82.01655579]
[91.01850891 87.95774841]
[105.97053528 89.15638733]
[120.51435852 85.48523712]
[135.05818176 81.81408691]
[149.60198975 78.14293671]
[164.14581299 74.47178650]
[175.63264465 63.59228897]
[189.86650085 67.97937012]
[204.41032410 64.30821991]
[218.95413208 60.63706970]
[233.49795532 56.96591949]
[237.23591614 53.33321762]
[241.56069946 51.66212845]
[245.62779236 51.84802628]
[248.75628662 53.46662140]
[263.44638062 50.43335724]
[278.13650513 47.40009689]
[292.82662964 44.36683273]
[307.51672363 41.33356857]
[322.20684814 38.30030441]
[336.89694214 35.26704025]
[351.44076538 31.59589005]
[365.81060791 27.29384232]
[378.97274780 12.02232361]
[397.57586670 17.30388260]
[411.81451416 12.58571148]
[426.05313110 7.86754036]
[436.71911621 -3.81780672]
[451.23413086 -0.47652796]
[465.47277832 -5.19469929]
[479.71139526 -9.91287041]
[493.95004272 -14.63104153]
[508.18869019 -19.34921265]
[522.42730713 -24.06738472]
[536.66595459 -28.78555679]
[550.90460205 -33.50372696]
[565.14324951 -38.22189713]
[570.74822998 -52.82047653]
[584.45062256 -60.35557938]
[599.78063965 -57.26936722]
[609.49987793 -45.01905060]
[609.01922607 -29.38885498]
[598.56561279 -17.75888252]
[583.07495117 -15.62045002]
[569.86138916 -23.98325920]
[555.62280273 -19.26508713]
[541.38415527 -14.54691601]
[527.14550781 -9.82874489]
[512.90686035 -5.11057377]
[498.66821289 -0.39240232]
[484.42956543 4.32576895]
[470.19094849 9.04394054]
[455.95230103 13.76211166]
[446.30474854 25.10998344]
[430.77133179 22.10618019]
[416.53268433 26.82435226]
[402.29403687 31.54252243]
[398.55029297 41.04533768]
[390.01583862 47.04652023]
[379.36798096 47.36843872]
[370.11264038 41.66368484]
[355.74279785 45.96573257]
[368.41073608 53.99837875]
[371.81970215 68.60587311]
[364.01589966 81.41604614]
[349.47198486 85.08683777]
[336.52371216 77.51437378]
[332.59228516 63.03874207]
[339.93020630 49.95714951]
[325.24008179 52.99041367]
[310.54998779 56.02367783]
[295.85986328 59.05694199]
[281.16976929 62.09020615]
[266.47964478 65.12346649]
[251.78955078 68.15673065]
[237.16911316 71.50973511]
[222.62528992 75.18088531]
[208.08146667 78.85203552]
[193.53765869 82.52318573]
[183.09109497 93.14009094]
[167.81695557 89.01560211]
[153.27314758 92.68675232]
[138.72932434 96.35790253]
[124.18550873 100.02905273]
[109.64168549 103.70020294]
[110.30033112 109.34617615]
[107.81925964 115.64453888]
[106.72939301 130.60488892]
[105.63952637 145.56524658]
[118.23704529 154.23989868]
[124.75810242 167.96479797]
[123.54183197 183.01095581]
[115.01468658 195.34561157]
[101.54912567 201.71305847]
[100.45925903 216.67341614]
[99.36938477 231.63375854]
[98.27951813 246.59411621]
[97.18964386 261.55447388]
[111.34059906 266.83911133]
[123.42865753 275.89755249]
[132.47390747 287.99548340]
[137.74307251 302.15219116]
[138.80902100 317.22006226]
[135.58534241 331.97760010]
[128.33335876 345.22845459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[22 199]
[23 198]
[24 197]
[25 111]
[26 110]
[27 109]
[28 108]
[29 107]
[32 105]
[33 104]
[48 85]
[49 84]
[52 81]
[53 80]
[54 79]
[55 78]
[57 77]
[58 76]
[59 72]
[60 71]
[61 70]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[112 195]
[113 194]
[114 193]
[115 192]
[116 191]
[118 189]
[119 188]
[120 187]
[121 186]
[125 185]
[126 184]
[127 183]
[128 182]
[129 181]
[130 180]
[131 179]
[132 172]
[133 171]
[135 167]
[136 166]
[137 165]
[139 163]
[140 162]
[141 161]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
