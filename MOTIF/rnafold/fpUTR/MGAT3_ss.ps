%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCGGCCGCGCCGGGUCCCCGGGACGGGGUGGAAGUGGGGGUGGGGGGAGGGGAUCGGGGCCGGGCCGGGGCCGCGCUGCCUGCGAUGCCGGGCGCCCGCCGCAGCCGCUGCCGCCGGAGCCCGGGAUGGGGCGAGAGGCUGCGGCGGACGCCAGCAUCUCCCCGCCGGGGACCCCGGGGGCCGCGGAGCCGCCGCCGCCGCUGCUGCCGCCGUUGCUGAGACCCAGCGGGCGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[77.87299347 1022.20123291]
[68.21450043 1010.38275146]
[64.64868927 995.54199219]
[67.88356018 980.62561035]
[77.27681732 968.59527588]
[90.96342468 961.83959961]
[90.76708221 946.84088135]
[90.57073975 931.84216309]
[87.34682465 925.20819092]
[90.47128296 916.64611816]
[90.47128296 901.64611816]
[90.47128296 886.64611816]
[82.73397827 873.91888428]
[90.47128296 860.11871338]
[90.47128296 845.11871338]
[90.47128296 830.11871338]
[90.47128296 815.11871338]
[90.47128296 800.11871338]
[82.14830780 791.35760498]
[82.01393890 778.87353516]
[90.68471527 769.34210205]
[90.88105774 754.34338379]
[91.07740021 739.34466553]
[91.17557526 724.34497070]
[91.17557526 709.34497070]
[91.17557526 694.34497070]
[91.17557526 679.34497070]
[91.17557526 664.34497070]
[91.07740021 649.34527588]
[90.88105774 634.34655762]
[90.68471527 619.34783936]
[90.48837280 604.34918213]
[90.29203033 589.35046387]
[82.38879395 576.72552490]
[89.94479370 562.82525635]
[89.74845123 547.82653809]
[89.55210876 532.82781982]
[89.35576630 517.82910156]
[89.15941620 502.83041382]
[81.25618744 490.20550537]
[88.81218719 476.30523682]
[88.61584473 461.30651855]
[88.41949463 446.30780029]
[88.22315216 431.30908203]
[88.02680969 416.31036377]
[80.12358093 403.68548584]
[87.67957306 389.78521729]
[87.48323059 374.78649902]
[79.69535065 371.22973633]
[73.44519806 365.31521606]
[69.42411804 357.65850830]
[68.08931732 349.06991577]
[69.61203003 340.46856689]
[73.85615540 332.78424072]
[80.38988495 326.85678101]
[88.52952576 323.34429932]
[89.31456757 308.36483765]
[90.09960938 293.38540649]
[83.03900146 280.27062988]
[91.48794556 266.89431763]
[92.27298737 251.91487122]
[93.05802917 236.93542480]
[93.84306335 221.95597839]
[86.36574554 215.02687073]
[83.87413788 204.91577148]
[87.42192078 194.89221191]
[96.06875610 188.33454895]
[97.24564362 173.38078308]
[98.42253113 158.42703247]
[99.59941101 143.47326660]
[100.77629852 128.51951599]
[101.95318604 113.56575012]
[96.51112366 116.00868988]
[89.67822266 116.02714539]
[82.57453156 113.00275421]
[76.55379486 106.83053589]
[72.97463226 97.99386597]
[60.18502808 90.15638733]
[44.31236267 92.48834991]
[32.69158554 81.42773438]
[34.23716354 65.45930481]
[47.76346207 56.83267212]
[62.89426041 62.16544724]
[68.02250671 77.36678314]
[80.81211090 85.20426178]
[94.17720795 78.39440918]
[95.35409546 63.44064713]
[96.53097534 48.48688507]
[97.70786285 33.53312683]
[98.88475037 18.57936478]
[91.12248993 8.29448891]
[92.39861298 -4.12488174]
[101.48831940 -12.08765602]
[102.86084747 -27.02472878]
[104.23336792 -41.96180344]
[105.60589600 -56.89887619]
[99.16378784 -71.34913635]
[108.03319550 -83.31504059]
[109.40572357 -98.25211334]
[110.77824402 -113.18918610]
[112.15077209 -128.12626648]
[113.52329254 -143.06333923]
[114.89582062 -158.00041199]
[116.26834106 -172.93748474]
[117.64086914 -187.87455750]
[119.01338959 -202.81163025]
[120.38591766 -217.74870300]
[121.75843811 -232.68577576]
[115.31633759 -247.13603210]
[124.18574524 -259.10192871]
[125.55826569 -274.03900146]
[126.83300018 -288.98474121]
[128.00988770 -303.93850708]
[129.18676758 -318.89227295]
[118.12182617 -338.38897705]
[131.15415955 -355.67663574]
[131.54681396 -370.67150879]
[131.93946838 -385.66635132]
[132.33212280 -400.66122437]
[126.70246887 -416.65319824]
[140.51103210 -426.48986816]
[153.78585815 -415.94400024]
[147.32698059 -400.26855469]
[146.93432617 -385.27371216]
[146.54167175 -370.27883911]
[146.14901733 -355.28399658]
[152.63029480 -350.88122559]
[156.90382385 -344.20242310]
[158.21641541 -336.28771973]
[156.28303528 -328.40478516]
[151.34458923 -321.84573364]
[144.14053345 -317.71539307]
[142.96365356 -302.76162720]
[141.78675842 -287.80786133]
[144.39013672 -280.90670776]
[140.49534607 -272.66647339]
[139.12281799 -257.72940063]
[145.66310120 -244.34754944]
[136.69551086 -231.31324768]
[135.32298279 -216.37617493]
[133.95046997 -201.43910217]
[132.57794189 -186.50202942]
[131.20541382 -171.56495667]
[129.83288574 -156.62788391]
[128.46037292 -141.69081116]
[127.08784485 -126.75373840]
[125.71531677 -111.81665802]
[124.34279633 -96.87958527]
[122.97026825 -81.94251251]
[129.51054382 -68.56065369]
[120.54296875 -55.52635193]
[119.17044067 -40.58927917]
[117.79792023 -25.65220451]
[116.42539215 -10.71513176]
[124.61624908 4.81450748]
[113.83850861 19.75625229]
[112.66162872 34.71001053]
[111.48474121 49.66377258]
[110.30785370 64.61753082]
[109.13096619 79.57128906]
[121.03126526 88.70271301]
[135.17088318 83.69561005]
[149.31051636 78.68850708]
[163.45013428 73.68140411]
[177.58975220 68.67430115]
[190.50207520 57.68756104]
[204.63392639 67.05382538]
[199.54579163 83.22624207]
[182.59686279 82.81392670]
[168.45722961 87.82102966]
[154.31761169 92.82813263]
[140.17799377 97.83523560]
[126.03836823 102.84233856]
[116.90694427 114.74263763]
[115.73006439 129.69639587]
[114.55317688 144.65016174]
[113.37628937 159.60391235]
[112.19940186 174.55767822]
[111.02251434 189.51142883]
[120.50184631 207.31646729]
[108.82250977 222.74102783]
[108.03746796 237.72045898]
[107.25242615 252.69990540]
[106.46739197 267.67935181]
[113.47183990 281.86553955]
[105.07904816 294.17044067]
[104.29401398 309.14987183]
[103.50897217 324.12933350]
[119.25944519 339.24337769]
[118.64025879 360.77770996]
[102.48194885 374.59014893]
[102.67829132 389.58886719]
[110.59556580 403.28656006]
[103.02552795 416.11404419]
[103.22187042 431.11273193]
[103.41821289 446.11145020]
[103.61455536 461.11016846]
[103.81089783 476.10888672]
[111.72817993 489.80661011]
[104.15813446 502.63406372]
[104.35447693 517.63275146]
[104.55081940 532.63146973]
[104.74716949 547.63018799]
[104.94351196 562.62890625]
[112.86078644 576.32666016]
[105.29074097 589.15411377]
[105.48708344 604.15283203]
[105.68343353 619.15155029]
[105.87977600 634.15026855]
[106.07611847 649.14892578]
[109.31238556 657.66937256]
[106.17557526 664.34497070]
[106.17557526 679.34497070]
[106.17557526 694.34497070]
[106.17557526 709.34497070]
[106.17557526 724.34497070]
[109.30003357 732.90704346]
[106.07611847 739.54101562]
[105.87977600 754.53973389]
[105.68343353 769.53845215]
[115.04875946 785.40368652]
[105.47128296 800.11871338]
[105.47128296 815.11871338]
[105.47128296 830.11871338]
[105.47128296 845.11871338]
[105.47128296 860.11871338]
[113.20858002 873.91888428]
[105.47128296 886.64611816]
[105.47128296 901.64611816]
[105.47128296 916.64611816]
[105.56945801 931.64581299]
[105.76580048 946.64453125]
[105.96214294 961.64324951]
[119.82090759 968.03833008]
[129.52586365 979.81866455]
[133.15008545 994.64526367]
[129.97398376 1009.57427979]
[120.62817383 1021.64154053]
[106.96827698 1028.45104980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 233]
[7 232]
[8 231]
[10 230]
[11 229]
[12 228]
[14 226]
[15 225]
[16 224]
[17 223]
[18 222]
[21 220]
[22 219]
[23 218]
[24 216]
[25 215]
[26 214]
[27 213]
[28 212]
[29 210]
[30 209]
[31 208]
[32 207]
[33 206]
[35 204]
[36 203]
[37 202]
[38 201]
[39 200]
[41 198]
[42 197]
[43 196]
[44 195]
[45 194]
[47 192]
[48 191]
[56 188]
[57 187]
[58 186]
[60 184]
[61 183]
[62 182]
[63 181]
[67 179]
[68 178]
[69 177]
[70 176]
[71 175]
[72 174]
[77 85]
[78 84]
[86 160]
[87 159]
[88 158]
[89 157]
[90 156]
[93 154]
[94 153]
[95 152]
[96 151]
[98 149]
[99 148]
[100 147]
[101 146]
[102 145]
[103 144]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[110 137]
[111 136]
[112 134]
[113 133]
[114 132]
[116 126]
[117 125]
[118 124]
[119 123]
[161 173]
[162 172]
[163 171]
[164 170]
[165 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
