%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GABRD)
} def

/sequence { (\
CGCGCCGCGCUCGCUCAGCUCCCGCCCGCCUGUGCCGCCUGUGCGGCCGCCGGGAGCCAAGUUUGCGCGGACCCCGUCCCGAGCCCGCCGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 76 0.099867496 ubox
1 81 0.041591925 ubox
1 87 0.003792048 ubox
1 90 0.005393032 ubox
1 92 0.254413333 ubox
2 75 0.104573014 ubox
2 77 0.191557863 ubox
2 80 0.036574846 ubox
2 84 0.009295041 ubox
2 86 0.004830718 ubox
2 88 0.016900267 ubox
2 89 0.004725416 ubox
2 91 0.257958847 ubox
2 94 0.076114667 ubox
3 76 0.201808653 ubox
3 81 0.025433552 ubox
3 83 0.009281061 ubox
3 87 0.017241161 ubox
3 90 0.257947597 ubox
3 92 0.025040314 ubox
3 93 0.071813503 ubox
4 75 0.201668718 ubox
4 80 0.025666652 ubox
4 84 0.010041266 ubox
4 86 0.016816736 ubox
4 88 0.050998329 ubox
4 89 0.249295882 ubox
4 91 0.028093753 ubox
4 94 0.457243731 ubox
5 70 0.861534215 ubox
5 83 0.010508915 ubox
5 87 0.069592344 ubox
5 90 0.027829934 ubox
5 93 0.457626835 ubox
6 69 0.865306636 ubox
6 81 0.008382218 ubox
6 87 0.176439314 ubox
6 90 0.005209537 ubox
6 92 0.457614526 ubox
7 68 0.874473107 ubox
7 84 0.003645231 ubox
7 86 0.167997907 ubox
7 88 0.026577553 ubox
7 89 0.004465116 ubox
7 91 0.453901678 ubox
8 67 0.874633338 ubox
8 83 0.003629619 ubox
8 87 0.026648073 ubox
8 90 0.453715827 ubox
9 66 0.878793870 ubox
9 68 0.006606186 ubox
9 84 0.177981174 ubox
9 86 0.021749987 ubox
9 88 0.288779326 ubox
9 89 0.333667817 ubox
10 65 0.878986847 ubox
10 67 0.006738581 ubox
10 83 0.180060032 ubox
10 87 0.407986342 ubox
11 82 0.179887163 ubox
12 65 0.008480274 ubox
12 67 0.005447204 ubox
12 81 0.178267674 ubox
12 87 0.035094075 ubox
13 62 0.887907332 ubox
13 64 0.003955081 ubox
13 66 0.016755101 ubox
13 68 0.033777173 ubox
13 80 0.120758928 ubox
13 84 0.423989577 ubox
13 86 0.023477673 ubox
13 88 0.027305047 ubox
14 61 0.900212434 ubox
14 65 0.016646862 ubox
14 67 0.034254173 ubox
14 83 0.424473952 ubox
14 87 0.027247636 ubox
15 60 0.893860411 ubox
15 82 0.423560484 ubox
16 65 0.034652532 ubox
16 81 0.416960507 ubox
17 63 0.007791376 ubox
17 64 0.034497146 ubox
18 25 0.003585449 ubox
18 57 0.999099714 ubox
18 62 0.006484323 ubox
18 63 0.004115425 ubox
19 24 0.003827201 ubox
19 56 0.999802749 ubox
19 61 0.006815543 ubox
20 55 0.999767366 ubox
20 60 0.006497905 ubox
21 54 0.999865881 ubox
22 53 0.999822660 ubox
23 52 0.999728702 ubox
24 33 0.008252527 ubox
24 47 0.010712511 ubox
24 48 0.003208267 ubox
24 50 0.177346288 ubox
24 51 0.979557176 ubox
25 32 0.011426219 ubox
25 46 0.011619216 ubox
25 49 0.249130854 ubox
25 53 0.005259311 ubox
25 54 0.014970557 ubox
26 45 0.011490424 ubox
26 46 0.033521486 ubox
26 52 0.007397936 ubox
26 53 0.016875574 ubox
27 43 0.011291626 ubox
27 45 0.033724744 ubox
27 49 0.387557824 ubox
27 52 0.018493164 ubox
28 33 0.003577822 ubox
28 35 0.003501345 ubox
28 42 0.011291768 ubox
28 44 0.033743455 ubox
28 47 0.260153173 ubox
28 48 0.385160176 ubox
28 50 0.788294844 ubox
28 51 0.023375854 ubox
29 34 0.003669745 ubox
29 41 0.011292503 ubox
29 43 0.033677038 ubox
29 46 0.261819521 ubox
29 49 0.781415006 ubox
29 54 0.003610569 ubox
30 45 0.258064407 ubox
30 46 0.176020846 ubox
30 53 0.003657923 ubox
31 41 0.012550041 ubox
31 45 0.181314740 ubox
31 49 0.175017260 ubox
31 52 0.003722685 ubox
32 38 0.018629420 ubox
32 40 0.009879712 ubox
32 44 0.314566704 ubox
32 47 0.011362665 ubox
32 48 0.697037155 ubox
32 50 0.296221755 ubox
32 51 0.006032767 ubox
33 37 0.017461787 ubox
33 41 0.003806129 ubox
33 43 0.314034046 ubox
33 45 0.004444579 ubox
33 46 0.003932568 ubox
33 49 0.294934696 ubox
34 40 0.003517593 ubox
34 42 0.313897062 ubox
34 44 0.017199440 ubox
34 47 0.923720565 ubox
34 48 0.210120411 ubox
34 50 0.023504424 ubox
35 41 0.314012052 ubox
35 43 0.016944620 ubox
35 46 0.947854368 ubox
35 49 0.023482807 ubox
36 43 0.003692928 ubox
36 45 0.947862983 ubox
37 42 0.003293110 ubox
37 44 0.947764252 ubox
37 47 0.024852136 ubox
38 43 0.943523290 ubox
38 46 0.024891166 ubox
39 45 0.024871843 ubox
56 66 0.005843547 ubox
56 68 0.016147000 ubox
57 65 0.005951631 ubox
57 67 0.017204922 ubox
58 65 0.135106526 ubox
59 64 0.122777914 ubox
61 68 0.151278137 ubox
61 72 0.013187035 ubox
61 84 0.031251438 ubox
61 88 0.012389447 ubox
62 67 0.143033717 ubox
62 71 0.013213087 ubox
62 83 0.031338470 ubox
62 87 0.012362631 ubox
63 70 0.012976355 ubox
63 82 0.031672128 ubox
63 83 0.010805019 ubox
64 69 0.010560242 ubox
64 81 0.030898542 ubox
64 82 0.014217350 ubox
64 87 0.005768184 ubox
65 77 0.011192334 ubox
65 80 0.057503651 ubox
65 84 0.097379029 ubox
65 86 0.011558299 ubox
65 88 0.019656253 ubox
65 89 0.003702983 ubox
66 76 0.011734256 ubox
66 81 0.096701547 ubox
66 83 0.097519703 ubox
66 87 0.019752113 ubox
67 75 0.011320142 ubox
67 77 0.172986834 ubox
67 80 0.270306247 ubox
67 84 0.029292734 ubox
67 86 0.018607522 ubox
67 88 0.072897753 ubox
67 89 0.004535956 ubox
68 76 0.180169465 ubox
68 81 0.096248107 ubox
68 83 0.029417723 ubox
68 87 0.073187945 ubox
69 75 0.180558220 ubox
69 78 0.004239539 ubox
69 79 0.449869282 ubox
69 80 0.098578585 ubox
69 85 0.009629318 ubox
69 86 0.072785406 ubox
69 95 0.008428489 ubox
70 74 0.177652697 ubox
70 77 0.003381835 ubox
70 78 0.454802057 ubox
70 79 0.087261526 ubox
70 84 0.010288221 ubox
70 85 0.072487218 ubox
70 94 0.011091939 ubox
71 77 0.457516470 ubox
72 76 0.453117305 ubox
72 93 0.072624437 ubox
73 92 0.072490462 ubox
73 93 0.071488780 ubox
74 92 0.062925725 ubox
74 93 0.774696289 ubox
75 81 0.095929821 ubox
75 87 0.031750429 ubox
75 90 0.087145155 ubox
75 92 0.785158262 ubox
76 80 0.090621351 ubox
76 84 0.047629833 ubox
76 86 0.032231675 ubox
76 88 0.026426746 ubox
76 89 0.087127194 ubox
76 91 0.786262568 ubox
76 94 0.088390350 ubox
77 83 0.046701620 ubox
77 87 0.024441224 ubox
77 90 0.779976264 ubox
77 93 0.081730330 ubox
78 92 0.081633566 ubox
78 93 0.056964765 ubox
79 92 0.057550179 ubox
79 93 0.051840390 ubox
80 87 0.792500325 ubox
80 90 0.101901127 ubox
80 92 0.052444891 ubox
81 86 0.784629531 ubox
81 89 0.103500478 ubox
81 91 0.049242989 ubox
83 91 0.059885201 ubox
83 94 0.281740516 ubox
84 90 0.060384328 ubox
84 93 0.279757047 ubox
85 92 0.276627300 ubox
85 93 0.057549036 ubox
86 92 0.069576273 ubox
87 91 0.074460048 ubox
87 94 0.037256206 ubox
88 93 0.037324646 ubox
5 70 0.9500000 lbox
6 69 0.9500000 lbox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
18 57 0.9500000 lbox
19 56 0.9500000 lbox
20 55 0.9500000 lbox
21 54 0.9500000 lbox
22 53 0.9500000 lbox
23 52 0.9500000 lbox
24 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
34 47 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
74 93 0.9500000 lbox
75 92 0.9500000 lbox
76 91 0.9500000 lbox
77 90 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
