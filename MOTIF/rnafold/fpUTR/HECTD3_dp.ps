%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HECTD3)
} def

/sequence { (\
AAAGGCGGGGAAGGGCGUGGUGGGAAGCUCUGUCCGCGGUCGCGCCAGCUGUUCCCCGGGCAGGGUCGCCUCUAGGUGCUCACCUCCGCCACUUCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 94 0.024794951 ubox
2 93 0.029449530 ubox
2 94 0.038864315 ubox
3 93 0.038154340 ubox
3 94 0.010733558 ubox
4 87 0.004108372 ubox
4 90 0.595817480 ubox
4 92 0.019567143 ubox
4 93 0.003566722 ubox
4 98 0.649648661 ubox
5 86 0.004109640 ubox
5 89 0.596745689 ubox
5 92 0.003349563 ubox
5 97 0.655241259 ubox
6 58 0.022108827 ubox
6 88 0.596739296 ubox
6 96 0.655237370 ubox
7 57 0.027533079 ubox
7 85 0.019266940 ubox
7 86 0.023653465 ubox
7 87 0.595857444 ubox
7 95 0.649428197 ubox
7 98 0.457152359 ubox
8 56 0.028006082 ubox
8 84 0.042902513 ubox
8 85 0.029891751 ubox
8 86 0.594367233 ubox
8 93 0.006304706 ubox
8 94 0.644621525 ubox
8 95 0.008086734 ubox
8 97 0.460434591 ubox
8 98 0.040712710 ubox
9 55 0.028047819 ubox
9 83 0.056098356 ubox
9 84 0.242089359 ubox
9 85 0.541986111 ubox
9 92 0.008629618 ubox
9 93 0.641897310 ubox
9 94 0.009252125 ubox
9 95 0.013988226 ubox
9 97 0.041214698 ubox
10 54 0.028050574 ubox
10 81 0.026145775 ubox
10 83 0.242524359 ubox
10 84 0.540891668 ubox
10 92 0.639283590 ubox
10 93 0.006913142 ubox
10 94 0.020514431 ubox
10 95 0.469980786 ubox
11 53 0.028042429 ubox
11 80 0.023175529 ubox
11 93 0.023633546 ubox
11 94 0.473323509 ubox
12 52 0.027926153 ubox
12 80 0.492106476 ubox
12 93 0.477334008 ubox
13 79 0.500414408 ubox
13 80 0.031059778 ubox
13 81 0.321243155 ubox
13 87 0.004156040 ubox
13 90 0.036734100 ubox
13 92 0.477605757 ubox
14 50 0.027945732 ubox
14 79 0.034660653 ubox
14 80 0.321485627 ubox
14 81 0.006068620 ubox
14 86 0.004152639 ubox
14 87 0.004993469 ubox
14 89 0.026909648 ubox
14 90 0.800551107 ubox
15 49 0.028052166 ubox
15 77 0.501900726 ubox
15 79 0.321128318 ubox
15 85 0.003951169 ubox
15 86 0.004997111 ubox
15 89 0.801476228 ubox
16 48 0.028014777 ubox
16 76 0.503917576 ubox
16 78 0.319303925 ubox
16 88 0.801847204 ubox
17 77 0.280752152 ubox
17 87 0.799629090 ubox
18 47 0.026897701 ubox
18 74 0.568568712 ubox
18 76 0.094111867 ubox
19 46 0.028049253 ubox
19 70 0.012406575 ubox
19 72 0.011007409 ubox
19 73 0.582601511 ubox
19 84 0.800929098 ubox
19 85 0.025100314 ubox
19 86 0.018140125 ubox
19 87 0.004146414 ubox
20 45 0.028052125 ubox
20 69 0.012440108 ubox
20 71 0.006759717 ubox
20 72 0.582387700 ubox
20 83 0.801538956 ubox
20 84 0.018607899 ubox
20 85 0.009987944 ubox
20 86 0.004549656 ubox
21 44 0.028040929 ubox
21 68 0.012439548 ubox
21 74 0.015846048 ubox
21 82 0.801598146 ubox
22 43 0.028031245 ubox
22 67 0.012368842 ubox
22 70 0.170055353 ubox
22 71 0.537112149 ubox
22 72 0.064990986 ubox
22 73 0.009623609 ubox
22 80 0.004916706 ubox
22 81 0.801546094 ubox
22 84 0.010529720 ubox
23 41 0.003375084 ubox
23 66 0.005013277 ubox
23 69 0.167330522 ubox
23 70 0.572620998 ubox
23 71 0.016203482 ubox
23 72 0.007218096 ubox
23 79 0.031490751 ubox
23 80 0.798198536 ubox
23 81 0.004684508 ubox
23 83 0.010527554 ubox
24 40 0.003264545 ubox
24 41 0.027801750 ubox
24 67 0.076723856 ubox
24 69 0.573506959 ubox
24 70 0.015460273 ubox
24 71 0.005097878 ubox
24 72 0.003361247 ubox
24 79 0.794994004 ubox
24 80 0.005104438 ubox
24 81 0.008167717 ubox
25 40 0.027234574 ubox
25 66 0.051836278 ubox
25 71 0.003436911 ubox
25 80 0.007893960 ubox
26 80 0.006870803 ubox
27 37 0.027334256 ubox
27 66 0.972966432 ubox
27 77 0.005129489 ubox
27 79 0.006853209 ubox
28 36 0.027322409 ubox
28 64 0.012539481 ubox
28 65 0.999029851 ubox
28 76 0.004845749 ubox
28 78 0.003722249 ubox
29 64 0.998721348 ubox
29 75 0.004224708 ubox
30 39 0.005404282 ubox
30 63 0.999528595 ubox
31 38 0.005401250 ubox
31 62 0.999358657 ubox
32 37 0.005332856 ubox
32 61 0.999590999 ubox
33 60 0.999242287 ubox
34 59 0.999550450 ubox
34 60 0.006970963 ubox
35 58 0.999554058 ubox
35 59 0.006889187 ubox
36 45 0.008013041 ubox
36 49 0.007900967 ubox
36 52 0.016792654 ubox
36 57 0.998280567 ubox
37 44 0.008746732 ubox
37 48 0.008625281 ubox
37 51 0.028685694 ubox
37 58 0.006181258 ubox
38 43 0.008713371 ubox
38 46 0.010082852 ubox
38 50 0.028664277 ubox
38 53 0.017287457 ubox
38 54 0.044959845 ubox
38 55 0.862009657 ubox
38 56 0.499816936 ubox
38 57 0.007603697 ubox
39 45 0.010132722 ubox
39 49 0.028430876 ubox
39 52 0.018184600 ubox
39 53 0.038237748 ubox
39 54 0.863204193 ubox
39 55 0.497770614 ubox
39 56 0.007839820 ubox
40 44 0.009508261 ubox
40 48 0.027852712 ubox
40 51 0.166558830 ubox
41 51 0.571723108 ubox
42 49 0.882850950 ubox
42 50 0.127815079 ubox
42 52 0.436201860 ubox
43 48 0.891373537 ubox
43 51 0.439301206 ubox
44 50 0.356114922 ubox
44 52 0.033826092 ubox
45 51 0.034762035 ubox
58 85 0.003438681 ubox
58 86 0.004605492 ubox
58 87 0.005056809 ubox
59 70 0.003618314 ubox
59 84 0.003928077 ubox
59 85 0.004601930 ubox
59 86 0.005046063 ubox
59 87 0.006149957 ubox
59 90 0.024409431 ubox
59 98 0.007910915 ubox
60 69 0.003622049 ubox
60 83 0.003930904 ubox
60 84 0.005697701 ubox
60 86 0.006157649 ubox
60 89 0.024450456 ubox
60 97 0.008002819 ubox
61 68 0.003620917 ubox
61 88 0.024427986 ubox
61 96 0.007996848 ubox
62 85 0.009697515 ubox
63 81 0.008164674 ubox
63 84 0.010206974 ubox
63 85 0.016537021 ubox
63 86 0.015377573 ubox
63 94 0.007451396 ubox
64 80 0.008869124 ubox
64 83 0.010131616 ubox
64 84 0.022766567 ubox
64 85 0.003342162 ubox
64 93 0.007753569 ubox
65 79 0.010107108 ubox
65 83 0.022846043 ubox
65 92 0.007816248 ubox
66 82 0.022621397 ubox
66 91 0.007729269 ubox
67 75 0.010858567 ubox
67 78 0.770496944 ubox
68 77 0.798407372 ubox
68 79 0.015240093 ubox
68 89 0.007826942 ubox
69 76 0.800426870 ubox
69 78 0.016406872 ubox
69 88 0.007822330 ubox
70 75 0.797829636 ubox
70 76 0.016392468 ubox
71 75 0.015574004 ubox
74 80 0.004305786 ubox
74 85 0.013500943 ubox
75 79 0.004557200 ubox
75 84 0.015625742 ubox
76 83 0.015631740 ubox
77 82 0.014623703 ubox
88 97 0.004428781 ubox
89 96 0.004433124 ubox
4 98 0.9500000 lbox
5 97 0.9500000 lbox
6 96 0.9500000 lbox
7 95 0.9500000 lbox
8 94 0.9500000 lbox
9 93 0.9500000 lbox
10 92 0.9500000 lbox
14 90 0.9500000 lbox
15 89 0.9500000 lbox
16 88 0.9500000 lbox
17 87 0.9500000 lbox
19 84 0.9500000 lbox
20 83 0.9500000 lbox
21 82 0.9500000 lbox
22 81 0.9500000 lbox
23 80 0.9500000 lbox
24 79 0.9500000 lbox
27 66 0.9500000 lbox
28 65 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
31 62 0.9500000 lbox
32 61 0.9500000 lbox
33 60 0.9500000 lbox
34 59 0.9500000 lbox
35 58 0.9500000 lbox
36 57 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
