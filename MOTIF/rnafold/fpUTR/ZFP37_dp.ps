%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZFP37)
} def

/sequence { (\
ACGGCUGAGUGUUUGCCAAGAUGGCCGCGCCCGUGCGCUAUUACCGAAGGGCGCCGCCAUCGCGGCUGCCGGACCCGCUAAGGCCGCCCUCCGGGUAGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.021638375 ubox
1 12 0.017140546 ubox
2 9 0.022935973 ubox
2 11 0.019698580 ubox
2 15 0.015951076 ubox
2 71 0.004117584 ubox
2 77 0.005286299 ubox
2 101 0.017716487 ubox
3 10 0.018158442 ubox
3 13 0.026630266 ubox
3 14 0.013386014 ubox
3 17 0.996501196 ubox
3 70 0.004165656 ubox
3 75 0.006376060 ubox
3 76 0.005256969 ubox
3 100 0.018026014 ubox
3 103 0.005839994 ubox
4 10 0.005428905 ubox
4 12 0.033576510 ubox
4 13 0.010253785 ubox
4 16 0.997540878 ubox
4 69 0.004165687 ubox
4 74 0.006565832 ubox
4 75 0.005008682 ubox
4 99 0.018026771 ubox
4 102 0.005296959 ubox
5 9 0.006143919 ubox
5 11 0.035405377 ubox
5 15 0.996828295 ubox
5 68 0.004148185 ubox
5 72 0.008152446 ubox
5 98 0.018016361 ubox
5 101 0.005198753 ubox
6 15 0.027191986 ubox
6 18 0.023411568 ubox
6 19 0.003854836 ubox
6 71 0.008217781 ubox
6 97 0.017614661 ubox
7 13 0.339039783 ubox
7 14 0.209718609 ubox
7 17 0.025342633 ubox
7 70 0.008438870 ubox
7 96 0.013939103 ubox
8 12 0.320632728 ubox
8 13 0.209432709 ubox
8 14 0.040702760 ubox
9 13 0.035091339 ubox
9 16 0.026561598 ubox
9 69 0.008263448 ubox
10 15 0.025487288 ubox
10 18 0.006276675 ubox
10 68 0.008105375 ubox
11 17 0.007135679 ubox
11 67 0.006769560 ubox
11 69 0.008608363 ubox
11 70 0.004112584 ubox
12 68 0.008630942 ubox
14 19 0.003238886 ubox
15 63 0.003434948 ubox
15 66 0.019334660 ubox
16 62 0.003442933 ubox
16 65 0.019369805 ubox
17 64 0.019346853 ubox
20 61 0.998274417 ubox
21 60 0.999475938 ubox
22 59 0.999528386 ubox
23 58 0.999985516 ubox
24 57 0.999992520 ubox
25 56 0.998962072 ubox
26 56 0.031193778 ubox
27 54 0.998959029 ubox
27 55 0.031202413 ubox
28 53 0.999975234 ubox
29 52 0.999979138 ubox
30 51 0.999967008 ubox
31 50 0.999937354 ubox
31 51 0.006978014 ubox
32 46 0.016470461 ubox
32 49 0.998976303 ubox
32 50 0.009850565 ubox
33 41 0.029017372 ubox
33 44 0.299662292 ubox
33 45 0.031085964 ubox
34 40 0.029196965 ubox
34 43 0.300167051 ubox
34 46 0.171158919 ubox
35 39 0.024597051 ubox
35 42 0.274644382 ubox
35 45 0.183642746 ubox
36 46 0.737565274 ubox
37 45 0.728915394 ubox
38 49 0.004897280 ubox
39 48 0.009739314 ubox
41 47 0.005063259 ubox
41 48 0.013714974 ubox
42 46 0.005442826 ubox
42 47 0.012839869 ubox
42 48 0.005205356 ubox
62 87 0.006193825 ubox
62 102 0.997689678 ubox
63 86 0.006242758 ubox
63 101 0.999678083 ubox
64 85 0.006256108 ubox
64 100 0.999764653 ubox
65 84 0.006255795 ubox
65 99 0.999782002 ubox
66 83 0.006238917 ubox
66 98 0.999773924 ubox
67 82 0.006139934 ubox
67 97 0.998919201 ubox
68 78 0.003577685 ubox
68 84 0.004341922 ubox
68 87 0.003713737 ubox
68 96 0.986714565 ubox
69 83 0.004377464 ubox
69 94 0.588207172 ubox
69 95 0.807682501 ubox
70 77 0.004735805 ubox
70 82 0.004377784 ubox
70 86 0.028246716 ubox
70 93 0.816942614 ubox
70 94 0.574285776 ubox
71 76 0.005652038 ubox
71 79 0.003858977 ubox
71 85 0.046791350 ubox
71 88 0.035477498 ubox
71 89 0.037091657 ubox
71 90 0.014041140 ubox
71 91 0.009502409 ubox
71 92 0.994478120 ubox
72 78 0.004057290 ubox
72 84 0.046842947 ubox
72 87 0.035578256 ubox
72 88 0.037060442 ubox
72 89 0.014920825 ubox
72 90 0.008479132 ubox
72 91 0.995641957 ubox
73 90 0.969711165 ubox
73 96 0.030327765 ubox
74 83 0.161247952 ubox
74 95 0.034925500 ubox
75 82 0.160144683 ubox
75 83 0.171778023 ubox
75 94 0.037236528 ubox
76 82 0.172819587 ubox
76 86 0.557583088 ubox
76 93 0.039415654 ubox
77 84 0.688543070 ubox
77 85 0.408162366 ubox
77 87 0.529679305 ubox
77 92 0.039326405 ubox
77 102 0.005107832 ubox
78 83 0.789411638 ubox
78 86 0.530198234 ubox
78 101 0.005123431 ubox
81 90 0.074326130 ubox
82 88 0.027380726 ubox
82 89 0.110172299 ubox
82 90 0.003773641 ubox
82 100 0.009632101 ubox
83 87 0.027199080 ubox
83 88 0.108862776 ubox
83 89 0.006104944 ubox
83 99 0.009643587 ubox
84 98 0.009637579 ubox
85 93 0.008028105 ubox
86 92 0.009578701 ubox
86 96 0.011399859 ubox
87 94 0.017511331 ubox
87 95 0.015172778 ubox
88 93 0.019349787 ubox
88 94 0.017772303 ubox
88 95 0.008887183 ubox
89 93 0.018172077 ubox
89 94 0.010560155 ubox
3 17 0.9500000 lbox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
20 61 0.9500000 lbox
21 60 0.9500000 lbox
22 59 0.9500000 lbox
23 58 0.9500000 lbox
24 57 0.9500000 lbox
25 56 0.9500000 lbox
27 54 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
62 102 0.9500000 lbox
63 101 0.9500000 lbox
64 100 0.9500000 lbox
65 99 0.9500000 lbox
66 98 0.9500000 lbox
67 97 0.9500000 lbox
68 96 0.9500000 lbox
69 95 0.9500000 lbox
70 94 0.9500000 lbox
71 92 0.9500000 lbox
72 91 0.9500000 lbox
73 90 0.9500000 lbox
77 84 0.9500000 lbox
78 83 0.9500000 lbox
showpage
end
%%EOF
