%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUUGCUAGGCAGCGGCAGUGGCGGCGGCAGCGGCGGCUGGAGCCUCUGAUUGGGUUUCGGAGUCCGGUACUGGAGCCAAUCAGCGCGGGCAGCGAACCGGGGGAGCGAGGCACGGAGUGUACCUCACAGCCUUCUAGGAUCUCCAGAGUGGACAGGAAUCUCACUUGGAGGGACC\
) } def
/len { sequence length } bind def

/coor [
[180.93957520 251.52691650]
[195.69615173 254.21243286]
[187.26707458 241.80474854]
[178.83799744 229.39706421]
[170.40892029 216.98937988]
[161.97985840 204.58168030]
[153.55078125 192.17399597]
[138.91787720 189.64141846]
[130.19285583 177.17832947]
[132.94847107 161.84718323]
[124.51940155 149.43948364]
[116.09032440 137.03179932]
[107.66125488 124.62411499]
[86.41236115 125.08383179]
[69.91899872 108.52895355]
[56.75667953 115.72293854]
[52.21251678 130.62220764]
[38.76157379 137.73043823]
[24.58539963 133.30644226]
[11.42308331 140.50042725]
[-1.73923302 147.69441223]
[-14.90154934 154.88839722]
[-23.30023003 168.29634094]
[-38.17905807 167.61094666]
[-51.34137344 174.80493164]
[-59.74005508 188.21286011]
[-74.61888123 187.52746582]
[-87.78119659 194.72145081]
[-95.84406281 209.00158691]
[-112.24282074 208.88841248]
[-120.10783386 194.49836731]
[-111.34825134 180.63467407]
[-94.97518158 181.55912781]
[-81.81286621 174.36514282]
[-74.35564423 161.47177124]
[-58.53535843 161.64260864]
[-45.37304306 154.44862366]
[-37.91581726 141.55525208]
[-22.09553528 141.72608948]
[-8.93321896 134.53210449]
[4.22909784 127.33811188]
[17.39141464 120.14412689]
[21.32251740 105.82344818]
[34.56849670 98.34021759]
[49.56269455 102.56062317]
[62.72500992 95.36663055]
[67.51023102 81.15039062]
[61.37713242 67.46151733]
[55.24403381 53.77265167]
[49.11093140 40.08378601]
[43.94916534 35.87765121]
[42.00117493 30.49991608]
[43.01221085 25.80521202]
[37.36329269 11.90953922]
[24.99855423 2.03918648]
[27.37319756 -12.66490555]
[21.72427940 -26.56057739]
[16.07535934 -40.45624924]
[10.42644024 -54.35192108]
[4.27791357 -61.14738083]
[4.80267859 -68.54136658]
[-0.60150331 -82.53404236]
[-14.77545834 -88.99443817]
[-20.05673599 -103.26197815]
[-13.81038284 -116.73486328]
[-19.21456528 -130.72753906]
[-24.61874580 -144.72019958]
[-30.02292824 -158.71287537]
[-35.42710876 -172.70555115]
[-48.30435181 -176.71310425]
[-56.39671326 -187.25738525]
[-56.92143631 -200.34375000]
[-49.91082764 -211.17500305]
[-55.06860733 -225.26036072]
[-60.22638702 -239.34571838]
[-75.18697357 -243.46401978]
[-84.84333038 -255.61039734]
[-85.48239136 -271.11431885]
[-76.85842133 -284.01419067]
[-62.28752136 -289.34976196]
[-47.37248993 -285.06939697]
[-37.84846497 -272.81900024]
[-37.37763214 -257.30905151]
[-46.14102936 -244.50349426]
[-40.98324966 -230.41813660]
[-35.82546997 -216.33277893]
[-20.28984261 -209.92634583]
[-14.05870438 -193.95686340]
[-21.43444061 -178.10972595]
[-16.03025818 -164.11706543]
[-10.62607670 -150.12438965]
[-5.22189426 -136.13171387]
[0.18228742 -122.13904572]
[13.86312389 -116.36234283]
[19.54306412 -102.24877167]
[13.39116669 -87.93821716]
[18.79534912 -73.94554901]
[24.32211304 -60.00084305]
[29.97103119 -46.10517120]
[35.61994934 -32.20949936]
[41.26887131 -18.31382561]
[53.22955704 -9.43738461]
[51.25896454 6.26061964]
[56.90788269 20.15629196]
[62.79980087 33.95068741]
[68.93289948 47.63955307]
[75.06600189 61.32841873]
[81.19909668 75.01728821]
[101.35838318 71.50478363]
[117.39650726 80.96311188]
[130.29824829 73.31163025]
[143.19998169 65.66015625]
[156.10173035 58.00867844]
[164.02468872 44.31425476]
[178.91841125 44.47706985]
[191.82014465 36.82559204]
[197.16795349 21.70009804]
[212.37437439 16.58695984]
[225.77435303 25.40853691]
[227.08856201 41.39767075]
[215.30886841 52.28886795]
[199.47161865 49.72732925]
[186.56988525 57.37880707]
[179.56974792 70.52594757]
[163.75320435 70.91041565]
[150.85147095 78.56189728]
[137.94972229 86.21337128]
[125.04798889 93.86485291]
[125.78700256 99.73152161]
[125.17029572 105.61231232]
[123.23027039 111.19804382]
[120.06893921 116.19503784]
[128.49801636 128.60272217]
[136.92709351 141.01042175]
[145.35615540 153.41810608]
[160.62403870 156.50512695]
[168.99555969 169.20835876]
[165.95846558 183.74491882]
[174.38754272 196.15261841]
[182.81661987 208.56030273]
[191.24568176 220.96798706]
[199.67475891 233.37567139]
[208.10383606 245.78337097]
[217.27870178 257.65020752]
[227.16476440 268.93139648]
[237.05082703 280.21261597]
[246.93688965 291.49383545]
[256.82296753 302.77505493]
[264.85705566 307.18362427]
[266.78140259 314.34207153]
[276.46795654 325.79507446]
[286.15451050 337.24804688]
[295.84106445 348.70101929]
[305.62777710 360.06854248]
[315.51382446 371.34976196]
[331.29840088 372.13894653]
[341.83963013 383.91427612]
[340.88360596 399.68960571]
[328.99749756 410.10574341]
[313.23312378 408.98300171]
[302.94323730 396.98742676]
[304.23260498 381.23580933]
[294.34655762 369.95458984]
[287.55361938 366.98770142]
[284.38809204 358.38757324]
[274.70153809 346.93460083]
[265.01498413 335.48162842]
[255.32843018 324.02865601]
[245.54174805 312.66110229]
[235.65568542 301.37991333]
[225.76962280 290.09869385]
[215.88356018 278.81747437]
[205.99749756 267.53625488]
[204.88113403 282.49465942]
[194.51722717 293.33853149]
[179.62464905 295.13046265]
[166.98423767 287.05459595]
[162.35137939 272.78796387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[7 138]
[10 135]
[11 134]
[12 133]
[13 132]
[15 46]
[16 45]
[19 42]
[20 41]
[21 40]
[22 39]
[24 37]
[25 36]
[27 34]
[28 33]
[47 108]
[48 107]
[49 106]
[50 105]
[53 104]
[54 103]
[56 101]
[57 100]
[58 99]
[59 98]
[61 97]
[62 96]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[73 86]
[74 85]
[75 84]
[110 128]
[111 127]
[112 126]
[113 125]
[115 123]
[116 122]
[144 173]
[145 172]
[146 171]
[147 170]
[148 169]
[150 168]
[151 167]
[152 166]
[153 165]
[154 163]
[155 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
