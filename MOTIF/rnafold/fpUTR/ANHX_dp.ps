%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANHX)
} def

/sequence { (\
GUGCGCCGGCGCUGAAGCGGGUCCCGGAGGAGUGGCCACGACCCAGCACAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.040919633 ubox
1 12 0.853514612 ubox
1 18 0.007595912 ubox
1 39 0.041903317 ubox
1 42 0.004958462 ubox
1 47 0.005050462 ubox
1 49 0.443479480 ubox
2 8 0.003420550 ubox
2 9 0.040550847 ubox
2 11 0.869484068 ubox
2 14 0.006056725 ubox
2 17 0.007540078 ubox
2 38 0.041938007 ubox
2 41 0.004960034 ubox
2 46 0.004763417 ubox
2 48 0.443817977 ubox
2 50 0.017604446 ubox
3 7 0.004474334 ubox
3 10 0.887143441 ubox
3 12 0.091677857 ubox
3 18 0.005893571 ubox
3 37 0.041927464 ubox
3 47 0.443762256 ubox
3 49 0.019512041 ubox
4 9 0.886909028 ubox
4 11 0.093695535 ubox
4 14 0.004959192 ubox
4 17 0.005911962 ubox
4 40 0.007387939 ubox
4 46 0.443207904 ubox
5 10 0.092705159 ubox
5 12 0.082973333 ubox
5 18 0.045438335 ubox
5 22 0.084265002 ubox
5 36 0.044536255 ubox
5 39 0.011259110 ubox
5 47 0.020582509 ubox
6 11 0.082896492 ubox
6 17 0.045367151 ubox
6 20 0.009481098 ubox
6 21 0.092058782 ubox
6 27 0.274042305 ubox
6 35 0.044528639 ubox
6 46 0.020565502 ubox
6 52 0.026742865 ubox
7 14 0.027216672 ubox
7 19 0.011359308 ubox
7 20 0.092122752 ubox
7 26 0.274938442 ubox
7 34 0.044097362 ubox
7 40 0.013905053 ubox
7 51 0.027243966 ubox
8 13 0.021313866 ubox
8 18 0.016764122 ubox
8 23 0.003323463 ubox
8 24 0.011031664 ubox
8 25 0.274752574 ubox
8 33 0.029945571 ubox
8 37 0.032633076 ubox
8 39 0.007603738 ubox
8 43 0.082770921 ubox
8 44 0.012432515 ubox
9 18 0.310616707 ubox
9 22 0.004637368 ubox
9 23 0.015298030 ubox
9 24 0.274289575 ubox
9 33 0.025795925 ubox
9 36 0.033175539 ubox
9 42 0.082913887 ubox
9 43 0.011155593 ubox
10 17 0.311152066 ubox
10 19 0.081658627 ubox
10 21 0.010690727 ubox
10 32 0.036507797 ubox
10 34 0.025203571 ubox
10 35 0.024292458 ubox
10 40 0.082458397 ubox
11 18 0.116990265 ubox
11 22 0.259401841 ubox
11 33 0.037839168 ubox
11 36 0.004329711 ubox
11 39 0.082300406 ubox
11 47 0.056799278 ubox
12 17 0.116679976 ubox
12 20 0.033555337 ubox
12 21 0.261999848 ubox
12 29 0.006330250 ubox
12 30 0.037058059 ubox
12 32 0.039507622 ubox
12 35 0.004440611 ubox
12 46 0.056906677 ubox
12 51 0.233487531 ubox
12 52 0.030394432 ubox
13 19 0.037037729 ubox
13 20 0.258447371 ubox
13 28 0.005437089 ubox
13 29 0.036900456 ubox
13 31 0.039232915 ubox
13 34 0.004370347 ubox
13 38 0.079282742 ubox
13 40 0.010281301 ubox
13 45 0.057064785 ubox
13 48 0.045271621 ubox
13 50 0.351044899 ubox
13 51 0.093955312 ubox
14 18 0.039798524 ubox
14 23 0.003497188 ubox
14 33 0.003517968 ubox
14 37 0.078796168 ubox
14 39 0.010987656 ubox
14 44 0.052168209 ubox
14 47 0.048655859 ubox
14 49 0.365583916 ubox
15 22 0.003308248 ubox
17 33 0.007287857 ubox
17 36 0.082417315 ubox
17 47 0.872794710 ubox
18 26 0.055177754 ubox
18 32 0.007313317 ubox
18 34 0.008179436 ubox
18 35 0.082693903 ubox
18 40 0.050802293 ubox
18 46 0.873440920 ubox
19 25 0.055280775 ubox
19 33 0.008234112 ubox
19 39 0.050745596 ubox
19 44 0.946446424 ubox
20 24 0.054389290 ubox
20 37 0.052223905 ubox
20 43 0.950099301 ubox
20 44 0.009580151 ubox
21 33 0.004679271 ubox
21 36 0.052249730 ubox
21 42 0.950147136 ubox
21 43 0.007478370 ubox
22 28 0.005085542 ubox
22 31 0.088948349 ubox
22 35 0.046923004 ubox
22 41 0.949199786 ubox
23 27 0.007423873 ubox
23 30 0.096923819 ubox
23 34 0.045179216 ubox
23 35 0.014476887 ubox
23 40 0.942166888 ubox
24 29 0.096753944 ubox
24 30 0.051596390 ubox
24 34 0.013762448 ubox
24 35 0.538296086 ubox
25 29 0.051343646 ubox
25 34 0.538676746 ubox
25 40 0.113331553 ubox
26 33 0.498553673 ubox
26 37 0.748145473 ubox
26 39 0.188410733 ubox
26 43 0.006854637 ubox
26 44 0.012061993 ubox
27 36 0.748937371 ubox
27 42 0.006867353 ubox
27 43 0.011937334 ubox
29 37 0.224283421 ubox
29 43 0.047105382 ubox
29 44 0.265796354 ubox
30 36 0.224093342 ubox
30 42 0.047247384 ubox
30 43 0.265929721 ubox
32 39 0.048757013 ubox
32 42 0.241095820 ubox
32 49 0.003937675 ubox
33 38 0.045654605 ubox
33 40 0.147249696 ubox
33 41 0.219383633 ubox
33 45 0.059131251 ubox
33 48 0.003921711 ubox
34 39 0.203369608 ubox
34 43 0.036567152 ubox
34 44 0.065300551 ubox
34 47 0.003700703 ubox
35 42 0.037254067 ubox
35 43 0.064681022 ubox
42 52 0.012204030 ubox
43 51 0.012259984 ubox
43 52 0.025353484 ubox
44 51 0.025805165 ubox
1 12 0.9500000 lbox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
19 44 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
showpage
end
%%EOF
