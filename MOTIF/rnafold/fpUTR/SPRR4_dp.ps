%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPRR4)
} def

/sequence { (\
AGGGCUCAGCCUCCUCUCCUGGGGUCCAGCUUGUCGCCUCUGGCUCACCUGUUCCUAGAGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.106388668 ubox
1 15 0.066091753 ubox
1 17 0.018143761 ubox
1 20 0.004235116 ubox
1 31 0.003710342 ubox
1 32 0.043263524 ubox
1 39 0.062706420 ubox
1 41 0.316197480 ubox
1 50 0.063902501 ubox
1 56 0.018972812 ubox
2 11 0.121422322 ubox
2 12 0.451549801 ubox
2 13 0.107605452 ubox
2 14 0.073965966 ubox
2 15 0.037402143 ubox
2 16 0.020314086 ubox
2 18 0.006290036 ubox
2 19 0.004628460 ubox
2 26 0.011635139 ubox
2 27 0.065276497 ubox
2 31 0.041661119 ubox
2 32 0.418928150 ubox
2 35 0.051516205 ubox
2 38 0.070977395 ubox
2 39 0.471051985 ubox
2 40 0.332815601 ubox
2 41 0.006147108 ubox
2 46 0.046881057 ubox
2 49 0.072189329 ubox
2 50 0.010077222 ubox
2 55 0.020071794 ubox
2 56 0.013216475 ubox
3 10 0.120538581 ubox
3 11 0.490733011 ubox
3 12 0.026281034 ubox
3 13 0.067068532 ubox
3 14 0.041081005 ubox
3 15 0.012851719 ubox
3 17 0.005637780 ubox
3 18 0.004670095 ubox
3 25 0.011668341 ubox
3 26 0.065336111 ubox
3 27 0.011611354 ubox
3 30 0.030541598 ubox
3 31 0.538911467 ubox
3 32 0.016700314 ubox
3 34 0.028198518 ubox
3 35 0.200909777 ubox
3 37 0.068872437 ubox
3 38 0.599310785 ubox
3 39 0.045643208 ubox
3 40 0.003815973 ubox
3 45 0.046165456 ubox
3 48 0.070635794 ubox
3 49 0.011813693 ubox
3 54 0.019685033 ubox
3 55 0.013702025 ubox
4 10 0.492156058 ubox
4 11 0.034262591 ubox
4 12 0.046352550 ubox
4 13 0.040954119 ubox
4 14 0.012628730 ubox
4 16 0.005662658 ubox
4 17 0.003943585 ubox
4 25 0.064026566 ubox
4 26 0.011640176 ubox
4 30 0.558417846 ubox
4 34 0.202715534 ubox
4 37 0.600615586 ubox
4 38 0.034991063 ubox
4 44 0.046221837 ubox
4 48 0.011116454 ubox
4 52 0.003660173 ubox
4 53 0.009744270 ubox
4 54 0.013632392 ubox
4 61 0.092976203 ubox
5 9 0.488998756 ubox
5 23 0.031079371 ubox
5 24 0.057665651 ubox
5 29 0.559274219 ubox
5 33 0.203042390 ubox
5 36 0.600983428 ubox
5 43 0.045990443 ubox
5 51 0.004678160 ubox
5 60 0.093086558 ubox
6 22 0.041164394 ubox
6 23 0.049462435 ubox
6 28 0.548430710 ubox
6 42 0.024413131 ubox
6 43 0.004526988 ubox
6 59 0.093012837 ubox
7 21 0.049529308 ubox
7 22 0.037700695 ubox
7 23 0.004404972 ubox
7 33 0.547824607 ubox
7 42 0.038606063 ubox
7 51 0.015600655 ubox
7 58 0.091907764 ubox
8 15 0.009034692 ubox
8 17 0.009818110 ubox
8 20 0.056397428 ubox
8 31 0.490775414 ubox
8 32 0.400840283 ubox
8 39 0.003948746 ubox
8 41 0.038530358 ubox
8 45 0.016441062 ubox
8 50 0.015334621 ubox
8 53 0.007837145 ubox
8 56 0.028504881 ubox
9 14 0.009306239 ubox
9 16 0.010075616 ubox
9 19 0.056484527 ubox
9 25 0.552899286 ubox
9 30 0.621453787 ubox
9 31 0.133528818 ubox
9 34 0.012553066 ubox
9 37 0.006954911 ubox
9 38 0.003645189 ubox
9 40 0.036317495 ubox
9 44 0.016984131 ubox
9 49 0.014674555 ubox
9 52 0.008135754 ubox
9 55 0.027362732 ubox
9 61 0.005399707 ubox
10 22 0.016520428 ubox
10 23 0.011543960 ubox
10 24 0.557546100 ubox
10 29 0.620410976 ubox
10 33 0.012657472 ubox
10 36 0.007455478 ubox
10 43 0.016972587 ubox
10 51 0.008303555 ubox
10 60 0.004815880 ubox
11 21 0.017354719 ubox
11 22 0.011896309 ubox
11 23 0.555721314 ubox
11 24 0.302144849 ubox
11 29 0.138999090 ubox
11 42 0.016827987 ubox
12 21 0.011743178 ubox
12 22 0.216381138 ubox
12 23 0.305695931 ubox
12 24 0.026425330 ubox
12 28 0.148449860 ubox
12 59 0.003685574 ubox
13 21 0.209664726 ubox
13 22 0.597118435 ubox
13 23 0.033266753 ubox
13 24 0.572377816 ubox
13 58 0.003293917 ubox
14 21 0.598722641 ubox
14 22 0.033774658 ubox
14 23 0.572773575 ubox
14 24 0.034474489 ubox
14 58 0.004778599 ubox
14 60 0.158979764 ubox
15 21 0.026644545 ubox
15 22 0.572036671 ubox
15 23 0.034492320 ubox
15 24 0.006656438 ubox
15 57 0.004518895 ubox
15 59 0.160603741 ubox
16 21 0.571343887 ubox
16 22 0.038877144 ubox
16 23 0.007524101 ubox
16 24 0.013160183 ubox
16 58 0.154455303 ubox
16 60 0.358335131 ubox
17 21 0.035083917 ubox
17 22 0.006947490 ubox
17 23 0.013108436 ubox
17 57 0.141974543 ubox
17 59 0.363578224 ubox
18 22 0.012711054 ubox
18 24 0.003285497 ubox
18 42 0.005558646 ubox
18 43 0.020927327 ubox
18 58 0.264568190 ubox
19 23 0.003266662 ubox
19 29 0.022657670 ubox
19 42 0.024633954 ubox
19 58 0.404661981 ubox
19 60 0.013813125 ubox
20 28 0.023240042 ubox
20 42 0.003500937 ubox
20 47 0.004099585 ubox
20 51 0.003466636 ubox
20 57 0.479841598 ubox
20 59 0.013620140 ubox
21 27 0.023298758 ubox
21 40 0.029757453 ubox
21 41 0.004223998 ubox
21 46 0.004402587 ubox
21 49 0.011573601 ubox
21 50 0.006166160 ubox
21 54 0.003196494 ubox
21 55 0.064920146 ubox
21 56 0.489282512 ubox
22 26 0.022922603 ubox
22 39 0.030247180 ubox
22 40 0.004315823 ubox
22 45 0.004194394 ubox
22 46 0.012991403 ubox
22 48 0.011527552 ubox
22 49 0.006525319 ubox
22 50 0.026814462 ubox
22 54 0.064734110 ubox
22 55 0.488720841 ubox
22 56 0.119798357 ubox
23 31 0.003759982 ubox
23 38 0.030823614 ubox
23 44 0.003951428 ubox
23 45 0.014506181 ubox
23 46 0.011521331 ubox
23 48 0.006494610 ubox
23 49 0.034452491 ubox
23 53 0.061935367 ubox
23 54 0.487580965 ubox
23 55 0.128240049 ubox
24 30 0.004633154 ubox
24 37 0.030826941 ubox
24 44 0.016123484 ubox
24 45 0.010348672 ubox
24 48 0.034880964 ubox
24 52 0.048231101 ubox
24 53 0.475707695 ubox
24 54 0.132386633 ubox
25 29 0.004392172 ubox
25 36 0.030080742 ubox
25 43 0.005953587 ubox
25 47 0.034164889 ubox
25 51 0.003547036 ubox
26 42 0.005877428 ubox
26 43 0.034308916 ubox
27 33 0.023046930 ubox
27 42 0.035873794 ubox
27 51 0.507369832 ubox
28 32 0.018759535 ubox
28 39 0.008434786 ubox
28 41 0.035743533 ubox
28 45 0.035914553 ubox
28 50 0.507973983 ubox
28 53 0.042043002 ubox
29 37 0.051508033 ubox
29 38 0.007390217 ubox
29 40 0.031119016 ubox
29 44 0.037769324 ubox
29 49 0.506522874 ubox
29 52 0.061954804 ubox
29 61 0.025979250 ubox
30 36 0.052626190 ubox
30 43 0.037848552 ubox
30 51 0.062339007 ubox
30 60 0.025983260 ubox
31 42 0.037239535 ubox
31 59 0.025729764 ubox
32 47 0.376163921 ubox
32 58 0.024201162 ubox
32 62 0.022002207 ubox
33 44 0.300101453 ubox
33 46 0.391781278 ubox
33 48 0.151803857 ubox
33 61 0.034249111 ubox
34 43 0.300289619 ubox
34 47 0.148210710 ubox
34 59 0.004713070 ubox
34 60 0.018847051 ubox
35 42 0.300751883 ubox
35 58 0.005293882 ubox
36 41 0.203934012 ubox
36 44 0.508860841 ubox
36 61 0.448084768 ubox
37 43 0.509362101 ubox
37 51 0.003188499 ubox
37 60 0.319543555 ubox
38 42 0.505693917 ubox
38 58 0.047129007 ubox
38 60 0.390424658 ubox
39 57 0.045931923 ubox
39 59 0.504744136 ubox
40 58 0.507267968 ubox
41 47 0.008254157 ubox
41 57 0.505681541 ubox
41 62 0.042277956 ubox
42 46 0.009481261 ubox
42 49 0.117691621 ubox
42 50 0.010569299 ubox
42 53 0.102071787 ubox
42 54 0.040657938 ubox
42 55 0.151587646 ubox
42 56 0.471920371 ubox
42 61 0.042121978 ubox
43 48 0.117214180 ubox
43 49 0.011722574 ubox
43 52 0.185265297 ubox
43 53 0.030975265 ubox
43 54 0.148158621 ubox
43 55 0.446091823 ubox
43 61 0.595814454 ubox
44 51 0.316662696 ubox
44 60 0.598048213 ubox
45 59 0.597908341 ubox
46 58 0.595352870 ubox
49 58 0.061765808 ubox
49 60 0.019861736 ubox
50 57 0.088428483 ubox
50 59 0.020127203 ubox
50 62 0.245054792 ubox
51 56 0.079508403 ubox
51 61 0.327965323 ubox
52 59 0.004439807 ubox
52 60 0.327903787 ubox
53 57 0.006512007 ubox
53 58 0.004757871 ubox
53 59 0.327334052 ubox
54 58 0.324733452 ubox
2 39 0.9500000 lbox
3 38 0.9500000 lbox
4 37 0.9500000 lbox
5 36 0.9500000 lbox
7 33 0.9500000 lbox
8 32 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
43 61 0.9500000 lbox
44 60 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
showpage
end
%%EOF
