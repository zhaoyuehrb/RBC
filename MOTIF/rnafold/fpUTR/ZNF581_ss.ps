%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGACCCUCUUCUCUCCCUUCGGCUUCUCUCUUUCGGCCGGCGCCGCCAGUUCCUGGGGCACACCCAGAGGUCCCCUUCUCGCCGCCGCCUGCAACUGCGAGGGUAGCCCGGGGCCGCUUGGAGUCGCCCGGACCUGAGAGGCUGCUGCACUGGGCCUCAGCCAGCCCUCCGG\
) } def
/len { sequence length } bind def

/coor [
[115.23713684 545.39581299]
[107.78879547 541.32806396]
[100.86782837 536.41357422]
[94.57006073 530.71990967]
[88.98274994 524.32543945]
[84.18335724 517.31823730]
[80.23851013 509.79486084]
[77.20303345 501.85906982]
[75.11921692 493.62039185]
[74.01621246 485.19247437]
[73.90964508 476.69174194]
[74.80136108 468.23559570]
[76.67943573 459.94088745]
[79.51828766 451.92227173]
[83.27907562 444.29064941]
[87.91017914 437.15164185]
[93.34794617 430.60403442]
[99.51757050 424.73852539]
[106.33408356 419.63641357]
[113.70354462 415.36853027]
[121.52435303 411.99411011]
[129.68862915 409.56011963]
[127.80863190 394.67840576]
[125.92863464 379.79669189]
[124.04863739 364.91497803]
[122.16864014 350.03323364]
[120.28863525 335.15151978]
[118.40863800 320.26980591]
[116.52864075 305.38809204]
[114.64864349 290.50637817]
[101.52926636 283.50494385]
[94.97068024 269.96060181]
[97.67673492 254.97625732]
[108.81591034 244.33554077]
[106.93591309 229.45382690]
[105.05591583 214.57209778]
[103.17591858 199.69038391]
[101.29591370 184.80865479]
[92.02447510 173.15148926]
[97.97114563 158.49038696]
[96.09114838 143.60867310]
[94.21115112 128.72695923]
[92.33115387 113.84523010]
[82.76979065 102.28752899]
[68.50394440 97.65227509]
[54.23809433 93.01702118]
[45.07506180 93.33908081]
[39.75909042 88.16840363]
[25.57874680 83.27780914]
[11.39840603 78.38721466]
[-2.78193593 73.49662018]
[-19.72690201 74.04837799]
[-24.94793320 57.91836929]
[-10.89361572 48.43614578]
[2.10865831 59.31627655]
[16.28899956 64.20687103]
[30.46934128 69.09746552]
[44.64968491 73.98806000]
[58.87335205 78.75117493]
[73.13919830 83.38642883]
[87.40504456 88.02168274]
[93.97734833 84.40853119]
[86.75124359 71.26381683]
[99.89606476 64.03791809]
[107.12194824 77.18222809]
[113.69424438 73.56907654]
[117.42459869 59.04032898]
[121.15494537 44.51158142]
[124.88529205 29.98283195]
[119.51390076 12.38567066]
[132.23564148 0.31818309]
[135.70458984 -14.27518654]
[139.17352295 -28.86855698]
[142.64247131 -43.46192551]
[146.11140442 -58.05529785]
[149.58035278 -72.64866638]
[139.64964294 -84.42522430]
[138.57014465 -99.61363983]
[146.54678345 -112.37441254]
[160.34280396 -117.92487335]
[163.81175232 -132.51824951]
[162.75132751 -141.62541199]
[167.47616577 -147.34129333]
[171.20651245 -161.87004089]
[174.93685913 -176.39878845]
[167.15327454 -189.89151001]
[171.14334106 -204.57258606]
[184.05456543 -211.90989685]
[187.78491211 -226.43864441]
[191.51525879 -240.96739197]
[181.52091980 -252.83721924]
[180.44581604 -268.31701660]
[188.70333862 -281.45446777]
[203.11833191 -287.19796753]
[218.14790344 -283.33901978]
[228.01289368 -271.36148071]
[228.92001343 -255.87094116]
[220.52044678 -242.82383728]
[206.04400635 -237.23704529]
[202.31365967 -222.70829773]
[198.58331299 -208.17955017]
[206.36271667 -195.52978516]
[202.78659058 -180.74243164]
[189.46560669 -172.66844177]
[185.73526001 -158.13969421]
[182.00491333 -143.61094666]
[178.40512085 -129.04930115]
[174.93618774 -114.45593262]
[184.75888062 -103.29113770]
[186.14010620 -88.30593872]
[178.34149170 -75.22791290]
[164.17372131 -69.17972565]
[160.70477295 -54.58635330]
[157.23583984 -39.99298477]
[153.76689148 -25.39961433]
[150.29795837 -10.80624485]
[146.82901001 3.78712487]
[152.90888977 14.26897907]
[150.11401367 26.47177315]
[139.41403198 33.71318054]
[135.68368530 48.24192810]
[131.95333862 62.77067566]
[128.22299194 77.29942322]
[124.70999146 104.38080597]
[107.21287537 111.96523285]
[109.09287262 126.84695435]
[110.97286987 141.72866821]
[112.85286713 156.61039734]
[122.25877380 169.33200073]
[116.17763519 182.92866516]
[118.05763245 197.81037903]
[119.93763733 212.69210815]
[121.81763458 227.57382202]
[123.69763184 242.45555115]
[137.13308716 249.99176025]
[143.48057556 263.83239746]
[140.49638367 278.58224487]
[129.53036499 288.62637329]
[131.41035461 303.50808716]
[133.29035950 318.38980103]
[135.17036438 333.27151489]
[137.05035400 348.15325928]
[138.93035889 363.03497314]
[140.81034851 377.91668701]
[142.69035339 392.79840088]
[144.57035828 407.68014526]
[167.56256104 410.94290161]
[188.32826233 421.30389404]
[204.73939514 437.69033813]
[215.11770630 458.41253662]
[218.40625000 481.33813477]
[214.27709961 504.11148071]
[203.16394043 524.39575195]
[186.21667480 540.11273193]
[193.20585632 553.38494873]
[200.19503784 566.65710449]
[207.18421936 579.92932129]
[222.56024170 582.01678467]
[233.74940491 592.76770020]
[236.44926453 608.04809570]
[229.62165833 621.98236084]
[215.89195251 629.21246338]
[200.53947449 626.95831299]
[189.46759033 616.08666992]
[186.93365479 600.77789307]
[193.91201782 586.91851807]
[186.92283630 573.64630127]
[179.93365479 560.37408447]
[172.94447327 547.10192871]
[164.90837097 549.79473877]
[156.61021423 551.52648926]
[148.16458130 552.27276611]
[139.68809509 552.02294922]
[131.29783630 550.78002930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 146]
[23 145]
[24 144]
[25 143]
[26 142]
[27 141]
[28 140]
[29 139]
[30 138]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
[40 128]
[41 127]
[42 126]
[43 125]
[44 61]
[45 60]
[46 59]
[48 58]
[49 57]
[50 56]
[51 55]
[66 123]
[67 122]
[68 121]
[69 120]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[80 108]
[81 107]
[83 106]
[84 105]
[85 104]
[88 101]
[89 100]
[90 99]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
