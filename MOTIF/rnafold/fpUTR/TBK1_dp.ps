%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:29 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TBK1)
} def

/sequence { (\
GCACCCGCACCGGCGCGCCGGCCGUCGGUCACGUGGCCUCCGGCCAGGGCUUGCGAAGCCGGAAGUGUCCUGAGUCUCGAGGAGGCCGCGGGAGCCCGCCGGCGGUGGCGCGGCGGAGACCCGGCUGGUAUAACAAGAGGAUUGCCUGAUCCAGCCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.910772091 ubox
1 16 0.005842955 ubox
1 95 0.007230569 ubox
1 114 0.004710366 ubox
1 125 0.005483493 ubox
1 155 0.003798755 ubox
2 7 0.910141973 ubox
2 15 0.005844596 ubox
2 94 0.007245333 ubox
2 113 0.004444007 ubox
2 124 0.005460364 ubox
2 127 0.006885178 ubox
2 154 0.003802639 ubox
3 126 0.006923345 ubox
3 129 0.004283664 ubox
4 13 0.006086868 ubox
4 92 0.007338432 ubox
4 116 0.003873783 ubox
4 128 0.004497946 ubox
5 12 0.006027800 ubox
5 13 0.005827818 ubox
5 91 0.007353375 ubox
5 113 0.009675233 ubox
5 116 0.070105556 ubox
5 124 0.010250042 ubox
5 127 0.004444655 ubox
6 12 0.005969515 ubox
6 90 0.007333860 ubox
6 112 0.009939759 ubox
6 115 0.070293189 ubox
6 123 0.012846286 ubox
7 11 0.005665860 ubox
7 89 0.007164168 ubox
7 111 0.009961962 ubox
7 114 0.070270778 ubox
7 122 0.026785670 ubox
7 125 0.004449613 ubox
8 88 0.007149200 ubox
8 110 0.009958946 ubox
8 113 0.070142580 ubox
8 124 0.004446716 ubox
9 29 0.007595537 ubox
10 28 0.008129199 ubox
10 108 0.009945732 ubox
10 113 0.004313761 ubox
10 116 0.992458727 ubox
11 27 0.008133679 ubox
11 107 0.009923030 ubox
11 110 0.045360772 ubox
11 112 0.006018166 ubox
11 115 0.996948085 ubox
12 26 0.008132231 ubox
12 106 0.007204792 ubox
12 109 0.045284479 ubox
12 111 0.004906550 ubox
12 114 0.997137533 ubox
12 156 0.003952611 ubox
13 25 0.008129779 ubox
13 106 0.006807780 ubox
13 109 0.005491884 ubox
13 111 0.004056564 ubox
13 114 0.008758255 ubox
13 155 0.003954893 ubox
14 24 0.008129850 ubox
14 105 0.009516497 ubox
14 107 0.045076932 ubox
14 108 0.006180935 ubox
14 110 0.004978634 ubox
14 112 0.998583565 ubox
14 113 0.008052741 ubox
14 154 0.003947524 ubox
15 22 0.005660261 ubox
15 23 0.005830680 ubox
15 106 0.043564296 ubox
15 109 0.004971678 ubox
15 111 0.998816475 ubox
16 21 0.008001059 ubox
16 104 0.034431852 ubox
16 105 0.030857484 ubox
16 107 0.007003254 ubox
16 108 0.003648158 ubox
16 110 0.998817370 ubox
17 103 0.046212549 ubox
17 106 0.007868420 ubox
17 109 0.998817102 ubox
17 129 0.006989857 ubox
18 102 0.046283565 ubox
18 105 0.008037015 ubox
18 108 0.998827247 ubox
18 128 0.007219501 ubox
19 101 0.046287161 ubox
19 104 0.008086890 ubox
19 107 0.996203129 ubox
19 127 0.007222010 ubox
20 100 0.046287440 ubox
20 103 0.005901053 ubox
20 106 0.702652900 ubox
20 126 0.007216862 ubox
21 99 0.046284302 ubox
21 103 0.112273855 ubox
21 106 0.699777455 ubox
21 125 0.007222313 ubox
22 98 0.039825738 ubox
22 102 0.112685714 ubox
22 105 0.992033999 ubox
22 124 0.007222359 ubox
23 98 0.023282090 ubox
23 101 0.112684379 ubox
23 104 0.992466144 ubox
23 123 0.007221978 ubox
24 95 0.005225662 ubox
24 97 0.032232427 ubox
24 99 0.012026985 ubox
24 100 0.111811438 ubox
24 103 0.992463351 ubox
24 122 0.007060238 ubox
25 94 0.005162954 ubox
25 98 0.014883124 ubox
25 102 0.992148091 ubox
26 98 0.112975740 ubox
26 101 0.992074735 ubox
27 96 0.081959574 ubox
27 97 0.111561643 ubox
27 100 0.990180772 ubox
27 121 0.007189275 ubox
28 95 0.090978577 ubox
28 96 0.108338941 ubox
28 99 0.989517494 ubox
28 120 0.007225981 ubox
29 91 0.005147150 ubox
29 92 0.160297541 ubox
29 93 0.480117406 ubox
29 94 0.077871771 ubox
29 98 0.843403109 ubox
29 119 0.007219882 ubox
30 90 0.008946398 ubox
30 91 0.388981835 ubox
30 92 0.676281077 ubox
30 118 0.007205326 ubox
32 90 0.984792560 ubox
32 98 0.007139767 ubox
33 89 0.999636614 ubox
33 97 0.007094698 ubox
34 46 0.010602416 ubox
34 88 0.999323318 ubox
35 45 0.011768895 ubox
35 87 0.999867669 ubox
35 96 0.007197369 ubox
36 44 0.011771439 ubox
36 86 0.999899531 ubox
36 95 0.007200472 ubox
37 43 0.011771204 ubox
37 85 0.999899084 ubox
37 94 0.006881820 ubox
38 42 0.011685565 ubox
38 84 0.999891275 ubox
38 92 0.006525252 ubox
39 82 0.004672292 ubox
39 83 0.999738749 ubox
39 91 0.006520635 ubox
40 81 0.010774164 ubox
40 82 0.999824240 ubox
40 90 0.006520584 ubox
41 79 0.033157475 ubox
41 81 0.998675512 ubox
41 88 0.006534321 ubox
42 76 0.981587869 ubox
42 77 0.148275846 ubox
42 78 0.065365935 ubox
42 87 0.006550262 ubox
43 75 0.986124482 ubox
43 76 0.154866026 ubox
43 77 0.022572630 ubox
43 86 0.006550287 ubox
44 74 0.998164579 ubox
44 85 0.006549041 ubox
45 72 0.999383647 ubox
45 84 0.006444445 ubox
46 71 0.999423427 ubox
47 69 0.010943535 ubox
47 70 0.999559365 ubox
47 71 0.018723378 ubox
47 77 0.006324654 ubox
47 97 0.011761443 ubox
48 60 0.011752866 ubox
48 68 0.011714068 ubox
48 69 0.997488713 ubox
48 70 0.019389821 ubox
48 76 0.006939515 ubox
48 96 0.011776601 ubox
49 59 0.013178576 ubox
49 66 0.718873718 ubox
49 68 0.661123639 ubox
49 69 0.018935510 ubox
49 75 0.006967904 ubox
49 95 0.011776771 ubox
50 58 0.013209423 ubox
50 62 0.005637790 ubox
50 65 0.814442074 ubox
50 67 0.578032409 ubox
50 74 0.007204133 ubox
50 94 0.011775946 ubox
51 57 0.013063808 ubox
51 58 0.003413517 ubox
51 61 0.009338160 ubox
51 62 0.017152129 ubox
51 63 0.027109765 ubox
51 64 0.926221654 ubox
51 65 0.111453751 ubox
51 73 0.007195578 ubox
51 93 0.011766232 ubox
52 56 0.010879024 ubox
52 57 0.003647469 ubox
52 61 0.017895902 ubox
52 62 0.025351758 ubox
52 63 0.955663583 ubox
52 64 0.097918102 ubox
52 67 0.005346299 ubox
52 72 0.007105114 ubox
52 92 0.011673215 ubox
53 59 0.027416869 ubox
53 60 0.017206551 ubox
53 66 0.067012182 ubox
53 71 0.006085902 ubox
54 58 0.028016758 ubox
54 61 0.993161152 ubox
54 65 0.069790629 ubox
54 90 0.011630331 ubox
55 60 0.979862436 ubox
55 69 0.006750585 ubox
55 89 0.011578584 ubox
56 68 0.006208546 ubox
58 66 0.012283473 ubox
58 86 0.010706709 ubox
59 65 0.012386662 ubox
59 85 0.010716119 ubox
60 84 0.010708599 ubox
60 88 0.004290297 ubox
61 70 0.008822505 ubox
61 87 0.004363728 ubox
62 69 0.009594954 ubox
62 86 0.003888863 ubox
63 68 0.008778964 ubox
66 85 0.003956815 ubox
68 83 0.012992839 ubox
69 82 0.013235917 ubox
70 81 0.013238104 ubox
71 79 0.003490640 ubox
71 80 0.012891628 ubox
72 78 0.006443134 ubox
73 77 0.005638892 ubox
88 95 0.008208314 ubox
88 99 0.011840853 ubox
89 94 0.008239104 ubox
89 98 0.016205041 ubox
90 96 0.032699546 ubox
90 97 0.129129390 ubox
90 122 0.003287102 ubox
91 95 0.035811837 ubox
91 96 0.136238276 ubox
91 97 0.374963461 ubox
91 100 0.004127384 ubox
91 121 0.003483883 ubox
92 96 0.369360480 ubox
92 99 0.004357864 ubox
92 120 0.003481134 ubox
96 116 0.010905430 ubox
97 115 0.010936157 ubox
98 114 0.010942500 ubox
99 113 0.010942655 ubox
100 112 0.010937186 ubox
101 111 0.010195168 ubox
102 109 0.009447013 ubox
102 111 0.003886404 ubox
103 108 0.009450967 ubox
103 110 0.005486861 ubox
104 109 0.005471405 ubox
114 123 0.004085849 ubox
115 121 0.006720358 ubox
115 122 0.026658022 ubox
116 120 0.007152478 ubox
116 121 0.027671323 ubox
119 129 0.004561205 ubox
120 128 0.004685701 ubox
121 127 0.004659885 ubox
123 156 0.998775418 ubox
124 155 0.999853272 ubox
125 154 0.999860903 ubox
126 135 0.009777898 ubox
126 153 0.999567117 ubox
126 157 0.007501947 ubox
127 134 0.015768035 ubox
127 146 0.009527583 ubox
127 151 0.024878723 ubox
127 152 0.999180160 ubox
127 156 0.008214660 ubox
128 134 0.013944676 ubox
128 145 0.010918812 ubox
128 150 0.034963760 ubox
128 151 0.998129108 ubox
128 155 0.008221274 ubox
129 133 0.013443030 ubox
129 144 0.012816258 ubox
129 148 0.055892036 ubox
129 149 0.202767048 ubox
129 154 0.008053412 ubox
130 143 0.012626065 ubox
130 147 0.055701392 ubox
130 150 0.373855394 ubox
131 144 0.019295216 ubox
131 148 0.157031115 ubox
131 149 0.353629647 ubox
132 143 0.021324162 ubox
132 147 0.159013714 ubox
133 142 0.020730715 ubox
134 144 0.618084798 ubox
134 148 0.244594518 ubox
135 143 0.618732908 ubox
135 147 0.175885583 ubox
136 142 0.605730406 ubox
136 143 0.075540401 ubox
136 147 0.141056703 ubox
137 142 0.048553690 ubox
137 143 0.074864801 ubox
137 146 0.157549379 ubox
137 151 0.004498601 ubox
138 142 0.064563491 ubox
138 147 0.714758696 ubox
138 150 0.006206369 ubox
139 146 0.741261999 ubox
139 147 0.048503418 ubox
139 152 0.029039995 ubox
140 145 0.738106116 ubox
140 146 0.049851445 ubox
140 151 0.031220602 ubox
141 150 0.034502946 ubox
142 149 0.034384817 ubox
143 148 0.032230010 ubox
1 8 0.9500000 lbox
2 7 0.9500000 lbox
10 116 0.9500000 lbox
11 115 0.9500000 lbox
12 114 0.9500000 lbox
14 112 0.9500000 lbox
15 111 0.9500000 lbox
16 110 0.9500000 lbox
17 109 0.9500000 lbox
18 108 0.9500000 lbox
19 107 0.9500000 lbox
20 106 0.9500000 lbox
22 105 0.9500000 lbox
23 104 0.9500000 lbox
24 103 0.9500000 lbox
25 102 0.9500000 lbox
26 101 0.9500000 lbox
27 100 0.9500000 lbox
28 99 0.9500000 lbox
29 98 0.9500000 lbox
32 90 0.9500000 lbox
33 89 0.9500000 lbox
34 88 0.9500000 lbox
35 87 0.9500000 lbox
36 86 0.9500000 lbox
37 85 0.9500000 lbox
38 84 0.9500000 lbox
39 83 0.9500000 lbox
40 82 0.9500000 lbox
41 81 0.9500000 lbox
42 76 0.9500000 lbox
43 75 0.9500000 lbox
44 74 0.9500000 lbox
45 72 0.9500000 lbox
46 71 0.9500000 lbox
47 70 0.9500000 lbox
48 69 0.9500000 lbox
49 66 0.9500000 lbox
50 65 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
54 61 0.9500000 lbox
55 60 0.9500000 lbox
123 156 0.9500000 lbox
124 155 0.9500000 lbox
125 154 0.9500000 lbox
126 153 0.9500000 lbox
127 152 0.9500000 lbox
128 151 0.9500000 lbox
138 147 0.9500000 lbox
139 146 0.9500000 lbox
140 145 0.9500000 lbox
showpage
end
%%EOF
