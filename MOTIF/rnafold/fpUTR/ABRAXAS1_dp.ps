%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABRAXAS1)
} def

/sequence { (\
ACCACAGGGUCUUGCCUCCGCGCGCCCCGCCCUCGUCCUCUUGUGUAGCCUGAGGCGGCGGUAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.340139819 ubox
1 62 0.067289433 ubox
2 8 0.110965448 ubox
2 9 0.390903755 ubox
2 61 0.071226396 ubox
3 7 0.111036345 ubox
3 8 0.390618591 ubox
3 14 0.010671284 ubox
3 60 0.069842436 ubox
4 10 0.013378758 ubox
4 13 0.010841315 ubox
4 36 0.008475488 ubox
4 44 0.003219732 ubox
4 62 0.020152811 ubox
5 9 0.014164421 ubox
5 14 0.031399587 ubox
5 35 0.009057261 ubox
5 43 0.003232752 ubox
5 61 0.021066246 ubox
6 12 0.013563444 ubox
6 13 0.031173908 ubox
6 17 0.418518169 ubox
6 33 0.047083698 ubox
7 11 0.014393546 ubox
7 12 0.025347271 ubox
7 16 0.447059367 ubox
7 17 0.411379978 ubox
7 18 0.120915678 ubox
7 19 0.125817642 ubox
7 26 0.039891201 ubox
7 27 0.528144229 ubox
7 28 0.257307454 ubox
7 32 0.053411209 ubox
8 15 0.446540762 ubox
8 16 0.446517886 ubox
8 17 0.077093881 ubox
8 18 0.124067862 ubox
8 19 0.143103572 ubox
8 25 0.039584474 ubox
8 26 0.542548779 ubox
8 27 0.255708781 ubox
8 28 0.014457678 ubox
8 31 0.053442653 ubox
9 15 0.447467442 ubox
9 16 0.093743816 ubox
9 17 0.095452369 ubox
9 18 0.143335220 ubox
9 21 0.008789836 ubox
9 23 0.028017909 ubox
9 25 0.543550468 ubox
9 26 0.253491577 ubox
9 27 0.014428529 ubox
9 30 0.053436281 ubox
9 59 0.005171568 ubox
9 65 0.008793653 ubox
10 14 0.419096450 ubox
10 20 0.008527244 ubox
10 22 0.025974886 ubox
10 24 0.531138605 ubox
10 29 0.052551967 ubox
10 58 0.004942555 ubox
10 64 0.007170968 ubox
11 57 0.004473750 ubox
11 60 0.003706319 ubox
11 64 0.021373133 ubox
12 58 0.005511395 ubox
12 61 0.006461421 ubox
12 63 0.015893720 ubox
12 64 0.070465765 ubox
13 20 0.019795003 ubox
13 22 0.502177296 ubox
13 24 0.180124891 ubox
13 57 0.007941946 ubox
13 60 0.008412142 ubox
13 63 0.090706575 ubox
14 19 0.023754498 ubox
14 21 0.570569359 ubox
14 23 0.265652683 ubox
14 25 0.052439408 ubox
14 56 0.010007148 ubox
14 59 0.009386371 ubox
14 62 0.094298788 ubox
14 65 0.333793987 ubox
15 20 0.569193539 ubox
15 22 0.265299289 ubox
15 24 0.052494785 ubox
15 55 0.010018081 ubox
15 58 0.009387556 ubox
15 61 0.094383854 ubox
15 64 0.336908777 ubox
16 54 0.010018065 ubox
16 57 0.009355844 ubox
16 60 0.094255742 ubox
16 64 0.061553497 ubox
17 53 0.010014762 ubox
17 63 0.066396874 ubox
18 52 0.009959928 ubox
18 55 0.008933180 ubox
18 58 0.093558981 ubox
18 61 0.362110302 ubox
19 54 0.008915292 ubox
19 57 0.093534336 ubox
19 60 0.362490110 ubox
20 30 0.020293774 ubox
20 49 0.009605117 ubox
20 56 0.092583422 ubox
20 59 0.362585057 ubox
20 62 0.022092620 ubox
20 65 0.510412602 ubox
21 29 0.020504654 ubox
21 35 0.003787544 ubox
21 48 0.009609679 ubox
21 52 0.008605903 ubox
21 55 0.089044865 ubox
21 57 0.004229603 ubox
21 58 0.361420037 ubox
21 60 0.003453678 ubox
21 61 0.022733316 ubox
21 64 0.514042188 ubox
22 28 0.020334702 ubox
22 30 0.187688018 ubox
22 34 0.004233229 ubox
22 36 0.010284730 ubox
22 46 0.009549737 ubox
22 49 0.004331269 ubox
22 51 0.009538342 ubox
22 56 0.005668711 ubox
22 59 0.003914090 ubox
22 62 0.011982795 ubox
22 65 0.418933753 ubox
23 29 0.188054348 ubox
23 35 0.010725415 ubox
23 45 0.010133210 ubox
23 48 0.004331222 ubox
23 52 0.013049933 ubox
23 55 0.005416659 ubox
23 57 0.318026749 ubox
23 60 0.027897344 ubox
23 61 0.011009112 ubox
23 64 0.422146957 ubox
24 28 0.175943295 ubox
24 30 0.025936279 ubox
24 34 0.010210492 ubox
24 44 0.010126769 ubox
24 49 0.026964654 ubox
24 51 0.003800829 ubox
24 56 0.319210063 ubox
24 59 0.028555001 ubox
24 62 0.640535441 ubox
24 65 0.096622816 ubox
25 29 0.025817401 ubox
25 43 0.010103943 ubox
25 48 0.027051106 ubox
25 55 0.318476954 ubox
25 58 0.026464820 ubox
25 61 0.662414143 ubox
25 64 0.097260125 ubox
26 54 0.317237140 ubox
26 55 0.011958410 ubox
26 57 0.023879656 ubox
26 58 0.006368759 ubox
26 60 0.662346294 ubox
26 61 0.025107724 ubox
27 54 0.016799046 ubox
27 57 0.005998595 ubox
27 58 0.662831748 ubox
27 60 0.018021658 ubox
27 61 0.258078048 ubox
28 35 0.015192696 ubox
28 45 0.030481981 ubox
28 52 0.275073877 ubox
28 57 0.663837036 ubox
28 60 0.311803399 ubox
29 34 0.014595430 ubox
29 36 0.015461485 ubox
29 44 0.030900105 ubox
29 46 0.015597370 ubox
29 49 0.195125691 ubox
29 51 0.216763683 ubox
29 56 0.664143591 ubox
29 59 0.317655816 ubox
29 62 0.532865257 ubox
29 65 0.077160361 ubox
30 35 0.016258698 ubox
30 43 0.030869322 ubox
30 45 0.016720321 ubox
30 48 0.196240785 ubox
30 55 0.544226062 ubox
30 58 0.316385304 ubox
30 61 0.549262069 ubox
30 64 0.077243321 ubox
31 54 0.388757993 ubox
31 55 0.381868776 ubox
31 57 0.289561382 ubox
31 58 0.020906059 ubox
31 60 0.548982646 ubox
31 61 0.106738671 ubox
32 48 0.226065782 ubox
32 54 0.541557922 ubox
32 55 0.013430560 ubox
32 57 0.027210099 ubox
32 58 0.178971200 ubox
32 60 0.108382353 ubox
32 61 0.007193091 ubox
33 47 0.222948510 ubox
33 53 0.662173085 ubox
33 54 0.007053865 ubox
33 55 0.011395178 ubox
33 57 0.038461631 ubox
33 58 0.513270174 ubox
33 60 0.003856606 ubox
33 61 0.029710119 ubox
34 43 0.188478480 ubox
34 45 0.225873615 ubox
34 52 0.662762458 ubox
34 54 0.011694247 ubox
34 57 0.598478139 ubox
34 60 0.036999433 ubox
35 42 0.173405782 ubox
35 44 0.207426971 ubox
35 46 0.011294884 ubox
35 49 0.092770847 ubox
35 51 0.590123773 ubox
35 56 0.652549597 ubox
35 59 0.037630309 ubox
36 43 0.073414210 ubox
36 45 0.016866999 ubox
36 48 0.090779008 ubox
36 53 0.028289470 ubox
36 55 0.102643083 ubox
36 58 0.036126742 ubox
37 52 0.028537204 ubox
37 54 0.073004164 ubox
37 55 0.660428437 ubox
37 57 0.018211350 ubox
37 58 0.005178967 ubox
38 48 0.465386659 ubox
38 54 0.668803825 ubox
38 55 0.005861133 ubox
38 57 0.005213020 ubox
39 47 0.447097530 ubox
39 53 0.674047528 ubox
39 55 0.013061804 ubox
40 48 0.309779112 ubox
40 52 0.673967983 ubox
40 54 0.015952816 ubox
40 55 0.003834742 ubox
41 47 0.307640462 ubox
41 48 0.029344085 ubox
41 53 0.016389126 ubox
41 54 0.003859585 ubox
42 47 0.029439443 ubox
42 52 0.015928963 ubox
42 53 0.004229211 ubox
43 49 0.584999147 ubox
43 51 0.014150100 ubox
44 48 0.547612048 ubox
44 60 0.004190670 ubox
45 51 0.006706094 ubox
45 59 0.006346653 ubox
46 58 0.006048050 ubox
48 56 0.011088866 ubox
48 59 0.005663499 ubox
49 55 0.011104044 ubox
49 58 0.005669633 ubox
50 54 0.011050744 ubox
50 57 0.005663427 ubox
58 65 0.027083788 ubox
59 64 0.027523972 ubox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
29 62 0.9500000 lbox
30 61 0.9500000 lbox
31 60 0.9500000 lbox
33 58 0.9500000 lbox
34 57 0.9500000 lbox
35 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
40 52 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
showpage
end
%%EOF
