%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCAGCAGAUGAGCUUGAACCUCAGGAGGGUUGUGGCACAAUGAGGAAGGAAACGUGGGUGGAAAGGCACGCUGGCCUGCUCUGCUGGCUGGGCCAGUAACUGGGGAUGGGGCUGGGGCAGGGCCCACUAAGCCACUGGUGACUGGGGGAGGGGCUGGGGAACUGGGUAGCAGACACAGGCUGAGGAUCGGCACGGGAGC\
) } def
/len { sequence length } bind def

/coor [
[-211.31303406 403.11767578]
[-222.00180054 413.64147949]
[-232.69055176 424.16528320]
[-243.37931824 434.68908691]
[-243.66912842 450.26324463]
[-254.65896606 460.78359985]
[-269.50473022 460.41134644]
[-280.19351196 470.93511963]
[-281.07531738 483.80786133]
[-290.20074463 492.35339355]
[-302.30181885 492.38610840]
[-313.15292358 502.74240112]
[-317.79412842 517.86755371]
[-332.34310913 521.05749512]
[-343.19424438 531.41375732]
[-354.04537964 541.77008057]
[-354.57736206 557.33782959]
[-365.72949219 567.68597412]
[-380.56768799 567.08288574]
[-391.41879272 577.43920898]
[-402.26992798 587.79547119]
[-413.12106323 598.15179443]
[-423.97219849 608.50811768]
[-425.78240967 624.44873047]
[-439.44992065 632.84979248]
[-454.49017334 627.26684570]
[-459.36560059 611.98254395]
[-450.33618164 598.72174072]
[-434.32849121 597.65698242]
[-423.47735596 587.30065918]
[-412.62625122 576.94439697]
[-401.77511597 566.58807373]
[-390.92398071 556.23175049]
[-390.83435059 541.38159180]
[-379.97729492 530.72424316]
[-364.40167236 530.91894531]
[-353.55056763 520.56262207]
[-342.69943237 510.20632935]
[-338.83438110 495.82196045]
[-323.50924683 491.89126587]
[-312.65811157 481.53497314]
[-308.64059448 464.45520020]
[-290.71731567 460.24636841]
[-280.02853394 449.72256470]
[-280.16989136 434.87280273]
[-269.47988892 424.04791260]
[-253.90312195 424.00033569]
[-243.21435547 413.47653198]
[-232.52560425 402.95272827]
[-221.83683777 392.42892456]
[-226.76664734 375.93859863]
[-222.64854431 359.13543701]
[-210.52842712 346.66561890]
[-193.67750549 342.02407837]
[-176.70976257 346.57519531]
[-166.35346985 335.72406006]
[-155.99716187 324.87292480]
[-145.64086914 314.02178955]
[-147.96434021 299.20285034]
[-161.14472961 292.04205322]
[-174.32513428 284.88125610]
[-187.50553894 277.72045898]
[-201.45428467 284.51840210]
[-216.72889709 281.78604126]
[-227.45597839 270.57403564]
[-229.51075745 255.19360352]
[-222.10310364 241.55885315]
[-208.08143616 234.91261292]
[-192.83737183 237.81051636]
[-182.23254395 249.13822937]
[-180.34474182 264.54003906]
[-167.16433716 271.70083618]
[-153.98393250 278.86163330]
[-140.80354309 286.02243042]
[-125.88011932 284.50866699]
[-114.40612793 274.84701538]
[-102.93213654 265.18533325]
[-91.45815277 255.52369690]
[-79.98416138 245.86203003]
[-68.51017761 236.20037842]
[-63.43858337 219.40342712]
[-45.28831100 216.31701660]
[-33.96596527 206.47808838]
[-22.64362144 196.63916016]
[-11.32127762 186.80023193]
[0.00106664 176.96130371]
[11.32341099 167.12237549]
[22.64575386 157.28344727]
[27.17747498 143.09497070]
[42.66927719 139.88334656]
[53.99162292 130.04441833]
[65.31396484 120.20548248]
[76.63630676 110.36655426]
[66.88272095 85.00883484]
[85.93067932 55.00399399]
[85.46417999 40.01124954]
[84.99768066 25.01850319]
[84.53118134 10.02575970]
[77.99517059 -5.61767054]
[91.21790314 -16.22878265]
[105.07474518 -6.46024895]
[99.52392578 9.55926228]
[99.99042511 24.55200577]
[100.45692444 39.54475021]
[100.92341614 54.53749466]
[115.46140289 58.23167801]
[123.02864838 45.28035355]
[124.65801239 36.28487778]
[130.81562805 32.18775940]
[138.58337402 19.35568619]
[146.35112000 6.52361107]
[154.11885071 -6.30846357]
[154.64622498 -22.12087822]
[167.85607910 -29.00193977]
[175.62382507 -41.83401489]
[171.60787964 -57.11955643]
[179.64872742 -70.72544861]
[194.97587585 -74.57955933]
[208.49598694 -66.39531708]
[212.18785095 -51.02828217]
[203.86111450 -37.59544373]
[188.45590210 -34.06627274]
[180.68815613 -21.23419571]
[180.71638489 -6.33961773]
[166.95092773 1.45928073]
[159.18318176 14.29135609]
[151.41543579 27.12343025]
[143.64770508 39.95550537]
[135.97998047 52.84759521]
[128.41273499 65.79891968]
[132.54306030 72.05913544]
[147.51641846 71.16537476]
[140.80374146 84.57957458]
[144.93408203 90.83979034]
[159.81813049 88.97830963]
[167.95202637 84.80541229]
[174.94789124 87.20547485]
[189.85910034 85.57569122]
[204.77029419 83.94590759]
[219.68148804 82.31613159]
[234.59268188 80.68634796]
[244.47618103 68.64665222]
[259.62149048 67.20623779]
[271.03857422 76.70283508]
[285.94976807 75.07305908]
[297.07495117 63.51408005]
[313.03451538 65.14859772]
[321.58566284 78.72274780]
[316.16867065 93.82360077]
[300.93899536 98.86708069]
[287.57955933 89.98425293]
[272.66836548 91.61403656]
[263.57226562 103.35271454]
[248.47340393 105.21796417]
[236.22247314 95.59754181]
[221.31127930 97.22732544]
[206.40007019 98.85710907]
[191.48887634 100.48689270]
[176.57768250 102.11666870]
[161.67961121 103.86235809]
[146.79556274 105.72383881]
[128.10136414 128.39518738]
[103.63842773 132.55224609]
[86.47524261 121.68889618]
[75.15289307 131.52783203]
[63.83055115 141.36676025]
[52.50820541 151.20568848]
[47.16663742 166.09790039]
[32.48468399 168.60578918]
[21.16234016 178.44471741]
[9.83999538 188.28364563]
[-1.48234844 198.12257385]
[-12.80469227 207.96151733]
[-24.12703705 217.80044556]
[-35.44937897 227.63937378]
[-37.12978745 240.43238831]
[-46.76884842 248.39405823]
[-58.84851837 247.67436218]
[-70.32250977 257.33602905]
[-81.79649353 266.99768066]
[-93.27048492 276.65933228]
[-104.74446869 286.32098389]
[-116.21846008 295.98263550]
[-101.35275269 293.97994995]
[-87.38759613 299.45486450]
[-77.84378052 311.02703857]
[-75.12741089 325.77902222]
[-79.92331696 339.99166870]
[-91.02239227 350.08178711]
[-105.62643433 353.50555420]
[-120.05357361 349.39974976]
[-130.66656494 338.79956055]
[-134.78973389 324.37811279]
[-145.14602661 335.22921753]
[-155.50233459 346.08035278]
[-165.85862732 356.93148804]
[-161.06294250 368.93096924]
[-161.16392517 381.80618286]
[-166.11120605 393.64270020]
[-175.13645935 402.69409180]
[-186.87252808 407.63925171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[4 47]
[7 44]
[8 43]
[11 41]
[12 40]
[14 38]
[15 37]
[16 36]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[55 196]
[56 195]
[57 194]
[58 193]
[59 74]
[60 73]
[61 72]
[62 71]
[75 183]
[76 182]
[77 181]
[78 180]
[79 179]
[80 178]
[82 175]
[83 174]
[84 173]
[85 172]
[86 171]
[87 170]
[88 169]
[90 167]
[91 166]
[92 165]
[93 164]
[95 105]
[96 104]
[97 103]
[98 102]
[106 130]
[107 129]
[109 128]
[110 127]
[111 126]
[112 125]
[114 123]
[115 122]
[134 161]
[135 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 155]
[144 152]
[145 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
