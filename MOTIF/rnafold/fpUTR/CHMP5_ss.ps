%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:02:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCAGGCUCUCUCCGAGAGCACCAAGUCCUUUUGCUCUCCAUCCCCGGAAGACCCGGCUGAAAAUCCGGAAAAAGAAUCGGGAAACGCCAGGAGGCAUAUUGCGCUUGCGCACGGAGGGGCCGGAAGUCGAGGCGGGAGUGACUCUGCUUCCGUUUCUGGUUUUGCUCUAGUGUUUGGGUUUCUUCGCGGCUGCUCAAG\
) } def
/len { sequence length } bind def

/coor [
[206.01040649 138.22390747]
[202.19252014 124.76248932]
[187.47789001 121.85050964]
[172.76325989 118.93852997]
[158.04862976 116.02654266]
[143.33399963 113.11456299]
[128.61936951 110.20258331]
[113.90473175 107.29059601]
[108.18548584 115.02412415]
[98.33267212 118.44314575]
[87.48249817 115.50535583]
[79.63285065 106.35836792]
[64.71019745 104.83708191]
[49.78754044 103.31579590]
[34.86488342 101.79450989]
[20.52145576 106.18382263]
[9.00571060 115.79566956]
[-2.51003337 125.40751648]
[-14.02577782 135.01936340]
[-25.54152107 144.63121033]
[-37.05726624 154.24307251]
[-48.57300949 163.85491943]
[-45.28710556 178.80354309]
[-49.33573914 193.56385803]
[-59.78856659 204.74406433]
[-74.24359894 209.77502441]
[-89.37918091 207.50067139]
[-101.71726990 198.44360352]
[-108.42265320 184.68510437]
[-107.95449066 169.38676453]
[-100.42035675 156.06401062]
[-87.55154419 147.77835083]
[-72.30521393 146.43374634]
[-58.18486023 152.33917236]
[-46.66911316 142.72732544]
[-35.15336990 133.11547852]
[-23.63762665 123.50362396]
[-12.12188148 113.89177704]
[-0.60613763 104.27993011]
[10.90960693 94.66807556]
[9.91613483 87.23416901]
[-4.95171547 89.22088623]
[-6.93820047 74.35300446]
[7.92919016 72.36634827]
[6.93571806 64.93244171]
[-6.69989443 58.68183517]
[-20.33550644 52.43122864]
[-33.97111893 46.18062210]
[-47.60673141 39.93001556]
[-61.10120773 51.76724625]
[-78.36179352 56.49959946]
[-95.90232849 53.21926880]
[-110.20103455 42.63196945]
[-118.40766907 26.90574265]
[-118.91155243 9.22712326]
[-132.82514954 3.62251925]
[-146.73876953 -1.98208475]
[-160.65237427 -7.58668900]
[-173.73104858 0.76363355]
[-189.21804810 -0.20186964]
[-201.15832520 -10.11194324]
[-204.96057129 -25.15596008]
[-199.16278076 -39.54919052]
[-185.99427795 -47.75714493]
[-170.51866150 -46.62369156]
[-158.68659973 -36.58467484]
[-155.04776001 -21.50029373]
[-141.13415527 -15.89568996]
[-127.22055054 -10.29108620]
[-113.30694580 -4.68648195]
[-105.19214630 -13.85857105]
[-94.63214874 -20.10862923]
[-82.63940430 -22.81998634]
[-70.36908722 -21.71607971]
[-59.00784683 -16.88859177]
[-49.65904236 -8.79003716]
[-43.23559189 1.80861938]
[-40.37083817 13.89133835]
[-41.35612488 26.29440308]
[-27.72051239 32.54500961]
[-14.08489990 38.79561615]
[-0.44928804 45.04622269]
[13.18632412 51.29682922]
[20.27396393 38.07694244]
[32.97667694 30.09940720]
[47.96289444 29.45650673]
[61.30214310 36.31686020]
[69.49591064 48.88118362]
[70.39518738 63.85420227]
[63.76413345 77.30890656]
[51.34188080 85.71649933]
[36.38616943 86.87185669]
[51.30882645 88.39314270]
[66.23148346 89.91442871]
[81.15414429 91.43571472]
[92.20669556 81.29466248]
[91.97225952 66.29649353]
[91.73782349 51.29832458]
[85.44467163 35.55562592]
[98.83001709 25.15040016]
[112.53404236 35.13219070]
[106.73599243 51.06388855]
[106.97042847 66.06205750]
[107.20486450 81.06022644]
[116.81671906 92.57596588]
[131.53134155 95.48795319]
[146.24597168 98.39993286]
[160.96060181 101.31191254]
[175.67523193 104.22389221]
[190.38987732 107.13587952]
[205.10450745 110.04785919]
[215.86204529 97.49635315]
[231.39170837 92.11119080]
[247.42614746 95.27197266]
[259.60958862 106.02360535]
[264.68112183 121.36218262]
[279.43948364 124.04383087]
[294.19781494 126.72547913]
[309.15890503 121.57997894]
[320.29791260 131.46797180]
[335.05624390 134.14961243]
[349.81460571 136.83126831]
[364.57293701 139.51290894]
[379.33129883 142.19456482]
[394.11013794 144.76078796]
[408.90859985 147.21145630]
[423.70703125 149.66210938]
[438.50549316 152.11277771]
[449.42190552 136.48374939]
[470.49859619 131.22276306]
[492.28506470 142.19413757]
[506.99969482 139.28215027]
[521.71435547 136.37016296]
[536.42895508 133.45819092]
[551.14361572 130.54620361]
[565.85821533 127.63421631]
[580.57287598 124.72223663]
[595.28747559 121.81025696]
[610.00213623 118.89827728]
[624.71673584 115.98628998]
[639.43139648 113.07431030]
[648.01525879 99.80431366]
[663.48553467 96.57244873]
[676.66406250 105.29612732]
[679.73217773 120.79974365]
[670.86962891 133.88528442]
[655.33447266 136.78932190]
[642.34338379 127.78894043]
[627.62872314 130.70092773]
[612.91412354 133.61289978]
[598.19946289 136.52488708]
[583.48486328 139.43687439]
[568.77020264 142.34884644]
[554.05560303 145.26083374]
[539.34094238 148.17282104]
[524.62628174 151.08479309]
[509.91168213 153.99678040]
[495.19705200 156.90876770]
[493.28424072 164.16073608]
[507.78817749 167.98637390]
[522.76446533 167.14300537]
[528.19427490 181.12573242]
[516.57373047 190.61058044]
[503.96252441 182.49032593]
[489.45858765 178.66468811]
[487.54577637 185.91665649]
[498.90988159 195.70730591]
[510.27398682 205.49797058]
[521.63812256 215.28862000]
[536.71044922 211.60017395]
[551.05944824 217.50659180]
[559.16760254 230.73674011]
[557.91723633 246.20335388]
[547.78906250 257.95919800]
[532.67761230 261.48394775]
[518.39355469 255.42221069]
[510.42935181 242.10487366]
[511.84744263 226.65274048]
[500.48333740 216.86207581]
[489.11923218 207.07142639]
[477.75509644 197.28076172]
[455.44250488 196.51547241]
[440.03234863 183.93046570]
[436.05484009 166.91122437]
[421.25637817 164.46057129]
[406.45791626 162.00990295]
[391.65948486 159.55924988]
[384.54113770 161.56954956]
[376.64962769 156.95291138]
[361.89129639 154.27125549]
[347.13293457 151.58961487]
[332.37460327 148.90795898]
[317.61624146 146.22630310]
[303.71078491 151.56362915]
[291.51617432 141.48382568]
[276.75784302 138.80216980]
[261.99948120 136.12052917]
[253.86909485 147.09922791]
[241.74259949 153.53318787]
[227.96110535 154.11569214]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 111]
[3 110]
[4 109]
[5 108]
[6 107]
[7 106]
[8 105]
[12 95]
[13 94]
[14 93]
[15 92]
[16 40]
[17 39]
[18 38]
[19 37]
[20 36]
[21 35]
[22 34]
[45 83]
[46 82]
[47 81]
[48 80]
[49 79]
[55 70]
[56 69]
[57 68]
[58 67]
[96 104]
[97 103]
[98 102]
[116 197]
[117 196]
[118 195]
[120 193]
[121 192]
[122 191]
[123 190]
[124 189]
[125 187]
[126 186]
[127 185]
[128 184]
[131 158]
[132 157]
[133 156]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[166 181]
[167 180]
[168 179]
[169 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
