%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCCCAGGGUAUCGCGAGAACUGCUUCGGCGUUCUGGCUACAGGUUCGGGGCGCGGGUCUCUUCCGCGGAAACUGACAUUGCGUUUCCGUUGUCGGCCUCCCACUGCAGUAUCACCUUCUCCCCCAAGUGUGACAACCAAAGAUGUCUCCAGAUAUUGCCAGAUGUCCUCUUGGAAGCAAGAUCGCUCCGGGUUGAGAUCCACAGAGCUAAACGUUUUAGAGUACCAACCAUUGUGUGCUGUGAGGUAAAGGA\
GCCAUAUAUUGAAGACC\
) } def
/len { sequence length } bind def

/coor [
[137.66754150 310.86468506]
[123.28492737 315.12384033]
[108.31143951 316.01522827]
[93.52510071 313.49246216]
[79.69422913 307.68670654]
[67.53748322 298.89956665]
[57.68655014 287.58767700]
[50.65328598 274.33877563]
[46.80314255 259.84130859]
[46.33618164 244.84858704]
[49.27632523 230.14068604]
[40.54354477 242.33653259]
[31.81076431 254.53237915]
[30.79524422 261.00518799]
[27.21810722 265.36141968]
[22.73401833 266.90527344]
[13.72288513 278.89691162]
[11.61806679 294.57748413]
[-2.21327186 300.10409546]
[-11.22440624 312.09573364]
[-20.23554039 324.08737183]
[-29.24667358 336.07901001]
[-38.25780869 348.07064819]
[-40.89670181 356.77612305]
[-47.44227982 360.14764404]
[-56.59080887 372.03479004]
[-58.21718216 388.35308838]
[-73.27178192 394.85626221]
[-86.26772308 384.85437012]
[-83.83589935 368.63653564]
[-68.47795868 362.88626099]
[-59.32942963 350.99911499]
[-50.24945068 339.05950928]
[-41.23831558 327.06787109]
[-32.22718048 315.07623291]
[-23.21604729 303.08459473]
[-14.20491314 291.09295654]
[-12.74463177 276.27011108]
[1.73124361 269.88577271]
[10.74237728 257.89413452]
[19.61492157 245.79959106]
[28.34770203 233.60374451]
[37.08048248 221.40791321]
[37.67773438 212.07283020]
[45.61763000 205.14173889]
[50.69382858 191.02676392]
[55.77002335 176.91180420]
[60.84621811 162.79684448]
[65.92241669 148.68186951]
[44.80838013 96.84449768]
[75.63931274 55.03545380]
[67.18951416 42.64187241]
[58.73971176 30.24829292]
[50.28990936 17.85470963]
[36.55879211 11.81680202]
[21.71371078 13.96705532]
[6.86862993 16.11730957]
[-7.97644997 18.26756287]
[-22.82153130 20.41781807]
[-33.53567123 32.35878754]
[-49.54264069 31.28340149]
[-58.56326294 18.01660538]
[-53.67768860 2.73554730]
[-38.63371277 -2.83745098]
[-24.97178459 5.57273722]
[-10.12670422 3.42248344]
[4.71837616 1.27222943]
[19.56345558 -0.87802446]
[34.40853500 -3.02827835]
[36.47333908 -17.88548470]
[22.77718735 -24.00230026]
[9.08103561 -30.11911392]
[-5.52702665 -24.71150208]
[-19.32973671 -31.10992813]
[-24.39504433 -45.06980896]
[-38.09119415 -51.18662262]
[-51.78734589 -57.30343628]
[-65.48349762 -63.42025375]
[-79.17964935 -69.53707123]
[-92.87580109 -75.65388489]
[-99.42094421 -75.35414886]
[-104.40465546 -77.98763275]
[-106.81423187 -82.07229614]
[-120.36598969 -88.50268555]
[-133.91773987 -94.93307495]
[-150.21127319 -93.07487488]
[-159.74847412 -106.41556549]
[-152.71827698 -121.23138428]
[-136.35275269 -122.28108215]
[-127.48735809 -108.48482513]
[-113.93560028 -102.05444336]
[-100.38384247 -95.62405396]
[-86.75898743 -89.35003662]
[-73.06283569 -83.23322296]
[-59.36668396 -77.11640167]
[-45.67053223 -70.99958801]
[-31.97438049 -64.88277435]
[-18.27822876 -58.76596069]
[-4.50186539 -64.31099701]
[9.47511673 -58.30278015]
[15.19785023 -43.81526566]
[28.89400291 -37.69845200]
[42.59015274 -31.58163643]
[49.30860519 -37.15421295]
[56.65906525 -40.06216049]
[63.74789429 -40.42602539]
[63.23015213 -55.41708755]
[62.71240997 -70.40814972]
[62.10842133 -85.39598083]
[61.41820526 -100.38009644]
[60.72798920 -115.36420441]
[60.03777313 -130.34831238]
[59.34755707 -145.33242798]
[58.65734100 -160.31654358]
[57.96712494 -175.30065918]
[55.56095505 -190.10641479]
[51.47066116 -204.53794861]
[47.29740143 -218.94572449]
[43.04130936 -233.32923889]
[38.78521729 -247.71276855]
[24.37517357 -253.78604126]
[17.28630638 -267.72454834]
[20.86576080 -282.94696045]
[33.42342758 -292.26568604]
[49.02996445 -291.28076172]
[60.31643677 -280.45718384]
[61.95371628 -264.90554810]
[53.16873550 -251.96885681]
[57.42482758 -237.58534241]
[61.68091965 -223.20181274]
[66.57401276 -217.70005798]
[65.90220642 -208.62825012]
[69.99250031 -194.19670105]
[84.94386292 -195.40370178]
[86.66620636 -210.30448914]
[88.38854218 -225.20527649]
[90.11088562 -240.10606384]
[78.59689331 -250.50836182]
[75.42913818 -265.69863892]
[81.82569122 -279.83596802]
[95.32694244 -287.48422241]
[110.74138641 -285.70251465]
[122.14186096 -275.17593384]
[125.14463806 -259.95217896]
[118.59510040 -245.88507080]
[105.01168060 -238.38372803]
[103.28933716 -223.48294067]
[101.56699371 -208.58215332]
[99.84465027 -193.68135071]
[95.97755432 -186.11099243]
[90.69992065 -180.45225525]
[84.66791534 -176.90606689]
[78.54548645 -175.47871399]
[72.95123291 -175.99087524]
[73.64144897 -161.00675964]
[74.33166504 -146.02264404]
[75.02188873 -131.03852844]
[75.71210480 -116.05442047]
[76.40232086 -101.07031250]
[77.09253693 -86.08619690]
[80.52677917 -79.57331848]
[77.70347595 -70.92588806]
[78.22121429 -55.93482971]
[78.73896027 -40.94376755]
[96.18095398 -25.69613647]
[90.86726379 0.17348562]
[62.68349075 9.40490913]
[71.13329315 21.79849052]
[79.58309174 34.19207382]
[88.03289795 46.58565521]
[102.80998230 49.16204071]
[114.95537567 40.35923386]
[127.10076904 31.55642319]
[139.24615479 22.75361633]
[151.39155579 13.95080757]
[157.58122253 -1.23536825]
[173.86230469 -3.19967532]
[183.48620605 10.07859707]
[176.55268860 24.93990135]
[160.19436646 26.09620094]
[148.04896545 34.89900970]
[135.90357971 43.70181656]
[123.75817871 52.50462341]
[111.61278534 61.30743408]
[114.43300629 68.25699615]
[120.07343292 82.15611267]
[122.89365387 89.10567474]
[137.73873901 86.95542145]
[152.58381653 84.80516815]
[167.42889404 82.65490723]
[182.72454834 69.48789978]
[200.33647156 77.52064514]
[215.12814331 75.02932739]
[229.91979980 72.53800201]
[244.71147156 70.04668427]
[257.00296021 59.19073868]
[272.46203613 64.66331482]
[275.18572998 80.83469391]
[262.37213135 91.06914520]
[247.20278931 84.83834839]
[232.41111755 87.32966614]
[217.61946106 89.82099152]
[202.82778931 92.31230927]
[197.70376587 101.10076141]
[188.40112305 105.73319244]
[177.86466980 104.47484589]
[169.57914734 97.49999237]
[154.73406982 99.65024567]
[139.88899231 101.80049896]
[125.04390717 103.95075226]
[123.20716858 111.22236633]
[137.75039673 114.89584351]
[152.29356384 118.56955719]
[148.61961365 133.11267090]
[134.07691956 129.43907166]
[119.53369141 125.76560211]
[117.69695282 133.03721619]
[129.74024963 141.97920227]
[141.78353882 150.92118835]
[153.82682800 159.86317444]
[165.87011719 168.80516052]
[181.56254578 170.81973267]
[187.16864014 184.61903381]
[199.21192932 193.56101990]
[211.25521851 202.50300598]
[223.29850769 211.44499207]
[235.34179688 220.38697815]
[247.43634033 229.25953674]
[259.58172607 238.06233215]
[271.72714233 246.86514282]
[288.10028076 251.26472473]
[288.40518188 268.21594238]
[272.20083618 273.20147705]
[262.92431641 259.01052856]
[250.77893066 250.20773315]
[238.63352966 241.40492249]
[231.40034485 240.02920532]
[226.39981079 232.43028259]
[214.35652161 223.48829651]
[202.31323242 214.54629517]
[190.26994324 205.60430908]
[178.22665405 196.66232300]
[163.39564514 195.28735352]
[156.92813110 180.84844971]
[144.88484192 171.90646362]
[132.84155273 162.96447754]
[120.79826355 154.02249146]
[108.75496674 145.08050537]
[101.57556915 147.24989319]
[110.13895416 159.56527710]
[101.07241821 171.51507568]
[86.90582275 166.58480835]
[87.21677399 151.58868408]
[80.03738403 153.75807190]
[74.96118164 167.87303162]
[69.88498688 181.98800659]
[64.80879211 196.10296631]
[59.73259735 210.21792603]
[70.16763306 199.44248962]
[82.77180481 191.31016541]
[96.89019775 186.24351501]
[111.78920746 184.50579834]
[126.69465637 186.18731689]
[140.83206177 191.20071411]
[153.46681213 199.28544617]
[163.94239807 210.02146912]
[171.71450806 222.85089111]
[176.37928772 237.10711670]
[177.69435120 252.04936218]
[175.59138489 266.90121460]
[170.17964172 280.89096069]
[161.74031067 293.29168701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 43]
[12 42]
[13 41]
[16 40]
[17 39]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[25 32]
[26 31]
[45 258]
[46 257]
[47 256]
[48 255]
[49 254]
[51 170]
[52 169]
[53 168]
[54 167]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[70 103]
[71 102]
[72 101]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[83 92]
[84 91]
[85 90]
[106 164]
[107 163]
[108 162]
[109 160]
[110 159]
[111 158]
[112 157]
[113 156]
[114 155]
[115 154]
[116 133]
[117 132]
[118 130]
[119 129]
[120 128]
[134 149]
[135 148]
[136 147]
[137 146]
[171 184]
[172 183]
[173 182]
[174 181]
[175 180]
[187 210]
[188 209]
[189 208]
[190 207]
[192 203]
[193 202]
[194 201]
[195 200]
[217 248]
[218 247]
[219 246]
[220 245]
[221 244]
[223 242]
[224 241]
[225 240]
[226 239]
[227 238]
[228 236]
[229 235]
[230 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
