%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCGAGCGGGAGGCUGCGCCAGCGGCGCCCGCCGGGGGCCCGCCGCACUCUGCUCUCGGCCUCCCGGGCUGCGGGGACGGGACGGCUGCCGGCGCGGACUUUGCGGGCCGGGAGCCGAGUCCAGGACAGAGCCGGAACCGCCGAGGGAGGCGAGAGGGCAGUGCGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-261.07928467 542.75225830]
[-271.40155029 550.85729980]
[-283.83694458 554.95172119]
[-296.89132690 554.56646729]
[-309.00411987 549.76940918]
[-319.16860962 560.80041504]
[-322.70001221 569.26428223]
[-329.61923218 571.93731689]
[-339.98236084 582.78192139]
[-350.34548950 593.62652588]
[-360.70861816 604.47113037]
[-371.07174683 615.31573486]
[-371.56546021 628.22784424]
[-380.45016479 637.04925537]
[-392.56329346 637.42468262]
[-403.12164307 648.07934570]
[-413.67996216 658.73394775]
[-424.23831177 669.38861084]
[-434.79666138 680.04327393]
[-438.44357300 696.03173828]
[-454.19110107 700.60845947]
[-465.83959961 689.06530762]
[-461.40603638 673.27685547]
[-445.45129395 669.48492432]
[-434.89294434 658.83026123]
[-424.33462524 648.17559814]
[-413.77627563 637.52099609]
[-403.21792603 626.86633301]
[-399.69348145 609.69042969]
[-381.91635132 604.95263672]
[-371.55322266 594.10803223]
[-361.19009399 583.26336670]
[-350.82699585 572.41876221]
[-340.46386719 561.57415771]
[-330.19961548 550.63592529]
[-320.03512573 539.60491943]
[-326.71234131 524.11755371]
[-325.96347046 507.21350098]
[-317.89038086 492.28018188]
[-304.06750488 482.33108521]
[-287.23492432 479.39782715]
[-270.75537109 484.11520386]
[-260.99810791 472.72241211]
[-251.24087524 461.32958984]
[-241.48362732 449.93679810]
[-239.51383972 442.78549194]
[-231.44429016 438.42776489]
[-221.48176575 427.21401978]
[-211.51925659 416.00024414]
[-201.55674744 404.78649902]
[-191.59422302 393.57275391]
[-190.98139954 388.80355835]
[-187.34303284 384.37939453]
[-181.06059265 382.14114380]
[-170.69746399 371.29650879]
[-160.33433533 360.45190430]
[-149.97120667 349.60729980]
[-139.60807800 338.76269531]
[-129.24494934 327.91806030]
[-126.03297424 310.68099976]
[-108.34481049 305.62115479]
[-98.18031311 294.59014893]
[-88.01581573 283.55914307]
[-77.85131836 272.52813721]
[-67.68682861 261.49716187]
[-57.52232742 250.46614075]
[-47.35783386 239.43515015]
[-51.49208450 227.97833252]
[-50.34215927 215.78018188]
[-44.06605530 205.17333984]
[-33.80792618 198.21250916]
[-21.48995399 196.27651978]
[-9.45227718 199.79553223]
[1.10606265 189.14088440]
[11.66440296 178.48623657]
[22.22274208 167.83160400]
[19.64747429 153.18557739]
[26.26851273 139.67166138]
[39.73490143 132.56463623]
[54.98019409 134.77536011]
[65.53853607 124.12071228]
[76.09687805 113.46606445]
[73.60995483 92.49935150]
[86.75270081 75.97494507]
[107.74124146 73.67951965]
[115.74642181 60.99421310]
[123.75160217 48.30889893]
[131.75677490 35.62358856]
[139.76194763 22.93827629]
[140.58346558 7.13841343]
[153.91908264 0.50435001]
[161.92425537 -12.18096161]
[169.92944336 -24.86627388]
[177.93461609 -37.55158615]
[185.93978882 -50.23689651]
[186.76130676 -66.03675842]
[200.09692383 -72.67082214]
[208.10209656 -85.35613251]
[203.16387939 -100.19351959]
[208.96630859 -114.71473694]
[222.76965332 -122.06331635]
[238.05641174 -118.76947784]
[247.60861206 -106.38847351]
[246.91603088 -90.76623535]
[236.30566406 -79.27910614]
[220.78741455 -77.35095978]
[212.78222656 -64.66564178]
[212.53329468 -49.77312088]
[198.62510681 -42.23171997]
[190.61991882 -29.54640770]
[182.61474609 -16.86109543]
[174.60957336 -4.17578411]
[166.60438538 8.50952721]
[166.35545349 23.40205193]
[152.44726562 30.94345474]
[144.44209290 43.62876511]
[136.43690491 56.31407928]
[128.43173218 68.99938965]
[120.42655182 81.68470001]
[122.79428101 84.73189545]
[124.71104431 88.08116150]
[139.48838806 85.50624847]
[154.26573181 82.93133545]
[168.83183289 74.25579071]
[181.20062256 85.85101318]
[173.48257446 100.94631195]
[156.84063721 97.70867920]
[142.06329346 100.28359222]
[127.28595734 102.85850525]
[124.09700012 113.11598206]
[117.21405792 121.36283112]
[107.69226837 126.33483124]
[96.99127960 127.26979828]
[86.75151825 124.02440643]
[76.19317627 134.67904663]
[65.63484192 145.33369446]
[67.98388672 160.55828857]
[60.99942780 174.08865356]
[47.54618835 180.83212280]
[32.87738800 178.38993835]
[22.31904793 189.04458618]
[11.76070786 199.69923401]
[1.20236754 210.35386658]
[4.66333199 228.12202454]
[-3.14093995 244.28143311]
[-18.93089104 252.47338867]
[-36.32682800 249.59963989]
[-46.49132538 260.63064575]
[-56.65582275 271.66165161]
[-66.82032013 282.69265747]
[-76.98481750 293.72366333]
[-87.14931488 304.75463867]
[-97.31380463 315.78564453]
[-97.57296753 328.70458984]
[-106.29604340 337.68588257]
[-118.40034485 338.28118896]
[-128.76347351 349.12582397]
[-139.12660217 359.97042847]
[-149.48973083 370.81503296]
[-159.85284424 381.65963745]
[-170.21597290 392.50424194]
[-180.38047791 403.53524780]
[-190.34298706 414.74902344]
[-200.30549622 425.96276855]
[-210.26802063 437.17651367]
[-220.23052979 448.39028931]
[-230.09082031 459.69403076]
[-239.84806824 471.08685303]
[-249.60530090 482.47964478]
[-259.36254883 493.87246704]
[-253.18234253 505.59518433]
[-251.36911011 518.69030762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 36]
[6 35]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[42 170]
[43 169]
[44 168]
[45 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[54 161]
[55 160]
[56 159]
[57 158]
[58 157]
[59 156]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[73 143]
[74 142]
[75 141]
[76 140]
[80 136]
[81 135]
[82 134]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[91 113]
[92 112]
[93 111]
[94 110]
[95 109]
[97 107]
[98 106]
[121 129]
[122 128]
[123 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
