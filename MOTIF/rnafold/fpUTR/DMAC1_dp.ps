%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DMAC1)
} def

/sequence { (\
CUCUGCCUUCCGGUGCGUCGUUUACGCCAGUUUGAACCAAAGACGCCCAAGGUUGAGGCCGAGUUCCAGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.260169153 ubox
1 58 0.006817017 ubox
1 63 0.940924810 ubox
1 69 0.007987094 ubox
1 71 0.118253646 ubox
2 56 0.261756809 ubox
2 57 0.003530392 ubox
2 58 0.005998714 ubox
2 62 0.954601614 ubox
2 68 0.006301793 ubox
2 70 0.120496488 ubox
3 55 0.261613469 ubox
3 57 0.008064317 ubox
3 61 0.954520939 ubox
3 63 0.017241117 ubox
3 69 0.120720102 ubox
4 56 0.007672031 ubox
4 61 0.009929995 ubox
4 62 0.016137307 ubox
4 68 0.119734356 ubox
5 53 0.254734347 ubox
5 54 0.004311653 ubox
5 59 0.961704785 ubox
5 60 0.023222599 ubox
5 67 0.065928331 ubox
6 52 0.264014706 ubox
6 58 0.963984396 ubox
7 51 0.264026375 ubox
7 57 0.963962291 ubox
7 63 0.021160809 ubox
8 50 0.262995594 ubox
8 52 0.004471601 ubox
8 56 0.958598415 ubox
8 57 0.003638759 ubox
8 62 0.020452038 ubox
8 63 0.012955476 ubox
9 49 0.224433058 ubox
9 50 0.008161249 ubox
9 51 0.010443316 ubox
9 52 0.049805263 ubox
9 55 0.876225295 ubox
9 56 0.019423465 ubox
9 61 0.017977542 ubox
9 62 0.015531020 ubox
10 51 0.080385398 ubox
10 52 0.951269501 ubox
10 55 0.023126679 ubox
10 58 0.005124228 ubox
10 61 0.015614122 ubox
11 51 0.949724071 ubox
11 55 0.006249998 ubox
11 57 0.005139270 ubox
11 61 0.014651675 ubox
12 28 0.003281219 ubox
12 47 0.014185732 ubox
12 48 0.967588005 ubox
12 60 0.015186326 ubox
13 27 0.003251358 ubox
13 46 0.011824792 ubox
13 47 0.972312959 ubox
13 59 0.015084140 ubox
14 26 0.003217038 ubox
14 45 0.009146296 ubox
14 49 0.015948385 ubox
14 58 0.014499897 ubox
15 25 0.003165627 ubox
15 27 0.007635652 ubox
15 44 0.005883688 ubox
15 46 0.999698981 ubox
15 48 0.007996110 ubox
16 26 0.007757368 ubox
16 45 0.999905343 ubox
17 25 0.007766363 ubox
17 44 0.999899203 ubox
18 24 0.007396507 ubox
18 43 0.999765190 ubox
19 26 0.003430081 ubox
19 34 0.003293431 ubox
19 42 0.998991905 ubox
20 25 0.010402307 ubox
20 27 0.028054331 ubox
20 33 0.005257084 ubox
20 37 0.947105662 ubox
21 26 0.026531825 ubox
21 30 0.003485545 ubox
21 35 0.024082785 ubox
21 36 0.947408921 ubox
21 40 0.065066719 ubox
21 41 0.122553738 ubox
22 29 0.004131507 ubox
22 30 0.006021959 ubox
22 34 0.032163638 ubox
22 35 0.945248688 ubox
22 36 0.038244434 ubox
22 39 0.067164014 ubox
22 40 0.130470295 ubox
22 41 0.014055807 ubox
23 29 0.006500361 ubox
23 34 0.927964834 ubox
23 35 0.042242188 ubox
23 39 0.124301572 ubox
23 40 0.015693737 ubox
23 41 0.004811394 ubox
24 31 0.504168568 ubox
24 33 0.781074428 ubox
25 30 0.585115492 ubox
25 34 0.097693398 ubox
26 33 0.077119556 ubox
28 34 0.129264269 ubox
29 33 0.105217112 ubox
30 37 0.025120034 ubox
30 44 0.006468179 ubox
31 36 0.023332270 ubox
31 40 0.003417587 ubox
31 41 0.048786050 ubox
31 43 0.006471822 ubox
32 39 0.004243884 ubox
32 40 0.053872624 ubox
32 41 0.017485024 ubox
32 42 0.006465590 ubox
32 57 0.004097012 ubox
33 39 0.055794402 ubox
33 40 0.018472657 ubox
33 41 0.008009595 ubox
33 56 0.004450963 ubox
34 38 0.055275422 ubox
35 54 0.004823865 ubox
36 53 0.004906974 ubox
37 52 0.004920994 ubox
38 51 0.004917363 ubox
47 57 0.004221525 ubox
47 58 0.003301782 ubox
48 55 0.006184447 ubox
48 57 0.003734863 ubox
49 54 0.006331446 ubox
51 60 0.025919274 ubox
51 64 0.003186602 ubox
52 59 0.025947893 ubox
53 58 0.024707462 ubox
53 62 0.010483024 ubox
54 61 0.011403407 ubox
54 68 0.004519695 ubox
55 60 0.011803094 ubox
55 66 0.019197747 ubox
55 67 0.005408530 ubox
56 65 0.019244105 ubox
57 64 0.018086129 ubox
57 65 0.007335595 ubox
57 66 0.006281565 ubox
57 67 0.015874532 ubox
58 64 0.029382502 ubox
58 65 0.006673382 ubox
58 66 0.017073198 ubox
58 72 0.042731449 ubox
59 63 0.030460836 ubox
59 71 0.043153555 ubox
63 72 0.068837923 ubox
64 70 0.033808195 ubox
64 71 0.073163744 ubox
65 69 0.032918789 ubox
65 70 0.062149398 ubox
1 63 0.9500000 lbox
2 62 0.9500000 lbox
3 61 0.9500000 lbox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
12 48 0.9500000 lbox
13 47 0.9500000 lbox
15 46 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
showpage
end
%%EOF
