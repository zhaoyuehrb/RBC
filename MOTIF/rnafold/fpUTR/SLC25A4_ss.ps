%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCCCCCUAGCGUCGCGCAGGGUCGGGGACUGCGCGGCGGUGCCAGGCCGGGCGUGGGCGAGAGCACGAACGGGCUGCCUGCGGGCUGAGAGCGUCGAGCUGUCACC\
) } def
/len { sequence length } bind def

/coor [
[189.12985229 198.40972900]
[178.44845581 187.87843323]
[167.76707458 177.34715271]
[157.08569336 166.81585693]
[146.40431213 156.28457642]
[135.72293091 145.75328064]
[125.04154205 135.22200012]
[114.36015320 124.69070435]
[103.91874695 129.15653992]
[92.22946167 129.26020813]
[81.09229279 124.73023224]
[72.31969452 116.02796936]
[67.44277954 104.31227875]
[67.44824982 91.28849030]
[52.44975281 91.07622528]
[37.45125580 90.86396790]
[22.45275688 90.65170288]
[7.45425892 90.43943787]
[-7.54423904 90.22718048]
[-22.54273796 90.01491547]
[-37.54123688 89.80265045]
[-52.53973389 89.59039307]
[-67.53823090 89.37812805]
[-75.97581482 102.29364777]
[-90.06594086 108.57631683]
[-105.31250000 106.22134399]
[-116.85037994 95.98020172]
[-120.99787140 81.12080383]
[-116.43153381 66.38471985]
[-104.60846710 56.47418976]
[-89.30136871 54.55162048]
[-75.39467621 61.23050308]
[-67.32596588 74.37963104]
[-52.32747269 74.59188843]
[-37.32897186 74.80415344]
[-22.33047485 75.01641846]
[-7.33197641 75.22868347]
[7.66652155 75.44094086]
[22.66501999 75.65320587]
[37.66351700 75.86547089]
[52.66201401 76.07772827]
[67.66051483 76.28999329]
[78.63564301 66.06519318]
[79.48426819 51.08921814]
[80.33289337 36.11324310]
[81.18151855 21.13726807]
[67.97396851 10.68334293]
[63.59072495 -5.40923548]
[69.55311584 -20.80886078]
[83.35144806 -29.57663536]
[83.77593231 -44.57062912]
[84.20041656 -59.56462097]
[72.39118195 -69.81528473]
[69.98485565 -85.26661682]
[78.11762238 -98.62296295]
[92.94944763 -103.57787323]
[107.47718048 -97.79179382]
[114.84128571 -83.99671936]
[111.56465912 -68.70627594]
[99.19440460 -59.14013672]
[98.76992798 -44.14614487]
[98.34544373 -29.15215302]
[109.68987274 -21.96127319]
[116.01749420 -9.99053669]
[115.56270599 3.65082836]
[108.33765411 15.35861111]
[96.15749359 21.98589325]
[95.30886841 36.96186829]
[94.46024323 51.93784332]
[93.61161804 66.91381836]
[108.52819824 68.46230316]
[120.83979797 76.18785095]
[128.23509216 88.16095734]
[129.54045105 101.70927429]
[124.89144135 114.00932312]
[135.57283020 124.54061127]
[146.25421143 135.07189941]
[156.93559265 145.60319519]
[167.61697388 156.13447571]
[178.29837036 166.66577148]
[188.97975159 177.19705200]
[199.66113281 187.72834778]
[209.25630188 186.37524414]
[218.23648071 189.62777710]
[224.55294800 196.60545349]
[226.82995605 205.59448242]
[224.66291809 214.46757507]
[234.41271973 225.86676025]
[242.49209595 230.44172668]
[244.27156067 237.72927856]
[253.69485474 249.39981079]
[263.11816406 261.07034302]
[277.80758667 266.94665527]
[279.78323364 281.70965576]
[289.20654297 293.38018799]
[298.62982178 305.05072021]
[314.36608887 308.17318726]
[321.60794067 322.48873901]
[314.80007935 337.01568604]
[299.16491699 340.61022949]
[286.69638062 330.51492310]
[286.95928955 314.47402954]
[277.53598022 302.80346680]
[268.11270142 291.13293457]
[254.09727478 286.09140015]
[251.44761658 270.49365234]
[242.02432251 258.82312012]
[232.60102844 247.15257263]
[223.01351929 235.61654663]
[213.26373291 224.21736145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[4 79]
[5 78]
[6 77]
[7 76]
[8 75]
[14 42]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[43 70]
[44 69]
[45 68]
[46 67]
[50 62]
[51 61]
[52 60]
[87 110]
[88 109]
[90 108]
[91 107]
[92 106]
[94 104]
[95 103]
[96 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
