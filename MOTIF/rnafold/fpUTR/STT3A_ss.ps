%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCCUGGAGCCAGCCAACGGGGGAGCGGUCCGGGAGGCGGACCCGGCUCCUGCCAGGGUUGGGUGCGCCGCUGAACGGAUGGCUGAGGGAGCCCCGCGGAUCGUUUAGGAAAGCCGGCCAGGCAUUCCAGAAAACAGCUGCAAACCCUGAGAGAUAUGGCUGGAUUGUUGACCUCCUGGAGUAGUUAGGCCUUUAUUUUUAGUUGCAAACUGAUCGUCGUGUGUUGCCACCCAUUCAUGUCAAG\
) } def
/len { sequence length } bind def

/coor [
[333.84143066 369.53131104]
[338.71520996 358.98809814]
[345.20623779 349.35195923]
[353.15002441 340.86901855]
[344.27188110 328.77859497]
[335.39370728 316.68817139]
[326.51556396 304.59774780]
[317.63739014 292.50732422]
[308.01177979 281.00311279]
[297.67727661 270.13119507]
[287.34277344 259.25930786]
[277.00827026 248.38742065]
[266.07113647 238.12199402]
[254.56689453 228.49635315]
[243.06266785 218.87072754]
[231.55844116 209.24508667]
[220.05421448 199.61946106]
[208.54998779 189.99383545]
[197.04576111 180.36819458]
[173.97587585 178.96034241]
[166.07449341 156.46269226]
[153.87257385 147.73840332]
[141.67066956 139.01411438]
[129.46875000 130.28982544]
[117.26683044 121.56552887]
[93.24491882 126.78776550]
[74.57176971 110.79909515]
[59.69195938 112.69417572]
[44.81215286 114.58925629]
[32.10007858 124.00805664]
[18.49726677 117.94069672]
[3.61745977 119.83577728]
[-11.26234818 121.73085785]
[-26.14215469 123.62593079]
[-41.02196121 125.52101135]
[-55.86307907 127.69847107]
[-70.66014099 130.15753174]
[-83.00518036 140.05250549]
[-96.82868958 134.50634766]
[-111.62575531 136.96540833]
[-126.42281342 139.42445374]
[-141.21987915 141.88351440]
[-153.56491089 151.77848816]
[-167.38842773 146.23234558]
[-182.18548584 148.69139099]
[-196.98254395 151.15045166]
[-211.77961731 153.60949707]
[-226.57667542 156.06855774]
[-241.37373352 158.52761841]
[-256.17080688 160.98666382]
[-270.96786499 163.44572449]
[-285.76492310 165.90476990]
[-294.75195312 178.90510559]
[-310.31417847 181.66069031]
[-323.21875000 172.53671265]
[-325.80966187 156.94624329]
[-316.54974365 144.13883972]
[-300.93276978 141.71290588]
[-288.22396851 151.10771179]
[-273.42691040 148.64865112]
[-258.62985229 146.18960571]
[-243.83279419 143.73054504]
[-229.03573608 141.27149963]
[-214.23866272 138.81243896]
[-199.44160461 136.35339355]
[-184.64454651 133.89433289]
[-169.84747314 131.43528748]
[-158.56082153 121.71618652]
[-143.67892456 127.08644867]
[-128.88186646 124.62739563]
[-114.08480835 122.16834259]
[-99.28774261 119.70928955]
[-88.00109100 109.99019623]
[-73.11919403 115.36046600]
[-58.32213211 112.90141296]
[-55.99250793 110.28514099]
[-52.28993225 108.65598297]
[-47.68692017 108.64258575]
[-42.91704178 110.64120483]
[-28.03723526 108.74612427]
[-13.15742683 106.85104370]
[1.72238088 104.95597076]
[16.60218811 103.06089020]
[28.24995995 93.77764130]
[42.91707230 99.70944977]
[57.79688263 97.81436920]
[72.67668915 95.91928864]
[70.93643951 92.14341736]
[69.73474884 87.91958618]
[69.15058136 83.32529449]
[58.81608200 72.45339966]
[48.48157883 61.58151245]
[33.18659592 54.26715088]
[35.98103714 37.54508591]
[52.82317352 35.60119247]
[59.35346985 51.24700928]
[69.68797302 62.11890030]
[80.02247620 72.99079132]
[93.76910400 66.98826599]
[92.81965637 52.01834106]
[91.87021637 37.04841995]
[90.92076874 22.07849884]
[77.26303101 15.19275761]
[68.94058228 2.47923589]
[68.10473633 -12.59284878]
[74.87998962 -25.97014046]
[87.35740662 -34.10522079]
[86.40796661 -49.07514191]
[85.45851898 -64.04506683]
[74.90956116 -79.15178680]
[83.34106445 -94.55432129]
[82.20206451 -109.51101685]
[81.06307220 -124.46771240]
[79.92407227 -139.42440796]
[71.16122437 -152.59721375]
[77.90975952 -165.87525940]
[76.77076721 -180.83195496]
[75.63176727 -195.78865051]
[64.44454956 -207.28759766]
[66.60253143 -223.18484497]
[80.45030212 -231.28540039]
[95.36502838 -225.37519836]
[99.90541077 -209.98803711]
[90.58846283 -196.92764282]
[91.72745514 -181.97094727]
[92.86645508 -167.01426697]
[101.54783630 -154.91125488]
[94.88076782 -140.56340027]
[96.01976013 -125.60671234]
[97.15876007 -110.65001678]
[98.29776001 -95.69332123]
[107.26035309 -87.59204865]
[108.34477234 -75.15744019]
[100.42844391 -64.99450684]
[101.37788391 -50.02458572]
[102.32733154 -35.05466461]
[115.73254395 -28.56114960]
[124.14357758 -16.14702225]
[125.21861267 -1.09010792]
[118.56906128 12.57298946]
[105.89069366 21.12905502]
[106.84013367 36.09897614]
[107.78958130 51.06890106]
[108.73902130 66.03881836]
[120.57019806 73.93109131]
[127.70881653 85.34214783]
[129.41362000 97.92604828]
[125.99111938 109.36361694]
[138.19303894 118.08790588]
[150.39495850 126.81219482]
[162.59686279 135.53648376]
[174.79878235 144.26077271]
[180.98492432 141.49542236]
[187.67018127 140.76823425]
[194.20552063 142.11807251]
[199.96615601 145.38366699]
[204.41130066 150.22221375]
[207.13488770 156.14505005]
[207.90252686 162.56697083]
[206.67140198 168.86396790]
[218.17562866 178.48960876]
[229.67985535 188.11523438]
[241.18408203 197.74085999]
[252.68830872 207.36650085]
[264.19253540 216.99212646]
[275.69674683 226.61776733]
[272.44277954 211.97496033]
[277.53656006 197.86633301]
[289.39404297 188.67936707]
[304.32778931 187.27104187]
[317.69369507 194.07929993]
[325.33523560 206.98692322]
[324.87606812 221.97990417]
[316.45895386 234.39570618]
[302.70147705 240.37329102]
[287.88015747 238.05291748]
[298.21466064 248.92480469]
[308.54916382 259.79669189]
[318.88366699 270.66860962]
[316.71569824 255.82609558]
[322.18112183 241.85723877]
[333.84603882 232.42697144]
[348.64993286 230.00946045]
[362.70880127 235.23899841]
[372.33407593 246.74351501]
[375.00042725 261.50463867]
[370.00827026 275.64953613]
[358.66741943 285.46710205]
[343.95324707 288.38153076]
[329.72781372 283.62918091]
[338.60598755 295.71960449]
[347.48413086 307.81002808]
[356.36230469 319.90045166]
[365.24044800 331.99087524]
[382.46752930 324.71646118]
[400.97042847 322.07174683]
[419.52764893 324.22662354]
[436.91528320 331.03436279]
[451.98782349 342.04147339]
[463.75350952 356.51797485]
[471.43957520 373.50585938]
[474.54309082 391.88232422]
[472.86386108 410.43411255]
[466.51724243 427.93762207]
[455.92633057 443.23953247]
[465.98211670 454.36972046]
[480.97473145 459.42266846]
[483.76571655 474.05346680]
[493.82147217 485.18365479]
[503.87725830 496.31387329]
[513.93304443 507.44406128]
[524.05908203 518.51037598]
[534.25506592 529.51226807]
[544.52050781 540.44940186]
[554.85498047 551.32128906]
[565.18951416 562.19317627]
[580.48449707 569.50756836]
[577.69006348 586.22961426]
[560.84790039 588.17352295]
[554.31762695 572.52770996]
[543.98309326 561.65582275]
[533.64862061 550.78393555]
[526.77905273 548.10778809]
[523.25311279 539.70825195]
[513.05718994 528.70629883]
[506.22207642 525.94342041]
[502.80282593 517.49981689]
[492.74703979 506.36962891]
[482.69128418 495.23944092]
[472.63549805 484.10922241]
[458.36215210 479.85238647]
[454.85189819 464.42550659]
[444.79614258 453.29528809]
[434.95556641 459.36734009]
[424.27124023 463.79751587]
[413.01495361 466.47201538]
[401.47326660 467.32165527]
[389.94018555 466.32379150]
[378.70965576 463.50277710]
[368.06805420 458.92950439]
[358.28695679 452.71954346]
[349.61608887 445.03024292]
[342.27709961 436.05676270]
[336.45776367 426.02703857]
[332.30725098 415.19613647]
[329.93225098 403.83963013]
[329.39431763 392.24667358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[9 179]
[10 178]
[11 177]
[12 176]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 160]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[27 87]
[28 86]
[29 85]
[31 83]
[32 82]
[33 81]
[34 80]
[35 79]
[36 75]
[37 74]
[39 72]
[40 71]
[41 70]
[42 69]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[90 98]
[91 97]
[92 96]
[99 144]
[100 143]
[101 142]
[102 141]
[107 136]
[108 135]
[109 134]
[111 131]
[112 130]
[113 129]
[114 128]
[116 126]
[117 125]
[118 124]
[205 233]
[206 232]
[208 230]
[209 229]
[210 228]
[211 227]
[212 225]
[213 224]
[214 222]
[215 221]
[216 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
