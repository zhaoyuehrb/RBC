%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCUUCUUGAUCCUUCACAAGGGAAGAUUUUCUUUUUUAGAGGUACAGAUUCCUCUUAGUCAAGUCCUGAUUAAAACUCCAGCUAAGACAUUAGUAAGCCUUGGUUAGUGAAGUGGCAUCAGGAAGUGCCUACAUUUUCAUGGCCUGGUAGCGUUCAGUGAAAAUGUUCAUUAACAGACACAGGCCAUUCAGUCCCGAAUCCCAAGACACUGAAGACUCUGUUUGAAUCAGACUCACGGGUUCCUUCCUAGC\
CACUCUCAGGGACAGGAAUGCUUCUGGUGAAGAAGUUUUCGGUGGUGGUUC\
) } def
/len { sequence length } bind def

/coor [
[205.45405579 230.15867615]
[207.54492188 215.30462646]
[200.59040833 218.11259460]
[195.91137695 232.36413574]
[191.23234558 246.61569214]
[186.55331421 260.86724854]
[181.87428284 275.11880493]
[177.19526672 289.37033081]
[184.07339478 303.34634399]
[179.12518311 317.73278809]
[165.75878906 324.20391846]
[161.07977295 338.45547485]
[156.40074158 352.70703125]
[160.28883362 368.63858032]
[148.25035095 379.77444458]
[132.66946411 374.65896606]
[129.57444763 358.55453491]
[142.14918518 348.02798462]
[146.82821655 333.77645874]
[151.50724792 319.52490234]
[144.57775879 306.39028931]
[149.11994934 291.87054443]
[162.94371033 284.69131470]
[167.62274170 270.43975830]
[172.30177307 256.18820190]
[176.98078918 241.93666077]
[181.65982056 227.68511963]
[186.33885193 213.43356323]
[183.06520081 198.79515076]
[172.76124573 187.89430237]
[162.45729065 176.99345398]
[152.15333557 166.09260559]
[141.84938049 155.19175720]
[131.60891724 161.63096619]
[120.40435028 166.19035339]
[108.57742310 168.73083496]
[96.48887634 169.17494202]
[84.50741577 167.50910950]
[72.99850464 163.78416443]
[62.31317520 158.11370850]
[52.77734756 150.67071533]
[44.68186951 141.68218994]
[31.79502869 149.35873413]
[18.90818405 157.03527832]
[6.02134180 164.71180725]
[-6.86550140 172.38835144]
[-8.14261341 187.85278320]
[-18.29107475 199.59111023]
[-33.40859604 203.08970642]
[-47.68217850 197.00329590]
[-55.62334442 183.67222595]
[-54.17854691 168.22256470]
[-43.90334320 156.59501648]
[-28.74876022 153.26062012]
[-14.54204178 159.50151062]
[-1.65519893 151.82496643]
[11.23164368 144.14843750]
[24.11848640 136.47189331]
[37.00532913 128.79534912]
[32.47850037 115.43851471]
[30.75101280 101.44161987]
[31.89448547 87.38495636]
[17.52790642 83.07201385]
[3.16132951 78.75907898]
[-11.20524788 74.44613647]
[-25.00074577 81.67953491]
[-39.50905991 77.10094452]
[-46.31998062 63.90446854]
[-60.68655777 59.59152985]
[-75.07501221 55.35215378]
[-89.48497009 51.18645096]
[-103.89493561 47.02075195]
[-118.30489349 42.85504913]
[-132.71485901 38.68935013]
[-147.12481689 34.52365112]
[-161.53477478 30.35795021]
[-175.94473267 26.19224930]
[-189.66548157 33.56643677]
[-204.21989441 29.13654900]
[-211.16549683 16.01045990]
[-225.57545471 11.84475994]
[-234.72360229 17.60931396]
[-245.31587219 17.42028427]
[-253.89047241 11.57923317]
[-257.77618408 2.19584894]
[-272.09790039 -2.26387858]
[-286.41958618 -6.72360611]
[-300.74127197 -11.18333340]
[-315.06295776 -15.64306068]
[-330.93298340 -11.51089382]
[-342.25228882 -23.37702179]
[-337.37658691 -39.03459167]
[-321.32153320 -42.37643433]
[-310.60324097 -29.96475220]
[-296.28155518 -25.50502396]
[-281.95983887 -21.04529762]
[-267.63815308 -16.58556938]
[-253.31646729 -12.12584209]
[-234.77171326 -17.70277977]
[-221.40975952 -2.56519961]
[-206.99980164 1.60050094]
[-194.12174988 -5.79487038]
[-179.44865417 -1.77553308]
[-171.77903748 11.78228951]
[-157.36906433 15.94798946]
[-142.95910645 20.11368942]
[-128.54914856 24.27939034]
[-114.13919067 28.44509125]
[-99.72923279 32.61079025]
[-85.31927490 36.77649307]
[-70.90930939 40.94219208]
[-63.64821625 39.78706360]
[-56.37361526 45.22494888]
[-42.00703812 49.53789139]
[-29.05398941 42.27468872]
[-14.42279816 46.44396591]
[-6.89230824 60.07955933]
[7.47426939 64.39250183]
[21.84084702 68.70543671]
[36.20742416 73.01837921]
[40.77317047 62.83160019]
[46.96944046 53.41948700]
[54.66439056 45.04352570]
[63.68419266 37.94268036]
[73.81687164 32.32666397]
[67.84697723 18.56583977]
[61.87708664 4.80501175]
[55.90719223 -8.95581532]
[49.93729782 -22.71664238]
[43.96740341 -36.47747040]
[37.99750900 -50.23829651]
[24.50795174 -59.56373978]
[26.10874939 -75.88456726]
[41.15313721 -82.41131592]
[54.16474152 -72.42981720]
[51.75833511 -56.20819092]
[57.72822952 -42.44736481]
[63.69812393 -28.68653679]
[69.66802216 -14.92570972]
[75.63791656 -1.16488266]
[81.60781097 12.59594440]
[87.57770538 26.35677147]
[102.54453278 25.35976982]
[106.63645172 10.92868423]
[110.72836304 -3.50240064]
[114.82028198 -17.93348503]
[118.91219330 -32.36457062]
[123.00411224 -46.79565811]
[127.09603119 -61.22674179]
[131.18794250 -75.65782928]
[135.20597839 -90.10965729]
[139.14999390 -104.58186340]
[131.17706299 -115.39973450]
[130.87821960 -128.64060974]
[138.13890076 -139.48423767]
[150.13302612 -144.11128235]
[154.22492981 -158.54237366]
[158.31684875 -172.97346497]
[157.64566040 -182.03105164]
[162.52517700 -187.53088379]
[166.76455688 -201.91932678]
[171.00393677 -216.30778503]
[175.24330139 -230.69624329]
[179.48268127 -245.08470154]
[183.72206116 -259.47317505]
[179.34678650 -275.27786255]
[191.03778076 -286.77801514]
[206.76834106 -282.14318848]
[210.35621643 -266.14135742]
[198.11051941 -255.23377991]
[193.87113953 -240.84532166]
[189.63175964 -226.45687866]
[185.39239502 -212.06842041]
[181.15301514 -197.67996216]
[176.91363525 -183.29150391]
[172.74794006 -168.88154602]
[168.65602112 -154.45045471]
[164.56410217 -140.01936340]
[173.37998962 -125.67059326]
[168.97988892 -109.06450653]
[153.62220764 -100.63783264]
[149.67817688 -86.16563416]
[150.94461060 -78.92311859]
[145.61903381 -71.56591034]
[141.52711487 -57.13482666]
[137.43519592 -42.70373917]
[133.34327698 -28.27265549]
[129.25137329 -13.84156990]
[125.15944672 0.58951569]
[121.06753540 15.02060127]
[116.97561646 29.45168686]
[132.23007202 35.39803314]
[145.68879700 44.57483673]
[156.68377686 56.48152924]
[164.67945862 70.48329163]
[169.29882812 85.84482574]
[170.34106445 101.76896667]
[167.78994751 117.43800354]
[161.81285095 132.05572510]
[152.75021362 144.88780212]
[163.05418396 155.78865051]
[173.35813904 166.68949890]
[183.66209412 177.59034729]
[193.96604919 188.49119568]
[235.41589355 193.61813354]
[248.67846680 200.62554932]
[261.94107056 207.63296509]
[272.06985474 203.84797668]
[282.40264893 206.18580627]
[289.61114502 213.64764404]
[291.50872803 223.62490845]
[304.62512207 230.90228271]
[317.74151611 238.17964172]
[330.85791016 245.45701599]
[343.97430420 252.73437500]
[357.09072876 260.01174927]
[370.20712280 267.28909302]
[383.32351685 274.56646729]
[396.43991089 281.84384155]
[409.55633545 289.12118530]
[422.67272949 296.39855957]
[435.82617188 303.60873413]
[449.01635742 310.75149536]
[463.56625366 314.39849854]
[478.56607056 314.32177734]
[493.56585693 314.24502563]
[508.56567383 314.16827393]
[523.56549072 314.09152222]
[539.37347412 307.96420288]
[549.63739014 321.45822144]
[539.51208496 335.05654907]
[523.64221191 329.09130859]
[508.64242554 329.16806030]
[493.64260864 329.24481201]
[478.64282227 329.32156372]
[463.64300537 329.39831543]
[459.03695679 343.67361450]
[471.16317749 352.50280762]
[483.28939819 361.33200073]
[495.41561890 370.16119385]
[511.12619019 372.02920532]
[516.86083984 385.77560425]
[528.98706055 394.60479736]
[544.05432129 387.73709106]
[560.43353271 389.41036987]
[573.64898682 399.07180786]
[580.13757324 413.99890137]
[578.20953369 430.06591797]
[590.42547607 438.77056885]
[602.64141846 447.47518921]
[614.85736084 456.17984009]
[627.07330322 464.88449097]
[642.46228027 462.47265625]
[654.72698975 471.47442627]
[656.93145752 486.16033936]
[669.14739990 494.86499023]
[683.81683350 489.80673218]
[698.64801025 494.36920166]
[707.93798828 506.79806519]
[708.11456299 522.31414795]
[699.10986328 534.95117188]
[684.38635254 539.84997559]
[669.60552979 535.12689209]
[660.45098877 522.59802246]
[660.44274902 507.08093262]
[648.22680664 498.37628174]
[633.62591553 501.08728027]
[621.11322021 492.43356323]
[618.36865234 477.10043335]
[606.15270996 468.39578247]
[593.93676758 459.69113159]
[581.72082520 450.98651123]
[569.50488281 442.28186035]
[557.50720215 448.74954224]
[543.82818604 449.43106079]
[531.12506104 444.13705444]
[521.89013672 433.84466553]
[517.96160889 420.51742554]
[520.15783691 406.73101807]
[508.03161621 397.90182495]
[493.18844604 396.66534424]
[486.58645630 382.28741455]
[474.46020508 373.45822144]
[462.33398438 364.62902832]
[450.20776367 355.79983521]
[441.87359619 323.94168091]
[428.68341064 316.79888916]
[421.34301758 316.37905884]
[415.39535522 309.51495361]
[402.27896118 302.23760986]
[389.16256714 294.96023560]
[376.04614258 287.68286133]
[362.92974854 280.40551758]
[349.81335449 273.12814331]
[336.69696045 265.85076904]
[323.58056641 258.57339478]
[310.46414185 251.29605103]
[297.34774780 244.01867676]
[284.23135376 236.74131775]
[264.94018555 238.43286133]
[254.93363953 220.89555359]
[241.67105103 213.88813782]
[228.40847778 206.88072205]
[221.45394897 209.68869019]
[233.27207947 218.92622375]
[231.18127441 233.77980042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 28]
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[11 20]
[12 19]
[13 18]
[29 204]
[30 203]
[31 202]
[32 201]
[33 200]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[62 120]
[63 119]
[64 118]
[65 117]
[68 114]
[69 113]
[70 111]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[80 101]
[81 100]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[125 142]
[126 141]
[127 140]
[128 139]
[129 138]
[130 137]
[131 136]
[143 191]
[144 190]
[145 189]
[146 188]
[147 187]
[148 186]
[149 185]
[150 184]
[151 182]
[152 181]
[156 178]
[157 177]
[158 176]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
[205 303]
[206 302]
[207 301]
[211 299]
[212 298]
[213 297]
[214 296]
[215 295]
[216 294]
[217 293]
[218 292]
[219 291]
[220 290]
[221 289]
[222 287]
[223 286]
[224 236]
[225 235]
[226 234]
[227 233]
[228 232]
[237 285]
[238 284]
[239 283]
[240 282]
[242 280]
[243 279]
[248 273]
[249 272]
[250 271]
[251 270]
[252 269]
[255 266]
[256 265]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
