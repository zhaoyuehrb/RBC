%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCCCGCGGGGCGGGGCUUGUGAGCUGGGGCUCCCCCGGAGCGGGCGAGUUGGUAAACAGAUCCGGAGCGCGUGGCGGGCGUCAGCGCGGUGGCCAGCGCGCAGAGGCGGGCGCGGAGGCGGCUAGAAGGUGACCGCGGAUCCCAGCUUCCUGCAGCCAGCCCUGAAGG\
) } def
/len { sequence length } bind def

/coor [
[-58.96228790 584.79650879]
[-71.05122375 594.97656250]
[-86.79041290 593.54351807]
[-96.84207153 581.34765625]
[-95.24272919 565.62451172]
[-82.94124603 555.70233154]
[-81.58115387 540.76416016]
[-91.28250122 529.52050781]
[-90.11597443 514.35162354]
[-78.25682831 504.25222778]
[-76.89673615 489.31399536]
[-75.53664398 474.37579346]
[-74.17655182 459.43759155]
[-72.81645966 444.49935913]
[-71.45636749 429.56115723]
[-78.96453857 420.04821777]
[-77.93051147 407.57077026]
[-68.36538696 398.88320923]
[-66.73426819 383.97213745]
[-65.10314178 369.06109619]
[-63.47201920 354.15005493]
[-69.25607300 349.37567139]
[-71.74160004 364.16830444]
[-85.79519653 369.41198730]
[-97.36309814 359.86297607]
[-94.87725830 345.07040405]
[-80.82418060 339.82690430]
[-86.60823822 335.05252075]
[-100.93991852 339.48004150]
[-115.27159882 343.90756226]
[-129.60327148 348.33511353]
[-143.93495178 352.76263428]
[-158.26663208 357.19015503]
[-171.61537170 367.64230347]
[-185.35435486 357.70867920]
[-179.61227417 341.75674438]
[-162.69415283 342.85845947]
[-148.36247253 338.43093872]
[-134.03080750 334.00341797]
[-119.69911957 329.57589722]
[-105.36743927 325.14837646]
[-91.03576660 320.72085571]
[-69.67561340 322.45281982]
[-57.10588837 334.18771362]
[-49.80332184 321.08532715]
[-42.50075531 307.98294067]
[-35.19818878 294.88055420]
[-27.89562035 281.77816772]
[-27.38401985 274.37823486]
[-20.33962631 268.50592041]
[-12.80034447 255.53829956]
[-5.26106262 242.57067871]
[2.27821922 229.60304260]
[9.81750107 216.63542175]
[17.35678291 203.66780090]
[24.89606476 190.70018005]
[10.11405373 193.24815369]
[-2.23635674 184.73536682]
[-5.11528301 170.01423645]
[3.11829758 157.47596741]
[17.77114487 154.26753235]
[30.49095917 162.21777344]
[34.02700043 176.79690552]
[42.93169403 164.72601318]
[51.83638763 152.65513611]
[60.74108124 140.58424377]
[69.64577484 128.51335144]
[78.55046844 116.44245148]
[67.12232971 97.32163239]
[73.33283234 71.61518097]
[99.15113068 55.10145950]
[96.17469788 40.39972687]
[93.19826508 25.69799805]
[90.22183990 10.99626827]
[85.43592072 3.17306376]
[87.32739258 -3.99933243]
[84.61841583 -18.75268555]
[81.90943909 -33.50603867]
[79.20046234 -48.25939178]
[68.16459656 -60.38959503]
[73.40881348 -75.92761993]
[89.53830719 -78.88928223]
[99.96044159 -66.22787476]
[93.95381165 -50.96837234]
[96.66278839 -36.21501923]
[99.37177277 -21.46166420]
[102.08074951 -6.70831060]
[104.92356873 8.01983833]
[107.90000153 22.72156906]
[110.87642670 37.42329788]
[113.85285950 52.12502670]
[128.10177612 56.81206512]
[139.22460938 46.74814606]
[150.34745789 36.68422318]
[155.38941956 21.68792152]
[170.01814270 18.88621902]
[181.14099121 8.82229996]
[192.26382446 -1.24161994]
[193.20982361 -16.78970146]
[204.63333130 -26.83749771]
[219.45022583 -25.83981323]
[230.57305908 -35.90373230]
[241.69589233 -45.96765137]
[252.81872559 -56.03157043]
[263.94155884 -66.09548950]
[262.14840698 -81.50860596]
[269.78662109 -95.01554108]
[283.91918945 -101.42259216]
[299.11181641 -98.26612854]
[309.52267456 -86.75986481]
[311.14852905 -71.32820129]
[303.36422729 -57.90492630]
[289.16299438 -51.65156174]
[274.00549316 -54.97265625]
[262.88265991 -44.90873337]
[251.75981140 -34.84481430]
[240.63697815 -24.78089523]
[229.51414490 -14.71697521]
[229.02944946 0.12555391]
[217.89266968 10.49024868]
[202.32774353 9.88121796]
[191.20491028 19.94513702]
[180.08206177 30.00905800]
[175.83567810 44.28552246]
[160.41137695 47.80706406]
[149.28852844 57.87098312]
[138.16569519 67.93490601]
[140.18347168 75.15837860]
[154.63049316 71.12306976]
[158.66555786 85.57015228]
[144.21900940 89.60532379]
[146.23678589 96.82880402]
[160.96493530 99.67162323]
[177.66291809 96.73671722]
[185.10559082 111.96967316]
[172.52827454 123.33838654]
[158.12211609 114.39977264]
[143.39396667 111.55695343]
[116.54677582 131.93429565]
[90.62136078 125.34714508]
[81.71666718 137.41804504]
[72.81197357 149.48893738]
[63.90727997 161.55982971]
[55.00258636 173.63070679]
[46.09789276 185.70159912]
[37.86368942 198.23947144]
[30.32440567 211.20709229]
[22.78512383 224.17471313]
[15.24584103 237.14233398]
[7.70655918 250.10995483]
[0.16727734 263.07757568]
[-7.37200451 276.04519653]
[-14.79323483 289.08074951]
[-22.09580040 302.18313599]
[-29.39836693 315.28552246]
[-36.70093536 328.38790894]
[-44.00350189 341.49029541]
[-48.56097031 355.78115845]
[-50.19209290 370.69223022]
[-51.82321548 385.60327148]
[-53.45433807 400.51431274]
[-45.63999557 417.16992188]
[-56.51815796 430.92126465]
[-57.87824631 445.85946655]
[-59.23833847 460.79766846]
[-60.59843063 475.73590088]
[-61.95852280 490.67410278]
[-63.31861496 505.61230469]
[-53.47840881 517.68743896]
[-55.07053757 532.81750488]
[-66.64294434 542.12420654]
[-68.00303650 557.06243896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 172]
[7 171]
[10 168]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[18 161]
[19 160]
[20 159]
[21 158]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[44 157]
[45 156]
[46 155]
[47 154]
[48 153]
[50 152]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[71 91]
[72 90]
[73 89]
[74 88]
[76 87]
[77 86]
[78 85]
[79 84]
[92 127]
[93 126]
[94 125]
[96 123]
[97 122]
[98 121]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[132 138]
[133 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
