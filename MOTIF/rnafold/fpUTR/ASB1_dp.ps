%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ASB1)
} def

/sequence { (\
GUGAGGCCGGCGCGCGCCCGCCGGAAGCCGCGACCCCGACGCGCCCCCCAUUGCCCUCGGCGCCGGAAGUGGUCGCGGGUCGUUCUGCUUCCUGCCCGAGGGGCGUGCGCGGGUCAGGGGCGGCCGCGGAGGCGGAAGCAUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 121 0.006661048 ubox
1 141 0.003246250 ubox
2 116 0.066568111 ubox
2 120 0.006649151 ubox
2 140 0.003523756 ubox
3 115 0.067859323 ubox
3 142 0.015790418 ubox
4 114 0.047396584 ubox
4 141 0.014801211 ubox
5 115 0.992007622 ubox
6 114 0.998027794 ubox
7 112 0.021773158 ubox
7 113 0.999737139 ubox
8 111 0.022770914 ubox
8 112 0.999265968 ubox
9 110 0.016944494 ubox
10 110 0.999455095 ubox
11 109 0.999971300 ubox
12 108 0.999972880 ubox
13 107 0.999960779 ubox
14 104 0.003169493 ubox
14 106 0.999592907 ubox
15 103 0.003171144 ubox
15 105 0.999964862 ubox
16 104 0.999959677 ubox
17 102 0.062324415 ubox
17 103 0.998038992 ubox
18 101 0.087974069 ubox
18 102 0.996095216 ubox
19 98 0.016721365 ubox
19 100 0.107595178 ubox
19 101 0.993580059 ubox
19 102 0.004140960 ubox
20 95 0.980308945 ubox
20 97 0.022509731 ubox
21 94 0.979858969 ubox
21 101 0.006423786 ubox
22 94 0.046367199 ubox
22 98 0.180856849 ubox
22 100 0.008732360 ubox
23 92 0.992383292 ubox
23 93 0.012419187 ubox
23 96 0.008342342 ubox
23 97 0.115902592 ubox
24 91 0.995429861 ubox
24 92 0.009847478 ubox
24 95 0.009109912 ubox
24 96 0.094353191 ubox
25 90 0.999462251 ubox
26 86 0.004854016 ubox
26 89 0.999370943 ubox
26 93 0.003422002 ubox
27 85 0.005019410 ubox
27 88 0.999935267 ubox
28 78 0.003656043 ubox
28 87 0.999074985 ubox
29 77 0.004502593 ubox
29 87 0.028076334 ubox
30 76 0.004543615 ubox
30 83 0.993583268 ubox
30 86 0.014992718 ubox
31 75 0.004543895 ubox
31 82 0.999880068 ubox
32 74 0.004544563 ubox
32 81 0.999953805 ubox
33 73 0.004544113 ubox
33 80 0.999856193 ubox
34 72 0.004544527 ubox
34 78 0.003231736 ubox
34 79 0.999962985 ubox
35 71 0.004541363 ubox
35 77 0.004510517 ubox
35 78 0.999955832 ubox
35 79 0.003662400 ubox
36 66 0.004501439 ubox
36 77 0.999819203 ubox
36 78 0.005166769 ubox
37 59 0.003528594 ubox
37 65 0.004516552 ubox
37 75 0.999362414 ubox
37 77 0.006252959 ubox
38 58 0.003563698 ubox
38 64 0.004418481 ubox
38 74 0.999881976 ubox
38 76 0.006856926 ubox
39 57 0.003492723 ubox
39 73 0.999694181 ubox
40 65 0.004090386 ubox
40 71 0.052332455 ubox
40 72 0.997062780 ubox
40 75 0.006456475 ubox
40 77 0.003529708 ubox
41 54 0.003597792 ubox
41 63 0.084093779 ubox
41 64 0.004667785 ubox
41 70 0.072998404 ubox
41 74 0.006405466 ubox
41 76 0.008141941 ubox
42 53 0.003602558 ubox
42 62 0.084315686 ubox
42 69 0.075476924 ubox
42 71 0.987359865 ubox
42 75 0.008155589 ubox
43 52 0.003334940 ubox
43 61 0.084330914 ubox
43 70 0.991992571 ubox
43 73 0.006006484 ubox
43 74 0.008021317 ubox
44 60 0.084221826 ubox
44 66 0.011922641 ubox
44 69 0.991434427 ubox
44 72 0.009085022 ubox
45 59 0.083967113 ubox
45 60 0.004536466 ubox
45 65 0.012036618 ubox
45 66 0.085575917 ubox
45 71 0.009120232 ubox
45 72 0.004298879 ubox
46 59 0.006155888 ubox
46 65 0.085501796 ubox
46 66 0.200762545 ubox
46 71 0.004327680 ubox
47 60 0.003752398 ubox
47 65 0.200248209 ubox
47 66 0.868611001 ubox
48 59 0.003790039 ubox
48 60 0.008757177 ubox
48 65 0.865104511 ubox
48 66 0.427809861 ubox
49 59 0.008830330 ubox
49 65 0.432792404 ubox
49 71 0.003267759 ubox
50 70 0.003295886 ubox
51 60 0.005534155 ubox
51 69 0.003283950 ubox
52 59 0.006186047 ubox
52 62 0.880880690 ubox
53 58 0.006915389 ubox
53 61 0.995672788 ubox
53 63 0.024586041 ubox
54 60 0.995941899 ubox
54 62 0.024559559 ubox
55 59 0.988698547 ubox
60 76 0.003637690 ubox
61 75 0.003641745 ubox
62 74 0.003560394 ubox
63 72 0.004120816 ubox
64 71 0.042822052 ubox
65 70 0.038230070 ubox
87 95 0.008646210 ubox
88 94 0.008673321 ubox
92 100 0.003965646 ubox
93 99 0.007548457 ubox
93 100 0.004992507 ubox
95 101 0.003593848 ubox
96 100 0.045197224 ubox
96 101 0.009030177 ubox
117 125 0.003235163 ubox
117 142 0.207894245 ubox
117 143 0.947578017 ubox
118 124 0.003243244 ubox
118 125 0.004124377 ubox
118 141 0.170599731 ubox
118 142 0.955617335 ubox
118 143 0.091358360 ubox
119 124 0.004135592 ubox
119 141 0.861403551 ubox
119 142 0.092043378 ubox
119 143 0.006798044 ubox
120 139 0.998040455 ubox
120 141 0.015435360 ubox
120 142 0.005216385 ubox
121 138 0.999233727 ubox
123 133 0.005022924 ubox
123 139 0.004208865 ubox
124 132 0.005066597 ubox
124 135 0.999750285 ubox
125 131 0.005066068 ubox
125 134 0.999941407 ubox
126 133 0.999936102 ubox
127 132 0.999617235 ubox
128 143 0.006079153 ubox
129 142 0.006127470 ubox
130 141 0.005790416 ubox
132 139 0.006112978 ubox
133 138 0.006139440 ubox
5 115 0.9500000 lbox
6 114 0.9500000 lbox
7 113 0.9500000 lbox
8 112 0.9500000 lbox
10 110 0.9500000 lbox
11 109 0.9500000 lbox
12 108 0.9500000 lbox
13 107 0.9500000 lbox
14 106 0.9500000 lbox
15 105 0.9500000 lbox
16 104 0.9500000 lbox
17 103 0.9500000 lbox
18 102 0.9500000 lbox
19 101 0.9500000 lbox
20 95 0.9500000 lbox
21 94 0.9500000 lbox
23 92 0.9500000 lbox
24 91 0.9500000 lbox
25 90 0.9500000 lbox
26 89 0.9500000 lbox
27 88 0.9500000 lbox
28 87 0.9500000 lbox
30 83 0.9500000 lbox
31 82 0.9500000 lbox
32 81 0.9500000 lbox
33 80 0.9500000 lbox
34 79 0.9500000 lbox
35 78 0.9500000 lbox
36 77 0.9500000 lbox
37 75 0.9500000 lbox
38 74 0.9500000 lbox
39 73 0.9500000 lbox
40 72 0.9500000 lbox
42 71 0.9500000 lbox
43 70 0.9500000 lbox
44 69 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
54 60 0.9500000 lbox
55 59 0.9500000 lbox
117 143 0.9500000 lbox
118 142 0.9500000 lbox
119 141 0.9500000 lbox
120 139 0.9500000 lbox
121 138 0.9500000 lbox
124 135 0.9500000 lbox
125 134 0.9500000 lbox
126 133 0.9500000 lbox
127 132 0.9500000 lbox
showpage
end
%%EOF
