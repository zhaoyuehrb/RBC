%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PPM1L)
} def

/sequence { (\
ACUGCUCCGCCUCCCUCCCGGCGGGCUGUCCCCGCAGUGCUCCCGGACCCGGCGAGCCUUCGGGGCGCGCGUCGCUGGUGGUGGUUGAGGCUCUAGCGAUAAUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.011838349 ubox
2 28 0.013545848 ubox
2 89 0.033583350 ubox
2 90 0.009206228 ubox
2 96 0.044243700 ubox
3 71 0.003945537 ubox
3 88 0.033453598 ubox
3 89 0.008085489 ubox
3 95 0.044261944 ubox
3 98 0.798811672 ubox
3 101 0.013187666 ubox
3 104 0.005504450 ubox
4 8 0.003859486 ubox
4 26 0.049571285 ubox
4 68 0.004233771 ubox
4 70 0.012373053 ubox
4 91 0.062046154 ubox
4 94 0.039883639 ubox
4 97 0.985732671 ubox
4 100 0.003192478 ubox
5 25 0.049357706 ubox
5 67 0.004224929 ubox
5 69 0.012366591 ubox
5 89 0.099138672 ubox
5 90 0.051445052 ubox
5 96 0.985999810 ubox
6 24 0.006091180 ubox
6 25 0.010478686 ubox
6 88 0.105510761 ubox
6 89 0.036659027 ubox
6 95 0.945470718 ubox
6 99 0.004326734 ubox
7 23 0.004306091 ubox
7 24 0.063054158 ubox
7 84 0.044041330 ubox
7 87 0.106703349 ubox
7 89 0.006602778 ubox
7 90 0.019229815 ubox
7 98 0.004548141 ubox
8 23 0.063259767 ubox
8 83 0.044244705 ubox
8 87 0.023667491 ubox
8 89 0.019230735 ubox
8 98 0.003352859 ubox
9 22 0.063412766 ubox
9 82 0.044233882 ubox
9 85 0.108918014 ubox
9 86 0.017156156 ubox
9 91 0.989052784 ubox
10 21 0.063412443 ubox
10 81 0.044243811 ubox
10 84 0.111094866 ubox
10 90 0.990695883 ubox
11 20 0.063394853 ubox
11 80 0.044189597 ubox
11 83 0.110971566 ubox
11 84 0.005041395 ubox
11 89 0.990689295 ubox
12 81 0.005416594 ubox
12 83 0.005121318 ubox
12 84 0.011478920 ubox
12 88 0.989913286 ubox
13 78 0.037781222 ubox
13 80 0.005737551 ubox
13 81 0.098150500 ubox
13 83 0.021919171 ubox
13 84 0.173964442 ubox
13 87 0.968340572 ubox
14 77 0.037594705 ubox
14 78 0.022674276 ubox
14 80 0.097985286 ubox
14 81 0.203057480 ubox
14 83 0.213446827 ubox
14 84 0.936205829 ubox
15 77 0.022953602 ubox
15 78 0.045929936 ubox
15 80 0.203204011 ubox
15 81 0.192563171 ubox
15 83 0.940470123 ubox
15 84 0.057630372 ubox
16 77 0.045123838 ubox
16 78 0.014528642 ubox
16 80 0.188457192 ubox
16 81 0.845223059 ubox
16 83 0.049195630 ubox
16 84 0.026770402 ubox
17 77 0.015641299 ubox
17 78 0.116649737 ubox
17 80 0.896089853 ubox
17 81 0.259464491 ubox
17 83 0.028896345 ubox
17 84 0.009893840 ubox
18 77 0.112413946 ubox
18 78 0.968182798 ubox
18 80 0.198884834 ubox
18 81 0.014427897 ubox
18 83 0.007954818 ubox
19 74 0.159674116 ubox
19 77 0.983131047 ubox
19 80 0.013995238 ubox
20 73 0.162400673 ubox
20 76 0.983847310 ubox
20 79 0.008086276 ubox
21 72 0.162539056 ubox
21 75 0.984622803 ubox
22 71 0.162963296 ubox
22 74 0.984518949 ubox
22 77 0.004979916 ubox
23 70 0.164794798 ubox
23 73 0.978760466 ubox
23 76 0.004787066 ubox
24 72 0.883290895 ubox
24 73 0.097764237 ubox
24 75 0.004462621 ubox
25 68 0.179118063 ubox
25 70 0.940656878 ubox
25 72 0.138044705 ubox
26 67 0.176266979 ubox
26 69 0.935631320 ubox
26 71 0.169316485 ubox
26 74 0.003194796 ubox
27 67 0.745813607 ubox
27 69 0.278233083 ubox
27 71 0.018427084 ubox
28 66 0.774267811 ubox
28 68 0.569294818 ubox
28 70 0.031179009 ubox
29 65 0.176044468 ubox
29 67 0.564723178 ubox
29 69 0.030962898 ubox
30 64 0.154545704 ubox
30 65 0.983893292 ubox
31 63 0.129471414 ubox
31 64 0.987918501 ubox
31 65 0.010371988 ubox
32 62 0.098106666 ubox
32 63 0.991532387 ubox
32 64 0.009392224 ubox
33 62 0.995107005 ubox
33 63 0.008276170 ubox
34 61 0.997216553 ubox
36 59 0.966366697 ubox
36 60 0.150971196 ubox
37 58 0.985539308 ubox
37 59 0.140028031 ubox
39 57 0.999875657 ubox
40 56 0.999988735 ubox
41 55 0.999837862 ubox
42 54 0.999809456 ubox
43 52 0.999854971 ubox
44 51 0.999937890 ubox
45 50 0.986168514 ubox
71 100 0.060557893 ubox
72 99 0.062945370 ubox
73 98 0.063427506 ubox
74 97 0.063437993 ubox
75 96 0.063438533 ubox
76 95 0.063404754 ubox
77 94 0.063372692 ubox
78 93 0.063293398 ubox
80 92 0.058863545 ubox
81 91 0.062326242 ubox
82 90 0.062051479 ubox
83 92 0.009562702 ubox
84 91 0.009678443 ubox
85 90 0.009221119 ubox
85 102 0.003997332 ubox
86 101 0.004619779 ubox
87 100 0.004543006 ubox
90 97 0.077582958 ubox
91 96 0.077401976 ubox
92 99 0.034831503 ubox
93 98 0.037159188 ubox
94 101 0.014513355 ubox
94 104 0.010367917 ubox
95 100 0.014850950 ubox
95 103 0.010733084 ubox
3 98 0.9500000 lbox
4 97 0.9500000 lbox
5 96 0.9500000 lbox
6 95 0.9500000 lbox
9 91 0.9500000 lbox
10 90 0.9500000 lbox
11 89 0.9500000 lbox
12 88 0.9500000 lbox
13 87 0.9500000 lbox
14 84 0.9500000 lbox
15 83 0.9500000 lbox
16 81 0.9500000 lbox
17 80 0.9500000 lbox
18 78 0.9500000 lbox
19 77 0.9500000 lbox
20 76 0.9500000 lbox
21 75 0.9500000 lbox
22 74 0.9500000 lbox
23 73 0.9500000 lbox
24 72 0.9500000 lbox
25 70 0.9500000 lbox
26 69 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
30 65 0.9500000 lbox
31 64 0.9500000 lbox
32 63 0.9500000 lbox
33 62 0.9500000 lbox
34 61 0.9500000 lbox
36 59 0.9500000 lbox
37 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
showpage
end
%%EOF
