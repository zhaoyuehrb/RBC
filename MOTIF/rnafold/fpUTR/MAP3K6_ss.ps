%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:21:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCUGCCGAUCACCGGAUGCCCCAGAUUCCUGGGACCCAAUCCCGGAUUUCAGAACCUCAGGACCUUGCAAGUCCGAGCUAGGAUUUCUCCCUGGACUUUAGAUUCCUGGAACGGGACGUCAGGCCGUAUUCCGGAUCCCUAGAUCCCGUGGGAGAUUCUCCGAUUCCGAACGGAUUCCAGAUCCCAAGAUUCCUGAUCUGCCGGCCCAGGCUCCUGCCCCGCCCCCGGUUCCCAGUGCGCGGCGCCCCGCGC\
CUGAGCGCCCCCGC\
) } def
/len { sequence length } bind def

/coor [
[118.81815338 356.45333862]
[132.70399475 350.78030396]
[147.57629395 352.73342896]
[159.52726746 361.80041504]
[154.89201355 347.53457642]
[150.25675964 333.26870728]
[145.62150574 319.00286865]
[135.00599670 313.24972534]
[131.01469421 301.43087769]
[136.29629517 289.68914795]
[131.82733154 275.37036133]
[128.11921692 272.41189575]
[126.20962524 267.10665894]
[127.42517853 260.66610718]
[123.29061890 246.24719238]
[119.15605927 231.82826233]
[115.02149963 217.40933228]
[110.88694000 202.99040222]
[97.77588654 196.01646423]
[93.37744904 181.45251465]
[100.78126526 167.74772644]
[96.64669800 153.32879639]
[81.95658875 150.29554749]
[72.44912720 161.89761353]
[62.94166183 173.49969482]
[53.43420029 185.10176086]
[43.92673492 196.70384216]
[41.80252457 212.96482849]
[26.55625534 219.00495911]
[13.87197971 208.61067200]
[16.79819489 192.47471619]
[32.32466125 187.19636536]
[41.83212662 175.59429932]
[51.33958817 163.99221802]
[60.84705353 152.39015198]
[70.35451508 140.78807068]
[61.96200180 132.33644104]
[55.86127472 122.24449158]
[52.34915924 111.11070251]
[51.57091141 99.58038330]
[53.51500702 88.30828094]
[58.01687622 77.92144012]
[64.77129364 68.98428345]
[73.35245514 61.96800995]
[83.24052429 57.22586060]
[80.12184906 42.55364609]
[77.00317383 27.88143158]
[73.88449860 13.20921803]
[70.92594147 10.14095020]
[69.24526215 6.64673233]
[68.82094574 3.17391181]
[69.49049377 0.11813569]
[70.97885895 -2.21759844]
[68.54619598 -17.01902199]
[66.11352539 -31.82044411]
[63.68085480 -46.62186813]
[60.41843414 -50.60592651]
[59.11653900 -55.00194550]
[59.60763931 -59.00270462]
[61.43099594 -61.98153687]
[59.51637268 -76.85884094]
[57.60174561 -91.73614502]
[55.68712234 -106.61344910]
[53.77249527 -121.49076080]
[51.85787201 -136.36805725]
[40.35549545 -150.76875305]
[47.78788757 -166.68276978]
[45.70029068 -181.53678894]
[43.61269379 -196.39080811]
[41.52509689 -211.24482727]
[22.66092110 -216.86657715]
[9.33501434 -232.63945007]
[6.70061636 -254.09165955]
[-7.61819792 -258.56060791]
[-21.93701172 -263.02957153]
[-36.25582886 -267.49853516]
[-50.57464218 -271.96746826]
[-64.45379639 -264.40808105]
[-79.58930969 -268.95687866]
[-87.00155640 -282.91519165]
[-82.29298401 -298.00177002]
[-68.25709534 -305.26602173]
[-53.22114563 -300.39819336]
[-46.10568619 -286.28628540]
[-31.78687286 -281.81735229]
[-17.46805763 -277.34838867]
[-3.14924383 -272.87942505]
[11.16957092 -268.41049194]
[21.95966721 -278.83035278]
[17.99315453 -293.29641724]
[14.02664280 -307.76248169]
[10.06013012 -322.22851562]
[6.09361792 -336.69458008]
[2.12710547 -351.16064453]
[-1.92349958 -365.60336304]
[-6.05805969 -380.02230835]
[-10.19262028 -394.44122314]
[-23.73384094 -402.14013672]
[-27.72147179 -416.82186890]
[-20.29829597 -429.68389893]
[-24.43285561 -444.10281372]
[-28.56741714 -458.52175903]
[-32.70197678 -472.94067383]
[-36.83653641 -487.35958862]
[-52.29962921 -495.57574463]
[-56.92784500 -512.11236572]
[-48.32183456 -526.58001709]
[-52.62388229 -540.94982910]
[-56.92593002 -555.31970215]
[-62.36637497 -562.61193848]
[-61.19338989 -569.88183594]
[-65.32794952 -584.30072021]
[-69.46250916 -598.71966553]
[-73.76455688 -613.08947754]
[-78.23351288 -627.40832520]
[-82.70246887 -641.72711182]
[-87.17142487 -656.04595947]
[-102.07227325 -660.04199219]
[-112.43032074 -671.47503662]
[-114.94036102 -686.69683838]
[-108.80144501 -700.85015869]
[-95.97248077 -709.41876221]
[-80.54713440 -709.66845703]
[-67.44758606 -701.51947021]
[-60.85385513 -687.57220459]
[-62.86997604 -672.27716064]
[-72.85260773 -660.51489258]
[-68.38365173 -646.19610596]
[-63.91469955 -631.87725830]
[-59.44574356 -617.55847168]
[-55.73762894 -614.60003662]
[-53.82802963 -609.29473877]
[-55.04358292 -602.85424805]
[-50.90902328 -588.43530273]
[-46.77446365 -574.01635742]
[-42.55608749 -559.62176514]
[-38.25403976 -545.25189209]
[-33.95199203 -530.88208008]
[-21.88399887 -526.42547607]
[-14.46647644 -515.67755127]
[-14.58411598 -502.42474365]
[-22.41761208 -491.49417114]
[-18.28305054 -477.07522583]
[-14.14849091 -462.65631104]
[-10.01393032 -448.23739624]
[-5.87937069 -433.81845093]
[7.23168135 -426.84451294]
[11.63011646 -412.28057861]
[4.22630501 -398.57577515]
[8.36086559 -384.15686035]
[12.49542618 -369.73794556]
[17.34262848 -364.19430542]
[16.59316063 -355.12713623]
[20.55967331 -340.66110229]
[24.52618599 -326.19503784]
[28.49269867 -311.72897339]
[32.45920944 -297.26290894]
[36.42572403 -282.79687500]
[51.92260361 -279.83923340]
[63.75004578 -271.34451294]
[75.12775421 -281.11935425]
[86.50545502 -290.89422607]
[88.24857330 -303.65057373]
[97.89641571 -311.55844116]
[109.94757843 -310.81204224]
[121.43824768 -320.45385742]
[127.03635406 -335.25155640]
[141.75944519 -337.50537109]
[153.25012207 -347.14718628]
[164.74078369 -356.78900146]
[169.83811951 -372.37582397]
[185.93893433 -375.48959351]
[196.48010254 -362.92712402]
[190.61776733 -347.61160278]
[174.38259888 -345.29833984]
[162.89193726 -335.65652466]
[151.40126038 -326.01470947]
[146.62504578 -311.90664673]
[131.08006287 -308.96319580]
[119.58939362 -299.32138062]
[114.46418762 -282.52172852]
[96.28031158 -279.51651001]
[84.90261078 -269.74166870]
[73.52490234 -259.96679688]
[77.38374329 -246.72845459]
[75.47486115 -232.98265076]
[68.06092834 -221.14686584]
[56.37911606 -213.33242798]
[58.46671295 -198.47840881]
[60.55430984 -183.62437439]
[62.64190674 -168.77035522]
[72.09711456 -161.26124573]
[73.97546387 -148.92889404]
[66.73517609 -138.28268433]
[68.64980316 -123.40538025]
[70.56443024 -108.52807617]
[72.47904968 -93.65077209]
[74.39367676 -78.77346802]
[76.30830383 -63.89616013]
[78.48227692 -49.05453491]
[80.91494751 -34.25311279]
[83.34761810 -19.45169067]
[85.78028870 -4.65026760]
[88.55670929 10.09054279]
[91.67538452 24.76275635]
[94.79405975 39.43497086]
[97.91273499 54.10718536]
[114.02148438 56.25180054]
[128.37570190 63.87069702]
[139.17922974 76.01051331]
[145.08018494 91.15217590]
[145.34019470 107.40098572]
[159.55113220 112.20191193]
[173.76208496 117.00283813]
[189.72637939 113.25135040]
[200.75869751 125.38476562]
[195.50996399 140.92126465]
[179.37960815 143.87823486]
[168.96116638 131.21379089]
[154.75021362 126.41285706]
[140.53926086 121.61193085]
[133.84280396 133.23718262]
[123.79377747 142.75402832]
[111.06562805 149.19424438]
[115.20018768 163.61317444]
[128.74140930 171.31207275]
[132.72903442 185.99380493]
[125.30586243 198.85585022]
[129.44042969 213.27478027]
[133.57498169 227.69369507]
[137.70954895 242.11262512]
[141.84410095 256.53155518]
[146.14614868 270.90139771]
[150.61511230 285.22021484]
[164.44338989 297.40475464]
[159.88735962 314.36761475]
[164.52261353 328.63345337]
[169.15786743 342.89932251]
[173.79312134 357.16516113]
[179.25001526 371.13735962]
[185.51008606 384.76861572]
[191.77017212 398.39987183]
[198.03024292 412.03115845]
[204.52726746 425.55108643]
[211.25926208 438.95556641]
[217.99124146 452.36007690]
[224.72323608 465.76455688]
[231.45521545 479.16903687]
[243.96701050 490.60983276]
[236.43696594 505.79977417]
[219.75611877 502.76898193]
[218.05073547 485.90103149]
[211.31874084 472.49655151]
[204.58676147 459.09207153]
[197.85476685 445.68756104]
[191.12277222 432.28308105]
[187.94540405 430.83312988]
[185.30107117 427.79095459]
[183.92216492 423.41848755]
[184.39898682 418.29122925]
[178.13890076 404.65997314]
[171.87882996 391.02868652]
[165.61874390 377.39743042]
[162.97660828 392.16290283]
[153.36506653 403.67889404]
[139.31010437 408.91894531]
[124.50546265 406.50588989]
[112.84191132 397.07394409]
[107.38471985 383.10186768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 239]
[5 238]
[6 237]
[7 236]
[10 234]
[11 233]
[14 232]
[15 231]
[16 230]
[17 229]
[18 228]
[21 225]
[22 224]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[45 207]
[46 206]
[47 205]
[48 204]
[53 203]
[54 202]
[55 201]
[56 200]
[60 199]
[61 198]
[62 197]
[63 196]
[64 195]
[65 194]
[67 191]
[68 190]
[69 189]
[70 188]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[95 151]
[96 150]
[97 149]
[100 146]
[101 145]
[102 144]
[103 143]
[104 142]
[107 138]
[108 137]
[109 136]
[111 135]
[112 134]
[113 133]
[114 130]
[115 129]
[116 128]
[117 127]
[160 184]
[161 183]
[162 182]
[165 180]
[166 179]
[168 177]
[169 176]
[170 175]
[212 221]
[213 220]
[214 219]
[240 263]
[241 262]
[242 261]
[243 260]
[244 256]
[245 255]
[246 254]
[247 253]
[248 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
