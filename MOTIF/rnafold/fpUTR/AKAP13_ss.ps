%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:47:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGGAGCCCGAGCAGCCGCGGUGAAGCGCCUGUGCUCUGCCGAGACUGCCGUGCCCAUUGCUCGCCUCGGUCGCCGCCGCUUUAGCCGCCUCCGGGGGAGCGGCCGCCUAUUGUCUUUCUCCGCGGCGAAGGUGAAGAGUUGUCCCAGCUCGGCCCGCGGGGGAGCCCCGGGAGCCGCACGUGUCCUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[13.93838310 296.04440308]
[0.88273758 303.52865601]
[-13.89955807 301.90948486]
[-23.84639931 313.13714600]
[-33.79323959 324.36480713]
[-43.74007797 335.59246826]
[-53.68691635 346.82012939]
[-63.63375854 358.04779053]
[-73.58059692 369.27545166]
[-74.29970551 373.58828735]
[-76.17185211 377.09014893]
[-78.79801941 379.51702881]
[-81.73435974 380.76263428]
[-84.54785156 380.87924194]
[-95.19708252 391.44305420]
[-105.84632111 402.00683594]
[-116.49555206 412.57061768]
[-120.84395599 427.78253174]
[-135.32868958 431.25265503]
[-145.97792053 441.81646729]
[-156.62716675 452.38024902]
[-156.44017029 468.18344116]
[-167.54211426 479.43167114]
[-183.34638977 479.45156860]
[-194.47660828 468.23132324]
[-194.32940674 452.42770386]
[-182.99212646 441.41674805]
[-167.19096375 441.73101807]
[-156.54171753 431.16723633]
[-145.89248657 420.60342407]
[-142.30578613 406.14712524]
[-127.05934906 401.92138672]
[-116.41011810 391.35760498]
[-105.76087952 380.79379272]
[-95.11164856 370.23001099]
[-84.80825806 359.32861328]
[-74.86141968 348.10095215]
[-64.91458130 336.87329102]
[-54.96773911 325.64562988]
[-45.02090073 314.41796875]
[-35.07405853 303.19030762]
[-25.12722015 291.96264648]
[-28.51639557 277.48330688]
[-22.66039085 263.62072754]
[-9.61191845 255.77275085]
[5.73304176 257.12863159]
[15.67988205 245.90095520]
[25.62672234 234.67329407]
[35.57356262 223.44563293]
[45.15353012 211.90335083]
[54.35667801 200.05844116]
[63.46411896 188.13977051]
[72.47525024 176.14813232]
[81.48638153 164.15649414]
[90.49752045 152.16485596]
[99.50865173 140.17321777]
[78.38404083 130.86325073]
[67.08465576 112.42951202]
[68.23111725 92.30357361]
[79.76807404 77.58992767]
[72.79722595 64.30809021]
[65.82637787 51.02624893]
[58.85553360 37.74440765]
[51.88468552 24.46256638]
[44.91383743 11.18072605]
[38.14562988 5.02613783]
[37.93962860 -2.37171054]
[31.18365669 -15.76412773]
[24.42768478 -29.15654564]
[17.67171288 -42.54896164]
[10.91574001 -55.94137955]
[4.15976810 -69.33379364]
[-10.58153057 -74.36687469]
[-17.24226761 -88.04492950]
[-12.35315132 -102.06748962]
[-19.10912323 -115.45990753]
[-32.23277283 -124.29621887]
[-31.05703545 -139.14434814]
[-37.81300735 -152.53675842]
[-53.07590103 -155.93942261]
[-62.53966141 -168.38816833]
[-61.73579407 -184.00508118]
[-51.04386139 -195.41632080]
[-35.51226044 -197.23387146]
[-22.47454643 -188.59951782]
[-18.08672333 -173.59014893]
[-24.42058945 -159.29273987]
[-17.66461754 -145.90031433]
[-5.02420139 -138.02192688]
[-5.71670628 -122.21588135]
[1.03926563 -108.82346344]
[15.22251034 -104.42219543]
[22.26480675 -90.93662262]
[17.55218506 -76.08976746]
[24.30815697 -62.69735336]
[31.06412888 -49.30493546]
[37.82010269 -35.91251755]
[44.57607269 -22.52009964]
[51.33204651 -9.12768269]
[58.19567871 4.20987892]
[65.16652679 17.49172020]
[72.13737488 30.77355957]
[79.10822296 44.05540085]
[86.07907104 57.33724213]
[93.04991913 70.61907959]
[104.36238098 70.12506866]
[115.06123352 73.83320618]
[125.53890991 63.09922028]
[136.01657104 52.36523438]
[146.49424744 41.63124847]
[156.97192383 30.89726639]
[160.73379517 22.55844688]
[167.70590210 20.07646561]
[178.35513306 9.51266956]
[189.00437927 -1.05112660]
[199.65361023 -11.61492252]
[210.30284119 -22.17871857]
[206.98376465 -37.24481583]
[212.35836792 -51.70570374]
[224.71160889 -60.94696808]
[240.10162354 -62.01975250]
[253.61752319 -54.58173752]
[260.94641113 -41.00636292]
[259.74969482 -25.62548637]
[250.40922546 -13.34708595]
[235.90551758 -8.08915520]
[220.86663818 -11.52948284]
[210.21740723 -0.96568680]
[199.56817627 9.59810925]
[188.91893005 20.16190529]
[178.26969910 30.72570038]
[167.70590210 41.37493515]
[157.22822571 52.10892105]
[146.75056458 62.84290314]
[136.27288818 73.57688904]
[125.79521942 84.31087494]
[131.85035706 89.55303955]
[136.70726013 96.78182983]
[139.77156067 105.68780518]
[154.77107239 105.56697845]
[169.77058411 105.44615173]
[184.77009583 105.32531738]
[199.76960754 105.20449066]
[214.76913452 105.08366394]
[230.55903625 98.90992737]
[240.86257935 112.37371063]
[230.77728271 126.00173187]
[214.88995361 120.08317566]
[199.89044189 120.20400238]
[184.89093018 120.32483673]
[169.89141846 120.44566345]
[154.89190674 120.56649017]
[139.89239502 120.68732452]
[135.25714111 134.95317078]
[147.32096863 143.86741638]
[159.38481140 152.78166199]
[171.52006531 161.59843445]
[183.72595215 170.31718445]
[192.54081726 172.76377869]
[196.05671692 179.27600098]
[208.12055969 188.19024658]
[220.18438721 197.10449219]
[232.24822998 206.01873779]
[244.31207275 214.93298340]
[260.64401245 219.48310852]
[260.79284668 236.43640137]
[244.54330444 241.27255249]
[235.39782715 226.99682617]
[223.33398438 218.08258057]
[211.27014160 209.16833496]
[199.20631409 200.25408936]
[187.14247131 191.33984375]
[175.00721741 182.52305603]
[162.80133057 173.80432129]
[155.52136230 172.47288513]
[150.47056580 164.84550476]
[138.40672302 155.93125916]
[126.34288788 147.01701355]
[111.50029755 149.18434143]
[102.48915863 161.17597961]
[93.47802734 173.16763306]
[84.46689606 185.15927124]
[75.45575714 197.15090942]
[72.79687500 205.90406799]
[66.20159149 209.26159668]
[56.99844360 221.10650635]
[56.55856705 225.45669556]
[54.91581726 229.07183838]
[52.45139313 231.66279602]
[49.60136032 233.09492493]
[46.80122375 233.39247131]
[36.85438156 244.62013245]
[26.90754318 255.84779358]
[16.96070290 267.07546997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[14 35]
[15 34]
[16 33]
[17 32]
[19 30]
[20 29]
[21 28]
[46 194]
[47 193]
[48 192]
[49 191]
[50 186]
[51 185]
[52 183]
[53 182]
[54 181]
[55 180]
[56 179]
[60 105]
[61 104]
[62 103]
[63 102]
[64 101]
[65 100]
[67 99]
[68 98]
[69 97]
[70 96]
[71 95]
[72 94]
[75 91]
[76 90]
[78 88]
[79 87]
[107 136]
[108 135]
[109 134]
[110 133]
[111 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
[154 178]
[155 177]
[156 176]
[157 174]
[158 173]
[160 172]
[161 171]
[162 170]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
