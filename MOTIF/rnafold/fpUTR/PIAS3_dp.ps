%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PIAS3)
} def

/sequence { (\
GGCAUUUGCGGCCGGCGCCAGGGUGGAGAGUUGUGCGCCGGUCCCUGGGCCUGAGCUCCGGCUCCGGCUGGGGCGCCUGCGAUGUCUCAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.003881446 ubox
1 51 0.004143938 ubox
1 77 0.032146611 ubox
1 86 0.986920351 ubox
1 87 0.043420393 ubox
1 88 0.047357168 ubox
2 9 0.011689098 ubox
2 12 0.003885178 ubox
2 50 0.004151217 ubox
2 76 0.032198225 ubox
2 80 0.037999079 ubox
2 85 0.995552874 ubox
2 86 0.057207245 ubox
2 87 0.020012673 ubox
3 8 0.011687075 ubox
3 11 0.003882648 ubox
3 25 0.007899303 ubox
3 49 0.004148548 ubox
3 75 0.032158420 ubox
3 79 0.038031475 ubox
3 84 0.998150367 ubox
4 24 0.007916115 ubox
4 78 0.037322111 ubox
4 83 0.985899607 ubox
4 85 0.012874424 ubox
5 23 0.007864875 ubox
5 82 0.807603718 ubox
5 84 0.012261953 ubox
6 22 0.007717887 ubox
6 81 0.570835814 ubox
6 82 0.578616372 ubox
7 21 0.007301682 ubox
7 75 0.024865208 ubox
7 79 0.017428415 ubox
7 81 0.807910280 ubox
8 18 0.003658012 ubox
8 46 0.003732332 ubox
8 74 0.026199314 ubox
8 76 0.090154236 ubox
8 78 0.010322538 ubox
8 80 0.989860871 ubox
9 17 0.003806697 ubox
9 73 0.025387704 ubox
9 75 0.090290632 ubox
9 79 0.989337523 ubox
9 81 0.005198488 ubox
10 16 0.003800463 ubox
10 19 0.008653395 ubox
10 43 0.655890684 ubox
10 44 0.172136644 ubox
10 45 0.034200235 ubox
10 46 0.004203136 ubox
10 74 0.066775121 ubox
10 77 0.648924243 ubox
10 78 0.316958934 ubox
10 80 0.003737444 ubox
11 18 0.008670581 ubox
11 42 0.677676503 ubox
11 43 0.173527162 ubox
11 44 0.030853618 ubox
11 45 0.003749883 ubox
11 76 0.657644063 ubox
11 77 0.269477106 ubox
12 17 0.008646758 ubox
12 41 0.737009922 ubox
12 75 0.660062840 ubox
13 40 0.974797936 ubox
13 53 0.073237756 ubox
13 75 0.043309949 ubox
14 39 0.980177878 ubox
14 51 0.193569137 ubox
14 52 0.038521995 ubox
14 77 0.004346167 ubox
15 38 0.980206580 ubox
15 50 0.194081538 ubox
15 51 0.037087454 ubox
15 76 0.004790034 ubox
16 37 0.980192898 ubox
16 49 0.194223985 ubox
16 75 0.004790138 ubox
17 36 0.980185114 ubox
17 50 0.018665965 ubox
17 74 0.004540109 ubox
18 26 0.011961996 ubox
18 35 0.974931927 ubox
18 48 0.196842410 ubox
18 49 0.015368876 ubox
18 73 0.004474374 ubox
19 25 0.017473007 ubox
19 33 0.951567894 ubox
19 35 0.099398474 ubox
19 47 0.197299152 ubox
19 48 0.011128079 ubox
19 72 0.004133697 ubox
20 24 0.014200759 ubox
20 32 0.944463364 ubox
20 34 0.139979084 ubox
20 46 0.197543289 ubox
21 31 0.895529877 ubox
21 32 0.171894809 ubox
21 45 0.197606906 ubox
22 31 0.193663512 ubox
22 32 0.134169664 ubox
22 39 0.007360315 ubox
22 44 0.197521318 ubox
23 31 0.120159060 ubox
23 34 0.005093268 ubox
23 38 0.008993205 ubox
23 43 0.196990908 ubox
24 30 0.113033913 ubox
24 33 0.006936277 ubox
24 37 0.011122375 ubox
24 40 0.142085741 ubox
24 41 0.037625142 ubox
25 32 0.009165747 ubox
25 34 0.006159269 ubox
25 36 0.011228007 ubox
25 39 0.178161161 ubox
26 31 0.012429291 ubox
26 32 0.006810426 ubox
26 38 0.177807185 ubox
26 42 0.004165646 ubox
26 88 0.007252015 ubox
27 31 0.007588504 ubox
27 42 0.003175976 ubox
27 87 0.007269699 ubox
28 86 0.007273161 ubox
28 88 0.005850870 ubox
29 85 0.007197553 ubox
29 87 0.005857793 ubox
30 36 0.132262458 ubox
30 38 0.018925343 ubox
30 86 0.005855069 ubox
31 35 0.123942135 ubox
31 37 0.018890325 ubox
31 41 0.003189790 ubox
32 40 0.003932889 ubox
32 84 0.003495479 ubox
33 39 0.004031823 ubox
33 83 0.006468655 ubox
34 82 0.006585341 ubox
35 42 0.017304066 ubox
36 41 0.017398049 ubox
36 81 0.009104994 ubox
37 80 0.009166250 ubox
38 79 0.009158618 ubox
40 51 0.025421034 ubox
40 74 0.005176345 ubox
40 77 0.036303985 ubox
41 50 0.026870523 ubox
41 74 0.629497653 ubox
41 76 0.074264120 ubox
42 49 0.026272419 ubox
42 72 0.003447013 ubox
42 73 0.623401505 ubox
42 75 0.086294390 ubox
43 48 0.025878328 ubox
43 49 0.007102646 ubox
43 71 0.004622760 ubox
43 72 0.625895859 ubox
43 73 0.167490973 ubox
44 48 0.007311339 ubox
44 70 0.004831313 ubox
44 71 0.625858695 ubox
44 72 0.174792081 ubox
44 73 0.571483794 ubox
45 70 0.623721006 ubox
45 71 0.174659578 ubox
45 72 0.578176161 ubox
45 73 0.003489697 ubox
46 70 0.149227013 ubox
46 71 0.577237298 ubox
46 79 0.030709285 ubox
47 69 0.141276822 ubox
47 77 0.019543296 ubox
47 78 0.427439078 ubox
48 68 0.102336629 ubox
48 69 0.823827244 ubox
48 76 0.018059073 ubox
48 77 0.449606090 ubox
48 78 0.003807021 ubox
49 68 0.864004117 ubox
49 74 0.016304951 ubox
49 76 0.449783352 ubox
49 77 0.003741564 ubox
49 80 0.008938352 ubox
50 67 0.870099822 ubox
50 73 0.016320963 ubox
50 75 0.449595915 ubox
50 79 0.008936490 ubox
51 66 0.869442217 ubox
51 67 0.004944146 ubox
51 72 0.016319673 ubox
51 73 0.003293859 ubox
52 66 0.006696349 ubox
52 71 0.016017769 ubox
53 64 0.868404909 ubox
53 65 0.019820019 ubox
53 74 0.006003873 ubox
54 63 0.869979899 ubox
54 69 0.015926764 ubox
55 62 0.870127531 ubox
55 68 0.015941144 ubox
55 74 0.492133546 ubox
56 61 0.870005762 ubox
56 67 0.015197465 ubox
56 73 0.492489798 ubox
57 66 0.013767441 ubox
57 72 0.492181536 ubox
58 67 0.004841860 ubox
58 71 0.492508587 ubox
59 66 0.007104959 ubox
59 70 0.492507407 ubox
60 65 0.007727558 ubox
60 69 0.492151759 ubox
61 68 0.492520674 ubox
62 67 0.492451854 ubox
70 77 0.015181798 ubox
70 78 0.007916046 ubox
71 76 0.015195910 ubox
71 77 0.008348807 ubox
72 76 0.008241855 ubox
73 77 0.005554041 ubox
73 80 0.031871569 ubox
74 79 0.033126012 ubox
74 81 0.019233355 ubox
75 80 0.020440131 ubox
78 89 0.004480853 ubox
79 88 0.004837185 ubox
80 84 0.003205311 ubox
81 88 0.017040528 ubox
82 87 0.015594928 ubox
83 89 0.004611489 ubox
84 88 0.005037889 ubox
1 86 0.9500000 lbox
2 85 0.9500000 lbox
3 84 0.9500000 lbox
4 83 0.9500000 lbox
5 82 0.9500000 lbox
6 81 0.9500000 lbox
8 80 0.9500000 lbox
9 79 0.9500000 lbox
10 77 0.9500000 lbox
11 76 0.9500000 lbox
12 75 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
41 74 0.9500000 lbox
42 73 0.9500000 lbox
43 72 0.9500000 lbox
44 71 0.9500000 lbox
45 70 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
