%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYLC1)
} def

/sequence { (\
AACAUUACCAGUUUCAACUUACUAUGCUCAAGUCCAGGCAACGUACAGGCAGGGGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.096574167 ubox
1 14 0.005381127 ubox
2 12 0.140534955 ubox
2 13 0.006812077 ubox
2 33 0.014385703 ubox
2 44 0.005844288 ubox
3 11 0.146254174 ubox
3 26 0.196478927 ubox
3 32 0.016524537 ubox
3 43 0.006047294 ubox
4 12 0.034295949 ubox
4 25 0.196975419 ubox
4 33 0.007969195 ubox
5 11 0.036089360 ubox
5 17 0.004029473 ubox
5 24 0.192667214 ubox
5 31 0.010566074 ubox
5 32 0.008943687 ubox
5 52 0.013626844 ubox
5 53 0.003512489 ubox
5 54 0.009521026 ubox
5 55 0.031537566 ubox
5 56 0.253527520 ubox
5 57 0.155349869 ubox
6 10 0.028859600 ubox
6 16 0.004562681 ubox
6 21 0.019639425 ubox
6 24 0.018563900 ubox
6 26 0.015936965 ubox
6 30 0.010966467 ubox
6 31 0.008461857 ubox
6 45 0.014972922 ubox
6 51 0.016897640 ubox
6 52 0.004109463 ubox
6 53 0.005357292 ubox
6 54 0.035369560 ubox
6 55 0.183689975 ubox
6 56 0.131045586 ubox
7 20 0.019693992 ubox
7 23 0.020687946 ubox
7 25 0.016731452 ubox
7 33 0.015255608 ubox
7 44 0.016005272 ubox
8 32 0.018427673 ubox
8 38 0.003173730 ubox
8 43 0.016050150 ubox
8 49 0.050175270 ubox
8 53 0.493226725 ubox
8 54 0.430136498 ubox
8 55 0.239329059 ubox
9 26 0.025651924 ubox
9 37 0.003179843 ubox
9 48 0.050271423 ubox
9 52 0.493582444 ubox
9 53 0.430491303 ubox
9 54 0.239660936 ubox
10 19 0.201845938 ubox
10 20 0.010291100 ubox
10 23 0.182214170 ubox
10 25 0.020393655 ubox
10 28 0.053702555 ubox
11 18 0.211333116 ubox
11 19 0.007062568 ubox
11 22 0.190336361 ubox
11 25 0.005320152 ubox
11 27 0.057009182 ubox
11 39 0.025144995 ubox
11 42 0.007321468 ubox
11 46 0.034405519 ubox
11 50 0.622180779 ubox
12 17 0.195656854 ubox
12 21 0.189676870 ubox
12 24 0.005802039 ubox
12 26 0.056188048 ubox
12 38 0.025156068 ubox
12 41 0.007312162 ubox
12 45 0.028950251 ubox
12 48 0.012935946 ubox
12 49 0.619369946 ubox
12 52 0.066525156 ubox
12 53 0.059749143 ubox
12 54 0.032317186 ubox
12 55 0.145127625 ubox
12 56 0.233775174 ubox
12 57 0.130305949 ubox
13 30 0.003253020 ubox
13 31 0.003888310 ubox
13 37 0.024924292 ubox
13 40 0.005707143 ubox
13 47 0.014308519 ubox
13 48 0.533239035 ubox
13 49 0.041425304 ubox
13 51 0.066933815 ubox
13 52 0.084807169 ubox
13 53 0.049277850 ubox
13 54 0.185172587 ubox
13 55 0.252534034 ubox
13 56 0.177100529 ubox
13 57 0.330386103 ubox
14 30 0.003845293 ubox
14 36 0.024270920 ubox
14 38 0.004796338 ubox
14 47 0.480769707 ubox
14 48 0.036043393 ubox
14 49 0.107003611 ubox
14 51 0.083280539 ubox
14 52 0.050463581 ubox
14 53 0.212174348 ubox
14 54 0.260287929 ubox
14 55 0.180483073 ubox
14 56 0.454806972 ubox
15 26 0.019642387 ubox
15 37 0.005235507 ubox
15 48 0.129743322 ubox
15 52 0.221346744 ubox
15 53 0.264565951 ubox
15 54 0.181781519 ubox
15 55 0.466193635 ubox
16 25 0.019733810 ubox
17 33 0.057060233 ubox
17 44 0.152073455 ubox
18 32 0.063994790 ubox
18 37 0.006509550 ubox
18 38 0.006873306 ubox
18 43 0.153967959 ubox
18 48 0.518548682 ubox
18 49 0.191624459 ubox
18 52 0.465932501 ubox
18 53 0.054527472 ubox
18 54 0.021959280 ubox
18 55 0.014779416 ubox
19 31 0.063686753 ubox
19 36 0.006334491 ubox
19 37 0.007032422 ubox
19 41 0.063998741 ubox
19 47 0.514480679 ubox
19 48 0.185245259 ubox
19 49 0.018923236 ubox
19 51 0.462181417 ubox
19 52 0.054271529 ubox
19 53 0.021801946 ubox
19 54 0.014350553 ubox
19 55 0.004382134 ubox
19 56 0.017422252 ubox
19 57 0.015422295 ubox
20 26 0.004918758 ubox
20 30 0.059599791 ubox
20 31 0.003174713 ubox
20 36 0.005983679 ubox
20 40 0.042770092 ubox
20 45 0.857629703 ubox
20 47 0.094907715 ubox
20 48 0.019218254 ubox
20 51 0.036852231 ubox
20 52 0.013397729 ubox
20 53 0.008067551 ubox
20 54 0.004136348 ubox
20 55 0.014967061 ubox
20 56 0.013642749 ubox
21 25 0.005002507 ubox
21 33 0.037692855 ubox
21 44 0.884223957 ubox
22 32 0.044711582 ubox
22 37 0.035083004 ubox
22 38 0.030479063 ubox
22 43 0.884677403 ubox
22 48 0.253135921 ubox
22 49 0.028671588 ubox
22 52 0.008751816 ubox
22 53 0.024893722 ubox
22 54 0.057789978 ubox
22 55 0.019989404 ubox
23 31 0.043953336 ubox
23 36 0.034317161 ubox
23 37 0.028311563 ubox
23 45 0.050165591 ubox
23 47 0.243835778 ubox
23 48 0.026963883 ubox
23 51 0.006875824 ubox
23 52 0.022294492 ubox
23 53 0.052308144 ubox
23 54 0.019407511 ubox
24 33 0.013997047 ubox
24 44 0.072988120 ubox
25 32 0.015184281 ubox
25 36 0.037089689 ubox
25 40 0.899203629 ubox
25 43 0.054234817 ubox
25 45 0.207984162 ubox
25 47 0.006903093 ubox
25 51 0.074787489 ubox
26 33 0.043877896 ubox
26 35 0.037437676 ubox
26 39 0.919760169 ubox
26 42 0.032018661 ubox
26 44 0.211333583 ubox
26 46 0.007413193 ubox
26 50 0.077519259 ubox
27 32 0.047259788 ubox
27 37 0.028059425 ubox
27 38 0.919214969 ubox
27 43 0.211203099 ubox
27 48 0.005663412 ubox
27 49 0.077324437 ubox
27 53 0.003777514 ubox
27 54 0.022011612 ubox
27 55 0.103189332 ubox
28 36 0.036864071 ubox
28 37 0.885090446 ubox
28 38 0.049582730 ubox
28 47 0.007310407 ubox
28 48 0.072235404 ubox
28 52 0.003659151 ubox
28 53 0.021702527 ubox
28 54 0.103463047 ubox
28 55 0.004914795 ubox
28 56 0.034014360 ubox
29 37 0.211673732 ubox
29 48 0.018728480 ubox
29 52 0.021615103 ubox
29 53 0.103654166 ubox
29 54 0.005492670 ubox
29 55 0.035240518 ubox
32 39 0.143002499 ubox
32 42 0.064993142 ubox
32 44 0.004381173 ubox
32 46 0.032787096 ubox
32 50 0.104892339 ubox
33 38 0.136387977 ubox
33 41 0.063078394 ubox
33 43 0.004131591 ubox
33 45 0.031032922 ubox
33 49 0.092426419 ubox
33 54 0.052627123 ubox
33 55 0.207238939 ubox
33 56 0.072925002 ubox
34 48 0.091429279 ubox
34 49 0.053027306 ubox
34 53 0.069219724 ubox
34 54 0.273934784 ubox
34 55 0.075806905 ubox
35 48 0.053293350 ubox
35 52 0.069363491 ubox
35 53 0.275031877 ubox
35 54 0.072679113 ubox
38 44 0.057564161 ubox
38 50 0.292729153 ubox
39 43 0.054620504 ubox
39 49 0.292516779 ubox
43 50 0.063636677 ubox
44 49 0.062048698 ubox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
20 45 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
showpage
end
%%EOF
