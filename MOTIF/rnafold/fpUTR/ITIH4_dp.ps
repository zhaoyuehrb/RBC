%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ITIH4)
} def

/sequence { (\
UAAUCCAUUCCCCACUUGCUGUCGAGUUCAGAAGCCUCCUGGCAGACACUGGAGCCACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.004039909 ubox
2 9 0.023568589 ubox
2 17 0.005617214 ubox
3 8 0.021542487 ubox
3 16 0.005334343 ubox
4 25 0.006672541 ubox
4 32 0.015473569 ubox
4 46 0.008093745 ubox
4 53 0.478870167 ubox
5 24 0.007125251 ubox
5 31 0.016520726 ubox
5 42 0.003823196 ubox
5 45 0.008818496 ubox
5 51 0.004157333 ubox
5 52 0.511871985 ubox
6 18 0.020422696 ubox
6 21 0.007516339 ubox
6 41 0.003875530 ubox
6 51 0.511890499 ubox
7 17 0.020703315 ubox
7 20 0.007013102 ubox
7 22 0.005773824 ubox
7 27 0.039827871 ubox
7 40 0.003808728 ubox
7 50 0.467918756 ubox
8 21 0.005833437 ubox
8 26 0.046047633 ubox
8 31 0.006542844 ubox
8 32 0.025529298 ubox
8 33 0.368773081 ubox
8 34 0.004348283 ubox
8 45 0.017145686 ubox
8 46 0.047267773 ubox
8 53 0.020610291 ubox
8 54 0.249668005 ubox
9 25 0.052549985 ubox
9 30 0.008743436 ubox
9 31 0.025227709 ubox
9 32 0.423645121 ubox
9 33 0.012659873 ubox
9 44 0.015737161 ubox
9 45 0.046007056 ubox
9 46 0.168674936 ubox
9 52 0.014358397 ubox
9 53 0.326501748 ubox
10 24 0.053177539 ubox
10 31 0.428392731 ubox
10 42 0.007459345 ubox
10 45 0.169480293 ubox
10 51 0.014319429 ubox
10 52 0.330963212 ubox
11 41 0.007467743 ubox
11 42 0.029982782 ubox
11 51 0.328459762 ubox
11 52 0.118718156 ubox
12 41 0.029800069 ubox
12 42 0.122969550 ubox
12 51 0.116901753 ubox
12 52 0.697972556 ubox
13 21 0.037557230 ubox
13 41 0.123186520 ubox
13 51 0.700724914 ubox
14 20 0.034872067 ubox
14 22 0.048309268 ubox
14 27 0.483690455 ubox
14 40 0.119738354 ubox
14 50 0.679093068 ubox
15 21 0.050982026 ubox
15 26 0.505730572 ubox
15 31 0.079484794 ubox
15 34 0.076880890 ubox
15 45 0.038871880 ubox
15 52 0.031611358 ubox
15 54 0.064248428 ubox
16 25 0.505829181 ubox
16 26 0.003520131 ubox
16 30 0.078614259 ubox
16 31 0.015854437 ubox
16 32 0.010634531 ubox
16 33 0.085554812 ubox
16 34 0.007748299 ubox
16 44 0.028613482 ubox
16 45 0.104817228 ubox
16 46 0.024194297 ubox
16 51 0.030402861 ubox
16 52 0.011314083 ubox
16 53 0.064326639 ubox
17 24 0.503544759 ubox
17 25 0.006038815 ubox
17 30 0.018251083 ubox
17 31 0.010372681 ubox
17 32 0.086743780 ubox
17 33 0.022194361 ubox
17 44 0.124163383 ubox
17 45 0.013221110 ubox
17 48 0.582244399 ubox
17 51 0.015274868 ubox
17 52 0.061638074 ubox
17 53 0.003407192 ubox
17 57 0.061882905 ubox
17 59 0.031854896 ubox
18 23 0.479879033 ubox
18 27 0.109818072 ubox
18 29 0.016449471 ubox
18 35 0.127701789 ubox
18 43 0.128244203 ubox
18 47 0.601200242 ubox
18 50 0.028817036 ubox
18 55 0.182833019 ubox
18 56 0.061949849 ubox
18 58 0.053680082 ubox
19 26 0.114534182 ubox
19 31 0.140565409 ubox
19 34 0.127879453 ubox
19 42 0.128234319 ubox
19 45 0.776399086 ubox
19 52 0.005086758 ubox
19 54 0.185859457 ubox
20 25 0.113482231 ubox
20 30 0.141157183 ubox
20 33 0.126306774 ubox
20 41 0.125172682 ubox
20 44 0.776701389 ubox
20 48 0.109116760 ubox
20 51 0.003786123 ubox
20 53 0.132443744 ubox
20 57 0.041188283 ubox
20 59 0.033484915 ubox
21 29 0.141207871 ubox
21 40 0.088444870 ubox
21 43 0.776822936 ubox
21 47 0.115802777 ubox
21 49 0.003640674 ubox
21 55 0.049945786 ubox
21 56 0.043010295 ubox
21 58 0.060333995 ubox
22 32 0.115351161 ubox
22 42 0.776117786 ubox
22 46 0.115851897 ubox
22 48 0.003480465 ubox
22 52 0.061480180 ubox
22 53 0.166419458 ubox
22 54 0.028432509 ubox
22 57 0.058610471 ubox
23 31 0.121197883 ubox
23 41 0.757906249 ubox
23 45 0.115820272 ubox
23 51 0.067755316 ubox
23 52 0.200564839 ubox
23 59 0.028277001 ubox
24 38 0.659626856 ubox
24 40 0.297436021 ubox
24 50 0.036719286 ubox
24 58 0.030755479 ubox
25 37 0.674715536 ubox
25 40 0.263698605 ubox
25 50 0.215060186 ubox
26 35 0.373441218 ubox
26 36 0.584590024 ubox
26 39 0.302585738 ubox
26 43 0.101422387 ubox
26 47 0.024584987 ubox
26 49 0.218172802 ubox
26 55 0.062606761 ubox
26 58 0.005596672 ubox
27 33 0.057729045 ubox
27 34 0.497121947 ubox
27 42 0.074142385 ubox
27 45 0.003217383 ubox
27 46 0.023829870 ubox
27 48 0.213722711 ubox
27 53 0.093866316 ubox
27 54 0.058036894 ubox
27 57 0.004626041 ubox
28 32 0.057296763 ubox
28 33 0.405180330 ubox
28 41 0.026138378 ubox
28 42 0.088354173 ubox
28 44 0.006633484 ubox
28 45 0.022210652 ubox
28 46 0.160376502 ubox
28 52 0.122574535 ubox
28 53 0.056568087 ubox
29 41 0.122130844 ubox
29 45 0.161782297 ubox
29 51 0.138169372 ubox
29 52 0.043098508 ubox
30 37 0.261968095 ubox
30 40 0.125323146 ubox
30 50 0.143404194 ubox
31 36 0.264512425 ubox
31 38 0.103885803 ubox
31 39 0.123396200 ubox
31 49 0.143515958 ubox
32 37 0.100173619 ubox
33 40 0.014256297 ubox
34 39 0.016072043 ubox
34 43 0.561252801 ubox
34 55 0.122832915 ubox
35 42 0.562167334 ubox
35 52 0.004220952 ubox
35 54 0.088011888 ubox
36 41 0.561872583 ubox
36 45 0.004338156 ubox
36 51 0.004244585 ubox
36 52 0.013556148 ubox
36 54 0.143020837 ubox
37 44 0.004111885 ubox
37 46 0.004246846 ubox
37 51 0.013287980 ubox
37 52 0.003683615 ubox
37 53 0.167910178 ubox
38 45 0.004438434 ubox
38 51 0.004080812 ubox
38 52 0.167996571 ubox
39 51 0.167442301 ubox
39 52 0.012957846 ubox
40 48 0.100653408 ubox
40 51 0.015240479 ubox
40 57 0.064617165 ubox
41 47 0.108596642 ubox
41 50 0.086088668 ubox
41 56 0.073023772 ubox
42 49 0.091387852 ubox
42 55 0.073058180 ubox
43 51 0.014408138 ubox
43 54 0.072616425 ubox
44 50 0.047921553 ubox
45 49 0.054380134 ubox
50 57 0.025945877 ubox
50 59 0.023869704 ubox
51 56 0.029218434 ubox
51 58 0.043160779 ubox
12 52 0.9500000 lbox
13 51 0.9500000 lbox
14 50 0.9500000 lbox
17 48 0.9500000 lbox
18 47 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
21 43 0.9500000 lbox
22 42 0.9500000 lbox
23 41 0.9500000 lbox
24 38 0.9500000 lbox
25 37 0.9500000 lbox
26 36 0.9500000 lbox
showpage
end
%%EOF
