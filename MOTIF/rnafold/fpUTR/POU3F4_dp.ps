%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POU3F4)
} def

/sequence { (\
AGAUGUCAAAGGCUGAAGCUGCUCCCUUUGCCACAUUAUAACUAGUAGGGGAUCCUCACCGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.010069594 ubox
1 23 0.003835516 ubox
1 37 0.035136119 ubox
1 43 0.041819653 ubox
1 56 0.006948604 ubox
2 19 0.010591509 ubox
2 22 0.005841601 ubox
2 24 0.014505458 ubox
2 36 0.030376545 ubox
2 37 0.866768951 ubox
2 42 0.042472129 ubox
2 54 0.025306092 ubox
2 55 0.007596426 ubox
2 57 0.016779810 ubox
3 23 0.014343310 ubox
3 36 0.899550106 ubox
3 39 0.015433475 ubox
3 53 0.025229217 ubox
3 56 0.015157043 ubox
4 33 0.138810995 ubox
4 35 0.904163491 ubox
4 38 0.014831679 ubox
4 40 0.022315010 ubox
4 52 0.023977705 ubox
4 58 0.005031592 ubox
4 61 0.003572788 ubox
5 13 0.028874471 ubox
5 19 0.005441809 ubox
5 22 0.030295307 ubox
5 31 0.050704805 ubox
5 32 0.159420083 ubox
5 34 0.905633750 ubox
5 36 0.005022737 ubox
5 37 0.013747931 ubox
5 39 0.022972396 ubox
5 42 0.007636210 ubox
5 53 0.008058483 ubox
5 57 0.005723553 ubox
5 59 0.007970712 ubox
5 60 0.005418821 ubox
5 63 0.326161653 ubox
6 12 0.028863635 ubox
6 16 0.021875086 ubox
6 18 0.004431676 ubox
6 21 0.029010598 ubox
6 30 0.010629306 ubox
6 33 0.851021236 ubox
6 35 0.005549345 ubox
6 38 0.022439414 ubox
6 41 0.007564952 ubox
6 50 0.009655200 ubox
6 52 0.008466523 ubox
6 58 0.007725285 ubox
6 62 0.327452572 ubox
7 11 0.027966038 ubox
7 15 0.023617121 ubox
7 21 0.010406069 ubox
7 30 0.889480726 ubox
7 49 0.009184983 ubox
7 51 0.008322987 ubox
7 61 0.327353126 ubox
8 14 0.022506839 ubox
8 20 0.007664217 ubox
8 28 0.004439044 ubox
8 29 0.895733321 ubox
8 37 0.010790394 ubox
9 27 0.005238018 ubox
9 28 0.895411962 ubox
9 29 0.018658275 ubox
9 36 0.010965589 ubox
9 37 0.004448103 ubox
10 20 0.019191522 ubox
10 23 0.009090811 ubox
10 27 0.895861773 ubox
10 28 0.018544119 ubox
10 29 0.005153277 ubox
10 36 0.004679556 ubox
10 56 0.034619938 ubox
11 19 0.018675499 ubox
11 20 0.088980131 ubox
11 22 0.009402008 ubox
11 23 0.116217284 ubox
11 24 0.027343787 ubox
11 25 0.024658246 ubox
11 26 0.892249683 ubox
11 27 0.016714084 ubox
11 28 0.003518295 ubox
11 32 0.238003952 ubox
11 55 0.035714494 ubox
11 56 0.005482722 ubox
11 57 0.013480477 ubox
11 60 0.337223431 ubox
11 64 0.023648742 ubox
12 19 0.103456957 ubox
12 22 0.220694044 ubox
12 23 0.005313324 ubox
12 24 0.030230740 ubox
12 25 0.869431762 ubox
12 26 0.016802913 ubox
12 31 0.238140823 ubox
12 54 0.032980709 ubox
12 55 0.005744722 ubox
12 56 0.007525594 ubox
12 59 0.337432617 ubox
12 63 0.023811789 ubox
13 18 0.109044739 ubox
13 21 0.273760523 ubox
13 30 0.236645832 ubox
14 21 0.091037485 ubox
14 30 0.025220211 ubox
14 58 0.335709395 ubox
14 61 0.020454437 ubox
15 20 0.067642492 ubox
15 24 0.745125467 ubox
15 28 0.036802379 ubox
15 29 0.208205214 ubox
15 54 0.015896501 ubox
15 57 0.337589008 ubox
15 60 0.021281450 ubox
16 23 0.711052267 ubox
16 27 0.036868241 ubox
16 28 0.224589936 ubox
16 29 0.011174392 ubox
16 53 0.016212378 ubox
16 56 0.273187319 ubox
17 23 0.152580835 ubox
17 27 0.225735404 ubox
17 28 0.012907347 ubox
17 56 0.194337097 ubox
18 22 0.192319453 ubox
18 26 0.225073633 ubox
18 27 0.012565443 ubox
18 31 0.003877674 ubox
18 55 0.273711762 ubox
19 30 0.003894381 ubox
19 48 0.012548296 ubox
19 51 0.005667989 ubox
20 47 0.012626430 ubox
20 50 0.004062780 ubox
20 58 0.007421070 ubox
21 31 0.011145529 ubox
21 46 0.012680370 ubox
21 57 0.009619686 ubox
22 30 0.011276143 ubox
22 45 0.012684444 ubox
22 48 0.003893611 ubox
22 50 0.003921051 ubox
22 51 0.101031645 ubox
23 44 0.012067286 ubox
23 47 0.003738682 ubox
23 49 0.003226158 ubox
23 50 0.046097804 ubox
23 51 0.078992162 ubox
23 52 0.322877592 ubox
24 49 0.045482263 ubox
24 50 0.126784102 ubox
24 51 0.335362608 ubox
25 48 0.044590051 ubox
25 49 0.127217509 ubox
25 50 0.334991899 ubox
25 51 0.086300125 ubox
26 45 0.016983326 ubox
26 48 0.127498110 ubox
26 49 0.334500789 ubox
26 50 0.088098460 ubox
27 44 0.016829387 ubox
27 45 0.005339964 ubox
27 47 0.121386601 ubox
27 48 0.291471968 ubox
27 49 0.089518430 ubox
28 40 0.004195808 ubox
28 41 0.020482055 ubox
28 44 0.008652804 ubox
28 45 0.045825649 ubox
28 47 0.233644181 ubox
28 48 0.182137487 ubox
28 52 0.005137517 ubox
29 35 0.013706172 ubox
29 38 0.011367645 ubox
29 40 0.022486963 ubox
29 44 0.050402903 ubox
29 47 0.247007083 ubox
29 51 0.005577827 ubox
30 34 0.013928855 ubox
30 37 0.010737774 ubox
30 39 0.022077986 ubox
30 43 0.047247489 ubox
30 46 0.301634606 ubox
31 45 0.303379098 ubox
31 49 0.014213862 ubox
31 50 0.021233382 ubox
31 51 0.006675732 ubox
32 48 0.015187610 ubox
32 49 0.021533646 ubox
32 50 0.006653179 ubox
33 46 0.066605612 ubox
34 45 0.067313169 ubox
35 46 0.085335847 ubox
36 45 0.086815036 ubox
36 48 0.027988790 ubox
37 44 0.095921758 ubox
37 47 0.052120218 ubox
38 43 0.090497803 ubox
38 46 0.063258346 ubox
38 53 0.032013987 ubox
39 45 0.062947068 ubox
39 47 0.025730646 ubox
39 52 0.035093145 ubox
40 46 0.026587205 ubox
42 48 0.076967976 ubox
42 49 0.055213911 ubox
42 50 0.025773673 ubox
42 51 0.021221878 ubox
43 47 0.069674816 ubox
43 48 0.053492520 ubox
43 49 0.025454129 ubox
43 50 0.020795327 ubox
44 56 0.005817788 ubox
45 53 0.004032981 ubox
45 55 0.005889278 ubox
45 59 0.465409840 ubox
45 63 0.548665847 ubox
46 52 0.004170496 ubox
46 58 0.463195700 ubox
46 62 0.520530714 ubox
47 56 0.430813320 ubox
48 54 0.008547855 ubox
48 55 0.441910127 ubox
48 56 0.232932508 ubox
48 57 0.239502591 ubox
48 60 0.521216363 ubox
48 64 0.055673774 ubox
49 53 0.005707619 ubox
49 54 0.440478252 ubox
49 55 0.242325144 ubox
49 56 0.235930558 ubox
49 57 0.069864698 ubox
49 59 0.520449551 ubox
49 60 0.495657902 ubox
49 63 0.055219572 ubox
49 64 0.040441552 ubox
50 54 0.238603007 ubox
50 55 0.235864642 ubox
50 56 0.076810201 ubox
50 57 0.308658038 ubox
50 59 0.496913638 ubox
50 60 0.090497957 ubox
50 63 0.040835680 ubox
50 64 0.069427081 ubox
51 55 0.085149274 ubox
51 56 0.242098846 ubox
51 57 0.377261969 ubox
51 59 0.090550962 ubox
51 63 0.070416076 ubox
52 56 0.336179447 ubox
53 62 0.078010126 ubox
54 61 0.079453489 ubox
56 62 0.017780039 ubox
57 61 0.021295725 ubox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
5 34 0.9500000 lbox
6 33 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
