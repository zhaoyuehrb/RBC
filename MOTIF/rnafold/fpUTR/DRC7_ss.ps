%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUUGUUACCAUGGAGAUGGCUAACAGCUAGAGCAGGCUGUCCUCGGAGGGAACCGGGUCACAUCGCAGGGCCACCUCUAGCUGCAAGAGAAUCUGGGAAGCUGAGCAAUUCAAACCAGGCACACUGCUGCCCCCCACACAACUGGGGUUCUGCCGUAUAGAAGAGGAGACUGGAUCUUUGGAGACAUUCCAUCUCCAGACACCCAGAGACGCUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-55.82746506 314.80718994]
[-63.86067581 318.55868530]
[-66.61692047 333.30328369]
[-69.37316132 348.04788208]
[-63.41546631 363.32653809]
[-73.87812042 375.95449829]
[-89.99803925 372.94116211]
[-95.19243622 357.38641357]
[-84.11775970 345.29162598]
[-81.36151123 330.54702759]
[-78.60527039 315.80242920]
[-87.12425995 296.99951172]
[-72.89398956 280.97097778]
[-70.76885986 266.12228394]
[-68.64373779 251.27357483]
[-66.51860809 236.42488098]
[-64.39347839 221.57618713]
[-66.55584717 214.51473999]
[-62.13115692 206.53210449]
[-59.79516983 191.71511841]
[-71.22959137 183.29605103]
[-77.67546082 170.64389038]
[-92.67508698 170.53727722]
[-103.88536072 181.35241699]
[-119.09558868 181.03062439]
[-129.33709717 170.27668762]
[-144.33671570 170.17007446]
[-159.33633423 170.06346130]
[-174.33595276 169.95684814]
[-189.33558655 169.85023499]
[-204.33520508 169.74362183]
[-219.33482361 169.63699341]
[-234.33444214 169.53038025]
[-249.33406067 169.42376709]
[-260.54434204 180.23892212]
[-275.75457764 179.91712952]
[-285.99609375 169.16319275]
[-300.99569702 169.05656433]
[-315.99533081 168.94995117]
[-330.97106934 169.80241394]
[-345.86172485 171.61047363]
[-358.62863159 180.95478821]
[-372.19573975 174.80799866]
[-387.08636475 176.61604309]
[-395.22119141 180.75431824]
[-402.20132446 178.34240723]
[-417.11614990 179.93861389]
[-432.03100586 181.53480530]
[-441.75732422 193.99169922]
[-457.45321655 195.83952332]
[-469.80657959 185.98202515]
[-471.48837280 170.26748657]
[-461.50082397 158.01904297]
[-445.76934814 156.50349426]
[-433.62719727 166.61997986]
[-418.71237183 165.02378845]
[-403.79754639 163.42758179]
[-388.89443970 161.72541809]
[-374.00378418 159.91737366]
[-362.30194092 150.70237732]
[-347.66976929 156.71983337]
[-332.77911377 154.91178894]
[-345.60733032 147.13763428]
[-352.28732300 133.70716858]
[-350.74700928 118.78646851]
[-341.46417236 107.00389099]
[-327.31835938 102.01436615]
[-312.69750977 105.36563110]
[-302.13699341 116.01813507]
[-298.91268921 130.66749573]
[-304.02471924 144.76951599]
[-315.88870239 153.95033264]
[-300.88909912 154.05694580]
[-285.88946533 154.16355896]
[-275.49612427 143.55628967]
[-260.28286743 143.45074463]
[-249.22744751 154.42414856]
[-234.22782898 154.53076172]
[-219.22821045 154.63737488]
[-204.22859192 154.74398804]
[-189.22897339 154.85060120]
[-174.22933960 154.95722961]
[-159.22972107 155.06384277]
[-144.23010254 155.17045593]
[-129.23048401 155.27706909]
[-118.83714294 144.66979980]
[-103.62387848 144.56423950]
[-92.56846619 155.53764343]
[-77.56884766 155.64427185]
[-71.40202332 143.34225464]
[-60.44290161 134.88781738]
[-46.82180786 132.01220703]
[-33.22494888 135.35357666]
[-22.36465454 144.31697083]
[-8.57893181 138.40480042]
[5.20679188 132.49261475]
[18.99251556 126.58044434]
[32.77823639 120.66826630]
[46.56396103 114.75608826]
[40.26912689 96.22084808]
[40.70383072 75.22295380]
[48.74980545 54.28123093]
[64.33263397 36.19992447]
[86.34138489 23.70552635]
[85.70188904 8.71916389]
[85.06239319 -6.26719856]
[74.26493073 -18.13288307]
[76.95195770 -33.94931412]
[91.06220245 -41.58347702]
[105.77149963 -35.17910004]
[109.79613495 -19.64906693]
[100.04875183 -6.90669537]
[100.68824768 8.07966709]
[101.32774353 23.06602859]
[108.66898346 24.60102463]
[111.73897552 9.91854668]
[121.73888397 -1.26187599]
[126.42145538 12.98853874]
[123.35146332 27.67101669]
[130.69270325 29.20601273]
[137.28317261 15.73137951]
[143.87364197 2.25674772]
[150.46411133 -11.21788502]
[145.09883118 -26.08359718]
[151.89219666 -40.35335159]
[166.81379700 -45.56115341]
[181.01094055 -38.61730576]
[186.06068420 -23.64147377]
[178.96713257 -9.51854992]
[163.93873596 -4.62741518]
[157.34826660 8.84721661]
[150.75779724 22.32184982]
[144.16732788 35.79648209]
[155.94213867 45.08916855]
[167.51612854 35.54753876]
[179.09011841 26.00590897]
[190.66410828 16.46427727]
[202.23809814 6.92264748]
[203.50259399 -8.83097553]
[215.59019470 -19.01258659]
[231.32957458 -17.58161926]
[241.38281250 -5.38703775]
[239.78552246 10.33632660]
[227.48533630 20.26008224]
[211.77973938 18.49663925]
[200.20574951 28.03826904]
[188.63174438 37.57989883]
[177.05775452 47.12153244]
[165.48376465 56.66316223]
[172.26510620 70.04274750]
[186.80335999 66.34958649]
[201.34159851 62.65642929]
[215.87985229 58.96326828]
[230.41809082 55.27010727]
[239.82272339 42.27270889]
[255.85429382 41.66576385]
[266.21475220 53.91486740]
[262.95642090 69.62355804]
[248.57884216 76.74147034]
[234.11125183 69.80834961]
[219.57299805 73.50151062]
[205.03475952 77.19467163]
[190.49652100 80.88783264]
[175.95826721 84.58099365]
[170.13626099 98.59622955]
[161.98864746 110.01943207]
[152.25318909 118.51369476]
[165.58424377 125.38996124]
[178.91528320 132.26623535]
[192.24633789 139.14250183]
[205.57739258 146.01876831]
[214.63142395 147.16981506]
[219.04803467 153.08871460]
[232.27999878 160.15377808]
[245.51194763 167.21885681]
[258.74392700 174.28393555]
[272.12350464 181.06527710]
[285.64462280 187.55979919]
[299.16577148 194.05433655]
[315.46792603 192.27336121]
[324.94180298 205.65910339]
[317.84146118 220.44143677]
[301.47116089 221.41357422]
[292.67123413 207.57546997]
[279.15011597 201.08093262]
[265.62896729 194.58641052]
[262.20492554 195.39843750]
[258.21795654 194.59690857]
[254.42866516 191.93548584]
[251.67883301 187.51588440]
[238.44688416 180.45082092]
[225.21492004 173.38574219]
[211.98295593 166.32066345]
[198.70112610 159.34982300]
[185.37007141 152.47355652]
[172.03901672 145.59729004]
[158.70796204 138.72100830]
[145.37692261 131.84474182]
[132.54344177 144.87847900]
[116.16692352 153.02624512]
[98.03031158 155.40101624]
[80.10813141 151.74423218]
[64.35160065 142.45402527]
[52.47613907 128.54180908]
[38.69041443 134.45399475]
[24.90469170 140.36616516]
[11.11896896 146.27833557]
[-2.66675425 152.19052124]
[-16.45247650 158.10269165]
[-18.58848000 175.09259033]
[-29.18044090 188.33976746]
[-44.97817993 194.05110168]
[-47.31416702 208.86808777]
[-49.54478073 223.70130920]
[-51.66990662 238.55001831]
[-53.79503632 253.39871216]
[-55.92016602 268.24740601]
[-58.04529190 283.09609985]
[-51.44498062 289.81149292]
[-48.71085739 298.67797852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[13 218]
[14 217]
[15 216]
[16 215]
[17 214]
[19 213]
[20 212]
[22 89]
[23 88]
[26 85]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[32 79]
[33 78]
[34 77]
[37 74]
[38 73]
[39 72]
[40 62]
[41 61]
[43 59]
[44 58]
[46 57]
[47 56]
[48 55]
[94 209]
[95 208]
[96 207]
[97 206]
[98 205]
[99 204]
[104 114]
[105 113]
[106 112]
[120 133]
[121 132]
[122 131]
[123 130]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[150 164]
[151 163]
[152 162]
[153 161]
[154 160]
[167 198]
[168 197]
[169 196]
[170 195]
[171 194]
[173 193]
[174 192]
[175 191]
[176 190]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
