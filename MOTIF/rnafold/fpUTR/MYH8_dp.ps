%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MYH8)
} def

/sequence { (\
AUUUCCACCAAGAACCCAGAGAGUGGAACACUUCUGAACCUGCAUUUUUAUCUGGAACUCCAGAGGCAGAAUCCUUUGCUAAAUAAAUCGCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 84 0.006608786 ubox
1 88 0.004025212 ubox
2 11 0.032685865 ubox
2 12 0.027481723 ubox
2 13 0.082967861 ubox
2 14 0.055194782 ubox
2 28 0.015125669 ubox
2 37 0.006449503 ubox
2 38 0.008174329 ubox
2 83 0.007000519 ubox
2 87 0.004680832 ubox
3 10 0.033849138 ubox
3 11 0.039969982 ubox
3 12 0.089311094 ubox
3 13 0.062711173 ubox
3 14 0.395733070 ubox
3 21 0.003669404 ubox
3 27 0.012865387 ubox
3 28 0.250797044 ubox
3 36 0.004206458 ubox
3 37 0.008663489 ubox
3 38 0.015767475 ubox
3 57 0.004823986 ubox
3 71 0.004873216 ubox
3 82 0.006799839 ubox
3 86 0.004680176 ubox
4 10 0.039386879 ubox
4 11 0.079885157 ubox
4 12 0.058650035 ubox
4 13 0.464619607 ubox
4 20 0.004774523 ubox
4 27 0.294508347 ubox
4 36 0.003449933 ubox
4 37 0.018293216 ubox
4 56 0.005666459 ubox
4 70 0.005601975 ubox
4 81 0.005738597 ubox
4 85 0.003961124 ubox
5 12 0.470579503 ubox
5 19 0.005001445 ubox
5 26 0.298993096 ubox
5 36 0.016584154 ubox
5 55 0.005753222 ubox
5 69 0.005660604 ubox
6 25 0.299016544 ubox
6 36 0.012518728 ubox
6 54 0.005752901 ubox
7 24 0.298729999 ubox
7 35 0.012317788 ubox
7 53 0.005523276 ubox
8 23 0.297960293 ubox
8 26 0.004136480 ubox
8 66 0.005835652 ubox
9 25 0.004160511 ubox
9 36 0.014714309 ubox
9 42 0.005550955 ubox
9 65 0.005862320 ubox
10 24 0.003789673 ubox
10 33 0.015817182 ubox
10 35 0.010877889 ubox
10 41 0.004577837 ubox
10 49 0.010528876 ubox
10 76 0.004285050 ubox
11 32 0.017694999 ubox
11 35 0.020855323 ubox
11 41 0.020288135 ubox
11 48 0.011492786 ubox
11 75 0.005298032 ubox
12 31 0.017839112 ubox
12 34 0.023328847 ubox
12 40 0.023062948 ubox
12 47 0.011823344 ubox
12 74 0.005389710 ubox
12 89 0.011051193 ubox
13 33 0.022881002 ubox
13 46 0.011854081 ubox
13 88 0.010352426 ubox
14 32 0.020537645 ubox
14 45 0.011621939 ubox
15 26 0.007352983 ubox
16 25 0.007109588 ubox
16 26 0.040528170 ubox
17 25 0.040657257 ubox
17 36 0.948925428 ubox
17 42 0.012157240 ubox
18 24 0.039933971 ubox
18 35 0.950947886 ubox
18 41 0.012172383 ubox
19 33 0.003893914 ubox
19 34 0.951012099 ubox
19 40 0.012155742 ubox
20 32 0.023698018 ubox
20 33 0.840048016 ubox
20 35 0.045224755 ubox
21 31 0.032729951 ubox
21 32 0.515050394 ubox
21 33 0.437958698 ubox
21 34 0.046627227 ubox
22 32 0.792334354 ubox
22 33 0.033756211 ubox
22 35 0.004219030 ubox
23 29 0.039040170 ubox
23 31 0.951030995 ubox
23 32 0.009339669 ubox
23 34 0.004314375 ubox
23 39 0.003224781 ubox
24 28 0.035295677 ubox
24 30 0.950106704 ubox
24 36 0.005793311 ubox
25 29 0.934957872 ubox
25 32 0.011391997 ubox
25 35 0.008557239 ubox
26 31 0.012359878 ubox
26 34 0.008940548 ubox
27 33 0.008951774 ubox
28 32 0.007011136 ubox
29 36 0.057944855 ubox
30 35 0.049589262 ubox
32 38 0.007200119 ubox
32 71 0.010532574 ubox
33 37 0.007033416 ubox
33 70 0.012092710 ubox
34 69 0.012249721 ubox
34 93 0.009203215 ubox
35 44 0.003595870 ubox
35 50 0.003385467 ubox
35 68 0.012243277 ubox
35 92 0.009305125 ubox
36 43 0.004035096 ubox
36 49 0.003733730 ubox
36 67 0.012151196 ubox
36 73 0.009704315 ubox
36 89 0.003647290 ubox
36 91 0.009255342 ubox
37 48 0.004218905 ubox
37 72 0.010024386 ubox
37 88 0.003442653 ubox
38 47 0.004177259 ubox
39 66 0.009591564 ubox
40 65 0.009650481 ubox
40 69 0.035893897 ubox
40 93 0.983688297 ubox
41 64 0.005979237 ubox
41 68 0.036002994 ubox
41 90 0.004125028 ubox
41 92 0.995200142 ubox
42 67 0.036032056 ubox
42 79 0.003725058 ubox
42 89 0.005506355 ubox
42 91 0.997496601 ubox
42 94 0.023896544 ubox
43 66 0.035838264 ubox
43 78 0.003733269 ubox
43 90 0.996660049 ubox
43 93 0.023948797 ubox
44 51 0.027056815 ubox
44 72 0.012397821 ubox
44 77 0.003307562 ubox
44 84 0.058669599 ubox
44 88 0.616296294 ubox
45 50 0.040096058 ubox
45 64 0.004132725 ubox
45 65 0.016372196 ubox
45 70 0.003424296 ubox
45 71 0.013199180 ubox
45 82 0.004106341 ubox
45 83 0.059157188 ubox
45 86 0.064503733 ubox
45 87 0.617018568 ubox
46 64 0.006989668 ubox
46 65 0.007741423 ubox
46 69 0.003678113 ubox
46 70 0.013424249 ubox
46 81 0.004414729 ubox
46 82 0.057912548 ubox
46 83 0.027281124 ubox
46 85 0.060576701 ubox
46 86 0.598267237 ubox
46 87 0.336677568 ubox
47 64 0.005244948 ubox
47 65 0.009407351 ubox
47 68 0.003473340 ubox
47 69 0.013350166 ubox
47 70 0.003480989 ubox
47 81 0.050746089 ubox
47 82 0.033413008 ubox
47 83 0.103759083 ubox
47 85 0.518042906 ubox
47 86 0.327249244 ubox
47 87 0.313079606 ubox
48 64 0.007826125 ubox
48 65 0.013989567 ubox
48 68 0.011867759 ubox
48 69 0.003570298 ubox
48 81 0.033715784 ubox
48 82 0.137000217 ubox
48 83 0.176949687 ubox
48 85 0.282590664 ubox
48 86 0.339032575 ubox
48 87 0.042098160 ubox
49 64 0.010836582 ubox
49 65 0.021086890 ubox
49 81 0.136331118 ubox
49 82 0.179612217 ubox
49 85 0.348249155 ubox
49 86 0.040814303 ubox
50 80 0.083056556 ubox
50 84 0.341178356 ubox
51 64 0.907346194 ubox
51 83 0.237421666 ubox
52 63 0.997668469 ubox
53 62 0.998019254 ubox
53 81 0.053767969 ubox
54 60 0.003950034 ubox
54 61 0.998333735 ubox
54 80 0.056315531 ubox
55 59 0.003553448 ubox
55 60 0.995094277 ubox
55 79 0.056340280 ubox
61 78 0.056691611 ubox
62 77 0.056738844 ubox
63 76 0.056869585 ubox
64 75 0.058409048 ubox
64 80 0.028177502 ubox
64 88 0.003439495 ubox
65 74 0.059563586 ubox
65 79 0.023694163 ubox
65 80 0.957778732 ubox
65 89 0.004591804 ubox
65 95 0.005234777 ubox
66 73 0.058971366 ubox
66 79 0.996784614 ubox
66 94 0.005280071 ubox
67 78 0.997236457 ubox
67 93 0.005257932 ubox
68 75 0.030358171 ubox
68 76 0.015596127 ubox
68 77 0.994719781 ubox
69 74 0.044449581 ubox
69 75 0.018955993 ubox
69 76 0.971588130 ubox
69 77 0.020906196 ubox
70 75 0.899819745 ubox
70 76 0.033455138 ubox
70 77 0.009941247 ubox
71 75 0.033765470 ubox
71 76 0.019061568 ubox
75 87 0.004716816 ubox
76 83 0.004477912 ubox
76 86 0.005518016 ubox
76 87 0.003665728 ubox
76 93 0.027331772 ubox
77 82 0.005081455 ubox
77 85 0.005670335 ubox
77 86 0.004211172 ubox
77 92 0.035297956 ubox
78 84 0.005288551 ubox
78 91 0.036552377 ubox
78 94 0.010909601 ubox
79 90 0.036523562 ubox
79 93 0.010952655 ubox
80 92 0.010567738 ubox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
40 93 0.9500000 lbox
41 92 0.9500000 lbox
42 91 0.9500000 lbox
43 90 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
55 60 0.9500000 lbox
65 80 0.9500000 lbox
66 79 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
