%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGCGGCGCCGAGUCUGCGGGUCCUCCCGCCAGCCCGGCCGGAGGCAGCCGAGGCCGCUCGGGCGGCGGCGGCGGCGGCGGCGGGAGCCGGAGCGCAUCUCGCCCAGGAGCCGGAGCAGCGGCACUGCCUGAACCAGACAGCAGCCUUGGGUGCAGGCGUGGUCAUGAGGGCAG\
) } def
/len { sequence length } bind def

/coor [
[75.01927948 260.49975586]
[83.52471924 247.86737061]
[96.43632507 239.79206848]
[94.30160522 224.94474792]
[92.16687775 210.09742737]
[82.69705200 198.60083008]
[88.39163208 183.83999634]
[86.25691223 168.99267578]
[84.12218475 154.14535522]
[81.98746490 139.29803467]
[79.85273743 124.45071411]
[70.86357880 112.44258881]
[57.21909714 106.21136475]
[43.51954651 100.10216522]
[29.76601982 94.11547089]
[15.95960903 88.25177002]
[2.10141587 82.51151276]
[-13.60921764 84.37875366]
[-22.40674591 72.35990143]
[-36.26493835 66.61965179]
[-50.12313461 60.87939835]
[-65.83376312 62.74663544]
[-74.63129425 50.72778702]
[-88.48948669 44.98753357]
[-102.34767914 39.24728394]
[-116.20587158 33.50703049]
[-131.91650391 35.37426758]
[-140.71403503 23.35541916]
[-154.57223511 17.61516762]
[-168.43041992 11.87491608]
[-182.28862000 6.13466406]
[-196.14680481 0.39441273]
[-205.30572510 -0.00327659]
[-210.19966125 -5.57395792]
[-223.95318604 -11.56064987]
[-237.70671082 -17.54734230]
[-238.33093262 -4.63378286]
[-246.46568298 8.08944988]
[-261.70135498 17.14186096]
[-276.69180298 17.67724609]
[-291.68225098 18.21263123]
[-307.29547119 24.82045364]
[-317.96722412 11.64661980]
[-308.26248169 -2.25496292]
[-292.21762085 3.22218871]
[-277.22717285 2.68680358]
[-262.23672485 2.15141869]
[-260.05960083 -5.02563381]
[-253.52819824 -26.55679131]
[-265.69485474 -35.33019257]
[-277.86151123 -44.10359192]
[-290.02816772 -52.87699127]
[-305.43051147 -50.55199814]
[-317.64422607 -59.62279129]
[-319.76583862 -74.32089996]
[-331.93249512 -83.09429932]
[-344.09915161 -91.86769867]
[-356.26580811 -100.64109802]
[-368.43246460 -109.41449738]
[-384.79354858 -110.53121948]
[-391.76300049 -125.37570953]
[-382.17123413 -138.67723083]
[-365.88546753 -136.75230408]
[-359.65905762 -121.58115387]
[-347.49240112 -112.80775452]
[-335.32574463 -104.03435516]
[-323.15908813 -95.26095581]
[-310.99243164 -86.48755646]
[-296.37649536 -89.11617279]
[-283.91281128 -80.39202118]
[-281.25476074 -65.04364777]
[-269.08810425 -56.27024460]
[-256.92144775 -47.49684525]
[-244.75479126 -38.72344589]
[-231.72001648 -31.30086899]
[-217.96649170 -25.31417847]
[-204.21296692 -19.32748604]
[-190.40655518 -13.46378040]
[-176.54837036 -7.72352886]
[-162.69017029 -1.98327732]
[-148.83198547 3.75697422]
[-134.97378540 9.49722576]
[-120.25438690 7.21940851]
[-110.46562195 19.64883995]
[-96.60742950 25.38909149]
[-82.74923706 31.12934303]
[-68.89104462 36.86959457]
[-54.17164230 34.59177780]
[-44.38288116 47.02120590]
[-30.52468872 52.76145935]
[-16.66649628 58.50170898]
[-1.94709265 56.22389221]
[7.84166765 68.65332031]
[21.69985962 74.39357758]
[29.10682106 74.04718781]
[35.75271225 80.36194611]
[49.50623703 86.34864044]
[56.91820145 86.13451385]
[63.45032120 92.56688690]
[77.09480286 98.79811096]
[94.68785858 80.43171692]
[114.71039581 90.30783844]
[129.55772400 88.17311859]
[144.40504456 86.03839111]
[159.25236511 83.90367126]
[174.09968567 81.76895142]
[188.94700623 79.63422394]
[203.79432678 77.49950409]
[218.64164734 75.36478424]
[224.57296753 56.92475128]
[248.13256836 48.27464294]
[261.16732788 40.85206604]
[274.20211792 33.42949295]
[287.23687744 26.00691605]
[291.17587280 10.70136261]
[304.82611084 2.73603106]
[320.08917236 6.83661127]
[327.90972900 20.57030296]
[323.64801025 35.78914642]
[309.83239746 43.46407700]
[294.65945435 39.04169083]
[281.62469482 46.46426773]
[268.58990479 53.88684464]
[255.55513000 61.30941772]
[257.01831055 68.66530609]
[261.40783691 90.73297882]
[276.29089355 92.60234833]
[291.17395020 94.47171783]
[306.05703735 96.34109497]
[320.98480225 97.81134796]
[335.94656372 98.88143921]
[350.90835571 99.95152283]
[367.13848877 95.05054474]
[376.34088135 109.28964996]
[365.20571899 122.07419586]
[349.83825684 114.91330719]
[334.87649536 113.84322357]
[319.91470337 112.77313232]
[317.00790405 114.82230377]
[312.95449829 115.54727936]
[308.39614868 114.42032623]
[304.18765259 111.22415161]
[289.30459595 109.35478210]
[274.42153931 107.48540497]
[259.53848267 105.61603546]
[233.05685425 106.47467804]
[220.77636719 90.21210480]
[205.92904663 92.34682465]
[191.08172607 94.48155212]
[176.23440552 96.61627197]
[161.38708496 98.75099182]
[146.53976440 100.88571930]
[131.69244385 103.02043915]
[116.84512329 105.15515900]
[113.51854706 113.90007019]
[105.62765503 120.40127563]
[94.70006561 122.31598663]
[96.83478546 137.16331482]
[98.96950531 152.01063538]
[101.10423279 166.85795593]
[103.23895264 181.70527649]
[112.86146545 194.26385498]
[107.01419830 207.96270752]
[109.14892578 222.81002808]
[111.28364563 237.65734863]
[125.94731140 241.76791382]
[137.66717529 251.49235535]
[144.41270447 265.14584351]
[145.01518250 280.36282349]
[139.37023926 294.50689697]
[128.45588684 305.12747192]
[114.16310883 310.38452148]
[98.96821594 309.36715698]
[85.50380707 302.25170898]
[76.10267639 290.27096558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[12 100]
[13 99]
[14 97]
[15 96]
[16 94]
[17 93]
[19 91]
[20 90]
[21 89]
[23 87]
[24 86]
[25 85]
[26 84]
[28 82]
[29 81]
[30 80]
[31 79]
[32 78]
[34 77]
[35 76]
[36 75]
[39 47]
[40 46]
[41 45]
[49 74]
[50 73]
[51 72]
[52 71]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[102 154]
[103 153]
[104 152]
[105 151]
[106 150]
[107 149]
[108 148]
[109 147]
[111 124]
[112 123]
[113 122]
[114 121]
[126 145]
[127 144]
[128 143]
[129 142]
[130 138]
[131 137]
[132 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
