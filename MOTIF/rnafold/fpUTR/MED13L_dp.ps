%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MED13L)
} def

/sequence { (\
CUCGGACGCCUCGCUCCGACAUGCCCCGCUCUGGCGGCCGGGCUCGCGGAGGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 42 0.008489743 ubox
1 49 0.004777498 ubox
1 51 0.026448950 ubox
1 52 0.011680249 ubox
2 19 0.434446716 ubox
2 41 0.008648223 ubox
2 48 0.003545854 ubox
2 49 0.008912877 ubox
2 50 0.026077481 ubox
2 51 0.005503499 ubox
2 52 0.010400371 ubox
2 53 0.047141749 ubox
3 13 0.204076911 ubox
3 18 0.469506956 ubox
3 40 0.008750457 ubox
3 48 0.013481268 ubox
3 49 0.024555390 ubox
3 51 0.012313579 ubox
3 52 0.050267361 ubox
4 10 0.413863602 ubox
4 11 0.085392118 ubox
4 12 0.213135640 ubox
4 15 0.004216649 ubox
4 17 0.470296312 ubox
4 39 0.008753561 ubox
4 47 0.015649785 ubox
4 55 0.038812158 ubox
5 9 0.407705286 ubox
5 10 0.132591421 ubox
5 11 0.173459332 ubox
5 12 0.114939442 ubox
5 14 0.006605999 ubox
5 16 0.470299892 ubox
5 38 0.008592716 ubox
5 45 0.015931712 ubox
5 54 0.038884528 ubox
5 55 0.084105681 ubox
6 11 0.104652278 ubox
6 15 0.468227063 ubox
6 44 0.015893625 ubox
6 54 0.084896436 ubox
7 13 0.220427392 ubox
7 36 0.008620200 ubox
7 48 0.034006831 ubox
8 12 0.206846992 ubox
8 14 0.407082017 ubox
8 35 0.008736077 ubox
8 43 0.017297606 ubox
8 47 0.034094601 ubox
9 13 0.404338263 ubox
9 34 0.008735697 ubox
9 42 0.017282797 ubox
9 46 0.034034266 ubox
9 52 0.085921758 ubox
10 33 0.008725393 ubox
10 41 0.017242798 ubox
10 51 0.084647948 ubox
10 52 0.028546511 ubox
11 19 0.004350332 ubox
11 40 0.013542300 ubox
11 49 0.016115456 ubox
11 50 0.077906521 ubox
11 51 0.011647440 ubox
11 52 0.014668619 ubox
11 53 0.702042764 ubox
12 18 0.004730323 ubox
12 40 0.010214826 ubox
12 48 0.036934837 ubox
12 49 0.066505246 ubox
12 51 0.010458536 ubox
12 52 0.750567897 ubox
13 17 0.004442509 ubox
13 24 0.005313680 ubox
13 29 0.005974271 ubox
13 38 0.012994799 ubox
13 39 0.010037668 ubox
13 43 0.035690693 ubox
13 47 0.049516929 ubox
14 23 0.005347131 ubox
14 28 0.005955802 ubox
14 37 0.013062373 ubox
14 42 0.035532585 ubox
14 46 0.048334020 ubox
14 49 0.008229340 ubox
14 51 0.874801375 ubox
14 52 0.021031498 ubox
15 36 0.012405327 ubox
15 41 0.005395857 ubox
15 42 0.035775561 ubox
15 48 0.011173734 ubox
15 49 0.004343568 ubox
15 50 0.877642083 ubox
15 51 0.009164919 ubox
16 34 0.011506291 ubox
16 37 0.008039759 ubox
16 40 0.004385832 ubox
16 41 0.051093271 ubox
16 42 0.009071894 ubox
16 48 0.016000798 ubox
16 49 0.878254967 ubox
17 28 0.004263460 ubox
17 33 0.011510024 ubox
17 36 0.008217231 ubox
17 40 0.051219141 ubox
17 41 0.008949500 ubox
17 46 0.055942754 ubox
17 48 0.878366500 ubox
18 27 0.004499103 ubox
18 31 0.005459746 ubox
18 32 0.009211816 ubox
18 35 0.007975802 ubox
18 39 0.051165211 ubox
18 45 0.062856044 ubox
18 47 0.876799028 ubox
19 30 0.005425639 ubox
19 44 0.062944634 ubox
20 33 0.007649345 ubox
21 32 0.007612311 ubox
21 54 0.129150773 ubox
22 36 0.017852672 ubox
22 46 0.009798336 ubox
22 48 0.006231375 ubox
22 53 0.138705793 ubox
23 29 0.013243146 ubox
23 35 0.019092812 ubox
23 38 0.049744177 ubox
23 43 0.885151019 ubox
23 45 0.004377911 ubox
23 47 0.008703057 ubox
24 28 0.013187018 ubox
24 34 0.019044560 ubox
24 37 0.049871949 ubox
24 41 0.037466747 ubox
24 42 0.884919513 ubox
24 46 0.008696035 ubox
24 52 0.453279929 ubox
25 33 0.018955818 ubox
25 36 0.049806913 ubox
25 40 0.040227551 ubox
25 41 0.884180208 ubox
25 42 0.034793194 ubox
25 49 0.004786751 ubox
25 51 0.454605365 ubox
25 52 0.009422742 ubox
26 34 0.049585843 ubox
26 37 0.241249761 ubox
26 40 0.850809587 ubox
26 41 0.046808476 ubox
26 48 0.004154980 ubox
26 49 0.457713425 ubox
26 51 0.007266299 ubox
26 52 0.008407629 ubox
27 33 0.049594013 ubox
27 36 0.338257276 ubox
27 40 0.056291238 ubox
27 46 0.004204148 ubox
27 48 0.457815541 ubox
27 51 0.007664139 ubox
28 32 0.030608933 ubox
28 35 0.338901826 ubox
28 38 0.816980443 ubox
28 39 0.052535501 ubox
28 43 0.011356190 ubox
28 45 0.003731853 ubox
28 47 0.457707223 ubox
29 34 0.337812216 ubox
29 37 0.817565825 ubox
29 42 0.012186618 ubox
29 46 0.457418815 ubox
29 49 0.003752308 ubox
29 51 0.031316807 ubox
30 36 0.737034588 ubox
30 37 0.046989351 ubox
30 41 0.007832888 ubox
30 42 0.278068576 ubox
30 48 0.003608484 ubox
30 50 0.032509891 ubox
31 36 0.282630908 ubox
31 37 0.008798616 ubox
31 40 0.007782209 ubox
31 41 0.288440835 ubox
31 42 0.020981064 ubox
31 49 0.032598581 ubox
32 36 0.010762947 ubox
32 40 0.288571237 ubox
32 41 0.017228914 ubox
32 46 0.005296528 ubox
32 48 0.031184852 ubox
33 39 0.289151075 ubox
33 44 0.348631712 ubox
33 45 0.036784904 ubox
33 47 0.025349247 ubox
34 38 0.284490357 ubox
34 43 0.354661192 ubox
34 44 0.004565306 ubox
34 47 0.020900583 ubox
35 42 0.354624994 ubox
35 46 0.027659881 ubox
36 44 0.018861059 ubox
36 45 0.027459761 ubox
37 43 0.031241632 ubox
37 44 0.009647501 ubox
38 42 0.031138832 ubox
38 49 0.019259664 ubox
39 48 0.019675137 ubox
40 47 0.019630741 ubox
43 51 0.010806817 ubox
44 50 0.014496709 ubox
44 52 0.023270860 ubox
44 53 0.056774200 ubox
45 49 0.014704797 ubox
45 51 0.028031755 ubox
45 52 0.060643669 ubox
48 55 0.004844243 ubox
49 55 0.005037134 ubox
50 54 0.004485483 ubox
11 53 0.9500000 lbox
12 52 0.9500000 lbox
14 51 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
17 48 0.9500000 lbox
18 47 0.9500000 lbox
23 43 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
30 36 0.9500000 lbox
showpage
end
%%EOF
