%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:24:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGACAGAGAGGGAGAGAGAGAGCAAGAGGGAGAGUGUGUGAGAGAGAGUUAGUUCAAGCCAAAAUGGCCGACAGAGUCUCUGCUGGUUUCUGAAUAUUUAAAAUACAAAAAAACAGAUAGACAAAAAGAAUUCAUUUUUUGGACCUUUUUUCAUUUCCAUUUCUACCUUGUAUGCCUCAAUUUGCUGGAUUUAAGCACUGCUGCACUUU\
) } def
/len { sequence length } bind def

/coor [
[166.19090271 915.30963135]
[169.10937500 900.59625244]
[177.93060303 888.46423340]
[191.02732849 881.15155029]
[205.98361206 880.00714111]
[220.04045105 885.24212646]
[230.60316467 895.88818359]
[228.16886902 881.08703613]
[225.73457336 866.28588867]
[211.66371155 857.07391357]
[208.54804993 840.20318604]
[218.79598999 826.02532959]
[216.14263916 811.26190186]
[206.27601624 800.10394287]
[211.45018005 785.15277100]
[208.79682922 770.38928223]
[206.14347839 755.62585449]
[193.80593872 747.36022949]
[190.90475464 732.42578125]
[199.65815735 719.54107666]
[197.00480652 704.77758789]
[194.35145569 690.01416016]
[190.07469177 683.98730469]
[191.76986694 675.01239014]
[189.33557129 660.21124268]
[186.90127563 645.41003418]
[173.58299255 631.39123535]
[180.98661804 612.64105225]
[178.11479187 597.91851807]
[175.24296570 583.19604492]
[172.37112427 568.47351074]
[162.34025574 557.46301270]
[167.29231262 542.43676758]
[164.42047119 527.71429443]
[161.54864502 512.99176025]
[158.67680359 498.26922607]
[154.31120300 492.30645752]
[155.87319946 483.30734253]
[153.21984863 468.54388428]
[150.56649780 453.78042603]
[146.28973389 447.75363159]
[147.98490906 438.77865601]
[145.55061340 423.97750854]
[143.11631775 409.17636108]
[140.68202209 394.37518311]
[138.13812256 379.59246826]
[135.48477173 364.82901001]
[132.83142090 350.06555176]
[130.17807007 335.30209351]
[127.52471161 320.53863525]
[114.05812836 314.23077393]
[106.80228424 301.04681396]
[108.72339630 285.94177246]
[119.29262543 274.73474121]
[116.63927460 259.97128296]
[113.98592377 245.20782471]
[111.33256531 230.44435120]
[108.67921448 215.68089294]
[106.02585602 200.91743469]
[103.35600281 198.61546326]
[101.66812897 194.90626526]
[101.61134338 190.26531982]
[103.59796143 185.43991089]
[101.60334778 170.57312012]
[99.60873413 155.70632935]
[97.61411285 140.83953857]
[95.61949921 125.97274780]
[93.62487793 111.10595703]
[86.87450409 97.71071625]
[76.11190033 87.26245117]
[65.34928894 76.81418610]
[54.58668137 66.36592102]
[39.29553223 62.30496597]
[35.55304718 47.88820267]
[24.79043770 37.43993759]
[14.02782822 26.99167252]
[3.26521921 16.54340744]
[-12.31105709 9.84893608]
[-10.19015121 -6.97182798]
[6.56037617 -9.59025860]
[13.71348476 5.78079844]
[24.47609329 16.22906303]
[35.23870087 26.67733002]
[46.00131226 37.12559509]
[60.52264404 40.43922043]
[65.03494263 55.60331345]
[75.79755402 66.05158234]
[86.56016541 76.49984741]
[97.32276917 86.94811249]
[104.18636322 83.92468262]
[124.77713776 74.85440826]
[124.33264160 59.86099243]
[123.88813782 44.86758041]
[123.44364166 29.87416840]
[108.78978729 26.24550438]
[95.65891266 18.79683685]
[85.02540588 8.08090401]
[77.67835999 -5.10709763]
[74.16295624 -19.78853226]
[74.74006653 -34.87393951]
[79.36687469 -49.24388123]
[87.70002747 -61.83201599]
[99.12116241 -71.70421600]
[112.78274536 -78.12789917]
[127.67099762 -80.62638855]
[142.68112183 -79.01427460]
[156.69924927 -73.41119385]
[168.68515015 -64.23292542]
[177.74940491 -52.16056442]
[183.21937561 -38.08995438]
[184.68913269 -23.06522942]
[182.04965210 -8.20132542]
[175.49676514 5.39875889]
[165.51675415 16.72580528]
[152.85020447 24.93927383]
[138.43705750 29.42966843]
[138.88154602 44.42308044]
[139.32604980 59.41649246]
[139.77055359 74.40990448]
[146.56869507 61.03884506]
[161.44473267 59.11447144]
[176.13876343 62.12871933]
[189.05577087 69.75440216]
[198.79365540 81.16376495]
[204.29539490 95.11836243]
[204.96379089 110.10346985]
[200.72630310 124.49247742]
[192.04289246 136.72352600]
[179.85610962 145.46894836]
[165.48881531 149.77944946]
[150.50050354 149.18716431]
[136.51814270 143.75637817]
[125.05947113 134.07656860]
[117.36963654 121.20191193]
[108.49166870 109.11134338]
[110.48628998 123.97813416]
[112.48090363 138.84492493]
[114.47552490 153.71171570]
[116.47013855 168.57850647]
[118.46475983 183.44529724]
[120.78931427 198.26408386]
[123.44267273 213.02754211]
[126.09602356 227.79100037]
[128.74937439 242.55445862]
[131.40274048 257.31793213]
[134.05609131 272.08139038]
[147.86619568 278.90682983]
[154.92669678 292.39767456]
[152.71559143 307.28308105]
[142.28816223 317.88528442]
[144.94152832 332.64874268]
[147.59487915 347.41220093]
[150.24822998 362.17565918]
[152.90158081 376.93911743]
[157.49932861 384.83117676]
[155.48316956 391.94088745]
[157.91746521 406.74206543]
[160.35176086 421.54321289]
[162.78605652 436.34436035]
[165.32995605 451.12707520]
[167.98330688 465.89053345]
[170.63665771 480.65399170]
[173.39932251 495.39739990]
[176.27116394 510.11990356]
[179.14299011 524.84240723]
[182.01483154 539.56494141]
[192.25111389 551.62847900]
[187.09364319 565.60168457]
[189.96548462 580.32421875]
[192.83731079 595.04669189]
[195.70915222 609.76922607]
[205.06588745 615.31353760]
[209.73103333 624.89453125]
[208.38157654 635.24383545]
[201.70243835 642.97576904]
[204.13671875 657.77691650]
[206.57101440 672.57806396]
[209.11491394 687.36077881]
[211.76826477 702.12426758]
[214.42161560 716.88769531]
[227.11370850 725.91815186]
[229.59428406 740.92816162]
[220.90693665 752.97247314]
[223.56028748 767.73596191]
[226.21365356 782.49938965]
[236.27005005 794.71331787]
[230.90609741 808.60852051]
[233.55944824 823.37200928]
[245.42926025 829.73675537]
[251.37947083 841.60235596]
[249.43820190 854.53686523]
[240.53573608 863.85162354]
[242.97003174 878.65277100]
[245.40432739 893.45391846]
[251.33419800 899.50952148]
[252.77662659 906.96875000]
[250.16761780 913.16577148]
[254.76057434 927.44531250]
[259.35354614 941.72479248]
[271.86453247 952.32702637]
[268.67239380 968.41247559]
[253.06092834 973.43389893]
[241.08985901 962.22558594]
[245.07400513 946.31774902]
[240.48104858 932.03826904]
[235.88810730 917.75872803]
[231.35070801 932.05596924]
[221.23440552 943.13122559]
[207.40536499 948.94134521]
[192.41461182 948.41455078]
[179.02751160 941.64807129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 194]
[8 193]
[9 192]
[12 188]
[13 187]
[15 185]
[16 184]
[17 183]
[20 180]
[21 179]
[22 178]
[24 177]
[25 176]
[26 175]
[28 171]
[29 170]
[30 169]
[31 168]
[33 166]
[34 165]
[35 164]
[36 163]
[38 162]
[39 161]
[40 160]
[42 159]
[43 158]
[44 157]
[45 156]
[46 154]
[47 153]
[48 152]
[49 151]
[50 150]
[54 146]
[55 145]
[56 144]
[57 143]
[58 142]
[59 141]
[63 140]
[64 139]
[65 138]
[66 137]
[67 136]
[68 135]
[69 89]
[70 88]
[71 87]
[72 86]
[74 84]
[75 83]
[76 82]
[77 81]
[91 119]
[92 118]
[93 117]
[94 116]
[197 206]
[198 205]
[199 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
