%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPANXN3)
} def

/sequence { (\
AUCCCACUGGGAAGCUUCAACAUAGCUGUGGAAGUCUGCAGUCUACAGGAGCCUACUAUAGACAUUCUACAACCAACCAGAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 83 0.014824468 ubox
2 11 0.027201986 ubox
2 12 0.758581774 ubox
2 62 0.005126946 ubox
2 81 0.040963762 ubox
2 82 0.014798080 ubox
3 9 0.003353605 ubox
3 10 0.042288423 ubox
3 11 0.810898707 ubox
3 61 0.005574873 ubox
3 80 0.042042820 ubox
4 9 0.042376113 ubox
4 10 0.811096557 ubox
4 11 0.053326519 ubox
4 31 0.008830319 ubox
5 9 0.805199432 ubox
5 10 0.053773954 ubox
5 30 0.008932597 ubox
6 29 0.009001408 ubox
7 14 0.003241165 ubox
7 28 0.008995908 ubox
7 41 0.003841901 ubox
7 61 0.010302439 ubox
7 80 0.569054117 ubox
8 13 0.003383992 ubox
8 19 0.004918027 ubox
8 40 0.005523596 ubox
8 55 0.004638318 ubox
8 58 0.021472220 ubox
8 60 0.010004261 ubox
8 75 0.072853753 ubox
8 79 0.572611994 ubox
9 18 0.005310249 ubox
9 39 0.005741047 ubox
9 54 0.005135497 ubox
9 57 0.023752033 ubox
9 59 0.008226539 ubox
9 68 0.003383704 ubox
9 74 0.078010001 ubox
9 78 0.573053696 ubox
10 17 0.004935023 ubox
10 37 0.003453014 ubox
10 53 0.005199748 ubox
10 54 0.003755437 ubox
10 56 0.024159182 ubox
10 57 0.008833405 ubox
10 67 0.003426113 ubox
10 68 0.004372348 ubox
10 73 0.077854254 ubox
10 74 0.033490209 ubox
10 77 0.570925892 ubox
10 78 0.024234182 ubox
11 16 0.004306553 ubox
11 17 0.004199113 ubox
11 18 0.037396567 ubox
11 36 0.006999886 ubox
11 52 0.003659177 ubox
11 53 0.008173912 ubox
11 56 0.015960184 ubox
11 66 0.003423484 ubox
11 67 0.008904279 ubox
11 73 0.043791219 ubox
11 77 0.029749753 ubox
12 16 0.003844067 ubox
12 17 0.035038732 ubox
12 35 0.004694976 ubox
12 65 0.003200702 ubox
12 66 0.008829535 ubox
12 83 0.003343010 ubox
13 27 0.797093492 ubox
13 37 0.063635027 ubox
13 54 0.046181788 ubox
13 57 0.004994527 ubox
13 65 0.007822314 ubox
14 26 0.956187596 ubox
14 35 0.088667105 ubox
14 36 0.064959162 ubox
14 39 0.004452711 ubox
14 52 0.201530997 ubox
14 53 0.034724810 ubox
15 25 0.956828100 ubox
15 34 0.112883593 ubox
15 38 0.004086086 ubox
15 51 0.204668854 ubox
15 80 0.008704472 ubox
16 24 0.946651803 ubox
16 25 0.007583707 ubox
16 32 0.004043111 ubox
16 33 0.112890119 ubox
16 50 0.203698422 ubox
16 51 0.011491415 ubox
16 72 0.003928339 ubox
16 79 0.008355169 ubox
16 81 0.006594292 ubox
16 82 0.080162254 ubox
17 24 0.034746186 ubox
17 31 0.005131115 ubox
17 32 0.112852948 ubox
17 49 0.202536869 ubox
17 50 0.022914821 ubox
17 80 0.006313033 ubox
17 81 0.092066389 ubox
18 30 0.006902533 ubox
18 31 0.111977282 ubox
18 48 0.200803827 ubox
18 49 0.029887534 ubox
18 80 0.093004902 ubox
19 29 0.005941866 ubox
20 29 0.103621478 ubox
21 28 0.111934849 ubox
21 30 0.013756488 ubox
22 27 0.097405842 ubox
22 29 0.013738910 ubox
23 28 0.013098239 ubox
23 45 0.165608327 ubox
24 44 0.171552144 ubox
25 42 0.112218430 ubox
25 43 0.170277574 ubox
26 41 0.205099659 ubox
26 48 0.005435604 ubox
26 80 0.010412683 ubox
27 40 0.206303830 ubox
27 47 0.006229242 ubox
27 71 0.514768988 ubox
27 75 0.004582941 ubox
27 79 0.010190248 ubox
28 39 0.209459024 ubox
28 46 0.006537710 ubox
28 56 0.005883656 ubox
28 70 0.969165036 ubox
28 73 0.008278639 ubox
28 74 0.005992063 ubox
28 77 0.011934172 ubox
28 78 0.010140277 ubox
29 38 0.209012707 ubox
29 40 0.004320239 ubox
29 45 0.006536043 ubox
29 55 0.005894219 ubox
29 69 0.969806710 ubox
29 72 0.007226924 ubox
29 75 0.027282196 ubox
29 76 0.008724390 ubox
30 36 0.008638827 ubox
30 37 0.207567052 ubox
30 39 0.004800359 ubox
30 44 0.006534942 ubox
30 54 0.005847011 ubox
30 67 0.021923770 ubox
30 68 0.969841926 ubox
30 70 0.003336247 ubox
30 74 0.031131142 ubox
30 78 0.003257329 ubox
31 35 0.005656714 ubox
31 36 0.207443960 ubox
31 43 0.006536439 ubox
31 53 0.005829159 ubox
31 66 0.022207902 ubox
31 67 0.970318232 ubox
31 73 0.031099418 ubox
31 77 0.003226879 ubox
32 42 0.006223436 ubox
32 65 0.038491568 ubox
32 66 0.968813156 ubox
33 65 0.955495825 ubox
33 66 0.017849099 ubox
34 63 0.965604598 ubox
34 65 0.023979555 ubox
34 70 0.027822430 ubox
35 49 0.006356832 ubox
35 62 0.968610969 ubox
35 64 0.029270851 ubox
35 69 0.027018022 ubox
35 81 0.008328848 ubox
36 48 0.007158661 ubox
36 61 0.968830690 ubox
36 80 0.013674583 ubox
37 47 0.007352528 ubox
37 55 0.004524838 ubox
37 58 0.004996083 ubox
37 60 0.967405555 ubox
37 64 0.013417588 ubox
37 71 0.004637718 ubox
37 79 0.013694003 ubox
38 46 0.007674879 ubox
38 52 0.061392628 ubox
38 54 0.007803430 ubox
38 57 0.008750581 ubox
38 59 0.943166678 ubox
38 63 0.009312362 ubox
38 70 0.005080029 ubox
38 78 0.013639517 ubox
39 51 0.061903722 ubox
40 54 0.088424808 ubox
40 57 0.947722178 ubox
40 68 0.003547846 ubox
41 52 0.042948940 ubox
41 53 0.091742875 ubox
41 56 0.957152845 ubox
41 59 0.009258981 ubox
41 63 0.137288175 ubox
42 49 0.041975743 ubox
42 50 0.196586952 ubox
42 51 0.033917402 ubox
42 55 0.915707176 ubox
42 58 0.011164136 ubox
42 62 0.138131816 ubox
43 48 0.067248854 ubox
43 49 0.250753311 ubox
43 51 0.488766406 ubox
43 61 0.138343341 ubox
44 48 0.225986134 ubox
44 50 0.478673559 ubox
44 55 0.057302076 ubox
44 58 0.014822733 ubox
44 60 0.138288404 ubox
45 54 0.094556026 ubox
45 57 0.013860529 ubox
45 59 0.136431351 ubox
47 54 0.553343447 ubox
47 57 0.135939660 ubox
47 68 0.003616414 ubox
48 53 0.555289412 ubox
48 54 0.141805298 ubox
48 56 0.139039111 ubox
48 57 0.020150217 ubox
48 67 0.003792123 ubox
49 53 0.139709679 ubox
49 56 0.021057639 ubox
49 66 0.003786435 ubox
50 57 0.011573290 ubox
50 65 0.003756839 ubox
51 56 0.012171120 ubox
53 61 0.075814537 ubox
53 80 0.006452398 ubox
54 60 0.075546485 ubox
54 69 0.003417449 ubox
54 79 0.006207691 ubox
55 59 0.067003266 ubox
55 68 0.003522059 ubox
56 80 0.005695150 ubox
57 69 0.003754088 ubox
57 79 0.005514448 ubox
58 65 0.004726626 ubox
58 68 0.003293560 ubox
59 64 0.004682510 ubox
59 69 0.110441108 ubox
60 68 0.119321846 ubox
61 67 0.120187359 ubox
61 84 0.020156206 ubox
62 66 0.104571442 ubox
62 83 0.018080970 ubox
64 83 0.148501583 ubox
65 72 0.005337130 ubox
65 76 0.004995610 ubox
65 82 0.161145354 ubox
66 71 0.005459120 ubox
66 75 0.005846798 ubox
66 81 0.166421825 ubox
67 80 0.166970787 ubox
68 79 0.161079571 ubox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
5 9 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
28 70 0.9500000 lbox
29 69 0.9500000 lbox
30 68 0.9500000 lbox
31 67 0.9500000 lbox
32 66 0.9500000 lbox
33 65 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
37 60 0.9500000 lbox
38 59 0.9500000 lbox
40 57 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
showpage
end
%%EOF
