%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CATSPERE)
} def

/sequence { (\
AAUGCGCGAGGCCUGGACGGGAGUGGCCGAGGCGGUUGGGCGGAGGCGGAGCAGGCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 37 0.051769570 ubox
2 36 0.057023305 ubox
3 29 0.004472339 ubox
3 34 0.021791602 ubox
3 35 0.052361941 ubox
3 38 0.004454309 ubox
3 42 0.686208444 ubox
3 57 0.006188572 ubox
4 12 0.008331879 ubox
4 27 0.003941556 ubox
4 28 0.007207849 ubox
4 33 0.030823133 ubox
4 36 0.019253517 ubox
4 37 0.004286427 ubox
4 41 0.972602291 ubox
4 56 0.008736283 ubox
4 58 0.070093097 ubox
5 11 0.008375903 ubox
5 25 0.004279991 ubox
5 26 0.003799507 ubox
5 29 0.005057918 ubox
5 32 0.030842304 ubox
5 34 0.133867269 ubox
5 35 0.014467648 ubox
5 38 0.006375839 ubox
5 40 0.973023556 ubox
5 42 0.120332355 ubox
5 55 0.008694926 ubox
5 57 0.070317560 ubox
6 24 0.004478187 ubox
6 27 0.009655349 ubox
6 33 0.136354684 ubox
6 36 0.007165680 ubox
6 37 0.005623253 ubox
6 41 0.121772265 ubox
6 52 0.009339234 ubox
6 56 0.066915655 ubox
6 58 0.057494619 ubox
7 23 0.004500093 ubox
7 25 0.003358135 ubox
7 26 0.009928476 ubox
7 29 0.007981678 ubox
7 32 0.136302505 ubox
7 35 0.007579172 ubox
7 38 0.972234612 ubox
7 40 0.121639613 ubox
7 51 0.009405214 ubox
7 55 0.066164675 ubox
7 57 0.057574198 ubox
8 24 0.003177369 ubox
8 28 0.003537749 ubox
8 37 0.963903425 ubox
8 56 0.023606583 ubox
9 36 0.946367322 ubox
9 37 0.021726829 ubox
10 28 0.156664555 ubox
10 36 0.019137036 ubox
10 37 0.099308691 ubox
10 59 0.003926877 ubox
11 27 0.156819177 ubox
11 33 0.975827818 ubox
11 36 0.102752368 ubox
11 41 0.004104810 ubox
11 47 0.023843673 ubox
11 52 0.041133213 ubox
11 56 0.087667362 ubox
11 58 0.003264826 ubox
12 20 0.006439402 ubox
12 21 0.011832502 ubox
12 26 0.156795212 ubox
12 32 0.976435142 ubox
12 35 0.103191078 ubox
12 40 0.004108392 ubox
12 46 0.023849542 ubox
12 49 0.006241532 ubox
12 51 0.041101096 ubox
12 55 0.091309981 ubox
13 19 0.006466422 ubox
13 20 0.011952263 ubox
13 21 0.003652825 ubox
13 23 0.005034856 ubox
13 25 0.156609569 ubox
13 31 0.976361063 ubox
13 32 0.008387546 ubox
13 34 0.102766878 ubox
13 35 0.013287523 ubox
13 39 0.004100868 ubox
13 45 0.023841371 ubox
13 48 0.006251775 ubox
13 49 0.040165136 ubox
13 54 0.091931923 ubox
14 19 0.011305590 ubox
14 20 0.005429856 ubox
14 22 0.009781501 ubox
14 25 0.003554097 ubox
14 29 0.296535235 ubox
14 30 0.919705408 ubox
14 31 0.010014219 ubox
14 34 0.015096256 ubox
14 38 0.003977806 ubox
14 44 0.022869466 ubox
14 48 0.039962881 ubox
14 53 0.091908352 ubox
15 24 0.019296831 ubox
15 28 0.603832026 ubox
15 33 0.044943066 ubox
15 47 0.038889637 ubox
15 52 0.091832225 ubox
16 27 0.595729590 ubox
17 24 0.262507602 ubox
18 23 0.277661746 ubox
18 25 0.523518713 ubox
18 29 0.766650311 ubox
18 42 0.036424292 ubox
18 48 0.090370108 ubox
19 24 0.480172027 ubox
19 28 0.768858097 ubox
19 41 0.036449268 ubox
19 47 0.090375421 ubox
20 27 0.768309344 ubox
20 28 0.022538020 ubox
21 27 0.026191664 ubox
21 37 0.003557787 ubox
22 36 0.003601493 ubox
22 37 0.005404953 ubox
23 36 0.005381837 ubox
23 41 0.008820648 ubox
23 52 0.003362389 ubox
24 35 0.007061995 ubox
24 38 0.034298946 ubox
24 40 0.008567078 ubox
24 42 0.081675758 ubox
24 51 0.003284683 ubox
25 37 0.037913281 ubox
25 41 0.083429095 ubox
26 33 0.009360575 ubox
26 36 0.039822505 ubox
26 41 0.040900456 ubox
26 47 0.019487703 ubox
27 32 0.009463550 ubox
27 35 0.039924802 ubox
27 39 0.083411562 ubox
27 40 0.041327894 ubox
27 46 0.019780150 ubox
28 34 0.039923363 ubox
28 38 0.083464430 ubox
28 39 0.041231856 ubox
28 45 0.019777056 ubox
29 33 0.037362275 ubox
29 37 0.083008519 ubox
30 36 0.081921359 ubox
30 37 0.039869550 ubox
31 36 0.036815137 ubox
31 59 0.069846847 ubox
32 41 0.022323530 ubox
32 52 0.004621653 ubox
32 58 0.070450756 ubox
33 40 0.022333810 ubox
33 42 0.004662446 ubox
33 51 0.004624379 ubox
33 57 0.070453697 ubox
34 41 0.005342517 ubox
34 56 0.070460343 ubox
35 41 0.009352179 ubox
35 52 0.042259933 ubox
35 56 0.003570742 ubox
36 40 0.008758280 ubox
36 44 0.003355990 ubox
36 50 0.003348463 ubox
36 51 0.042102661 ubox
36 54 0.069591712 ubox
36 55 0.003665011 ubox
37 43 0.003609584 ubox
37 44 0.003983754 ubox
37 49 0.003682230 ubox
37 50 0.037334816 ubox
37 53 0.070377340 ubox
37 54 0.003479437 ubox
38 52 0.070122701 ubox
38 59 0.009976999 ubox
39 58 0.008036694 ubox
39 59 0.133582757 ubox
40 47 0.049366411 ubox
40 52 0.007168175 ubox
40 56 0.005604224 ubox
40 58 0.135264042 ubox
41 46 0.049478581 ubox
41 48 0.066431472 ubox
41 51 0.007311918 ubox
41 55 0.005607844 ubox
41 57 0.135410645 ubox
42 47 0.066524579 ubox
42 56 0.135219948 ubox
42 59 0.065175066 ubox
43 58 0.066000170 ubox
45 59 0.970213246 ubox
46 52 0.134396109 ubox
46 56 0.074580459 ubox
46 58 0.978578151 ubox
47 51 0.133463352 ubox
47 55 0.074635197 ubox
47 57 0.978607143 ubox
48 56 0.976958721 ubox
48 59 0.007174077 ubox
49 58 0.007171014 ubox
51 58 0.014931467 ubox
52 57 0.014969393 ubox
4 41 0.9500000 lbox
5 40 0.9500000 lbox
7 38 0.9500000 lbox
8 37 0.9500000 lbox
9 36 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
45 59 0.9500000 lbox
46 58 0.9500000 lbox
47 57 0.9500000 lbox
48 56 0.9500000 lbox
showpage
end
%%EOF
