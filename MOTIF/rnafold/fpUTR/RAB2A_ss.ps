%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCUCCGGCGGCGCCGGCGGCCGCAGAACUUCCGGGUCGGCGCGGAGGCGGGGCGGAGGCGCCGCGGCGGCUGUUAUUGUUCGGCUGGGCUCGGUCGGGCGCUGUCUCCCUCGGCUCUGCGGGUGUCAGUUCGUCCGGCUUCCUCACAGCCCCUCACUCCCGGCGGCUGACAGCAGCAGCGGCGGCGGCGGGCGGCGCCUGGCGUUUCGAGGCUGAGCGGCACCGGGGUUGGGGCGCGGAGGAGGAGCAGCAG\
CGGGAGGAGGAGCCGUGUGCCCUGGCACUGAGCGGCCGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[118.94568634 192.47406006]
[118.65649414 188.63082886]
[119.67156219 184.51937866]
[115.02131653 170.25840759]
[110.37107849 155.99743652]
[105.72083282 141.73646545]
[101.07059479 127.47550201]
[96.42035675 113.21453094]
[82.96000671 106.59493256]
[68.82609558 111.61812592]
[54.69218063 116.64131927]
[40.55826950 121.66451263]
[26.42435455 126.68770599]
[12.29044056 131.71090698]
[-1.84347355 136.73410034]
[-15.97738743 141.75729370]
[-30.11130142 146.78048706]
[-43.87503052 189.07290649]
[-56.48220062 197.20059204]
[-69.08937073 205.32827759]
[-81.69654083 213.45596313]
[-94.30371094 221.58364868]
[-106.91088104 229.71133423]
[-119.51805115 237.83901978]
[-132.12522888 245.96670532]
[-144.73239136 254.09437561]
[-141.12712097 258.45089722]
[-138.84182739 264.36022949]
[-138.38874817 271.40200806]
[-140.14688110 279.00689697]
[-144.32196045 286.49771118]
[-155.60171509 296.38540649]
[-166.88148499 306.27313232]
[-178.16123962 316.16085815]
[-189.44100952 326.04858398]
[-200.72076416 335.93627930]
[-199.17025757 351.37570190]
[-207.02000427 364.76080322]
[-221.25158691 370.94479370]
[-236.39270020 367.54974365]
[-246.62126160 355.88113403]
[-248.00419617 340.42581177]
[-240.00971985 327.12664795]
[-225.71188354 321.09741211]
[-210.60848999 324.65652466]
[-199.32872009 314.76879883]
[-188.04896545 304.88110352]
[-176.76919556 294.99337769]
[-165.48944092 285.10565186]
[-154.20967102 275.21792603]
[-161.66413879 262.20135498]
[-175.90048218 266.92645264]
[-186.56077576 278.61700439]
[-201.07739258 275.28277588]
[-215.31373596 280.00787354]
[-229.55007935 284.73297119]
[-243.78642273 289.45806885]
[-254.27223206 302.06677246]
[-270.38659668 299.02386475]
[-275.55242920 283.45962524]
[-264.45556641 271.38519287]
[-248.51152039 275.22174072]
[-234.27517700 270.49664307]
[-220.03883362 265.77154541]
[-205.80249023 261.04644775]
[-196.16047668 249.69387817]
[-180.62557983 252.69012451]
[-166.38923645 247.96502686]
[-152.86007690 241.48721313]
[-140.25291443 233.35952759]
[-127.64573669 225.23184204]
[-115.03856659 217.10415649]
[-102.43139648 208.97647095]
[-89.82422638 200.84878540]
[-77.21705627 192.72111511]
[-64.60988617 184.59342957]
[-52.00271225 176.46574402]
[-52.82846069 169.01133728]
[-67.73726654 170.66282654]
[-82.64610291 172.31408691]
[-84.29710388 157.40522766]
[-69.38876343 155.75402832]
[-54.47995758 154.10252380]
[-55.30570602 146.64811707]
[-69.38606262 141.47669983]
[-83.46642303 136.30528259]
[-97.54677582 131.13386536]
[-111.62712860 125.96244812]
[-125.70748901 120.79103088]
[-141.76454163 124.12317657]
[-152.47534180 111.70501709]
[-146.82156372 96.31130219]
[-130.61929321 93.77774811]
[-120.53607178 106.71067047]
[-106.45571136 111.88209534]
[-92.37535858 117.05351257]
[-78.29499817 122.22492981]
[-64.21464539 127.39634705]
[-50.13428879 132.56776428]
[-35.13449478 132.64657593]
[-21.00058174 127.62337494]
[-6.86666775 122.60018158]
[7.26724625 117.57698822]
[21.40115929 112.55379486]
[35.53507233 107.53060150]
[49.66898727 102.50740814]
[63.80290222 97.48421478]
[77.93681335 92.46101379]
[102.68774414 83.83000946]
[112.75199890 72.70747375]
[122.81626129 61.58494568]
[132.88052368 50.46241379]
[133.96133423 45.45259857]
[136.57295227 41.70867157]
[139.98895264 39.59864807]
[143.44152832 39.15433884]
[153.85131836 28.35451317]
[164.26110840 17.55468941]
[174.61402893 6.70032644]
[184.90977478 -4.20827484]
[195.20552063 -15.11687660]
[205.50126648 -26.02547836]
[208.16632080 -40.78682709]
[202.33518982 -54.60702515]
[196.50405884 -68.42722321]
[190.67292786 -82.24742126]
[184.84179688 -96.06762695]
[170.10858154 -101.78672028]
[163.81118774 -116.28218079]
[169.68572998 -130.95410156]
[184.24696350 -137.09788513]
[198.85595703 -131.06855774]
[204.84544373 -116.44318390]
[198.66198730 -101.89875793]
[204.49313354 -88.07855988]
[210.32426453 -74.25835419]
[216.15539551 -60.43815994]
[221.98652649 -46.61796188]
[230.34072876 -48.54427719]
[238.05615234 -47.19122314]
[243.99882507 -43.31006241]
[256.06890869 -52.21585464]
[268.13897705 -61.12164688]
[280.20907593 -70.02744293]
[292.27914429 -78.93323517]
[304.34921265 -87.83902740]
[316.41931152 -96.74481964]
[316.43746948 -112.14955902]
[325.41796875 -124.44606018]
[339.74761963 -129.04231262]
[353.86697388 -124.37521362]
[365.93704224 -133.28100586]
[378.00711060 -142.18679810]
[390.07720947 -151.09259033]
[402.14727783 -159.99838257]
[404.82662964 -172.58317566]
[415.02307129 -179.75608826]
[426.97979736 -178.13203430]
[439.14279175 -186.91052246]
[444.23828125 -194.43260193]
[451.47998047 -195.71655273]
[463.73452759 -204.36674500]
[475.98907471 -213.01695251]
[488.24365234 -221.66716003]
[500.49819946 -230.31736755]
[503.44137573 -242.84307861]
[513.78625488 -249.80015564]
[525.70623779 -247.92521667]
[538.05102539 -256.44619751]
[550.39575195 -264.96716309]
[562.74053955 -273.48812866]
[562.56158447 -285.31817627]
[568.03936768 -295.67001343]
[577.72143555 -302.04483032]
[589.15704346 -302.96667480]
[599.51696777 -298.32281494]
[612.03808594 -306.58248901]
[624.55914307 -314.84219360]
[637.08026123 -323.10189819]
[640.37445068 -338.32641602]
[653.19024658 -346.52453613]
[667.68420410 -343.29019165]
[680.20526123 -351.54989624]
[692.72637939 -359.80960083]
[698.13342285 -367.11096191]
[705.42266846 -368.08950806]
[718.02984619 -376.21716309]
[730.63702393 -384.34484863]
[743.24420166 -392.47253418]
[750.65051270 -406.45312500]
[765.53991699 -406.84631348]
[778.14709473 -414.97399902]
[790.75427246 -423.10168457]
[803.36145020 -431.22937012]
[815.96862793 -439.35705566]
[826.00488281 -453.02124023]
[841.91333008 -447.15982056]
[840.68493652 -430.25042725]
[824.09631348 -426.74987793]
[811.48913574 -418.62219238]
[798.88195801 -410.49450684]
[786.27478027 -402.36685181]
[773.66760254 -394.23916626]
[767.16302490 -380.83990479]
[751.37188721 -379.86538696]
[738.76470947 -371.73770142]
[726.15753174 -363.61001587]
[713.55035400 -355.48233032]
[700.98608398 -347.28851318]
[688.46496582 -339.02883911]
[675.94390869 -330.76913452]
[673.21270752 -316.17199707]
[660.63220215 -307.61712646]
[645.33990479 -310.58081055]
[632.81884766 -302.32110596]
[620.29779053 -294.06143188]
[607.77667236 -285.80172729]
[605.14825439 -267.65060425]
[589.79528809 -257.04272461]
[571.26147461 -261.14337158]
[558.91674805 -252.62240601]
[546.57196045 -244.10144043]
[534.22723389 -235.58045959]
[527.54077148 -219.33329773]
[509.14837646 -218.06282043]
[496.89382935 -209.41261292]
[484.63928223 -200.76240540]
[472.38473511 -192.11219788]
[460.13018799 -183.46200562]
[447.92126465 -174.74752808]
[435.75827026 -165.96905518]
[429.41470337 -149.58497620]
[411.05307007 -147.92829895]
[398.98300171 -139.02250671]
[386.91290283 -130.11671448]
[374.84283447 -121.21092987]
[362.77276611 -112.30513000]
[363.06701660 -97.43733978]
[354.44815063 -85.10124969]
[340.04965210 -80.14778137]
[325.32510376 -84.67474365]
[313.25500488 -75.76894379]
[301.18493652 -66.86315155]
[289.11486816 -57.95735931]
[277.04476929 -49.05156708]
[264.97470093 -40.14577484]
[252.90461731 -31.23998070]
[243.40791321 -9.33348942]
[216.40986633 -15.72973061]
[206.11412048 -4.82112932]
[195.81837463 6.08747244]
[185.52262878 16.99607468]
[183.22782898 23.98354340]
[175.06092834 27.96448326]
[164.65113831 38.76430511]
[154.24134827 49.56412888]
[144.00305176 60.52666855]
[133.93879700 71.64920044]
[123.87453461 82.77173615]
[113.81027222 93.89426422]
[110.68132019 108.56429291]
[115.33156586 122.82526398]
[119.98180389 137.08622742]
[124.63204956 151.34719849]
[129.28228760 165.60816956]
[133.93252563 179.86914062]
[138.88140869 194.02925110]
[144.12672424 208.08224487]
[149.37203979 222.13523865]
[154.61735535 236.18823242]
[159.86267090 250.24122620]
[165.10800171 264.29421997]
[171.01275635 271.19927979]
[170.33375549 278.52252197]
[175.43112183 292.62985229]
[180.52850342 306.73718262]
[185.69992065 320.81753540]
[190.94523621 334.87051392]
[205.74249268 339.92776489]
[213.78280640 353.33996582]
[211.26982117 368.77429199]
[199.39006042 378.94314575]
[183.75280762 379.04510498]
[171.74148560 369.03201294]
[169.02748108 353.63174438]
[176.89224243 340.11584473]
[171.64692688 326.06283569]
[166.38938904 320.91998291]
[166.42117310 311.83456421]
[161.32379150 297.72723389]
[156.22642517 283.61990356]
[151.05500793 269.53952026]
[145.80967712 255.48654175]
[140.56436157 241.43354797]
[135.31904602 227.38055420]
[130.07373047 213.32756042]
[124.82840729 199.27456665]
[122.38939667 197.98696899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 266]
[4 265]
[5 264]
[6 263]
[7 262]
[8 261]
[9 108]
[10 107]
[11 106]
[12 105]
[13 104]
[14 103]
[15 102]
[16 101]
[17 100]
[18 77]
[19 76]
[20 75]
[21 74]
[22 73]
[23 72]
[24 71]
[25 70]
[26 69]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[51 68]
[52 67]
[54 65]
[55 64]
[56 63]
[57 62]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[109 260]
[110 259]
[111 258]
[112 257]
[116 256]
[117 255]
[118 254]
[119 252]
[120 251]
[121 250]
[122 249]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[141 247]
[142 246]
[143 245]
[144 244]
[145 243]
[146 242]
[147 241]
[151 237]
[152 236]
[153 235]
[154 234]
[155 233]
[158 231]
[159 230]
[161 229]
[162 228]
[163 227]
[164 226]
[165 225]
[168 223]
[169 222]
[170 221]
[171 220]
[176 217]
[177 216]
[178 215]
[179 214]
[182 211]
[183 210]
[184 209]
[186 208]
[187 207]
[188 206]
[189 205]
[191 203]
[192 202]
[193 201]
[194 200]
[195 199]
[267 297]
[268 296]
[269 295]
[270 294]
[271 293]
[272 292]
[274 291]
[275 290]
[276 289]
[277 287]
[278 286]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
