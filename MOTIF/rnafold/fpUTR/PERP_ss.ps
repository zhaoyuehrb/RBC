%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGAGUCACCGGAAUCUAGGUGGGGCCGCCCGGAGCGGCGUCCUCGGGAGCCGCCUCCCCGCGGCCUCUUCGCUUUUGUGGCGGCGCCCGCGCUCGCAGGCCACUCUCUGCUGUCGCCCGUCCCGCGCGCUCCUCCGACCCGCUCCGCUCCGCUCCGCUCGGCCCCGCGCCGCCCGUCAAC\
) } def
/len { sequence length } bind def

/coor [
[42.38983154 606.84045410]
[32.42006683 606.26525879]
[28.12710381 620.63781738]
[23.83414459 635.01037598]
[19.54118347 649.38293457]
[27.27028847 663.16827393]
[22.90749741 678.35845947]
[9.04117870 685.94140625]
[-6.10202742 681.41827393]
[-13.53792572 667.47253418]
[-8.85492897 652.37799072]
[5.16862297 645.08996582]
[9.46158314 630.71740723]
[13.75454426 616.34484863]
[18.04750443 601.97229004]
[1.45693076 590.08660889]
[-9.44404793 572.79888916]
[-13.02829647 552.64862061]
[-8.74540520 532.60559082]
[2.79392076 515.63220215]
[19.90483284 504.24551392]
[40.07431793 500.14401245]
[42.11681747 485.28372192]
[44.15932083 470.42343140]
[46.20182037 455.56314087]
[48.24431992 440.70285034]
[50.28681946 425.84255981]
[52.32931900 410.98226929]
[54.37181854 396.12197876]
[56.41431808 381.26168823]
[47.23785019 369.58572388]
[49.09754562 354.48617554]
[61.40658569 344.94021606]
[63.44908524 330.07992554]
[65.49158478 315.21963501]
[67.53408813 300.35937500]
[69.57658386 285.49908447]
[71.61908722 270.63879395]
[73.66158295 255.77848816]
[75.70408630 240.91819763]
[69.77188110 227.25590515]
[79.31623840 214.63783264]
[81.35874176 199.77754211]
[69.16232300 188.80638123]
[65.86709595 172.56643677]
[72.96346283 157.40838623]
[87.83831024 149.38031006]
[89.62680054 134.48731995]
[91.41529083 119.59432983]
[93.20378876 104.70133209]
[82.64385223 107.33158112]
[71.13454437 105.67702484]
[57.70038986 99.00444031]
[44.26623154 92.33185577]
[30.83207512 85.65927124]
[17.39791679 78.98667908]
[2.49973536 84.26112366]
[-11.72828960 77.38079834]
[-16.84492493 62.42768860]
[-9.81455898 48.27320099]
[5.19181490 43.31494522]
[19.27118111 50.49456787]
[24.07050323 65.55252075]
[37.50466156 72.22511292]
[50.93881989 78.89769745]
[64.37297821 85.57028198]
[77.80713654 92.24286652]
[68.71408844 80.31321716]
[73.17303467 65.99128723]
[87.43093872 61.33164215]
[99.48711395 70.25624847]
[99.19400024 85.25346375]
[106.09497833 71.93518066]
[112.99595642 58.61690521]
[103.92189026 46.39304352]
[101.06664276 31.50229263]
[104.94392395 16.90822220]
[114.73293304 5.49173164]
[128.45141602 -0.51764745]
[143.35688782 0.02295279]
[150.25787354 -13.29532528]
[157.15884399 -26.61360359]
[163.94587708 -39.99031067]
[170.61845398 -53.42446518]
[177.29104614 -66.85862732]
[183.96362305 -80.29278564]
[183.17288208 -96.09421539]
[195.76406860 -104.05104065]
[202.43666077 -117.48519897]
[197.63183594 -132.30245972]
[204.59016418 -145.83155823]
[218.74577332 -150.32090759]
[225.41835022 -163.75506592]
[232.09094238 -177.18922424]
[225.07386780 -190.90296936]
[227.44961548 -205.94322205]
[238.10008240 -216.57485962]
[252.79277039 -218.86895752]
[259.46536255 -232.30311584]
[266.13793945 -245.73727417]
[272.81051636 -259.17144775]
[279.48312378 -272.60559082]
[274.20867920 -287.50378418]
[281.08898926 -301.73181152]
[296.04211426 -306.84841919]
[310.19659424 -299.81805420]
[315.15484619 -284.81170654]
[307.97521973 -270.73233032]
[292.91726685 -265.93301392]
[286.24468994 -252.49884033]
[279.57208252 -239.06468201]
[272.89950562 -225.63052368]
[266.22692871 -212.19638062]
[273.27682495 -199.10298157]
[271.24090576 -184.19261169]
[260.69226074 -173.21174622]
[245.52510071 -170.51664734]
[238.85250854 -157.08248901]
[232.17993164 -143.64833069]
[237.15611267 -129.65643311]
[230.58053589 -115.93723297]
[215.87081909 -110.81261444]
[209.19822693 -97.37845612]
[210.46624756 -82.53792572]
[197.39778137 -73.62019348]
[190.72520447 -60.18603897]
[184.05261230 -46.75188065]
[177.38003540 -33.31772232]
[177.22007751 -25.91079521]
[170.47712708 -19.71262741]
[163.57614136 -6.39435005]
[156.67517090 6.92392826]
[165.71252441 18.78950119]
[168.71421814 33.46257782]
[165.03242493 48.04357147]
[155.34545898 59.62730789]
[141.53358459 65.88185883]
[126.31423187 65.51787567]
[119.41325378 78.83615875]
[112.51228333 92.15443420]
[108.09677887 106.48982239]
[106.30828857 121.38282013]
[104.51979828 136.27581787]
[102.73130798 151.16880798]
[113.51551819 159.77485657]
[118.59303284 172.48722839]
[116.73482513 185.94006348]
[108.53317261 196.62811279]
[96.21902466 201.82005310]
[94.17652893 216.68034363]
[99.96263885 231.40553284]
[90.56437683 242.96070862]
[88.52187347 257.82098389]
[86.47937775 272.68127441]
[84.43687439 287.54156494]
[82.39437866 302.40185547]
[80.35187531 317.26214600]
[78.30937958 332.12243652]
[76.26687622 346.98272705]
[85.54399872 359.49563599]
[83.26091766 374.53698730]
[71.27460480 383.30419922]
[69.23210907 398.16448975]
[67.18960571 413.02478027]
[65.14710999 427.88504028]
[63.10460663 442.74533081]
[61.06210709 457.60562134]
[59.01960754 472.46591187]
[56.97710800 487.32620239]
[54.93460846 502.18649292]
[64.31585693 505.87216187]
[72.83599091 511.24563599]
[80.19496155 518.11499023]
[86.13412476 526.23559570]
[90.44533539 535.31884766]
[92.97823334 545.04272461]
[93.64550781 555.06262207]
[92.42586517 565.02416992]
[89.36474609 574.57531738]
[84.57259369 583.37908936]
[78.22091675 591.12524414]
[70.53610992 597.54132080]
[61.79140854 602.40228271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[33 159]
[34 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[42 150]
[43 149]
[47 144]
[48 143]
[49 142]
[50 141]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[72 140]
[73 139]
[74 138]
[80 132]
[81 131]
[82 130]
[83 128]
[84 127]
[85 126]
[86 125]
[88 123]
[89 122]
[92 119]
[93 118]
[94 117]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
