%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRYBB2)
} def

/sequence { (\
CUCGCAGGGGCUGGUGUCACUGGUCAUUCCUGCACAGGACAGUCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.035821771 ubox
1 8 0.013092367 ubox
1 9 0.015095604 ubox
1 10 0.037529503 ubox
1 14 0.005759972 ubox
1 37 0.116360260 ubox
1 38 0.096307317 ubox
1 42 0.007953352 ubox
2 6 0.032425209 ubox
2 7 0.012887131 ubox
2 8 0.015275279 ubox
2 9 0.038336386 ubox
2 10 0.005349597 ubox
2 13 0.005724441 ubox
2 36 0.118811026 ubox
2 37 0.095192442 ubox
2 38 0.030594523 ubox
2 39 0.035997303 ubox
2 41 0.006798933 ubox
3 7 0.018084527 ubox
3 8 0.041369065 ubox
3 9 0.007387352 ubox
3 13 0.003206622 ubox
3 37 0.038151333 ubox
3 38 0.038873084 ubox
4 11 0.032520573 ubox
4 33 0.964604707 ubox
5 10 0.032511522 ubox
5 13 0.004176062 ubox
5 22 0.005152754 ubox
5 32 0.965604876 ubox
6 12 0.004329015 ubox
6 21 0.005539717 ubox
6 31 0.965375345 ubox
7 11 0.004272780 ubox
7 20 0.005650984 ubox
7 29 0.010905432 ubox
7 30 0.965482122 ubox
7 31 0.004153086 ubox
7 45 0.021363160 ubox
7 48 0.047322671 ubox
8 27 0.014471841 ubox
8 28 0.012918791 ubox
8 29 0.964598435 ubox
8 30 0.008353612 ubox
8 44 0.017843145 ubox
8 45 0.239581003 ubox
8 47 0.046762239 ubox
8 48 0.020389313 ubox
9 18 0.011703780 ubox
9 24 0.006044573 ubox
9 25 0.869432927 ubox
9 27 0.025534816 ubox
9 28 0.408481065 ubox
9 29 0.010601670 ubox
9 43 0.012409784 ubox
9 44 0.240371262 ubox
9 45 0.045114385 ubox
9 47 0.020473186 ubox
9 48 0.057891940 ubox
10 17 0.012696703 ubox
10 24 0.955467691 ubox
10 27 0.126107407 ubox
10 28 0.006742302 ubox
10 43 0.240565475 ubox
10 44 0.045014113 ubox
10 47 0.059009598 ubox
11 16 0.012773479 ubox
11 23 0.963621593 ubox
11 42 0.242245114 ubox
12 19 0.007686700 ubox
12 22 0.959809300 ubox
12 26 0.051590826 ubox
12 41 0.202723758 ubox
12 46 0.075609260 ubox
13 18 0.010589041 ubox
13 21 0.959393975 ubox
13 25 0.051932156 ubox
13 28 0.014447323 ubox
13 40 0.154321469 ubox
13 44 0.011847492 ubox
13 45 0.079594030 ubox
13 48 0.021252732 ubox
14 20 0.962494434 ubox
14 24 0.044544658 ubox
14 27 0.035822353 ubox
14 35 0.053532577 ubox
14 40 0.012189489 ubox
14 43 0.011417091 ubox
14 44 0.079326982 ubox
14 47 0.021554504 ubox
15 19 0.867117458 ubox
15 22 0.007565271 ubox
15 23 0.033252499 ubox
15 26 0.038090255 ubox
15 34 0.053590058 ubox
15 36 0.039356637 ubox
15 39 0.011690402 ubox
15 41 0.156016014 ubox
15 42 0.009775020 ubox
15 46 0.021402162 ubox
16 21 0.005975890 ubox
16 25 0.038332811 ubox
16 33 0.053609125 ubox
16 35 0.041673313 ubox
16 40 0.207218059 ubox
16 45 0.021167023 ubox
17 23 0.017262432 ubox
17 32 0.031289778 ubox
17 34 0.041186173 ubox
17 38 0.005290951 ubox
17 39 0.239927476 ubox
18 22 0.017928783 ubox
18 32 0.053531875 ubox
18 37 0.004324779 ubox
18 38 0.240423748 ubox
19 31 0.050249560 ubox
19 43 0.020771246 ubox
20 37 0.247119544 ubox
20 42 0.021322003 ubox
21 32 0.004520083 ubox
21 34 0.003663357 ubox
21 36 0.247427866 ubox
21 41 0.021300086 ubox
21 46 0.003602654 ubox
22 28 0.003536390 ubox
22 29 0.014122783 ubox
22 30 0.066521506 ubox
22 31 0.009342441 ubox
22 33 0.003856915 ubox
22 35 0.246733296 ubox
22 40 0.021045114 ubox
22 45 0.004692639 ubox
23 28 0.012699605 ubox
23 29 0.066677284 ubox
23 30 0.010105349 ubox
23 33 0.124890686 ubox
23 35 0.018121277 ubox
23 40 0.003547845 ubox
23 44 0.004833844 ubox
24 32 0.085453093 ubox
24 34 0.024475352 ubox
24 39 0.004401256 ubox
25 32 0.220107939 ubox
25 37 0.003535132 ubox
25 38 0.004121140 ubox
26 31 0.192254135 ubox
28 39 0.034401998 ubox
29 38 0.036078296 ubox
30 37 0.036097614 ubox
31 36 0.033769793 ubox
34 43 0.074287662 ubox
35 42 0.079313054 ubox
37 44 0.038186689 ubox
37 45 0.897596878 ubox
37 48 0.131156442 ubox
38 43 0.028508865 ubox
38 44 0.898391026 ubox
38 47 0.132367236 ubox
39 43 0.781617040 ubox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
8 29 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
39 43 0.9500000 lbox
showpage
end
%%EOF
