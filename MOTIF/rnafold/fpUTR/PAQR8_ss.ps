%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGAGCCGAGCCCGCCGCGGUCACAGCCACCCGCGGGAAGCUCGUGGCCGGGACCCCGAGGCGGGAGCGCGGGCUGGGCCGGGCUGGGCUACGCGCACGGGCUCGGCCGCCGCCCCUGCCGGUUGCAUACCCUGUCCUGAGGGCGCGGCACGGAGUGCAUGCGGGCCGCUGCC\
) } def
/len { sequence length } bind def

/coor [
[203.03639221 229.76957703]
[193.67445374 218.04975891]
[191.10420227 203.27160645]
[195.95941162 189.07910156]
[207.04287720 178.97184753]
[221.62042236 175.44204712]
[208.28602600 168.57228088]
[194.95162964 161.70251465]
[181.61721802 154.83273315]
[168.28282166 147.96296692]
[154.94842529 141.09320068]
[141.61402893 134.22341919]
[128.27961731 127.35365295]
[114.94522095 120.48388672]
[101.61081696 113.61411285]
[86.64947510 112.53791809]
[72.46913147 117.42851257]
[65.34790802 123.20372772]
[57.99012756 122.27713776]
[43.72428131 126.91239166]
[29.45843124 131.54765320]
[15.19258404 136.18290710]
[0.92673665 140.81816101]
[-13.33911133 145.45341492]
[-27.60495949 150.08866882]
[-41.82862473 154.85177612]
[-56.00896835 159.74237061]
[-70.18930817 164.63296509]
[-77.16201782 178.56204224]
[-91.61257172 183.31979370]
[-104.84884644 176.58654785]
[-119.02918243 181.47714233]
[-129.36743164 194.20713806]
[-145.51614380 191.35211182]
[-150.86291504 175.84907532]
[-139.90744019 163.64622498]
[-123.91977692 167.29679871]
[-109.73944092 162.40620422]
[-103.46794128 148.94499207]
[-89.15673065 143.78323364]
[-75.07990265 150.45263672]
[-60.89956284 145.56204224]
[-46.71921921 140.67144775]
[-41.40324783 135.50076294]
[-32.24021530 135.82281494]
[-17.97436523 131.18756104]
[-3.70851827 126.55230713]
[10.55732918 121.91705322]
[24.82317734 117.28179932]
[39.08902359 112.64654541]
[53.35487366 108.01129150]
[67.57853699 103.24817657]
[81.75888062 98.35758209]
[82.83229828 90.93479156]
[84.97914124 76.08921814]
[86.05255890 68.66642761]
[73.83865356 59.95893097]
[61.62474823 51.25143051]
[49.41084290 42.54393005]
[33.00376892 38.27260971]
[32.56623459 21.32430840]
[48.73106766 16.21211815]
[58.11834335 30.33002663]
[70.33224487 39.03752518]
[82.54615021 47.74502563]
[94.76005554 56.45252609]
[101.09251404 52.43382263]
[120.08989716 40.37771988]
[117.41153717 25.61877823]
[114.73318481 10.85983372]
[112.05483246 -3.89911032]
[109.37648010 -18.65805435]
[106.56575775 -33.39236450]
[103.62290192 -48.10084915]
[100.68003845 -62.80933762]
[97.73718262 -77.51782227]
[87.44278717 -89.53181458]
[92.53274536 -103.52972412]
[89.58988190 -118.23821259]
[86.64702606 -132.94670105]
[77.61070251 -147.29177856]
[88.89366150 -159.94607544]
[104.17685699 -152.60710144]
[101.35551453 -135.88955688]
[104.29837036 -121.18107605]
[107.24123383 -106.47258759]
[117.32513428 -95.51064301]
[112.44567108 -80.46068573]
[115.38852692 -65.75219727]
[118.33139038 -51.04370880]
[121.27424622 -36.33522415]
[125.68455505 -30.37328339]
[124.13542175 -21.33640671]
[126.81377411 -6.57746363]
[129.49212646 8.18148041]
[132.17048645 22.94042397]
[134.84883118 37.69936752]
[134.77661133 80.36846924]
[108.48059082 100.27970886]
[121.81499481 107.14948273]
[135.14939880 114.01925659]
[148.48379517 120.88902283]
[161.81819153 127.75879669]
[175.15258789 134.62857056]
[188.48699951 141.49833679]
[201.82139587 148.36810303]
[215.15579224 155.23788452]
[228.49020386 162.10765076]
[240.20936584 161.95347595]
[247.02359009 169.83320618]
[261.28945923 174.46846008]
[276.80514526 171.37434387]
[286.51855469 182.66589355]
[300.78439331 187.30114746]
[315.05023193 191.93640137]
[329.31610107 196.57165527]
[343.84484863 200.30200195]
[358.57913208 203.11273193]
[367.62954712 201.64477539]
[373.55166626 206.10841370]
[388.23315430 209.18318176]
[402.91464233 212.25793457]
[417.62310791 215.20080566]
[432.35742188 218.01152039]
[447.09173584 220.82223511]
[461.82604980 223.63296509]
[476.56036377 226.44367981]
[485.22360229 219.79724121]
[495.89660645 219.05030823]
[505.01803589 224.20896912]
[509.67782593 233.34877014]
[524.30175781 236.68658447]
[538.92565918 240.02439880]
[553.54956055 243.36221313]
[566.79638672 234.74267578]
[582.24078369 238.09635925]
[590.71978760 251.43359375]
[587.20300293 266.84164429]
[573.77685547 275.17916870]
[558.40686035 271.49966431]
[550.21173096 257.98614502]
[535.58782959 254.64833069]
[520.96392822 251.31051636]
[506.33999634 247.97270203]
[488.36038208 255.03457642]
[473.74963379 241.17799377]
[459.01531982 238.36726379]
[444.28100586 235.55654907]
[429.54669189 232.74583435]
[414.81240845 229.93510437]
[407.62875366 231.77656555]
[399.83987427 226.93942261]
[385.15838623 223.86465454]
[370.47689819 220.78988647]
[355.76843262 217.84703064]
[341.03411865 215.03631592]
[349.33013916 227.53335571]
[347.80270386 242.45538330]
[337.14678955 253.01245117]
[322.21118164 254.40081787]
[309.79199219 245.98872375]
[305.54025269 231.60391235]
[311.39068604 217.79187012]
[324.68084717 210.83750916]
[310.41497803 206.20225525]
[296.14913940 201.56700134]
[281.88330078 196.93174744]
[267.38796997 200.35740662]
[256.65420532 188.73431396]
[242.38833618 184.09906006]
[250.14309692 196.93898010]
[250.76551819 211.92607117]
[244.10214233 225.36479187]
[231.79598999 233.94143677]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 108]
[7 107]
[8 106]
[9 105]
[10 104]
[11 103]
[12 102]
[13 101]
[14 100]
[15 99]
[16 53]
[17 52]
[19 51]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 45]
[26 43]
[27 42]
[28 41]
[31 38]
[32 37]
[56 66]
[57 65]
[58 64]
[59 63]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[73 91]
[74 90]
[75 89]
[76 88]
[78 86]
[79 85]
[80 84]
[110 170]
[111 169]
[113 167]
[114 166]
[115 165]
[116 164]
[117 156]
[118 155]
[120 154]
[121 153]
[122 152]
[123 150]
[124 149]
[125 148]
[126 147]
[127 146]
[131 144]
[132 143]
[133 142]
[134 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
