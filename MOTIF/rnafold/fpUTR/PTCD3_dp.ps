%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PTCD3)
} def

/sequence { (\
CACUGCGCCCCACCUUCCUGAAGGUCGAGGCACGCUUUCCCAACAUGCUCUGCAGAGAAAUCAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 47 0.009413869 ubox
1 52 0.009685063 ubox
2 46 0.009224580 ubox
2 51 0.009535112 ubox
3 29 0.016843301 ubox
3 30 0.006765906 ubox
3 55 0.802418556 ubox
3 57 0.026664838 ubox
3 66 0.041232252 ubox
4 28 0.016829441 ubox
4 29 0.006387438 ubox
4 32 0.043618849 ubox
4 34 0.252506565 ubox
4 42 0.006211708 ubox
4 45 0.004434483 ubox
4 54 0.809585774 ubox
4 56 0.023892958 ubox
4 63 0.015773175 ubox
4 65 0.040385211 ubox
5 31 0.048961034 ubox
5 33 0.378314766 ubox
5 35 0.390401242 ubox
5 41 0.005133964 ubox
5 44 0.003764684 ubox
5 48 0.016275802 ubox
5 53 0.811004142 ubox
5 62 0.015961030 ubox
6 27 0.017861011 ubox
6 30 0.048792075 ubox
6 34 0.390693697 ubox
6 47 0.016306159 ubox
6 52 0.810154979 ubox
7 25 0.013079180 ubox
7 26 0.020290344 ubox
7 31 0.920645395 ubox
7 33 0.333368425 ubox
7 35 0.032309717 ubox
7 46 0.003798630 ubox
7 48 0.025040166 ubox
7 51 0.149177663 ubox
7 53 0.007544584 ubox
8 24 0.015080134 ubox
8 30 0.925435062 ubox
8 34 0.032443516 ubox
8 47 0.025175949 ubox
8 52 0.007537346 ubox
9 23 0.015045470 ubox
9 24 0.005775682 ubox
9 29 0.922195928 ubox
9 30 0.184352645 ubox
10 23 0.005803100 ubox
10 24 0.012148674 ubox
10 29 0.191945824 ubox
10 30 0.275918455 ubox
11 20 0.014247378 ubox
11 23 0.012136552 ubox
11 29 0.275981040 ubox
11 47 0.093672363 ubox
12 19 0.012932677 ubox
12 25 0.958419323 ubox
12 46 0.090743130 ubox
13 24 0.991006073 ubox
13 30 0.030500782 ubox
14 23 0.991089461 ubox
14 24 0.016779248 ubox
14 29 0.030684377 ubox
14 30 0.003230574 ubox
15 21 0.039932575 ubox
15 22 0.977575037 ubox
15 23 0.016817553 ubox
15 28 0.030557328 ubox
15 29 0.003296062 ubox
15 43 0.053216479 ubox
15 59 0.005582303 ubox
16 20 0.051024248 ubox
16 21 0.850385185 ubox
16 22 0.023016913 ubox
16 24 0.005337292 ubox
16 27 0.027903621 ubox
16 28 0.004681263 ubox
16 42 0.049996628 ubox
16 58 0.006199323 ubox
17 23 0.005693243 ubox
17 24 0.038089017 ubox
17 27 0.005029457 ubox
17 30 0.008389526 ubox
17 57 0.006260263 ubox
18 23 0.038060810 ubox
18 24 0.005552460 ubox
18 29 0.008543765 ubox
18 55 0.006403360 ubox
19 23 0.005029406 ubox
19 27 0.003936380 ubox
19 28 0.008342127 ubox
19 42 0.003849289 ubox
19 45 0.008618727 ubox
19 54 0.006397532 ubox
20 26 0.006946510 ubox
20 38 0.011345180 ubox
20 39 0.121708494 ubox
20 41 0.003257806 ubox
20 44 0.008696703 ubox
20 53 0.006264877 ubox
21 25 0.006053570 ubox
21 37 0.011963113 ubox
21 38 0.122009926 ubox
22 36 0.012115110 ubox
22 37 0.121854125 ubox
22 51 0.004600607 ubox
23 35 0.012124030 ubox
23 36 0.122000445 ubox
23 40 0.004697652 ubox
23 41 0.010141934 ubox
23 50 0.005128254 ubox
24 33 0.010545197 ubox
24 35 0.122101021 ubox
24 39 0.004734231 ubox
24 40 0.010147213 ubox
25 32 0.010003010 ubox
25 34 0.076199383 ubox
25 58 0.006669603 ubox
26 34 0.095133301 ubox
26 57 0.009263890 ubox
27 33 0.096281624 ubox
27 37 0.024545655 ubox
27 38 0.016616902 ubox
27 39 0.015295049 ubox
27 50 0.081016948 ubox
27 51 0.009204224 ubox
28 36 0.026079996 ubox
28 37 0.018184429 ubox
28 38 0.014657906 ubox
28 49 0.077963967 ubox
28 51 0.038488875 ubox
29 35 0.026312959 ubox
29 36 0.018966128 ubox
29 37 0.013573954 ubox
29 40 0.012861799 ubox
29 41 0.010838303 ubox
29 48 0.062899990 ubox
29 49 0.059146529 ubox
29 50 0.040413107 ubox
29 51 0.004652683 ubox
30 35 0.019361303 ubox
30 36 0.010827073 ubox
30 39 0.012925218 ubox
30 40 0.010763247 ubox
30 48 0.086888762 ubox
30 49 0.010338561 ubox
30 50 0.005498327 ubox
30 53 0.020641744 ubox
31 47 0.098414505 ubox
31 52 0.020743488 ubox
32 46 0.087845595 ubox
32 51 0.034612763 ubox
33 47 0.034516877 ubox
33 52 0.004245000 ubox
34 46 0.027610377 ubox
34 48 0.801807212 ubox
34 51 0.003766729 ubox
34 53 0.074230181 ubox
35 47 0.802701703 ubox
35 52 0.074348030 ubox
35 55 0.007021804 ubox
35 57 0.071238349 ubox
35 66 0.112160698 ubox
36 43 0.055521238 ubox
36 54 0.006194829 ubox
36 55 0.003374565 ubox
36 56 0.071639142 ubox
36 57 0.019176861 ubox
36 58 0.147219011 ubox
36 59 0.017440288 ubox
36 60 0.144112897 ubox
36 64 0.026696123 ubox
36 65 0.118194982 ubox
36 66 0.010900671 ubox
37 42 0.050802103 ubox
37 43 0.061065985 ubox
37 54 0.003565912 ubox
37 55 0.070886767 ubox
37 56 0.022545249 ubox
37 57 0.155865900 ubox
37 58 0.017065950 ubox
37 59 0.165454426 ubox
37 60 0.009490629 ubox
37 63 0.027159908 ubox
37 64 0.117703557 ubox
37 65 0.017289588 ubox
37 66 0.006206663 ubox
38 42 0.054871002 ubox
38 54 0.054913348 ubox
38 55 0.022731447 ubox
38 56 0.159207242 ubox
38 57 0.013995588 ubox
38 58 0.170144757 ubox
38 59 0.009589988 ubox
38 63 0.108843303 ubox
38 64 0.017082637 ubox
38 65 0.008331914 ubox
39 55 0.159552728 ubox
39 57 0.170123244 ubox
41 47 0.080011971 ubox
41 52 0.108700516 ubox
42 46 0.065555675 ubox
42 51 0.108182094 ubox
44 52 0.070113819 ubox
45 51 0.066576973 ubox
45 61 0.077245778 ubox
46 54 0.295495845 ubox
46 60 0.082713590 ubox
46 63 0.102262291 ubox
47 51 0.007011271 ubox
47 53 0.310498828 ubox
47 62 0.113379592 ubox
48 52 0.308274333 ubox
48 55 0.023480801 ubox
48 57 0.303533938 ubox
48 66 0.009633383 ubox
49 54 0.021668069 ubox
49 56 0.305458743 ubox
49 58 0.299539853 ubox
49 65 0.009316369 ubox
50 55 0.304531914 ubox
50 57 0.312770428 ubox
50 66 0.028690495 ubox
51 56 0.309730789 ubox
51 63 0.012171506 ubox
51 65 0.029373332 ubox
52 62 0.012468960 ubox
55 62 0.170233955 ubox
56 61 0.168792937 ubox
3 55 0.9500000 lbox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
showpage
end
%%EOF
