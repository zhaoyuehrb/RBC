%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OVGP1)
} def

/sequence { (\
AGGGAAGCUCCUAUAAAGGGCUGCAUCUCUGGACUCACAGCUAUCAGACCAUUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.017662880 ubox
1 12 0.428968643 ubox
1 28 0.129476226 ubox
1 30 0.578237780 ubox
1 42 0.010144431 ubox
1 53 0.009221402 ubox
2 8 0.020436255 ubox
2 9 0.031180283 ubox
2 10 0.040290492 ubox
2 11 0.454096755 ubox
2 12 0.531116497 ubox
2 27 0.158523424 ubox
2 28 0.052283456 ubox
2 29 0.643880018 ubox
2 30 0.018217728 ubox
2 36 0.004824059 ubox
2 41 0.010613017 ubox
2 42 0.008104212 ubox
2 45 0.005889635 ubox
2 50 0.076494792 ubox
2 52 0.008186651 ubox
3 8 0.033972163 ubox
3 9 0.040214497 ubox
3 10 0.453410963 ubox
3 11 0.551145744 ubox
3 12 0.025084868 ubox
3 26 0.156789456 ubox
3 27 0.058241377 ubox
3 28 0.650205431 ubox
3 29 0.020941466 ubox
3 30 0.013067676 ubox
3 35 0.004690552 ubox
3 41 0.008319544 ubox
3 42 0.007247849 ubox
3 44 0.004526722 ubox
3 45 0.006809906 ubox
3 49 0.076313715 ubox
3 50 0.044511617 ubox
4 8 0.067500626 ubox
4 9 0.353959706 ubox
4 10 0.551437555 ubox
4 11 0.025764567 ubox
4 26 0.050863349 ubox
4 27 0.652686914 ubox
4 28 0.003941827 ubox
4 29 0.014436917 ubox
4 34 0.004611363 ubox
4 41 0.007473399 ubox
4 44 0.006266039 ubox
4 45 0.011990380 ubox
4 49 0.044386918 ubox
5 9 0.480080812 ubox
5 26 0.645786012 ubox
5 28 0.014430869 ubox
5 44 0.011534895 ubox
6 12 0.006974743 ubox
6 22 0.480758053 ubox
6 42 0.013440566 ubox
7 11 0.007073853 ubox
7 21 0.486732391 ubox
7 24 0.489936556 ubox
7 41 0.013711175 ubox
8 18 0.006210418 ubox
8 20 0.484201708 ubox
8 23 0.489557323 ubox
8 40 0.013694244 ubox
8 56 0.033009092 ubox
9 17 0.006083355 ubox
9 19 0.172604195 ubox
9 20 0.296633685 ubox
9 33 0.003919305 ubox
9 39 0.012745163 ubox
9 55 0.033903323 ubox
10 18 0.167102905 ubox
10 19 0.575029592 ubox
10 20 0.333085943 ubox
10 32 0.004584238 ubox
10 54 0.033722970 ubox
11 18 0.576899208 ubox
11 19 0.332878770 ubox
11 20 0.083951234 ubox
11 31 0.004581088 ubox
11 56 0.036251220 ubox
12 17 0.550831894 ubox
12 18 0.325160703 ubox
12 19 0.081818034 ubox
12 54 0.015377567 ubox
12 55 0.041394869 ubox
13 52 0.024529040 ubox
13 53 0.023230832 ubox
14 51 0.025701161 ubox
14 54 0.236097602 ubox
15 53 0.282198076 ubox
16 52 0.279547226 ubox
16 53 0.229797996 ubox
17 28 0.004209000 ubox
17 30 0.013958071 ubox
17 52 0.216051401 ubox
17 53 0.101551693 ubox
18 27 0.004512762 ubox
18 29 0.014191600 ubox
18 36 0.005251938 ubox
18 42 0.003309433 ubox
18 45 0.005917156 ubox
18 50 0.514764588 ubox
18 52 0.097722570 ubox
18 53 0.009299260 ubox
19 26 0.004184720 ubox
19 28 0.014135281 ubox
19 35 0.005276423 ubox
19 42 0.054725176 ubox
19 49 0.511219538 ubox
19 50 0.499178554 ubox
20 27 0.013973800 ubox
20 34 0.005321013 ubox
20 41 0.057318621 ubox
20 49 0.500640132 ubox
21 32 0.005346025 ubox
21 40 0.057381540 ubox
21 47 0.707056182 ubox
22 31 0.005292304 ubox
22 39 0.057278568 ubox
22 46 0.719794551 ubox
22 51 0.004768261 ubox
22 55 0.003433939 ubox
23 30 0.003323595 ubox
23 36 0.004741661 ubox
23 38 0.057042956 ubox
23 41 0.013593597 ubox
23 45 0.719854046 ubox
23 50 0.009926006 ubox
24 31 0.013100608 ubox
24 40 0.012807060 ubox
24 54 0.029630071 ubox
25 30 0.011422452 ubox
25 44 0.663928501 ubox
25 52 0.007666493 ubox
25 53 0.029095408 ubox
26 32 0.004928056 ubox
26 33 0.033355821 ubox
26 43 0.658916031 ubox
26 48 0.041801300 ubox
26 51 0.008531255 ubox
26 55 0.054865269 ubox
27 31 0.005302749 ubox
27 32 0.033904660 ubox
27 40 0.034229789 ubox
27 47 0.045439900 ubox
27 54 0.058738431 ubox
27 56 0.043278815 ubox
28 39 0.033253575 ubox
28 46 0.044991445 ubox
28 48 0.101231945 ubox
28 55 0.046370526 ubox
29 40 0.740763131 ubox
29 47 0.119873179 ubox
29 54 0.047177158 ubox
29 56 0.005927943 ubox
30 37 0.048059266 ubox
30 39 0.747882596 ubox
30 43 0.097727821 ubox
30 46 0.120704521 ubox
30 51 0.172539240 ubox
30 55 0.007298373 ubox
31 36 0.065043190 ubox
31 38 0.756592860 ubox
31 42 0.157593831 ubox
31 45 0.121350792 ubox
31 50 0.279896020 ubox
32 41 0.163427674 ubox
32 44 0.098285124 ubox
32 45 0.032273665 ubox
32 49 0.279489944 ubox
32 53 0.009005779 ubox
33 44 0.032110582 ubox
33 52 0.008935644 ubox
34 40 0.150494923 ubox
34 47 0.226971151 ubox
34 56 0.401081141 ubox
35 39 0.135725487 ubox
35 46 0.216609676 ubox
35 48 0.117541601 ubox
35 55 0.407568406 ubox
36 47 0.123522679 ubox
36 54 0.408140661 ubox
37 53 0.380124523 ubox
38 54 0.033359805 ubox
39 53 0.034097858 ubox
40 52 0.033546777 ubox
41 47 0.236345196 ubox
41 56 0.029013940 ubox
42 46 0.213170559 ubox
42 54 0.013502709 ubox
42 55 0.020210941 ubox
43 52 0.044178789 ubox
43 53 0.014975391 ubox
44 51 0.041970723 ubox
44 55 0.340505372 ubox
45 54 0.364409101 ubox
46 53 0.349192749 ubox
47 52 0.215615292 ubox
47 53 0.014109824 ubox
48 52 0.017771823 ubox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
5 9 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
23 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
showpage
end
%%EOF
