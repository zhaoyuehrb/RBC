%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PDE6H)
} def

/sequence { (\
CAAAGAUCCUUUUGUCUUUUGCAAAGAAGGCAGCUGGGCAGCUGAUAGGAACAACAUUCAGCUCCGAGGCUGAAAGGGAAACAUCAGCCGCCCGGGGGGAGUUAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 11 0.004539441 ubox
2 12 0.020447258 ubox
2 13 0.004914007 ubox
2 19 0.003655834 ubox
2 103 0.096156395 ubox
3 10 0.004637524 ubox
3 11 0.026259312 ubox
3 12 0.007027310 ubox
3 13 0.003794456 ubox
3 18 0.004637231 ubox
3 102 0.095025745 ubox
3 103 0.259227295 ubox
4 10 0.027380673 ubox
4 11 0.007680664 ubox
4 12 0.005105033 ubox
4 13 0.005228512 ubox
4 17 0.004858598 ubox
4 102 0.263140107 ubox
4 103 0.393964266 ubox
5 9 0.026947666 ubox
5 10 0.006466249 ubox
5 11 0.005879088 ubox
5 12 0.007975898 ubox
5 16 0.004907417 ubox
5 102 0.323876959 ubox
5 103 0.334456963 ubox
6 10 0.005106423 ubox
6 11 0.008406238 ubox
6 15 0.004898543 ubox
6 102 0.330744753 ubox
7 14 0.004664665 ubox
7 96 0.005005863 ubox
7 97 0.013139171 ubox
7 98 0.079635683 ubox
7 99 0.189665233 ubox
7 100 0.899379237 ubox
7 101 0.178972480 ubox
8 30 0.004241328 ubox
8 95 0.006654327 ubox
8 96 0.016935017 ubox
8 97 0.097457091 ubox
8 98 0.253571877 ubox
8 99 0.955030007 ubox
9 29 0.004296642 ubox
9 33 0.004875084 ubox
9 94 0.006645763 ubox
9 95 0.016037066 ubox
9 96 0.097419232 ubox
9 97 0.255013838 ubox
9 98 0.954801523 ubox
9 99 0.043993734 ubox
9 101 0.029967033 ubox
10 28 0.004208222 ubox
10 32 0.003662774 ubox
10 33 0.005913035 ubox
10 94 0.013493296 ubox
10 95 0.036020346 ubox
10 96 0.242146527 ubox
10 97 0.935985996 ubox
10 98 0.043648112 ubox
10 100 0.030103588 ubox
11 25 0.003343720 ubox
11 27 0.003827258 ubox
11 32 0.005192582 ubox
11 33 0.030921367 ubox
11 94 0.022774130 ubox
11 95 0.043650397 ubox
11 96 0.780079843 ubox
11 97 0.051356054 ubox
11 98 0.003198458 ubox
11 99 0.029314638 ubox
11 100 0.003429920 ubox
12 24 0.004164479 ubox
12 26 0.003461682 ubox
12 32 0.034775331 ubox
12 33 0.758292410 ubox
12 94 0.020490972 ubox
12 95 0.086392005 ubox
12 96 0.042953360 ubox
12 97 0.005713458 ubox
12 98 0.022036311 ubox
12 99 0.003249470 ubox
13 23 0.004763072 ubox
13 32 0.967261802 ubox
13 94 0.029606796 ubox
13 95 0.003346062 ubox
13 96 0.007396018 ubox
13 97 0.011707896 ubox
14 22 0.004925353 ubox
14 31 0.999809903 ubox
15 21 0.004777139 ubox
15 27 0.004084064 ubox
15 30 0.999414541 ubox
16 26 0.004691256 ubox
16 29 0.999724261 ubox
16 30 0.016021803 ubox
17 25 0.004810373 ubox
17 27 0.012924870 ubox
17 28 0.998998438 ubox
17 29 0.016085525 ubox
18 24 0.005085502 ubox
18 25 0.004386266 ubox
18 26 0.018204721 ubox
18 27 0.998396960 ubox
18 28 0.022422810 ubox
19 23 0.004544152 ubox
19 24 0.005357436 ubox
19 25 0.021089495 ubox
19 26 0.994829400 ubox
19 27 0.027369667 ubox
19 28 0.003448175 ubox
19 33 0.006342195 ubox
20 24 0.020513381 ubox
20 25 0.965826638 ubox
20 26 0.031224383 ubox
20 27 0.006662573 ubox
20 32 0.008668487 ubox
21 31 0.009017580 ubox
22 30 0.009012646 ubox
34 95 0.987988907 ubox
34 96 0.036934631 ubox
34 97 0.005647909 ubox
35 67 0.004151146 ubox
35 94 0.994326441 ubox
35 95 0.026308571 ubox
35 96 0.004748628 ubox
36 93 0.999927250 ubox
37 65 0.005325577 ubox
37 92 0.999971181 ubox
38 64 0.005351730 ubox
38 91 0.999972999 ubox
39 90 0.999084590 ubox
40 63 0.120909797 ubox
41 62 0.129243763 ubox
41 88 0.991210517 ubox
42 61 0.129283058 ubox
42 87 0.991594062 ubox
43 60 0.129251985 ubox
43 86 0.991358704 ubox
44 59 0.129247006 ubox
44 85 0.991546123 ubox
45 57 0.009278119 ubox
45 58 0.127269153 ubox
45 84 0.988376568 ubox
46 56 0.012674953 ubox
46 83 0.932205189 ubox
47 58 0.007305543 ubox
48 57 0.020112339 ubox
48 59 0.006792730 ubox
49 57 0.004403388 ubox
49 58 0.010497131 ubox
49 59 0.006539999 ubox
50 57 0.013369170 ubox
50 58 0.007623992 ubox
51 57 0.008861345 ubox
57 73 0.030835381 ubox
57 74 0.908538363 ubox
57 75 0.082617188 ubox
57 76 0.020486517 ubox
57 77 0.009439457 ubox
58 72 0.005423451 ubox
58 73 0.984975964 ubox
58 74 0.059325020 ubox
58 75 0.006767378 ubox
59 72 0.991483814 ubox
60 71 0.991338171 ubox
61 70 0.991576269 ubox
62 68 0.030930428 ubox
62 69 0.990730327 ubox
63 67 0.039397830 ubox
63 68 0.910705695 ubox
63 69 0.012817753 ubox
63 79 0.004578364 ubox
64 68 0.111192508 ubox
64 78 0.004810280 ubox
65 77 0.004805276 ubox
68 89 0.129077328 ubox
69 88 0.129253635 ubox
70 87 0.129254283 ubox
71 86 0.129221415 ubox
72 85 0.129212975 ubox
73 84 0.122995529 ubox
76 85 0.003600363 ubox
77 84 0.005891378 ubox
79 84 0.003485112 ubox
96 103 0.007094165 ubox
97 102 0.007107409 ubox
97 103 0.003198306 ubox
7 100 0.9500000 lbox
8 99 0.9500000 lbox
9 98 0.9500000 lbox
10 97 0.9500000 lbox
11 96 0.9500000 lbox
12 33 0.9500000 lbox
13 32 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
34 95 0.9500000 lbox
35 94 0.9500000 lbox
36 93 0.9500000 lbox
37 92 0.9500000 lbox
38 91 0.9500000 lbox
39 90 0.9500000 lbox
41 88 0.9500000 lbox
42 87 0.9500000 lbox
43 86 0.9500000 lbox
44 85 0.9500000 lbox
45 84 0.9500000 lbox
46 83 0.9500000 lbox
57 74 0.9500000 lbox
58 73 0.9500000 lbox
59 72 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
63 68 0.9500000 lbox
showpage
end
%%EOF
