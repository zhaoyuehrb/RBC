%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCAGGUGCUCCUGGAGUGCAGCGCCUAUCGCCGGGGCGUGUGGGGGCCACACCGAGCACCAGCUUCUCCGACGCCGGGAAGCCGCUGUCGCCGCCGCUACCUCUCCCUGUUGCCGCCGCCUCAGAUCUCUUCAUGCCGCUGUAAGCUCGGAGGCCAAGG\
) } def
/len { sequence length } bind def

/coor [
[89.49797058 266.25140381]
[91.76016998 250.77832031]
[103.47334290 240.41802979]
[102.90911865 225.42864990]
[102.34489441 210.43927002]
[101.78066254 195.44987488]
[93.57010651 183.02265930]
[100.78283691 168.94120789]
[100.21861267 153.95182800]
[74.06594849 136.07101440]
[66.87200165 110.98021698]
[51.95222092 112.52943420]
[37.03244019 114.07865143]
[22.11265564 115.62786865]
[7.19287252 117.17708588]
[-7.72691011 118.72630310]
[-22.64669418 120.27552032]
[-28.27375031 123.87685394]
[-34.00855255 124.03855896]
[-38.15528107 121.59152222]
[-53.12277985 122.57843781]
[-66.38397980 131.20693970]
[-79.59274292 124.32378387]
[-94.56024170 125.31069946]
[-109.52774048 126.29761505]
[-115.28627777 129.68473816]
[-121.02310944 129.63061523]
[-125.07485962 127.02932739]
[-140.06889343 127.45254517]
[-153.64526367 135.57612610]
[-166.58576965 128.20098877]
[-181.57980347 128.62420654]
[-196.57382202 129.04742432]
[-211.56785583 129.47062683]
[-226.56188965 129.89384460]
[-241.55126953 130.45806885]
[-256.53466797 131.16325378]
[-271.51809692 131.86843872]
[-285.01919556 141.17715454]
[-299.71319580 133.89578247]
[-300.48416138 117.51476288]
[-286.53900146 108.88549805]
[-272.22329712 116.88502502]
[-257.23986816 116.17984009]
[-242.25645447 115.47465515]
[-235.69468689 112.00420380]
[-226.98509216 114.89981079]
[-211.99107361 114.47660065]
[-196.99703979 114.05339050]
[-182.00300598 113.63017273]
[-167.00898743 113.20696259]
[-154.50508118 105.11365509]
[-140.49209595 112.45851135]
[-125.49806976 112.03530121]
[-110.51465607 111.33011627]
[-95.54715729 110.34320068]
[-80.57965851 109.35628510]
[-68.38903046 100.79837036]
[-54.10969543 107.61093903]
[-39.14219666 106.62402344]
[-24.19590950 105.35573578]
[-9.27612686 103.80651855]
[5.64365578 102.25730133]
[20.56343842 100.70808411]
[35.48322296 99.15886688]
[50.40300369 97.60964966]
[65.32278442 96.06043243]
[72.19559479 78.90629578]
[86.86394501 67.66622162]
[84.33644867 52.88069534]
[81.80895233 38.09516907]
[79.28145599 23.30964470]
[76.75396729 8.52411842]
[72.20545959 0.55212885]
[74.32072449 -6.56310129]
[72.07180023 -21.39355469]
[69.82288361 -36.22401047]
[59.16954041 -48.69149780]
[64.89436340 -64.05894470]
[81.10815430 -66.51763916]
[91.13154602 -53.53828049]
[84.65333557 -38.47293091]
[86.90225983 -23.64247513]
[89.15117645 -8.81202126]
[91.53948975 5.99662304]
[94.06698608 20.78214836]
[96.59448242 35.56767273]
[99.12197876 50.35319901]
[101.64946747 65.13872528]
[119.74612427 63.78217697]
[138.74832153 72.35077667]
[153.19363403 90.98422241]
[166.23078918 83.56583405]
[179.26794434 76.14743805]
[183.55622864 61.17250824]
[196.88343811 53.83492279]
[211.13331604 58.01542282]
[224.17047119 50.59703064]
[232.33824158 37.04719543]
[247.22662354 37.47762680]
[260.26379395 30.05923080]
[268.43154907 16.50939560]
[283.31994629 16.93982697]
[296.35708618 9.52143192]
[304.52487183 -4.02840281]
[319.41326904 -3.59797263]
[332.45040894 -11.01636791]
[334.03521729 -26.45229912]
[344.41543579 -37.98620987]
[359.59960938 -41.18307114]
[373.74917603 -34.81362534]
[381.42327881 -21.32705879]
[379.67111206 -5.90922689]
[369.16641235 5.51139784]
[353.94842529 8.54335213]
[339.86880493 2.02078772]
[326.83166504 9.43918228]
[319.59637451 22.45840454]
[303.77548218 22.55858612]
[290.73834229 29.97698212]
[283.50305176 42.99620438]
[267.68215942 43.09638596]
[254.64501953 50.51478195]
[247.40974426 63.53400040]
[231.58885193 63.63418579]
[218.55169678 71.05258179]
[214.86648560 85.43849945]
[201.75064087 93.14752960]
[186.68634033 89.18459320]
[173.64918518 96.60298920]
[160.61203003 104.02137756]
[159.20944214 111.38906097]
[174.20718384 111.12915802]
[189.20494080 110.86924744]
[202.62744141 104.17322540]
[217.40602112 106.74095154]
[227.78324890 117.57207489]
[229.71632385 132.44699097]
[222.45216370 145.57070923]
[208.82075500 151.83047485]
[194.13264465 148.78758240]
[184.11068726 137.62898254]
[170.25747681 131.87670898]
[156.40426636 126.12442780]
[155.00167847 133.49211121]
[164.40122986 145.18179321]
[173.80076599 156.87145996]
[188.43812561 165.42622375]
[184.26971436 181.85975647]
[167.32449341 182.40348816]
[162.11109924 166.27101135]
[152.71154785 154.58132935]
[143.31199646 142.89166260]
[136.28599548 145.51564026]
[122.23400116 150.76361084]
[115.20799255 153.38760376]
[115.77222443 168.37698364]
[124.02313995 181.87635803]
[116.77005005 194.88565063]
[117.33427429 209.87504578]
[117.89849854 224.86442566]
[118.46272278 239.85380554]
[130.92160034 249.30422974]
[134.34062195 264.56347656]
[127.10541534 278.42657471]
[112.63224030 284.34783936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 162]
[4 161]
[5 160]
[6 159]
[8 157]
[9 156]
[11 67]
[12 66]
[13 65]
[14 64]
[15 63]
[16 62]
[17 61]
[20 60]
[21 59]
[23 57]
[24 56]
[25 55]
[28 54]
[29 53]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[36 45]
[37 44]
[38 43]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[75 84]
[76 83]
[77 82]
[92 131]
[93 130]
[94 129]
[97 126]
[98 125]
[100 123]
[101 122]
[103 120]
[104 119]
[106 117]
[107 116]
[145 153]
[146 152]
[147 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
