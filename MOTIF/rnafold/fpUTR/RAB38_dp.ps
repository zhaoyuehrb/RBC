%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RAB38)
} def

/sequence { (\
UUGCGCUCCCCAAGUCUCUCUCGUGCGCAGAGCCCAGGCUGCGCUUCCCUGGUCAGGCACGGCACGUCUGGCCGGCCGCCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.053587162 ubox
1 14 0.008667727 ubox
1 30 0.212900608 ubox
1 31 0.005533737 ubox
1 82 0.006032439 ubox
2 12 0.062005613 ubox
2 13 0.011008348 ubox
2 23 0.006695776 ubox
2 25 0.005633862 ubox
2 27 0.013752257 ubox
2 29 0.312059378 ubox
2 30 0.005259188 ubox
2 36 0.004056998 ubox
2 43 0.007766760 ubox
2 81 0.007421144 ubox
3 11 0.063092065 ubox
3 15 0.073476585 ubox
3 22 0.009229345 ubox
3 24 0.119569016 ubox
3 26 0.107659865 ubox
3 28 0.326197492 ubox
3 35 0.004447734 ubox
3 42 0.010537307 ubox
3 44 0.867156123 ubox
3 79 0.006679290 ubox
3 80 0.007312583 ubox
4 14 0.077156911 ubox
4 23 0.123282906 ubox
4 25 0.108219678 ubox
4 27 0.326229387 ubox
4 41 0.010534155 ubox
4 43 0.868620642 ubox
4 78 0.007045867 ubox
5 15 0.147405898 ubox
5 22 0.118040836 ubox
5 24 0.111726696 ubox
5 26 0.326326356 ubox
5 33 0.004980566 ubox
5 39 0.003417109 ubox
5 40 0.006256577 ubox
5 42 0.868662568 ubox
5 44 0.010496306 ubox
5 77 0.006484143 ubox
5 79 0.007179992 ubox
6 14 0.156460638 ubox
6 23 0.111892720 ubox
6 25 0.326194226 ubox
6 32 0.004987748 ubox
6 38 0.003455489 ubox
6 41 0.868060214 ubox
6 43 0.010489871 ubox
6 78 0.007172795 ubox
7 13 0.151078133 ubox
7 31 0.005038182 ubox
7 38 0.004280485 ubox
8 30 0.005121410 ubox
8 37 0.005138377 ubox
8 38 0.139514258 ubox
9 37 0.138944439 ubox
9 38 0.627656963 ubox
9 75 0.003383987 ubox
10 37 0.626228318 ubox
10 38 0.135773875 ubox
10 74 0.003361163 ubox
11 25 0.006615141 ubox
11 37 0.139567398 ubox
11 41 0.027128877 ubox
12 24 0.009027307 ubox
12 40 0.040292119 ubox
12 46 0.003327829 ubox
13 19 0.087865951 ubox
13 21 0.137683381 ubox
13 40 0.559505599 ubox
13 45 0.003649198 ubox
14 18 0.089233305 ubox
14 20 0.142582821 ubox
14 26 0.006044416 ubox
14 28 0.004175891 ubox
14 33 0.537055967 ubox
14 39 0.565789907 ubox
15 25 0.005836892 ubox
15 27 0.004053976 ubox
15 31 0.077296411 ubox
15 32 0.094845766 ubox
15 38 0.565498019 ubox
16 30 0.079885364 ubox
16 32 0.620502190 ubox
16 37 0.565268485 ubox
16 38 0.012550153 ubox
17 29 0.076058523 ubox
17 31 0.625541786 ubox
17 36 0.546886417 ubox
17 37 0.010502509 ubox
17 38 0.004997783 ubox
18 30 0.625612269 ubox
18 32 0.354553196 ubox
18 37 0.011376280 ubox
19 29 0.595575788 ubox
19 31 0.358185541 ubox
19 36 0.012712699 ubox
20 30 0.358381848 ubox
20 32 0.471960833 ubox
20 37 0.004445723 ubox
21 29 0.345886376 ubox
21 31 0.474668366 ubox
21 36 0.005199503 ubox
22 30 0.474813096 ubox
22 37 0.003201605 ubox
23 33 0.011056681 ubox
23 44 0.018041135 ubox
24 32 0.010992105 ubox
24 36 0.023344339 ubox
24 43 0.017864016 ubox
25 33 0.036758686 ubox
25 35 0.024837000 ubox
25 42 0.017800643 ubox
25 44 0.354790785 ubox
26 32 0.036854510 ubox
26 41 0.017786730 ubox
26 43 0.355581685 ubox
27 33 0.025861887 ubox
27 39 0.006417072 ubox
27 40 0.008266683 ubox
27 42 0.358174933 ubox
27 44 0.097958887 ubox
28 32 0.025698841 ubox
28 38 0.006555207 ubox
28 41 0.358064605 ubox
28 43 0.098189571 ubox
29 40 0.335153319 ubox
29 45 0.012799317 ubox
30 39 0.313966920 ubox
30 44 0.017902266 ubox
30 45 0.004298081 ubox
30 46 0.174218949 ubox
30 47 0.053774254 ubox
31 40 0.280114105 ubox
31 45 0.203506744 ubox
31 46 0.038753006 ubox
32 39 0.312127499 ubox
32 42 0.021475094 ubox
32 44 0.209846359 ubox
32 45 0.006339460 ubox
33 38 0.318031587 ubox
33 41 0.021466508 ubox
33 43 0.209729160 ubox
33 83 0.004081897 ubox
34 82 0.004108566 ubox
34 83 0.013529978 ubox
35 41 0.197406492 ubox
35 82 0.013737948 ubox
36 40 0.160153511 ubox
36 45 0.011148096 ubox
36 46 0.046619766 ubox
37 44 0.011850210 ubox
37 45 0.056183843 ubox
37 80 0.015193626 ubox
38 44 0.057339977 ubox
38 79 0.015214083 ubox
39 43 0.056947532 ubox
39 78 0.015077223 ubox
39 82 0.010612893 ubox
40 81 0.010858146 ubox
41 76 0.009629576 ubox
41 77 0.009291107 ubox
41 79 0.008873853 ubox
41 80 0.011281104 ubox
42 75 0.008524707 ubox
42 78 0.009160450 ubox
43 76 0.011431487 ubox
43 77 0.008945090 ubox
43 79 0.011766672 ubox
44 75 0.011168731 ubox
44 78 0.011756690 ubox
45 74 0.009588239 ubox
46 83 0.003405511 ubox
47 75 0.005957690 ubox
47 83 0.054243598 ubox
48 74 0.005878715 ubox
48 75 0.007286592 ubox
48 82 0.039374074 ubox
48 83 0.981828241 ubox
49 74 0.007503863 ubox
49 75 0.020788137 ubox
49 82 0.998690403 ubox
49 83 0.003599039 ubox
50 74 0.023172099 ubox
50 81 0.999336738 ubox
51 73 0.027506723 ubox
51 80 0.999596872 ubox
52 72 0.027520867 ubox
52 79 0.999380486 ubox
53 71 0.027513750 ubox
53 78 0.958502716 ubox
54 70 0.027531470 ubox
55 69 0.027526028 ubox
56 68 0.027527985 ubox
56 73 0.009345870 ubox
56 77 0.996002193 ubox
57 67 0.027457432 ubox
57 72 0.009348695 ubox
57 76 0.999553700 ubox
58 66 0.027438923 ubox
58 71 0.009338415 ubox
58 75 0.998807733 ubox
60 70 0.009036966 ubox
60 74 0.995747944 ubox
61 69 0.009031117 ubox
61 73 0.999544159 ubox
62 68 0.008949180 ubox
62 72 0.999543145 ubox
63 70 0.151323700 ubox
63 71 0.987415402 ubox
64 69 0.182265693 ubox
76 83 0.010374851 ubox
77 82 0.010573170 ubox
3 44 0.9500000 lbox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
6 41 0.9500000 lbox
13 40 0.9500000 lbox
14 39 0.9500000 lbox
15 38 0.9500000 lbox
16 37 0.9500000 lbox
17 36 0.9500000 lbox
20 32 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
48 83 0.9500000 lbox
49 82 0.9500000 lbox
50 81 0.9500000 lbox
51 80 0.9500000 lbox
52 79 0.9500000 lbox
53 78 0.9500000 lbox
56 77 0.9500000 lbox
57 76 0.9500000 lbox
58 75 0.9500000 lbox
60 74 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
63 71 0.9500000 lbox
showpage
end
%%EOF
