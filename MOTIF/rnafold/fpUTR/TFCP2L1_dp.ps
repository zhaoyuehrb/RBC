%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:07:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TFCP2L1)
} def

/sequence { (\
GGGUUCGGAGCGCGAAGCCGCCGCUGGGUCCUCGGCGCGCCCCGCGUCUGCGCUUGCUGCCGCGCCCCGGUCGGCGCGCUGGGAGUUCCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.971334854 ubox
1 22 0.026262130 ubox
1 61 0.006079723 ubox
1 93 0.015305712 ubox
2 18 0.971883137 ubox
2 19 0.137268677 ubox
2 21 0.020661252 ubox
2 22 0.030378928 ubox
2 54 0.003275706 ubox
2 60 0.005844108 ubox
2 61 0.033605184 ubox
2 92 0.012867305 ubox
2 93 0.179345334 ubox
3 11 0.004503518 ubox
3 18 0.138346229 ubox
3 21 0.030414507 ubox
3 53 0.003363610 ubox
3 60 0.033677528 ubox
3 92 0.181601500 ubox
4 10 0.004463099 ubox
4 16 0.968309918 ubox
4 17 0.112929736 ubox
4 20 0.026851298 ubox
4 52 0.003314030 ubox
4 59 0.033497338 ubox
4 91 0.181582544 ubox
5 9 0.003405464 ubox
5 15 0.978679346 ubox
5 16 0.079441655 ubox
5 90 0.177663349 ubox
6 12 0.004029077 ubox
6 14 0.982315664 ubox
6 20 0.012318688 ubox
6 50 0.003368248 ubox
6 56 0.005555474 ubox
7 11 0.004909492 ubox
7 13 0.980380172 ubox
7 19 0.014226759 ubox
7 22 0.007258410 ubox
7 49 0.003392494 ubox
7 55 0.004144394 ubox
7 89 0.182455164 ubox
8 18 0.013130057 ubox
8 21 0.007164611 ubox
8 48 0.003395496 ubox
8 55 0.033620913 ubox
8 88 0.182516805 ubox
9 25 0.003374194 ubox
9 54 0.034094427 ubox
9 87 0.182387325 ubox
10 18 0.010965289 ubox
10 21 0.005923387 ubox
10 24 0.003831715 ubox
10 53 0.034189880 ubox
10 86 0.182356296 ubox
11 17 0.012060002 ubox
11 20 0.006005236 ubox
11 23 0.003843638 ubox
11 46 0.003672109 ubox
11 52 0.034189695 ubox
11 85 0.182370238 ubox
12 18 0.003503596 ubox
12 19 0.005499739 ubox
12 21 0.011121497 ubox
12 24 0.003406389 ubox
12 45 0.003700288 ubox
12 51 0.034189015 ubox
12 79 0.003675085 ubox
13 17 0.004093658 ubox
13 20 0.011588998 ubox
13 23 0.003410780 ubox
13 44 0.003701072 ubox
13 50 0.034175673 ubox
13 78 0.003677046 ubox
13 81 0.005476272 ubox
14 19 0.011452552 ubox
14 22 0.003393996 ubox
14 43 0.003695736 ubox
14 48 0.028265044 ubox
14 49 0.017304974 ubox
14 77 0.003620257 ubox
15 47 0.027159068 ubox
16 25 0.003252285 ubox
16 80 0.180919302 ubox
17 24 0.003306931 ubox
17 40 0.003667764 ubox
17 45 0.033868447 ubox
17 75 0.004075598 ubox
17 77 0.003217103 ubox
17 79 0.182269300 ubox
18 23 0.003298223 ubox
18 39 0.003313207 ubox
18 44 0.033881970 ubox
18 74 0.004193208 ubox
18 78 0.182254707 ubox
19 39 0.008019452 ubox
19 73 0.004193505 ubox
19 76 0.182319031 ubox
20 29 0.004804710 ubox
20 38 0.008193749 ubox
20 40 0.033018158 ubox
20 72 0.004101705 ubox
20 75 0.187988152 ubox
20 92 0.010386214 ubox
21 28 0.005473208 ubox
21 37 0.005794142 ubox
21 39 0.033035714 ubox
21 70 0.004067759 ubox
21 74 0.188002618 ubox
21 91 0.009311790 ubox
22 27 0.005810914 ubox
22 37 0.033571136 ubox
22 69 0.004068077 ubox
22 73 0.187992413 ubox
23 36 0.034087402 ubox
23 68 0.003978286 ubox
23 71 0.039359998 ubox
23 72 0.183752985 ubox
23 92 0.979461548 ubox
24 35 0.034088188 ubox
24 70 0.187884870 ubox
24 91 0.981430585 ubox
25 34 0.034056797 ubox
25 69 0.187634440 ubox
25 90 0.981251681 ubox
26 33 0.033984602 ubox
26 67 0.040201946 ubox
26 68 0.183683333 ubox
26 87 0.008350810 ubox
26 88 0.014481796 ubox
26 89 0.981241264 ubox
27 31 0.004388581 ubox
27 32 0.026551167 ubox
27 66 0.056009914 ubox
27 67 0.179503637 ubox
27 86 0.041533768 ubox
27 87 0.019309710 ubox
27 88 0.979673451 ubox
27 89 0.014186908 ubox
28 65 0.068224815 ubox
28 66 0.174427505 ubox
28 86 0.116948066 ubox
28 87 0.862406222 ubox
28 88 0.019625572 ubox
29 64 0.078036115 ubox
29 83 0.009973974 ubox
29 84 0.861807035 ubox
29 85 0.058372902 ubox
30 82 0.010252761 ubox
30 83 0.883611200 ubox
31 81 0.009904956 ubox
31 82 0.880236928 ubox
31 83 0.421779374 ubox
31 85 0.042295997 ubox
32 81 0.091026150 ubox
32 82 0.431219163 ubox
32 83 0.006322241 ubox
32 84 0.040737525 ubox
33 59 0.003459882 ubox
33 62 0.161235222 ubox
33 81 0.975739094 ubox
33 82 0.006339463 ubox
33 83 0.037391375 ubox
34 48 0.093092495 ubox
34 49 0.006299247 ubox
34 58 0.003497451 ubox
34 61 0.162096557 ubox
34 66 0.011403049 ubox
34 80 0.979954011 ubox
35 47 0.093650427 ubox
35 48 0.006543824 ubox
35 57 0.003508861 ubox
35 60 0.162101585 ubox
35 65 0.016050677 ubox
35 79 0.981535677 ubox
36 46 0.093942331 ubox
36 56 0.003502170 ubox
36 59 0.162068902 ubox
36 64 0.016054287 ubox
36 78 0.981530029 ubox
37 45 0.093972464 ubox
37 47 0.005749680 ubox
37 53 0.012952243 ubox
37 57 0.088641698 ubox
37 58 0.132263529 ubox
37 63 0.016050796 ubox
37 77 0.981529452 ubox
38 44 0.093965224 ubox
38 46 0.006228771 ubox
38 52 0.013075207 ubox
38 56 0.090658885 ubox
38 62 0.016047572 ubox
38 76 0.981529392 ubox
39 43 0.087906590 ubox
39 45 0.006287772 ubox
39 51 0.013099136 ubox
39 53 0.007468799 ubox
39 55 0.080138007 ubox
39 57 0.132345311 ubox
39 60 0.009336773 ubox
39 61 0.012772676 ubox
39 75 0.981511265 ubox
40 44 0.006243453 ubox
40 50 0.013064004 ubox
40 52 0.006964226 ubox
40 56 0.132165736 ubox
40 59 0.013078869 ubox
40 74 0.980261063 ubox
41 70 0.023407864 ubox
41 73 0.974977412 ubox
41 74 0.046087358 ubox
42 69 0.032994049 ubox
42 70 0.741171010 ubox
42 73 0.064444285 ubox
42 74 0.018924234 ubox
43 52 0.140643595 ubox
43 56 0.006064266 ubox
43 64 0.048354142 ubox
43 69 0.744762731 ubox
43 73 0.028261938 ubox
44 51 0.142256760 ubox
44 53 0.091670680 ubox
44 57 0.019022363 ubox
44 60 0.003860077 ubox
44 63 0.056390262 ubox
44 65 0.186656844 ubox
44 68 0.716186180 ubox
44 71 0.326646425 ubox
44 72 0.050084576 ubox
45 50 0.142069550 ubox
45 52 0.091853190 ubox
45 56 0.019053826 ubox
45 59 0.003906552 ubox
45 62 0.057767424 ubox
45 64 0.203797292 ubox
45 69 0.530788361 ubox
45 70 0.332626673 ubox
45 73 0.018294820 ubox
46 51 0.089482618 ubox
46 53 0.004055976 ubox
46 55 0.018506475 ubox
46 58 0.003556607 ubox
46 60 0.010347368 ubox
46 61 0.056619544 ubox
46 63 0.203194900 ubox
46 65 0.174300751 ubox
46 68 0.528917719 ubox
46 71 0.009897277 ubox
46 72 0.042168542 ubox
47 52 0.003858541 ubox
47 59 0.014146370 ubox
47 62 0.195382687 ubox
47 64 0.162782982 ubox
47 70 0.025664442 ubox
48 69 0.031102154 ubox
48 70 0.042604083 ubox
49 59 0.009713946 ubox
49 62 0.112205495 ubox
49 64 0.316929561 ubox
49 69 0.042163610 ubox
50 57 0.106700377 ubox
50 60 0.143912460 ubox
50 61 0.147482574 ubox
50 63 0.370256302 ubox
50 65 0.878775455 ubox
50 68 0.014106407 ubox
50 79 0.003281092 ubox
51 56 0.106611966 ubox
51 59 0.144296914 ubox
51 62 0.370455665 ubox
51 64 0.880149945 ubox
51 78 0.003287498 ubox
52 58 0.116950941 ubox
52 60 0.292487436 ubox
52 61 0.276939864 ubox
52 63 0.880048628 ubox
52 65 0.008369354 ubox
52 77 0.003288236 ubox
53 59 0.381928630 ubox
53 62 0.879789324 ubox
53 64 0.008306044 ubox
53 76 0.003246419 ubox
55 62 0.007491132 ubox
55 64 0.012430566 ubox
56 61 0.048135526 ubox
56 63 0.019229294 ubox
56 65 0.007465712 ubox
56 71 0.007984102 ubox
56 72 0.010120380 ubox
56 75 0.004711255 ubox
57 62 0.019416930 ubox
57 64 0.007478888 ubox
57 70 0.008759258 ubox
57 74 0.004776400 ubox
58 69 0.008748834 ubox
58 73 0.004920403 ubox
59 65 0.003965572 ubox
59 68 0.008616578 ubox
59 71 0.044034187 ubox
59 72 0.014662198 ubox
59 75 0.003383822 ubox
60 64 0.003964539 ubox
60 70 0.048558118 ubox
60 74 0.003395905 ubox
61 69 0.048587071 ubox
61 73 0.003423077 ubox
62 68 0.047511871 ubox
62 72 0.003493182 ubox
62 77 0.034312435 ubox
63 70 0.004490097 ubox
63 76 0.034347883 ubox
64 71 0.004723252 ubox
64 75 0.034353473 ubox
65 70 0.006508987 ubox
65 74 0.034332484 ubox
66 73 0.034256177 ubox
78 92 0.057297147 ubox
79 91 0.057417447 ubox
80 90 0.057405639 ubox
81 89 0.057378645 ubox
82 88 0.057288843 ubox
83 87 0.037109926 ubox
1 19 0.9500000 lbox
2 18 0.9500000 lbox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
7 13 0.9500000 lbox
23 92 0.9500000 lbox
24 91 0.9500000 lbox
25 90 0.9500000 lbox
26 89 0.9500000 lbox
27 88 0.9500000 lbox
28 87 0.9500000 lbox
29 84 0.9500000 lbox
30 83 0.9500000 lbox
31 82 0.9500000 lbox
33 81 0.9500000 lbox
34 80 0.9500000 lbox
35 79 0.9500000 lbox
36 78 0.9500000 lbox
37 77 0.9500000 lbox
38 76 0.9500000 lbox
39 75 0.9500000 lbox
40 74 0.9500000 lbox
41 73 0.9500000 lbox
42 70 0.9500000 lbox
43 69 0.9500000 lbox
44 68 0.9500000 lbox
50 65 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
53 62 0.9500000 lbox
showpage
end
%%EOF
