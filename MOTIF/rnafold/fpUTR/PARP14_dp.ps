%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PARP14)
} def

/sequence { (\
AAAGUUAGCGGCCCGGAGUUGGCGCGGCCCCUGCAGUCCGGCGGAGAGCGGAGCUGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 32 0.020157075 ubox
3 55 0.039137085 ubox
4 23 0.091954061 ubox
4 28 0.061052738 ubox
4 31 0.020721177 ubox
4 34 0.036314155 ubox
4 54 0.040350448 ubox
5 22 0.091997288 ubox
5 27 0.060642000 ubox
5 33 0.028896285 ubox
5 53 0.040056623 ubox
5 57 0.358601110 ubox
5 58 0.017161648 ubox
5 59 0.009807874 ubox
6 21 0.091930130 ubox
6 26 0.042883209 ubox
6 33 0.247305724 ubox
6 52 0.036240207 ubox
6 56 0.387397171 ubox
6 57 0.017027029 ubox
6 58 0.013977151 ubox
7 20 0.092009491 ubox
7 32 0.275775843 ubox
7 55 0.391644806 ubox
8 19 0.092151510 ubox
8 23 0.005199795 ubox
8 25 0.071902066 ubox
8 28 0.459411617 ubox
8 31 0.278513831 ubox
8 34 0.010800373 ubox
8 49 0.008580811 ubox
8 54 0.392251975 ubox
9 18 0.092190866 ubox
9 21 0.004482919 ubox
9 22 0.004445386 ubox
9 24 0.072024413 ubox
9 26 0.029716754 ubox
9 27 0.460128057 ubox
9 33 0.011807238 ubox
9 48 0.008574854 ubox
9 53 0.391773424 ubox
9 56 0.110261323 ubox
10 20 0.005388177 ubox
10 23 0.054452568 ubox
10 25 0.032398184 ubox
10 29 0.868932052 ubox
10 30 0.039359352 ubox
10 55 0.111285825 ubox
11 19 0.006551777 ubox
11 23 0.058121731 ubox
11 25 0.460269363 ubox
11 28 0.870902857 ubox
11 29 0.032278734 ubox
11 49 0.006547754 ubox
11 54 0.111485387 ubox
12 18 0.006568177 ubox
12 22 0.073222266 ubox
12 24 0.460433992 ubox
12 27 0.870143629 ubox
12 48 0.006571192 ubox
12 51 0.006170991 ubox
12 53 0.111475934 ubox
13 21 0.071704435 ubox
13 22 0.461862799 ubox
13 26 0.868847230 ubox
13 27 0.048901650 ubox
13 41 0.003710890 ubox
13 44 0.003654597 ubox
13 50 0.005309887 ubox
13 51 0.114338541 ubox
14 21 0.462191202 ubox
14 24 0.866005307 ubox
14 26 0.065196022 ubox
14 40 0.004478579 ubox
14 43 0.003660621 ubox
14 50 0.114406823 ubox
15 20 0.352314822 ubox
15 23 0.865010217 ubox
15 25 0.077933536 ubox
15 30 0.004169375 ubox
15 39 0.004633016 ubox
15 49 0.114246527 ubox
16 29 0.004207365 ubox
16 38 0.004628849 ubox
17 37 0.004485965 ubox
18 25 0.020338586 ubox
18 28 0.005143511 ubox
18 42 0.060644006 ubox
19 24 0.019268736 ubox
19 27 0.005140905 ubox
19 41 0.060653182 ubox
19 44 0.018050793 ubox
19 45 0.094009740 ubox
20 26 0.005078535 ubox
20 40 0.060468194 ubox
20 43 0.018897397 ubox
20 44 0.094048710 ubox
21 25 0.005001632 ubox
21 29 0.006607455 ubox
21 38 0.006303960 ubox
21 39 0.060435477 ubox
21 42 0.019342487 ubox
22 28 0.006680312 ubox
22 37 0.008368755 ubox
22 38 0.060178049 ubox
22 42 0.095124647 ubox
23 27 0.006640689 ubox
23 36 0.049059629 ubox
23 40 0.020953450 ubox
23 41 0.094735681 ubox
23 43 0.004121137 ubox
24 34 0.059468565 ubox
24 37 0.016854156 ubox
24 39 0.022366319 ubox
24 42 0.004129070 ubox
25 33 0.059629108 ubox
25 36 0.017044034 ubox
25 40 0.084401263 ubox
25 41 0.003238502 ubox
25 56 0.087472163 ubox
26 32 0.059178740 ubox
26 38 0.046493708 ubox
26 39 0.084379498 ubox
26 55 0.089659336 ubox
27 31 0.057912460 ubox
27 34 0.019660261 ubox
27 37 0.047151861 ubox
27 38 0.083529109 ubox
27 54 0.090011632 ubox
28 33 0.020597836 ubox
28 36 0.085190181 ubox
28 53 0.089935448 ubox
29 51 0.020624111 ubox
29 58 0.003637918 ubox
29 59 0.049744574 ubox
30 44 0.004445670 ubox
30 50 0.020285699 ubox
30 51 0.126271273 ubox
30 58 0.047579310 ubox
30 59 0.839209455 ubox
31 43 0.004393370 ubox
31 44 0.016684481 ubox
31 50 0.124727451 ubox
31 51 0.380846600 ubox
31 58 0.853286119 ubox
31 59 0.087401054 ubox
32 43 0.016770454 ubox
32 50 0.382387724 ubox
32 56 0.003527103 ubox
32 57 0.850360827 ubox
32 58 0.082337842 ubox
33 42 0.017412069 ubox
33 49 0.403608206 ubox
33 54 0.028410726 ubox
34 41 0.017395300 ubox
34 48 0.403571598 ubox
34 53 0.028449169 ubox
34 56 0.900469663 ubox
35 55 0.902952872 ubox
36 54 0.901194910 ubox
37 45 0.403387364 ubox
37 52 0.769800323 ubox
37 53 0.475894976 ubox
37 59 0.003998364 ubox
38 43 0.003645803 ubox
38 44 0.403589597 ubox
38 46 0.003263152 ubox
38 51 0.903596710 ubox
38 58 0.006478260 ubox
39 43 0.400655147 ubox
39 50 0.902956668 ubox
39 56 0.010086580 ubox
40 49 0.789247510 ubox
40 55 0.010206452 ubox
41 49 0.446806760 ubox
41 54 0.010225789 ubox
42 48 0.625595119 ubox
42 50 0.012962409 ubox
42 53 0.010206572 ubox
43 49 0.014354462 ubox
10 29 0.9500000 lbox
11 28 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 24 0.9500000 lbox
15 23 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
34 56 0.9500000 lbox
35 55 0.9500000 lbox
36 54 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
showpage
end
%%EOF
