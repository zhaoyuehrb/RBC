%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (IL13RA1)
} def

/sequence { (\
UGCCAAGGCUCCAGCCCGGCCGGGCUCCGAGGCGAGAGGCUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.345457130 ubox
1 42 0.033161398 ubox
2 9 0.079763253 ubox
2 20 0.250354739 ubox
2 21 0.005322913 ubox
2 25 0.025881814 ubox
2 33 0.453486019 ubox
2 40 0.597565563 ubox
2 41 0.007942362 ubox
2 43 0.339446208 ubox
3 8 0.080092914 ubox
3 19 0.251229778 ubox
3 24 0.025998406 ubox
3 32 0.453702903 ubox
3 39 0.598626166 ubox
3 42 0.334718878 ubox
4 18 0.250875564 ubox
4 23 0.025966609 ubox
4 31 0.453329468 ubox
4 38 0.597616132 ubox
4 42 0.186714903 ubox
5 41 0.142231795 ubox
6 41 0.554028644 ubox
7 16 0.256643898 ubox
7 17 0.012541712 ubox
7 21 0.026801677 ubox
7 26 0.008335934 ubox
7 27 0.004853070 ubox
7 28 0.453191654 ubox
7 40 0.595824332 ubox
7 41 0.063166861 ubox
8 15 0.257137701 ubox
8 16 0.009885680 ubox
8 20 0.026842364 ubox
8 25 0.009597784 ubox
8 27 0.453018011 ubox
8 33 0.562796435 ubox
8 40 0.067133737 ubox
8 43 0.003305090 ubox
9 14 0.256421556 ubox
9 19 0.026762982 ubox
9 24 0.009975584 ubox
9 31 0.381312643 ubox
9 32 0.460178461 ubox
9 36 0.028702028 ubox
9 38 0.598209051 ubox
9 39 0.052629871 ubox
10 18 0.023678498 ubox
10 23 0.004452017 ubox
10 24 0.011043684 ubox
10 30 0.500879736 ubox
10 31 0.315912662 ubox
10 32 0.005467688 ubox
10 35 0.028778170 ubox
10 37 0.600142053 ubox
10 38 0.030843882 ubox
11 18 0.010593517 ubox
11 22 0.004255419 ubox
11 23 0.014914658 ubox
11 24 0.009411471 ubox
11 29 0.524401844 ubox
11 31 0.037012858 ubox
11 32 0.024245099 ubox
11 34 0.028208962 ubox
11 36 0.600014391 ubox
11 38 0.003267066 ubox
12 22 0.014942209 ubox
12 23 0.009384585 ubox
12 31 0.026156669 ubox
12 42 0.078045089 ubox
13 26 0.734167394 ubox
13 41 0.078727411 ubox
14 20 0.017903134 ubox
14 25 0.751439858 ubox
14 33 0.601206290 ubox
14 40 0.078815056 ubox
14 43 0.003385948 ubox
15 19 0.017780706 ubox
15 24 0.751483483 ubox
15 32 0.601231174 ubox
15 39 0.078805068 ubox
15 42 0.003284821 ubox
16 23 0.751464130 ubox
16 24 0.004985241 ubox
16 31 0.601104116 ubox
16 32 0.007303511 ubox
16 38 0.078678903 ubox
17 22 0.750378910 ubox
17 23 0.006888997 ubox
17 29 0.598507792 ubox
17 31 0.010229603 ubox
17 34 0.017212995 ubox
17 42 0.054543632 ubox
18 26 0.043007983 ubox
18 27 0.029093458 ubox
18 28 0.596921781 ubox
18 33 0.013216730 ubox
18 41 0.056088065 ubox
19 25 0.089004526 ubox
19 26 0.013181644 ubox
19 27 0.588905396 ubox
19 33 0.077782611 ubox
19 40 0.056303954 ubox
19 43 0.005098684 ubox
20 24 0.110243588 ubox
20 32 0.078574921 ubox
20 39 0.056308926 ubox
20 42 0.003903616 ubox
21 29 0.051194495 ubox
21 31 0.076549274 ubox
21 38 0.056272552 ubox
21 42 0.243539000 ubox
22 28 0.063142403 ubox
22 41 0.249949681 ubox
23 27 0.062274913 ubox
23 40 0.250775134 ubox
23 41 0.010321219 ubox
24 33 0.052030260 ubox
24 40 0.011022466 ubox
25 32 0.051999652 ubox
25 36 0.021980057 ubox
25 38 0.250861917 ubox
25 39 0.008650245 ubox
26 31 0.047800957 ubox
26 35 0.022528625 ubox
26 37 0.251015642 ubox
26 38 0.004752959 ubox
27 31 0.006212892 ubox
27 34 0.022582508 ubox
27 36 0.251031536 ubox
27 39 0.004034688 ubox
28 34 0.232032915 ubox
28 38 0.004085637 ubox
28 42 0.004454363 ubox
29 33 0.217207545 ubox
30 41 0.005380465 ubox
31 40 0.004818631 ubox
31 41 0.036079177 ubox
32 40 0.045413837 ubox
32 43 0.012958181 ubox
33 39 0.045591773 ubox
33 42 0.013326383 ubox
34 41 0.012923552 ubox
35 41 0.055972589 ubox
36 40 0.056225277 ubox
6 41 0.9500000 lbox
7 40 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
16 31 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
showpage
end
%%EOF
