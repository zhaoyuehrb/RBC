%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PMM2)
} def

/sequence { (\
GAACCCGGAAGUUCCGGGCCGAGUUCCUCGUGCCAACGUGUCUUGUAAGGUGCGGCUAGAAACUGGGGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 17 0.006696270 ubox
4 18 0.995311595 ubox
4 67 0.016155487 ubox
4 68 0.004713135 ubox
5 16 0.004773837 ubox
5 17 0.999803345 ubox
5 18 0.003227405 ubox
5 66 0.016186016 ubox
5 67 0.004005598 ubox
6 16 0.999825760 ubox
6 65 0.016175686 ubox
6 66 0.003293502 ubox
7 14 0.003291641 ubox
7 15 0.999835090 ubox
7 64 0.015895040 ubox
8 13 0.003622917 ubox
8 14 0.999495051 ubox
8 63 0.015800290 ubox
9 13 0.869568212 ubox
11 63 0.003259689 ubox
12 61 0.014519656 ubox
13 60 0.014949705 ubox
14 55 0.004149571 ubox
14 59 0.015006127 ubox
15 54 0.004177936 ubox
16 53 0.004145057 ubox
17 34 0.006924256 ubox
17 57 0.014526066 ubox
18 33 0.007049366 ubox
18 51 0.003987807 ubox
18 56 0.014661527 ubox
19 32 0.007227265 ubox
19 50 0.003994900 ubox
19 55 0.014749238 ubox
19 66 0.101639792 ubox
19 67 0.987579851 ubox
19 68 0.077131761 ubox
20 30 0.007696698 ubox
20 49 0.003923689 ubox
20 54 0.014709739 ubox
20 65 0.101915571 ubox
20 66 0.991063811 ubox
20 67 0.065029518 ubox
21 29 0.011338568 ubox
21 53 0.011769646 ubox
21 64 0.059480427 ubox
22 28 0.011350937 ubox
22 64 0.992920192 ubox
23 27 0.011108000 ubox
23 53 0.003195973 ubox
23 63 0.997126833 ubox
23 70 0.045766801 ubox
24 52 0.003688426 ubox
24 59 0.011461474 ubox
24 60 0.011926159 ubox
24 61 0.431530969 ubox
24 62 0.896823960 ubox
24 69 0.046147881 ubox
25 58 0.027851184 ubox
25 59 0.019411112 ubox
25 60 0.611448940 ubox
25 61 0.743827293 ubox
25 67 0.003460622 ubox
25 68 0.046087694 ubox
25 69 0.013657996 ubox
26 50 0.012090588 ubox
26 55 0.027568667 ubox
26 59 0.747366573 ubox
26 66 0.003948147 ubox
26 67 0.046155610 ubox
26 68 0.015130772 ubox
27 49 0.012096332 ubox
27 54 0.024887908 ubox
27 55 0.131760463 ubox
27 59 0.576303215 ubox
27 65 0.004127762 ubox
27 66 0.045887553 ubox
27 67 0.015122406 ubox
28 48 0.011793018 ubox
28 54 0.021938666 ubox
28 55 0.802115580 ubox
28 58 0.490445734 ubox
28 60 0.211390838 ubox
28 65 0.039327949 ubox
28 66 0.011638166 ubox
29 38 0.010487408 ubox
29 52 0.003191337 ubox
29 54 0.969670105 ubox
29 59 0.217855062 ubox
29 65 0.011154723 ubox
30 37 0.010622660 ubox
30 53 0.971371304 ubox
30 56 0.034226823 ubox
30 63 0.024618990 ubox
30 64 0.004776521 ubox
31 36 0.010522959 ubox
31 47 0.005917125 ubox
31 52 0.969426565 ubox
31 54 0.008923781 ubox
31 55 0.033040199 ubox
31 58 0.010877425 ubox
31 62 0.024586508 ubox
32 46 0.006518160 ubox
32 51 0.969700439 ubox
32 53 0.011465042 ubox
32 56 0.233189006 ubox
32 57 0.003709470 ubox
33 45 0.005398214 ubox
33 50 0.971679197 ubox
33 52 0.010984116 ubox
33 55 0.233236368 ubox
34 45 0.017661093 ubox
34 49 0.970155220 ubox
34 52 0.010036685 ubox
34 54 0.217908809 ubox
35 39 0.003537059 ubox
35 44 0.034632149 ubox
35 51 0.009742970 ubox
36 43 0.030644030 ubox
36 46 0.900687676 ubox
36 51 0.124567935 ubox
37 45 0.924528183 ubox
37 50 0.125141280 ubox
37 52 0.026924142 ubox
37 54 0.087976967 ubox
38 44 0.865532335 ubox
38 46 0.016021496 ubox
38 51 0.023659365 ubox
38 53 0.192538194 ubox
39 45 0.022557772 ubox
39 47 0.028768939 ubox
39 50 0.008009896 ubox
39 52 0.192049852 ubox
39 54 0.003621968 ubox
40 44 0.016386137 ubox
40 46 0.027942307 ubox
40 51 0.152880262 ubox
40 53 0.018260504 ubox
41 45 0.009746863 ubox
41 50 0.174743391 ubox
41 52 0.017654214 ubox
41 60 0.003607765 ubox
42 49 0.184281158 ubox
42 50 0.066225950 ubox
42 59 0.003801540 ubox
43 48 0.170557789 ubox
43 49 0.065119127 ubox
43 50 0.008681159 ubox
43 58 0.003560772 ubox
44 48 0.050008155 ubox
44 49 0.009342127 ubox
45 53 0.010625200 ubox
45 56 0.003528303 ubox
46 52 0.010572158 ubox
46 55 0.003520020 ubox
47 51 0.008810859 ubox
56 66 0.013891125 ubox
57 65 0.015241878 ubox
58 64 0.015839650 ubox
59 63 0.015558904 ubox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
19 67 0.9500000 lbox
20 66 0.9500000 lbox
22 64 0.9500000 lbox
23 63 0.9500000 lbox
24 62 0.9500000 lbox
25 61 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 54 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
33 50 0.9500000 lbox
34 49 0.9500000 lbox
36 46 0.9500000 lbox
37 45 0.9500000 lbox
38 44 0.9500000 lbox
showpage
end
%%EOF
