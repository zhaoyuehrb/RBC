%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAB3)
} def

/sequence { (\
GACUUCCUUCUGCCGCGGGCGGCUGGCCCAGCUGGAGGAAGCGGCGGCGGCGGCCACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.006653084 ubox
2 9 0.006328077 ubox
3 38 0.003171962 ubox
3 41 0.973032163 ubox
3 44 0.033859832 ubox
3 53 0.016975164 ubox
4 37 0.003187017 ubox
4 39 0.004157684 ubox
4 40 0.989166828 ubox
4 41 0.004428724 ubox
4 43 0.033322362 ubox
4 44 0.008035793 ubox
4 52 0.016764729 ubox
5 36 0.003199459 ubox
5 39 0.993231337 ubox
5 40 0.005271202 ubox
5 43 0.010052863 ubox
5 44 0.029334203 ubox
5 53 0.009571151 ubox
6 35 0.003204042 ubox
6 38 0.993960771 ubox
6 43 0.038598522 ubox
6 44 0.004135671 ubox
6 50 0.015961449 ubox
6 52 0.012545286 ubox
6 53 0.036731233 ubox
7 34 0.003196376 ubox
7 37 0.993928358 ubox
7 38 0.008662602 ubox
7 41 0.061059165 ubox
7 43 0.003795871 ubox
7 49 0.015955322 ubox
7 50 0.013408174 ubox
7 52 0.037082782 ubox
7 53 0.039441212 ubox
8 36 0.991425530 ubox
8 37 0.011310346 ubox
8 39 0.004273338 ubox
8 40 0.061699838 ubox
8 49 0.013211395 ubox
8 52 0.039173713 ubox
9 34 0.003522822 ubox
9 35 0.987253854 ubox
9 36 0.065959239 ubox
9 38 0.004679568 ubox
9 39 0.061870992 ubox
9 50 0.006889660 ubox
9 52 0.003883593 ubox
9 53 0.003230727 ubox
10 31 0.003317083 ubox
10 34 0.976410175 ubox
10 35 0.092614600 ubox
10 37 0.005642377 ubox
10 38 0.061876348 ubox
10 47 0.020908458 ubox
10 49 0.006982867 ubox
10 50 0.058035616 ubox
10 52 0.004008103 ubox
10 53 0.059977812 ubox
11 21 0.005937878 ubox
11 30 0.003448127 ubox
11 34 0.090326984 ubox
11 36 0.007205607 ubox
11 37 0.056589358 ubox
11 46 0.020980805 ubox
11 49 0.058231344 ubox
11 52 0.061009528 ubox
12 20 0.014596960 ubox
12 23 0.005469122 ubox
12 27 0.003950873 ubox
12 32 0.977429120 ubox
12 33 0.049261530 ubox
12 45 0.025797992 ubox
12 48 0.058864065 ubox
12 51 0.061846507 ubox
12 54 0.007693580 ubox
13 19 0.014622975 ubox
13 22 0.005488491 ubox
13 26 0.004104548 ubox
13 31 0.979203673 ubox
13 35 0.079850364 ubox
13 44 0.025807421 ubox
13 47 0.058866363 ubox
13 50 0.061850044 ubox
13 53 0.007831761 ubox
14 18 0.014516869 ubox
14 21 0.005495643 ubox
14 25 0.004121049 ubox
14 34 0.080704294 ubox
14 43 0.025806941 ubox
14 46 0.058865359 ubox
14 49 0.061848939 ubox
14 52 0.007831815 ubox
14 58 0.003651129 ubox
15 20 0.005354865 ubox
15 23 0.004011691 ubox
15 27 0.015883191 ubox
15 32 0.170552263 ubox
15 33 0.021317300 ubox
15 42 0.025740017 ubox
15 45 0.058840253 ubox
15 48 0.061845316 ubox
15 51 0.007823037 ubox
15 57 0.003894757 ubox
16 22 0.004102580 ubox
16 25 0.004512580 ubox
16 26 0.015528437 ubox
16 31 0.172069028 ubox
16 41 0.025727860 ubox
16 44 0.058729495 ubox
16 47 0.061745133 ubox
16 50 0.007789674 ubox
16 58 0.005225799 ubox
17 24 0.005640358 ubox
17 28 0.004840043 ubox
17 29 0.998421078 ubox
17 57 0.005627086 ubox
18 23 0.005905434 ubox
18 24 0.014782857 ubox
18 27 0.004191305 ubox
18 28 0.999068989 ubox
18 55 0.007384184 ubox
19 23 0.014502770 ubox
19 27 0.999075015 ubox
19 42 0.003231376 ubox
19 45 0.023778183 ubox
19 48 0.005373616 ubox
19 54 0.007415446 ubox
20 26 0.998933671 ubox
20 34 0.024979548 ubox
20 41 0.003207213 ubox
20 44 0.023781684 ubox
20 47 0.005374421 ubox
20 53 0.007436000 ubox
21 33 0.028065954 ubox
22 32 0.028917072 ubox
22 42 0.023788594 ubox
22 45 0.005375784 ubox
22 51 0.007456956 ubox
23 31 0.028923304 ubox
23 35 0.003478705 ubox
23 41 0.023798877 ubox
23 44 0.005377838 ubox
23 50 0.007479566 ubox
24 30 0.028890006 ubox
24 34 0.003595719 ubox
24 40 0.023645070 ubox
24 43 0.005313217 ubox
24 49 0.007092776 ubox
25 29 0.028430422 ubox
25 33 0.006631691 ubox
25 42 0.004975330 ubox
25 48 0.005427651 ubox
26 32 0.006836654 ubox
26 48 0.005174557 ubox
27 31 0.006787968 ubox
27 35 0.009384732 ubox
27 38 0.015578626 ubox
27 47 0.006825068 ubox
28 34 0.009334620 ubox
28 35 0.014184279 ubox
28 37 0.015424217 ubox
28 38 0.007421318 ubox
28 46 0.006744442 ubox
29 34 0.014376278 ubox
29 37 0.007472610 ubox
31 42 0.061105874 ubox
31 45 0.055145378 ubox
32 41 0.061183250 ubox
32 44 0.055215939 ubox
32 47 0.003165462 ubox
33 40 0.060814401 ubox
33 43 0.055181176 ubox
33 46 0.003168906 ubox
34 42 0.055161369 ubox
34 45 0.003168492 ubox
41 48 0.006404720 ubox
41 51 0.003888160 ubox
41 54 0.162055518 ubox
42 47 0.006952723 ubox
42 49 0.017191515 ubox
42 50 0.004053334 ubox
42 52 0.019460148 ubox
42 53 0.185041422 ubox
42 58 0.579368826 ubox
43 48 0.017443143 ubox
43 51 0.015706079 ubox
43 55 0.473977394 ubox
43 57 0.625270666 ubox
44 51 0.190752001 ubox
44 54 0.474500228 ubox
45 50 0.191166981 ubox
45 52 0.159461848 ubox
45 53 0.447085698 ubox
45 58 0.024303805 ubox
46 51 0.224031343 ubox
46 55 0.852894328 ubox
46 57 0.013306587 ubox
47 54 0.854044979 ubox
48 53 0.853769400 ubox
48 58 0.005020298 ubox
49 55 0.010008828 ubox
49 57 0.005520611 ubox
50 54 0.009868427 ubox
51 58 0.016908973 ubox
52 57 0.021853936 ubox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
showpage
end
%%EOF
