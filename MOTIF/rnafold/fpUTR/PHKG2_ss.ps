%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUGGGCGGCCGGUUUCCAAUUGGAAGGGCUUCUGAGCCUCAGUCUUCGGGCGGCGCUGACCAUUGGCGGGCAGGAUGGAGGCGGAGCCUUGGGUUGUCGCCCGCCGCCGGGGGUUAAGGUGAGCGACUGCAGGCAAACCCGGCGACAGCGCAGCUCGCGUCGACCCUGGCUCCUCUGCCUGCCCCCUCAGGCCCCCGCCUCCUUCAGG\
) } def
/len { sequence length } bind def

/coor [
[81.24069977 248.79824829]
[73.39163971 235.59645081]
[73.21110535 220.23861694]
[80.74766541 206.85594177]
[93.97401428 199.04829407]
[93.75068665 184.04995728]
[93.52735901 169.05162048]
[85.60142517 156.44096375]
[93.13240814 142.52713013]
[92.90908051 127.52878571]
[92.68574524 112.53044891]
[85.54938507 110.22344208]
[80.93513489 124.49610138]
[66.66255951 119.88161469]
[71.27664948 105.60943604]
[64.14028168 103.30242920]
[55.17958450 115.33181000]
[46.21889114 127.36118317]
[37.25819397 139.39056396]
[35.88832474 155.73239136]
[20.93772697 162.47120667]
[7.78629160 152.67469788]
[9.96308899 136.42065430]
[25.22881699 130.42987061]
[34.18951416 118.40048981]
[43.15020752 106.37110901]
[52.11090469 94.34173584]
[42.02976608 83.23449707]
[29.19082451 90.99089050]
[16.35188484 98.74728394]
[3.51294446 106.50367737]
[-9.32599640 114.26006317]
[-16.76384926 128.87547302]
[-33.15216446 129.47149658]
[-41.63204193 115.43498993]
[-33.48011780 101.20550537]
[-17.08238792 101.42112732]
[-4.24344683 93.66473389]
[8.59549332 85.90834045]
[21.43443298 78.15194702]
[34.27337265 70.39556122]
[36.85367584 55.61915970]
[45.27348328 43.20518112]
[58.04788208 35.34294891]
[72.92398834 33.41903687]
[87.27826691 37.77275467]
[98.57919312 47.63627243]
[104.83374786 61.27007294]
[104.93888855 76.26970673]
[98.87534332 89.99084473]
[106.72709656 77.20999908]
[114.57884979 64.42915344]
[116.40447998 55.47902298]
[122.64385223 51.51770401]
[130.68502808 38.85517883]
[138.72619629 26.19265175]
[140.68489075 17.27069283]
[146.98254395 13.40270519]
[155.21134949 0.86130524]
[163.44015503 -11.68009472]
[171.66896057 -24.22149467]
[156.67562866 -23.77459335]
[146.86199951 -35.11888123]
[149.46234131 -49.89176941]
[162.55975342 -57.20323563]
[176.49932861 -51.66353989]
[181.00555420 -37.35797501]
[190.14436340 -49.25260925]
[192.89120483 -57.96424484]
[199.50883484 -61.25495911]
[208.82371521 -73.01220703]
[218.13859558 -84.76946259]
[227.45349121 -96.52671051]
[236.76837158 -108.28396606]
[246.08325195 -120.04121399]
[255.39813232 -131.79846191]
[258.27438354 -140.46824646]
[264.94027710 -143.66006470]
[274.42916870 -155.27732849]
[283.91806030 -166.89459229]
[293.40698242 -178.51185608]
[294.24353027 -183.66426086]
[296.72470093 -187.58816528]
[300.10714722 -189.86285400]
[303.58822632 -190.42358398]
[313.58639526 -201.60556030]
[323.58456421 -212.78753662]
[333.58273315 -223.96951294]
[343.58090210 -235.15148926]
[353.57907104 -246.33346558]
[353.63983154 -259.23147583]
[362.19754028 -268.33914185]
[374.26705933 -269.14743042]
[384.43060303 -280.17932129]
[394.59414673 -291.21118164]
[404.75769043 -302.24307251]
[414.92123413 -313.27493286]
[425.08477783 -324.30682373]
[428.74490356 -339.69885254]
[443.05899048 -343.81665039]
[453.22253418 -354.84854126]
[463.38607788 -365.88040161]
[466.55886841 -388.85775757]
[488.20114136 -394.83001709]
[497.51602173 -406.58728027]
[506.83093262 -418.34451294]
[515.88092041 -430.30685425]
[524.66149902 -442.46832275]
[533.44213867 -454.62976074]
[542.22271729 -466.79122925]
[551.00335693 -478.95269775]
[559.78393555 -491.11413574]
[568.56451416 -503.27560425]
[563.24786377 -512.45672607]
[561.29559326 -522.84613037]
[562.90509033 -533.25549316]
[567.86791992 -542.50268555]
[575.59625244 -549.54632568]
[585.19250488 -553.60266113]
[595.55346680 -554.23303223]
[605.49719238 -551.39099121]
[614.98608398 -563.00830078]
[613.59118652 -578.52252197]
[623.37976074 -590.16894531]
[638.17883301 -591.40313721]
[647.66772461 -603.02038574]
[649.76593018 -619.28479004]
[665.00250244 -625.34930420]
[677.70336914 -614.97528076]
[674.80297852 -598.83465576]
[659.28497314 -593.53149414]
[649.79608154 -581.91424561]
[651.54132080 -567.16674805]
[642.08374023 -555.25000000]
[626.60333252 -553.51940918]
[617.11444092 -541.90209961]
[623.35852051 -523.36499023]
[617.09216309 -504.68304443]
[600.69464111 -493.49774170]
[580.72601318 -494.49499512]
[571.94537354 -482.33352661]
[563.16479492 -470.17208862]
[554.38415527 -458.01062012]
[545.60357666 -445.84918213]
[536.82299805 -433.68771362]
[528.04235840 -421.52624512]
[528.24035645 -418.00585938]
[526.74304199 -414.21469116]
[523.44177246 -410.95053101]
[518.58819580 -409.02963257]
[509.27328491 -397.27239990]
[499.95840454 -385.51513672]
[502.51416016 -378.88748169]
[502.61520386 -371.71679688]
[500.20184326 -364.89138794]
[495.52886963 -359.27325439]
[489.13931274 -355.58901978]
[481.80178833 -354.33630371]
[474.41796875 -355.71685791]
[464.25439453 -344.68499756]
[454.09085083 -333.65310669]
[451.15771484 -319.05017090]
[436.11666870 -314.14328003]
[425.95312500 -303.11138916]
[415.78958130 -292.07952881]
[405.62603760 -281.04763794]
[395.46249390 -270.01577759]
[385.29891968 -258.98388672]
[382.38284302 -241.67887878]
[364.76104736 -236.33529663]
[354.76287842 -225.15332031]
[344.76470947 -213.97134399]
[334.76654053 -202.78936768]
[324.76837158 -191.60739136]
[314.77020264 -180.42541504]
[305.02423096 -169.02294922]
[295.53533936 -157.40568542]
[286.04644775 -145.78842163]
[276.55752563 -134.17115784]
[267.15539551 -122.48358154]
[257.84051514 -110.72633362]
[248.52561951 -98.96907806]
[239.21073914 -87.21183014]
[229.89585876 -75.45458221]
[220.58097839 -63.69732666]
[211.26608276 -51.94007492]
[202.03898621 -40.11380768]
[192.90019226 -28.21917343]
[184.21035767 -15.99268723]
[175.98155212 -3.45128727]
[167.75274658 9.09011269]
[159.52394104 21.63151360]
[151.38871765 34.23382568]
[143.34754944 46.89635086]
[135.30638123 59.55887604]
[127.35969543 72.28091431]
[119.50793457 85.06175232]
[111.65618134 97.84259796]
[107.68408966 112.30712128]
[107.90741730 127.30545807]
[108.13074493 142.30380249]
[116.07264709 155.98724365]
[108.52569580 168.82829285]
[108.74902344 183.82662964]
[108.97235107 198.82496643]
[122.42530060 206.23535156]
[130.35696411 219.38769531]
[130.63377380 234.74409485]
[123.18125916 248.17375183]
[110.00411987 256.06414795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[9 201]
[10 200]
[11 199]
[16 27]
[17 26]
[18 25]
[19 24]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[50 198]
[51 197]
[52 196]
[54 195]
[55 194]
[56 193]
[58 192]
[59 191]
[60 190]
[61 189]
[67 188]
[68 187]
[70 186]
[71 185]
[72 184]
[73 183]
[74 182]
[75 181]
[76 180]
[78 179]
[79 178]
[80 177]
[81 176]
[85 175]
[86 174]
[87 173]
[88 172]
[89 171]
[90 170]
[93 168]
[94 167]
[95 166]
[96 165]
[97 164]
[98 163]
[100 161]
[101 160]
[102 159]
[104 152]
[105 151]
[106 150]
[107 146]
[108 145]
[109 144]
[110 143]
[111 142]
[112 141]
[113 140]
[121 136]
[122 135]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
