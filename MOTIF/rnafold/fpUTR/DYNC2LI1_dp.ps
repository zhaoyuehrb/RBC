%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:46:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DYNC2LI1)
} def

/sequence { (\
AGAAGGCCUCACUCCCAGACUCCUUGCGGAGCUCGCCGCCUGAUUCUAGGCUGGUCACUACUCCGAGCCUGUGACGUUUGCGGCAGCCAGGCCGUCGACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 41 0.017177230 ubox
1 47 0.004662436 ubox
2 40 0.018130138 ubox
2 46 0.006037021 ubox
2 96 0.939585084 ubox
3 25 0.016458960 ubox
3 45 0.006005785 ubox
3 95 0.888741929 ubox
4 24 0.017809907 ubox
4 41 0.019855030 ubox
4 44 0.003544211 ubox
4 70 0.014803513 ubox
5 23 0.018302424 ubox
5 37 0.026006356 ubox
5 40 0.020623665 ubox
5 69 0.015266087 ubox
5 93 0.997624407 ubox
6 22 0.018293609 ubox
6 36 0.026028225 ubox
6 39 0.020625552 ubox
6 68 0.015267558 ubox
6 92 0.999126738 ubox
7 35 0.025997306 ubox
7 38 0.020594301 ubox
7 67 0.011456842 ubox
7 91 0.999127782 ubox
8 18 0.003364626 ubox
8 67 0.010080902 ubox
8 90 0.999028956 ubox
9 17 0.003608835 ubox
9 19 0.025147944 ubox
9 66 0.014243897 ubox
9 89 0.975783258 ubox
10 18 0.032480140 ubox
10 65 0.014234485 ubox
12 18 0.029039220 ubox
12 29 0.005354177 ubox
12 31 0.241933928 ubox
12 83 0.003886437 ubox
12 86 0.894911140 ubox
13 17 0.026583114 ubox
13 19 0.024704016 ubox
13 28 0.004352631 ubox
13 29 0.009150729 ubox
13 30 0.367559103 ubox
13 83 0.013007742 ubox
13 85 0.890206624 ubox
14 18 0.026939199 ubox
14 28 0.011402564 ubox
14 29 0.378218213 ubox
14 82 0.019665867 ubox
14 83 0.881744786 ubox
15 28 0.378193096 ubox
15 29 0.016998638 ubox
15 82 0.881818600 ubox
15 83 0.029048105 ubox
16 26 0.369633119 ubox
16 28 0.017302426 ubox
16 71 0.003425384 ubox
16 80 0.881991215 ubox
16 82 0.026731766 ubox
17 24 0.127590845 ubox
17 25 0.348850973 ubox
17 33 0.137663838 ubox
17 70 0.003558395 ubox
17 79 0.881652238 ubox
18 23 0.170255673 ubox
18 24 0.297535613 ubox
18 25 0.043379805 ubox
18 32 0.147181322 ubox
18 34 0.191152706 ubox
18 69 0.003553916 ubox
18 78 0.881649264 ubox
18 79 0.005708697 ubox
19 24 0.041541924 ubox
19 33 0.190817267 ubox
19 77 0.882329724 ubox
19 78 0.005128122 ubox
20 29 0.003477352 ubox
20 31 0.260549395 ubox
20 67 0.003477796 ubox
20 76 0.881644193 ubox
21 28 0.003236847 ubox
21 30 0.275742205 ubox
21 43 0.013133777 ubox
21 66 0.003486863 ubox
21 74 0.353839305 ubox
22 29 0.277289694 ubox
22 42 0.013992119 ubox
22 73 0.353916573 ubox
23 28 0.276823846 ubox
23 29 0.003352194 ubox
23 67 0.013910821 ubox
24 28 0.003260384 ubox
24 43 0.003758492 ubox
24 66 0.012920184 ubox
24 67 0.006535037 ubox
24 74 0.785279298 ubox
25 42 0.003714689 ubox
25 65 0.006103395 ubox
25 66 0.007584736 ubox
25 71 0.005912461 ubox
25 73 0.793041357 ubox
26 36 0.010695729 ubox
26 39 0.030871292 ubox
26 64 0.003992336 ubox
26 68 0.022154453 ubox
26 70 0.004589350 ubox
26 72 0.877751011 ubox
26 95 0.004097655 ubox
27 35 0.010765312 ubox
27 38 0.030965806 ubox
27 42 0.003786945 ubox
27 65 0.045647279 ubox
27 67 0.020215095 ubox
27 71 0.880675066 ubox
27 73 0.004884575 ubox
27 94 0.004590670 ubox
28 34 0.010732922 ubox
28 37 0.031027026 ubox
28 41 0.003829921 ubox
28 62 0.003370539 ubox
28 64 0.050443888 ubox
28 69 0.003649616 ubox
28 70 0.880032712 ubox
28 72 0.005021380 ubox
28 93 0.004598304 ubox
29 33 0.006953240 ubox
29 36 0.030941937 ubox
29 40 0.003836741 ubox
29 61 0.003511758 ubox
29 63 0.050512626 ubox
29 69 0.880451353 ubox
29 92 0.004589113 ubox
30 59 0.003228210 ubox
30 62 0.050494773 ubox
30 70 0.005371350 ubox
31 39 0.004631432 ubox
31 58 0.003374147 ubox
31 61 0.050300230 ubox
31 68 0.880710158 ubox
31 69 0.003934101 ubox
31 87 0.304805684 ubox
32 38 0.004638913 ubox
32 67 0.880810315 ubox
32 86 0.353499407 ubox
33 66 0.880664609 ubox
33 85 0.351902628 ubox
34 65 0.880525039 ubox
35 51 0.015609949 ubox
35 52 0.003617833 ubox
35 55 0.509385680 ubox
35 64 0.709894946 ubox
35 84 0.467693999 ubox
35 87 0.008372270 ubox
36 50 0.015662732 ubox
36 54 0.867852721 ubox
36 83 0.467971027 ubox
36 86 0.008346451 ubox
37 49 0.015649465 ubox
37 53 0.867875660 ubox
37 82 0.467966633 ubox
38 51 0.862948220 ubox
38 52 0.181717415 ubox
38 81 0.467962764 ubox
38 84 0.008417118 ubox
39 50 0.882263992 ubox
39 80 0.467574426 ubox
39 83 0.008422732 ubox
40 49 0.882258351 ubox
40 50 0.005836644 ubox
40 82 0.008410281 ubox
41 48 0.875623106 ubox
41 49 0.005854121 ubox
41 57 0.015138765 ubox
41 76 0.108567711 ubox
41 80 0.004086597 ubox
42 47 0.800572810 ubox
42 56 0.015694257 ubox
42 75 0.111642732 ubox
42 78 0.371620708 ubox
42 79 0.034915012 ubox
43 55 0.015611747 ubox
43 72 0.003478493 ubox
43 77 0.374609386 ubox
43 78 0.036858997 ubox
44 54 0.013007603 ubox
44 74 0.105243429 ubox
44 76 0.365772911 ubox
45 53 0.008821524 ubox
45 54 0.008622751 ubox
45 73 0.107638578 ubox
45 74 0.438109518 ubox
46 53 0.011952266 ubox
46 73 0.445908549 ubox
47 71 0.450207559 ubox
47 73 0.005700517 ubox
48 70 0.469302996 ubox
48 72 0.003868294 ubox
49 69 0.470125612 ubox
49 70 0.003733369 ubox
50 68 0.470140065 ubox
51 67 0.470113107 ubox
52 60 0.036250790 ubox
52 65 0.229229391 ubox
52 66 0.407921836 ubox
53 59 0.040205780 ubox
53 62 0.082419753 ubox
53 63 0.025437500 ubox
53 64 0.478981476 ubox
54 58 0.039759705 ubox
54 61 0.091042989 ubox
54 62 0.014374872 ubox
54 63 0.479748628 ubox
54 75 0.017565203 ubox
55 60 0.082935852 ubox
55 66 0.006697242 ubox
55 74 0.017744159 ubox
56 65 0.009725233 ubox
56 73 0.017910073 ubox
57 72 0.017904245 ubox
58 71 0.017887599 ubox
61 67 0.005625657 ubox
62 66 0.005108447 ubox
75 100 0.037599324 ubox
76 99 0.041080587 ubox
77 98 0.040986144 ubox
78 97 0.039693485 ubox
79 97 0.003852632 ubox
80 95 0.040562353 ubox
80 96 0.004622413 ubox
81 94 0.041168320 ubox
82 93 0.041171285 ubox
83 92 0.041171893 ubox
84 91 0.041128850 ubox
93 100 0.004029276 ubox
94 99 0.029649487 ubox
2 96 0.9500000 lbox
3 95 0.9500000 lbox
5 93 0.9500000 lbox
6 92 0.9500000 lbox
7 91 0.9500000 lbox
8 90 0.9500000 lbox
9 89 0.9500000 lbox
12 86 0.9500000 lbox
13 85 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
16 80 0.9500000 lbox
17 79 0.9500000 lbox
18 78 0.9500000 lbox
19 77 0.9500000 lbox
20 76 0.9500000 lbox
24 74 0.9500000 lbox
25 73 0.9500000 lbox
26 72 0.9500000 lbox
27 71 0.9500000 lbox
28 70 0.9500000 lbox
29 69 0.9500000 lbox
31 68 0.9500000 lbox
32 67 0.9500000 lbox
33 66 0.9500000 lbox
34 65 0.9500000 lbox
35 64 0.9500000 lbox
36 54 0.9500000 lbox
37 53 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
