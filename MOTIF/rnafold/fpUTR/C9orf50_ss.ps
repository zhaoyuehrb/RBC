%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUUCAGGUGAGGAAACAGAGGCUCUGGGAGCUCUCGCCUGAAGCCACUCGCUGUCCGCCGGGCCGGUGGCGUUCACCCCGCACCGCGCUGCCCCGCCCGGGGCACUAUGGCCUGGGGCUGGACUAUGCCCUCCCCACCUCAGCCGGCGCCCCCCACCCACGCGCGCUGAGGGUGCGGUGAGCUGAGUGCGGGGCCAAGC\
) } def
/len { sequence length } bind def

/coor [
[-103.44385529 263.39898682]
[-114.02447510 262.95013428]
[-124.30355835 260.11035156]
[-133.74415588 254.99337769]
[-141.84536743 247.83282471]
[-152.32814026 258.56182861]
[-162.81092834 269.29080200]
[-173.29370117 280.01980591]
[-183.77648926 290.74880981]
[-194.25926208 301.47778320]
[-204.74205017 312.20678711]
[-215.22482300 322.93579102]
[-225.70761108 333.66479492]
[-236.19038391 344.39376831]
[-221.23237610 343.27221680]
[-208.40934753 351.05490112]
[-202.49964905 364.84167480]
[-205.70545959 379.49511719]
[-216.83215332 389.55474854]
[-231.73353577 391.27203369]
[-244.85676575 384.00698853]
[-251.31166077 370.46688843]
[-248.69348145 355.69839478]
[-260.42095947 365.05075073]
[-272.14840698 374.40310669]
[-283.87588501 383.75543213]
[-295.60336304 393.10778809]
[-304.21707153 407.71054077]
[-320.63363647 403.47592163]
[-321.10906982 386.52862549]
[-304.95571899 381.38031006]
[-293.22824097 372.02798462]
[-281.50076294 362.67562866]
[-269.77328491 353.32327271]
[-258.04583740 343.97094727]
[-246.91938782 333.91098022]
[-236.43659973 323.18200684]
[-225.95382690 312.45300293]
[-215.47103882 301.72399902]
[-204.98826599 290.99502563]
[-194.50547791 280.26602173]
[-184.02270508 269.53701782]
[-173.53991699 258.80804443]
[-163.05714417 248.07904053]
[-152.57435608 237.35005188]
[-156.47532654 222.86618042]
[-170.92857361 218.85325623]
[-185.38182068 214.84033203]
[-199.83508301 210.82740784]
[-214.28833008 206.81448364]
[-228.74157715 202.80155945]
[-244.10867310 206.56489563]
[-254.30209351 195.70471191]
[-268.75534058 191.69178772]
[-283.20858765 187.67886353]
[-295.27102661 197.43986511]
[-310.76882935 198.21293640]
[-323.74279785 189.70080566]
[-329.20413208 175.17657471]
[-325.05288696 160.22509766]
[-312.88525391 150.59552002]
[-297.37997437 149.99061584]
[-284.49914551 158.64299011]
[-279.19567871 173.22561646]
[-264.74243164 177.23854065]
[-250.28916931 181.25146484]
[-235.95585632 177.20109558]
[-224.72865295 188.34829712]
[-210.27540588 192.36123657]
[-195.82215881 196.37416077]
[-181.36889648 200.38708496]
[-166.91564941 204.40000916]
[-152.46240234 208.41293335]
[-145.17628479 191.50134277]
[-132.19006348 178.80497742]
[-115.58715820 172.09220886]
[-97.93173218 172.19265747]
[-81.87307739 178.89924622]
[-69.74806976 191.02795410]
[-56.28430557 184.41531372]
[-42.82053757 177.80268860]
[-29.35676765 171.19004822]
[-15.89299870 164.57742310]
[-2.42923021 157.96478271]
[10.54176235 150.43130493]
[22.95709801 142.01348877]
[35.37243271 133.59568787]
[47.78776932 125.17787933]
[60.20310211 116.76007843]
[72.61843872 108.34226990]
[85.03377533 99.92446136]
[91.64640808 86.46069336]
[90.71845245 71.48942566]
[89.79049683 56.51815796]
[88.86253357 41.54689026]
[87.93457794 26.57562065]
[87.00662231 11.60435104]
[77.49813843 -1.75681281]
[84.56016541 -16.55747986]
[100.92790222 -17.57199287]
[109.76361847 -3.75670815]
[101.97789001 10.67639446]
[102.90585327 25.64766312]
[103.83380890 40.61893463]
[104.76176453 55.59020233]
[105.68972015 70.56147003]
[106.61767578 85.53273773]
[113.70632935 87.98242188]
[125.03794861 78.15417480]
[127.88364410 92.88179779]
[134.97230530 95.33148193]
[144.94584656 84.12753296]
[154.91938782 72.92359161]
[152.59556580 59.65264893]
[158.25854492 47.64257431]
[169.63717651 41.18447113]
[182.46463013 42.44231796]
[192.61035156 31.39405441]
[202.75608826 20.34579086]
[212.90182495 9.29752922]
[223.04756165 -1.75073385]
[219.83840942 -16.93233681]
[226.19641113 -31.08703423]
[239.67677307 -38.77205658]
[255.09602356 -37.03235626]
[266.52514648 -26.53688240]
[269.56939697 -11.32136059]
[263.05822754 2.76353216]
[249.49528503 10.30186653]
[234.09580994 8.39499855]
[223.95008850 19.44326210]
[213.80435181 30.49152374]
[203.65861511 41.53978729]
[193.51289368 52.58805084]
[194.94737244 69.34167480]
[183.59996033 82.20437622]
[166.12333679 82.89713287]
[156.14979553 94.10108185]
[146.17623901 105.30502319]
[151.29443359 119.40482330]
[166.13261414 121.60218811]
[180.97077942 123.79956055]
[195.80895996 125.99692535]
[210.64714050 128.19429016]
[225.48532104 130.39166260]
[240.32350159 132.58903503]
[246.61166382 130.51356506]
[252.16795349 131.74497986]
[255.58404541 135.09088135]
[270.34710693 137.74638367]
[285.11019897 140.40188599]
[299.87326050 143.05740356]
[309.22253418 130.93925476]
[323.13732910 124.56454468]
[338.42013550 125.39812469]
[351.55905151 133.24844360]
[359.53485107 146.31156921]
[360.51477051 161.58566284]
[354.27362061 175.56088257]
[342.24557495 185.02580261]
[327.19461060 187.80546570]
[312.57928467 183.26112366]
[301.75811768 172.43702698]
[297.21774292 157.82048035]
[282.45468140 155.16496277]
[267.69158936 152.50946045]
[252.92852783 149.85394287]
[238.12612915 147.42721558]
[223.28794861 145.22984314]
[208.44978333 143.03247070]
[193.61160278 140.83511353]
[178.77342224 138.63774109]
[163.93524170 136.44036865]
[149.09706116 134.24299622]
[93.45157623 112.33979797]
[81.03624725 120.75760651]
[68.62091064 129.17541504]
[56.20557404 137.59321594]
[43.79023743 146.01101685]
[31.37490463 154.42883301]
[18.95956802 162.84663391]
[33.91373062 164.01838684]
[45.92709351 173.00054932]
[51.28081131 187.01260376]
[48.31759644 201.71699524]
[37.95473862 212.56185913]
[23.40014648 216.19007874]
[9.15932846 211.47848511]
[-0.35934734 199.88560486]
[-2.20929074 185.00012207]
[4.18340397 171.42855835]
[-9.28036404 178.04118347]
[-22.74413300 184.65382385]
[-36.20790100 191.26644897]
[-49.67166901 197.87908936]
[-63.13543701 204.49172974]
[-61.10862350 214.28218079]
[-61.34067917 224.35157776]
[-63.85298157 234.18170166]
[-68.54869080 243.25917053]
[-75.21611023 251.10224915]
[-83.53802490 257.28637695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[23 35]
[24 34]
[25 33]
[26 32]
[27 31]
[46 73]
[47 72]
[48 71]
[49 70]
[50 69]
[51 68]
[53 66]
[54 65]
[55 64]
[79 196]
[80 195]
[81 194]
[82 193]
[83 192]
[84 191]
[85 181]
[86 180]
[87 179]
[88 178]
[89 177]
[90 176]
[91 175]
[92 107]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
[111 139]
[112 138]
[113 137]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[140 174]
[141 173]
[142 172]
[143 171]
[144 170]
[145 169]
[146 168]
[149 167]
[150 166]
[151 165]
[152 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
