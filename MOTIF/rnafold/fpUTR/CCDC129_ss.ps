%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCUUCAGGAACUUUCAGAUGGCUCAGGAGUGGAGCUUUUGUGGCAGUUCCUGACAGGAUAAGGACAAGAAGCAACACACAGAAGAGAAGGAAAAAGAAAGAAAACUGACCAAU\
) } def
/len { sequence length } bind def

/coor [
[194.28570557 129.46746826]
[179.92437744 125.13709259]
[165.56304932 120.80671692]
[150.99160767 117.24681091]
[136.25134277 114.46748352]
[121.51107788 111.68814850]
[106.77082062 108.90882111]
[91.99486542 106.32595062]
[77.18583679 103.93999481]
[62.37681198 101.55404663]
[47.56778717 99.16809082]
[32.75876236 96.78214264]
[17.94973755 94.39618683]
[3.14071226 92.01023865]
[-11.66831303 89.62428284]
[-26.47733879 87.23832703]
[-41.33253479 92.68201447]
[-52.66704559 83.01878357]
[-67.47606659 80.63282776]
[-82.28509521 78.24687958]
[-94.05208588 90.31169128]
[-110.52072906 93.00593567]
[-125.22455597 85.47065735]
[-132.50787354 70.82488251]
[-147.37516785 68.83399963]
[-162.24246216 66.84311676]
[-177.10974121 64.85223389]
[-191.97703552 62.86135101]
[-203.40698242 73.53330231]
[-219.02526855 74.30985260]
[-231.45742798 64.82432556]
[-234.83338928 49.55550003]
[-227.55911255 35.71285248]
[-213.06929016 29.83245659]
[-198.20556641 34.69085312]
[-189.98616028 47.99405670]
[-175.11886597 49.98493958]
[-160.25157166 51.97582245]
[-145.38427734 53.96670532]
[-130.51698303 55.95758820]
[-122.18659210 45.43435287]
[-109.63148499 40.39131927]
[-96.12107849 42.25792313]
[-85.23152161 50.64892578]
[-79.89913940 63.43785095]
[-65.09011841 65.82380676]
[-50.28109360 68.20975494]
[-36.48513794 62.59540939]
[-24.09138680 72.42930603]
[-9.28236103 74.81525421]
[5.52666473 77.20121002]
[20.33568954 79.58716583]
[35.14471436 81.97311401]
[49.95373917 84.35906982]
[64.76276398 86.74501801]
[79.57179260 89.13097382]
[94.38081360 91.51692200]
[102.31857300 89.57208252]
[109.55014801 94.16855621]
[124.29041290 96.94789124]
[139.03067017 99.72721863]
[153.77093506 102.50655365]
[158.08238220 100.79292297]
[162.27688599 100.64131927]
[165.85421753 101.80594635]
[168.45434570 103.89755249]
[169.89343262 106.44538116]
[184.25476074 110.77576447]
[198.61608887 115.10614014]
[204.68524170 101.36769104]
[212.39672852 88.47922516]
[221.63365173 76.63612366]
[232.25596619 66.01793671]
[244.10264587 56.78561783]
[256.99411011 49.07913589]
[270.73492432 43.01531601]
[285.11676025 38.68608856]
[299.92160034 36.15707779]
[314.92504883 35.46662903]
[329.89959717 36.62520218]
[344.61825562 39.61524200]
[358.85794067 44.39141083]
[372.40270996 50.88130951]
[385.04724121 58.98655319]
[396.59988403 68.58426666]
[406.88549805 79.52894592]
[415.74810791 91.65467834]
[423.05343628 104.77764130]
[428.69064331 118.69889832]
[432.57434082 133.20739746]
[434.64562988 148.08319092]
[434.87313843 163.10076904]
[433.25335693 178.03248596]
[429.81088257 192.65196228]
[424.59790039 206.73756409]
[417.69342041 220.07577515]
[409.20214844 232.46438599]
[399.25274658 243.71559143]
[387.99612427 253.65881348]
[375.60287476 262.14331055]
[362.26089478 269.04049683]
[348.17242432 274.24578857]
[333.55108643 277.68026733]
[318.61846924 279.29187012]
[303.60101318 279.05615234]
[288.72634888 276.97674561]
[274.21997070 273.08511353]
[260.30181885 267.44024658]
[247.18284607 260.12777710]
[235.06196594 251.25852966]
[224.12290955 240.96693420]
[214.53152466 229.40904236]
[206.43319702 216.76007080]
[199.95069885 203.21174622]
[195.18232727 188.96948242]
[192.20033264 174.24917603]
[191.04995728 159.27398682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 69]
[2 68]
[3 67]
[4 62]
[5 61]
[6 60]
[7 59]
[8 57]
[9 56]
[10 55]
[11 54]
[12 53]
[13 52]
[14 51]
[15 50]
[16 49]
[18 47]
[19 46]
[20 45]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
