%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUCGCGAGCGCUGUGGCGGCCCUGAAAGGAUAUAGGCCGUGGAGGGAAGGGGGCGGGCAGACGGCAUAGGAAGGCGCCGGAAGUGGUCCCGCAGAGGCGGGGUGGGAGUGGGGCUCCCGAGGCAGUGCAGUUGGCUGUAGCUGGGCGCCUCGGUUAGGUGCGCUGUCAGUCCUUUCCGAGUGCCUGGCCCAGUCUCUCCCGCCUCGGCCCAAC\
) } def
/len { sequence length } bind def

/coor [
[-61.74697876 678.26409912]
[-62.39825821 663.27819824]
[-71.54721832 658.64044189]
[-77.99781799 650.56176758]
[-80.53499603 640.45660400]
[-78.63645935 630.13018799]
[-72.57855988 621.45587158]
[-63.39831543 616.03558350]
[-63.39831543 601.03558350]
[-63.39831543 586.03558350]
[-63.39831543 571.03558350]
[-66.54028320 564.34979248]
[-63.28816223 555.81884766]
[-63.07101059 540.82043457]
[-69.80454254 537.51745605]
[-76.41068268 550.98443604]
[-89.87752533 544.37805176]
[-83.27161407 530.91156006]
[-90.00514984 527.60858154]
[-101.73262024 536.96093750]
[-113.46009064 546.31329346]
[-125.18756104 555.66564941]
[-136.91503906 565.01794434]
[-148.64250183 574.37030029]
[-144.77027893 589.09869385]
[-147.22982788 604.12768555]
[-155.59498596 616.85339355]
[-168.41647339 625.07104492]
[-183.47286987 627.35687256]
[-198.15556335 623.31481934]
[-209.92070007 613.64520264]
[-216.72988892 600.02331543]
[-217.40339661 584.80932617]
[-211.82455444 570.63903809]
[-200.95989990 559.96765137]
[-186.69181824 554.64392090]
[-171.49234009 555.59033203]
[-157.99485779 562.64282227]
[-146.26737976 553.29046631]
[-134.53991699 543.93817139]
[-122.81243896 534.58581543]
[-111.08496857 525.23345947]
[-99.35749054 515.88110352]
[-90.17590332 504.01947021]
[-84.06163025 490.32217407]
[-77.94735718 476.62490845]
[-71.83308411 462.92761230]
[-65.71881104 449.23031616]
[-59.60454178 435.53305054]
[-53.49026871 421.83575439]
[-59.03785706 408.06042480]
[-53.03224182 394.08230591]
[-38.54578781 388.35690308]
[-32.43151474 374.65960693]
[-26.31724358 360.96231079]
[-28.19470978 346.18652344]
[-15.50417423 336.73870850]
[-9.38990211 323.04144287]
[-3.27562952 309.34414673]
[2.83864307 295.64685059]
[8.95291519 281.94958496]
[15.06718826 268.25228882]
[9.51959801 254.47694397]
[15.52521610 240.49885559]
[30.01166916 234.77343750]
[36.12594223 221.07614136]
[42.24021530 207.37886047]
[35.99650574 196.11039734]
[37.40266418 183.10902405]
[46.16818619 173.14381409]
[59.26228714 169.99951172]
[65.57421112 156.39218140]
[71.88613892 142.78485107]
[78.19806671 129.17750549]
[67.89956665 124.58786774]
[58.69404984 116.41221619]
[51.79667664 104.97129059]
[48.30933762 90.98487854]
[49.09373093 75.52832794]
[39.48893738 64.00669861]
[29.88414001 52.48507309]
[20.27934265 40.96344376]
[4.70899343 35.81599426]
[1.64704585 19.70523643]
[14.24336910 9.20453835]
[29.53994560 15.11611748]
[31.80097008 31.35864830]
[41.40576553 42.88027573]
[51.01056290 54.40190125]
[60.61536026 65.92353058]
[73.73056030 58.64399719]
[69.03338623 44.39841843]
[64.33621979 30.15283585]
[59.63904572 15.90725517]
[54.94187546 1.66167355]
[42.35374451 -8.84884548]
[45.42825699 -24.95721054]
[61.00261688 -30.09251595]
[73.05525970 -18.97200203]
[69.18745422 -3.03549719]
[73.88462830 11.21008396]
[78.58180237 25.45566559]
[83.27896881 39.70124817]
[87.97614288 53.94682693]
[102.92927551 52.75364685]
[117.88108826 51.56058121]
[120.25977325 36.75038910]
[122.63845825 21.94019508]
[125.01714325 7.12999964]
[127.39582825 -7.68019485]
[129.77450562 -22.49038887]
[132.15319824 -37.30058289]
[128.69511414 -53.89811325]
[143.68672180 -61.81570435]
[155.44497681 -49.60178375]
[146.96339417 -34.92189789]
[144.58470154 -20.11170387]
[142.20602417 -5.30151033]
[139.82733154 9.50868416]
[137.44865417 24.31887817]
[135.06996155 39.12907410]
[132.69128418 53.93926620]
[132.07980347 66.40282440]
[128.69721985 77.56963348]
[142.16427612 70.96372223]
[155.63134766 64.35781097]
[169.09841919 57.75189590]
[182.56549072 51.14598465]
[196.03256226 44.54006958]
[209.49961853 37.93415833]
[222.96669006 31.32824707]
[236.43376160 24.72233391]
[245.41615295 11.69823551]
[260.25021362 13.03980255]
[273.71728516 6.43389082]
[287.18435669 -0.17202158]
[300.65142822 -6.77793407]
[314.11849976 -13.38384628]
[327.58557129 -19.98975754]
[341.05264282 -26.59567070]
[346.25009155 -41.27981186]
[360.00173950 -47.78730392]
[373.96878052 -42.74181366]
[387.43585205 -49.34772873]
[393.96447754 -64.00229645]
[409.52801514 -67.89536285]
[422.18743896 -58.04048538]
[422.23153687 -41.99749374]
[409.62646484 -32.07319260]
[394.04174805 -35.88065720]
[380.57470703 -29.27474594]
[376.01522827 -15.14156437]
[362.45181274 -8.25038624]
[347.65853882 -13.12860298]
[334.19146729 -6.52269030]
[320.72439575 0.08322196]
[307.25732422 6.68913412]
[293.79028320 13.29504681]
[280.32321167 19.90095901]
[266.85614014 26.50687027]
[258.83700562 39.05847168]
[243.03967285 38.18940353]
[229.57260132 44.79531479]
[216.10552979 51.40122604]
[202.63847351 58.00713730]
[189.17140198 64.61305237]
[175.70433044 71.21896362]
[162.23725891 77.82487488]
[148.77020264 84.43078613]
[135.30313110 91.03669739]
[133.05442810 115.29888916]
[116.01303864 132.71443176]
[91.80539703 135.48944092]
[85.49347687 149.09677124]
[79.18154907 162.70410156]
[72.86962128 176.31144714]
[79.18514252 192.62734985]
[71.88811493 208.15602112]
[55.93750000 213.49313354]
[49.82322693 227.19041443]
[43.70895386 240.88771057]
[49.11927795 255.49476624]
[42.72341537 269.29864502]
[28.76447487 274.36654663]
[22.65020180 288.06384277]
[16.53593063 301.76113892]
[10.42165756 315.45840454]
[4.30738497 329.15570068]
[-1.80688763 342.85299683]
[-0.36675373 358.60852051]
[-12.61995602 367.07659912]
[-18.73422813 380.77389526]
[-24.84850121 394.47116089]
[-19.43817711 409.07821655]
[-25.83404160 422.88211060]
[-39.79298019 427.95001221]
[-45.90725327 441.64730835]
[-52.02152634 455.34460449]
[-58.13579941 469.04187012]
[-64.25006866 482.73916626]
[-70.36434174 496.43646240]
[-76.47861481 510.13375854]
[-58.19075012 517.07641602]
[-48.07258224 541.03753662]
[-48.28973389 556.03601074]
[-48.39831543 571.03558350]
[-48.39831543 586.03558350]
[-48.39831543 601.03558350]
[-48.39831543 616.03558350]
[-33.45845032 629.47607422]
[-33.23059082 649.26519775]
[-47.41240311 662.62695312]
[-46.76112366 677.61279297]
[-37.50104141 691.14733887]
[-44.83523560 705.81500244]
[-61.21891785 706.52703857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[8 209]
[9 208]
[10 207]
[11 206]
[13 205]
[14 204]
[19 43]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[44 202]
[45 201]
[46 200]
[47 199]
[48 198]
[49 197]
[50 196]
[53 193]
[54 192]
[55 191]
[57 189]
[58 188]
[59 187]
[60 186]
[61 185]
[62 184]
[65 181]
[66 180]
[67 179]
[71 176]
[72 175]
[73 174]
[74 173]
[79 90]
[80 89]
[81 88]
[82 87]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[106 122]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[124 170]
[125 169]
[126 168]
[127 167]
[128 166]
[129 165]
[130 164]
[131 163]
[132 162]
[134 160]
[135 159]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[143 151]
[144 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
