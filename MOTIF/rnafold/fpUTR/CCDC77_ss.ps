%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUUCUUCGCGAUUGCACGGAUUCAGGGACGCUCAGUGGCGCCGCGCCGCUCCUUGGUUUGACUUUUGUUUUUCAGUUGCGUUCCCUGACUCGGAGUCUUAGUGUGUCGUUAUUUGGACAAGAGGCACAUUGACCCAAUUUGGAGACGUAUUUUGGAAGGAGGUGUGAAAAAGACAGC\
) } def
/len { sequence length } bind def

/coor [
[128.78619385 352.78048706]
[129.33552551 345.35516357]
[132.46740723 338.52511597]
[137.83210754 333.16708374]
[134.47616577 318.54733276]
[131.12022400 303.92755127]
[127.76427460 289.30776978]
[124.40833282 274.68801880]
[121.05239105 260.06823730]
[117.69644928 245.44847107]
[113.12312317 239.61688232]
[114.41146851 230.54588318]
[111.30976868 215.87007141]
[108.20807648 201.19425964]
[95.55216217 196.89685059]
[86.60571289 186.82168579]
[83.79019165 173.53442383]
[87.94724274 160.49017334]
[98.09101868 151.13522339]
[95.24450684 136.40779114]
[92.39799500 121.68035889]
[84.34034729 101.21279907]
[70.78572845 94.78844452]
[55.00151443 95.86970520]
[46.81444168 83.42699432]
[33.25982285 77.00263214]
[19.70520592 70.57827759]
[6.15058947 64.15392303]
[-7.40402746 57.72956467]
[-20.95864487 51.30520630]
[-34.51325989 44.88085175]
[-48.12311935 38.57436752]
[-61.78719711 32.38623428]
[-75.45127106 26.19809723]
[-88.04026031 38.03133392]
[-107.77432251 39.82950211]
[-126.65570831 27.83675194]
[-141.65513611 27.96692657]
[-156.65457153 28.09710312]
[-171.65400696 28.22727776]
[-186.65344238 28.35745239]
[-201.65287781 28.48762703]
[-216.65231323 28.61780167]
[-232.43838501 34.80137253]
[-242.75030518 21.34401512]
[-232.67349243 7.70971155]
[-216.78248596 13.61836624]
[-201.78305054 13.48819160]
[-186.78361511 13.35801697]
[-171.78417969 13.22784233]
[-156.78474426 13.09766674]
[-141.78530884 12.96749210]
[-126.78588104 12.83731747]
[-124.05159760 5.85350180]
[-118.58302307 -8.11412907]
[-115.84873199 -15.09794426]
[-126.77256775 -25.37753296]
[-137.69639587 -35.65711975]
[-148.62022400 -45.93671036]
[-161.96287537 -43.98136139]
[-173.81857300 -49.98778915]
[-179.95167542 -61.55848312]
[-178.31680298 -74.35536194]
[-189.06057739 -84.82299805]
[-199.80433655 -95.29062653]
[-215.82318115 -98.80185699]
[-220.53326416 -114.51004791]
[-209.08923340 -126.25595856]
[-193.26376343 -121.95640564]
[-189.33671570 -106.03440094]
[-178.59294128 -95.56676483]
[-167.84916687 -85.09913635]
[-151.07006836 -86.04374695]
[-138.54389954 -74.33987427]
[-138.34063721 -56.86053848]
[-127.41680908 -46.58095169]
[-116.49298096 -36.30136108]
[-105.56914520 -26.02177429]
[-82.47476196 -21.62582588]
[-69.18475342 -5.60348988]
[-69.26313782 12.53402138]
[-55.59906387 18.72215652]
[-41.93498611 24.91029167]
[-34.52474213 24.80528069]
[-28.08890533 31.32623482]
[-14.53428841 37.75059128]
[-0.97967106 44.17494583]
[12.57494640 50.59930420]
[26.12956238 57.02366257]
[39.68418121 63.44801712]
[53.23879623 69.87237549]
[68.05349731 68.33159637]
[77.21008301 81.23382568]
[90.76470184 87.65818024]
[105.66934204 85.96947479]
[117.44304657 76.67539978]
[122.25682068 68.87985992]
[129.50271606 67.32431793]
[141.43595886 58.23598862]
[153.36920166 49.14765549]
[156.28831482 43.16698456]
[161.07839966 40.04619217]
[165.87802124 39.95957184]
[178.11949158 31.29088020]
[190.36097717 22.62219048]
[202.60246277 13.95349979]
[214.84393311 5.28480911]
[227.08541870 -3.38388157]
[239.32688904 -12.05257225]
[251.56837463 -20.72126389]
[247.83535767 -35.43279266]
[249.67272949 -50.49892807]
[256.83200073 -63.88210297]
[268.34490967 -73.77235413]
[282.65447998 -78.83209991]
[297.82540894 -78.37705231]
[311.80599976 -72.46875763]
[322.70544434 -61.90626144]
[329.04971313 -48.11805725]
[329.98080444 -32.96887970]
[325.37277222 -18.50753784]
[315.84881592 -6.68980455]
[302.69699097 0.88606614]
[287.69595337 3.19550061]
[272.87448120 -0.07383294]
[260.23706055 -8.47978401]
[247.99557495 0.18890640]
[235.75410461 8.85759735]
[223.51261902 17.52628708]
[211.27114868 26.19497871]
[199.02966309 34.86367035]
[186.78819275 43.53236008]
[174.54670715 52.20104980]
[162.45753479 61.08089828]
[150.52429199 70.16922760]
[138.59104919 79.25756073]
[126.73712158 88.44910431]
[114.96341705 97.74317932]
[127.49017334 89.49209595]
[142.44143677 88.28389740]
[156.13052368 94.41649628]
[165.18199158 106.37771606]
[167.36393738 121.21817780]
[162.13833618 135.27850342]
[150.79370117 145.09173584]
[136.12739563 148.23809814]
[121.75583649 143.94177246]
[111.22275543 133.26216125]
[107.12542725 118.83383942]
[109.97193909 133.56127930]
[112.81845856 148.28871155]
[128.22709656 155.23384094]
[136.38771057 169.84483337]
[134.26260376 186.27743530]
[122.88388824 198.09255981]
[125.98558807 212.76838684]
[129.08728027 227.44419861]
[132.31622314 242.09252930]
[135.67216492 256.71231079]
[139.02810669 271.33206177]
[142.38404846 285.95184326]
[145.73999023 300.57162476]
[149.09593201 315.19137573]
[152.45187378 329.81115723]
[169.66606140 345.34869385]
[162.54060364 366.63836670]
[167.15109253 380.91226196]
[171.76158142 395.18612671]
[186.31739807 400.90118408]
[193.74879456 414.66012573]
[190.54687500 429.96640015]
[178.22349548 439.59283447]
[162.59736633 438.99414062]
[151.04669189 428.45297241]
[149.02532959 412.94659424]
[157.48770142 399.79660034]
[152.87721252 385.52273560]
[148.26672363 371.24887085]
[141.26733398 369.68188477]
[135.19615173 365.73580933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[9 159]
[10 158]
[12 157]
[13 156]
[14 155]
[19 151]
[20 150]
[21 149]
[22 94]
[23 93]
[25 91]
[26 90]
[27 89]
[28 88]
[29 87]
[30 86]
[31 85]
[32 83]
[33 82]
[34 81]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[56 78]
[57 77]
[58 76]
[59 75]
[63 72]
[64 71]
[65 70]
[95 138]
[96 137]
[98 136]
[99 135]
[100 134]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[108 128]
[109 127]
[110 126]
[166 178]
[167 177]
[168 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
