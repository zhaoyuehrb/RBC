%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRM3)
} def

/sequence { (\
ACUAGCCGCCGACGGCGCGCUUUCGUGACGCAGCCCGGGUCUCAGGGAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 26 0.224052593 ubox
1 40 0.004271524 ubox
2 25 0.236736677 ubox
2 33 0.055941509 ubox
2 39 0.005043117 ubox
2 45 0.100652760 ubox
2 46 0.058465637 ubox
2 47 0.038760700 ubox
3 27 0.010941690 ubox
3 32 0.055041830 ubox
3 38 0.003515904 ubox
3 44 0.099159379 ubox
3 45 0.056182778 ubox
3 46 0.037815551 ubox
4 21 0.749806180 ubox
4 22 0.029209383 ubox
4 23 0.013720905 ubox
4 26 0.006154480 ubox
4 42 0.083831707 ubox
5 16 0.398659345 ubox
5 18 0.069794635 ubox
5 20 0.887427765 ubox
5 21 0.005861748 ubox
5 31 0.026552912 ubox
5 34 0.004196047 ubox
5 40 0.039897104 ubox
5 41 0.084871451 ubox
6 15 0.399997704 ubox
6 17 0.049443965 ubox
6 19 0.887919046 ubox
6 30 0.026252481 ubox
6 33 0.005089571 ubox
6 38 0.028096569 ubox
6 39 0.056727817 ubox
6 46 0.102598913 ubox
6 47 0.059501127 ubox
7 14 0.401760994 ubox
7 17 0.890367738 ubox
7 19 0.009270362 ubox
7 27 0.006680363 ubox
7 30 0.003985343 ubox
7 37 0.028676556 ubox
7 38 0.047759705 ubox
7 45 0.102940437 ubox
7 46 0.059485318 ubox
8 13 0.391398275 ubox
8 16 0.892732770 ubox
8 18 0.012162722 ubox
8 20 0.007182972 ubox
8 26 0.006831474 ubox
8 29 0.005156482 ubox
8 31 0.006547455 ubox
8 34 0.006233191 ubox
8 36 0.028972425 ubox
8 40 0.105873774 ubox
9 15 0.892732669 ubox
9 17 0.010982223 ubox
9 19 0.007168974 ubox
9 25 0.004942771 ubox
9 30 0.006223085 ubox
9 33 0.006552523 ubox
9 38 0.115876466 ubox
9 39 0.106776824 ubox
9 46 0.016255955 ubox
9 47 0.010170714 ubox
10 14 0.886241768 ubox
10 17 0.009099110 ubox
10 25 0.007293340 ubox
10 27 0.004032413 ubox
10 37 0.121076506 ubox
10 38 0.105263829 ubox
10 45 0.016376211 ubox
10 46 0.010171474 ubox
11 16 0.010280984 ubox
11 24 0.008710433 ubox
11 36 0.120363263 ubox
11 41 0.095311102 ubox
11 43 0.008845913 ubox
12 23 0.008596193 ubox
12 26 0.006243747 ubox
12 40 0.095377807 ubox
12 42 0.008796090 ubox
13 25 0.006738899 ubox
13 30 0.012908137 ubox
13 37 0.049413830 ubox
13 39 0.094205950 ubox
14 21 0.008301348 ubox
14 24 0.006723603 ubox
14 29 0.013235344 ubox
14 35 0.166624842 ubox
14 36 0.050389625 ubox
14 41 0.007391463 ubox
15 20 0.008424425 ubox
15 23 0.005707773 ubox
15 31 0.108529823 ubox
15 34 0.168013606 ubox
15 35 0.046788812 ubox
15 40 0.007404791 ubox
16 27 0.021250318 ubox
16 30 0.110631659 ubox
16 33 0.168855880 ubox
16 37 0.011948690 ubox
16 39 0.007412790 ubox
17 24 0.003834617 ubox
17 26 0.052633788 ubox
17 29 0.135907244 ubox
17 31 0.385409615 ubox
17 34 0.046004976 ubox
17 36 0.012204066 ubox
18 25 0.054216182 ubox
18 27 0.167720484 ubox
18 30 0.385876654 ubox
18 33 0.048027474 ubox
18 37 0.007268616 ubox
19 24 0.050814256 ubox
19 26 0.170940846 ubox
19 29 0.382470523 ubox
19 31 0.086728361 ubox
19 34 0.016760305 ubox
19 36 0.005824298 ubox
20 25 0.175857782 ubox
20 30 0.086817170 ubox
20 33 0.018289936 ubox
20 46 0.003731631 ubox
20 47 0.007683997 ubox
21 28 0.305421995 ubox
21 32 0.017613757 ubox
21 33 0.011468973 ubox
21 45 0.003839934 ubox
21 46 0.007881988 ubox
21 47 0.004556659 ubox
21 48 0.056367710 ubox
21 49 0.386340409 ubox
22 27 0.299627855 ubox
22 28 0.047570407 ubox
22 32 0.023828417 ubox
22 33 0.027984678 ubox
22 39 0.004863287 ubox
22 44 0.003703713 ubox
22 45 0.008349686 ubox
22 46 0.007812340 ubox
22 47 0.073527698 ubox
22 48 0.713031786 ubox
22 49 0.072838270 ubox
23 27 0.045342118 ubox
23 32 0.034834231 ubox
23 38 0.006636263 ubox
23 44 0.006951706 ubox
23 45 0.007792282 ubox
23 46 0.078701657 ubox
23 47 0.742952695 ubox
23 48 0.081494165 ubox
24 30 0.067730229 ubox
24 37 0.007318924 ubox
24 45 0.081482762 ubox
24 46 0.756832433 ubox
24 47 0.072961374 ubox
25 29 0.065542824 ubox
25 31 0.090767271 ubox
25 34 0.019241282 ubox
25 36 0.007018807 ubox
25 50 0.009133541 ubox
26 30 0.084988806 ubox
26 32 0.035411557 ubox
26 33 0.022031168 ubox
26 44 0.756934651 ubox
26 49 0.008363287 ubox
27 31 0.039904763 ubox
27 41 0.127005170 ubox
27 43 0.756280117 ubox
28 40 0.134084785 ubox
28 42 0.745515290 ubox
29 37 0.083654844 ubox
29 39 0.143818749 ubox
30 36 0.082240646 ubox
30 40 0.732151358 ubox
31 39 0.740349391 ubox
32 42 0.011172786 ubox
33 40 0.051333193 ubox
33 41 0.017826013 ubox
34 39 0.054611117 ubox
34 46 0.019155994 ubox
34 47 0.607851839 ubox
35 45 0.019115697 ubox
35 46 0.610383227 ubox
35 47 0.028591763 ubox
36 45 0.610363891 ubox
36 46 0.028561452 ubox
37 43 0.113833172 ubox
38 42 0.075132644 ubox
39 50 0.009929658 ubox
40 46 0.003327163 ubox
40 47 0.012778939 ubox
40 48 0.027629293 ubox
40 49 0.008177164 ubox
41 45 0.005045834 ubox
41 46 0.018217181 ubox
41 47 0.031128740 ubox
42 46 0.028066719 ubox
42 48 0.012245133 ubox
43 47 0.012774670 ubox
4 21 0.9500000 lbox
5 20 0.9500000 lbox
6 19 0.9500000 lbox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
10 14 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
24 46 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
showpage
end
%%EOF
