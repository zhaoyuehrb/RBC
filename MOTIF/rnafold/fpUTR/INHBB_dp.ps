%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (INHBB)
} def

/sequence { (\
GACUCGGCUCGCCUCGCGGCGGGCGCCCUCGUCGCCAGCGGCGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.030000839 ubox
1 15 0.004589521 ubox
1 30 0.558553254 ubox
1 33 0.126304547 ubox
2 9 0.028139021 ubox
2 14 0.004570471 ubox
2 29 0.546822845 ubox
2 32 0.127430057 ubox
3 22 0.004415476 ubox
3 23 0.003619602 ubox
3 31 0.127114773 ubox
4 21 0.003177201 ubox
4 22 0.006628867 ubox
5 11 0.003992782 ubox
5 21 0.008204870 ubox
5 22 0.023683139 ubox
5 25 0.117925028 ubox
5 31 0.014655999 ubox
5 43 0.065614404 ubox
6 10 0.004730712 ubox
6 13 0.015423839 ubox
6 20 0.006394302 ubox
6 24 0.087830868 ubox
6 27 0.105202914 ubox
6 28 0.061329620 ubox
6 29 0.008212183 ubox
6 30 0.020431469 ubox
6 42 0.051785803 ubox
6 47 0.479306746 ubox
7 12 0.015347874 ubox
7 20 0.041730144 ubox
7 24 0.699251995 ubox
7 26 0.097322920 ubox
7 27 0.042872683 ubox
7 28 0.006056646 ubox
7 39 0.003380847 ubox
7 42 0.329896279 ubox
7 44 0.355712283 ubox
7 46 0.482239337 ubox
8 19 0.041875988 ubox
8 22 0.032154150 ubox
8 23 0.706949219 ubox
8 25 0.089532593 ubox
8 38 0.003610333 ubox
8 41 0.331288595 ubox
8 43 0.355818775 ubox
9 18 0.008312793 ubox
9 19 0.006326326 ubox
9 21 0.005364298 ubox
9 22 0.711400144 ubox
9 23 0.017186168 ubox
9 37 0.003431999 ubox
9 40 0.060105178 ubox
9 41 0.351904110 ubox
10 16 0.003599017 ubox
10 18 0.041652507 ubox
10 21 0.714857133 ubox
10 22 0.012474629 ubox
10 25 0.016018944 ubox
10 40 0.484638604 ubox
10 43 0.486302187 ubox
11 15 0.003393141 ubox
11 17 0.042236813 ubox
11 20 0.715281452 ubox
11 24 0.021370247 ubox
11 39 0.487868707 ubox
11 42 0.489972368 ubox
11 44 0.081884932 ubox
12 16 0.041931100 ubox
12 19 0.715279535 ubox
12 23 0.021379335 ubox
12 38 0.413589405 ubox
12 41 0.489209201 ubox
12 43 0.081882495 ubox
13 18 0.714056739 ubox
13 19 0.003476586 ubox
13 22 0.021344656 ubox
13 38 0.272847015 ubox
13 40 0.474800244 ubox
13 41 0.035237399 ubox
14 18 0.004421462 ubox
14 21 0.015864164 ubox
14 37 0.399257900 ubox
14 40 0.008406750 ubox
14 41 0.075509702 ubox
15 21 0.013327231 ubox
15 40 0.115031269 ubox
15 43 0.017957891 ubox
16 20 0.012644874 ubox
16 35 0.666588210 ubox
16 39 0.196817446 ubox
16 42 0.019975063 ubox
16 44 0.006805849 ubox
17 34 0.667336661 ubox
17 38 0.197290362 ubox
17 41 0.019971324 ubox
17 43 0.006813714 ubox
18 33 0.667295507 ubox
18 36 0.199455635 ubox
18 42 0.006801927 ubox
19 32 0.667154742 ubox
19 35 0.200205072 ubox
19 39 0.022990795 ubox
20 31 0.667361268 ubox
20 34 0.199992817 ubox
20 38 0.022927747 ubox
20 40 0.006622659 ubox
21 27 0.003579393 ubox
21 28 0.013964289 ubox
21 29 0.036825784 ubox
21 30 0.666094644 ubox
21 33 0.165040970 ubox
21 39 0.006479526 ubox
21 47 0.036869829 ubox
22 26 0.003907594 ubox
22 27 0.015485119 ubox
22 28 0.221058913 ubox
22 29 0.625393505 ubox
22 30 0.005680755 ubox
22 32 0.118626132 ubox
22 33 0.112867970 ubox
22 36 0.024303017 ubox
22 46 0.039322977 ubox
23 27 0.218326508 ubox
23 28 0.615412320 ubox
23 29 0.005791204 ubox
23 32 0.159494025 ubox
23 35 0.024407114 ubox
23 44 0.070534442 ubox
24 31 0.195675836 ubox
24 34 0.024414831 ubox
24 43 0.072993604 ubox
25 30 0.184351201 ubox
25 32 0.023424833 ubox
25 33 0.023952805 ubox
25 35 0.003281261 ubox
25 42 0.110880479 ubox
25 44 0.081777695 ubox
26 31 0.031946686 ubox
26 34 0.003285369 ubox
26 41 0.110907219 ubox
26 43 0.079338754 ubox
27 40 0.110349242 ubox
27 41 0.029512656 ubox
28 38 0.102531451 ubox
28 40 0.028639759 ubox
28 41 0.047772274 ubox
29 37 0.098943057 ubox
29 40 0.008628915 ubox
29 41 0.032360131 ubox
30 40 0.060214718 ubox
30 43 0.165944539 ubox
31 39 0.066307278 ubox
31 42 0.196376790 ubox
31 44 0.298745911 ubox
31 46 0.561044399 ubox
32 38 0.064869224 ubox
32 41 0.196364165 ubox
32 43 0.062647474 ubox
32 45 0.560762317 ubox
33 40 0.196419184 ubox
33 43 0.659077819 ubox
34 39 0.191383059 ubox
34 42 0.676688671 ubox
34 44 0.015571911 ubox
35 41 0.676719213 ubox
35 43 0.015538064 ubox
36 40 0.671797216 ubox
38 44 0.009756695 ubox
39 43 0.009696129 ubox
40 47 0.007664248 ubox
41 46 0.007863975 ubox
1 30 0.9500000 lbox
2 29 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
showpage
end
%%EOF
