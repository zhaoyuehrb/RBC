%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST1H2BD)
} def

/sequence { (\
GAUUAUUUUCUCAGGUGUUUGCAACAGUGUUCUAACUAUUAACGCUACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.016164206 ubox
1 8 0.047730258 ubox
1 9 0.043423730 ubox
1 10 0.495813952 ubox
1 12 0.330095844 ubox
1 19 0.016095346 ubox
1 20 0.044051936 ubox
1 32 0.014580803 ubox
1 40 0.008130792 ubox
2 6 0.015882625 ubox
2 7 0.053731877 ubox
2 8 0.052460081 ubox
2 9 0.489685116 ubox
2 11 0.325715837 ubox
2 16 0.010543783 ubox
2 18 0.018364278 ubox
2 19 0.046547528 ubox
2 31 0.014561878 ubox
2 39 0.008590694 ubox
3 14 0.007136004 ubox
3 15 0.010663956 ubox
3 17 0.014520410 ubox
3 38 0.008471429 ubox
4 13 0.018856092 ubox
4 14 0.010236705 ubox
4 17 0.058172988 ubox
4 21 0.003565060 ubox
4 29 0.013886737 ubox
4 47 0.007818516 ubox
5 16 0.064231111 ubox
5 18 0.005271236 ubox
5 20 0.003855339 ubox
5 28 0.014507956 ubox
5 46 0.005908329 ubox
6 14 0.006645947 ubox
6 15 0.064443526 ubox
6 17 0.005513899 ubox
6 27 0.014372832 ubox
6 35 0.006092423 ubox
7 13 0.014086992 ubox
7 14 0.060897426 ubox
7 15 0.005369876 ubox
7 24 0.005049949 ubox
7 26 0.012564260 ubox
7 34 0.006234497 ubox
7 35 0.003407621 ubox
8 13 0.050030379 ubox
8 14 0.009013201 ubox
8 15 0.004762350 ubox
8 23 0.005758346 ubox
8 24 0.005938758 ubox
8 34 0.003743466 ubox
8 41 0.003388993 ubox
8 42 0.003553527 ubox
9 13 0.012232998 ubox
9 14 0.006332468 ubox
9 15 0.007341091 ubox
9 23 0.006357664 ubox
9 41 0.003903518 ubox
10 14 0.013339832 ubox
11 26 0.003413203 ubox
12 21 0.041571433 ubox
12 29 0.012718734 ubox
13 19 0.003588734 ubox
13 20 0.041043197 ubox
13 28 0.012608036 ubox
13 33 0.008158199 ubox
13 37 0.009918531 ubox
13 40 0.006826941 ubox
13 46 0.054024852 ubox
14 19 0.033407078 ubox
14 20 0.003183916 ubox
14 32 0.008562371 ubox
14 33 0.003980508 ubox
14 36 0.010050691 ubox
14 37 0.064342335 ubox
14 39 0.007076507 ubox
14 40 0.011916772 ubox
14 45 0.041859623 ubox
14 46 0.935742957 ubox
15 22 0.050556732 ubox
15 25 0.077318361 ubox
15 31 0.008280283 ubox
15 32 0.004132914 ubox
15 36 0.066775944 ubox
15 39 0.013447061 ubox
15 43 0.009551755 ubox
15 45 0.970801212 ubox
15 48 0.050309514 ubox
16 21 0.048527757 ubox
16 23 0.033241543 ubox
16 24 0.074932969 ubox
16 26 0.044172902 ubox
16 34 0.003816620 ubox
16 35 0.066378837 ubox
16 38 0.013413963 ubox
16 42 0.009394054 ubox
16 44 0.971316414 ubox
16 47 0.049827141 ubox
16 49 0.027651301 ubox
17 22 0.040151963 ubox
17 25 0.078672337 ubox
17 33 0.004826942 ubox
17 36 0.019997470 ubox
17 37 0.008322402 ubox
17 43 0.971795249 ubox
17 45 0.021730760 ubox
17 46 0.037209313 ubox
17 48 0.047459720 ubox
18 24 0.077854714 ubox
18 35 0.020164856 ubox
18 42 0.962269116 ubox
18 44 0.021284872 ubox
18 47 0.047039357 ubox
19 23 0.064881290 ubox
19 27 0.010935434 ubox
19 34 0.019527534 ubox
19 35 0.029520434 ubox
19 41 0.927337979 ubox
19 42 0.118236161 ubox
20 26 0.019356076 ubox
20 29 0.045640063 ubox
20 34 0.041032253 ubox
20 38 0.050801466 ubox
20 41 0.164215459 ubox
20 44 0.011605751 ubox
20 47 0.003965294 ubox
20 49 0.007816967 ubox
21 25 0.023569053 ubox
21 28 0.053123710 ubox
21 30 0.100947024 ubox
21 33 0.038994068 ubox
21 37 0.038738541 ubox
21 40 0.179665450 ubox
21 43 0.013453559 ubox
21 45 0.047184664 ubox
21 48 0.013480598 ubox
22 27 0.053856131 ubox
22 29 0.103570285 ubox
22 44 0.047182527 ubox
23 28 0.090127476 ubox
23 31 0.044398653 ubox
23 40 0.590231282 ubox
24 30 0.046484560 ubox
24 39 0.588858381 ubox
25 29 0.046142709 ubox
26 33 0.197657913 ubox
26 37 0.903410442 ubox
26 40 0.056601083 ubox
26 46 0.196677426 ubox
27 32 0.205232154 ubox
27 36 0.930942010 ubox
27 39 0.058876773 ubox
27 43 0.006515292 ubox
27 45 0.210624586 ubox
27 48 0.007161315 ubox
28 34 0.032326682 ubox
28 35 0.925047282 ubox
28 38 0.058568995 ubox
28 41 0.003582244 ubox
28 42 0.006462037 ubox
28 44 0.210597842 ubox
28 47 0.007036971 ubox
29 33 0.033206268 ubox
29 36 0.053598753 ubox
29 37 0.042350135 ubox
29 39 0.007708921 ubox
29 40 0.004598758 ubox
29 43 0.210696118 ubox
29 45 0.006764291 ubox
29 46 0.003612853 ubox
29 48 0.003256889 ubox
30 35 0.050331152 ubox
30 38 0.008321526 ubox
30 42 0.208508216 ubox
30 44 0.006675350 ubox
30 47 0.003207712 ubox
31 41 0.183059147 ubox
33 41 0.050514658 ubox
34 40 0.062989719 ubox
35 39 0.049963523 ubox
40 47 0.004516831 ubox
41 46 0.004578146 ubox
43 49 0.011494311 ubox
44 48 0.011322090 ubox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
19 41 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
showpage
end
%%EOF
