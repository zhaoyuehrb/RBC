%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGACCAGAGCGCGCUGGCCCGGCCCACCCGGGGCGGUUGUGGUCGCUAUAUAUAAGGUGGGGAGGCCGCCGGCCCGUUCGGUUCCGGGCGUUACCAUCGUCCGUGCGCACCGCCCGGCGUCCAGGUGAGUCUCCCAUCUGCAGAGACGCGGACGCGCCGGCCCGCAGUUGGCCUGCGGAGCGCGGUGGACGGUUUGGCGCCCACCAGGCGAUCAAUACUUUGGAUUUUUAAUUUCUAGAUUUGGCAAUUCUU\
CGCUGAAGUCAUC\
) } def
/len { sequence length } bind def

/coor [
[40.35733032 194.94859314]
[22.85135269 206.80317688]
[1.88133049 205.58125305]
[-6.67841387 217.89915466]
[-15.23815823 230.21705627]
[-23.79790306 242.53497314]
[-32.35764694 254.85287476]
[-40.91739273 267.17077637]
[-49.47713470 279.48867798]
[-50.99837875 295.23657227]
[-64.61501312 301.27285767]
[-73.17475891 313.59075928]
[-81.73450470 325.90866089]
[-84.04907227 334.70788574]
[-90.46683502 338.31964111]
[-99.16985321 350.53674316]
[-107.87286377 362.75384521]
[-108.36511230 367.88058472]
[-110.53935242 371.91784668]
[-113.70757294 374.41073608]
[-117.10091400 375.23922729]
[-126.22653961 387.14398193]
[-135.35217285 399.04870605]
[-144.47779846 410.95346069]
[-153.60342407 422.85818481]
[-152.93559265 438.88732910]
[-165.14524841 449.29425049]
[-180.86619568 446.09564209]
[-188.03868103 431.74520874]
[-181.16056824 417.25137329]
[-165.50817871 413.73257446]
[-156.38253784 401.82781982]
[-147.25691223 389.92306519]
[-138.13128662 378.01834106]
[-129.00566101 366.11358643]
[-120.08996582 354.05081177]
[-111.38694763 341.83370972]
[-102.68393707 329.61663818]
[-94.05240631 317.34890747]
[-85.49266052 305.03100586]
[-76.93291473 292.71310425]
[-76.02392578 277.84625244]
[-61.79504013 270.92892456]
[-53.23529816 258.61102295]
[-44.67555237 246.29312134]
[-36.11580658 233.97521973]
[-27.55606270 221.65731812]
[-18.99631882 209.33941650]
[-10.43657398 197.02151489]
[-15.52313137 189.63769531]
[-18.41770172 181.12683105]
[-18.89011574 172.12623596]
[-16.89208412 163.31355286]
[-12.56179333 155.35574341]
[-6.21442699 148.85858154]
[1.68074858 144.32060242]
[10.53506470 142.09481812]
[19.68433571 142.36128235]
[28.43868256 145.11260986]
[37.83986282 133.42424011]
[47.24104309 121.73587799]
[56.64222336 110.04751587]
[55.76681519 95.07308197]
[45.06771469 84.55979156]
[34.36861801 74.04650116]
[23.66952133 63.53320694]
[12.97042274 53.01991653]
[2.27132511 42.50662613]
[-8.42777252 31.99333191]
[-19.18807983 21.54269600]
[-30.00922775 11.15507030]
[-40.83037567 0.76744497]
[-51.65152359 -9.62018013]
[-62.59324265 -19.88072205]
[-73.65404510 -30.01278114]
[-84.71485138 -40.14484024]
[-95.83463287 -50.21213913]
[-107.01300812 -60.21433258]
[-118.19138336 -70.21652985]
[-133.75270081 -69.52134705]
[-144.94667053 -79.82423401]
[-145.51353455 -94.66384888]
[-156.69190979 -104.66604614]
[-167.87028503 -114.66823578]
[-179.04866028 -124.67043304]
[-199.05834961 -122.52963257]
[-213.92332458 -135.63488770]
[-214.29539490 -155.14154053]
[-225.81727600 -164.74603271]
[-237.33915710 -174.35052490]
[-248.86105347 -183.95500183]
[-260.38293457 -193.55949402]
[-271.90481567 -203.16397095]
[-287.26290894 -200.22070312]
[-300.89456177 -207.88311768]
[-306.36328125 -222.53327942]
[-301.08691406 -237.25381470]
[-287.55685425 -245.09414673]
[-272.16149902 -242.35229492]
[-262.17013550 -230.32290649]
[-262.30032349 -214.68586731]
[-250.77844238 -205.08137512]
[-239.25656128 -195.47688293]
[-227.73468018 -185.87240601]
[-216.21279907 -176.26791382]
[-204.69090271 -166.66343689]
[-195.15361023 -170.29365540]
[-184.88832092 -169.65060425]
[-175.73635864 -164.78289795]
[-169.36682129 -156.50286865]
[-166.97241211 -146.25170898]
[-169.04646301 -135.84881592]
[-157.86808777 -125.84661865]
[-146.68971252 -115.84442139]
[-135.51133728 -105.84222412]
[-120.70019531 -106.92192078]
[-109.22124481 -96.93750763]
[-108.18919373 -81.39490509]
[-97.01081085 -71.39270782]
[-85.83243561 -61.39051437]
[-78.77715302 -59.27975082]
[-74.58279419 -51.20564270]
[-63.52198792 -41.07358551]
[-52.46118546 -30.94152641]
[-47.76805115 -30.24795723]
[-43.45016861 -26.62099838]
[-41.26389694 -20.44132805]
[-30.44274902 -10.05370331]
[-19.62160110 0.33392245]
[-8.80045414 10.72154808]
[-1.82343566 13.07815933]
[2.08551908 21.29423523]
[12.78461647 31.80752563]
[23.48371506 42.32081985]
[34.18281174 52.83411026]
[44.88191223 63.34740067]
[55.58100891 73.86069489]
[66.28010559 84.37398529]
[82.90465546 50.81109619]
[130.20994568 40.21376801]
[134.69499207 25.89999008]
[139.18005371 11.58621025]
[143.66510010 -2.72756958]
[148.15016174 -17.04134941]
[140.60636902 -30.92899513]
[145.17219543 -46.05938721]
[159.13880920 -53.45593262]
[174.22009277 -48.73039246]
[181.46855164 -34.68634415]
[176.58383179 -19.65587616]
[162.46394348 -12.55629444]
[157.97888184 1.75748503]
[153.49383545 16.07126427]
[149.00877380 30.38504410]
[144.52371216 44.69882202]
[150.65757751 49.01458740]
[162.92529297 57.64611435]
[169.05914307 61.96187973]
[181.01696777 52.90592194]
[192.97479248 43.84996414]
[204.93261719 34.79400635]
[216.89044189 25.73804665]
[228.79519653 16.61241722]
[240.64643860 7.41742706]
[252.44380188 -1.84660959]
[264.18685913 -11.17937756]
[275.92993164 -20.51214600]
[287.67297363 -29.84491348]
[299.41604614 -39.17768097]
[311.15908813 -48.51044846]
[314.40316772 -64.22208405]
[328.77429199 -71.35303497]
[343.24816895 -64.43303680]
[346.72167969 -48.77052307]
[336.53024292 -36.38043594]
[320.49185181 -36.76739120]
[308.74880981 -27.43462181]
[297.00573730 -18.10185432]
[285.26269531 -8.76908588]
[273.51962280 0.56368178]
[261.77658081 9.89645004]
[258.50692749 16.49507904]
[249.84143066 19.26867867]
[237.99018860 28.46366882]
[234.64370728 35.02366257]
[225.94641113 37.69587326]
[213.98858643 46.75183105]
[202.03074646 55.80778885]
[190.07292175 64.86374664]
[178.11509705 73.91970825]
[182.60015869 88.23348236]
[197.58763123 88.84645081]
[209.15664673 78.41594696]
[224.34733582 79.25108337]
[234.21994019 90.34465790]
[249.20741272 90.95762634]
[264.19488525 91.57058716]
[279.18234253 92.18355560]
[294.16983032 92.79651642]
[309.15728760 93.40948486]
[320.60864258 82.51719666]
[336.40570068 82.99604034]
[347.17630005 94.56192780]
[346.53045654 110.35301208]
[334.85134888 121.00073242]
[319.06796265 120.18798828]
[308.54431152 108.39695740]
[293.55685425 107.78398895]
[278.56939697 107.17102051]
[263.58190918 106.55805969]
[248.59445190 105.94509125]
[233.60697937 105.33213043]
[222.86145020 115.58245087]
[207.65328979 115.17432404]
[196.97465515 103.83392334]
[181.98718262 103.22095490]
[179.24906921 110.20326996]
[194.22245789 111.09635925]
[197.99993896 125.61292267]
[185.36106873 133.69122314]
[173.77284241 124.16790009]
[171.03472900 131.15020752]
[182.44364929 140.88861084]
[193.85258484 150.62699890]
[205.26152039 160.36538696]
[216.67045593 170.10377502]
[228.07939148 179.84216309]
[242.81909180 175.28753662]
[257.67520142 179.44683838]
[267.90716553 190.99284363]
[270.25003052 206.24127197]
[263.95617676 220.32640076]
[251.03393555 228.75372314]
[235.60678101 228.83410645]
[222.59744263 220.54190063]
[216.15716553 206.52311707]
[218.34100342 191.25109863]
[206.93206787 181.51271057]
[195.52313232 171.77432251]
[184.11419678 162.03593445]
[172.70526123 152.29753113]
[161.29632568 142.55914307]
[149.13026428 151.33335876]
[154.76921082 165.23307800]
[160.40815735 179.13279724]
[166.04710388 193.03251648]
[171.68605042 206.93225098]
[177.32498169 220.83197021]
[192.41830444 224.43354797]
[202.48651123 236.24078369]
[203.65817261 251.71356201]
[195.48277283 264.90228271]
[181.10389709 270.73559570]
[166.05053711 266.97052002]
[156.11100769 255.05474854]
[155.10726929 239.57017517]
[163.42526245 226.47091675]
[157.78631592 212.57119751]
[152.14736938 198.67146301]
[146.50842285 184.77174377]
[140.86949158 170.87202454]
[135.23054504 156.97230530]
[101.66524506 157.02075195]
[77.60578156 141.44105530]
[68.33058929 119.44869995]
[58.92940521 131.13705444]
[49.52822495 142.82542419]
[40.12704468 154.51377869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 49]
[4 48]
[5 47]
[6 46]
[7 45]
[8 44]
[9 43]
[11 41]
[12 40]
[13 39]
[15 38]
[16 37]
[17 36]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[59 268]
[60 267]
[61 266]
[62 265]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 130]
[71 129]
[72 128]
[73 127]
[74 124]
[75 123]
[76 122]
[77 120]
[78 119]
[79 118]
[82 115]
[83 114]
[84 113]
[85 112]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[158 190]
[159 189]
[160 188]
[161 187]
[162 186]
[163 184]
[164 183]
[165 181]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[191 216]
[192 215]
[195 212]
[196 211]
[197 210]
[198 209]
[199 208]
[200 207]
[222 242]
[223 241]
[224 240]
[225 239]
[226 238]
[227 237]
[243 262]
[244 261]
[245 260]
[246 259]
[247 258]
[248 257]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
