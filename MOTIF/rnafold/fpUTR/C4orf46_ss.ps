%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGCCCUUCGAGAUCGAUUGGAGGCUCGCGCAGGAGCCGUGAGUUGCCUAAGGUGAAUUGACUCAUAUGAUUGGCUGUCCCGAAAAAUGAAACGUCUUUGUGGUCCGGGGCUGAGACCCACGAGGAGACUGGGCGGGAUUUCUGGCGUUAGGAGGCGGGGCCUUUCGGCUUUGGGCGCGAGUGGUUAAAAGACAGUUGGUGUCGGUUCGGCUUCUCGGGUCGGAUUCCGCGGUCCCAACCCUUCCCC\
) } def
/len { sequence length } bind def

/coor [
[400.44509888 831.79547119]
[394.74841309 817.91931152]
[389.05172729 804.04315186]
[374.60290527 794.06439209]
[377.24874878 775.82946777]
[371.37814331 762.02600098]
[365.50753784 748.22253418]
[349.64724731 742.59460449]
[342.63781738 726.92340088]
[349.27075195 710.72320557]
[343.22714233 696.99456787]
[337.18353271 683.26593018]
[331.13995361 669.53735352]
[318.93054199 661.00622559]
[320.45187378 645.25830078]
[314.40826416 631.52972412]
[308.36468506 617.80108643]
[302.32107544 604.07244873]
[296.27749634 590.34387207]
[290.23388672 576.61523438]
[284.19027710 562.88659668]
[278.14669800 549.15802002]
[256.74542236 546.41265869]
[241.30870056 531.14843750]
[238.28637695 509.51684570]
[249.07839966 490.37530518]
[241.85209656 477.23071289]
[234.62579346 464.08612061]
[227.39949036 450.94149780]
[220.17318726 437.79690552]
[212.94686890 424.65231323]
[205.72056580 411.50769043]
[198.49426270 398.36309814]
[183.01158142 390.07870483]
[183.58261108 371.66168213]
[176.19169617 358.60894775]
[168.80079651 345.55618286]
[161.40988159 332.50341797]
[154.01896667 319.45065308]
[146.62806702 306.39791870]
[139.23715210 293.34515381]
[126.23320007 286.08245850]
[126.16635132 270.26141357]
[118.77544403 257.20864868]
[111.38453674 244.15588379]
[101.75998688 254.51330566]
[88.45156860 254.93127441]
[79.39602661 246.32714844]
[64.39602661 246.32714844]
[49.39602661 246.32714844]
[40.94969177 261.76245117]
[25.91783714 270.73458862]
[8.50152874 270.84149170]
[-6.48495817 262.14416504]
[-14.94492340 247.12477112]
[-29.94018555 247.50172424]
[-44.93544769 247.87867737]
[-59.93070984 248.25561523]
[-70.63867188 259.87951660]
[-86.43289185 260.44369507]
[-97.94293213 249.61344910]
[-98.34009552 233.81414795]
[-87.38874817 222.41925049]
[-71.58613586 222.18914795]
[-60.30766296 233.26036072]
[-45.31240082 232.88340759]
[-30.31713676 232.50645447]
[-15.32187462 232.12950134]
[-10.52476978 220.47157288]
[-1.64835787 211.45451355]
[10.01844501 206.43786621]
[22.76246071 206.19665527]
[34.69779968 210.80180359]
[44.04493713 219.60444641]
[49.39602661 231.32714844]
[64.39602661 231.32714844]
[79.39602661 231.32714844]
[89.73241425 221.84872437]
[104.96749878 223.97572327]
[103.46207428 209.05145264]
[101.95664215 194.12718201]
[100.45121765 179.20292664]
[98.94579315 164.27865601]
[97.44036865 149.35438538]
[87.60053253 147.83995056]
[78.26387787 144.38410950]
[69.80930328 139.12709045]
[62.57991028 132.28225708]
[56.86906815 124.12737274]
[52.90853119 114.99336243]
[50.85902405 105.25090790]
[50.80372238 95.29536438]
[52.74486160 85.53073883]
[56.60367584 76.35329437]
[62.22356796 68.13546753]
[69.37647247 61.21073532]
[77.77211761 55.86012268]
[73.13686371 41.59427643]
[68.50160980 27.32842827]
[63.86635208 13.06258011]
[59.23109818 -1.20326781]
[54.59584427 -15.46911526]
[49.96058655 -29.73496246]
[45.32533264 -44.00081253]
[40.69007874 -58.26665878]
[35.96528244 -72.50309753]
[31.15112686 -86.70957184]
[26.24780655 -100.88552094]
[21.25551224 -115.03038025]
[8.45160961 -125.27694702]
[11.19059467 -141.44573975]
[26.65483665 -146.90370178]
[38.93604660 -136.03613281]
[35.40037155 -120.02267456]
[40.39266586 -105.87781525]
[45.56930161 -100.62974548]
[45.35760117 -91.52372742]
[50.17175674 -77.31725311]
[55.28203583 -72.00454712]
[54.95592499 -62.90191269]
[59.59118271 -48.63606644]
[64.22643280 -34.37021637]
[68.86169434 -20.10437012]
[73.49694824 -5.83852291]
[78.13220215 8.42732525]
[82.76745605 22.69317245]
[87.40270996 36.95901871]
[92.03796387 51.22486877]
[99.19752502 50.58579636]
[106.37406158 50.99205399]
[113.41575623 52.43504333]
[119.63138580 38.78345490]
[125.84702301 25.13186455]
[132.06265259 11.48027515]
[138.19238281 -2.21009874]
[144.23599243 -15.93871593]
[142.71467590 -31.68661118]
[154.92405701 -40.21772385]
[160.96766663 -53.94634247]
[158.64826965 -70.18064117]
[171.71321106 -80.09222412]
[186.72238159 -73.48490143]
[188.23564148 -57.15572357]
[174.69627380 -47.90274811]
[168.65267944 -34.17412949]
[170.60627747 -19.40819740]
[157.96459961 -9.89511967]
[151.92100525 3.83349776]
[152.10206604 11.20282936]
[145.71424866 17.69590950]
[139.49861145 31.34749794]
[133.28297424 44.99908829]
[127.06734467 58.65067673]
[142.65626526 75.04302216]
[149.30801392 96.66425323]
[145.62895203 118.98437500]
[132.38989258 137.32696533]
[112.36463165 147.84896851]
[113.87005615 162.77322388]
[115.37548065 177.69749451]
[116.88091278 192.62176514]
[118.38633728 207.54602051]
[119.89176178 222.47029114]
[124.43729401 236.76498413]
[131.82820129 249.81773376]
[139.21911621 262.87048340]
[152.75170898 271.06680298]
[152.28990173 285.95425415]
[159.68081665 299.00698853]
[167.07173157 312.05975342]
[174.46263123 325.11251831]
[181.85354614 338.16528320]
[189.24446106 351.21801758]
[196.63537598 364.27078247]
[208.81997681 368.45053101]
[214.71171570 379.45349121]
[211.63887024 391.13681030]
[218.86517334 404.28140259]
[226.09147644 417.42599487]
[233.31777954 430.57058716]
[240.54408264 443.71520996]
[247.77038574 456.85980225]
[254.99670410 470.00439453]
[262.22299194 483.14898682]
[270.80453491 481.87213135]
[279.41348267 482.78326416]
[287.50204468 485.81491089]
[294.55795288 490.76486206]
[300.13687134 497.30981445]
[303.89041138 505.02639771]
[305.58786011 513.41851807]
[305.13034058 521.94934082]
[302.55651855 530.07556152]
[298.03948975 537.28198242]
[291.87530518 543.11437988]
[297.91891479 556.84301758]
[303.96249390 570.57165527]
[310.00610352 584.30023193]
[316.04971313 598.02886963]
[322.09329224 611.75750732]
[328.13690186 625.48608398]
[334.18048096 639.21472168]
[346.82217407 648.72778320]
[344.86856079 663.49371338]
[350.91217041 677.22235107]
[356.95574951 690.95098877]
[362.99935913 704.67956543]
[376.01770020 708.07482910]
[384.58483887 718.19488525]
[385.74984741 731.20776367]
[379.31103516 742.35192871]
[385.18164062 756.15539551]
[391.05224609 769.95886230]
[402.68728638 775.48699951]
[407.29962158 787.08459473]
[402.92788696 798.34649658]
[408.62457275 812.22265625]
[414.32125854 826.09881592]
[420.62252808 839.71105957]
[427.51623535 853.03314209]
[434.40994263 866.35516357]
[441.30361938 879.67718506]
[457.04040527 889.26190186]
[455.51916504 906.75561523]
[462.57974243 919.98999023]
[469.64028931 933.22436523]
[476.70083618 946.45874023]
[483.76141357 959.69311523]
[497.95932007 967.89990234]
[497.68035889 984.29669189]
[483.21154785 992.01586914]
[469.43713379 983.11657715]
[470.52703857 966.75366211]
[463.46649170 953.51928711]
[456.40591431 940.28491211]
[449.34536743 927.05053711]
[442.28479004 913.81622314]
[430.82073975 910.00610352]
[424.82464600 899.05963135]
[427.98159790 886.57092285]
[421.08789062 873.24884033]
[414.19418335 859.92681885]
[407.30050659 846.60473633]
[403.02056885 860.98120117]
[390.55981445 869.33160400]
[375.63571167 867.82452393]
[365.09606934 857.15136719]
[363.77691650 842.20947266]
[372.28350830 829.85479736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 218]
[2 217]
[3 216]
[5 213]
[6 212]
[7 211]
[10 207]
[11 206]
[12 205]
[13 204]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[26 184]
[27 183]
[28 182]
[29 181]
[30 180]
[31 179]
[32 178]
[33 177]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[40 169]
[41 168]
[43 166]
[44 165]
[45 164]
[48 77]
[49 76]
[50 75]
[55 68]
[56 67]
[57 66]
[58 65]
[79 163]
[80 162]
[81 161]
[82 160]
[83 159]
[84 158]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[102 123]
[103 122]
[104 121]
[105 120]
[106 118]
[107 117]
[108 115]
[109 114]
[131 153]
[132 152]
[133 151]
[134 150]
[135 148]
[136 147]
[138 145]
[139 144]
[219 243]
[220 242]
[221 241]
[222 240]
[224 237]
[225 236]
[226 235]
[227 234]
[228 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
