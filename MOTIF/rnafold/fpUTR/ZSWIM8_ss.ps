%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCGAGCGCUUCGUCCCGGCCCUAAGUCUCGGAGACUGGCCAAGAUCACCGCUUGCACCGCGCUGUUGGGCGAGGCCCGGUCCCGUCUCUUUCCCAGGCCUGAGAUUCUCGCCCGGCACGGCCGCCCUGAGCGCCCCGGCCACCCCCAGCCCCGGCUCGCCCCUCAGGCCCCGGGCCUCCCCUCAACCCCCGGCCGGCGGCCCAGGCCCCGGAUCCGCGGGGGGGGACCCGGCCCCGGGGGGUGCGGGCCCC\
) } def
/len { sequence length } bind def

/coor [
[316.94708252 264.69375610]
[302.23532104 261.76739502]
[287.52352905 258.84103394]
[272.81176758 255.91468811]
[257.34753418 268.64242554]
[237.41836548 266.65115356]
[226.81176758 277.25775146]
[216.20515442 287.86437988]
[205.59855652 298.47097778]
[194.99195862 309.07757568]
[184.38536072 319.68417358]
[187.54765320 333.08358765]
[183.71369934 346.19387817]
[173.98535156 355.62759399]
[160.97276306 359.00231934]
[148.09471130 355.54168701]
[137.35874939 366.01733398]
[126.62277985 376.49298096]
[126.26296234 392.06567383]
[115.22593689 402.53652954]
[100.38198853 402.09750366]
[89.64602661 412.57315063]
[78.91006470 423.04879761]
[68.17410278 433.52444458]
[66.77558899 438.49453735]
[63.90922546 442.08721924]
[60.33803558 443.97540283]
[56.84487534 444.17901611]
[45.73060989 454.25238037]
[34.61634064 464.32577515]
[23.50207520 474.39916992]
[12.38780785 484.47253418]
[4.71225786 499.58950806]
[-11.93872261 496.39871216]
[-13.48207378 479.51513672]
[2.31442308 473.35827637]
[13.42868996 463.28488159]
[24.54295731 453.21151733]
[35.65722275 443.13812256]
[46.77149200 433.06472778]
[57.69845581 422.78848267]
[68.43441772 412.31283569]
[79.17037964 401.83718872]
[89.90634155 391.36154175]
[89.83175659 376.51129150]
[100.57032013 365.73455811]
[116.14714050 365.75701904]
[126.88310242 355.28137207]
[137.61906433 344.80572510]
[134.73493958 328.63204956]
[142.14300537 313.78207397]
[157.09574890 306.20803833]
[173.77874756 309.07757568]
[184.38536072 298.47097778]
[194.99195862 287.86437988]
[205.59855652 277.25775146]
[216.20515442 266.65115356]
[226.81176758 256.04455566]
[224.46864319 250.80606079]
[223.31449890 245.13745117]
[223.42459106 239.30731201]
[224.81376648 233.59638977]
[227.43479919 228.28407288]
[217.91889954 216.68891907]
[208.40299988 205.09376526]
[198.88710022 193.49859619]
[189.37120056 181.90344238]
[176.51419067 182.45025635]
[165.52081299 175.39411926]
[160.51667786 163.11735535]
[163.53178406 150.00772095]
[154.15888977 138.29666138]
[144.78599548 126.58560181]
[135.41310120 114.87454224]
[126.04021454 103.16348267]
[68.69792175 116.75377655]
[56.64980698 107.81828308]
[44.60169601 98.88279724]
[32.55358124 89.94730377]
[20.50546837 81.01181793]
[4.81196213 79.00572205]
[-0.80157399 65.20943451]
[-12.84968662 56.27394485]
[-26.09164238 63.79528046]
[-41.24860382 65.27391815]
[-55.69454193 60.45366287]
[-66.92660522 50.16966248]
[-72.99877167 36.20367813]
[-72.85900116 20.97540474]
[-66.53150940 7.12322855]
[-55.11257935 -2.95287514]
[-40.58060074 -7.50716066]
[-25.45333290 -5.75057077]
[-12.35166168 2.01255488]
[-3.54553366 14.43720818]
[-0.56066340 29.37074280]
[-3.91419744 44.22583008]
[8.13391590 53.16131973]
[22.96566010 54.52828979]
[29.44095802 68.96369934]
[41.48907089 77.89919281]
[53.53718567 86.83467865]
[65.58529663 95.77017212]
[77.63340759 104.70565796]
[89.11091614 95.04818726]
[82.36675262 81.64981842]
[75.62258148 68.25145721]
[63.10038757 56.82206345]
[70.61663055 41.62527084]
[87.30023193 44.64088821]
[89.02094269 61.50728607]
[95.76511383 74.90565491]
[102.50928497 88.30401611]
[116.66318512 83.33742523]
[113.55651855 68.66265869]
[110.44984436 53.98789978]
[97.06729126 45.58059692]
[93.63075256 30.15445900]
[102.17907715 16.86153793]
[117.64068604 13.58828926]
[130.84248352 22.27667427]
[133.95208740 37.77202606]
[125.12460327 50.88122940]
[128.23127747 65.55599213]
[131.33795166 80.23075104]
[137.75126648 93.79058838]
[147.12416077 105.50164795]
[156.49705505 117.21270752]
[165.86994934 128.92376709]
[175.24284363 140.63482666]
[192.67488098 142.25354004]
[203.32177734 155.72251892]
[200.96635437 172.38754272]
[210.48225403 183.98271179]
[219.99815369 195.57786560]
[229.51405334 207.17301941]
[239.02995300 218.76817322]
[255.63130188 217.54928589]
[269.59805298 226.19956970]
[275.73809814 241.20291138]
[290.44989014 244.12927246]
[305.16168213 247.05561829]
[319.87344360 249.98197937]
[323.51440430 243.49578857]
[328.38327026 237.88737488]
[334.27578735 233.38502502]
[340.94625854 230.17077637]
[348.11761475 228.37309265]
[355.49304199 228.06169128]
[362.76818848 229.24487305]
[369.64382935 231.86936951]
[375.83801270 235.82269287]
[381.09777832 240.93801880]
[385.20941162 247.00112915]
[388.00708008 253.75946045]
[389.37966919 260.93258667]
[389.27499390 268.22387695]
[403.51794434 272.92907715]
[417.76086426 277.63430786]
[432.00378418 282.33953857]
[446.24670410 287.04476929]
[460.48962402 291.75000000]
[474.73254395 296.45523071]
[489.00405884 301.07296753]
[503.30364990 305.60305786]
[517.60327148 310.13314819]
[531.90283203 314.66323853]
[546.20245361 319.19332886]
[561.69494629 315.98504639]
[571.49121094 327.20477295]
[585.79077148 331.73486328]
[599.69427490 324.71127319]
[614.13159180 329.50915527]
[620.74182129 342.80728149]
[635.04138184 347.33737183]
[649.34100342 351.86746216]
[663.64056396 356.39755249]
[677.94018555 360.92764282]
[684.42272949 359.88812256]
[689.67987061 361.95046997]
[692.53265381 365.74835205]
[706.71673584 370.62799072]
[720.90087891 375.50765991]
[735.08496094 380.38729858]
[749.26910400 385.26696777]
[753.43743896 384.30548096]
[757.31121826 384.66732788]
[760.51440430 386.10125732]
[762.78985596 388.26062012]
[764.01928711 390.74975586]
[777.94683838 396.31951904]
[791.87445068 401.88928223]
[805.80206299 407.45904541]
[819.76354980 412.94323730]
[833.75842285 418.34164429]
[847.75335693 423.74008179]
[861.81341553 428.96636963]
[875.93658447 434.01971436]
[890.05975342 439.07305908]
[904.18292236 444.12640381]
[913.28790283 444.06817627]
[918.44775391 449.32940674]
[932.50781250 454.55566406]
[946.56787109 459.78195190]
[962.63781738 456.51245117]
[973.30010986 468.97225952]
[967.58636475 484.34381104]
[951.37432861 486.81417847]
[941.34161377 473.84204102]
[927.28155518 468.61575317]
[913.22143555 463.38946533]
[899.12957764 458.24957275]
[885.00640869 453.19622803]
[870.88323975 448.14288330]
[856.76007080 443.08953857]
[852.15966797 444.27206421]
[846.76654053 442.59729004]
[842.35491943 437.73498535]
[828.36004639 432.33654785]
[814.36511230 426.93811035]
[807.01458740 427.46154785]
[800.23229980 421.38662720]
[786.30468750 415.81686401]
[772.37713623 410.24710083]
[758.44952393 404.67736816]
[744.38940430 399.45108032]
[730.20532227 394.57141113]
[716.02124023 389.69177246]
[701.83709717 384.81210327]
[687.65301514 379.93246460]
[673.41009521 375.22723389]
[659.11047363 370.69714355]
[644.81091309 366.16705322]
[630.51129150 361.63696289]
[616.21173096 357.10687256]
[603.15008545 364.17300415]
[588.58374023 359.78256226]
[581.26068115 346.03445435]
[566.96112061 341.50436401]
[552.49139404 345.03665161]
[541.67236328 333.49291992]
[527.37274170 328.96282959]
[513.07318115 324.43273926]
[498.77355957 319.90264893]
[484.47396851 315.37255859]
[477.16937256 316.34573364]
[470.02731323 310.69815063]
[455.78439331 305.99291992]
[441.54147339 301.28768921]
[427.29855347 296.58245850]
[413.05563354 291.87722778]
[398.81271362 287.17199707]
[384.56979370 282.46679688]
[367.33914185 297.69747925]
[344.28012085 299.38980103]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 143]
[2 142]
[3 141]
[4 140]
[6 58]
[7 57]
[8 56]
[9 55]
[10 54]
[11 53]
[16 49]
[17 48]
[18 47]
[21 44]
[22 43]
[23 42]
[24 41]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 104]
[77 103]
[78 102]
[79 101]
[80 100]
[82 98]
[83 97]
[105 113]
[106 112]
[107 111]
[114 125]
[115 124]
[116 123]
[157 253]
[158 252]
[159 251]
[160 250]
[161 249]
[162 248]
[163 247]
[164 245]
[165 244]
[166 243]
[167 242]
[168 241]
[170 239]
[171 238]
[174 235]
[175 234]
[176 233]
[177 232]
[178 231]
[181 230]
[182 229]
[183 228]
[184 227]
[185 226]
[190 225]
[191 224]
[192 223]
[193 222]
[194 220]
[195 219]
[196 218]
[197 215]
[198 214]
[199 213]
[200 212]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
