%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUAGGAGACAGGAGACCUCUAAAGACCCCAGAAAUAAAGGAUGACAAGCAGAGAGCCCCGGGCAGGAGGCAAAAGUCCUGUGUUCCAACUAUAGUCAUUUCUUUGCUGCAUGAUCUGAGUUAGGUCACCAGACUUCUCUGAGCCCCAGUUUCCCCAGCAGUGUAUACGGGCU\
) } def
/len { sequence length } bind def

/coor [
[351.39172363 141.63575745]
[336.54440308 139.50103760]
[321.69708252 137.36630249]
[306.84976196 135.23158264]
[292.00244141 133.09686279]
[278.30358887 138.94412231]
[265.74499512 129.32160950]
[250.89767456 127.18688965]
[236.05035400 125.05216980]
[221.20303345 122.91744995]
[206.33724976 120.91532135]
[191.45419312 119.04594421]
[176.57113647 117.17657471]
[161.68807983 115.30720520]
[146.80502319 113.43782806]
[131.92195129 111.56845856]
[120.10961151 127.35770416]
[101.51467133 133.91970825]
[82.40885162 129.04121399]
[69.23620605 114.36766052]
[54.57900238 117.55613708]
[39.92180252 120.74462128]
[25.26459694 123.93309784]
[23.24808311 140.42044067]
[15.73117542 155.20368958]
[3.63425398 166.51139832]
[-11.57467079 172.99526978]
[-28.05809975 173.89097595]
[-43.83103943 169.10818481]
[-57.00004196 159.23931885]
[-65.99050903 145.48628235]
[-80.52456665 149.19587708]
[-85.29885101 163.86590576]
[-97.26089478 173.60824585]
[-112.59365082 175.31414795]
[-126.40449524 168.43925476]
[-134.28643799 155.17733765]
[-133.72438049 139.76020813]
[-124.89767456 127.10743713]
[-110.62288666 121.25646210]
[-95.45504761 124.07431030]
[-84.23416901 134.66181946]
[-69.70010376 130.95222473]
[-69.05263519 117.46631622]
[-64.62004852 104.69541168]
[-56.75372696 93.68086243]
[-46.08543396 85.32364655]
[-33.47661972 80.31065369]
[-19.94883156 79.05827332]
[-6.60096455 81.67778015]
[5.48000860 87.96553040]
[15.30754948 97.41880035]
[22.07611847 109.27589417]
[36.73332214 106.08741760]
[51.39052582 102.89893341]
[66.04772949 99.71045685]
[67.33777618 90.72532654]
[70.96228027 82.40308380]
[60.16804886 71.98748779]
[49.37382126 61.57189560]
[38.48706436 51.25305176]
[27.50864601 41.03178406]
[11.48901749 40.16513824]
[2.29622912 27.01705170]
[6.98220110 11.67360973]
[21.95225716 5.90498829]
[35.72264862 14.13638020]
[37.72991562 30.05336571]
[48.70833206 40.27463531]
[55.76932907 42.53855896]
[59.78941345 50.77766800]
[70.58364105 61.19326019]
[81.37787628 71.60885620]
[91.98641968 67.00570679]
[103.52454376 66.22991943]
[114.65381622 69.37148285]
[124.08324432 76.06596375]
[130.71899414 85.53681183]
[133.79133606 96.68540192]
[148.67439270 98.55477142]
[163.55744934 100.42414093]
[178.44050598 102.29351807]
[193.32356262 104.16288757]
[208.20661926 106.03225708]
[217.14440918 103.99268341]
[223.33775330 108.07012177]
[238.18507385 110.20484924]
[253.03239441 112.33956909]
[267.87973022 114.47429657]
[282.64056396 108.77971649]
[294.13714600 118.24954224]
[308.98446655 120.38426208]
[323.83178711 122.51898956]
[338.67910767 124.65370941]
[353.52642822 126.78842926]
[368.39221191 128.79055786]
[383.27529907 130.65992737]
[398.15835571 132.52931213]
[413.04141235 134.39868164]
[421.14382935 119.63211823]
[434.25909424 109.12235260]
[450.36599731 104.45304108]
[466.99594116 106.31053925]
[481.61141968 114.38311768]
[491.99319458 127.41287231]
[496.57714844 143.39167786]
[511.51745605 144.72865295]
[526.45776367 146.06561279]
[541.39807129 147.40258789]
[556.33837891 148.73956299]
[571.27862549 150.07652283]
[582.21130371 137.19046021]
[598.50598145 133.38592529]
[613.70989990 139.96656799]
[621.92260742 154.16316223]
[636.88439941 155.23324585]
[651.84619141 156.30332947]
[666.84082031 156.70491028]
[681.83843994 156.43716431]
[695.49829102 148.45478821]
[708.36163330 155.96368408]
[723.35925293 155.69595337]
[734.29614258 144.60441589]
[749.50964355 144.54653931]
[760.01635742 155.04154968]
[775.01397705 154.77381897]
[790.01153564 154.50607300]
[805.00915527 154.23834229]
[820.00677490 153.97061157]
[833.77374268 145.05976868]
[848.24902344 152.76675415]
[848.54174805 169.16328430]
[834.35070801 177.38201904]
[820.27453613 168.96821594]
[805.27691650 169.23596191]
[790.27929688 169.50369263]
[775.28167725 169.77142334]
[760.28405762 170.03915405]
[750.15869141 180.90249634]
[734.95275879 181.38766479]
[723.62695312 170.69355774]
[708.62933350 170.96128845]
[696.04223633 178.92453003]
[682.10614014 171.43478394]
[667.10852051 171.70251465]
[675.77398682 183.94627380]
[671.78070068 198.40496826]
[658.05975342 204.46591187]
[644.68231201 197.68038940]
[641.46734619 183.02896118]
[650.77606201 171.26510620]
[635.81433105 170.19502258]
[620.85253906 169.12493896]
[613.22619629 180.10487366]
[601.06933594 185.92193604]
[587.51837158 184.95649719]
[576.12872314 177.35441589]
[569.94165039 165.01683044]
[555.00140381 163.67985535]
[540.06109619 162.34288025]
[525.12078857 161.00592041]
[510.18048096 159.66894531]
[495.24017334 158.33197021]
[489.84140015 170.47860718]
[480.94055176 180.38163757]
[469.39706421 187.06379700]
[456.33206177 189.85983276]
[443.01940918 188.48271179]
[430.76168823 183.05299377]
[420.76251221 174.08847046]
[414.00854492 162.45475769]
[411.17202759 149.28173828]
[396.28897095 147.41236877]
[381.40591431 145.54298401]
[366.52285767 143.67361450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 95]
[2 94]
[3 93]
[4 92]
[5 91]
[7 89]
[8 88]
[9 87]
[10 86]
[11 84]
[12 83]
[13 82]
[14 81]
[15 80]
[16 79]
[20 56]
[21 55]
[22 54]
[23 53]
[31 43]
[32 42]
[58 73]
[59 72]
[60 71]
[61 69]
[62 68]
[96 175]
[97 174]
[98 173]
[99 172]
[106 163]
[107 162]
[108 161]
[109 160]
[110 159]
[111 158]
[115 153]
[116 152]
[117 151]
[118 145]
[119 144]
[121 142]
[122 141]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
