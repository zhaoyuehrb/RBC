%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:21:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCGCCGCGCGCGCCUACCACACACUUUUCCCCGGUCCCUGCCGGCCACCUCCCCCGCCGGGCGCCGGCGCCAAUUGGAGCGCCUCGGGGGGCGGGGGAGGGGCGGAGCGCGCCUCUUGAUGGACGGCGGCAUUUCCGGCUCUCGCGAGUCUGGGUGGGAGCGCGCCAAAUUUCUCCCCUGAAGCAGAGGUGGUAGCCAACGGCUCC\
) } def
/len { sequence length } bind def

/coor [
[249.60256958 472.04138184]
[247.58906555 457.17715454]
[245.57557678 442.31289673]
[236.14414978 434.73751831]
[234.34541321 422.36978149]
[241.68345642 411.76181030]
[239.89253235 396.86911011]
[238.10162354 381.97640991]
[233.57321167 367.67626953]
[226.46517944 354.46734619]
[219.35714722 341.25842285]
[212.24911499 328.04946899]
[205.14108276 314.84054565]
[198.03306580 301.63162231]
[185.18856812 294.09051514]
[185.46253967 278.27166748]
[178.35450745 265.06274414]
[171.24647522 251.85380554]
[164.13844299 238.64486694]
[157.03041077 225.43594360]
[149.92237854 212.22700500]
[143.98413086 207.82614136]
[142.80850220 198.76687622]
[135.89886475 185.45309448]
[123.16862488 177.72067261]
[123.67919922 161.90771484]
[116.76956177 148.59391785]
[109.85992432 135.28013611]
[102.95028687 121.96634674]
[85.77147675 119.50661469]
[74.28216553 104.59719849]
[76.59564972 84.43695068]
[62.71608734 78.74856567]
[48.83652496 73.06018066]
[34.95695877 67.37180328]
[21.07739449 61.68341827]
[5.37385416 63.60939789]
[-3.46856380 51.62353516]
[-17.34812927 45.93515396]
[-31.22769356 40.24677277]
[-45.10725784 34.55839157]
[-58.98682022 28.87000847]
[-72.86638641 23.18162727]
[-85.04426575 27.43311501]
[-96.48776245 22.40892220]
[-101.28105927 11.30205059]
[-115.07397461 5.40667486]
[-128.86689758 -0.48870039]
[-138.71199036 4.13775396]
[-149.26074219 2.61315036]
[-157.06448364 -4.32010508]
[-159.70646667 -14.19189262]
[-173.31684875 -20.49725151]
[-186.92723083 -26.80261040]
[-200.53761292 -33.10796738]
[-219.76686096 -24.60054016]
[-238.75250244 -32.93194962]
[-245.32171631 -52.28681564]
[-259.28482056 -57.76692963]
[-273.24792480 -63.24704742]
[-287.21102905 -68.72715759]
[-301.17413330 -74.20727539]
[-315.13723755 -79.68739319]
[-332.09045410 -79.84569550]
[-336.63143921 -96.18019104]
[-322.19238281 -105.06555939]
[-309.65713501 -93.65049744]
[-295.69403076 -88.17037964]
[-281.73092651 -82.69026947]
[-267.76782227 -77.21015167]
[-253.80470276 -71.73003387]
[-239.84159851 -66.24992371]
[-232.83349609 -72.44905090]
[-223.99441528 -75.68941498]
[-214.52436829 -75.48618317]
[-205.72552490 -71.82511902]
[-198.82307434 -65.17032623]
[-194.79470825 -56.40585327]
[-194.23225403 -46.71834946]
[-180.62187195 -40.41299057]
[-167.01148987 -34.10763168]
[-153.40110779 -27.80227280]
[-134.32174683 -30.94037628]
[-122.97151947 -14.28161716]
[-109.17859650 -8.38624191]
[-95.38568115 -2.49086595]
[-78.10083008 -5.52224827]
[-67.17800140 9.30206299]
[-53.29843903 14.99044418]
[-39.41887665 20.67882729]
[-25.53931046 26.36720848]
[-11.65974617 32.05559158]
[2.21981812 37.74397278]
[16.93059921 35.41112137]
[26.76577568 47.80385590]
[40.64533997 53.49223709]
[54.52490616 59.18061829]
[68.40447235 64.86900330]
[82.28403473 70.55738068]
[96.51480865 65.81555176]
[104.20829773 52.93881607]
[111.90178680 40.06208420]
[119.59527588 27.18535423]
[127.28876495 14.30862236]
[127.72479248 -1.50657475]
[140.89466858 -8.46382999]
[148.58816528 -21.34056282]
[156.28164673 -34.21729279]
[163.97514343 -47.09402466]
[171.37776184 -60.14014435]
[178.48579407 -73.34907532]
[179.79681396 -82.38973236]
[185.80023193 -86.70127106]
[193.10507202 -99.80239868]
[200.40989685 -112.90351868]
[207.71473694 -126.00464630]
[214.92137146 -139.16003418]
[222.02940369 -152.36897278]
[229.13743591 -165.57791138]
[228.10626221 -181.94459534]
[241.91255188 -190.79437256]
[256.35357666 -183.02333069]
[256.57363892 -166.62565613]
[242.34635925 -158.46987915]
[235.23832703 -145.26094055]
[228.13029480 -132.05200195]
[227.72882080 -124.67168427]
[220.81585693 -118.69981384]
[213.51103210 -105.59868622]
[206.20619202 -92.49756622]
[198.90136719 -79.39643860]
[191.69473267 -66.24104309]
[184.58670044 -53.03211212]
[185.24560547 -49.56753159]
[184.25865173 -45.61164093]
[181.41320801 -41.94169998]
[176.85186768 -39.40053558]
[169.15838623 -26.52380562]
[161.46488953 -13.64707279]
[153.77140808 -0.77034110]
[153.88568115 14.12382603]
[140.16549683 22.00211143]
[132.47201538 34.87884140]
[124.77851868 47.75557709]
[117.08502960 60.63230896]
[109.39154053 73.50904083]
[121.97939301 85.87741089]
[124.05136871 102.11906433]
[116.26407623 115.05670929]
[123.17371368 128.37049866]
[130.08334351 141.68428040]
[136.99298096 154.99807739]
[150.21745300 163.68278503]
[149.21264648 178.54345703]
[156.12228394 191.85723877]
[163.13131714 205.11897278]
[170.23934937 218.32791138]
[177.34738159 231.53683472]
[184.45541382 244.74577332]
[191.56343079 257.95471191]
[198.67146301 271.16363525]
[212.02436829 279.64953613]
[211.24198914 294.52359009]
[218.35002136 307.73251343]
[225.45805359 320.94146729]
[232.56608582 334.15039062]
[239.67411804 347.35931396]
[246.78213501 360.56823730]
[246.87695312 345.56854248]
[247.87237549 330.60162354]
[255.24102783 317.53628540]
[267.53424072 308.94113159]
[282.33526611 306.50598145]
[296.73422241 310.70953369]
[307.90036011 320.72537231]
[313.63842773 334.58447266]
[312.82037354 349.56213379]
[305.60833740 362.71237183]
[291.45584106 357.74176025]
[301.49279785 368.88894653]
[311.61285400 379.96072388]
[321.81542969 390.95651245]
[332.01803589 401.95230103]
[347.22366333 409.45065308]
[344.22769165 426.13778687]
[327.36331177 427.87832642]
[321.02224731 412.15487671]
[310.81967163 401.15908813]
[300.61706543 390.16333008]
[293.76263428 387.39801025]
[290.34561157 378.92590332]
[280.30865479 367.77874756]
[273.48007202 370.88043213]
[252.99432373 380.18548584]
[254.78524780 395.07818604]
[256.57617188 409.97088623]
[267.96035767 424.44390869]
[260.43981934 440.29940796]
[262.45330811 455.16366577]
[264.46682739 470.02789307]
[278.70870972 475.77804565]
[288.15481567 487.88867188]
[290.26419067 503.10202026]
[284.46939087 517.32580566]
[272.32925415 526.73388672]
[257.10937500 528.79559326]
[242.90380859 522.95623779]
[233.53381348 510.78665161]
[231.51985168 495.56039429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[6 196]
[7 195]
[8 194]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[21 156]
[23 155]
[24 154]
[26 152]
[27 151]
[28 150]
[29 149]
[32 99]
[33 98]
[34 97]
[35 96]
[36 95]
[38 93]
[39 92]
[40 91]
[41 90]
[42 89]
[43 88]
[46 86]
[47 85]
[48 84]
[52 82]
[53 81]
[54 80]
[55 79]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[100 146]
[101 145]
[102 144]
[103 143]
[104 142]
[106 140]
[107 139]
[108 138]
[109 137]
[110 133]
[111 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 126]
[118 125]
[119 124]
[179 192]
[180 191]
[181 189]
[182 188]
[183 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
