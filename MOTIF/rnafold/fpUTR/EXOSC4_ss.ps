%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGCGGACCUCCGGAAACCGUAGAUUCCGGGCGGUCGGAGCCGCCGGGAGCUGUAGUUCUCCCGCGGCUCAGAGAAGUAGGCAGAGAGCGGACCUGGCGGCCGGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[-93.58566284 292.25512695]
[-101.32543182 292.30340576]
[-108.92090607 290.85995483]
[-116.08762360 287.98214722]
[-122.55780029 283.78106689]
[-128.09037781 278.41714478]
[-132.47998047 272.09402466]
[-146.69244385 276.89050293]
[-160.90489197 281.68695068]
[-175.11735535 286.48339844]
[-189.26051331 291.48049927]
[-203.33154297 296.67724609]
[-217.40258789 301.87396240]
[-231.47361755 307.07070923]
[-245.54464722 312.26745605]
[-259.61569214 317.46417236]
[-273.68670654 322.66091919]
[-277.76361084 337.63284302]
[-289.88320923 347.32275391]
[-305.38528442 348.00473022]
[-318.30899048 339.41647339]
[-323.68487549 324.86041260]
[-319.44580078 309.93359375]
[-307.22177124 300.37570190]
[-291.71319580 299.86193848]
[-278.88345337 308.58987427]
[-264.81240845 303.39315796]
[-250.74137878 298.19641113]
[-236.67034912 292.99966431]
[-222.59931946 287.80294800]
[-208.52828979 282.60620117]
[-194.45724487 277.40948486]
[-189.19621277 272.06192017]
[-179.91381836 272.27096558]
[-165.70135498 267.47448730]
[-151.48889160 262.67803955]
[-137.27644348 257.88156128]
[-133.47554016 234.42456055]
[-116.91197968 217.23974609]
[-93.40523529 212.53697205]
[-71.31283569 222.11007690]
[-59.51012421 212.85285950]
[-47.70740891 203.59565735]
[-35.90469360 194.33845520]
[-24.10197639 185.08123779]
[-12.29926109 175.82403564]
[-0.49654591 166.56681824]
[11.30616951 157.30961609]
[23.10888481 148.05241394]
[24.91025734 135.99806213]
[34.79549789 128.19967651]
[47.74069977 129.32238770]
[59.80065536 120.40288544]
[71.86061096 111.48339081]
[83.92057037 102.56389618]
[86.37477112 91.08514404]
[95.91005707 84.23947906]
[107.57089996 85.58462524]
[119.87844086 77.00997925]
[132.18597412 68.43534088]
[144.49351501 59.86069870]
[156.67848206 51.11275101]
[168.73844910 42.19325256]
[175.23289490 27.76644707]
[190.06643677 26.41915512]
[202.12638855 17.49965858]
[204.59912109 2.12034297]
[216.95669556 -6.75349712]
[231.60328674 -4.30134249]
[243.66323853 -13.22084045]
[252.80250549 -27.50055313]
[269.05416870 -22.67147446]
[268.91271973 -5.71811676]
[252.58274841 -1.16088307]
[240.52278137 7.75861454]
[238.57859802 22.48124123]
[226.47514343 31.69867897]
[211.04588318 29.55961418]
[198.98593140 38.47911072]
[193.35409546 52.26793671]
[177.65794373 54.25321198]
[165.59799194 63.17270660]
[162.03964233 69.77671814]
[153.06816101 72.16823578]
[140.76062012 80.74288177]
[128.45307922 89.31752014]
[116.14554596 97.89216614]
[109.49592590 113.22682953]
[92.84006500 114.62384796]
[80.78011322 123.54335022]
[68.72015381 132.46284485]
[56.66019821 141.38233948]
[49.79107666 158.39381409]
[32.36609268 159.85511780]
[20.56337738 169.11233521]
[8.76066208 178.36953735]
[-3.04205298 187.62675476]
[-14.84476852 196.88395691]
[-26.64748383 206.14115906]
[-38.45019913 215.39837646]
[-50.25291443 224.65557861]
[-62.05562973 233.91279602]
[-59.18342972 241.19151306]
[-57.77018738 248.87911987]
[-57.86572266 256.68646240]
[-59.46317673 264.32052612]
[-62.49937439 271.49548340]
[-66.85734558 277.94329834]
[-72.37079620 283.42379761]
[-78.83047485 287.73358154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 37]
[8 36]
[9 35]
[10 34]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[41 102]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[47 96]
[48 95]
[49 94]
[52 92]
[53 91]
[54 90]
[55 89]
[58 87]
[59 86]
[60 85]
[61 84]
[62 82]
[63 81]
[65 79]
[66 78]
[69 75]
[70 74]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
