%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCGAAUCGAACGUCCUUACGGGAGCCGGGCGCUGGCGGAGCGGCGCCCCGGCCAAUCAGCGGCAGUCCCCGAACGUUGGGCCGGCCCAGCCCCGCCCCGCGCUGUUGUUUGUGGUGUCGGCCGGGCCGCGGGAGUCGAACCACAACAUUCGCCGGGCGGGCGGCGGCGGAGCGGGCGGCGGAGCGGCGGCAGCAGCGGUGAGCGCGAGCCCCGGAGCCCCGGGCGGCCGGCCUCCCGCGCCCGCGCAGCCCCG\
CGUCUGCGUCCGGCCGGAGACGCCGGGCCCCGCGCCGCGCCGCGCC\
) } def
/len { sequence length } bind def

/coor [
[137.66520691 145.52182007]
[121.52504730 158.24569702]
[119.34821320 173.08689880]
[117.17137146 187.92810059]
[114.99453735 202.76930237]
[118.67825317 219.31822205]
[103.79582977 227.43917847]
[91.87238312 215.38645935]
[100.15332794 200.59246826]
[102.33016968 185.75126648]
[104.50700378 170.91006470]
[106.68384552 156.06884766]
[99.47773743 153.98991394]
[85.06552124 149.83201599]
[77.85941315 147.75308228]
[71.79639435 161.47312927]
[65.73338318 175.19319153]
[59.67037201 188.91323853]
[58.79858780 205.84475708]
[42.28742599 209.69415283]
[34.01771927 194.89387512]
[45.95031738 182.85021973]
[52.01333237 169.13017273]
[58.07634354 155.41012573]
[64.13935852 141.69006348]
[51.96752167 132.92385864]
[40.87620544 143.02250671]
[29.78488922 153.12115479]
[18.69357300 163.21980286]
[7.60225821 173.31845093]
[-3.48905706 183.41709900]
[-14.52769661 193.57330322]
[-25.51336098 203.78678894]
[-36.49902725 214.00027466]
[-47.48469162 224.21374512]
[-58.47035599 234.42723083]
[-58.79510880 250.22817993]
[-70.25540161 261.11108398]
[-86.05203247 260.61926270]
[-96.81315613 249.04457092]
[-96.15437317 233.25401306]
[-84.46653748 222.61587524]
[-68.68383789 223.44155884]
[-57.69816971 213.22808838]
[-46.71250534 203.01460266]
[-35.72684097 192.80111694]
[-24.74117661 182.58764648]
[-21.99558067 175.76562500]
[-13.58770657 172.32579041]
[-2.49639106 162.22714233]
[8.59492397 152.12849426]
[19.68623924 142.02984619]
[30.77755547 131.93119812]
[41.86886978 121.83254242]
[40.50200653 101.38648987]
[45.82794571 82.48722839]
[56.68783951 67.16602325]
[71.36257935 56.87290192]
[87.82147217 52.34397507]
[103.99290466 53.56548309]
[118.02181244 59.83351517]
[126.40395355 47.39407349]
[134.78610229 34.95463562]
[143.16824341 22.51519394]
[151.55038452 10.07575321]
[148.66224670 3.15414476]
[135.34243774 10.05216694]
[122.02262878 16.95018959]
[113.38368988 29.21268082]
[98.46479034 30.77039719]
[87.47908783 20.55696106]
[87.94714355 5.56426620]
[99.54854584 -3.94401884]
[114.34127045 -1.45870245]
[128.61361694 -6.07388783]
[142.88597107 -10.68907261]
[139.99783325 -17.61068153]
[125.26003265 -20.40300560]
[110.52222443 -23.19533157]
[95.78442383 -25.98765564]
[81.04661560 -28.77997971]
[66.30880737 -31.57230377]
[51.01559830 -25.65202522]
[38.41330338 -36.14555740]
[41.46608353 -52.25805283]
[57.03350449 -57.41436005]
[69.10113525 -46.31011200]
[83.83893585 -43.51778412]
[98.57674408 -40.72546005]
[113.31455231 -37.93313599]
[128.05235291 -35.14081192]
[142.79016113 -32.34848785]
[147.23634338 -38.38848114]
[160.57485962 -56.50846481]
[153.52972412 -69.75105286]
[146.48458862 -82.99363708]
[139.43945312 -96.23622131]
[132.39431763 -109.47880554]
[125.34918976 -122.72138977]
[112.03678894 -131.27070618]
[112.88989258 -146.14085388]
[105.84475708 -159.38343811]
[98.79962158 -172.62602234]
[87.02881622 -173.80819702]
[77.37615967 -180.43852234]
[72.15635681 -190.78756714]
[72.55370331 -202.25204468]
[78.35532379 -212.00933838]
[71.58721161 -225.39562988]
[64.81909180 -238.78192139]
[58.05097961 -252.16819763]
[51.41919327 -258.37658691]
[51.28290176 -265.72912598]
[44.65440369 -279.18508911]
[38.02590561 -292.64105225]
[31.39740753 -306.09701538]
[24.76890945 -319.55297852]
[18.20206070 -325.83001709]
[18.14226341 -333.18356323]
[11.65409851 -346.70776367]
[5.16593313 -360.23196411]
[-1.32223177 -373.75613403]
[-8.02062893 -387.17745972]
[-14.92762756 -400.49261475]
[-21.83462715 -413.80776978]
[-36.63226700 -420.00531006]
[-40.87422943 -435.47738647]
[-31.30644608 -448.35516357]
[-15.26849937 -448.75988770]
[-5.06332970 -436.38110352]
[-8.51947021 -420.71475220]
[-1.61247194 -407.39959717]
[5.29452658 -394.08444214]
[8.47683907 -392.67623901]
[11.15048981 -389.68270874]
[12.58924007 -385.35247803]
[12.20195770 -380.24432373]
[18.69012260 -366.72012329]
[25.17828751 -353.19592285]
[31.66645432 -339.67175293]
[38.22487259 -326.18148804]
[44.85337448 -312.72552490]
[51.48187256 -299.26956177]
[58.11037064 -285.81359863]
[64.73886871 -272.35763550]
[71.43726349 -258.93630981]
[78.20538330 -245.55003357]
[84.97349548 -232.16374207]
[91.74160767 -218.77746582]
[109.47171021 -214.08226013]
[118.24613953 -197.61163330]
[112.04220581 -179.67115784]
[119.08734131 -166.42857361]
[126.13247681 -153.18598938]
[138.94096375 -145.58387756]
[138.59176636 -129.76652527]
[145.63690186 -116.52394104]
[152.68203735 -103.28135681]
[159.72717285 -90.03877258]
[166.77230835 -76.79618835]
[173.81744385 -63.55360031]
[186.59480286 -55.69617462]
[201.59155273 -55.38411713]
[216.58831787 -55.07205963]
[231.58506775 -54.76000595]
[246.58181763 -54.44794846]
[261.57858276 -54.13589096]
[270.17437744 -57.07476425]
[276.72949219 -53.74177933]
[291.72216797 -53.27373886]
[306.71487427 -52.80569458]
[321.70910645 -71.65552521]
[351.45989990 -66.73187256]
[365.53140259 -71.92728424]
[379.60293579 -77.12270355]
[393.67446899 -82.31811523]
[407.74597168 -87.51353455]
[421.81750488 -92.70894623]
[435.88900757 -97.90436554]
[442.55957031 -111.98063660]
[456.90408325 -117.04907227]
[470.28256226 -110.60297394]
[484.35409546 -115.79839325]
[498.42559814 -120.99380493]
[512.49713135 -126.18922424]
[526.51385498 -131.53073120]
[540.47424316 -137.01776123]
[554.43463135 -142.50479126]
[568.39501953 -147.99183655]
[578.40838623 -160.24101257]
[593.08392334 -157.69561768]
[607.04431152 -163.18266296]
[597.07727051 -182.53924561]
[607.51525879 -209.54441833]
[620.68383789 -216.72692871]
[629.93743896 -232.67321777]
[647.46838379 -231.50631714]
[660.56152344 -238.82540894]
[673.65466309 -246.14451599]
[679.38745117 -261.12832642]
[694.71966553 -265.85101318]
[707.88970947 -256.68969727]
[708.79467773 -240.67219543]
[696.74035645 -230.08573914]
[680.97381592 -233.05136108]
[667.88061523 -225.73225403]
[654.78747559 -218.41316223]
[651.21160889 -206.88940430]
[640.40521240 -200.67481995]
[627.86639404 -203.55833435]
[614.69781494 -196.37582397]
[619.59954834 -182.19863892]
[624.50091553 -168.02272034]
[639.29357910 -170.50782776]
[654.08630371 -172.99295044]
[668.87902832 -175.47807312]
[681.17504883 -186.32885742]
[696.63183594 -180.84980774]
[699.34875488 -164.67729187]
[686.53088379 -154.44821167]
[671.36413574 -160.68536377]
[656.57141113 -158.20024109]
[641.77874756 -155.71511841]
[626.98602295 -153.23001099]
[612.53131104 -149.22225952]
[598.57092285 -143.73522949]
[589.55609131 -131.87852478]
[573.88201904 -134.03143311]
[559.92163086 -128.54440308]
[545.96124268 -123.05738068]
[532.00085449 -117.57034302]
[529.32086182 -113.67099762]
[524.18414307 -111.38695526]
[517.69256592 -112.11770630]
[503.62103271 -106.92228699]
[489.54949951 -101.72687531]
[475.47796631 -96.53145599]
[469.49838257 -82.93807220]
[455.30187988 -77.46872711]
[441.08444214 -83.83283997]
[427.01290894 -78.63742828]
[412.94137573 -73.44200897]
[398.86987305 -68.24659729]
[384.79833984 -63.05118179]
[370.72683716 -57.85576630]
[356.65530396 -52.66035080]
[354.87792969 -45.37400055]
[365.72109985 -35.00935745]
[351.32318115 -30.80129623]
[349.54577637 -23.51494408]
[359.64443970 -12.42362881]
[369.74310303 -1.33231366]
[379.84173584 9.75900173]
[394.85372925 14.75405407]
[397.70117188 29.37395096]
[407.79980469 40.46526718]
[417.89846802 51.55658340]
[427.99710083 62.64789963]
[438.09576416 73.73921204]
[448.19439697 84.83052826]
[463.20642090 89.82558441]
[466.05383301 104.44548035]
[476.15249634 115.53679657]
[491.94918823 116.02590179]
[502.71228027 127.59877777]
[502.05621338 143.38943481]
[490.37017822 154.02957153]
[474.58734131 153.20657349]
[464.07135010 141.40870667]
[465.06115723 125.63544464]
[454.96252441 114.54412842]
[440.67285156 110.34239960]
[437.10308838 94.92917633]
[427.00445557 83.83786011]
[416.90579224 72.74654388]
[406.80715942 61.65523148]
[396.70849609 50.56391525]
[386.60983276 39.47260284]
[372.32015991 35.27087402]
[368.75042725 19.85765076]
[358.65176392 8.76633549]
[348.55313110 -2.32497954]
[338.45446777 -13.41629505]
[314.66284180 -19.86928558]
[306.24682617 -37.81299973]
[291.25415039 -38.28104401]
[276.26144409 -38.74908447]
[261.26651001 -39.13913727]
[246.26976013 -39.45119476]
[231.27301025 -39.76325226]
[216.27626038 -40.07530594]
[201.27949524 -40.38736343]
[186.28274536 -40.69942093]
[163.98982239 18.45789719]
[155.60768127 30.89733696]
[147.22554016 43.33677673]
[138.84339905 55.77621841]
[130.46125793 68.21566010]
[141.94854736 78.72280121]
[149.61160278 93.40463257]
[151.94815063 110.80532837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 12]
[3 11]
[4 10]
[5 9]
[15 25]
[16 24]
[17 23]
[18 22]
[26 54]
[27 53]
[28 52]
[29 51]
[30 50]
[31 49]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[61 298]
[62 297]
[63 296]
[64 295]
[65 294]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[94 161]
[95 160]
[96 159]
[97 158]
[98 157]
[99 156]
[101 154]
[102 153]
[103 152]
[108 149]
[109 148]
[110 147]
[111 146]
[113 145]
[114 144]
[115 143]
[116 142]
[117 141]
[119 140]
[120 139]
[121 138]
[122 137]
[123 133]
[124 132]
[125 131]
[162 293]
[163 292]
[164 291]
[165 290]
[166 289]
[167 288]
[169 287]
[170 286]
[171 285]
[173 246]
[174 245]
[175 244]
[176 243]
[177 242]
[178 241]
[179 240]
[182 237]
[183 236]
[184 235]
[185 234]
[186 231]
[187 230]
[188 229]
[189 228]
[191 226]
[192 225]
[194 211]
[195 210]
[197 207]
[198 206]
[199 205]
[213 224]
[214 223]
[215 222]
[216 221]
[250 283]
[251 282]
[252 281]
[253 280]
[255 278]
[256 277]
[257 276]
[258 275]
[259 274]
[260 273]
[262 271]
[263 270]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
