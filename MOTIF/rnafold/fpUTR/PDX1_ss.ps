%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGCGCCGGGAGUGGGAACGCCACACAGUGCCAAAUCCCCGGCUCCAGCUCCCGACUCCCGGCUCCCGGCUCCCGGCUCCCGGUGCCCAAUCCCGGGCCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[89.17863464 102.86328888]
[75.84310150 95.99571228]
[62.50756836 89.12813568]
[53.74301147 93.28469849]
[44.19162750 92.85344696]
[36.07699585 88.06525421]
[31.22706223 80.15007019]
[30.66287422 71.02371979]
[17.97023201 63.03016663]
[5.27759027 55.03661728]
[-7.41505098 47.04306793]
[-20.10769272 39.04951477]
[-32.80033493 31.05596542]
[-45.49297714 23.06241608]
[-58.18561554 15.06886482]
[-70.87825775 7.07531404]
[-83.68477631 -0.73449957]
[-96.60250092 -8.35895443]
[-109.52022552 -15.98340893]
[-122.43795776 -23.60786438]
[-129.28199768 -24.06883049]
[-134.06086731 -27.48852921]
[-135.86215210 -32.06212997]
[-148.31916809 -40.41813660]
[-157.82237244 -33.77590561]
[-168.89315796 -30.42269516]
[-180.43096924 -30.67436981]
[-191.29420471 -34.48929977]
[-200.41323853 -41.47412109]
[-206.89567566 -50.92422867]
[-210.11373901 -61.89484787]
[-209.76493835 -73.29544830]
[-205.90054321 -83.99817657]
[-217.31364441 -93.73167419]
[-228.72676086 -103.46517181]
[-243.78038025 -99.70112610]
[-258.15884399 -105.53546143]
[-266.33334351 -118.72474670]
[-265.16058350 -134.19744873]
[-255.09155273 -146.00398254]
[-239.99798584 -149.60450745]
[-225.68367004 -143.61453247]
[-217.65272522 -130.33734131]
[-218.99325562 -114.87828064]
[-207.58015442 -105.14478302]
[-196.16703796 -95.41127777]
[-178.95677185 -102.73332214]
[-160.30981445 -100.47949982]
[-145.21229553 -89.17246246]
[-137.74108887 -71.76631927]
[-139.96315002 -52.87514877]
[-127.50614166 -44.51914215]
[-114.81349945 -36.52559280]
[-101.89577484 -28.90113640]
[-88.97804260 -21.27668190]
[-76.06031799 -13.65222740]
[-68.58707428 -12.95205021]
[-62.88470840 -5.61732769]
[-50.19206619 2.37622309]
[-37.49942398 10.36977386]
[-24.80678368 18.36332512]
[-12.11414242 26.35687447]
[0.57849950 34.35042572]
[13.27114105 42.34397507]
[25.96378326 50.33752823]
[38.65642548 58.33107758]
[59.17073441 57.06621552]
[69.37514496 75.79260254]
[82.71067810 82.66017914]
[96.04621124 89.52775574]
[109.47931671 96.20244598]
[123.00722504 102.68286133]
[136.53512573 109.16328430]
[150.06303406 115.64370728]
[162.56675720 112.09525299]
[173.74906921 117.89006042]
[177.79154968 129.39208984]
[191.12707520 136.25967407]
[204.46261597 143.12724304]
[217.79814148 149.99482727]
[227.01316833 151.17738342]
[231.41477966 157.25730896]
[244.54685974 164.50633240]
[260.36770630 164.40171814]
[267.77090454 177.32620239]
[280.90298462 184.57522583]
[294.89700317 177.87097168]
[310.15295410 180.70568848]
[320.80459595 191.98939514]
[322.75619507 207.38325500]
[315.25729370 220.96801758]
[301.19134521 227.52008057]
[285.96707153 224.52001953]
[275.43844604 213.12142944]
[273.65396118 197.70730591]
[260.52188110 190.45828247]
[245.64030457 191.08139038]
[237.29783630 177.63841248]
[224.16575623 170.38938904]
[210.93057251 163.33035278]
[197.59503174 156.46278381]
[184.25950623 149.59519958]
[170.92396545 142.72763062]
[153.53846741 144.57803345]
[143.58261108 129.17160034]
[130.05470276 122.69118500]
[116.52680206 116.21076965]
[102.99890137 109.73034668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 56]
[18 55]
[19 54]
[20 53]
[23 52]
[24 51]
[33 46]
[34 45]
[35 44]
[71 108]
[72 107]
[73 106]
[74 105]
[77 103]
[78 102]
[79 101]
[80 100]
[82 99]
[83 98]
[85 96]
[86 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
