%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACCCUACCCAGAUCUCCUCCCCCAGGCCUGGUCUCCUCACAGGACGCCCCCUCCCCGCUCUUCCUGCCGGGUUUCCUCUUGCCUUUUCCUGUCCCCCACCCAGUGCUGGGAGCCGUGGCAGAGGCAAGAGCAGUGGAACUGACCCAGGCCAGUGGAGCCAGGGCCUCCGGGUGUGCCGGACCCGAAGCAGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[80.01692200 187.22599792]
[86.62168121 200.69361877]
[86.48885345 215.69303894]
[79.64659882 229.04158020]
[67.54676056 237.90689087]
[52.75673294 240.40789795]
[38.41473389 236.01391602]
[27.56392288 225.65728760]
[22.50667572 211.53552246]
[24.31599808 196.64523315]
[14.85770798 208.28742981]
[5.39941835 219.92962646]
[-4.05887175 231.57182312]
[-6.75532866 247.16154480]
[-20.78582191 252.16101074]
[-30.24411201 263.80319214]
[-39.70240402 275.44540405]
[-35.58009338 290.40487671]
[-41.06954193 304.91851807]
[-54.05994415 313.40551758]
[-69.55622101 312.60244751]
[-81.59974670 302.81811523]
[-85.55953217 287.81478882]
[-79.91296387 273.36157227]
[-66.83125305 265.01599121]
[-51.34460068 265.98712158]
[-41.88631058 254.34490967]
[-32.42802048 242.70271301]
[-30.40808296 227.94570923]
[-15.70106888 222.11352539]
[-6.24277878 210.47132874]
[3.21551132 198.82913208]
[12.67380142 187.18693542]
[8.56906891 180.90991211]
[0.35960394 168.35583496]
[-3.74512863 162.07879639]
[-18.20276070 166.07591248]
[-32.66039276 170.07301331]
[-47.11802673 174.07011414]
[-60.77325821 184.11854553]
[-74.20913696 173.77865601]
[-67.99274445 158.00549316]
[-51.11513138 159.61248779]
[-36.65750122 155.61538696]
[-22.19986725 151.61827087]
[-7.74223566 147.62117004]
[16.48236656 153.46893311]
[27.73603439 169.52297974]
[37.73757172 158.34400940]
[47.73910522 147.16503906]
[57.74063873 135.98606873]
[67.74217224 124.80710602]
[61.32641602 112.66150665]
[59.31706619 99.07327271]
[61.94306946 85.59062958]
[68.90522766 73.74976349]
[79.41027069 64.89981842]
[92.26127625 60.04912949]
[105.99402618 59.75038528]
[110.90004730 45.57537079]
[115.80606842 31.40036011]
[120.71208191 17.22534752]
[125.61810303 3.05033588]
[120.69329834 -8.87817001]
[125.07921600 -20.58792686]
[135.91136169 -25.98728180]
[141.04167175 -40.08267212]
[146.17196655 -54.17806244]
[151.19029236 -68.31370544]
[156.09631348 -82.48871613]
[160.88972473 -96.70220184]
[165.57022095 -110.95326996]
[170.25071716 -125.20433807]
[174.93122864 -139.45539856]
[179.61172485 -153.70646667]
[183.95176697 -168.06489563]
[187.94886780 -182.52252197]
[191.94596863 -196.98014832]
[195.36660767 -211.58493042]
[198.20536804 -226.31385803]
[201.04414368 -241.04278564]
[203.88290405 -255.77171326]
[206.72167969 -270.50064087]
[209.56044006 -285.22958374]
[212.39921570 -299.95849609]
[215.23799133 -314.68743896]
[218.07675171 -329.41638184]
[220.91552734 -344.14529419]
[215.92974854 -359.16036987]
[225.93586731 -370.19335938]
[228.77464294 -384.92227173]
[216.64356995 -400.92602539]
[220.12240601 -420.39465332]
[236.53143311 -430.87838745]
[238.66615295 -445.72570801]
[240.80088806 -460.57302856]
[242.93560791 -475.42034912]
[235.69459534 -492.34570312]
[247.06039429 -505.71081543]
[248.95927429 -520.59014893]
[250.85816956 -535.46948242]
[246.86558533 -551.94659424]
[261.59353638 -560.34448242]
[273.74029541 -548.51684570]
[265.73748779 -533.57055664]
[263.83859253 -518.69128418]
[261.93972778 -503.81195068]
[269.09359741 -494.04922485]
[267.62622070 -481.63143921]
[257.78292847 -473.28564453]
[255.64820862 -458.43832397]
[253.51347351 -443.59097290]
[251.37875366 -428.74365234]
[259.53021240 -422.47460938]
[264.37683105 -413.31344604]
[264.98251343 -402.88604736]
[261.17068481 -393.07467651]
[253.56823730 -385.67849731]
[243.50357056 -382.08352661]
[240.66481018 -367.35458374]
[245.85362244 -353.39300537]
[235.64445496 -341.30651855]
[232.80567932 -326.57760620]
[229.96691895 -311.84866333]
[227.12814331 -297.11975098]
[224.28938293 -282.39080811]
[221.45060730 -267.66186523]
[218.61184692 -252.93295288]
[215.77307129 -238.20401001]
[212.93429565 -223.47508240]
[210.09553528 -208.74615479]
[223.81632996 -214.80749512]
[237.18478394 -208.00424194]
[240.36039734 -193.34423828]
[231.00559998 -181.61872864]
[216.00645447 -181.45883179]
[206.40361023 -192.98304749]
[202.40649414 -178.52542114]
[198.40939331 -164.06777954]
[199.82887268 -160.82917786]
[199.74378967 -156.74021912]
[197.77078247 -152.51849365]
[193.86279297 -149.02597046]
[189.18229675 -134.77490234]
[184.50178528 -120.52383423]
[179.82128906 -106.27277374]
[175.14079285 -92.02170563]
[176.04142761 -84.67801666]
[170.27131653 -77.58270264]
[165.36529541 -63.40768814]
[166.14930725 -56.05063629]
[160.26736450 -49.04776001]
[155.13705444 -34.95236969]
[150.00675964 -20.85697937]
[153.98483276 -3.76948333]
[139.79312134 7.95635509]
[134.88710022 22.13136673]
[129.98107910 36.30638123]
[125.07505798 50.48139191]
[120.16903687 64.65640259]
[135.83709717 80.72146606]
[140.60716248 102.64910126]
[133.02865601 123.77114105]
[143.37985229 134.62715149]
[153.73103333 145.48316956]
[159.97279358 147.71482849]
[163.59893799 152.10810852]
[164.23162842 156.85168457]
[174.23316956 168.03065491]
[184.23469543 179.20962524]
[194.23623657 190.38859558]
[204.23777771 201.56755066]
[220.11181641 203.89009094]
[228.06849670 217.82102966]
[222.00411987 232.67373657]
[206.57077026 237.05448914]
[193.60757446 227.60275269]
[193.05880737 211.56909180]
[183.05726624 200.39012146]
[173.05574036 189.21116638]
[163.05419922 178.03219604]
[153.05265808 166.85322571]
[142.87501526 155.83435059]
[132.52383423 144.97833252]
[122.17265320 134.12232971]
[116.44923401 137.22073364]
[110.30506134 139.36706543]
[103.89730072 140.50642395]
[97.38984680 140.60969543]
[90.94915771 139.67419434]
[84.73998260 137.72389221]
[78.92114258 134.80863953]
[68.91960907 145.98760986]
[58.91807175 157.16658020]
[48.91653824 168.34553528]
[38.91500092 179.52450562]
[53.33256912 175.38522339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 33]
[11 32]
[12 31]
[13 30]
[15 28]
[16 27]
[17 26]
[36 46]
[37 45]
[38 44]
[39 43]
[48 196]
[49 195]
[50 194]
[51 193]
[52 192]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[66 154]
[67 153]
[68 152]
[69 150]
[70 149]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 139]
[77 138]
[78 137]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[90 120]
[91 119]
[94 113]
[95 112]
[96 111]
[97 110]
[99 107]
[100 106]
[101 105]
[163 185]
[164 184]
[165 183]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
