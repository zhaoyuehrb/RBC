%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MAS1L)
} def

/sequence { (\
AUGGACCACUGCUCCUGACUGUGAUGUUGUGGCCCACUCAGGUCCCAGCACCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.031297497 ubox
1 25 0.007554918 ubox
2 8 0.020579147 ubox
2 11 0.018709425 ubox
2 17 0.019494663 ubox
2 21 0.032483486 ubox
2 24 0.009349179 ubox
2 36 0.497279919 ubox
2 40 0.006912697 ubox
2 47 0.106903333 ubox
2 50 0.011952799 ubox
3 7 0.023307124 ubox
3 10 0.039864154 ubox
3 13 0.017853730 ubox
3 14 0.017529282 ubox
3 15 0.371524019 ubox
3 16 0.020567163 ubox
3 20 0.031810757 ubox
3 25 0.006968804 ubox
3 34 0.175247617 ubox
3 35 0.571663550 ubox
3 39 0.005438896 ubox
3 45 0.363656558 ubox
3 46 0.098063559 ubox
3 49 0.010598318 ubox
3 52 0.185182294 ubox
3 53 0.230683025 ubox
3 54 0.137489686 ubox
4 9 0.042364454 ubox
4 12 0.019753979 ubox
4 13 0.016622086 ubox
4 14 0.372119450 ubox
4 15 0.021043497 ubox
4 19 0.032018234 ubox
4 28 0.003996691 ubox
4 33 0.178138473 ubox
4 34 0.570416506 ubox
4 38 0.003680384 ubox
4 39 0.005030660 ubox
4 44 0.370908088 ubox
4 45 0.071769886 ubox
4 51 0.185438074 ubox
4 52 0.230858142 ubox
4 53 0.138679820 ubox
5 13 0.356827581 ubox
5 22 0.015584970 ubox
5 27 0.005106679 ubox
5 38 0.005049229 ubox
5 43 0.376801020 ubox
6 21 0.015684127 ubox
6 26 0.005101479 ubox
6 32 0.598597664 ubox
6 42 0.376035492 ubox
7 17 0.038060511 ubox
7 21 0.013188803 ubox
7 23 0.484595110 ubox
7 26 0.007403438 ubox
7 31 0.599318319 ubox
7 41 0.374818718 ubox
8 16 0.035704455 ubox
8 20 0.012414711 ubox
8 22 0.485412364 ubox
8 25 0.013408891 ubox
8 27 0.006558992 ubox
8 30 0.599203911 ubox
9 21 0.485305799 ubox
9 26 0.007138419 ubox
9 29 0.598471615 ubox
9 32 0.013795702 ubox
9 41 0.017234802 ubox
9 48 0.169559201 ubox
10 17 0.018620906 ubox
10 21 0.006282692 ubox
10 23 0.104718111 ubox
10 26 0.007173553 ubox
10 31 0.013796019 ubox
10 36 0.328346371 ubox
10 40 0.033839235 ubox
10 47 0.170132348 ubox
10 50 0.194204833 ubox
11 16 0.012163642 ubox
11 20 0.036662569 ubox
11 22 0.150663067 ubox
11 25 0.009804226 ubox
11 27 0.567841520 ubox
11 28 0.010912068 ubox
11 30 0.014106679 ubox
11 33 0.100274456 ubox
11 35 0.337896347 ubox
11 39 0.034486320 ubox
11 46 0.169011164 ubox
11 49 0.211608227 ubox
12 21 0.153631175 ubox
12 26 0.585391820 ubox
12 29 0.014213417 ubox
12 32 0.100430878 ubox
12 48 0.211628673 ubox
13 24 0.509065871 ubox
13 31 0.078358020 ubox
13 32 0.025890205 ubox
13 47 0.208834140 ubox
14 23 0.515956165 ubox
14 31 0.065011517 ubox
14 32 0.357175294 ubox
14 42 0.266691172 ubox
15 31 0.357342279 ubox
15 32 0.017658183 ubox
15 41 0.267237356 ubox
16 23 0.025424523 ubox
16 29 0.281413388 ubox
16 31 0.016691772 ubox
16 36 0.005368134 ubox
16 40 0.268190685 ubox
16 50 0.022057083 ubox
17 22 0.032634255 ubox
17 25 0.003555714 ubox
17 28 0.376412553 ubox
17 30 0.006246957 ubox
17 35 0.005537269 ubox
17 39 0.268196477 ubox
17 44 0.065231711 ubox
17 49 0.024834648 ubox
18 27 0.380473935 ubox
18 30 0.020793968 ubox
18 38 0.256761417 ubox
18 43 0.065402089 ubox
19 26 0.380819857 ubox
19 29 0.021898820 ubox
19 32 0.009712896 ubox
19 41 0.005934497 ubox
19 42 0.065302579 ubox
19 48 0.027351923 ubox
20 26 0.003232032 ubox
20 31 0.009599018 ubox
20 36 0.069975256 ubox
20 40 0.006943972 ubox
20 41 0.059910944 ubox
20 47 0.027385119 ubox
20 50 0.004855683 ubox
21 25 0.007412228 ubox
21 27 0.003455003 ubox
21 28 0.003955367 ubox
21 30 0.007885659 ubox
21 33 0.082233718 ubox
21 35 0.064926845 ubox
21 37 0.243638805 ubox
21 39 0.006763807 ubox
21 46 0.027362837 ubox
21 49 0.005092437 ubox
21 51 0.052967138 ubox
22 29 0.005647489 ubox
22 31 0.006013777 ubox
22 32 0.084523381 ubox
22 36 0.245170170 ubox
22 40 0.055414615 ubox
22 48 0.004855839 ubox
22 50 0.043199575 ubox
23 28 0.004503265 ubox
23 30 0.004727712 ubox
23 35 0.244646928 ubox
23 39 0.061281510 ubox
23 44 0.027079462 ubox
23 49 0.027601430 ubox
24 30 0.083760554 ubox
24 38 0.060608415 ubox
24 43 0.027122412 ubox
25 29 0.077605259 ubox
25 31 0.024658721 ubox
25 36 0.031571297 ubox
25 40 0.014486264 ubox
25 42 0.026616304 ubox
25 47 0.008889580 ubox
25 50 0.564149557 ubox
26 30 0.012808268 ubox
26 33 0.172418467 ubox
26 35 0.032037949 ubox
26 37 0.043325731 ubox
26 39 0.015528057 ubox
26 46 0.009396970 ubox
26 49 0.649136959 ubox
26 51 0.009310214 ubox
27 32 0.164446619 ubox
27 36 0.039695067 ubox
27 41 0.006045619 ubox
27 48 0.649440748 ubox
27 50 0.008597018 ubox
28 36 0.020181533 ubox
28 40 0.008993654 ubox
28 47 0.649260745 ubox
28 50 0.008288893 ubox
29 35 0.025966049 ubox
29 37 0.053989290 ubox
29 39 0.009210626 ubox
29 46 0.649227557 ubox
29 49 0.010425699 ubox
30 36 0.054050144 ubox
30 40 0.009286234 ubox
30 47 0.009131516 ubox
30 48 0.009553124 ubox
31 35 0.053242660 ubox
31 38 0.008176875 ubox
31 39 0.010540897 ubox
31 44 0.541814552 ubox
31 45 0.355213556 ubox
31 46 0.009703053 ubox
32 37 0.009558054 ubox
32 38 0.008247653 ubox
32 43 0.545190888 ubox
32 44 0.353996308 ubox
32 45 0.009372568 ubox
33 42 0.595434985 ubox
34 41 0.593401656 ubox
34 42 0.262411482 ubox
35 41 0.264552208 ubox
36 43 0.037311671 ubox
37 42 0.044305538 ubox
37 48 0.033385584 ubox
38 47 0.033130484 ubox
41 52 0.549985974 ubox
41 53 0.087952851 ubox
41 54 0.039149380 ubox
42 49 0.061334963 ubox
42 51 0.551788977 ubox
42 52 0.084125874 ubox
42 53 0.039211289 ubox
43 48 0.058880029 ubox
43 50 0.521626485 ubox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
41 52 0.9500000 lbox
42 51 0.9500000 lbox
43 50 0.9500000 lbox
showpage
end
%%EOF
