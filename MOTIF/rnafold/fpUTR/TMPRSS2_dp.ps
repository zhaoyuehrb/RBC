%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMPRSS2)
} def

/sequence { (\
ACCAGGGUCCCGGCUCGGGGUCCGGGCUGGGGAGGGGAACCUGGGCGCCUGGGACCCGCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.009842178 ubox
2 7 0.012205906 ubox
2 13 0.004579221 ubox
2 26 0.004442748 ubox
2 30 0.016744567 ubox
2 35 0.007308156 ubox
2 36 0.009200202 ubox
2 37 0.009121194 ubox
2 44 0.027958943 ubox
2 45 0.003247550 ubox
2 52 0.181316856 ubox
2 53 0.012127397 ubox
3 12 0.004591991 ubox
3 25 0.004446063 ubox
3 29 0.016780844 ubox
3 34 0.008482139 ubox
3 35 0.009522362 ubox
3 36 0.009156172 ubox
3 43 0.033893059 ubox
3 51 0.182588922 ubox
3 52 0.010801099 ubox
4 28 0.016631958 ubox
4 42 0.033810552 ubox
4 50 0.182593910 ubox
5 11 0.011509901 ubox
5 16 0.006289878 ubox
5 23 0.005773012 ubox
5 27 0.016371741 ubox
5 41 0.033603294 ubox
5 42 0.004282512 ubox
5 49 0.182448232 ubox
5 50 0.010100265 ubox
5 56 0.003198189 ubox
5 57 0.963910412 ubox
5 60 0.057071304 ubox
6 10 0.011422775 ubox
6 15 0.006395129 ubox
6 22 0.005875084 ubox
6 23 0.008877837 ubox
6 40 0.033300726 ubox
6 41 0.005892856 ubox
6 48 0.181985313 ubox
6 49 0.013720771 ubox
6 56 0.965108117 ubox
6 57 0.005118241 ubox
6 59 0.056566142 ubox
6 60 0.119140574 ubox
7 14 0.006419753 ubox
7 21 0.005593086 ubox
7 22 0.008883176 ubox
7 40 0.006971466 ubox
7 46 0.149987318 ubox
7 48 0.016117403 ubox
7 55 0.965130690 ubox
7 56 0.003663277 ubox
7 59 0.119225187 ubox
8 13 0.006112756 ubox
8 20 0.007672746 ubox
8 32 0.136220009 ubox
8 33 0.020422450 ubox
8 37 0.006633773 ubox
8 38 0.015068553 ubox
8 39 0.006747690 ubox
8 44 0.006301294 ubox
8 45 0.140149691 ubox
8 47 0.016435319 ubox
8 54 0.964994874 ubox
8 58 0.107443153 ubox
9 19 0.008383426 ubox
9 20 0.007227106 ubox
9 26 0.014094867 ubox
9 31 0.238662469 ubox
9 32 0.024065939 ubox
9 36 0.005860887 ubox
9 37 0.017453534 ubox
9 44 0.071822584 ubox
9 45 0.017906968 ubox
9 52 0.005285332 ubox
9 53 0.965012601 ubox
10 18 0.008503026 ubox
10 19 0.007325263 ubox
10 25 0.014114316 ubox
10 30 0.248911941 ubox
10 31 0.020423289 ubox
10 35 0.005752333 ubox
10 36 0.016811265 ubox
10 43 0.047870756 ubox
10 44 0.017323321 ubox
10 51 0.006910290 ubox
10 52 0.964970754 ubox
11 17 0.008543295 ubox
11 18 0.007316367 ubox
11 24 0.014120772 ubox
11 29 0.253992506 ubox
11 30 0.015463566 ubox
11 34 0.005625531 ubox
11 35 0.016142469 ubox
11 43 0.016647855 ubox
11 47 0.005283786 ubox
11 51 0.964291496 ubox
11 61 0.049888027 ubox
12 16 0.010858588 ubox
12 22 0.007784837 ubox
12 23 0.014812039 ubox
12 28 0.258325356 ubox
12 46 0.008786201 ubox
12 49 0.633036397 ubox
12 50 0.704058832 ubox
12 56 0.007962887 ubox
12 60 0.054405218 ubox
13 21 0.008118030 ubox
13 22 0.014733696 ubox
13 27 0.259542369 ubox
13 46 0.499761867 ubox
13 48 0.633995693 ubox
13 49 0.348120658 ubox
13 55 0.007977290 ubox
13 59 0.054394737 ubox
14 20 0.015619531 ubox
14 25 0.007109513 ubox
14 26 0.260190172 ubox
14 31 0.004644437 ubox
14 32 0.007122884 ubox
14 44 0.007596229 ubox
14 45 0.564984794 ubox
14 47 0.635106321 ubox
14 53 0.008402087 ubox
14 58 0.052349712 ubox
15 19 0.014218787 ubox
15 25 0.287719843 ubox
15 30 0.004910950 ubox
15 31 0.007181592 ubox
15 44 0.593397638 ubox
15 45 0.558027447 ubox
15 51 0.003642127 ubox
15 52 0.008834846 ubox
16 24 0.299431037 ubox
16 25 0.006464575 ubox
16 29 0.005053001 ubox
16 30 0.007201755 ubox
16 43 0.606741693 ubox
16 44 0.566425218 ubox
16 47 0.009733836 ubox
16 51 0.019767182 ubox
16 58 0.015134760 ubox
17 23 0.299668433 ubox
17 28 0.005076256 ubox
17 41 0.012399089 ubox
17 42 0.606743781 ubox
17 46 0.006217098 ubox
17 49 0.388895057 ubox
17 50 0.057363177 ubox
17 57 0.035852922 ubox
18 22 0.294831496 ubox
18 27 0.005083192 ubox
18 28 0.007082216 ubox
18 40 0.012543058 ubox
18 41 0.606978350 ubox
18 42 0.564992653 ubox
18 48 0.443916693 ubox
18 49 0.065252259 ubox
18 56 0.035889327 ubox
18 57 0.041602643 ubox
19 27 0.007068793 ubox
19 40 0.605765092 ubox
19 41 0.567314656 ubox
19 48 0.067486804 ubox
19 55 0.035759878 ubox
19 56 0.041768848 ubox
20 40 0.567707461 ubox
20 46 0.464759579 ubox
20 55 0.041873452 ubox
21 31 0.010552205 ubox
21 32 0.023797228 ubox
21 33 0.035722606 ubox
21 36 0.047671668 ubox
21 37 0.114502209 ubox
21 38 0.619426072 ubox
21 39 0.405332097 ubox
21 45 0.464681565 ubox
21 53 0.023291783 ubox
21 54 0.040172543 ubox
22 30 0.020599556 ubox
22 31 0.046614412 ubox
22 32 0.045861815 ubox
22 35 0.070052102 ubox
22 36 0.145681879 ubox
22 37 0.810398575 ubox
22 44 0.464831809 ubox
22 52 0.042615514 ubox
22 53 0.035065592 ubox
23 29 0.020670588 ubox
23 30 0.046858350 ubox
23 31 0.045826290 ubox
23 34 0.070441221 ubox
23 35 0.148772389 ubox
23 36 0.808602780 ubox
23 43 0.464828090 ubox
23 51 0.046925976 ubox
23 52 0.028998479 ubox
24 28 0.013033360 ubox
24 41 0.023248558 ubox
24 42 0.463570414 ubox
24 49 0.020245373 ubox
24 50 0.050514069 ubox
25 40 0.023560544 ubox
25 41 0.463741326 ubox
25 48 0.020818951 ubox
25 49 0.051582896 ubox
25 50 0.007005607 ubox
26 40 0.462543132 ubox
26 46 0.149440202 ubox
26 48 0.051484572 ubox
26 49 0.006362774 ubox
27 34 0.592261104 ubox
27 35 0.202684889 ubox
27 36 0.270587827 ubox
27 37 0.230355461 ubox
27 44 0.027682328 ubox
27 45 0.149099230 ubox
27 47 0.050346806 ubox
28 33 0.589929183 ubox
28 34 0.200231465 ubox
28 35 0.269075409 ubox
28 36 0.230678172 ubox
28 43 0.032617747 ubox
28 44 0.148132507 ubox
28 47 0.012293173 ubox
29 41 0.007360565 ubox
29 42 0.043012065 ubox
29 46 0.044635409 ubox
29 49 0.028946058 ubox
29 50 0.015491223 ubox
30 40 0.008068953 ubox
30 41 0.048247533 ubox
30 42 0.146889806 ubox
30 48 0.028993719 ubox
30 49 0.016485773 ubox
30 50 0.015947085 ubox
31 40 0.048576877 ubox
31 41 0.147109149 ubox
31 48 0.016433169 ubox
31 49 0.016971908 ubox
31 60 0.044979129 ubox
32 40 0.146732591 ubox
32 48 0.016987776 ubox
32 59 0.051642602 ubox
33 42 0.188952423 ubox
33 50 0.003839874 ubox
34 41 0.193863568 ubox
34 42 0.021180548 ubox
34 49 0.003950416 ubox
34 57 0.092156805 ubox
34 60 0.054828316 ubox
35 40 0.193824959 ubox
35 41 0.022306406 ubox
35 42 0.005743058 ubox
35 48 0.003943797 ubox
35 56 0.092107759 ubox
35 57 0.135666874 ubox
35 59 0.054484420 ubox
36 40 0.022006058 ubox
36 41 0.005886979 ubox
36 55 0.091887982 ubox
36 56 0.136087664 ubox
36 57 0.055787934 ubox
37 55 0.136156479 ubox
37 56 0.055792873 ubox
40 52 0.129905390 ubox
40 53 0.115736401 ubox
41 51 0.129562736 ubox
41 52 0.115942127 ubox
41 53 0.004412892 ubox
42 51 0.115284339 ubox
42 52 0.004445555 ubox
43 49 0.126050225 ubox
43 50 0.116387878 ubox
43 57 0.010238592 ubox
44 48 0.124361733 ubox
44 49 0.116712889 ubox
44 50 0.007368392 ubox
44 56 0.010249088 ubox
44 60 0.028410299 ubox
45 49 0.007789578 ubox
45 55 0.010217079 ubox
45 59 0.031159866 ubox
46 58 0.031179896 ubox
47 57 0.030079091 ubox
47 59 0.004687907 ubox
48 58 0.004718157 ubox
50 58 0.004256832 ubox
50 61 0.012443184 ubox
51 57 0.008023224 ubox
51 60 0.022741929 ubox
52 56 0.008177620 ubox
52 59 0.022822902 ubox
52 60 0.018932650 ubox
53 59 0.022123121 ubox
5 57 0.9500000 lbox
6 56 0.9500000 lbox
7 55 0.9500000 lbox
8 54 0.9500000 lbox
9 53 0.9500000 lbox
10 52 0.9500000 lbox
11 51 0.9500000 lbox
12 50 0.9500000 lbox
13 46 0.9500000 lbox
14 45 0.9500000 lbox
15 44 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
showpage
end
%%EOF
