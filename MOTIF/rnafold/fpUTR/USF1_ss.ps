%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCCCUCACCAACAUGGCCGCGGGCUGGAAGUGCGCAUGAGCAGCUGUCUAUGGAGAUACCUAGGCCGGGAGAGGGAGAACACAGUUGGAGAAAAUCGGCAGCUGAGACGGCCUUGGCCGGACUUAGCACUCAGGCCUGUGAAUCAGGAGAUACAAAGACCUCCAAAAAAGGACCAGUUCCUCGGAUGUGCCCCCUCACAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[-42.98210144 635.02642822]
[-48.72235489 648.88464355]
[-54.46260452 662.74279785]
[-60.20285797 676.60101318]
[-57.37546539 694.79571533]
[-71.70184326 704.92919922]
[-77.23213959 718.87249756]
[-67.63648987 730.86492920]
[-65.33850861 746.05096436]
[-70.95633698 760.34558105]
[-82.97882080 769.90356445]
[-98.17195129 772.15393066]
[-112.44887543 766.49133301]
[-121.96915436 754.43896484]
[-124.17189026 739.23883057]
[-118.46455383 724.97973633]
[-106.38239288 715.49725342]
[-91.17544556 713.34222412]
[-85.64514923 699.39886475]
[-90.15326691 688.17218018]
[-85.65815735 676.50964355]
[-74.06105042 670.86077881]
[-68.32080078 657.00256348]
[-62.58054733 643.14434814]
[-56.84029770 629.28619385]
[-61.76555634 608.21142578]
[-43.81174850 594.80438232]
[-38.91870880 580.62487793]
[-34.02566528 566.44537354]
[-40.75663757 553.20794678]
[-35.99638748 538.75823975]
[-22.06611252 531.78790283]
[-17.17307091 517.60845947]
[-22.23066521 498.94683838]
[-6.81193209 485.96362305]
[-2.34938622 471.64282227]
[2.11315942 457.32199097]
[6.57570553 443.00119019]
[11.03825092 428.68038940]
[15.50079727 414.35955811]
[19.74654388 399.97299194]
[23.77452087 385.52392578]
[27.80249977 371.07485962]
[23.76706123 356.73733521]
[34.92596436 345.52175903]
[38.95394135 331.07269287]
[42.98191833 316.62362671]
[47.00989914 302.17456055]
[51.03787613 287.72549438]
[54.95662308 273.24642944]
[58.76591110 258.73818970]
[62.57520294 244.22993469]
[54.83941650 224.01705933]
[70.81072998 208.30064392]
[73.73708344 193.58886719]
[76.66343689 178.87709045]
[79.58979034 164.16531372]
[82.51614380 149.45353699]
[61.53647232 135.66362000]
[49.36846924 113.70348358]
[48.79972458 88.60398865]
[59.96053314 66.11521912]
[80.29404449 51.38917160]
[76.70431519 36.82504272]
[73.11457825 22.26091766]
[69.52484131 7.69678974]
[65.93511200 -6.86733723]
[62.23548889 -21.40394020]
[58.42619705 -35.91218948]
[54.61690903 -50.42044067]
[50.80761719 -64.92868805]
[37.44293594 -72.93013000]
[33.78644943 -87.69782257]
[41.49696350 -100.38969421]
[37.68767166 -114.89794159]
[33.87837982 -129.40618896]
[30.06908989 -143.91444397]
[15.90631962 -145.43151855]
[3.13901019 -151.67903137]
[-6.70794678 -161.88807678]
[-12.46622181 -174.81800842]
[-13.46264744 -188.90713501]
[-9.59785557 -202.46134949]
[-1.35577011 -213.85784912]
[10.25688457 -221.73941040]
[6.66714954 -236.30354309]
[3.07741451 -250.86767578]
[-0.51232046 -265.43179321]
[-4.10205555 -279.99594116]
[-7.69179058 -294.56005859]
[-20.93409920 -302.76242065]
[-24.36712837 -317.58367920]
[-16.46580696 -330.15762329]
[-20.05554199 -344.72177124]
[-29.71673775 -358.65365601]
[-19.00379372 -371.79400635]
[-3.41132236 -365.13735962]
[-5.49141359 -348.31149292]
[-1.90167880 -333.74737549]
[10.93800926 -326.28561401]
[14.78598309 -311.56665039]
[6.87233686 -298.14978027]
[10.46207142 -283.58566284]
[14.05180645 -269.02154541]
[17.64154243 -254.45741272]
[21.23127747 -239.89328003]
[24.82101250 -225.32914734]
[40.52133560 -223.18630981]
[54.23078918 -215.16349792]
[63.83549881 -202.46348572]
[67.84137726 -187.01286316]
[65.60649109 -171.16969299]
[57.44371796 -157.36372375]
[44.57733917 -147.72373962]
[48.38663101 -133.21548462]
[52.19592285 -118.70723724]
[56.00521088 -104.19898224]
[68.95613098 -96.93199158]
[73.02597046 -82.27282715]
[65.31586456 -68.73797607]
[69.12516022 -54.22972870]
[72.93444824 -39.72148132]
[76.74373627 -25.21323204]
[81.48400116 -19.54067993]
[80.49923706 -10.45707226]
[84.08897400 4.10705471]
[87.67870331 18.67118263]
[91.26844025 33.23530960]
[94.85817719 47.79943848]
[101.62783813 47.57207489]
[108.37035370 48.21897888]
[114.97328949 49.72935486]
[121.32653809 52.07802200]
[127.32415771 55.22581482]
[132.86613464 59.12024307]
[137.86004639 63.69636154]
[142.22262573 68.87786102]
[145.88110352 74.57833862]
[159.90635681 69.25926208]
[173.93159485 63.94019318]
[187.95684814 58.62112045]
[195.82580566 44.64045715]
[211.68495178 42.21820450]
[223.36848450 53.21250534]
[221.91380310 69.18947601]
[208.43681335 77.89294434]
[193.27590942 72.64636230]
[179.25067139 77.96543884]
[165.22543335 83.28450775]
[151.20018005 88.60358429]
[152.29667664 95.95096588]
[152.34420776 103.37957001]
[151.34181213 110.74037933]
[149.30960083 117.88576508]
[146.28833008 124.67239380]
[142.33862305 130.96414185]
[137.53967285 136.63481140]
[131.98776245 141.57066345]
[125.79423523 145.67268372]
[119.08332825 148.85861206]
[111.98964691 151.06452942]
[104.65547943 152.24618530]
[97.22792816 152.37988281]
[94.30157471 167.09167480]
[91.37521362 181.80345154]
[88.44886017 196.51522827]
[85.52250671 211.22700500]
[91.37004089 217.19175720]
[94.34902191 224.89479065]
[94.04326630 233.05412292]
[90.57677460 240.34291077]
[84.58149719 245.60520935]
[77.08345032 248.03921509]
[73.27416229 262.54748535]
[69.46487427 277.05572510]
[70.31233215 286.15316772]
[65.48693848 291.75347900]
[61.45895767 306.20254517]
[57.43098068 320.65161133]
[53.40300369 335.10067749]
[49.37502670 349.54971313]
[53.12235641 364.92074585]
[42.25156021 375.10284424]
[38.22358322 389.55191040]
[34.19560623 404.00097656]
[35.47060776 410.49218750]
[33.56111145 415.84796143]
[29.82160950 418.82211304]
[25.35906410 433.14291382]
[20.89651871 447.46374512]
[16.43397331 461.78454590]
[11.97142696 476.10534668]
[7.50888109 490.42617798]
[13.11316586 499.75167847]
[12.66780758 510.40267944]
[6.56120491 518.87133789]
[-2.99357343 522.50146484]
[-7.88661528 536.68096924]
[-1.21965265 550.75897217]
[-6.38388538 565.06927490]
[-19.84616852 571.33843994]
[-24.73921013 585.51794434]
[-29.63225174 599.69744873]
[-24.64698219 606.39959717]
[-22.73936462 614.43530273]
[-24.14801979 622.47790527]
[-28.57027817 629.22967529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[6 19]
[7 18]
[27 203]
[28 202]
[29 201]
[32 198]
[33 197]
[35 193]
[36 192]
[37 191]
[38 190]
[39 189]
[40 188]
[41 185]
[42 184]
[43 183]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 175]
[51 174]
[52 173]
[54 167]
[55 166]
[56 165]
[57 164]
[58 163]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[68 123]
[69 122]
[70 121]
[71 120]
[74 117]
[75 116]
[76 115]
[77 114]
[85 107]
[86 106]
[87 105]
[88 104]
[89 103]
[90 102]
[93 99]
[94 98]
[138 150]
[139 149]
[140 148]
[141 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
