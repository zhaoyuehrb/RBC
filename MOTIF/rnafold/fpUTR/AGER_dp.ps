%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:41:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AGER)
} def

/sequence { (\
CUGAAAGAUGGGGGCUGGAGAGAGGGUGCAGGCCCCACCUAGGGCGGAGGCCACAGCAGGGAGAGGGGCAGACAGAGCCAGGACCCUGGAAGGAAGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.033858632 ubox
1 42 0.127883291 ubox
1 43 0.035917363 ubox
1 44 0.008386643 ubox
1 47 0.048821253 ubox
1 49 0.003871838 ubox
1 56 0.150579495 ubox
1 59 0.016254039 ubox
1 81 0.006623284 ubox
1 82 0.003445060 ubox
1 89 0.019508540 ubox
1 92 0.090742011 ubox
1 93 0.050491762 ubox
1 96 0.046039317 ubox
1 99 0.876905172 ubox
1 100 0.026473845 ubox
2 6 0.030716662 ubox
2 41 0.127519613 ubox
2 42 0.038942201 ubox
2 43 0.009550470 ubox
2 46 0.049084202 ubox
2 48 0.003748599 ubox
2 55 0.153394329 ubox
2 58 0.016383017 ubox
2 80 0.006477459 ubox
2 81 0.003199813 ubox
2 88 0.005159471 ubox
2 91 0.088460884 ubox
2 92 0.047004868 ubox
2 95 0.045568367 ubox
2 98 0.880460899 ubox
2 99 0.021721685 ubox
3 40 0.076294559 ubox
3 45 0.049167029 ubox
3 54 0.153239059 ubox
3 57 0.016407363 ubox
3 79 0.004375004 ubox
3 97 0.878479748 ubox
6 40 0.774581641 ubox
7 39 0.804279335 ubox
9 37 0.946173315 ubox
9 88 0.031431607 ubox
9 98 0.004754187 ubox
10 36 0.996749303 ubox
10 39 0.004284590 ubox
10 86 0.033053999 ubox
10 87 0.035928534 ubox
10 97 0.004933926 ubox
11 35 0.996811791 ubox
11 36 0.059067066 ubox
11 38 0.003319997 ubox
11 85 0.033894663 ubox
11 86 0.036449150 ubox
11 87 0.014131503 ubox
12 34 0.996766675 ubox
12 35 0.059975833 ubox
12 84 0.034013232 ubox
12 85 0.036475220 ubox
12 86 0.014288671 ubox
13 33 0.996598778 ubox
13 34 0.060749599 ubox
13 84 0.036453568 ubox
13 85 0.014301991 ubox
14 27 0.006131370 ubox
14 29 0.005432997 ubox
14 33 0.061500396 ubox
14 84 0.014245428 ubox
14 97 0.003590068 ubox
15 26 0.006209719 ubox
15 28 0.005426704 ubox
15 31 0.996949371 ubox
15 32 0.052758066 ubox
15 81 0.051462944 ubox
15 82 0.005992824 ubox
15 96 0.003594855 ubox
16 25 0.006280912 ubox
16 30 0.997446286 ubox
16 31 0.040444865 ubox
16 80 0.051823363 ubox
16 81 0.003205444 ubox
16 95 0.003537603 ubox
17 27 0.004865047 ubox
17 29 0.997318906 ubox
17 79 0.051918267 ubox
18 78 0.051892986 ubox
26 73 0.045443856 ubox
27 70 0.007735067 ubox
27 72 0.045242279 ubox
27 74 0.021850304 ubox
28 57 0.003473619 ubox
28 69 0.007518568 ubox
28 73 0.021946816 ubox
29 56 0.003490441 ubox
29 68 0.007434917 ubox
31 52 0.006156022 ubox
32 51 0.006175898 ubox
32 69 0.051387685 ubox
33 50 0.006176518 ubox
33 67 0.003188441 ubox
33 68 0.051416597 ubox
34 49 0.006175597 ubox
34 61 0.006156977 ubox
34 66 0.003199885 ubox
34 67 0.051429356 ubox
35 47 0.006185675 ubox
35 60 0.006212496 ubox
35 65 0.003200910 ubox
35 66 0.051426724 ubox
36 46 0.006198603 ubox
36 59 0.006231276 ubox
36 65 0.051282942 ubox
38 44 0.011966638 ubox
38 47 0.027572599 ubox
38 50 0.044899658 ubox
38 60 0.033077115 ubox
38 61 0.045207420 ubox
38 66 0.008176068 ubox
38 82 0.006970173 ubox
38 89 0.010043085 ubox
38 93 0.248552978 ubox
38 100 0.095578409 ubox
39 43 0.012026910 ubox
39 46 0.027667911 ubox
39 47 0.004779082 ubox
39 49 0.045103259 ubox
39 50 0.003309785 ubox
39 56 0.415145394 ubox
39 59 0.033328853 ubox
39 60 0.044967833 ubox
39 65 0.008188195 ubox
39 81 0.006998004 ubox
39 88 0.006355378 ubox
39 89 0.008776062 ubox
39 92 0.249549079 ubox
39 93 0.023652905 ubox
39 96 0.012354615 ubox
39 99 0.096658179 ubox
39 100 0.007367169 ubox
40 46 0.004698162 ubox
40 48 0.044248052 ubox
40 49 0.003350287 ubox
40 55 0.417742356 ubox
40 58 0.032422961 ubox
40 59 0.042938052 ubox
40 64 0.008079061 ubox
40 80 0.006596935 ubox
40 88 0.006071266 ubox
40 91 0.240371463 ubox
40 92 0.022883407 ubox
40 95 0.012136965 ubox
40 98 0.092553445 ubox
40 99 0.007323088 ubox
41 87 0.006092931 ubox
42 52 0.072747787 ubox
42 86 0.005963030 ubox
43 51 0.057918018 ubox
43 52 0.988860673 ubox
43 79 0.005436782 ubox
43 85 0.005643694 ubox
44 51 0.990963579 ubox
44 57 0.006267295 ubox
44 78 0.005501039 ubox
44 84 0.005592294 ubox
44 97 0.086177223 ubox
45 50 0.991677371 ubox
45 56 0.006456908 ubox
45 77 0.005545679 ubox
45 96 0.086339849 ubox
46 52 0.012141600 ubox
47 51 0.011959016 ubox
50 57 0.003483539 ubox
50 69 0.005732073 ubox
50 97 0.023492930 ubox
51 56 0.004113635 ubox
51 60 0.003971277 ubox
51 68 0.005727458 ubox
51 89 0.004879648 ubox
51 93 0.114581152 ubox
51 96 0.023156927 ubox
52 59 0.003993333 ubox
52 67 0.005714537 ubox
52 88 0.004549174 ubox
52 92 0.115275218 ubox
53 87 0.003224316 ubox
54 88 0.017359497 ubox
55 87 0.014524239 ubox
56 69 0.004529087 ubox
56 86 0.010944774 ubox
56 97 0.018659119 ubox
57 68 0.004531944 ubox
57 88 0.994537814 ubox
57 96 0.016723873 ubox
58 87 0.997273603 ubox
59 85 0.012446823 ubox
59 86 0.997847296 ubox
59 87 0.006632252 ubox
60 84 0.013528092 ubox
60 85 0.997868949 ubox
60 86 0.008616945 ubox
61 84 0.996179584 ubox
61 85 0.009831343 ubox
64 87 0.006476250 ubox
65 79 0.045576772 ubox
65 85 0.004361057 ubox
65 86 0.006651351 ubox
66 78 0.045302479 ubox
66 79 0.171145647 ubox
66 84 0.004592962 ubox
66 85 0.006657014 ubox
67 78 0.151642936 ubox
67 79 0.982246156 ubox
67 84 0.005896220 ubox
68 78 0.985921976 ubox
69 77 0.988591142 ubox
78 89 0.006377639 ubox
79 88 0.006426830 ubox
80 87 0.006475785 ubox
81 86 0.006453230 ubox
84 93 0.003309959 ubox
85 92 0.003307369 ubox
85 93 0.008293119 ubox
85 100 0.031661186 ubox
86 92 0.008370133 ubox
86 99 0.034413960 ubox
87 91 0.007574020 ubox
87 92 0.003195487 ubox
87 98 0.036355891 ubox
88 97 0.037653048 ubox
1 99 0.9500000 lbox
2 98 0.9500000 lbox
3 97 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
12 34 0.9500000 lbox
13 33 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
57 88 0.9500000 lbox
58 87 0.9500000 lbox
59 86 0.9500000 lbox
60 85 0.9500000 lbox
61 84 0.9500000 lbox
67 79 0.9500000 lbox
68 78 0.9500000 lbox
69 77 0.9500000 lbox
showpage
end
%%EOF
