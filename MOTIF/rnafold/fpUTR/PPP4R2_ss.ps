%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGCGUGCGCGCGGUGACGUACCGGGCGCCAUGUUGGAGGGUUGGUGGUAGCGGCUUGGGGAGGUGCUCGCUCUGUCGGUCUUGCUCUCUCGCACGCUUCCCCCGGCUCCCUUCGUUUCCCCCCCCCGGUCGCCUGCGUGCCGGAGUGUGUGCGAGGGAGGGGGAGGGCGUCGGGGGGGUGGGGGGAGGCGUUCCGGUCCCCAAGAGACCCGCGGAGGGAGGCGGAGGCUGUGAGGGACUCCGGGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[119.62493896 105.52764130]
[123.96681976 112.76722717]
[125.84896851 121.96671295]
[124.67275238 132.35481262]
[120.06623840 143.00436401]
[112.45938110 155.93246460]
[104.85252380 168.86056519]
[97.24566650 181.78866577]
[89.63880920 194.71676636]
[82.03195190 207.64485168]
[74.50518799 220.61975098]
[67.05880737 233.64094543]
[59.61243057 246.66213989]
[59.47826767 262.48275757]
[46.44353485 269.69006348]
[38.99715805 282.71124268]
[31.55077744 295.73245239]
[24.10439682 308.75363159]
[16.65801811 321.77484131]
[14.04377556 338.52600098]
[-2.77645755 340.65112305]
[-9.47482300 325.07650757]
[3.63682652 314.32846069]
[11.08320618 301.30725098]
[18.52958488 288.28607178]
[25.97596359 275.26486206]
[33.42234421 262.24368286]
[33.02389145 247.35441589]
[46.59123611 239.21575928]
[54.03761673 226.19456482]
[61.48399734 213.17337036]
[62.07464218 205.82714844]
[69.10385132 200.03799438]
[76.71070862 187.10990906]
[84.31756592 174.18180847]
[91.92443085 161.25370789]
[99.53128815 148.32560730]
[107.13814545 135.39750671]
[102.34889221 129.62576294]
[94.33027649 142.30258179]
[79.79602051 138.59376526]
[78.83201599 123.62476349]
[92.77038574 118.08226776]
[87.98113251 112.31052399]
[73.87169647 117.40206146]
[59.76226044 122.49360657]
[45.65282440 127.58514404]
[35.49646378 140.46072388]
[19.30882454 137.83538818]
[13.74236202 122.40987396]
[24.52337646 110.05261993]
[40.56128311 113.47570801]
[54.67072296 108.38417053]
[68.78015900 103.29262543]
[82.88959503 98.20108795]
[95.11149597 89.50481415]
[104.54649353 77.84373474]
[113.98149109 66.18264771]
[123.41648865 54.52157211]
[132.85148621 42.86048889]
[130.70356750 25.48621750]
[141.58233643 12.20445538]
[158.36489868 10.93921852]
[167.65495300 -0.83766353]
[176.94499207 -12.61454582]
[186.23504639 -24.39142799]
[182.18484497 -39.25420380]
[187.59963989 -53.48562622]
[200.20701599 -61.70257187]
[215.05761719 -60.92942810]
[224.34765625 -72.70631409]
[233.63771057 -84.48319244]
[242.92776489 -96.26007843]
[252.21781921 -108.03695679]
[246.64991760 -122.28285980]
[248.94506836 -137.30381775]
[258.38790894 -149.08088684]
[272.36428833 -154.51380920]
[287.08438110 -152.23686218]
[296.37442017 -164.01373291]
[298.84661865 -179.64059448]
[312.80383301 -184.84111023]
[322.09390259 -196.61799622]
[331.38394165 -208.39488220]
[340.67401123 -220.17175293]
[341.99218750 -226.60520935]
[345.78030396 -230.79516602]
[350.34237671 -232.12129211]
[359.92089844 -243.66477966]
[369.49938965 -255.20828247]
[379.07791138 -266.75177002]
[388.65640259 -278.29525757]
[391.71588135 -286.87219238]
[398.42544556 -289.92135620]
[408.14599609 -301.34548950]
[417.86654663 -312.76962280]
[426.18081665 -325.25454712]
[432.97412109 -338.62805176]
[439.76745605 -352.00155640]
[446.56076050 -365.37509155]
[453.35409546 -378.74859619]
[460.14739990 -392.12210083]
[466.94073486 -405.49560547]
[473.73406982 -418.86911011]
[480.52737427 -432.24261475]
[487.32070923 -445.61614990]
[494.11401367 -458.98965454]
[493.46563721 -474.79757690]
[506.12799072 -482.64065552]
[512.92132568 -496.01416016]
[519.71459961 -509.38766479]
[526.50793457 -522.76116943]
[533.30126953 -536.13470459]
[540.09460449 -549.50817871]
[546.88793945 -562.88171387]
[553.68121338 -576.25524902]
[560.30865479 -589.71173096]
[566.76910400 -603.24920654]
[573.22955322 -616.78662109]
[579.69000244 -630.32409668]
[586.06665039 -643.90124512]
[592.35913086 -657.51751709]
[598.65167236 -671.13385010]
[604.94421387 -684.75018311]
[611.23675537 -698.36645508]
[617.52929688 -711.98278809]
[623.73748779 -725.63775635]
[629.86108398 -739.33087158]
[635.98474121 -753.02398682]
[642.02362061 -766.75469971]
[647.97741699 -780.52246094]
[642.39678955 -795.06530762]
[648.63092041 -808.94299316]
[662.52966309 -814.17364502]
[668.48352051 -827.94146729]
[674.43731689 -841.70922852]
[680.30584717 -855.51361084]
[686.08892822 -869.35394287]
[684.27032471 -885.07031250]
[696.31628418 -893.83062744]
[702.09936523 -907.67102051]
[702.62707520 -924.61676025]
[719.05664062 -928.80072021]
[727.62524414 -914.17144775]
[715.93975830 -901.88793945]
[710.15667725 -888.04754639]
[712.38897705 -873.32116699]
[699.92932129 -863.57092285]
[694.14624023 -849.73052979]
[694.46643066 -842.36755371]
[688.20513916 -835.75543213]
[682.25128174 -821.98767090]
[676.29748535 -808.21984863]
[682.00567627 -794.51025391]
[676.16375732 -780.46295166]
[661.74517822 -774.56866455]
[655.79138184 -760.80084229]
[656.02044678 -753.43450928]
[649.67785645 -746.90032959]
[643.55419922 -733.20721436]
[637.43060303 -719.51416016]
[637.56854248 -712.14550781]
[631.14556885 -705.69024658]
[624.85302734 -692.07397461]
[618.56054688 -678.45764160]
[612.26800537 -664.84130859]
[605.97546387 -651.22503662]
[599.68292236 -637.60870361]
[599.72973633 -630.23889160]
[593.22747803 -623.86364746]
[586.76696777 -610.32617188]
[580.30651855 -596.78869629]
[573.84606934 -583.25128174]
[574.55609131 -578.55371094]
[572.34173584 -573.35736084]
[567.05474854 -569.46191406]
[560.26141357 -556.08837891]
[553.46807861 -542.71490479]
[546.67480469 -529.34136963]
[539.88146973 -515.96783447]
[533.08813477 -502.59436035]
[526.29479980 -489.22085571]
[519.50152588 -475.84732056]
[520.63580322 -460.99597168]
[507.48751831 -452.19631958]
[500.69421387 -438.82281494]
[493.90087891 -425.44931030]
[487.10757446 -412.07580566]
[480.31423950 -398.70230103]
[473.52093506 -385.32876587]
[466.72760010 -371.95526123]
[459.93429565 -358.58175659]
[453.14096069 -345.20825195]
[446.34762573 -331.83474731]
[439.55432129 -318.46121216]
[442.18713379 -311.43853760]
[456.98364258 -308.97607422]
[447.45278931 -297.39315796]
[450.08563232 -290.37045288]
[463.99649048 -284.75900269]
[477.90731812 -279.14755249]
[491.81817627 -273.53610229]
[505.53533936 -281.04431152]
[520.85925293 -277.92800903]
[530.55444336 -265.65866089]
[530.04315186 -250.02941895]
[519.56671143 -238.41998291]
[504.07189941 -236.31195068]
[490.87478638 -244.70066833]
[486.20672607 -259.62524414]
[472.29586792 -265.23669434]
[458.38504028 -270.84814453]
[444.47418213 -276.45962524]
[433.53280640 -288.78219604]
[429.29067993 -303.04910278]
[419.57015991 -291.62493896]
[409.84960938 -280.20080566]
[400.19989014 -268.71676636]
[390.62139893 -257.17327881]
[381.04287720 -245.62977600]
[371.46438599 -234.08627319]
[361.88589478 -222.54278564]
[352.45089722 -210.88169861]
[343.16082764 -199.10482788]
[333.87078857 -187.32794189]
[324.58071899 -175.55105591]
[322.77301025 -160.76655579]
[308.15130615 -154.72369385]
[298.86126709 -142.94680786]
[304.50311279 -129.16148376]
[302.47381592 -114.30423737]
[293.21917725 -102.37873077]
[279.14547729 -96.64911652]
[263.99468994 -98.74690247]
[254.70465088 -86.97002411]
[245.41459656 -75.19314575]
[236.12454224 -63.41625977]
[226.83448792 -51.63937759]
[231.04425049 -37.37698364]
[225.98870850 -23.20287323]
[213.40925598 -14.62320805]
[198.01193237 -15.10137653]
[188.72187805 -3.32449412]
[179.43182373 8.45238781]
[170.14178467 20.22926903]
[173.42742920 32.67201996]
[168.88676453 44.92118454]
[157.96435547 52.43637848]
[144.51257324 52.29549026]
[135.07757568 63.95656967]
[125.64257050 75.61765289]
[116.20757294 87.27873230]
[106.77257538 98.93981171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 38]
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[11 31]
[12 30]
[13 29]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[44 55]
[45 54]
[46 53]
[47 52]
[56 253]
[57 252]
[58 251]
[59 250]
[60 249]
[63 245]
[64 244]
[65 243]
[66 242]
[70 238]
[71 237]
[72 236]
[73 235]
[74 234]
[79 229]
[80 228]
[82 226]
[83 225]
[84 224]
[85 223]
[88 222]
[89 221]
[90 220]
[91 219]
[92 218]
[94 217]
[95 216]
[96 215]
[97 195]
[98 194]
[99 193]
[100 192]
[101 191]
[102 190]
[103 189]
[104 188]
[105 187]
[106 186]
[107 185]
[109 183]
[110 182]
[111 181]
[112 180]
[113 179]
[114 178]
[115 177]
[116 176]
[117 173]
[118 172]
[119 171]
[120 170]
[121 168]
[122 167]
[123 166]
[124 165]
[125 164]
[126 163]
[127 161]
[128 160]
[129 159]
[130 157]
[131 156]
[134 153]
[135 152]
[136 151]
[137 149]
[138 148]
[140 146]
[141 145]
[199 213]
[200 212]
[201 211]
[202 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
