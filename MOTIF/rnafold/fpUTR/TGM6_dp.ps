%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TGM6)
} def

/sequence { (\
ACUGUCCUGACGGUGCACACACUGCUGUGUGGAGGAACAGAGGAGUCCAGCUGGCCUUCAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.681650134 ubox
1 28 0.018598031 ubox
1 46 0.004397816 ubox
2 13 0.721966182 ubox
2 27 0.019595515 ubox
2 34 0.008120676 ubox
2 35 0.023286578 ubox
2 40 0.594428929 ubox
2 42 0.003278383 ubox
2 45 0.005048322 ubox
2 50 0.019069274 ubox
3 9 0.004405277 ubox
3 12 0.721916315 ubox
3 15 0.012470145 ubox
3 17 0.171581250 ubox
3 19 0.007305058 ubox
3 21 0.003328224 ubox
3 33 0.006044656 ubox
3 34 0.021081421 ubox
3 39 0.605244700 ubox
3 41 0.003286575 ubox
3 44 0.004483700 ubox
3 49 0.019170544 ubox
3 60 0.004935478 ubox
4 8 0.003182487 ubox
4 11 0.721511429 ubox
4 14 0.018659414 ubox
4 16 0.194904617 ubox
4 18 0.009215845 ubox
4 20 0.003826556 ubox
4 25 0.018109160 ubox
4 38 0.607036996 ubox
4 48 0.019158431 ubox
4 59 0.005119705 ubox
4 61 0.008589241 ubox
5 10 0.667707693 ubox
5 13 0.007380028 ubox
5 15 0.189299157 ubox
5 17 0.009145819 ubox
5 19 0.003751490 ubox
5 24 0.013457394 ubox
5 33 0.045131436 ubox
5 35 0.003517053 ubox
5 36 0.418912873 ubox
5 37 0.438483138 ubox
5 41 0.010440024 ubox
5 43 0.004215955 ubox
5 44 0.023009210 ubox
5 60 0.007221653 ubox
6 12 0.010554988 ubox
6 13 0.200061390 ubox
6 32 0.053797098 ubox
6 34 0.007030948 ubox
6 35 0.591735610 ubox
6 40 0.008118498 ubox
6 42 0.006690643 ubox
6 43 0.024382349 ubox
7 12 0.200047890 ubox
7 13 0.048413870 ubox
7 31 0.053823498 ubox
7 32 0.008719668 ubox
7 34 0.591546664 ubox
7 35 0.135743340 ubox
7 40 0.060125686 ubox
7 42 0.024395676 ubox
8 12 0.043819884 ubox
8 15 0.006785370 ubox
8 17 0.045371616 ubox
8 27 0.034435916 ubox
8 29 0.006895296 ubox
8 31 0.011855843 ubox
8 33 0.545809088 ubox
8 34 0.135566419 ubox
8 39 0.061162948 ubox
8 41 0.024122868 ubox
8 60 0.099865435 ubox
9 14 0.022664860 ubox
9 16 0.111157202 ubox
9 18 0.006510278 ubox
9 26 0.053452120 ubox
9 28 0.017588374 ubox
9 30 0.025873872 ubox
9 38 0.061058961 ubox
9 58 0.004553172 ubox
9 59 0.112750966 ubox
10 28 0.111298361 ubox
10 30 0.332039844 ubox
10 57 0.005913220 ubox
10 58 0.111375932 ubox
11 24 0.210980137 ubox
11 27 0.117052266 ubox
11 29 0.335975279 ubox
11 31 0.166747823 ubox
11 53 0.009107123 ubox
12 23 0.218517111 ubox
12 26 0.114980794 ubox
12 28 0.314949532 ubox
12 30 0.092540881 ubox
12 52 0.009203495 ubox
12 56 0.113942751 ubox
12 57 0.007043885 ubox
13 22 0.220458722 ubox
13 25 0.113050402 ubox
13 28 0.023032484 ubox
13 30 0.020637923 ubox
13 38 0.016600801 ubox
13 51 0.009197300 ubox
13 55 0.114047019 ubox
13 56 0.007223893 ubox
13 61 0.005862804 ubox
14 21 0.220560053 ubox
14 24 0.110673431 ubox
14 27 0.012783588 ubox
14 29 0.019813973 ubox
14 31 0.084127866 ubox
14 37 0.016614213 ubox
14 39 0.004584254 ubox
14 50 0.009029160 ubox
14 53 0.009069351 ubox
14 54 0.110082814 ubox
14 60 0.006727467 ubox
15 20 0.219757459 ubox
15 23 0.077656360 ubox
15 25 0.373644963 ubox
15 26 0.004002770 ubox
15 28 0.073840533 ubox
15 30 0.263713932 ubox
15 38 0.007679372 ubox
15 51 0.095090917 ubox
15 52 0.003229988 ubox
15 55 0.011449576 ubox
15 59 0.007644795 ubox
16 24 0.374272575 ubox
16 27 0.075640238 ubox
16 29 0.281190111 ubox
16 31 0.614990259 ubox
16 50 0.095260497 ubox
16 53 0.023472349 ubox
16 54 0.011433213 ubox
17 23 0.346381949 ubox
17 26 0.074560898 ubox
17 28 0.283352858 ubox
17 30 0.628876395 ubox
17 52 0.022690461 ubox
18 24 0.057319046 ubox
18 27 0.283640057 ubox
18 29 0.633830841 ubox
18 31 0.529336372 ubox
18 53 0.008617022 ubox
19 23 0.046660312 ubox
19 26 0.255518358 ubox
19 28 0.634577374 ubox
19 30 0.537618777 ubox
19 46 0.005602929 ubox
19 52 0.008363570 ubox
20 27 0.634564717 ubox
20 29 0.540541762 ubox
20 31 0.018964318 ubox
20 45 0.005649820 ubox
21 26 0.540637521 ubox
21 28 0.540924533 ubox
21 30 0.019260003 ubox
21 46 0.109470675 ubox
22 27 0.540717060 ubox
22 29 0.019357414 ubox
22 42 0.004125730 ubox
22 43 0.004777531 ubox
22 45 0.112739951 ubox
23 41 0.004235976 ubox
23 42 0.004373809 ubox
23 44 0.112411266 ubox
24 30 0.004042054 ubox
25 29 0.005820766 ubox
25 32 0.030037185 ubox
25 40 0.022224146 ubox
25 42 0.112923810 ubox
26 31 0.028227342 ubox
26 33 0.003618377 ubox
26 39 0.022631383 ubox
26 41 0.112616686 ubox
27 38 0.022714713 ubox
27 61 0.006784784 ubox
28 37 0.022681022 ubox
28 39 0.112952273 ubox
28 60 0.006231073 ubox
29 38 0.113131177 ubox
29 59 0.005418547 ubox
29 61 0.259414464 ubox
30 37 0.112433289 ubox
30 39 0.004076957 ubox
30 60 0.281770979 ubox
31 38 0.007284341 ubox
31 59 0.347292592 ubox
32 47 0.003178389 ubox
32 58 0.396250463 ubox
32 59 0.644803169 ubox
33 57 0.405906605 ubox
33 58 0.642892500 ubox
34 48 0.029523753 ubox
34 56 0.410626496 ubox
34 57 0.640488866 ubox
34 59 0.006502162 ubox
35 47 0.029553919 ubox
35 55 0.410096155 ubox
35 56 0.640932056 ubox
35 58 0.006131476 ubox
35 59 0.006898037 ubox
36 46 0.022274483 ubox
36 57 0.005624178 ubox
36 58 0.006543622 ubox
37 46 0.019399524 ubox
37 57 0.005163992 ubox
38 45 0.027206208 ubox
38 53 0.759432094 ubox
39 52 0.758912576 ubox
40 47 0.027038538 ubox
40 51 0.756572259 ubox
40 58 0.027056430 ubox
40 59 0.177008488 ubox
41 46 0.032609514 ubox
41 52 0.040539938 ubox
41 57 0.053323615 ubox
41 58 0.181631047 ubox
42 48 0.695126755 ubox
42 51 0.045006483 ubox
42 52 0.007498739 ubox
42 56 0.056314264 ubox
42 57 0.183115193 ubox
42 58 0.005411717 ubox
42 59 0.602377674 ubox
43 47 0.684612931 ubox
43 51 0.008626761 ubox
43 55 0.056021968 ubox
43 56 0.183447699 ubox
43 57 0.005347570 ubox
43 58 0.605123040 ubox
43 59 0.032866695 ubox
44 52 0.032819449 ubox
44 57 0.606065911 ubox
44 58 0.026988156 ubox
45 51 0.035573654 ubox
45 55 0.187481830 ubox
45 56 0.603447771 ubox
45 57 0.015842369 ubox
46 50 0.033589106 ubox
46 54 0.153219530 ubox
47 53 0.151289545 ubox
47 54 0.616187287 ubox
48 53 0.616172221 ubox
52 60 0.008630109 ubox
53 59 0.009823499 ubox
54 58 0.006372080 ubox
1 14 0.9500000 lbox
2 13 0.9500000 lbox
3 12 0.9500000 lbox
4 11 0.9500000 lbox
5 10 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
32 59 0.9500000 lbox
33 58 0.9500000 lbox
34 57 0.9500000 lbox
35 56 0.9500000 lbox
38 53 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
showpage
end
%%EOF
