%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGAGCCAAGGAAAAAAAGUACAAGUGUGGCUGCAAAGUUUGCCCCUCUUGUUACCCUCAGGCAAAUGAUUGAUUUAGAAAGGCCCCAGGGGCUAUUUUUUGCAGGAACGGUCACUCCCUAAAUCCAGGCAGGGAAAGGGAGGAGUCUGAGCCGAGUCACGCCCCUUCUCCUGUAAACUUGGGUCGCCUCUAGCUUAGCGAGCGCUGGAGUUUGAAGAGCGGGCAGUGGCUGCACACGCCAAACUUUCCCU\
) } def
/len { sequence length } bind def

/coor [
[117.13840485 383.91287231]
[108.26668549 396.29077148]
[95.12413788 403.98449707]
[79.98778534 405.66104126]
[65.48010254 401.02996826]
[54.11462402 390.89361572]
[47.86048889 377.00814819]
[47.80126953 361.77935791]
[53.94721985 347.84567261]
[65.23352051 337.62124634]
[79.70475006 332.87744141]
[81.19238281 317.95141602]
[82.68001556 303.02536011]
[84.16764832 288.09930420]
[82.52542114 285.85906982]
[81.65940094 282.84197998]
[81.86671448 279.33605957]
[83.33637238 275.73046875]
[86.11773682 272.47558594]
[88.34460449 257.64178467]
[90.57146454 242.80801392]
[77.68244934 233.04142761]
[71.44881439 218.01799011]
[73.66262054 201.80912781]
[83.81253815 188.85955811]
[99.19803619 182.76850891]
[101.24053192 167.90821838]
[103.28303528 153.04792786]
[105.32553101 138.18763733]
[107.36803436 123.32734680]
[89.26862335 119.27245331]
[80.95054626 104.83822632]
[66.10322571 102.70350647]
[51.25590515 100.56877899]
[36.40858459 98.43405914]
[21.56126213 96.29933929]
[6.71393967 94.16461182]
[-8.13338184 92.02989197]
[-22.98070335 89.89517212]
[-34.61571884 102.18978119]
[-51.12408829 105.08805847]
[-65.95381927 97.64118958]
[-73.33898163 82.96665955]
[-88.21166992 81.01646423]
[-103.08435059 79.06626129]
[-117.95703888 77.11606598]
[-132.82971191 75.16587067]
[-147.70240784 73.21566772]
[-162.61892700 71.63539124]
[-177.57009888 70.42601776]
[-192.52125549 69.21663666]
[-198.87913513 82.95718384]
[-209.53448486 93.67332458]
[-223.18757629 100.08529663]
[-238.18237305 101.43668365]
[-252.70735168 97.58360291]
[-265.01440430 89.00975800]
[-273.62918091 76.76579285]
[-277.52774048 62.34058380]
[-292.47888184 61.13120651]
[-307.43005371 59.92182541]
[-322.38122559 58.71244812]
[-332.38180542 70.57703400]
[-347.45428467 74.26480865]
[-361.80300903 68.35774994]
[-369.91061401 55.12724304]
[-368.65954590 39.66068649]
[-358.53088379 27.90528297]
[-343.41928101 24.38123131]
[-329.13546753 30.44359779]
[-321.17184448 43.76128006]
[-306.22067261 44.97065735]
[-291.26953125 46.18003845]
[-276.31835938 47.38941574]
[-270.15200806 33.77833939]
[-259.68130493 23.07817078]
[-246.15620422 16.59385300]
[-231.20077515 15.12540531]
[-216.61811829 18.86926842]
[-204.17311096 27.39227676]
[-195.37864685 39.68168259]
[-191.31188965 54.26546860]
[-176.36071777 55.47484589]
[-161.40954590 56.68422699]
[-159.20028687 55.00055695]
[-156.19984436 54.07849503]
[-152.69067383 54.22047424]
[-149.05833435 55.62272644]
[-145.75219727 58.34298706]
[-130.87951660 60.29318237]
[-116.00683594 62.24338150]
[-101.13415527 64.19358063]
[-86.26146698 66.14377594]
[-71.38878632 68.09397888]
[-63.15407562 57.60430527]
[-50.71426392 52.50615692]
[-37.27190018 54.22739410]
[-26.34491539 62.42519760]
[-20.84598160 75.04784393]
[-5.99865961 77.18257141]
[8.84866238 79.31729126]
[23.69598389 81.45201111]
[38.54330444 83.58673859]
[53.39062881 85.72145844]
[68.23794556 87.85618591]
[83.08527374 89.99090576]
[92.12207794 80.68852997]
[105.70942688 78.69290924]
[118.37823486 85.74108124]
[124.46189880 99.73811340]
[137.94743347 93.16999054]
[151.43296814 86.60186768]
[164.91851807 80.03373718]
[178.40405273 73.46561432]
[191.88958740 66.89749146]
[205.37512207 60.32936096]
[218.86065674 53.76123810]
[232.30516052 47.10951233]
[245.70809937 40.37443924]
[259.11105347 33.63936996]
[255.29185486 25.38528442]
[255.17800903 14.88952065]
[259.76208496 3.86245871]
[269.25997925 -5.61453676]
[278.87002563 -17.13176537]
[288.48010254 -28.64899445]
[298.09017944 -40.16622162]
[307.70025635 -51.68345261]
[317.31030273 -63.20067978]
[326.92037964 -74.71791077]
[336.24148560 -86.47022247]
[345.26788330 -98.45037842]
[354.29428101 -110.43053436]
[363.32067871 -122.41069031]
[372.34707642 -134.39083862]
[374.47189331 -150.06872559]
[388.31024170 -155.57771301]
[397.33663940 -167.55786133]
[406.36303711 -179.53800964]
[415.38943481 -191.51817322]
[424.41583252 -203.49832153]
[421.07788086 -222.16821289]
[432.27694702 -237.07609558]
[450.50097656 -239.00228882]
[459.22708130 -251.20289612]
[460.96191406 -266.92871094]
[474.65921021 -272.77963257]
[483.38534546 -284.98022461]
[480.54983521 -300.52807617]
[489.60742188 -313.47937012]
[505.18438721 -316.15029907]
[518.03918457 -306.95629883]
[520.54528809 -291.35195923]
[511.21588135 -278.59509277]
[495.58593750 -276.25411987]
[486.85980225 -264.05349731]
[485.74914551 -249.20036316]
[471.42770386 -242.47677612]
[462.70156860 -230.27616882]
[466.95742798 -219.72459412]
[465.58923340 -208.30908203]
[458.82095337 -198.86749268]
[448.23339844 -193.80281067]
[436.39599609 -194.47192383]
[427.36959839 -182.49177551]
[418.34320068 -170.51161194]
[409.31680298 -158.53146362]
[400.29040527 -146.55130005]
[398.81124878 -131.73033142]
[384.32723999 -125.36444855]
[375.30084229 -113.38429260]
[366.27444458 -101.40413666]
[357.24804688 -89.42398071]
[348.22164917 -77.44382477]
[348.46081543 -74.67644501]
[347.63311768 -71.64860535]
[345.63436890 -68.76080322]
[342.50524902 -66.44372559]
[338.43762207 -65.10784149]
[328.82754517 -53.59061050]
[319.21746826 -42.07337952]
[309.60739136 -30.55615234]
[299.99734497 -19.03892326]
[290.38726807 -7.52169514]
[280.77719116 3.99553323]
[282.39416504 11.31914997]
[296.34945679 5.81914425]
[308.54431152 -2.91501570]
[322.55087280 2.45303416]
[325.78475952 17.10028839]
[315.34042358 27.86670113]
[300.60186768 25.07914734]
[285.62814331 25.96638489]
[287.24511719 33.29000092]
[300.81118774 39.69017029]
[314.37722778 46.09033966]
[327.94329834 52.49050903]
[342.66058350 47.38769531]
[356.32733154 54.07162857]
[361.10137939 68.13377380]
[374.66744995 74.53394318]
[388.23348999 80.93411255]
[401.79956055 87.33428192]
[415.36560059 93.73445129]
[430.15432739 88.16048431]
[444.51828003 94.75232697]
[449.93557739 109.59915924]
[443.19223022 123.89261627]
[428.28897095 129.15264893]
[414.06759644 122.25856018]
[408.96542358 107.30050659]
[395.39938354 100.90033722]
[381.83331299 94.50016785]
[368.26727295 88.09999847]
[354.70120239 81.69982910]
[340.81256104 86.95732117]
[326.96350098 80.65989685]
[321.54312134 66.05656433]
[307.97705078 59.65639496]
[294.41101074 53.25622559]
[280.84497070 46.85605621]
[265.84609985 47.04231262]
[252.44317627 53.77738190]
[239.04023743 60.51245117]
[234.48710632 66.30821228]
[225.42878723 67.24677277]
[211.94325256 73.81490326]
[198.45771790 80.38302612]
[184.97216797 86.95114899]
[171.48663330 93.51927948]
[158.00109863 100.08740234]
[144.51556396 106.65552521]
[131.03002930 113.22365570]
[122.22832489 125.36985016]
[120.18582153 140.23013306]
[118.14332581 155.09042358]
[116.10082245 169.95071411]
[114.05831909 184.81100464]
[125.52664185 192.79408264]
[132.40884399 204.87896729]
[133.41380310 218.68347168]
[128.40252686 231.51451111]
[118.40416718 240.89344788]
[105.40524292 245.03486633]
[103.17838287 259.86865234]
[100.95152283 274.70242310]
[99.09369659 289.58694458]
[97.60606384 304.51300049]
[96.11843109 319.43902588]
[94.63079834 334.36508179]
[107.88105774 341.87179565]
[116.92730713 354.12271118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 250]
[12 249]
[13 248]
[14 247]
[19 246]
[20 245]
[21 244]
[26 238]
[27 237]
[28 236]
[29 235]
[30 234]
[32 106]
[33 105]
[34 104]
[35 103]
[36 102]
[37 101]
[38 100]
[39 99]
[43 94]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 84]
[50 83]
[51 82]
[59 74]
[60 73]
[61 72]
[62 71]
[110 233]
[111 232]
[112 231]
[113 230]
[114 229]
[115 228]
[116 227]
[117 226]
[118 224]
[119 223]
[120 222]
[124 185]
[125 184]
[126 183]
[127 182]
[128 181]
[129 180]
[130 179]
[131 174]
[132 173]
[133 172]
[134 171]
[135 170]
[137 168]
[138 167]
[139 166]
[140 165]
[141 164]
[144 159]
[145 158]
[147 156]
[148 155]
[194 221]
[195 220]
[196 219]
[197 218]
[200 215]
[201 214]
[202 213]
[203 212]
[204 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
