%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:08:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGGGGCGCUGUUGCUGUGGCUGAGAUUUGGCCGCCGCCUCCCCCACCCGGCCUGCGCCCUCCCUCUCCCUCGGCGCCCGCCCGCCCGCUCGCGGCCCGCGCUCGCUCCUCUCCCUCGCAGCCGGCAGGGCCCCCGACCCCCGUCCGGGCCCUCGCCGGCCCGGCCGCCCGUGCCCGGGGCUGUUUUCGCGAGCAGGUGAAA\
) } def
/len { sequence length } bind def

/coor [
[254.32000732 78.93347931]
[247.46444702 76.00187683]
[242.00239563 70.82700348]
[227.47938538 74.57961273]
[212.95637512 78.33222198]
[198.43336487 82.08483124]
[183.91033936 85.83744049]
[178.21795654 90.55671692]
[169.13600159 89.53445435]
[154.55718994 93.06407166]
[139.97837830 96.59368896]
[125.39956665 100.12329865]
[110.82075500 103.65291595]
[116.72293091 115.20255280]
[113.79708099 130.83380127]
[100.38236237 144.95790100]
[89.03244019 154.76501465]
[83.64909363 169.64218140]
[68.96015930 172.10884094]
[57.61024094 181.91595459]
[46.26032257 191.72305298]
[34.91040421 201.53016663]
[23.56048584 211.33728027]
[12.21056938 221.14437866]
[0.86065143 230.95149231]
[-10.48926640 240.75860596]
[-18.52098274 255.68936157]
[-35.09165192 252.10478210]
[-36.23437119 235.18939209]
[-20.29637527 229.40867615]
[-8.94645691 219.60157776]
[2.40346074 209.79446411]
[13.75337791 199.98735046]
[25.10329628 190.18025208]
[36.45321274 180.37313843]
[47.80313110 170.56604004]
[59.15304947 160.75892639]
[63.72457886 146.58322144]
[79.22533417 143.41508484]
[90.57525635 133.60798645]
[88.53253937 126.39151764]
[74.09961700 130.47695923]
[59.66669464 134.56239319]
[45.23377228 138.64781189]
[32.76969910 146.99328613]
[20.98108673 137.71813965]
[26.15943146 123.64031982]
[41.14833832 124.21489716]
[55.58126068 120.12946320]
[70.01418304 116.04402924]
[84.44710541 111.95859528]
[82.40438843 104.74213409]
[67.59815979 102.33887482]
[52.79193497 99.93561554]
[37.65992737 106.25656891]
[24.78567314 96.09853363]
[27.41310120 79.91123199]
[42.83934021 74.34677124]
[55.19519424 85.12939453]
[70.00141907 87.53265381]
[84.80764771 89.93591309]
[71.68799591 82.66440582]
[62.82867813 70.56017303]
[59.86396790 55.85607910]
[63.34077072 41.26457977]
[72.61772156 29.47737122]
[85.98348999 22.66884041]
[100.97251129 22.09495544]
[114.81974792 27.86158180]
[124.97080994 38.90494919]
[129.55313110 53.18788910]
[127.72140503 68.07563019]
[119.81352997 80.82182312]
[107.29113770 89.07409668]
[121.86994934 85.54448700]
[136.44876099 82.01486969]
[151.02757263 78.48526001]
[165.60639954 74.95564270]
[180.15773010 71.31442261]
[194.68075562 67.56181335]
[209.20376587 63.80920792]
[223.72677612 60.05659866]
[238.24978638 56.30398941]
[253.36955261 38.71503830]
[274.79971313 45.40841293]
[288.99285889 40.55508804]
[303.18600464 35.70176315]
[317.37915039 30.84844017]
[327.93353271 19.06222153]
[342.47964478 22.26535606]
[356.67279053 17.41203117]
[370.86593628 12.55870724]
[385.05908203 7.70538330]
[399.25222778 2.85205960]
[413.44534302 -2.00126433]
[440.74465942 -22.29664230]
[452.53332520 -31.57176399]
[464.32196045 -40.84688568]
[476.11059570 -50.12200928]
[479.03283691 -69.54953766]
[495.62960815 -78.98733521]
[499.49337769 -93.48117065]
[503.35714722 -107.97500610]
[491.07693481 -116.89467621]
[482.85140991 -129.65026855]
[479.79302979 -144.51669312]
[482.31536865 -159.48339844]
[490.07736206 -172.52624512]
[502.02923584 -181.88130188]
[516.55462646 -186.28338623]
[531.68902588 -185.13713074]
[545.38568115 -178.59756470]
[555.79223633 -167.54911804]
[561.50128174 -153.48599243]
[561.74072266 -138.31011963]
[556.47814941 -124.07391357]
[546.42529297 -112.70269012]
[532.94171143 -105.73432159]
[517.85101318 -104.11122894]
[513.98718262 -89.61739349]
[510.12344360 -75.12355804]
[512.25067139 -73.40432739]
[514.14288330 -71.42936707]
[528.26000977 -76.49961853]
[542.37707520 -81.56987000]
[556.49420166 -86.64012909]
[570.61132812 -91.71038055]
[584.72839355 -96.78063202]
[598.80621338 -101.95890808]
[612.84399414 -107.24489594]
[626.88171387 -112.53089142]
[640.91949463 -117.81687927]
[654.95721436 -123.10287476]
[668.99493408 -128.38887024]
[683.03271484 -133.67485046]
[689.05718994 -145.08312988]
[700.86181641 -149.19540405]
[711.93627930 -144.32147217]
[726.05334473 -149.39172363]
[740.17047119 -154.46197510]
[750.34625244 -167.32221985]
[766.52990723 -164.67247009]
[772.07312012 -149.23857117]
[761.27343750 -136.89759827]
[745.24072266 -140.34487915]
[731.12359619 -135.27462769]
[717.00653076 -130.20436096]
[706.41040039 -116.21800232]
[688.31872559 -119.63711548]
[674.28094482 -114.35112000]
[660.24322510 -109.06513214]
[646.20544434 -103.77913666]
[632.16772461 -98.49314880]
[618.12994385 -93.20715332]
[604.09222412 -87.92116547]
[598.93786621 -82.61953735]
[589.79864502 -82.66353607]
[575.68157959 -77.59327698]
[561.56445312 -72.52302551]
[547.44732666 -67.45277405]
[533.33026123 -62.38251877]
[519.21313477 -57.31226730]
[514.17883301 -43.05614471]
[500.81234741 -35.38247299]
[485.38571167 -38.33336639]
[473.59707642 -29.05824471]
[461.80844116 -19.78312111]
[450.01977539 -10.50799942]
[449.90484619 4.49155998]
[461.54998779 13.94624519]
[473.19509888 23.40093040]
[484.84024048 32.85561752]
[500.15896606 29.71397781]
[513.88854980 37.19947433]
[519.54626465 51.77768707]
[514.46075439 66.56522369]
[501.03317261 74.57986450]
[485.60366821 72.03734589]
[475.45755005 60.13815689]
[475.38552856 44.50074005]
[463.74041748 35.04605484]
[452.09530640 25.59136963]
[440.45016479 16.13668442]
[448.40042114 28.85649681]
[446.90097046 43.78136444]
[436.57934570 54.66547394]
[421.75494385 56.95399857]
[408.63156128 49.68922806]
[402.70111084 35.91135406]
[406.44540405 21.38619232]
[418.29867554 12.19187641]
[404.10552979 17.04520035]
[389.91238403 21.89852524]
[375.71926880 26.75184822]
[361.52612305 31.60517311]
[347.33297729 36.45849609]
[337.79376221 47.89757538]
[322.23245239 45.04158020]
[308.03930664 49.89490509]
[293.84619141 54.74822998]
[279.65304565 59.60155487]
[278.21679688 66.57066345]
[274.41564941 72.66627502]
[268.68185425 77.10604858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 83]
[4 82]
[5 81]
[6 80]
[7 79]
[9 78]
[10 77]
[11 76]
[12 75]
[13 74]
[16 40]
[17 39]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[52 61]
[53 60]
[54 59]
[85 201]
[86 200]
[87 199]
[88 198]
[90 196]
[91 195]
[92 194]
[93 193]
[94 192]
[95 191]
[96 168]
[97 167]
[98 166]
[99 165]
[101 121]
[102 120]
[103 119]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[128 157]
[129 155]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[138 147]
[139 146]
[140 145]
[169 183]
[170 182]
[171 181]
[172 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
