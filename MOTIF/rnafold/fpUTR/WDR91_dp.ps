%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (WDR91)
} def

/sequence { (\
UUUCUCCCAGGCCCCGCCCCUCCGUCCCUCACCGCACCACCCCUAAAGACGCUAGCGCUGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.030443659 ubox
1 11 0.003580461 ubox
1 47 0.003993651 ubox
1 49 0.003949080 ubox
2 9 0.032579280 ubox
2 10 0.027195447 ubox
2 11 0.003763283 ubox
2 46 0.004516502 ubox
2 47 0.003759438 ubox
2 48 0.004357586 ubox
2 49 0.003909118 ubox
3 9 0.028653659 ubox
3 10 0.020571061 ubox
3 11 0.023860653 ubox
3 45 0.004233074 ubox
3 46 0.003558004 ubox
3 47 0.003933230 ubox
3 48 0.003242143 ubox
3 49 0.051650176 ubox
4 10 0.159881408 ubox
4 11 0.013233942 ubox
4 48 0.055856070 ubox
4 55 0.003449237 ubox
5 9 0.144548041 ubox
5 10 0.021132356 ubox
5 11 0.006077162 ubox
5 47 0.053520485 ubox
5 49 0.013935445 ubox
5 54 0.003267607 ubox
6 10 0.039360124 ubox
6 48 0.015019246 ubox
8 60 0.134406219 ubox
9 21 0.054359502 ubox
9 29 0.071741527 ubox
9 44 0.043585631 ubox
9 59 0.135007938 ubox
10 18 0.292685728 ubox
10 19 0.038057373 ubox
10 20 0.056986419 ubox
10 21 0.005909439 ubox
10 22 0.003249253 ubox
10 23 0.014573390 ubox
10 26 0.025994412 ubox
10 27 0.035460615 ubox
10 28 0.076543704 ubox
10 29 0.008376451 ubox
10 30 0.006833252 ubox
10 33 0.013591239 ubox
10 38 0.014468556 ubox
10 41 0.029636080 ubox
10 42 0.025533352 ubox
10 43 0.045324044 ubox
10 53 0.003708329 ubox
10 58 0.133239571 ubox
10 59 0.043839855 ubox
11 17 0.293820111 ubox
11 18 0.035738283 ubox
11 19 0.056274486 ubox
11 20 0.006411437 ubox
11 22 0.014434274 ubox
11 25 0.026349714 ubox
11 26 0.035786012 ubox
11 27 0.076231212 ubox
11 28 0.009290085 ubox
11 29 0.005712901 ubox
11 32 0.013576576 ubox
11 35 0.009996663 ubox
11 37 0.014399349 ubox
11 40 0.029716409 ubox
11 41 0.025640505 ubox
11 42 0.045040955 ubox
11 52 0.003927439 ubox
11 56 0.054374127 ubox
11 58 0.050997651 ubox
11 61 0.928020040 ubox
12 16 0.292055155 ubox
12 24 0.028705173 ubox
12 34 0.010092611 ubox
12 51 0.003756143 ubox
12 55 0.054260230 ubox
12 57 0.049935011 ubox
12 60 0.928382214 ubox
15 24 0.078256142 ubox
15 34 0.010540859 ubox
15 51 0.010022596 ubox
15 57 0.926887013 ubox
15 60 0.009780237 ubox
15 62 0.042895703 ubox
16 23 0.076658091 ubox
16 25 0.028690485 ubox
16 33 0.010337604 ubox
16 35 0.055148529 ubox
16 50 0.009882067 ubox
16 52 0.042231544 ubox
16 56 0.930911212 ubox
16 58 0.147964458 ubox
16 59 0.003587628 ubox
16 61 0.045821097 ubox
17 24 0.029330890 ubox
17 34 0.055092240 ubox
17 51 0.040274353 ubox
17 55 0.928849043 ubox
17 57 0.147864554 ubox
17 60 0.045739373 ubox
20 48 0.019121390 ubox
20 55 0.099041625 ubox
21 47 0.018175519 ubox
21 49 0.021382267 ubox
21 54 0.118707671 ubox
22 48 0.021885735 ubox
23 34 0.067644912 ubox
23 51 0.941750175 ubox
23 57 0.008783556 ubox
23 62 0.029546284 ubox
24 32 0.044015992 ubox
24 33 0.069743543 ubox
24 35 0.064634999 ubox
24 37 0.017137344 ubox
24 40 0.013924628 ubox
24 50 0.951079785 ubox
24 52 0.011937805 ubox
24 56 0.009035292 ubox
24 58 0.003731095 ubox
24 61 0.031522660 ubox
25 31 0.043029270 ubox
25 34 0.064144120 ubox
25 36 0.016359564 ubox
25 39 0.013187584 ubox
25 49 0.950716760 ubox
25 51 0.011801012 ubox
25 55 0.008711914 ubox
25 57 0.003180011 ubox
25 60 0.023571217 ubox
26 48 0.947995438 ubox
28 48 0.038927978 ubox
28 55 0.004471696 ubox
29 47 0.054722904 ubox
29 49 0.021365977 ubox
29 54 0.004408794 ubox
30 48 0.024142723 ubox
30 60 0.090114905 ubox
31 59 0.091107320 ubox
33 51 0.007801004 ubox
33 57 0.105557316 ubox
33 62 0.148195012 ubox
34 50 0.008169820 ubox
34 52 0.029092768 ubox
34 56 0.106641540 ubox
34 58 0.012688436 ubox
34 61 0.158518976 ubox
35 51 0.029131087 ubox
35 55 0.106511900 ubox
35 57 0.012702817 ubox
35 60 0.158508459 ubox
36 59 0.148912098 ubox
38 60 0.006816700 ubox
39 59 0.007932294 ubox
43 55 0.079610699 ubox
44 54 0.079984578 ubox
45 53 0.077889968 ubox
47 53 0.012043647 ubox
47 59 0.049255286 ubox
48 52 0.013588593 ubox
48 58 0.060503664 ubox
50 57 0.064752530 ubox
50 60 0.012883287 ubox
50 62 0.211754805 ubox
51 56 0.063242860 ubox
51 58 0.119980067 ubox
51 59 0.003460426 ubox
51 61 0.227240321 ubox
52 57 0.120067672 ubox
52 60 0.227313622 ubox
53 60 0.006102040 ubox
54 59 0.022317151 ubox
55 61 0.053096374 ubox
56 60 0.052788565 ubox
56 62 0.010362893 ubox
57 61 0.010532677 ubox
11 61 0.9500000 lbox
12 60 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
showpage
end
%%EOF
