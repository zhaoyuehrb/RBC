%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCAGUUGCAACCGGGAUACUAGAACCUACGCUUGGUGCGCCUGCGCAGAAGCGAGGCGCGCUGGGGCGACUGGAGCGGUUCCCUCGCAGGCGGCGCCAUUUUGUGCUAGGAGCCUGAUAAAACCGGCCCGGUUCUGUGGAAAGUGGGCGGCGGAGCCAGGGUCCCUGGA\
) } def
/len { sequence length } bind def

/coor [
[91.80702972 215.51211548]
[82.60371399 220.05462646]
[79.07540131 234.63375854]
[75.54708862 249.21287537]
[80.69252777 264.78390503]
[69.57986450 276.84378052]
[53.64084625 272.98635864]
[49.27217102 257.17980957]
[60.96795654 245.68457031]
[64.49627686 231.10543823]
[68.02458954 216.52630615]
[61.19517136 198.45925903]
[75.23304749 184.02572632]
[78.22654724 169.32746887]
[81.22004700 154.62921143]
[84.21355438 139.93093872]
[87.20705414 125.23268127]
[77.53328705 136.69645691]
[67.85951996 148.16023254]
[58.18574905 159.62400818]
[53.56401825 173.89425659]
[43.99567032 185.44616699]
[30.83551025 192.64408875]
[15.94691658 194.46887207]
[1.43800163 190.66210938]
[-10.63688469 181.76283264]
[-18.56803131 169.03111267]
[-21.23244667 154.26963806]
[-18.25287247 139.56854248]
[-10.05119133 127.00939178]
[2.21129942 118.37045288]
[16.79832649 114.87493134]
[31.64706039 117.01866913]
[46.20170212 113.39067078]
[60.75634766 109.76267242]
[75.31098938 106.13468170]
[60.79873657 102.34067535]
[46.28647995 98.54667664]
[31.77422333 94.75267792]
[17.26196861 90.95867920]
[2.74971294 87.16467285]
[-11.76254272 83.37067413]
[-26.27479744 79.57667542]
[-40.78705215 75.78267670]
[-49.91915131 76.63941193]
[-55.52847672 71.78458405]
[-69.96901703 67.72616577]
[-84.40955353 63.66774368]
[-100.15810394 68.24107361]
[-111.80407715 56.69536591]
[-107.36710358 40.90786362]
[-91.41156006 37.11938858]
[-80.35113525 49.22720337]
[-65.91059875 53.28562164]
[-51.47005463 57.34404373]
[-36.99305344 61.27041626]
[-22.48079681 65.06441498]
[-7.96854162 68.85842133]
[6.54371357 72.65242004]
[21.05596924 76.44641876]
[35.56822586 80.24042511]
[50.08047867 84.03442383]
[64.59273529 87.82842255]
[79.10498810 91.62242126]
[89.11477661 80.45084381]
[83.75630951 66.44059753]
[78.39785004 52.43035889]
[73.03938293 38.42011642]
[60.88277054 28.29453468]
[63.56296158 13.64305592]
[58.20449829 -0.36718577]
[52.84603500 -14.37742710]
[47.48757172 -28.38766861]
[42.12910843 -42.39791107]
[30.82350159 -55.03197479]
[39.83411789 -69.39321136]
[56.12850189 -64.71031952]
[56.13934708 -47.75637436]
[61.49781036 -33.74613190]
[66.85627747 -19.73589134]
[72.21473694 -5.72564936]
[77.57320404 8.28459263]
[89.34654236 17.40806770]
[87.04962158 33.06165314]
[92.40808868 47.07189560]
[97.76654816 61.08213425]
[103.12501526 75.09237671]
[105.38759613 73.41714478]
[107.91711426 71.95223999]
[116.86634827 59.91433334]
[125.81558990 47.87643051]
[134.76483154 35.83852386]
[143.71406555 23.80062103]
[152.21768188 11.44390297]
[160.26432800 -1.21514082]
[168.31098938 -13.87418461]
[176.35763550 -26.53322792]
[184.40429688 -39.19227219]
[180.72375488 -54.56201935]
[189.06037903 -67.98872375]
[204.46818542 -71.50655365]
[217.80599976 -63.02844620]
[221.16072083 -47.58430862]
[212.54208374 -34.33687973]
[197.06333923 -31.14561844]
[189.01667786 -18.48657417]
[180.97003174 -5.82753134]
[172.92337036 6.83151197]
[164.87672424 19.49055481]
[165.38067627 22.28376579]
[164.78776550 25.44813347]
[162.94970703 28.55913734]
[159.87733459 31.14613342]
[155.75196838 32.74985886]
[146.80273438 44.78776169]
[137.85350037 56.82566833]
[128.90425110 68.86357117]
[119.95501709 80.90147400]
[121.11474609 88.31127167]
[134.73971558 82.03750610]
[148.08706665 75.19290924]
[161.45477295 81.99763489]
[163.77413940 96.81723785]
[153.12466431 107.38079834]
[138.32449341 104.94161987]
[123.43419647 103.13085938]
[124.59392548 110.54064941]
[136.79327393 119.26853180]
[148.99261475 127.99641418]
[161.19195557 136.72430420]
[173.39131165 145.45217896]
[185.66984558 154.06829834]
[198.02656555 162.57191467]
[210.38328552 171.07553101]
[222.74000549 179.57914734]
[235.09672546 188.08276367]
[247.45344543 196.58638000]
[259.81015015 205.09001160]
[272.16687012 213.59362793]
[285.39254761 205.97492981]
[300.61471558 204.85769653]
[314.81103516 210.46374512]
[325.16278076 221.67999268]
[329.61459351 236.27943420]
[327.28262329 251.36335754]
[318.62985229 263.93682861]
[305.37426758 271.50338745]
[290.14782715 272.56066895]
[275.97372437 266.89874268]
[265.66619873 255.64183044]
[261.27191162 241.02496338]
[263.66326904 225.95034790]
[251.30653381 217.44671631]
[238.94982910 208.94309998]
[226.59310913 200.43948364]
[214.23638916 191.93586731]
[201.87966919 183.43225098]
[189.52294922 174.92863464]
[177.16622925 166.42501831]
[169.84645081 165.21891785]
[164.66342163 157.65153503]
[152.46408081 148.92364502]
[140.26472473 140.19577026]
[128.06538391 131.46788025]
[115.86604309 122.73999786]
[101.90531921 128.22618103]
[98.91181946 142.92443848]
[95.91831207 157.62271118]
[92.92481232 172.32096863]
[89.93131256 187.01924133]
[96.47192383 195.76803589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 57]
[44 56]
[46 55]
[47 54]
[48 53]
[65 87]
[66 86]
[67 85]
[68 84]
[70 82]
[71 81]
[72 80]
[73 79]
[74 78]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[127 165]
[128 164]
[129 163]
[130 162]
[131 161]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[138 153]
[139 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
