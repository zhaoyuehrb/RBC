%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPS23)
} def

/sequence { (\
ACCUGGAGCAGCCGCUUCCGGUUCCGGUAGCAGCUAGUCACGCUCGGUACCAGGCGCAGAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.059495034 ubox
1 28 0.021560795 ubox
1 48 0.117196627 ubox
2 21 0.068725423 ubox
2 27 0.022554035 ubox
2 47 0.124023066 ubox
2 54 0.904316649 ubox
3 11 0.008275607 ubox
3 20 0.070302651 ubox
3 21 0.036858147 ubox
3 26 0.022222254 ubox
3 27 0.025010426 ubox
3 37 0.006587744 ubox
3 46 0.123475618 ubox
3 47 0.028960933 ubox
3 53 0.908387787 ubox
3 59 0.309650868 ubox
4 10 0.008807222 ubox
4 20 0.042599767 ubox
4 26 0.025457498 ubox
4 36 0.006731377 ubox
4 40 0.039773145 ubox
4 42 0.049715006 ubox
4 46 0.027965994 ubox
4 49 0.003831714 ubox
4 52 0.908094896 ubox
4 58 0.310484766 ubox
5 9 0.009013259 ubox
5 13 0.008579847 ubox
5 18 0.071277046 ubox
5 19 0.056685551 ubox
5 25 0.034295944 ubox
5 35 0.004387206 ubox
5 39 0.039301373 ubox
5 41 0.071034132 ubox
5 44 0.012592319 ubox
5 45 0.028113547 ubox
5 48 0.005725830 ubox
5 51 0.907721771 ubox
5 57 0.309766869 ubox
5 62 0.004120748 ubox
6 12 0.008675302 ubox
6 17 0.072485750 ubox
6 18 0.056595153 ubox
6 24 0.034304413 ubox
6 38 0.024118079 ubox
6 39 0.375588670 ubox
6 43 0.012261992 ubox
6 44 0.012288588 ubox
6 45 0.440315113 ubox
6 50 0.796689218 ubox
6 62 0.012409858 ubox
7 16 0.082978645 ubox
7 17 0.040287989 ubox
7 23 0.032668465 ubox
7 35 0.018074861 ubox
7 38 0.384621976 ubox
7 44 0.730867124 ubox
7 61 0.012486688 ubox
8 15 0.092064725 ubox
8 16 0.006975793 ubox
8 22 0.015669518 ubox
8 31 0.006436422 ubox
8 34 0.018442585 ubox
8 38 0.275001765 ubox
8 43 0.733757774 ubox
8 48 0.415350171 ubox
8 55 0.014007326 ubox
8 57 0.014209389 ubox
9 14 0.092110084 ubox
9 21 0.012707282 ubox
9 30 0.006409981 ubox
9 33 0.018380523 ubox
9 37 0.291216749 ubox
9 42 0.733113077 ubox
9 47 0.421531237 ubox
9 54 0.013985094 ubox
9 56 0.014219393 ubox
10 23 0.022880508 ubox
10 35 0.974591272 ubox
10 44 0.034002114 ubox
11 22 0.039120906 ubox
11 28 0.006302515 ubox
11 31 0.007119348 ubox
11 34 0.986234483 ubox
11 38 0.013987525 ubox
11 43 0.036223848 ubox
11 48 0.091295246 ubox
11 55 0.013358204 ubox
11 57 0.023709875 ubox
12 21 0.040479770 ubox
12 27 0.006591931 ubox
12 30 0.007061023 ubox
12 33 0.985915145 ubox
12 37 0.013985556 ubox
12 42 0.035919394 ubox
12 47 0.093573523 ubox
12 54 0.013365536 ubox
12 56 0.016840703 ubox
13 20 0.041113204 ubox
13 26 0.006593679 ubox
13 42 0.003971131 ubox
13 46 0.093618092 ubox
13 53 0.013319981 ubox
13 56 0.026146326 ubox
14 19 0.039160653 ubox
14 25 0.006215758 ubox
14 28 0.003213169 ubox
14 31 0.993103986 ubox
14 34 0.007396771 ubox
14 38 0.005706400 ubox
14 45 0.015286646 ubox
14 55 0.031648178 ubox
14 57 0.008617392 ubox
15 30 0.994026612 ubox
15 33 0.007411004 ubox
15 37 0.005751210 ubox
15 54 0.031633680 ubox
15 56 0.008629007 ubox
16 29 0.929657751 ubox
16 30 0.006160857 ubox
16 32 0.006569747 ubox
16 36 0.005514970 ubox
16 53 0.031324101 ubox
17 27 0.007549429 ubox
17 29 0.036850173 ubox
17 52 0.024728574 ubox
17 54 0.006923821 ubox
18 26 0.007088417 ubox
18 27 0.991320614 ubox
18 47 0.004739724 ubox
18 53 0.008332284 ubox
18 54 0.011125342 ubox
19 26 0.994130432 ubox
19 46 0.004761766 ubox
19 53 0.012084904 ubox
20 25 0.980456227 ubox
20 35 0.003170048 ubox
20 45 0.004731264 ubox
20 51 0.048935386 ubox
21 31 0.003765859 ubox
21 34 0.003236111 ubox
21 43 0.003264461 ubox
21 44 0.003341727 ubox
21 50 0.049090676 ubox
21 55 0.004602075 ubox
21 57 0.031708338 ubox
21 61 0.003270280 ubox
22 30 0.003751055 ubox
22 33 0.003231004 ubox
22 42 0.003172800 ubox
22 49 0.045960734 ubox
22 54 0.003972849 ubox
22 56 0.033045841 ubox
22 60 0.004382354 ubox
23 29 0.003278117 ubox
23 54 0.022817126 ubox
23 58 0.004028980 ubox
23 59 0.004824132 ubox
24 47 0.053515303 ubox
24 53 0.030015941 ubox
24 54 0.068654384 ubox
25 42 0.003301392 ubox
25 46 0.054200258 ubox
25 53 0.069279315 ubox
26 35 0.009175215 ubox
26 41 0.003284215 ubox
26 44 0.004237216 ubox
26 45 0.053690139 ubox
26 51 0.081067791 ubox
26 62 0.013432651 ubox
27 34 0.009686672 ubox
27 41 0.009529363 ubox
27 43 0.023355305 ubox
27 44 0.024628605 ubox
27 50 0.081317796 ubox
27 61 0.013911390 ubox
28 33 0.009400095 ubox
28 36 0.006225252 ubox
28 40 0.009710897 ubox
28 42 0.023113471 ubox
28 49 0.081185847 ubox
28 60 0.013968717 ubox
29 35 0.006699332 ubox
29 44 0.035360590 ubox
29 48 0.076845089 ubox
30 34 0.006583427 ubox
30 38 0.024240092 ubox
30 43 0.043667469 ubox
30 48 0.021256760 ubox
30 57 0.034830679 ubox
31 37 0.024430224 ubox
31 42 0.043669969 ubox
31 47 0.029754655 ubox
31 56 0.034793300 ubox
32 44 0.130278115 ubox
33 43 0.139560171 ubox
33 48 0.026129909 ubox
33 55 0.027382284 ubox
34 42 0.139509212 ubox
34 47 0.027072925 ubox
34 53 0.022861211 ubox
34 54 0.027071925 ubox
35 46 0.028957663 ubox
35 49 0.005835715 ubox
35 52 0.022818181 ubox
35 53 0.025906676 ubox
36 44 0.229305841 ubox
36 48 0.008963235 ubox
37 43 0.247439173 ubox
37 48 0.016939792 ubox
37 50 0.035683927 ubox
37 55 0.004321319 ubox
37 57 0.003958644 ubox
37 61 0.046754797 ubox
38 42 0.231545230 ubox
38 47 0.040803353 ubox
38 49 0.038108382 ubox
38 54 0.004326333 ubox
38 60 0.049179849 ubox
39 46 0.110486438 ubox
39 53 0.004385597 ubox
39 59 0.050514050 ubox
40 48 0.244744066 ubox
41 47 0.256781075 ubox
41 56 0.368080312 ubox
42 48 0.056446910 ubox
42 55 0.376861146 ubox
42 57 0.031035498 ubox
43 47 0.057855570 ubox
43 53 0.010541058 ubox
43 54 0.376356394 ubox
43 56 0.031034472 ubox
43 59 0.042369617 ubox
44 52 0.013985284 ubox
44 53 0.340442634 ubox
44 54 0.033148921 ubox
44 58 0.042360963 ubox
44 60 0.008243153 ubox
45 53 0.154999143 ubox
45 56 0.040576104 ubox
45 59 0.008751411 ubox
46 55 0.043856059 ubox
46 62 0.003929746 ubox
47 55 0.037929820 ubox
47 57 0.012156322 ubox
47 61 0.004009742 ubox
48 54 0.037682869 ubox
48 56 0.012004639 ubox
48 60 0.003966719 ubox
53 62 0.009794689 ubox
54 61 0.007910539 ubox
2 54 0.9500000 lbox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
7 44 0.9500000 lbox
8 43 0.9500000 lbox
9 42 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
showpage
end
%%EOF
