%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGACCUCCUCCCCGCACACUUUGAACGCCGCGCCUGAGGCCAGCUGGCACAUGCGCAUGCGUGUCUCUGGUGCCUGCUCUCCCCACCAAAGCAAGAAGCGGCGGGUACUUGAAGCGGAGUGAGCCGGAAGUCGCUUUGCCUGCCCAUUUCCACGCUGUACCGGCGGAAAUUCAAGCACUGGAAGAGAGGUUCCGGGGCUGGGCUGGCCUGACUGAAGGCGGCGGA\
) } def
/len { sequence length } bind def

/coor [
[42.03383636 420.34411621]
[45.08615875 435.08782959]
[45.00599670 450.14398193]
[41.79684830 464.85433960]
[35.59901428 478.57586670]
[26.68342972 490.70874023]
[15.43984890 500.72250366]
[2.35979176 508.17941284]
[-11.98493767 512.75354004]
[-26.96724892 514.24487305]
[-41.93217850 512.58819580]
[-56.22552872 507.85598755]
[-69.22245026 500.25506592]
[-80.35477448 490.11776733]
[-89.13584900 477.88720703]
[-95.18179321 464.09808350]
[-98.22831726 449.35317993]
[-98.14222717 434.29705811]
[-94.92729950 419.58795166]
[-88.72406769 405.86886597]
[-79.80371094 393.73950195]
[-68.55619049 383.73016357]
[-55.47319794 376.27838135]
[-41.12667084 371.70993042]
[-26.14377403 370.22448730]
[-11.17949581 371.88705444]
[-6.46499014 357.64718628]
[-1.75048411 343.40734863]
[2.96402168 329.16748047]
[7.67852736 314.92764282]
[12.39303303 300.68777466]
[-0.78227854 288.85714722]
[-7.46585560 272.40219116]
[-6.26462889 254.62919617]
[2.62514043 239.13117981]
[17.44814110 229.06170654]
[35.23641586 226.49314880]
[39.35315704 212.06912231]
[43.46989822 197.64509583]
[47.58663940 183.22106934]
[51.70338058 168.79704285]
[55.82012177 154.37303162]
[59.93686295 139.94900513]
[64.05360413 125.52497864]
[68.17034149 111.10095215]
[66.50567627 96.19361115]
[59.30862427 83.03297424]
[52.11157227 69.87232971]
[39.20894241 62.22235870]
[24.20894241 62.22235870]
[9.20894241 62.22235870]
[-5.79105806 62.22235870]
[-20.79105759 62.22235870]
[-35.79105759 62.22235870]
[-49.71486282 70.88606262]
[-64.05029297 62.92193222]
[-64.05029297 46.52278519]
[-49.71486282 38.55865479]
[-35.79105759 47.22235870]
[-20.79105759 47.22235870]
[-5.79105806 47.22235870]
[9.20894241 47.22235870]
[24.20894241 47.22235870]
[39.20894241 47.22235870]
[39.25068283 34.73980331]
[44.80741882 24.84044647]
[35.52510452 13.05746555]
[20.90736961 7.00499153]
[19.10936356 -7.78069210]
[9.82704926 -19.56367302]
[0.54473436 -31.34665298]
[-8.73758030 -43.12963486]
[-18.01989555 -54.91261292]
[-27.30220985 -66.69559479]
[-36.58452606 -78.47857666]
[-45.86684036 -90.26155853]
[-55.14915466 -102.04453278]
[-64.43147278 -113.82751465]
[-62.89377213 -98.90653992]
[-67.90628815 -84.76883698]
[-78.49950409 -74.14886475]
[-92.62451935 -69.10071564]
[-107.54932404 -70.60076904]
[-120.38721466 -78.35890198]
[-128.65512085 -90.87456512]
[-130.75390625 -105.72700500]
[-126.27761078 -120.04353333]
[-116.09204102 -131.05508423]
[-102.16724396 -136.63183594]
[-87.19651794 -135.69515991]
[-74.07755280 -128.42810059]
[-81.27460480 -141.58872986]
[-96.20447540 -147.46058655]
[-100.78438568 -162.83602905]
[-91.50102234 -175.92031860]
[-75.47579193 -176.67633057]
[-65.00187683 -164.52409363]
[-68.11396790 -148.78578186]
[-60.91691589 -135.62515259]
[-52.64849091 -123.10983276]
[-43.36617661 -111.32685089]
[-34.08385849 -99.54386902]
[-24.80154419 -87.76088715]
[-15.51922989 -75.97791290]
[-6.23691511 -64.19493103]
[3.04539990 -52.41194916]
[12.32771492 -40.62896729]
[21.61002922 -28.84598732]
[30.89234543 -17.06300735]
[44.84614563 -11.85333157]
[47.30808258 3.77515030]
[56.59040070 15.55813026]
[60.17040253 14.71767235]
[63.84082413 14.49228668]
[69.33942413 0.53644741]
[74.83802032 -13.41939163]
[80.33661652 -27.37523079]
[85.83521271 -41.33106995]
[91.33380890 -55.28690720]
[96.83240509 -69.24274445]
[102.33100128 -83.19858551]
[107.82959747 -97.15442657]
[99.38002014 -110.16919708]
[100.22767639 -125.66310120]
[110.04663086 -137.67842102]
[125.06128693 -141.59501648]
[139.49821472 -135.90686035]
[147.80610657 -122.80120087]
[146.79042053 -107.31739807]
[136.84169006 -95.40930939]
[121.78543091 -91.65583038]
[116.28683472 -77.69998932]
[110.78823853 -63.74415207]
[105.28964233 -49.78831100]
[99.79104614 -35.83247375]
[94.29244995 -21.87663460]
[88.79385376 -7.92079544]
[83.29525757 6.03504372]
[77.79666138 19.99088287]
[86.62486267 34.76681519]
[82.11595154 52.62047958]
[65.27221680 62.67528152]
[72.46926117 75.83592224]
[79.66631317 88.99655914]
[94.04684448 71.79776001]
[121.13414001 72.69631195]
[135.37399292 67.98180389]
[149.61384583 63.26729584]
[163.85369873 58.55279160]
[178.09355164 53.83828735]
[192.33340454 49.12377930]
[196.99549866 44.46046448]
[202.48786926 43.05440521]
[207.03507996 44.48211670]
[221.40049744 40.16527557]
[235.76589966 35.84843445]
[250.13130188 31.53158951]
[263.56027222 21.18271255]
[277.22219849 31.22201347]
[271.35726929 47.12919998]
[254.44815063 45.89699554]
[240.08273315 50.21383667]
[225.71733093 54.53068161]
[211.35192871 58.84752274]
[197.04791260 63.36363220]
[182.80805969 68.07814026]
[168.56820679 72.79264832]
[154.32835388 77.50714874]
[140.08850098 82.22165680]
[125.84864807 86.93616486]
[125.27579498 94.41425323]
[137.65554810 102.88429260]
[124.13009644 109.37043762]
[123.55724335 116.84852600]
[136.91285706 123.67695618]
[150.26847839 130.50538635]
[166.07804871 129.89852905]
[173.88784790 142.58143616]
[187.24345398 149.40986633]
[200.59907532 156.23829651]
[213.95469666 163.06672668]
[227.31031799 169.89515686]
[240.66593933 176.72358704]
[255.62446594 171.62283325]
[269.77148438 178.66821289]
[274.71380615 193.67984009]
[267.51925659 207.75158691]
[252.45620728 212.53491211]
[238.46131897 205.19197083]
[233.83750916 190.07920837]
[220.48188782 183.25077820]
[207.12626648 176.42234802]
[193.77064514 169.59391785]
[180.41502380 162.76548767]
[167.05941772 155.93705750]
[152.20512390 157.03233337]
[143.44004822 143.86100769]
[130.08442688 137.03257751]
[116.72881317 130.20414734]
[95.03032684 128.39205933]
[82.59436798 115.21769714]
[78.47762299 129.64172363]
[74.36088562 144.06575012]
[70.24414062 158.48976135]
[66.12740326 172.91378784]
[62.01066208 187.33781433]
[57.89392090 201.76184082]
[53.77717972 216.18585205]
[49.66044235 230.60987854]
[59.70100784 237.90586853]
[67.00815582 247.90809631]
[70.89080811 259.64520264]
[70.98952484 271.98300171]
[67.30979156 283.73413086]
[60.21998596 293.77221680]
[50.41459274 301.13992310]
[38.84618378 305.14019775]
[26.63288689 305.40228271]
[21.91838074 319.64215088]
[17.20387459 333.88198853]
[12.48936939 348.12185669]
[7.77486372 362.36169434]
[3.06035805 376.60156250]
[16.06026840 384.19735718]
[27.19658279 394.33026123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 223]
[27 222]
[28 221]
[29 220]
[30 219]
[31 218]
[37 209]
[38 208]
[39 207]
[40 206]
[41 205]
[42 204]
[43 203]
[44 202]
[45 201]
[46 144]
[47 143]
[48 142]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[66 112]
[67 111]
[69 109]
[70 108]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[91 99]
[92 98]
[114 139]
[115 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[146 170]
[147 169]
[148 168]
[149 167]
[150 166]
[151 165]
[154 164]
[155 163]
[156 162]
[157 161]
[174 199]
[175 198]
[176 197]
[178 195]
[179 194]
[180 193]
[181 192]
[182 191]
[183 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
