%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCACCCCCCGGCCGGGCCGUGCUUCUGCCCCUACAAGGUUUGGGCCGAGGUGGGGGAGGGUCCUGGUUGCCGGCCCCGCCCGGUCCCUCCCCGCCUUUUAGGCGCCCGCGUGGCCGGGACGUCCCAGUCCCGCUCCGUCCUCCUCGCCUGCCACCGGUGCACCCAGUCCGCUCACCCAGCCCAGUCCGUCCGGUCCUCACCGCCUGCCGGCCGGCCCACCCCCCACCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[112.10243988 617.41784668]
[105.37878418 604.00915527]
[102.85385895 589.22149658]
[98.59362793 603.60382080]
[94.33339691 617.98608398]
[90.07316589 632.36840820]
[85.81293488 646.75067139]
[94.59419250 659.68988037]
[92.95243835 675.24108887]
[81.66284943 686.06140137]
[66.05603790 687.04180908]
[53.50104904 677.71948242]
[49.92597198 662.49603271]
[57.01884842 648.55957031]
[71.43064117 642.49047852]
[75.69087219 628.10815430]
[79.95110321 613.72589111]
[84.21132660 599.34356689]
[88.47155762 584.96124268]
[90.91499329 570.16162109]
[91.50389099 555.17315674]
[92.09278870 540.18475342]
[92.68168640 525.19628906]
[93.27058411 510.20788574]
[93.85948181 495.21945190]
[90.98717499 488.42584229]
[94.55545044 480.03903198]
[95.34049225 465.05960083]
[96.12553406 450.08016968]
[88.64820862 443.15103149]
[86.15660858 433.03994751]
[89.70439148 423.01638794]
[98.35121918 416.45870972]
[99.52810669 401.50497437]
[87.36897278 396.48516846]
[77.19596100 388.11276245]
[69.90804291 377.11190796]
[66.15382385 364.43969727]
[66.27382660 351.20291138]
[70.26963806 338.56143188]
[77.80273438 327.62634277]
[88.22309113 319.36264038]
[100.62528992 314.50378418]
[99.84025574 299.52432251]
[91.44746399 287.21945190]
[98.45191193 273.03323364]
[97.66687775 258.05380249]
[96.88183594 243.07435608]
[96.09679413 228.09490967]
[95.31175232 213.11547852]
[94.52671814 198.13603210]
[83.84694672 190.94729614]
[79.18228149 178.73986816]
[82.44220734 165.88397217]
[92.65529633 157.12095642]
[92.06639862 142.13252258]
[91.47750092 127.14408875]
[90.88860321 112.15565491]
[82.88438416 99.46973419]
[69.60957336 92.48551941]
[56.33475876 85.50129700]
[43.05994415 78.51708221]
[29.78512955 71.53286743]
[16.51031494 64.54864502]
[3.23550034 57.56443024]
[-10.03931427 50.58021164]
[-25.85489464 51.00206375]
[-33.51577377 38.22864914]
[-46.79058838 31.24443054]
[-62.60617065 31.66628456]
[-70.26705170 18.89286613]
[-83.54186249 11.90864849]
[-96.81668091 4.92443085]
[-109.76313019 13.18790627]
[-125.10752106 13.85502911]
[-138.72230530 6.74634647]
[-146.94515991 -6.22594166]
[-147.56417847 -21.57235336]
[-140.41285706 -35.16478348]
[-127.41485596 -43.34693527]
[-112.06658173 -43.91785049]
[-98.49663544 -36.72395706]
[-90.35526276 -23.70037460]
[-89.83245850 -8.35038376]
[-76.55764771 -1.36616576]
[-63.28283310 5.61805201]
[-48.41675186 4.69663954]
[-39.80636978 17.96961594]
[-26.53155708 24.95383263]
[-11.66547871 24.03242111]
[-3.05509639 37.30539703]
[10.21971798 44.28961563]
[23.49453354 51.27383041]
[36.76934814 58.25804901]
[50.04416275 65.24226379]
[63.31897736 72.22648621]
[76.59378815 79.21070099]
[89.86860657 86.19492340]
[100.81656647 75.94104004]
[94.71551514 62.23785400]
[88.61446381 48.53467178]
[82.51342010 34.83148956]
[70.54745483 22.82099152]
[78.77606964 7.99782658]
[95.29785156 11.80140591]
[96.21659851 28.73044205]
[102.31764984 42.43362427]
[108.41870117 56.13680649]
[114.51974487 69.83998871]
[129.51460266 70.23264313]
[136.32446289 56.86754227]
[143.04670715 43.45816040]
[149.68103027 30.00506973]
[156.31536865 16.55197906]
[157.30001831 7.49099970]
[163.12559509 2.96707034]
[169.93545532 -10.39802742]
[176.74531555 -23.76312637]
[183.55517578 -37.12822342]
[190.36502075 -50.49332047]
[195.64877319 -64.53191376]
[199.34107971 -79.07037354]
[203.03337097 -93.60884094]
[206.72567749 -108.14730072]
[210.41796875 -122.68576813]
[214.11027527 -137.22422791]
[205.81527710 -150.67668152]
[209.54338074 -166.03495789]
[223.08277893 -174.18727112]
[238.40078735 -170.29699707]
[246.40950012 -156.67216492]
[242.35748291 -141.39613342]
[228.64874268 -133.53192139]
[224.95643616 -118.99346161]
[221.26414490 -104.45500183]
[217.57183838 -89.91653442]
[213.87953186 -75.37807465]
[210.18724060 -60.83961105]
[220.11788940 -72.08159637]
[233.13201904 -79.54030609]
[247.85180664 -82.42607880]
[262.71887207 -80.43338776]
[276.15917969 -73.77320862]
[286.74981689 -63.15065384]
[293.36950684 -49.69036102]
[295.31744385 -34.81737900]
[292.38739014 -20.10633850]
[284.88952637 -7.11471224]
[273.61770630 2.78205538]
[259.76528931 8.53618050]
[244.79879761 9.53846645]
[230.30281067 5.68279934]
[217.81201172 -2.62261629]
[208.64881897 -14.49847412]
[203.78337097 -28.68745995]
[203.73011780 -43.68346405]
[196.92027283 -30.31836510]
[190.11041260 -16.95326805]
[183.30055237 -3.58817005]
[176.49069214 9.77692795]
[169.76846313 23.18630981]
[163.13412476 36.63940048]
[156.49980164 50.09249115]
[156.36056519 57.46703339]
[149.68955994 63.67739868]
[142.87969971 77.04249573]
[157.76417542 78.90061951]
[170.91369629 86.11795044]
[180.47384644 97.67665863]
[185.09637451 111.94663239]
[184.12936401 126.91543579]
[177.70919800 140.47203064]
[166.74130249 150.70458984]
[152.77244568 156.17004395]
[137.77261353 156.09757996]
[123.85721588 150.49745178]
[112.98867798 140.15942383]
[106.69977570 126.54142761]
[105.87704468 111.56675720]
[106.46593475 126.55519104]
[107.05483246 141.54362488]
[107.64373016 156.53205872]
[120.70814514 168.17974854]
[121.28521729 185.33476257]
[109.50615692 197.35098267]
[110.29119873 212.33042908]
[111.07624054 227.30987549]
[111.86127472 242.28932190]
[112.64631653 257.26876831]
[113.43135834 272.24819946]
[121.88029480 285.62451172]
[114.81969452 298.73928833]
[115.60473633 313.71875000]
[135.17477417 321.01068115]
[149.28890991 336.30462646]
[154.94981384 356.25540161]
[150.99935913 376.53961182]
[163.47140503 384.87316895]
[175.94345093 393.20672607]
[188.41548157 401.54028320]
[204.80599976 402.07232666]
[212.30084229 416.65859985]
[203.18997192 430.29397583]
[186.84585571 428.95156860]
[180.08193970 414.01232910]
[167.60989380 405.67877197]
[155.13784790 397.34521484]
[142.66580200 389.01165771]
[136.66728210 394.29333496]
[129.81916809 398.41427612]
[122.34332275 401.24096680]
[114.48187256 402.68185425]
[113.30498505 417.63562012]
[122.78431702 435.44064331]
[111.10497284 450.86520386]
[110.31993866 465.84463501]
[109.53489685 480.82406616]
[108.84791565 495.80834961]
[108.25901794 510.79678345]
[107.67012024 525.78521729]
[107.08122253 540.77362061]
[106.49232483 555.76208496]
[105.90342712 570.75048828]
[113.04667664 557.56060791]
[123.72322845 547.02441406]
[137.00653076 540.05633545]
[151.74378967 537.26116943]
[166.65603638 538.88134766]
[180.44909668 544.77642822]
[191.92594910 554.43463135]
[200.09056091 567.01794434]
[204.23439026 581.43420410]
[203.99780273 596.43231201]
[199.40132141 610.71069336]
[190.84387207 623.03021240]
[179.06808472 632.32165527]
[165.09594727 637.77868652]
[150.14002991 638.92779541]
[135.49827576 635.66912842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[20 223]
[21 222]
[22 221]
[23 220]
[24 219]
[25 218]
[27 217]
[28 216]
[29 215]
[33 213]
[34 212]
[43 193]
[44 192]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[55 182]
[56 181]
[57 180]
[58 179]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[65 92]
[66 91]
[68 89]
[69 88]
[71 86]
[72 85]
[73 84]
[99 109]
[100 108]
[101 107]
[102 106]
[110 166]
[111 165]
[112 163]
[113 162]
[114 161]
[116 160]
[117 159]
[118 158]
[119 157]
[120 156]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
