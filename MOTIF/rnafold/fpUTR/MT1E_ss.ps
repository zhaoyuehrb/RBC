%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAACGCGGGCGGUGCGGACUCAGCGGGCCGGGUGCAGGCGCGGAGCUGGGCCUCUGCGCCCGGCCCGACCUCCGUCUAUAAAUAGAGCAGCCAGUUGCAGGGCUCCAUUCUGCUUUCCAACUGCCUGACUGCUUGUUCGUCUCACUGGUGUGAGCUCCAGCAUCCCCUUUGCUCGAA\
) } def
/len { sequence length } bind def

/coor [
[215.15730286 269.83007812]
[214.26663208 256.46893311]
[219.62809753 244.09602356]
[210.60086060 232.11648560]
[201.57363892 220.13696289]
[192.54641724 208.15742493]
[183.51919556 196.17788696]
[178.97201538 194.63638306]
[175.35668945 190.20593262]
[174.39466858 183.61906433]
[165.79101562 171.33178711]
[157.18736267 159.04449463]
[148.58372498 146.75721741]
[139.98007202 134.46994019]
[131.37643433 122.18265533]
[78.47185516 113.42990875]
[63.49240875 112.64486694]
[48.51296616 111.85983276]
[33.53352356 111.07479095]
[18.55408096 110.28974915]
[12.01691723 120.98246002]
[1.60798371 127.83197784]
[-10.65553379 129.58462524]
[-22.42819977 125.96741486]
[-31.48489380 117.72842407]
[-36.14135361 106.48310852]
[-51.08427429 105.17577362]
[-66.02719116 103.86843109]
[-80.97011566 102.56109619]
[-95.91303253 101.25376129]
[-110.85595703 99.94642639]
[-125.79887390 98.63909149]
[-140.74179077 97.33175659]
[-155.68472290 96.02442169]
[-170.62763977 94.71707916]
[-185.57055664 93.40974426]
[-200.51347351 92.10240936]
[-215.45640564 90.79507446]
[-230.39932251 89.48773956]
[-245.34223938 88.18040466]
[-259.76425171 94.68549347]
[-271.76873779 85.86838531]
[-286.71166992 84.56104279]
[-296.78976440 96.35984039]
[-311.88610840 99.94876099]
[-326.19580078 93.94779205]
[-334.21652222 80.66443634]
[-332.86413574 65.20640564]
[-322.65863037 53.51763535]
[-307.52426147 50.09269333]
[-293.28048706 56.24853897]
[-285.40432739 69.61812592]
[-270.46139526 70.92546082]
[-257.10821533 64.32685852]
[-244.03489685 73.23748016]
[-229.09197998 74.54481506]
[-214.14906311 75.85214996]
[-199.20614624 77.15949249]
[-184.26321411 78.46682739]
[-169.32029724 79.77416229]
[-154.37738037 81.08149719]
[-139.43446350 82.38883209]
[-124.49153900 83.69616699]
[-109.54862213 85.00350952]
[-94.60569763 86.31084442]
[-79.66278076 87.61817932]
[-64.71985626 88.92551422]
[-49.77693558 90.23284912]
[-34.83401871 91.54018402]
[-23.90469170 77.69669342]
[-6.70744658 73.12435150]
[9.94509411 79.82904053]
[19.33912086 95.31031036]
[34.31856155 96.09535217]
[49.29800415 96.88038635]
[64.27745056 97.66542816]
[79.25688934 98.45046997]
[88.69670105 86.79327393]
[84.81441498 72.30438995]
[80.93212891 57.81550217]
[68.95988464 46.60847092]
[72.94235992 30.70023727]
[88.78272247 26.45582581]
[100.18576050 38.24152374]
[95.42101288 53.93321609]
[99.30329895 68.42210388]
[103.18558502 82.91098785]
[110.52169037 84.47032928]
[125.19390869 87.58900452]
[132.53001404 89.14834595]
[141.96981812 77.49114990]
[151.40962219 65.83396149]
[154.08134460 50.23997498]
[168.10388184 45.21826553]
[177.54368591 33.56107712]
[186.98350525 21.90388870]
[196.42330933 10.24669933]
[205.86311340 -1.41049051]
[215.30291748 -13.06768036]
[217.97463989 -28.66166878]
[231.99717712 -33.68337631]
[241.43698120 -45.34056473]
[250.87678528 -56.99775314]
[260.31658936 -68.65494537]
[269.75640869 -80.31213379]
[265.61035156 -95.26506042]
[271.07678223 -109.78738403]
[284.05368042 -118.29498291]
[299.55123901 -117.51650238]
[311.61026001 -107.75128937]
[315.59384155 -92.75426483]
[309.97021484 -78.29209900]
[296.90176392 -69.92577362]
[281.41360474 -70.87232971]
[271.97378540 -59.21513748]
[262.53396606 -47.55794907]
[253.09417725 -35.90076065]
[243.65437317 -24.24357033]
[241.65785217 -9.48338127]
[226.96009827 -3.62787414]
[217.52029419 8.02931499]
[208.08049011 19.68650436]
[198.64068604 31.34369469]
[189.20088196 43.00088501]
[179.76107788 54.65807343]
[177.76455688 69.41825867]
[163.06681824 75.27376556]
[153.62701416 86.93096161]
[144.18721008 98.58815002]
[143.66371155 113.57901001]
[152.26734924 125.86629486]
[160.87100220 138.15356445]
[169.47465515 150.44085693]
[178.07829285 162.72813416]
[186.68194580 175.01541138]
[195.49871826 187.15066528]
[204.52593994 199.13020325]
[213.55317688 211.10974121]
[222.58039856 223.08926392]
[231.60762024 235.06880188]
[251.95747375 235.02195740]
[266.99700928 248.37718201]
[269.30136108 268.12008667]
[282.42065430 275.39224243]
[295.53994751 282.66439819]
[308.65924072 289.93652344]
[321.77853394 297.20867920]
[338.15679932 296.38162231]
[346.83377075 310.29718018]
[338.88330078 324.64019775]
[322.48416138 324.65582275]
[314.50637817 310.32797241]
[301.38708496 303.05581665]
[288.26779175 295.78369141]
[275.14849854 288.51153564]
[262.02920532 281.23941040]
[261.04858398 282.18325806]
[260.02288818 283.07785034]
[266.12393188 296.78103638]
[278.80532837 306.24108887]
[276.91360474 321.01507568]
[283.01464844 334.71826172]
[289.11569214 348.42141724]
[295.21676636 362.12460327]
[310.29742432 366.26071167]
[319.14871216 379.15213013]
[317.59127808 394.71197510]
[306.36050415 405.59332275]
[290.75921631 406.65835571]
[278.15390015 397.40420532]
[274.49633789 382.20037842]
[281.51358032 368.22567749]
[275.41253662 354.52249146]
[269.31146240 340.81930542]
[263.21041870 327.11611938]
[250.96540833 318.63623047]
[252.42074585 302.88208008]
[246.31968689 289.17892456]
[233.25000000 288.15948486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 140]
[4 139]
[5 138]
[6 137]
[7 136]
[10 135]
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[16 77]
[17 76]
[18 75]
[19 74]
[20 73]
[26 69]
[27 68]
[28 67]
[29 66]
[30 65]
[31 64]
[32 63]
[33 62]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[42 53]
[43 52]
[78 87]
[79 86]
[80 85]
[90 129]
[91 128]
[92 127]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[101 118]
[102 117]
[103 116]
[104 115]
[105 114]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
[158 178]
[159 177]
[161 175]
[162 174]
[163 173]
[164 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
