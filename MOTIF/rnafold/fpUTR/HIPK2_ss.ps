%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUCCGCCCGCCCGGCCGCCCCGAGCCCCGAGCCCCGAGCCCCCCGCGCCGGGCCCGGGCGGCAGCGGCGGCGGCGGCGGCGGCGGCGCGCCCGGCCCCCUCCCCCGGCGCCGGCCACGGGAGGCGGUGAUGCGGGCGCGGGCGGCCUCGGCUGCGCCGAGAGCGGAGACACAGGCUCAAGAUGGCAGAUUCCGACUGAGGCUGGGGGGGCCGAGCUCGCGCGCCGCUUUCCCGUCCCCGUUGCCAUGAACCGC\
GGACACCCCGGCCCCG\
) } def
/len { sequence length } bind def

/coor [
[-138.80769348 619.39215088]
[-146.07763672 617.54882812]
[-156.80603027 628.03222656]
[-167.53442383 638.51562500]
[-178.20210266 649.06079102]
[-188.80870056 659.66735840]
[-199.41529846 670.27398682]
[-210.02191162 680.88055420]
[-220.62850952 691.48718262]
[-231.23510742 702.09375000]
[-241.71850586 712.82220459]
[-252.07728577 723.67095947]
[-262.43606567 734.51971436]
[-272.79486084 745.36846924]
[-283.15362549 756.21722412]
[-293.51242065 767.06597900]
[-303.87118530 777.91473389]
[-307.51574707 786.24993896]
[-314.41281128 788.82812500]
[-324.89620972 799.55651855]
[-319.77926636 813.89453125]
[-321.38845825 828.97088623]
[-329.35131836 841.80108643]
[-342.04299927 849.86840820]
[-356.91738892 851.61810303]
[-371.01803589 846.75622559]
[-381.50143433 857.48461914]
[-382.12707520 870.34375000]
[-391.04895020 879.06158447]
[-403.11871338 879.36816406]
[-413.72531128 889.97473145]
[-415.16317749 905.95324707]
[-428.63101196 914.67089844]
[-443.79742432 909.44024658]
[-449.02804565 894.27380371]
[-440.31042480 880.80603027]
[-424.33190918 879.36816406]
[-413.72531128 868.76153564]
[-410.08328247 851.57879639]
[-392.22982788 847.00128174]
[-381.74642944 836.27288818]
[-386.93267822 822.28826904]
[-385.52703857 807.37744141]
[-377.75497437 794.50280762]
[-365.11218262 786.24572754]
[-350.07696533 784.28869629]
[-335.62460327 789.07312012]
[-325.14120483 778.34472656]
[-314.71994019 767.55596924]
[-304.36117554 756.70721436]
[-294.00238037 745.85845947]
[-283.64361572 735.00970459]
[-273.28482056 724.16088867]
[-262.92605591 713.31213379]
[-252.56726074 702.46337891]
[-251.77659607 697.78692627]
[-248.06262207 693.54602051]
[-241.84170532 691.48718262]
[-231.23510742 680.88055420]
[-220.62850952 670.27398682]
[-210.02191162 659.66735840]
[-199.41529846 649.06079102]
[-188.80870056 638.45416260]
[-186.31033325 631.52777100]
[-178.01782227 627.78717041]
[-167.28941345 617.30383301]
[-156.56101990 606.82043457]
[-113.86253357 591.08666992]
[-106.86809540 577.81726074]
[-99.87366486 564.54779053]
[-92.87922668 551.27838135]
[-85.88478851 538.00891113]
[-78.89035034 524.73950195]
[-71.89591217 511.47006226]
[-64.90147400 498.20065308]
[-65.81143951 483.33386230]
[-52.53183746 474.73370361]
[-45.53739929 461.46426392]
[-38.54296494 448.19482422]
[-31.54852676 434.92541504]
[-24.55408859 421.65597534]
[-26.67330360 402.41528320]
[-9.38241863 392.00662231]
[-2.69634295 378.57916260]
[3.98973250 365.15170288]
[10.67580795 351.72427368]
[17.36188316 338.29681396]
[24.04795837 324.86935425]
[30.73403358 311.44192505]
[37.42010880 298.01446533]
[44.10618591 284.58700562]
[50.79225922 271.15957642]
[47.43062973 249.76744080]
[66.40618134 237.81631470]
[72.46499634 224.09440613]
[78.52381134 210.37249756]
[84.58262634 196.65058899]
[90.64144135 182.92868042]
[96.70025635 169.20677185]
[102.75907135 155.48486328]
[108.81788635 141.76295471]
[114.87670135 128.04104614]
[88.20761871 134.83361816]
[62.00086975 117.43515778]
[56.57101059 82.45085144]
[52.46606445 68.02346039]
[48.36111832 53.59607697]
[44.25617599 39.16869354]
[38.91653824 31.80350876]
[40.18816757 24.55093765]
[36.25012970 10.07710457]
[32.31208801 -4.39672852]
[28.37405014 -18.87056160]
[17.28511620 -30.15533638]
[21.40964317 -44.46748352]
[17.47160530 -58.94131470]
[13.36666012 -73.36869812]
[9.09535599 -87.74771118]
[4.82405329 -102.12672424]
[-9.85127354 -107.16799164]
[-18.73309135 -119.89170837]
[-18.40616226 -135.40533447]
[-8.99619389 -147.74357605]
[5.87848616 -152.16212463]
[20.49826050 -146.96194458]
[29.24152946 -134.14262390]
[28.74632454 -118.63346100]
[19.20306396 -106.39802551]
[23.47436714 -92.01901245]
[27.74567032 -77.64000702]
[31.41188431 -74.63112640]
[33.24818802 -69.30129242]
[31.94543839 -62.87935638]
[35.88347626 -48.40552139]
[46.69073486 -38.15601349]
[42.84788513 -22.80860138]
[46.78592300 -8.33476734]
[50.72396088 6.13906574]
[54.66199875 20.61289978]
[58.68355942 35.06374741]
[62.78850555 49.49113464]
[66.89344788 63.91851807]
[70.99839020 78.34590149]
[78.47026825 78.99477386]
[93.41403198 80.29252625]
[100.88591003 80.94139862]
[107.41645050 67.43762207]
[113.86890411 53.89635849]
[120.24304962 40.31805801]
[126.61719513 26.73975563]
[132.99134827 13.16145325]
[139.36549377 -0.41684771]
[145.73963928 -13.99514866]
[146.99710083 -30.90239906]
[163.59170532 -34.37447357]
[171.52192688 -19.38955307]
[159.31793213 -7.62100315]
[152.94378662 5.95729828]
[146.56964111 19.53559875]
[140.19549561 33.11389923]
[133.82135010 46.69220352]
[127.44720459 60.27050400]
[127.44956970 67.63371277]
[120.92022705 73.96817017]
[114.38967896 87.47194672]
[119.41030884 93.04359436]
[130.55361938 83.00234985]
[138.04862976 70.00909424]
[152.72203064 73.12216949]
[154.29563904 88.03939819]
[140.59486389 94.14565277]
[129.45155334 104.18690491]
[134.47218323 109.75856018]
[148.58068848 104.66445160]
[162.68920898 99.57034302]
[173.04154968 87.60625458]
[187.64004517 90.56143188]
[201.74856567 85.46733093]
[215.85707092 80.37322235]
[222.83483887 74.53640747]
[230.15805054 75.30278015]
[244.32446289 70.37196350]
[254.81430054 58.52823639]
[269.37768555 61.65182877]
[283.54409790 56.72100830]
[297.71051025 51.79019165]
[304.36471558 37.45502472]
[319.23495483 32.10230255]
[333.49896240 38.90770340]
[338.69418335 53.83369827]
[331.73834229 68.02496338]
[316.75827026 73.06207275]
[302.64132690 65.95659637]
[288.47491455 70.88741302]
[274.30850220 75.81822968]
[264.83193970 87.30927277]
[249.25527954 84.53836823]
[235.08886719 89.46918488]
[220.95118713 94.48172760]
[206.84266663 99.57583618]
[192.73416138 104.66994476]
[183.39094543 116.26966858]
[167.78330994 113.67885590]
[153.67480469 118.77296448]
[139.56628418 123.86707306]
[128.59861755 134.09985352]
[122.53979492 147.82176208]
[116.48097992 161.54367065]
[110.42216492 175.26557922]
[104.36334991 188.98748779]
[98.30453491 202.70939636]
[92.24571991 216.43130493]
[86.18690491 230.15321350]
[80.12808990 243.87512207]
[84.48954010 250.89778137]
[85.72825623 258.97653198]
[83.71782684 266.80197144]
[78.85252380 273.13467407]
[71.97255707 277.00173950]
[64.21971130 277.84564209]
[57.53363419 291.27310181]
[50.84755707 304.70053101]
[44.16148376 318.12799072]
[37.47540665 331.55545044]
[30.78933334 344.98287964]
[24.10325623 358.41033936]
[17.41718102 371.83779907]
[10.73110676 385.26522827]
[4.04503107 398.69268799]
[8.07820892 408.74478149]
[5.97705460 419.14660645]
[-1.33367038 426.53332520]
[-11.28465652 428.65039062]
[-18.27909279 441.91983032]
[-25.27353096 455.18927002]
[-32.26796722 468.45870972]
[-39.26240540 481.72814941]
[-38.85272980 497.54403687]
[-51.63204193 505.19506836]
[-58.62648010 518.46453857]
[-65.62091827 531.73394775]
[-72.61535645 545.00335693]
[-79.60979462 558.27282715]
[-86.60422516 571.54223633]
[-93.59866333 584.81164551]
[-100.59310150 598.08111572]
[-86.85523224 592.05859375]
[-73.14297485 598.13922119]
[-68.38375854 612.36413574]
[-75.67608643 625.47222900]
[-90.27226257 628.92938232]
[-102.66914368 620.48510742]
[-98.23204803 634.81384277]
[-93.79496002 649.14257812]
[-88.28662872 656.38244629]
[-89.39039612 663.66247559]
[-85.11909485 678.04144287]
[-72.84920502 688.92181396]
[-76.40156555 704.93157959]
[-92.12179565 709.60131836]
[-103.83827972 698.12713623]
[-99.49810028 682.31280518]
[-103.76940918 667.93377686]
[-108.12368011 653.57965088]
[-112.56076813 639.25091553]
[-116.99786377 624.92224121]
[-124.26779938 623.07885742]
[-127.24344635 637.78076172]
[-126.88892365 652.77655029]
[-140.89564514 658.14422607]
[-150.65354919 646.75195312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 67]
[3 66]
[4 65]
[5 63]
[6 62]
[7 61]
[8 60]
[9 59]
[10 58]
[11 55]
[12 54]
[13 53]
[14 52]
[15 51]
[16 50]
[17 49]
[19 48]
[20 47]
[26 41]
[27 40]
[30 38]
[31 37]
[68 246]
[69 245]
[70 244]
[71 243]
[72 242]
[73 241]
[74 240]
[75 239]
[77 237]
[78 236]
[79 235]
[80 234]
[81 233]
[83 229]
[84 228]
[85 227]
[86 226]
[87 225]
[88 224]
[89 223]
[90 222]
[91 221]
[92 220]
[94 214]
[95 213]
[96 212]
[97 211]
[98 210]
[99 209]
[100 208]
[101 207]
[102 206]
[105 143]
[106 142]
[107 141]
[108 140]
[110 139]
[111 138]
[112 137]
[113 136]
[115 134]
[116 133]
[117 130]
[118 129]
[119 128]
[146 165]
[147 164]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
[173 205]
[174 204]
[175 203]
[177 201]
[178 200]
[179 199]
[181 198]
[182 197]
[184 195]
[185 194]
[186 193]
[252 266]
[253 265]
[254 264]
[256 263]
[257 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
