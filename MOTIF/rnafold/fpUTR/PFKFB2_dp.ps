%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:38:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PFKFB2)
} def

/sequence { (\
GGUCCCGGCCACAAGCUGUCGGCUCGGUUCGGUCGCGUUACAGGGCAGGCGCCGGGGCCAAGGCAGGGAGGGAUCUUAGGAGAGAUCGUAGGACAUCUGAAGAGCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.999234532 ubox
2 58 0.999986201 ubox
3 57 0.999652862 ubox
4 56 0.999963223 ubox
5 27 0.004251411 ubox
5 55 0.999980897 ubox
6 26 0.005489177 ubox
6 54 0.999953716 ubox
7 17 0.003855645 ubox
7 24 0.008390261 ubox
7 25 0.006150845 ubox
7 34 0.016386793 ubox
7 53 0.999674953 ubox
8 16 0.010958964 ubox
8 23 0.012647504 ubox
8 28 0.006279675 ubox
8 33 0.019474456 ubox
8 46 0.006999255 ubox
8 50 0.061556550 ubox
8 52 0.997481692 ubox
9 15 0.013207396 ubox
9 22 0.012960834 ubox
9 27 0.011098905 ubox
9 32 0.020288258 ubox
9 44 0.003945998 ubox
9 45 0.009520998 ubox
9 49 0.083077923 ubox
9 51 0.989070592 ubox
10 18 0.019710645 ubox
10 21 0.028839343 ubox
10 26 0.017529614 ubox
10 31 0.038333836 ubox
10 43 0.005738125 ubox
10 44 0.011793040 ubox
10 48 0.102565762 ubox
11 17 0.027992420 ubox
11 19 0.050218648 ubox
11 28 0.062266070 ubox
11 33 0.018028209 ubox
12 18 0.053358356 ubox
12 27 0.066526990 ubox
12 32 0.019353191 ubox
13 17 0.045887801 ubox
13 29 0.007223707 ubox
14 24 0.093038376 ubox
14 28 0.005667294 ubox
14 29 0.118201774 ubox
14 39 0.011254811 ubox
15 23 0.096277619 ubox
15 28 0.137342223 ubox
15 33 0.006724430 ubox
15 36 0.005575352 ubox
15 38 0.012562868 ubox
15 46 0.114066183 ubox
15 50 0.261742733 ubox
15 52 0.020006284 ubox
16 22 0.096268396 ubox
16 27 0.138806452 ubox
16 32 0.006992367 ubox
16 35 0.005485655 ubox
16 37 0.012620415 ubox
16 43 0.428974149 ubox
16 44 0.045910719 ubox
16 45 0.110461720 ubox
16 48 0.177091726 ubox
16 49 0.246582537 ubox
16 51 0.026585604 ubox
17 21 0.086735547 ubox
17 26 0.138703229 ubox
17 31 0.007147242 ubox
17 37 0.022011168 ubox
17 40 0.004355939 ubox
17 42 0.433680689 ubox
17 43 0.030117713 ubox
17 44 0.093041274 ubox
17 47 0.197447881 ubox
17 48 0.194593537 ubox
17 51 0.107425746 ubox
18 25 0.138085367 ubox
18 30 0.007124895 ubox
18 33 0.003328383 ubox
18 34 0.005032597 ubox
18 36 0.048141518 ubox
18 38 0.005702172 ubox
18 39 0.007889685 ubox
18 41 0.437712975 ubox
18 46 0.201951516 ubox
18 50 0.820844714 ubox
19 27 0.006136281 ubox
19 32 0.007968007 ubox
19 35 0.010195314 ubox
19 37 0.013976519 ubox
19 40 0.433224667 ubox
19 44 0.012323937 ubox
19 45 0.200890288 ubox
19 49 0.821150325 ubox
20 26 0.008419031 ubox
20 31 0.022632870 ubox
20 35 0.385703092 ubox
20 37 0.027745768 ubox
20 43 0.016419086 ubox
20 44 0.183738449 ubox
20 48 0.809014768 ubox
21 25 0.008049480 ubox
21 29 0.004354275 ubox
21 30 0.022875433 ubox
21 34 0.391426028 ubox
21 36 0.024660212 ubox
21 39 0.261038594 ubox
21 50 0.005381376 ubox
22 28 0.007415204 ubox
22 29 0.017826935 ubox
22 33 0.391725630 ubox
22 36 0.036919453 ubox
22 38 0.274553121 ubox
22 46 0.850314635 ubox
22 50 0.026839955 ubox
23 27 0.009004126 ubox
23 32 0.391852206 ubox
23 35 0.037378529 ubox
23 37 0.275491777 ubox
23 43 0.033028505 ubox
23 44 0.014410670 ubox
23 45 0.853700561 ubox
23 48 0.003516818 ubox
23 49 0.026861508 ubox
24 31 0.291245210 ubox
24 32 0.031803038 ubox
24 42 0.031709752 ubox
24 43 0.015070292 ubox
24 44 0.852693804 ubox
24 47 0.003284839 ubox
24 48 0.024856613 ubox
24 49 0.003449708 ubox
25 31 0.247454823 ubox
25 35 0.275512979 ubox
25 37 0.047431621 ubox
25 43 0.840118683 ubox
25 44 0.018595801 ubox
25 48 0.012303851 ubox
26 30 0.234761999 ubox
26 34 0.275282155 ubox
26 36 0.047096803 ubox
26 39 0.011000314 ubox
26 53 0.006714562 ubox
27 33 0.225296032 ubox
27 36 0.038612000 ubox
27 38 0.009286143 ubox
27 41 0.769956945 ubox
27 46 0.030100906 ubox
27 50 0.014565858 ubox
27 52 0.006752394 ubox
28 32 0.062353798 ubox
28 35 0.037863748 ubox
28 40 0.767113970 ubox
28 45 0.030098779 ubox
28 49 0.013935856 ubox
28 51 0.006619956 ubox
29 44 0.030006646 ubox
29 48 0.012693224 ubox
29 49 0.008849608 ubox
29 55 0.003583375 ubox
30 37 0.846995118 ubox
30 43 0.029696231 ubox
30 48 0.013163682 ubox
30 51 0.003515317 ubox
30 54 0.005845536 ubox
31 36 0.845577768 ubox
31 39 0.010570562 ubox
31 50 0.010717326 ubox
31 53 0.008007790 ubox
32 38 0.010445352 ubox
32 41 0.027199780 ubox
32 46 0.023091573 ubox
32 50 0.164131190 ubox
32 52 0.008045910 ubox
33 37 0.004564535 ubox
33 40 0.025658312 ubox
33 44 0.004034481 ubox
33 45 0.023024419 ubox
33 49 0.164344721 ubox
34 43 0.007326984 ubox
34 44 0.022947036 ubox
34 48 0.164107458 ubox
34 51 0.009107729 ubox
35 46 0.163171968 ubox
35 50 0.016231704 ubox
35 52 0.019358292 ubox
36 45 0.163722754 ubox
36 49 0.016235983 ubox
36 51 0.019689702 ubox
37 46 0.042660126 ubox
37 50 0.022655036 ubox
38 44 0.009621314 ubox
38 45 0.042377524 ubox
38 49 0.022611158 ubox
39 43 0.008381982 ubox
39 44 0.037021572 ubox
39 48 0.022042817 ubox
44 53 0.009844205 ubox
45 52 0.009963021 ubox
46 51 0.010005554 ubox
61 106 0.003785735 ubox
62 105 0.003762136 ubox
62 106 0.013540035 ubox
62 109 0.991276480 ubox
63 105 0.014670001 ubox
63 108 0.999816103 ubox
64 104 0.014691421 ubox
64 107 0.999849338 ubox
65 106 0.999440543 ubox
66 105 0.998600606 ubox
66 106 0.014091467 ubox
66 109 0.005240301 ubox
67 76 0.006188988 ubox
67 97 0.003698387 ubox
67 98 0.100667397 ubox
67 105 0.028559921 ubox
67 106 0.004278398 ubox
67 108 0.005283703 ubox
68 75 0.006666271 ubox
68 77 0.004114775 ubox
68 96 0.003194021 ubox
68 97 0.101530868 ubox
68 105 0.006287057 ubox
69 74 0.006575476 ubox
69 76 0.004258142 ubox
69 96 0.101101029 ubox
69 98 0.594558843 ubox
69 106 0.005302685 ubox
70 75 0.004264242 ubox
70 97 0.598781598 ubox
70 98 0.242849683 ubox
70 105 0.005365797 ubox
71 96 0.590571756 ubox
71 97 0.243466170 ubox
71 98 0.747803372 ubox
72 87 0.045972873 ubox
72 96 0.224139360 ubox
72 97 0.753583335 ubox
73 86 0.046098504 ubox
73 96 0.733715939 ubox
74 85 0.046187843 ubox
74 92 0.012575941 ubox
74 93 0.917505220 ubox
74 95 0.333105694 ubox
74 103 0.008823629 ubox
75 84 0.046223846 ubox
75 91 0.016734418 ubox
75 92 0.997442044 ubox
75 102 0.009636229 ubox
75 104 0.008159851 ubox
76 83 0.045980261 ubox
76 90 0.012618663 ubox
76 91 0.997552768 ubox
76 93 0.010752052 ubox
76 101 0.009578437 ubox
76 103 0.008176782 ubox
77 82 0.043784575 ubox
77 90 0.997434903 ubox
77 92 0.009013850 ubox
77 100 0.007887432 ubox
77 102 0.007922875 ubox
78 89 0.995827224 ubox
79 87 0.017132448 ubox
79 98 0.006300391 ubox
80 86 0.012364851 ubox
80 87 0.998083991 ubox
80 97 0.006511353 ubox
81 86 0.976363444 ubox
81 96 0.006474676 ubox
81 98 0.013115265 ubox
82 97 0.013401119 ubox
83 96 0.013395945 ubox
86 93 0.014743771 ubox
87 92 0.014900853 ubox
88 94 0.011000899 ubox
89 93 0.009924697 ubox
89 99 0.026101012 ubox
90 98 0.028544898 ubox
91 97 0.028749266 ubox
91 98 0.007652537 ubox
92 96 0.018630753 ubox
92 97 0.008302719 ubox
96 103 0.012860464 ubox
97 102 0.013719587 ubox
97 104 0.018247202 ubox
98 103 0.018801273 ubox
1 59 0.9500000 lbox
2 58 0.9500000 lbox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
22 46 0.9500000 lbox
23 45 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
62 109 0.9500000 lbox
63 108 0.9500000 lbox
64 107 0.9500000 lbox
65 106 0.9500000 lbox
66 105 0.9500000 lbox
71 98 0.9500000 lbox
72 97 0.9500000 lbox
73 96 0.9500000 lbox
74 93 0.9500000 lbox
75 92 0.9500000 lbox
76 91 0.9500000 lbox
77 90 0.9500000 lbox
78 89 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
