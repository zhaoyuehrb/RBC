%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:05 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZW10)
} def

/sequence { (\
GUUUCCCGGCAGGCCUCGCGUCAAGACGGCCGGCGGGACGGGAGCUGCGGCGCUGGCUACGAGAGUGACCCAGUCAGCGUUGGUUCCCGUCUUGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.458531209 ubox
1 14 0.003323043 ubox
1 19 0.008251720 ubox
1 27 0.047581409 ubox
1 34 0.004451170 ubox
1 39 0.013445127 ubox
1 96 0.060613878 ubox
2 9 0.452444931 ubox
2 13 0.003265583 ubox
2 18 0.008118900 ubox
2 26 0.047527113 ubox
2 33 0.003865585 ubox
2 38 0.009134945 ubox
2 95 0.059506114 ubox
3 8 0.344977852 ubox
3 9 0.020390430 ubox
3 11 0.008278866 ubox
3 12 0.003465782 ubox
3 25 0.047107322 ubox
3 32 0.003734975 ubox
3 37 0.003299437 ubox
3 38 0.010324836 ubox
3 94 0.045859028 ubox
3 95 0.005183507 ubox
4 8 0.020777843 ubox
4 11 0.013745368 ubox
4 23 0.003513145 ubox
4 24 0.042883619 ubox
4 26 0.007224490 ubox
4 35 0.003864652 ubox
4 36 0.007472820 ubox
4 37 0.006508476 ubox
4 38 0.205613745 ubox
4 94 0.005045819 ubox
4 95 0.011203203 ubox
5 12 0.003307797 ubox
5 13 0.003888539 ubox
5 25 0.007875091 ubox
5 32 0.004683554 ubox
5 33 0.023364684 ubox
5 35 0.015916435 ubox
5 36 0.042728540 ubox
5 37 0.324879811 ubox
5 94 0.014495542 ubox
5 95 0.037081922 ubox
6 12 0.004599198 ubox
6 13 0.013836539 ubox
6 29 0.020831928 ubox
6 32 0.023419996 ubox
6 33 0.118625371 ubox
6 35 0.042170243 ubox
6 36 0.391895840 ubox
6 37 0.094423660 ubox
6 94 0.037005514 ubox
6 95 0.081599422 ubox
7 12 0.015926461 ubox
7 18 0.006093275 ubox
7 20 0.009821333 ubox
7 28 0.021093307 ubox
7 32 0.120627683 ubox
7 35 0.394310767 ubox
7 36 0.126336404 ubox
7 94 0.082285818 ubox
8 15 0.006890458 ubox
8 17 0.006185063 ubox
8 19 0.008738584 ubox
8 22 0.029283729 ubox
8 27 0.021169439 ubox
8 31 0.115971764 ubox
8 34 0.325784087 ubox
8 93 0.049589858 ubox
8 97 0.353626908 ubox
9 14 0.006871004 ubox
9 16 0.004792610 ubox
9 19 0.038338744 ubox
9 21 0.029312642 ubox
9 30 0.114524924 ubox
9 34 0.317059290 ubox
9 96 0.356196235 ubox
10 18 0.038603174 ubox
10 20 0.029218735 ubox
10 29 0.113166434 ubox
10 33 0.388261089 ubox
10 94 0.004956060 ubox
10 95 0.355616465 ubox
11 93 0.005598384 ubox
12 22 0.043615215 ubox
12 31 0.989412587 ubox
12 97 0.026797998 ubox
13 19 0.042940475 ubox
13 21 0.044668038 ubox
13 30 0.991188267 ubox
13 34 0.015869794 ubox
13 96 0.027039414 ubox
14 18 0.042795455 ubox
14 20 0.044681687 ubox
14 29 0.991326747 ubox
14 33 0.016515268 ubox
14 95 0.027035468 ubox
15 25 0.041736435 ubox
15 28 0.990784081 ubox
15 29 0.005406829 ubox
15 32 0.016421099 ubox
15 94 0.026112380 ubox
16 24 0.040910823 ubox
16 26 0.975956446 ubox
16 29 0.004840274 ubox
16 33 0.015959823 ubox
16 36 0.008135755 ubox
17 25 0.979599130 ubox
17 28 0.027337587 ubox
17 32 0.021297113 ubox
17 35 0.018167627 ubox
18 27 0.042393416 ubox
18 30 0.008621242 ubox
18 31 0.021861826 ubox
18 34 0.018657164 ubox
19 28 0.055104604 ubox
19 29 0.007670222 ubox
19 32 0.003772315 ubox
19 33 0.018246066 ubox
19 35 0.005021337 ubox
20 27 0.074307498 ubox
20 30 0.028550501 ubox
20 31 0.003765631 ubox
20 34 0.005204701 ubox
21 26 0.068816587 ubox
21 29 0.028833059 ubox
21 33 0.005202755 ubox
22 28 0.029260100 ubox
22 32 0.005198010 ubox
28 97 0.050935783 ubox
29 96 0.051384438 ubox
30 95 0.051393158 ubox
31 94 0.050622906 ubox
32 93 0.041379172 ubox
32 97 0.791381789 ubox
33 92 0.015611247 ubox
33 96 0.797163481 ubox
34 94 0.577201776 ubox
34 95 0.672226016 ubox
35 92 0.012799686 ubox
35 93 0.733963466 ubox
35 97 0.013157519 ubox
36 91 0.010632591 ubox
36 92 0.858481480 ubox
36 93 0.286138919 ubox
36 96 0.012872875 ubox
37 90 0.005683915 ubox
37 91 0.940101511 ubox
37 92 0.032405925 ubox
38 90 0.974222600 ubox
39 89 0.998865855 ubox
40 88 0.999975234 ubox
41 87 0.999994069 ubox
42 86 0.999991298 ubox
43 85 0.999386033 ubox
44 84 0.998155711 ubox
45 83 0.995768415 ubox
46 79 0.005061352 ubox
46 82 0.709051880 ubox
47 78 0.010367576 ubox
47 80 0.023816542 ubox
47 81 0.285857345 ubox
47 84 0.010589539 ubox
48 77 0.010378690 ubox
48 79 0.030408072 ubox
48 82 0.677654163 ubox
48 83 0.009120650 ubox
49 78 0.027993248 ubox
49 81 0.874669353 ubox
50 78 0.036688683 ubox
50 80 0.995034915 ubox
51 77 0.038096573 ubox
51 79 0.998815640 ubox
52 74 0.045441535 ubox
52 78 0.998856278 ubox
53 73 0.047351646 ubox
53 77 0.998862424 ubox
54 72 0.047737350 ubox
54 76 0.998605829 ubox
55 70 0.019780872 ubox
55 71 0.047317205 ubox
55 75 0.998609679 ubox
56 66 0.006728182 ubox
56 69 0.023792681 ubox
56 70 0.046524463 ubox
56 74 0.998207721 ubox
57 65 0.007760354 ubox
57 73 0.998415914 ubox
58 64 0.008547186 ubox
58 67 0.435184431 ubox
58 72 0.883302030 ubox
59 66 0.829563583 ubox
59 74 0.005881516 ubox
60 65 0.831658007 ubox
60 67 0.160421530 ubox
60 73 0.006817004 ubox
61 66 0.114987716 ubox
66 72 0.018932806 ubox
67 71 0.029986768 ubox
89 96 0.010979647 ubox
90 95 0.010882644 ubox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
14 29 0.9500000 lbox
15 28 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
32 97 0.9500000 lbox
33 96 0.9500000 lbox
34 95 0.9500000 lbox
35 93 0.9500000 lbox
36 92 0.9500000 lbox
37 91 0.9500000 lbox
38 90 0.9500000 lbox
39 89 0.9500000 lbox
40 88 0.9500000 lbox
41 87 0.9500000 lbox
42 86 0.9500000 lbox
43 85 0.9500000 lbox
44 84 0.9500000 lbox
45 83 0.9500000 lbox
48 82 0.9500000 lbox
49 81 0.9500000 lbox
50 80 0.9500000 lbox
51 79 0.9500000 lbox
52 78 0.9500000 lbox
53 77 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
59 66 0.9500000 lbox
60 65 0.9500000 lbox
showpage
end
%%EOF
