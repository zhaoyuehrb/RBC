%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CASK)
} def

/sequence { (\
CCGUUUUCGAAGCCCUCCACGCUGCGGCCGCUAUCCCCUCCGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.399508906 ubox
1 43 0.527451511 ubox
2 9 0.208488947 ubox
2 21 0.020860313 ubox
2 24 0.004200107 ubox
2 26 0.405777455 ubox
2 30 0.232678832 ubox
2 42 0.529798938 ubox
3 8 0.208963580 ubox
3 13 0.053554228 ubox
3 20 0.022264843 ubox
3 22 0.010302087 ubox
3 25 0.406713405 ubox
3 28 0.068225996 ubox
3 29 0.240065290 ubox
3 31 0.433417895 ubox
3 34 0.012815034 ubox
3 41 0.525075229 ubox
3 45 0.057065980 ubox
4 10 0.009787283 ubox
4 11 0.006644180 ubox
4 12 0.053538381 ubox
4 19 0.021176960 ubox
4 21 0.010106391 ubox
4 24 0.404213662 ubox
4 27 0.064539555 ubox
4 30 0.427136705 ubox
4 33 0.015701021 ubox
4 44 0.054194244 ubox
5 9 0.009998464 ubox
5 10 0.009209836 ubox
5 11 0.052006271 ubox
5 12 0.004955546 ubox
5 26 0.022864841 ubox
5 27 0.025489608 ubox
5 43 0.042897872 ubox
5 44 0.008587552 ubox
6 10 0.043605441 ubox
6 11 0.005457686 ubox
6 26 0.012162372 ubox
6 27 0.023082372 ubox
6 42 0.033542871 ubox
6 43 0.008259340 ubox
6 44 0.080213061 ubox
7 26 0.009937149 ubox
7 27 0.560666381 ubox
7 42 0.006436747 ubox
7 43 0.089162890 ubox
7 44 0.008879199 ubox
8 21 0.138007709 ubox
8 24 0.021939577 ubox
8 26 0.654277881 ubox
8 30 0.051657719 ubox
8 42 0.094979014 ubox
8 43 0.009020998 ubox
9 17 0.090732291 ubox
9 20 0.137487485 ubox
9 23 0.013853022 ubox
9 25 0.661280516 ubox
9 29 0.052880671 ubox
9 35 0.487248649 ubox
9 40 0.038315907 ubox
9 41 0.093752836 ubox
10 16 0.088568100 ubox
10 34 0.484012884 ubox
10 39 0.038684708 ubox
11 23 0.720682738 ubox
11 32 0.531876923 ubox
11 39 0.081135181 ubox
12 22 0.785968872 ubox
12 25 0.034330995 ubox
12 28 0.151743354 ubox
12 31 0.541518023 ubox
12 38 0.082906597 ubox
13 21 0.785197432 ubox
13 24 0.034297897 ubox
13 27 0.152210850 ubox
13 30 0.540226302 ubox
13 43 0.009609974 ubox
14 26 0.151952694 ubox
14 27 0.244531563 ubox
14 42 0.009620044 ubox
14 43 0.009068319 ubox
15 26 0.245696125 ubox
15 27 0.137359324 ubox
15 42 0.009070464 ubox
16 26 0.130568038 ubox
16 27 0.169320506 ubox
16 44 0.016005386 ubox
17 26 0.187996802 ubox
17 27 0.372493313 ubox
17 43 0.017290999 ubox
18 24 0.267109091 ubox
18 26 0.372911079 ubox
18 42 0.017157225 ubox
19 23 0.216880430 ubox
20 26 0.058783888 ubox
20 30 0.068531015 ubox
20 42 0.006886213 ubox
21 25 0.058822915 ubox
21 28 0.212668636 ubox
21 29 0.051500371 ubox
21 31 0.026567367 ubox
21 41 0.007691475 ubox
22 27 0.218936560 ubox
22 30 0.026544422 ubox
22 43 0.017858526 ubox
23 33 0.005319817 ubox
23 42 0.017911417 ubox
24 29 0.008439220 ubox
24 31 0.094739053 ubox
24 41 0.018255441 ubox
25 30 0.094772637 ubox
25 42 0.031977850 ubox
26 32 0.006739323 ubox
26 35 0.008080931 ubox
26 36 0.020257716 ubox
26 37 0.036125928 ubox
26 38 0.022151417 ubox
26 39 0.006139220 ubox
26 40 0.005424543 ubox
26 41 0.032689257 ubox
26 46 0.223464328 ubox
27 31 0.010278753 ubox
27 34 0.007101150 ubox
27 35 0.020853352 ubox
27 36 0.037129826 ubox
27 37 0.022292576 ubox
27 38 0.007360699 ubox
27 39 0.004417431 ubox
27 40 0.032516263 ubox
27 45 0.244766303 ubox
28 43 0.436750775 ubox
29 42 0.437880402 ubox
30 41 0.426575541 ubox
31 43 0.018687498 ubox
32 42 0.018119781 ubox
34 43 0.018650450 ubox
34 44 0.559407768 ubox
35 42 0.028789477 ubox
35 43 0.611467145 ubox
36 42 0.610212118 ubox
36 43 0.274981757 ubox
37 42 0.276476848 ubox
37 43 0.132507774 ubox
38 42 0.132019911 ubox
1 43 0.9500000 lbox
2 42 0.9500000 lbox
3 41 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 32 0.9500000 lbox
12 31 0.9500000 lbox
13 30 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
showpage
end
%%EOF
