%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SGO2)
} def

/sequence { (\
AUUGGCUGAUGGGGCAACCGCCAACGGCUGUGGCGUUUAAACCCAAGCCGCAGCCGCUGCUGCUCGCCGAGCUCCCGGAGCUGGGUGGGGGUGCCCCACGCUGAAAGAGAGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.010948566 ubox
1 112 0.023647068 ubox
2 9 0.013528335 ubox
2 104 0.829075825 ubox
2 105 0.094179432 ubox
2 106 0.044075528 ubox
2 107 0.015427500 ubox
2 108 0.026754507 ubox
2 109 0.007869158 ubox
2 110 0.014020988 ubox
2 111 0.022956090 ubox
3 8 0.013170838 ubox
3 103 0.892707298 ubox
3 104 0.096867245 ubox
3 105 0.043265560 ubox
3 106 0.019906537 ubox
3 107 0.027625885 ubox
3 108 0.010298297 ubox
3 109 0.014491154 ubox
3 110 0.020934671 ubox
4 99 0.005171901 ubox
4 102 0.970845172 ubox
5 101 0.981937752 ubox
5 112 0.015085709 ubox
6 100 0.970524148 ubox
6 107 0.008585852 ubox
6 109 0.004032152 ubox
6 111 0.015572382 ubox
7 98 0.020435693 ubox
7 100 0.150573415 ubox
7 106 0.008241769 ubox
7 108 0.003897287 ubox
7 110 0.014987929 ubox
8 97 0.010201792 ubox
8 99 0.701975030 ubox
10 98 0.987315705 ubox
11 97 0.999881857 ubox
12 96 0.999991626 ubox
13 95 0.999992400 ubox
14 94 0.999991566 ubox
15 93 0.999259227 ubox
16 92 0.711782435 ubox
17 92 0.690354080 ubox
18 89 0.046955209 ubox
18 90 0.182111468 ubox
18 91 0.978151539 ubox
19 62 0.041277832 ubox
19 88 0.047008919 ubox
19 89 0.175555275 ubox
19 90 0.977237895 ubox
19 93 0.007831795 ubox
20 25 0.011536588 ubox
20 57 0.038304451 ubox
20 58 0.003444261 ubox
20 60 0.824554628 ubox
20 61 0.101117793 ubox
20 63 0.166350252 ubox
20 92 0.027554013 ubox
21 56 0.035041660 ubox
21 59 0.700888680 ubox
21 62 0.173228333 ubox
21 88 0.258722520 ubox
21 89 0.172934588 ubox
21 90 0.004856808 ubox
21 91 0.033652191 ubox
22 59 0.590284372 ubox
22 62 0.025892047 ubox
22 87 0.236165282 ubox
22 88 0.171694780 ubox
22 89 0.005460822 ubox
22 90 0.033547674 ubox
23 58 0.728644025 ubox
23 61 0.025492171 ubox
23 86 0.109944894 ubox
24 86 0.011152853 ubox
25 50 0.008087635 ubox
25 56 0.967544328 ubox
25 59 0.005229035 ubox
25 85 0.014475462 ubox
26 49 0.022296369 ubox
26 55 0.999659957 ubox
27 48 0.022316741 ubox
27 54 0.999744621 ubox
28 47 0.022315949 ubox
28 53 0.999739613 ubox
29 45 0.003216242 ubox
29 46 0.021813751 ubox
29 52 0.999505457 ubox
30 44 0.004557491 ubox
30 51 0.999735618 ubox
31 45 0.019641935 ubox
31 50 0.999351530 ubox
32 43 0.006987032 ubox
32 44 0.021215825 ubox
32 49 0.999711442 ubox
33 42 0.007006647 ubox
33 43 0.021210178 ubox
33 48 0.999717047 ubox
34 47 0.999410694 ubox
35 42 0.150806508 ubox
35 48 0.007232699 ubox
36 41 0.139719971 ubox
36 46 0.160908636 ubox
36 47 0.011406238 ubox
37 45 0.162095178 ubox
37 46 0.085625823 ubox
38 45 0.093641661 ubox
38 46 0.019827856 ubox
50 63 0.020706908 ubox
51 62 0.022256195 ubox
52 61 0.022265653 ubox
53 60 0.022271873 ubox
54 59 0.022172048 ubox
56 63 0.225276065 ubox
56 65 0.003741825 ubox
56 67 0.005776135 ubox
57 62 0.242009674 ubox
57 66 0.014981772 ubox
58 66 0.008617059 ubox
59 65 0.017858443 ubox
59 67 0.014275953 ubox
59 72 0.007389646 ubox
59 92 0.024478460 ubox
60 66 0.018457392 ubox
60 71 0.007401835 ubox
60 89 0.007364052 ubox
60 90 0.004034309 ubox
60 91 0.034969426 ubox
61 70 0.007374402 ubox
61 88 0.006344846 ubox
61 89 0.005287705 ubox
61 90 0.033277280 ubox
62 72 0.016745637 ubox
62 81 0.003330855 ubox
63 71 0.016778005 ubox
63 80 0.003341392 ubox
63 85 0.003289146 ubox
63 88 0.054496429 ubox
63 89 0.920673687 ubox
63 90 0.006695252 ubox
63 91 0.003500293 ubox
64 70 0.016767430 ubox
64 79 0.003214893 ubox
64 87 0.005693777 ubox
64 88 0.938813529 ubox
64 89 0.009899914 ubox
65 69 0.016628745 ubox
65 87 0.970963411 ubox
65 88 0.009578391 ubox
66 86 0.992023214 ubox
67 84 0.018230614 ubox
67 85 0.999425097 ubox
68 77 0.003279670 ubox
68 83 0.018812387 ubox
68 84 0.999506501 ubox
69 76 0.003269965 ubox
69 82 0.009470475 ubox
70 82 0.996521443 ubox
71 81 0.999811542 ubox
72 80 0.999810767 ubox
73 79 0.999038890 ubox
74 78 0.990650398 ubox
74 85 0.018130356 ubox
75 84 0.018294842 ubox
76 83 0.018289632 ubox
77 82 0.013935318 ubox
97 113 0.006356539 ubox
98 112 0.025722673 ubox
99 111 0.030207030 ubox
99 113 0.166085834 ubox
100 112 0.175369575 ubox
101 107 0.007868424 ubox
101 109 0.040841277 ubox
101 111 0.176256111 ubox
102 106 0.007281642 ubox
102 108 0.041324749 ubox
102 110 0.175632244 ubox
103 112 0.007337661 ubox
2 104 0.9500000 lbox
3 103 0.9500000 lbox
4 102 0.9500000 lbox
5 101 0.9500000 lbox
6 100 0.9500000 lbox
10 98 0.9500000 lbox
11 97 0.9500000 lbox
12 96 0.9500000 lbox
13 95 0.9500000 lbox
14 94 0.9500000 lbox
15 93 0.9500000 lbox
16 92 0.9500000 lbox
18 91 0.9500000 lbox
19 90 0.9500000 lbox
20 60 0.9500000 lbox
21 59 0.9500000 lbox
25 56 0.9500000 lbox
26 55 0.9500000 lbox
27 54 0.9500000 lbox
28 53 0.9500000 lbox
29 52 0.9500000 lbox
30 51 0.9500000 lbox
31 50 0.9500000 lbox
32 49 0.9500000 lbox
33 48 0.9500000 lbox
34 47 0.9500000 lbox
63 89 0.9500000 lbox
64 88 0.9500000 lbox
65 87 0.9500000 lbox
66 86 0.9500000 lbox
67 85 0.9500000 lbox
68 84 0.9500000 lbox
70 82 0.9500000 lbox
71 81 0.9500000 lbox
72 80 0.9500000 lbox
73 79 0.9500000 lbox
74 78 0.9500000 lbox
showpage
end
%%EOF
