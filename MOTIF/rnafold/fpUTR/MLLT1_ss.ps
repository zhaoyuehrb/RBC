%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:46:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUCCGCGGGGCUGGCGGGCGAGCGGGCGGCCGGGAUCGGCGGCGGCGGCGGCGGCGGCGGCGCUUGACAGACAAUGAGGGCGGCGGGGCGGCGUUGAGCGGCGGCGGCGGCGGCGGCGGCGGCGAGCGACGCGGGGCCCGGGGGCGGGGCGGGGCGCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[194.01443481 473.56439209]
[201.06797791 459.67608643]
[196.56874084 445.36676025]
[192.06950378 431.05743408]
[187.57026672 416.74810791]
[183.07102966 402.43878174]
[178.04203796 396.97634888]
[178.62515259 387.81402588]
[174.39916992 373.42163086]
[170.17317200 359.02923584]
[165.94718933 344.63684082]
[154.93762207 334.60494995]
[158.47354126 319.18392944]
[154.24755859 304.79153442]
[143.23797607 294.75964355]
[146.77391052 279.33865356]
[142.54792786 264.94625854]
[138.32192993 250.55384827]
[124.98783112 239.17443848]
[129.41751099 221.32263184]
[124.91827393 207.01330566]
[111.63442230 200.37442017]
[106.86771393 185.92681885]
[113.92126465 172.03849792]
[109.42202759 157.72917175]
[98.82434082 151.83819580]
[94.97570038 139.91770935]
[100.46791077 128.21455383]
[96.24192810 113.82216644]
[86.25627899 104.03552246]
[89.36567688 90.40382385]
[85.13969421 76.01142883]
[80.91370392 61.61903381]
[76.68771362 47.22663879]
[62.22354889 41.92625809]
[53.75288010 29.27314568]
[54.35000229 14.23627663]
[63.57650375 2.57395816]
[59.35051727 -11.81843662]
[55.12452698 -26.21083069]
[43.81268311 -37.27215195]
[47.65088272 -51.66372681]
[43.42489624 -66.05612183]
[32.11305237 -77.11743927]
[35.95125198 -91.50901794]
[31.72526169 -105.90141296]
[20.41341782 -116.96273041]
[24.25161743 -131.35430908]
[20.02562904 -145.74670410]
[6.40982342 -158.11274719]
[11.15458488 -174.98806763]
[6.65534830 -189.29739380]
[2.15611196 -203.60671997]
[-2.34312439 -217.91604614]
[-6.84236097 -232.22538757]
[-18.36274719 -243.06933594]
[-14.79924393 -257.53137207]
[-19.29847908 -271.84069824]
[-34.75646973 -284.73309326]
[-29.85586357 -303.41067505]
[-34.89660645 -317.53833008]
[-46.82147598 -327.93585205]
[-43.81113815 -342.52307129]
[-48.85187912 -356.65072632]
[-53.89262009 -370.77841187]
[-58.93336105 -384.90606689]
[-63.97410202 -399.03372192]
[-75.29633331 -405.27352905]
[-79.18940735 -417.17959595]
[-74.07832336 -428.17465210]
[-78.84918213 -442.39572144]
[-92.51397705 -450.80123901]
[-94.31903076 -466.74243164]
[-82.87966156 -477.99057007]
[-66.97116852 -475.91702271]
[-58.79719543 -462.11248779]
[-64.62810516 -447.16656494]
[-59.85725403 -432.94549561]
[-46.09959793 -422.08197021]
[-49.84643555 -404.07446289]
[-44.80569458 -389.94680786]
[-39.76495361 -375.81915283]
[-34.72421265 -361.69146729]
[-29.68347168 -347.56381226]
[-18.11914635 -338.17681885]
[-20.76893997 -322.57907104]
[-15.72819901 -308.45141602]
[-6.08931494 -304.89620972]
[0.11173748 -296.43060303]
[0.61519635 -285.72851562]
[-4.98915195 -276.33993530]
[-0.48991540 -262.03060913]
[10.70865631 -252.21015930]
[7.46696758 -236.72462463]
[11.96620369 -222.41528320]
[16.46544075 -208.10595703]
[20.96467590 -193.79663086]
[25.46391296 -179.48730469]
[36.06159592 -173.59632874]
[39.91023254 -161.67584229]
[34.41802216 -149.97268677]
[38.64401245 -135.58029175]
[49.65358353 -125.54841614]
[46.11765671 -110.12740326]
[50.34364319 -95.73500824]
[61.35321808 -85.70312500]
[57.81729126 -70.28211212]
[62.04327774 -55.88971710]
[73.05284882 -45.85783768]
[69.51692200 -30.43681908]
[73.74291229 -16.04442406]
[77.96890259 -1.65203023]
[92.03585052 3.17071366]
[100.66772461 15.49770451]
[100.38253784 30.72176552]
[91.08010864 43.00064850]
[95.30609894 57.39304352]
[99.53208923 71.78543854]
[103.75807190 86.17783356]
[113.74372101 95.96447754]
[110.63432312 109.59617615]
[114.86030579 123.98857117]
[128.47612000 136.35461426]
[123.73135376 153.22993469]
[128.23059082 167.53926086]
[141.96287537 174.89195251]
[146.32189941 189.46774292]
[139.22760010 202.51406860]
[143.72683716 216.82339478]
[154.80331421 223.48973083]
[158.24029541 235.53535461]
[152.71432495 246.32786560]
[156.94032288 260.72024536]
[161.16630554 275.11264038]
[172.47814941 286.17398071]
[168.63995361 300.56555176]
[172.86593628 314.95794678]
[184.17778015 326.01925659]
[180.33958435 340.41082764]
[184.56556702 354.80322266]
[188.79156494 369.19561768]
[193.01754761 383.58801270]
[197.38035583 397.93954468]
[201.87959290 412.24887085]
[206.37882996 426.55819702]
[210.87806702 440.86752319]
[215.37730408 455.17684937]
[229.10958862 462.52954102]
[233.46861267 477.10531616]
[226.37431335 490.15164185]
[230.87355042 504.46096802]
[235.37278748 518.77032471]
[240.00804138 533.03613281]
[244.77890015 547.25720215]
[257.42126465 557.70245361]
[254.43019104 573.82647705]
[238.88262939 579.04235840]
[226.77256775 567.98437500]
[230.55783081 552.02807617]
[225.78697205 537.80700684]
[220.65489197 532.44134521]
[221.06346130 523.26953125]
[216.56422424 508.96020508]
[212.06498718 494.65087891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[8 142]
[9 141]
[10 140]
[11 139]
[13 137]
[14 136]
[16 134]
[17 133]
[18 132]
[20 129]
[21 128]
[24 125]
[25 124]
[28 122]
[29 121]
[31 119]
[32 118]
[33 117]
[34 116]
[38 112]
[39 111]
[40 110]
[42 108]
[43 107]
[45 105]
[46 104]
[48 102]
[49 101]
[51 98]
[52 97]
[53 96]
[54 95]
[55 94]
[57 92]
[58 91]
[60 87]
[61 86]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[70 78]
[71 77]
[150 164]
[151 163]
[152 162]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
