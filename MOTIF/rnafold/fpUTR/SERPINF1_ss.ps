%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:04:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAGACAGUGAUGCAAUCACAGAAUCCAAAUUGAGUGCAGGUCGCUUUAAGAAAGGAGUAGCUGUAAUCUGAAGCCUGCUGGACGCUGGAUUAGAAGGCAGCAAAAAAAGCUCUGUGCUGGCUGGAGCCCCCUCAGUGUGCAGGCUUAGAGGGACUAGGCUGGGUGUGGAGCUGCAGCGUAUCCACAGGCCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[127.90755463 271.03591919]
[135.39665222 284.03259277]
[128.35957336 297.27947998]
[113.39779663 298.34967041]
[104.54694366 286.23925781]
[110.11015320 272.30883789]
[109.75017548 257.31314087]
[109.39019012 242.31745911]
[101.90930176 242.85250854]
[95.03590393 256.18502808]
[88.16250610 269.51757812]
[81.28910828 282.85009766]
[74.41571045 296.18264771]
[72.53199768 313.03161621]
[55.82002640 315.88577271]
[48.45106506 300.61703491]
[61.08317947 289.30923462]
[67.95657349 275.97671509]
[74.82997131 262.64416504]
[81.70336914 249.31164551]
[88.57676697 235.97911072]
[75.64122772 221.19941711]
[70.19499207 203.05538940]
[72.66838074 184.97702026]
[82.04730225 170.14332581]
[96.15520477 160.92344666]
[92.15809631 146.46580505]
[88.16099548 132.00817871]
[90.04115295 146.88987732]
[83.23460388 160.25666809]
[70.09351349 167.48933411]
[55.15906525 166.08850098]
[43.59220505 156.53822327]
[39.39011383 142.13883972]
[44.00492096 127.86635590]
[55.84187698 118.65296936]
[70.81079865 117.68264771]
[55.85797501 116.49389648]
[40.90515518 115.30515289]
[25.95233345 114.11640167]
[10.99951172 112.92765045]
[1.81953633 122.79248810]
[-11.17692089 125.52573395]
[-23.19518852 120.34815979]
[-29.93271065 109.35748291]
[-44.86478806 107.93164062]
[-59.79686737 106.50579834]
[-74.72895050 105.07995605]
[-89.66102600 103.65412140]
[-101.68692017 113.90855408]
[-117.43464661 112.57268524]
[-127.56136322 100.43904877]
[-126.05907440 84.70632172]
[-113.81905365 74.70845032]
[-98.10308838 76.37699890]
[-88.23518372 88.72203827]
[-73.30310822 90.14788055]
[-58.37102890 91.57372284]
[-43.43894958 92.99955750]
[-28.50687027 94.42539978]
[-16.01340103 83.17416382]
[1.08896971 84.46015167]
[12.18826103 97.97483063]
[27.14108276 99.16358185]
[42.09390259 100.35232544]
[57.04672623 101.54107666]
[71.99954987 102.72982788]
[81.90747070 84.18096924]
[99.26866913 80.08078003]
[104.39897156 65.98539734]
[109.52927399 51.89000702]
[114.65957642 37.79461670]
[119.78987885 23.69922638]
[119.78540802 14.55386639]
[125.11501312 9.42198944]
[130.46830750 -4.59022856]
[135.82159424 -18.60244560]
[141.17489624 -32.61466599]
[146.52818298 -46.62688065]
[151.88148499 -60.63909912]
[151.05052185 -65.81399536]
[152.18119812 -70.33475494]
[154.69348145 -73.56204224]
[157.83731079 -75.18061829]
[163.85125732 -88.92224884]
[169.86521912 -102.66387177]
[175.87918091 -116.40550232]
[181.89314270 -130.14712524]
[187.90708923 -143.88874817]
[193.92105103 -157.63038635]
[181.46109009 -170.00863647]
[174.71725464 -186.18753052]
[174.69676208 -203.68045044]
[181.37571716 -219.81001282]
[193.70692444 -232.11790466]
[209.78395081 -238.73950195]
[227.13591003 -238.68634033]
[232.48919678 -252.69856262]
[230.18650818 -268.35128784]
[241.95648193 -277.47912598]
[247.30976868 -291.49133301]
[252.66305542 -305.50354004]
[258.01635742 -319.51577759]
[263.36965942 -333.52798462]
[252.84968567 -344.58660889]
[248.17787170 -359.11715698]
[250.28176880 -374.23458862]
[258.74368286 -386.93728638]
[271.88345337 -394.70315552]
[287.09219360 -395.99029541]
[301.35021973 -390.54309082]
[311.82653809 -379.44311523]
[316.44110107 -364.89428711]
[314.27767944 -349.78527832]
[305.76583862 -337.11599731]
[292.59558105 -329.40191650]
[277.38186646 -328.17468262]
[272.02856445 -314.16247559]
[266.67529297 -300.15026855]
[261.32199097 -286.13803101]
[255.96868896 -272.12582397]
[258.65429688 -257.47534180]
[246.50141907 -247.34526062]
[241.14811707 -233.33305359]
[251.00427246 -225.48208618]
[258.26425171 -215.16093445]
[262.33346558 -203.19737244]
[262.87374878 -190.55433655]
[259.83142090 -178.25245667]
[253.44238281 -167.28765869]
[244.21392822 -158.55058289]
[232.88441467 -152.75411987]
[220.36424255 -150.37539673]
[207.66267395 -151.61642456]
[201.64872742 -137.87480164]
[195.63476562 -124.13317108]
[189.62080383 -110.39154053]
[183.60684204 -96.64991760]
[177.59289551 -82.90828705]
[171.57893372 -69.16665649]
[165.89369202 -55.28580475]
[160.54040527 -41.27359009]
[155.18710327 -27.26137161]
[149.83381653 -13.24915314]
[144.48052979 0.76306498]
[139.12722778 14.77528286]
[133.88526917 28.82952881]
[128.75495911 42.92491913]
[123.62466431 57.02030563]
[118.49436188 71.11569977]
[113.36405945 85.21108246]
[122.80678558 107.57837677]
[102.61862183 128.01107788]
[106.61573029 142.46870422]
[110.61283875 156.92633057]
[127.18382263 157.78721619]
[142.45668030 165.62876892]
[153.53352356 179.48991394]
[158.10321045 197.22937012]
[154.90992737 215.85144043]
[144.05149841 232.01147461]
[152.75236511 244.23011780]
[161.45321655 256.44876099]
[170.15406799 268.66738892]
[178.85491943 280.88604736]
[187.84408569 292.89416504]
[197.11647034 304.68496704]
[206.38885498 316.47573853]
[215.66123962 328.26654053]
[224.93362427 340.05734253]
[234.20600891 351.84814453]
[243.57164001 363.56500244]
[253.02992249 375.20721436]
[268.77407837 376.58474731]
[278.86862183 388.74514771]
[277.32470703 404.47384644]
[265.05825806 414.43927002]
[249.34677124 412.72915649]
[239.51158142 400.35803223]
[241.38772583 384.66549683]
[231.92944336 373.02328491]
[225.26461792 369.81066895]
[222.41520691 361.12051392]
[213.14282227 349.32971191]
[203.87043762 337.53894043]
[194.59805298 325.74813843]
[185.32566833 313.95733643]
[176.05328369 302.16653442]
[172.60372925 301.38940430]
[169.36145020 298.89651489]
[167.13162231 294.80462646]
[166.63627625 289.58688354]
[157.93542480 277.36825562]
[149.23457336 265.14962769]
[140.53372192 252.93096924]
[131.83287048 240.71234131]
[124.35197449 241.24737549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[26 155]
[27 154]
[28 153]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[97 124]
[98 123]
[100 121]
[101 120]
[102 119]
[103 118]
[104 117]
[161 196]
[162 195]
[163 194]
[164 193]
[165 192]
[166 188]
[167 187]
[168 186]
[169 185]
[170 184]
[171 183]
[172 181]
[173 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
