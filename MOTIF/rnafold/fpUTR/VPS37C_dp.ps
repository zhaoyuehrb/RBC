%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VPS37C)
} def

/sequence { (\
UGGGCGCGGCUGCGGUUUAACCCGCGGUGGCGGCGGCGACGGCGGCCCUGGCAGGGAAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.016375319 ubox
1 35 0.058459336 ubox
1 38 0.017866518 ubox
1 44 0.003623823 ubox
1 50 0.074960174 ubox
1 53 0.037087390 ubox
2 7 0.004686223 ubox
2 17 0.015202652 ubox
2 18 0.017724047 ubox
2 34 0.077827115 ubox
2 37 0.023423730 ubox
2 40 0.003877957 ubox
2 43 0.004249660 ubox
2 47 0.010415865 ubox
2 48 0.278550157 ubox
2 49 0.117039165 ubox
2 52 0.040006607 ubox
3 16 0.019291839 ubox
3 17 0.018038726 ubox
3 46 0.010365183 ubox
3 47 0.279256684 ubox
3 48 0.121061194 ubox
3 49 0.017318583 ubox
4 16 0.018031733 ubox
4 31 0.021259369 ubox
4 34 0.141286176 ubox
4 37 0.004781030 ubox
4 43 0.007728499 ubox
4 46 0.272169785 ubox
4 47 0.114427664 ubox
4 48 0.018078158 ubox
4 52 0.217397614 ubox
5 14 0.023792396 ubox
5 15 0.016034147 ubox
5 30 0.021098705 ubox
5 32 0.853920044 ubox
5 33 0.100516198 ubox
5 35 0.005598033 ubox
5 36 0.004268142 ubox
5 42 0.007395278 ubox
5 44 0.015274089 ubox
5 45 0.265924635 ubox
5 50 0.033747599 ubox
5 51 0.216940343 ubox
6 13 0.025546206 ubox
6 31 0.994029311 ubox
6 34 0.006762602 ubox
6 43 0.009868906 ubox
6 46 0.011107829 ubox
6 49 0.029676155 ubox
6 52 0.018837973 ubox
7 12 0.025519107 ubox
7 14 0.013637098 ubox
7 29 0.018855671 ubox
7 30 0.996666508 ubox
7 33 0.006636286 ubox
7 41 0.004243155 ubox
7 42 0.009107696 ubox
7 44 0.007902741 ubox
7 45 0.011118014 ubox
7 50 0.016759023 ubox
7 51 0.018797383 ubox
8 13 0.013637041 ubox
8 28 0.013525620 ubox
8 31 0.003255468 ubox
8 40 0.005524582 ubox
8 43 0.006197736 ubox
8 47 0.064182131 ubox
8 48 0.017758607 ubox
8 49 0.004375359 ubox
9 28 0.995351777 ubox
9 31 0.006445297 ubox
9 37 0.007492469 ubox
9 43 0.012346123 ubox
9 46 0.065865068 ubox
9 47 0.012462596 ubox
10 27 0.997152716 ubox
10 30 0.006284077 ubox
10 36 0.007544700 ubox
10 42 0.013196743 ubox
10 45 0.067064254 ubox
11 26 0.996420773 ubox
11 29 0.005578666 ubox
11 35 0.007539353 ubox
11 41 0.012974704 ubox
11 44 0.067020305 ubox
12 25 0.997172949 ubox
12 34 0.007544666 ubox
12 40 0.012214691 ubox
12 43 0.067070524 ubox
13 24 0.997182154 ubox
13 33 0.007526170 ubox
13 38 0.005876153 ubox
13 42 0.067041320 ubox
14 22 0.088365385 ubox
14 23 0.993252100 ubox
14 37 0.005583178 ubox
15 21 0.124807862 ubox
15 22 0.984938173 ubox
15 31 0.006943988 ubox
15 37 0.010814346 ubox
15 40 0.066928677 ubox
16 20 0.137652533 ubox
16 30 0.006815344 ubox
16 36 0.010787878 ubox
16 39 0.066740865 ubox
17 29 0.005593470 ubox
17 35 0.009183473 ubox
17 38 0.063892979 ubox
17 39 0.003216816 ubox
18 35 0.004120530 ubox
18 38 0.004426492 ubox
20 28 0.006611203 ubox
21 27 0.006920039 ubox
21 33 0.003675657 ubox
21 36 0.010434347 ubox
21 56 0.010265214 ubox
22 26 0.006870431 ubox
22 33 0.065450878 ubox
22 35 0.007867495 ubox
22 36 0.016127396 ubox
22 45 0.026657875 ubox
22 55 0.010310490 ubox
23 32 0.065992017 ubox
23 35 0.016328089 ubox
23 44 0.027291726 ubox
23 54 0.010302885 ubox
24 31 0.066062003 ubox
24 34 0.016487952 ubox
24 43 0.027426039 ubox
24 52 0.009758563 ubox
25 30 0.066041083 ubox
25 32 0.006634000 ubox
25 33 0.015535853 ubox
25 42 0.027415650 ubox
25 50 0.006189077 ubox
25 51 0.008315671 ubox
26 31 0.008592338 ubox
26 49 0.008080609 ubox
27 40 0.028054601 ubox
27 48 0.008520188 ubox
28 39 0.028042882 ubox
29 47 0.010335926 ubox
29 49 0.007792977 ubox
29 52 0.004284766 ubox
30 37 0.028809045 ubox
30 46 0.010408845 ubox
30 48 0.008239080 ubox
30 52 0.003497091 ubox
31 36 0.028807162 ubox
31 44 0.070420606 ubox
31 45 0.009956364 ubox
31 50 0.005813376 ubox
31 51 0.003580982 ubox
32 37 0.004973269 ubox
32 40 0.004634502 ubox
32 43 0.244051536 ubox
32 47 0.404217957 ubox
32 48 0.026902912 ubox
32 49 0.010694965 ubox
33 43 0.118700595 ubox
33 46 0.901522903 ubox
33 47 0.020179565 ubox
33 48 0.018589916 ubox
33 52 0.036813751 ubox
34 41 0.254830673 ubox
34 42 0.108953002 ubox
34 44 0.061366494 ubox
34 45 0.929574879 ubox
34 50 0.004305889 ubox
34 51 0.036744911 ubox
35 40 0.258835008 ubox
35 43 0.050254307 ubox
35 47 0.068981794 ubox
35 48 0.005135305 ubox
36 43 0.951460088 ubox
36 46 0.072103076 ubox
36 47 0.003898773 ubox
36 52 0.007197636 ubox
37 42 0.952307835 ubox
37 44 0.034638715 ubox
37 45 0.071225942 ubox
37 51 0.007195903 ubox
38 43 0.036682488 ubox
41 47 0.005518047 ubox
41 48 0.004227309 ubox
42 46 0.005458723 ubox
42 47 0.004191679 ubox
42 52 0.005527356 ubox
43 51 0.005525333 ubox
45 52 0.008448019 ubox
46 51 0.008442088 ubox
46 55 0.012895284 ubox
46 56 0.309898816 ubox
46 60 0.004501727 ubox
47 54 0.016101425 ubox
47 55 0.401100404 ubox
47 56 0.623553008 ubox
47 59 0.008560381 ubox
47 60 0.405292226 ubox
48 54 0.403807247 ubox
48 55 0.633589985 ubox
48 56 0.120889499 ubox
48 59 0.449726349 ubox
48 60 0.022337628 ubox
49 53 0.363975763 ubox
49 54 0.617257754 ubox
49 55 0.120607040 ubox
49 58 0.449670051 ubox
49 59 0.022791747 ubox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
33 46 0.9500000 lbox
34 45 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
showpage
end
%%EOF
