%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUCCCUACCCUCGACCUGUCGAUGCCCCGCGGCCCCGCCCGCCCUCUUAAGCCUGGCUCAGCCCUCAGGGCCCGCCCGAAGUCUACCGAGCCCGAGUGGCCUACCGAGCCCGAGUGGCCCCGCAGCGUCCAGGAGGCGCCCGCUCCGCGGUGGCGCUCUUGGAGGUGGUGUCGGAGAGCCGCCGAGCGUGCGGUCCCGGG\
) } def
/len { sequence length } bind def

/coor [
[22.38786125 318.06442261]
[25.52687454 324.96804810]
[27.18490028 332.35681152]
[27.29632568 339.91720581]
[25.86105156 347.32946777]
[22.94430161 354.28100586]
[18.67367363 360.47967529]
[13.23356533 365.66592407]
[6.85720968 369.62377930]
[-0.18331420 372.18978882]
[-7.58869505 373.25979614]
[-15.04511166 372.79312134]
[-22.23753357 370.81405640]
[-30.36489105 383.42144775]
[-38.49224854 396.02883911]
[-46.61960602 408.63619995]
[-46.88208008 425.03326416]
[-61.34314728 432.76690674]
[-75.12650299 423.88146973]
[-74.05300903 407.51748657]
[-59.22698593 400.50885010]
[-51.09962845 387.90145874]
[-42.97227097 375.29409790]
[-34.84491348 362.68670654]
[-45.37791824 342.25070190]
[-41.51924896 319.46295166]
[-24.66936493 303.46670532]
[-1.47074342 300.76885986]
[4.61616516 287.05938721]
[10.70307350 273.34991455]
[16.78998184 259.64047241]
[16.63096428 252.24667358]
[23.07862854 245.76707458]
[29.37696457 232.15344238]
[25.50102425 220.69041443]
[30.64203644 209.29496765]
[42.53987122 204.30372620]
[49.04812622 190.78918457]
[55.55638123 177.27465820]
[62.06463623 163.76011658]
[60.61572647 148.93615723]
[73.57446289 139.85972595]
[80.08271790 126.34519196]
[86.59098053 112.83065796]
[79.32442474 125.95304871]
[67.22354126 134.81694031]
[52.52056122 137.78720093]
[37.92774963 134.31590271]
[26.13704109 125.04340363]
[19.32346725 111.68020630]
[18.74392509 96.69140625]
[24.50532341 82.84198761]
[35.54485703 72.68675995]
[49.82606506 68.09905243]
[64.71449280 69.92515564]
[77.46367645 77.82821655]
[85.72068024 90.34749603]
[78.18719482 77.37650299]
[70.65371704 64.40550995]
[63.12023544 51.43451309]
[55.58675385 38.46352005]
[35.38365173 28.77667999]
[36.13365936 7.14840555]
[27.81217194 -5.33169317]
[19.49068642 -17.81179237]
[11.07288074 -30.22712708]
[2.55925894 -42.57695389]
[-5.95436287 -54.92678070]
[-13.40655613 -60.22041321]
[-14.50244045 -67.53425598]
[-22.82392693 -80.01435089]
[-31.14541245 -92.49445343]
[-39.46689987 -104.97454834]
[-53.56024551 -112.16399384]
[-54.18341446 -127.04555511]
[-62.50490189 -139.52565002]
[-77.61296844 -137.35563660]
[-92.16381836 -141.96383667]
[-103.26836395 -152.43531799]
[-108.72179413 -166.69093323]
[-107.44132233 -181.90025330]
[-99.68119049 -195.04342651]
[-86.98217773 -203.51087952]
[-71.86567688 -205.62139893]
[-57.33308792 -200.95591736]
[-46.26986694 -190.44079590]
[-40.87261581 -176.16380310]
[-42.21297455 -160.95965576]
[-50.02480316 -147.84713745]
[-41.70331573 -135.36705017]
[-28.20517731 -129.07026672]
[-26.98679924 -113.29603577]
[-18.66531372 -100.81594086]
[-10.34382725 -88.33583832]
[-2.02234125 -75.85573578]
[6.39546490 -63.44040298]
[14.90908623 -51.09057617]
[23.42270851 -38.74074936]
[29.81146812 -35.01556778]
[31.97078514 -26.13327789]
[40.29227066 -13.65317917]
[48.61375809 -1.17308068]
[56.50465012 -1.31042635]
[63.89289474 1.72124934]
[69.54448700 7.49590635]
[72.48397064 15.12310123]
[72.16231537 23.38484764]
[68.55774689 30.93004036]
[76.09122467 43.90103149]
[83.62471008 56.87202454]
[91.15818787 69.84301758]
[98.69167328 82.81401062]
[111.99832153 89.73738098]
[126.94401550 88.46216583]
[135.23478699 84.61237335]
[142.13056946 87.28469086]
[157.09422302 86.24092102]
[172.05786133 85.19714355]
[187.02149963 84.15337372]
[201.98513794 83.10959625]
[218.16630554 71.09445190]
[235.16378784 80.30474091]
[250.08796692 78.79839325]
[265.01214600 77.29204559]
[279.92419434 75.67025757]
[294.82327271 73.93313599]
[309.69369507 71.96565247]
[324.53186035 69.76828003]
[337.04971313 60.09284592]
[350.77313232 65.88224030]
[365.61129761 63.68487549]
[380.44949341 61.48750305]
[395.28765869 59.29013443]
[410.12585449 57.09276581]
[424.96401978 54.89539719]
[439.80221558 52.69802856]
[454.64038086 50.50065994]
[469.46112061 48.18854141]
[484.26351929 45.76181030]
[493.48742676 33.20963669]
[508.53375244 30.95945358]
[520.44348145 39.83040619]
[535.24584961 37.40367508]
[550.04827881 34.97694778]
[564.85064697 32.55021667]
[579.50292969 24.02104187]
[591.75494385 35.73960114]
[583.88604736 50.75681686]
[567.27740479 47.35261536]
[552.47497559 49.77934265]
[537.67260742 52.20607376]
[522.87017822 54.63280487]
[514.41644287 66.84218597]
[499.43923950 69.51409912]
[486.69024658 60.56420898]
[471.88784790 62.99093628]
[465.79180908 67.17800903]
[456.83773804 65.33883667]
[441.99957275 67.53620911]
[427.16140747 69.73357391]
[412.32321167 71.93094635]
[397.48504639 74.12831116]
[382.64685059 76.32568359]
[367.80868530 78.52305603]
[352.97048950 80.72042084]
[341.51397705 90.23868561]
[326.72921753 84.60646057]
[311.89105225 86.80383301]
[308.37304688 90.04240417]
[302.78131104 91.10128021]
[296.56039429 88.83220673]
[281.66131592 90.56932831]
[275.37753296 94.46897125]
[266.51849365 92.21621704]
[251.59431458 93.72256470]
[236.67013550 95.22891235]
[230.93966675 103.69854736]
[221.28932190 107.69659424]
[210.81665039 105.67819977]
[203.02891541 98.07323456]
[188.06527710 99.11701202]
[173.10162354 100.16078949]
[158.13798523 101.20455933]
[143.17434692 102.24833679]
[128.21923828 103.40785980]
[113.27353668 104.68307495]
[109.68762970 113.61191559]
[100.10550690 119.33891296]
[93.59725189 132.85343933]
[87.08899689 146.36798096]
[88.07239532 162.15858459]
[75.57917023 170.26837158]
[69.07091522 183.78291321]
[62.56266022 197.29743958]
[56.05440140 210.81198120]
[57.85871124 229.13456726]
[42.99059677 238.45178223]
[36.69226074 252.06541443]
[30.49945068 265.72735596]
[24.41254234 279.43682861]
[18.32563400 293.14630127]
[12.23872566 306.85577393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 24]
[14 23]
[15 22]
[16 21]
[28 202]
[29 201]
[30 200]
[31 199]
[33 198]
[34 197]
[37 195]
[38 194]
[39 193]
[40 192]
[42 190]
[43 189]
[44 188]
[57 112]
[58 111]
[59 110]
[60 109]
[61 108]
[63 102]
[64 101]
[65 100]
[66 98]
[67 97]
[68 96]
[70 95]
[71 94]
[72 93]
[73 92]
[75 90]
[76 89]
[113 186]
[114 185]
[116 184]
[117 183]
[118 182]
[119 181]
[120 180]
[122 176]
[123 175]
[124 174]
[125 172]
[126 171]
[127 168]
[128 167]
[130 165]
[131 164]
[132 163]
[133 162]
[134 161]
[135 160]
[136 159]
[137 158]
[138 156]
[139 155]
[142 152]
[143 151]
[144 150]
[145 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
