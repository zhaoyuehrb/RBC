%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LCE2A)
} def

/sequence { (\
GGACGUGUCUGUGCUCCUGUGUGUGACCAGGGUUGAAAAAGUCGCACUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.024478769 ubox
1 10 0.108839410 ubox
1 15 0.059102928 ubox
1 16 0.032675151 ubox
1 17 0.830305252 ubox
1 18 0.030758986 ubox
1 43 0.022016640 ubox
1 48 0.058815990 ubox
2 8 0.021037333 ubox
2 9 0.115281786 ubox
2 14 0.070582896 ubox
2 15 0.024328170 ubox
2 16 0.833811365 ubox
2 17 0.032038085 ubox
2 42 0.015873329 ubox
2 43 0.301087694 ubox
2 47 0.061928975 ubox
3 8 0.102233686 ubox
3 12 0.124441366 ubox
3 15 0.828148140 ubox
3 20 0.026107186 ubox
3 42 0.301747393 ubox
4 11 0.140646588 ubox
4 13 0.338969685 ubox
4 19 0.026789717 ubox
4 41 0.301794254 ubox
4 44 0.013147384 ubox
4 49 0.028974670 ubox
5 10 0.099743622 ubox
5 12 0.255094360 ubox
5 14 0.745417863 ubox
5 18 0.022828664 ubox
5 43 0.013310664 ubox
5 45 0.205527685 ubox
5 47 0.098450227 ubox
5 48 0.011867637 ubox
6 11 0.089706217 ubox
6 13 0.730552872 ubox
6 41 0.005644557 ubox
6 44 0.205653428 ubox
6 46 0.098726063 ubox
7 12 0.361082272 ubox
7 14 0.096158976 ubox
7 27 0.010163451 ubox
7 43 0.205265831 ubox
7 45 0.098689983 ubox
7 47 0.007214661 ubox
7 48 0.003839860 ubox
8 13 0.090115096 ubox
8 26 0.010243635 ubox
8 36 0.246643897 ubox
8 41 0.004850043 ubox
8 44 0.094320800 ubox
8 46 0.005695476 ubox
8 50 0.283148806 ubox
9 25 0.010243002 ubox
9 30 0.003446724 ubox
9 32 0.003821317 ubox
9 35 0.247652168 ubox
9 41 0.221863800 ubox
9 49 0.300830342 ubox
9 51 0.019825343 ubox
10 23 0.003338511 ubox
10 29 0.003466396 ubox
10 31 0.003826092 ubox
10 35 0.026037057 ubox
10 40 0.220555746 ubox
10 44 0.005999110 ubox
10 46 0.024344972 ubox
10 49 0.009865601 ubox
10 50 0.018944990 ubox
11 22 0.003576641 ubox
11 28 0.003324306 ubox
11 33 0.026606519 ubox
11 34 0.038335947 ubox
11 43 0.014142571 ubox
11 45 0.028254941 ubox
11 47 0.330418214 ubox
12 21 0.005023292 ubox
12 23 0.006365173 ubox
12 29 0.003918502 ubox
12 32 0.008816917 ubox
12 35 0.027192700 ubox
12 41 0.004552331 ubox
12 44 0.028266628 ubox
12 46 0.332186326 ubox
13 20 0.055961685 ubox
13 22 0.008201014 ubox
13 24 0.004060841 ubox
13 28 0.003916737 ubox
13 33 0.343948318 ubox
13 34 0.047030848 ubox
13 42 0.020363351 ubox
13 43 0.027783244 ubox
13 45 0.332307678 ubox
14 19 0.057692105 ubox
14 21 0.008395588 ubox
14 23 0.004113630 ubox
14 32 0.348501998 ubox
14 41 0.033494166 ubox
14 44 0.331878447 ubox
14 51 0.086002225 ubox
15 26 0.004156919 ubox
15 31 0.055697546 ubox
15 32 0.332727432 ubox
15 36 0.011528976 ubox
15 40 0.028806858 ubox
15 50 0.088626961 ubox
16 25 0.004257898 ubox
16 30 0.046712534 ubox
16 31 0.500509241 ubox
16 32 0.022289734 ubox
16 35 0.010002790 ubox
16 49 0.088307557 ubox
17 30 0.501687837 ubox
17 31 0.021060599 ubox
17 32 0.014461097 ubox
17 41 0.032431457 ubox
17 51 0.157715499 ubox
18 29 0.502397482 ubox
18 30 0.018891358 ubox
18 31 0.014547253 ubox
18 40 0.032235540 ubox
18 49 0.116570981 ubox
18 50 0.267671082 ubox
19 27 0.104753933 ubox
19 28 0.492719665 ubox
19 45 0.003258356 ubox
19 47 0.044301694 ubox
19 48 0.135133683 ubox
20 26 0.142512862 ubox
20 29 0.017706932 ubox
20 44 0.003237818 ubox
20 46 0.042775689 ubox
20 49 0.056107242 ubox
21 27 0.394847611 ubox
21 28 0.018473881 ubox
21 45 0.041108866 ubox
21 47 0.858841019 ubox
21 48 0.012022001 ubox
22 26 0.355799553 ubox
22 29 0.004411574 ubox
22 44 0.039694988 ubox
22 46 0.860711982 ubox
23 28 0.004810216 ubox
23 43 0.033048491 ubox
23 45 0.861546011 ubox
24 35 0.030289013 ubox
24 41 0.009023547 ubox
24 44 0.861258506 ubox
25 34 0.035104759 ubox
25 43 0.861796280 ubox
26 33 0.035886996 ubox
26 42 0.861458697 ubox
27 32 0.036085163 ubox
27 41 0.859442795 ubox
28 35 0.325257613 ubox
28 49 0.015529139 ubox
29 34 0.293280156 ubox
29 48 0.015544989 ubox
30 43 0.011253503 ubox
30 47 0.015414168 ubox
31 42 0.014648666 ubox
31 43 0.007762312 ubox
32 42 0.012054281 ubox
32 45 0.013788265 ubox
32 47 0.005602685 ubox
33 39 0.032348656 ubox
33 40 0.178186460 ubox
33 41 0.035609068 ubox
33 44 0.010199625 ubox
33 46 0.005577990 ubox
34 38 0.029295850 ubox
34 39 0.179618345 ubox
34 40 0.069631892 ubox
34 44 0.018085908 ubox
35 43 0.172145944 ubox
36 42 0.165262872 ubox
40 48 0.010449405 ubox
41 47 0.010770554 ubox
42 46 0.009705194 ubox
42 50 0.008239301 ubox
43 49 0.009026035 ubox
44 48 0.006435898 ubox
1 17 0.9500000 lbox
2 16 0.9500000 lbox
3 15 0.9500000 lbox
5 14 0.9500000 lbox
6 13 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
23 45 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
showpage
end
%%EOF
