%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR10G2)
} def

/sequence { (\
GGCAUCAAUCAUCCGACAAAAGCAUUCACUUACAACAUCAUUGUGCUGUGUUUCUCUUGUCAAACGUCACCAUUCAUCUUAGCAGACUACAAAAAGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.188534851 ubox
1 13 0.039188810 ubox
1 14 0.533501650 ubox
1 47 0.013547783 ubox
1 52 0.003311817 ubox
1 61 0.057405000 ubox
1 68 0.141787512 ubox
1 71 0.096271690 ubox
1 74 0.004449313 ubox
1 75 0.078155518 ubox
1 78 0.009874817 ubox
1 79 0.005586833 ubox
1 88 0.017062121 ubox
2 9 0.144203220 ubox
2 12 0.031413737 ubox
2 13 0.531854370 ubox
2 23 0.009916809 ubox
2 46 0.014802068 ubox
2 51 0.004918732 ubox
2 60 0.057582481 ubox
2 67 0.142210925 ubox
2 70 0.096127203 ubox
2 73 0.006010160 ubox
2 74 0.069965610 ubox
2 77 0.008970242 ubox
2 78 0.006415239 ubox
2 83 0.028387824 ubox
2 87 0.017379114 ubox
3 22 0.009918153 ubox
3 45 0.014809239 ubox
3 50 0.005032622 ubox
3 59 0.057545146 ubox
3 66 0.142129165 ubox
3 82 0.028391673 ubox
4 12 0.400164917 ubox
4 44 0.014459010 ubox
4 49 0.004969971 ubox
4 58 0.055737334 ubox
4 67 0.013615209 ubox
4 73 0.022879678 ubox
4 77 0.006321193 ubox
5 11 0.383637376 ubox
5 16 0.019060436 ubox
5 43 0.003938781 ubox
5 48 0.004676942 ubox
5 66 0.013432358 ubox
5 72 0.022083511 ubox
5 76 0.006318852 ubox
5 86 0.007000179 ubox
5 97 0.070958596 ubox
6 15 0.022783454 ubox
6 43 0.014133665 ubox
6 59 0.011578067 ubox
6 85 0.007577721 ubox
6 96 0.077540836 ubox
7 42 0.014424035 ubox
7 53 0.008955388 ubox
7 58 0.012045176 ubox
7 74 0.008114147 ubox
7 80 0.003943463 ubox
8 41 0.014285183 ubox
8 52 0.007986123 ubox
8 57 0.012469651 ubox
8 60 0.006283352 ubox
8 67 0.045494685 ubox
8 73 0.008771466 ubox
8 77 0.004988754 ubox
8 79 0.003652515 ubox
9 16 0.019647806 ubox
9 40 0.013560045 ubox
9 59 0.005148773 ubox
9 66 0.045508437 ubox
9 72 0.008348480 ubox
9 76 0.004960575 ubox
9 86 0.007484722 ubox
9 97 0.070904830 ubox
10 15 0.022890571 ubox
10 50 0.012912106 ubox
10 59 0.045675334 ubox
10 85 0.008146869 ubox
10 96 0.077484843 ubox
11 38 0.008233685 ubox
11 49 0.012880853 ubox
11 51 0.003176072 ubox
11 58 0.045157808 ubox
11 60 0.004583655 ubox
11 67 0.025393102 ubox
11 73 0.003899749 ubox
12 37 0.007989498 ubox
12 48 0.012682614 ubox
12 59 0.004582590 ubox
12 66 0.025825324 ubox
12 72 0.003929500 ubox
12 86 0.006111442 ubox
12 97 0.048670821 ubox
13 85 0.006635784 ubox
13 96 0.053101847 ubox
14 50 0.003824454 ubox
14 59 0.015950646 ubox
14 66 0.024584018 ubox
15 52 0.080031821 ubox
15 53 0.007098948 ubox
15 54 0.020179394 ubox
15 56 0.029017899 ubox
15 58 0.016281344 ubox
15 61 0.992103663 ubox
15 65 0.014841486 ubox
15 68 0.019785548 ubox
16 44 0.006101359 ubox
16 49 0.009547173 ubox
16 51 0.085139493 ubox
16 52 0.005882905 ubox
16 53 0.017947620 ubox
16 55 0.028780468 ubox
16 57 0.015958082 ubox
16 60 0.993415733 ubox
16 67 0.019748509 ubox
17 43 0.006186473 ubox
17 48 0.009956064 ubox
17 50 0.086301375 ubox
17 59 0.993697092 ubox
17 66 0.019613733 ubox
18 42 0.006120621 ubox
18 47 0.007235660 ubox
18 49 0.083690901 ubox
18 53 0.009863557 ubox
18 58 0.990547567 ubox
19 41 0.005670064 ubox
19 52 0.011122126 ubox
19 53 0.017606497 ubox
19 57 0.938519845 ubox
19 58 0.027150768 ubox
20 31 0.015100606 ubox
20 51 0.009445213 ubox
20 52 0.020657937 ubox
20 53 0.569392965 ubox
20 57 0.033905222 ubox
20 58 0.034155657 ubox
21 30 0.016692919 ubox
21 47 0.090491963 ubox
21 51 0.015592457 ubox
21 52 0.583597904 ubox
21 53 0.028960340 ubox
21 55 0.754965320 ubox
21 57 0.069893652 ubox
22 29 0.016813189 ubox
22 44 0.004700813 ubox
22 46 0.091421919 ubox
22 49 0.014937892 ubox
22 51 0.590625926 ubox
22 52 0.021841969 ubox
22 54 0.764977551 ubox
22 56 0.079675424 ubox
22 60 0.016274152 ubox
23 43 0.004745326 ubox
23 45 0.091400121 ubox
23 48 0.016128197 ubox
23 50 0.594661665 ubox
23 59 0.016609821 ubox
24 42 0.004655392 ubox
24 44 0.090032545 ubox
24 47 0.015680239 ubox
24 49 0.593203871 ubox
24 51 0.046412165 ubox
24 58 0.016356573 ubox
25 43 0.087741444 ubox
25 48 0.584892129 ubox
25 50 0.037984865 ubox
27 43 0.009977460 ubox
27 45 0.552076481 ubox
27 48 0.077085524 ubox
27 50 0.793507022 ubox
28 42 0.009514323 ubox
28 44 0.552154965 ubox
28 47 0.077759088 ubox
28 49 0.794560943 ubox
28 51 0.023539109 ubox
29 43 0.551614388 ubox
29 48 0.794188402 ubox
29 50 0.023944870 ubox
31 43 0.006501675 ubox
31 45 0.743415058 ubox
31 48 0.017230217 ubox
31 50 0.030858423 ubox
32 42 0.012938349 ubox
32 44 0.765120905 ubox
32 47 0.037733808 ubox
32 49 0.037362475 ubox
32 51 0.008840755 ubox
33 43 0.768074167 ubox
33 45 0.125404248 ubox
33 48 0.039861324 ubox
33 50 0.009011279 ubox
34 42 0.760957817 ubox
34 44 0.089571457 ubox
34 47 0.039870549 ubox
34 49 0.007178007 ubox
34 52 0.006690082 ubox
35 41 0.674815751 ubox
35 44 0.289168326 ubox
35 49 0.007126239 ubox
35 51 0.007370609 ubox
36 43 0.304486710 ubox
36 45 0.039241644 ubox
36 48 0.009249772 ubox
36 50 0.007453290 ubox
37 42 0.294096594 ubox
37 44 0.038578326 ubox
37 47 0.009164815 ubox
37 49 0.007351566 ubox
38 43 0.035723074 ubox
38 48 0.004598757 ubox
39 45 0.009768726 ubox
39 48 0.005847600 ubox
40 44 0.007937262 ubox
40 47 0.005492309 ubox
41 92 0.004376612 ubox
42 91 0.004911990 ubox
43 90 0.005001548 ubox
44 89 0.004890512 ubox
45 71 0.003174440 ubox
45 83 0.004040597 ubox
45 88 0.004284225 ubox
46 82 0.004046629 ubox
46 85 0.004698938 ubox
47 69 0.004644713 ubox
47 81 0.003994621 ubox
47 84 0.004736230 ubox
47 91 0.003904710 ubox
48 68 0.006856480 ubox
48 80 0.003473985 ubox
48 83 0.004756840 ubox
48 90 0.006071972 ubox
48 98 0.005553416 ubox
49 66 0.008571185 ubox
49 82 0.004644378 ubox
49 89 0.006002843 ubox
49 91 0.005288101 ubox
49 97 0.005617420 ubox
50 65 0.013574321 ubox
50 87 0.004587906 ubox
50 88 0.004079295 ubox
50 90 0.005946012 ubox
51 64 0.013607026 ubox
51 86 0.004616706 ubox
51 89 0.005876133 ubox
51 95 0.005613066 ubox
52 63 0.013567724 ubox
52 85 0.004524942 ubox
52 94 0.005647954 ubox
53 62 0.013256479 ubox
53 84 0.004243287 ubox
53 86 0.009579487 ubox
53 93 0.005338443 ubox
53 97 0.019677353 ubox
54 82 0.003783838 ubox
54 85 0.010233194 ubox
54 96 0.021613045 ubox
55 81 0.003615244 ubox
55 84 0.010071375 ubox
55 86 0.008790026 ubox
55 95 0.020961522 ubox
55 97 0.050642098 ubox
56 82 0.008838796 ubox
56 85 0.009442821 ubox
56 96 0.054757984 ubox
57 64 0.004855158 ubox
57 81 0.008658717 ubox
57 82 0.004499828 ubox
57 84 0.006860447 ubox
57 85 0.007296839 ubox
57 92 0.022220944 ubox
57 93 0.007913517 ubox
57 94 0.004119855 ubox
57 95 0.054505776 ubox
58 63 0.005604077 ubox
58 66 0.005865374 ubox
58 69 0.008452230 ubox
58 72 0.003416175 ubox
58 76 0.005173437 ubox
58 81 0.004869604 ubox
58 84 0.010895307 ubox
58 91 0.025047431 ubox
58 92 0.007486613 ubox
58 93 0.004440839 ubox
58 94 0.053119560 ubox
59 65 0.012427819 ubox
59 68 0.009484262 ubox
59 70 0.004555883 ubox
59 71 0.003434071 ubox
59 75 0.005351916 ubox
59 80 0.004864267 ubox
59 83 0.012903101 ubox
59 87 0.018342723 ubox
59 90 0.025747729 ubox
59 98 0.006235948 ubox
60 64 0.011215209 ubox
60 69 0.004647176 ubox
60 82 0.012650253 ubox
60 86 0.018448677 ubox
60 89 0.024936579 ubox
60 97 0.006382872 ubox
61 85 0.018491687 ubox
61 96 0.006440704 ubox
62 74 0.012656023 ubox
62 80 0.011995710 ubox
63 73 0.012814360 ubox
63 74 0.022588456 ubox
63 79 0.012045312 ubox
63 80 0.017201151 ubox
64 73 0.024050974 ubox
64 79 0.017545015 ubox
66 73 0.029832556 ubox
66 77 0.030413815 ubox
66 83 0.051892898 ubox
66 87 0.640501220 ubox
66 90 0.032971214 ubox
66 98 0.365837212 ubox
67 72 0.029343438 ubox
67 76 0.031818348 ubox
67 82 0.050364915 ubox
67 86 0.641499388 ubox
67 89 0.030446434 ubox
67 97 0.369408384 ubox
68 85 0.641107610 ubox
68 96 0.369266670 ubox
73 82 0.058858088 ubox
73 85 0.005129399 ubox
73 86 0.010003152 ubox
73 92 0.045487006 ubox
73 93 0.024107094 ubox
73 94 0.017631917 ubox
73 95 0.028367087 ubox
73 96 0.012808988 ubox
73 97 0.015862475 ubox
74 81 0.055124371 ubox
74 84 0.010653659 ubox
74 85 0.009966809 ubox
74 86 0.074699828 ubox
74 91 0.045679157 ubox
74 92 0.024386920 ubox
74 93 0.018222088 ubox
74 94 0.027900600 ubox
74 95 0.020006111 ubox
74 96 0.016539384 ubox
74 97 0.059168278 ubox
75 85 0.080310380 ubox
75 96 0.063830898 ubox
77 86 0.395330017 ubox
77 97 0.293305559 ubox
78 85 0.415916539 ubox
78 96 0.321009773 ubox
79 84 0.380151217 ubox
79 85 0.020112075 ubox
79 86 0.039616370 ubox
79 92 0.023830713 ubox
79 93 0.017811887 ubox
79 94 0.022434450 ubox
79 95 0.319124496 ubox
79 96 0.007647210 ubox
79 97 0.009078614 ubox
80 84 0.022492820 ubox
80 85 0.040428597 ubox
80 89 0.270342656 ubox
80 91 0.019056178 ubox
80 92 0.017223111 ubox
80 93 0.023748466 ubox
80 94 0.270853160 ubox
80 95 0.009284396 ubox
80 96 0.009329887 ubox
81 88 0.302484003 ubox
82 87 0.301377993 ubox
87 96 0.134149435 ubox
88 95 0.132470286 ubox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
66 87 0.9500000 lbox
67 86 0.9500000 lbox
68 85 0.9500000 lbox
showpage
end
%%EOF
