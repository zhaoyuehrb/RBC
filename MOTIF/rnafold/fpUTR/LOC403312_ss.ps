%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACAAUGGCUGGCACUCUGAGGAAGCCGGACUCAUCCCGUGCAGGCCGCAUACACACUCCACUGCCCUUCCGGCCAAACAAGCCCGGACACGGGAGAGGGAUGAGAGUCGGGG\
) } def
/len { sequence length } bind def

/coor [
[71.24703217 308.99386597]
[58.31276321 316.59024048]
[43.73873520 320.13955688]
[28.76000404 319.34106445]
[14.64591503 314.26245117]
[2.59254837 305.33404541]
[-6.37865305 293.31250000]
[-11.50743866 279.21655273]
[-12.35917759 264.24075317]
[-8.86168957 249.65419006]
[-1.30892563 236.68994141]
[-14.92255688 242.98828125]
[-28.53618813 249.28662109]
[-42.14981842 255.58496094]
[-55.76345062 261.88330078]
[-56.46467972 277.17272949]
[-64.20095062 290.37911987]
[-77.19452667 298.46771240]
[-92.45957947 299.57983398]
[-106.48830414 293.45993042]
[-116.05701447 281.51428223]
[-118.96688080 266.48794556]
[-114.54924011 251.83381653]
[-103.81923676 240.91935730]
[-89.24254608 236.25259399]
[-74.16878510 238.90594482]
[-62.06178665 248.26965332]
[-48.44815445 241.97132874]
[-34.83452606 235.67298889]
[-21.22089386 229.37464905]
[-7.60726213 223.07630920]
[-3.60180974 216.61035156]
[4.28647947 213.51585388]
[13.36409283 201.57446289]
[22.44170570 189.63307190]
[31.51931953 177.69166565]
[40.59693146 165.75027466]
[49.67454529 153.80888367]
[58.75215912 141.86747742]
[67.82977295 129.92608643]
[58.87277603 115.46110535]
[56.08250809 98.67784119]
[59.87734604 82.09282684]
[69.68828583 68.19286346]
[84.04424286 59.06214523]
[100.79264832 56.06975937]
[103.61933136 41.33850479]
[106.44600677 26.60725021]
[109.27268982 11.87599564]
[112.09936523 -2.85525966]
[99.46160126 -11.25540733]
[91.02544403 -23.82021332]
[88.05059052 -38.61764145]
[90.95983124 -53.38666153]
[99.27928162 -65.88272095]
[111.71527100 -74.21887970]
[126.35541534 -77.15070343]
[129.18209839 -91.88195801]
[120.10659790 -104.82069397]
[122.92057800 -120.37245178]
[135.95454407 -129.31063843]
[151.47567749 -126.33239746]
[160.27557373 -113.20465851]
[157.13339233 -97.71587372]
[143.91334534 -89.05527496]
[141.08666992 -74.32402039]
[153.60183716 -66.18155670]
[162.06906128 -53.83442307]
[165.17236328 -39.14652634]
[162.40840149 -24.34963036]
[154.16773987 -11.70427036]
[141.68003845 -3.15440059]
[126.83062744 -0.02857984]
[124.00394440 14.70267582]
[121.17726135 29.43393135]
[118.35058594 44.16518402]
[115.52390289 58.89644241]
[121.62468719 61.75255585]
[127.21717834 65.50769043]
[132.16992188 70.07358551]
[136.36650085 75.34290314]
[139.70825195 81.19180298]
[142.11666870 87.48279572]
[143.53511047 94.06800079]
[143.93023682 100.79264832]
[158.66149902 103.61933136]
[173.39274597 106.44600677]
[188.12400818 109.27268982]
[203.43098450 103.38808441]
[216.00877380 113.91097260]
[212.91842651 130.01631165]
[197.33903503 135.13630676]
[185.29731750 124.00394440]
[170.56607056 121.17726135]
[155.83480835 118.35058594]
[141.10356140 115.52390289]
[131.13824463 130.99844360]
[115.70871735 141.03327942]
[97.52256775 143.86749268]
[79.77117157 139.00369263]
[70.69355774 150.94509888]
[61.61594009 162.88648987]
[52.53833008 174.82788086]
[43.46071625 186.76928711]
[34.38310242 198.71067810]
[25.30548859 210.65206909]
[16.22787476 222.59347534]
[30.50879478 218.00485229]
[45.50615692 217.72367859]
[59.94903946 221.77375793]
[72.61349487 229.81188965]
[82.42630768 241.15689087]
[88.55588531 254.84732056]
[90.48280334 269.72305298]
[88.04375458 284.52340698]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[33 107]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 100]
[46 77]
[47 76]
[48 75]
[49 74]
[50 73]
[57 66]
[58 65]
[85 96]
[86 95]
[87 94]
[88 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
