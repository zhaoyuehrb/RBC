%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ACSF2)
} def

/sequence { (\
AUAGGCAGAGGCCACCCUCCCCGCCUCCCCGCCCGCUGCGCGCCCGCCCCGCCCCGGCUCACUUUAAAAGUUUACUCGGGCCGGGACGCAGGGCAAAGCGAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
3 26 0.290272141 ubox
3 37 0.007251425 ubox
4 13 0.004897323 ubox
4 21 0.007147652 ubox
4 22 0.014098429 ubox
4 25 0.313683047 ubox
4 28 0.004659247 ubox
4 29 0.052816180 ubox
4 30 0.108474065 ubox
4 33 0.934488036 ubox
4 34 0.086331337 ubox
4 36 0.003751875 ubox
4 37 0.003225155 ubox
4 104 0.021849742 ubox
5 12 0.004902548 ubox
5 20 0.007142799 ubox
5 21 0.014089240 ubox
5 24 0.313795171 ubox
5 27 0.003834199 ubox
5 28 0.052768478 ubox
5 29 0.108399761 ubox
5 32 0.938551567 ubox
5 33 0.063111403 ubox
5 36 0.003483600 ubox
5 103 0.021992705 ubox
6 11 0.004894367 ubox
6 23 0.313653522 ubox
6 31 0.939982053 ubox
6 35 0.003484241 ubox
6 102 0.021965624 ubox
7 18 0.005382140 ubox
8 17 0.005438916 ubox
8 19 0.313847652 ubox
8 27 0.948484097 ubox
9 18 0.314040262 ubox
9 26 0.949108384 ubox
10 16 0.011034996 ubox
10 17 0.313929875 ubox
10 20 0.003915122 ubox
10 21 0.008793661 ubox
10 25 0.949287914 ubox
11 15 0.014410986 ubox
11 16 0.310099297 ubox
11 19 0.003907418 ubox
11 20 0.008790626 ubox
11 24 0.949285968 ubox
12 23 0.947913917 ubox
23 32 0.011853355 ubox
24 31 0.011857863 ubox
30 40 0.023921394 ubox
30 100 0.006376405 ubox
31 39 0.024983428 ubox
31 99 0.006441760 ubox
31 103 0.219955266 ubox
32 38 0.024945121 ubox
32 98 0.006428707 ubox
32 102 0.220228224 ubox
34 40 0.003526544 ubox
34 42 0.006127139 ubox
34 100 0.239212040 ubox
35 39 0.003423760 ubox
35 41 0.007099970 ubox
35 99 0.239872978 ubox
35 103 0.944600712 ubox
36 40 0.007073986 ubox
36 98 0.239870882 ubox
36 102 0.946476968 ubox
37 90 0.003622310 ubox
37 95 0.003731110 ubox
37 97 0.238355898 ubox
37 100 0.067085929 ubox
37 101 0.940483242 ubox
38 45 0.004948226 ubox
38 47 0.004417856 ubox
38 89 0.003711822 ubox
38 94 0.005194174 ubox
38 99 0.135601465 ubox
38 103 0.208289408 ubox
39 46 0.004551927 ubox
39 88 0.003709595 ubox
39 93 0.005109817 ubox
39 98 0.135710829 ubox
39 100 0.930969925 ubox
39 102 0.208542035 ubox
40 45 0.006213591 ubox
40 87 0.003515065 ubox
40 89 0.005057715 ubox
40 94 0.063184639 ubox
40 99 0.935181007 ubox
40 103 0.004338392 ubox
41 88 0.005062855 ubox
41 93 0.062942714 ubox
41 98 0.934935336 ubox
41 100 0.220992228 ubox
41 102 0.004007416 ubox
42 87 0.005064496 ubox
42 94 0.367472416 ubox
42 99 0.221877300 ubox
42 103 0.003940130 ubox
43 85 0.005986098 ubox
43 92 0.062466622 ubox
43 93 0.367882234 ubox
43 98 0.221525576 ubox
43 102 0.003966910 ubox
44 84 0.005988963 ubox
44 91 0.062448223 ubox
44 92 0.367921967 ubox
44 93 0.003164185 ubox
45 83 0.005989372 ubox
45 88 0.028130906 ubox
45 91 0.367581035 ubox
45 92 0.003399726 ubox
45 100 0.004133471 ubox
46 52 0.007705240 ubox
46 82 0.005938650 ubox
46 87 0.037488926 ubox
46 89 0.266831575 ubox
46 94 0.926363026 ubox
46 99 0.004039787 ubox
47 51 0.007665808 ubox
47 85 0.016710583 ubox
47 88 0.264100496 ubox
47 92 0.007312146 ubox
47 93 0.927333512 ubox
47 98 0.004017054 ubox
48 80 0.005193938 ubox
48 84 0.017304132 ubox
48 85 0.246287073 ubox
48 91 0.007636833 ubox
48 92 0.927142081 ubox
48 93 0.024325125 ubox
49 79 0.005215890 ubox
49 83 0.017187952 ubox
49 84 0.247541649 ubox
49 91 0.925788847 ubox
49 92 0.030934206 ubox
50 78 0.005231228 ubox
50 83 0.247543131 ubox
50 88 0.452108212 ubox
50 91 0.036281131 ubox
51 77 0.005203875 ubox
51 81 0.050726402 ubox
51 82 0.242456095 ubox
51 87 0.466209121 ubox
51 89 0.842889347 ubox
52 80 0.067433953 ubox
52 85 0.045220103 ubox
52 88 0.839886474 ubox
53 79 0.065189086 ubox
53 80 0.238542742 ubox
53 84 0.037031475 ubox
53 85 0.963479626 ubox
54 78 0.062762221 ubox
54 79 0.239458195 ubox
54 83 0.026185738 ubox
54 84 0.967965424 ubox
54 85 0.005636425 ubox
55 78 0.240074065 ubox
55 83 0.968316535 ubox
55 84 0.004000322 ubox
56 72 0.006444195 ubox
56 76 0.058022743 ubox
56 77 0.239607171 ubox
56 82 0.968679426 ubox
57 71 0.017851509 ubox
57 75 0.131263138 ubox
57 76 0.191967831 ubox
57 81 0.968696593 ubox
58 70 0.019639444 ubox
58 79 0.004368804 ubox
58 80 0.968664904 ubox
59 69 0.018831455 ubox
59 78 0.005517829 ubox
59 79 0.966563403 ubox
59 80 0.005176650 ubox
60 78 0.963015813 ubox
60 79 0.046358326 ubox
61 71 0.713008505 ubox
62 70 0.719842619 ubox
62 79 0.008334523 ubox
63 69 0.711257904 ubox
63 70 0.013449027 ubox
63 78 0.008916862 ubox
64 68 0.592169515 ubox
64 69 0.023114469 ubox
64 70 0.017199298 ubox
65 69 0.014242068 ubox
65 74 0.367804395 ubox
66 72 0.144752880 ubox
66 73 0.377460573 ubox
67 71 0.113987387 ubox
67 72 0.330359052 ubox
67 73 0.035140776 ubox
68 72 0.029851493 ubox
69 76 0.053751969 ubox
70 75 0.055308402 ubox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
35 103 0.9500000 lbox
36 102 0.9500000 lbox
37 101 0.9500000 lbox
39 100 0.9500000 lbox
40 99 0.9500000 lbox
41 98 0.9500000 lbox
46 94 0.9500000 lbox
47 93 0.9500000 lbox
48 92 0.9500000 lbox
49 91 0.9500000 lbox
51 89 0.9500000 lbox
52 88 0.9500000 lbox
53 85 0.9500000 lbox
54 84 0.9500000 lbox
55 83 0.9500000 lbox
56 82 0.9500000 lbox
57 81 0.9500000 lbox
58 80 0.9500000 lbox
59 79 0.9500000 lbox
60 78 0.9500000 lbox
showpage
end
%%EOF
