%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MXRA7)
} def

/sequence { (\
CGGGGCGCGGCGGGCUCCCUCGGGGUCCCAGCUGGCCCGCACUCGGCGGCCGCGGCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.008568225 ubox
1 39 0.074258772 ubox
1 45 0.236121253 ubox
1 48 0.004143192 ubox
1 52 0.008222466 ubox
1 54 0.055488397 ubox
1 57 0.011534245 ubox
1 59 0.056035596 ubox
2 20 0.003995859 ubox
2 21 0.008585804 ubox
2 29 0.009818398 ubox
2 38 0.082701156 ubox
2 43 0.006817705 ubox
2 44 0.239727144 ubox
2 47 0.003626082 ubox
2 51 0.008864369 ubox
2 53 0.056197294 ubox
2 56 0.011650411 ubox
2 58 0.058949179 ubox
3 19 0.008976847 ubox
3 20 0.003387123 ubox
3 28 0.009829085 ubox
3 37 0.069578535 ubox
3 38 0.657649070 ubox
3 42 0.011037483 ubox
3 43 0.235614788 ubox
3 44 0.011308290 ubox
3 50 0.008470161 ubox
3 51 0.026706357 ubox
4 18 0.009005442 ubox
4 19 0.003317752 ubox
4 27 0.009828889 ubox
4 36 0.052950905 ubox
4 37 0.663278925 ubox
4 38 0.007470700 ubox
4 42 0.235270221 ubox
4 43 0.011555791 ubox
4 50 0.026732355 ubox
4 51 0.049865942 ubox
5 17 0.009028857 ubox
5 18 0.003241661 ubox
5 26 0.009820811 ubox
5 36 0.664894705 ubox
5 37 0.007257147 ubox
5 40 0.235133525 ubox
5 42 0.011846875 ubox
5 50 0.049750043 ubox
5 53 0.003626240 ubox
5 56 0.030541114 ubox
5 58 0.696919887 ubox
6 25 0.009820115 ubox
6 34 0.023564982 ubox
6 35 0.665930801 ubox
6 39 0.235311505 ubox
6 48 0.036104370 ubox
6 49 0.042641229 ubox
6 52 0.003628065 ubox
6 54 0.056213050 ubox
6 55 0.021815295 ubox
6 57 0.697562189 ubox
6 59 0.068772806 ubox
7 15 0.009971957 ubox
7 32 0.018850712 ubox
7 33 0.008917343 ubox
7 36 0.017193574 ubox
7 38 0.234903051 ubox
7 40 0.020746698 ubox
7 47 0.043725613 ubox
7 53 0.060402758 ubox
7 56 0.697570948 ubox
7 58 0.074328683 ubox
8 14 0.009975038 ubox
8 22 0.007966529 ubox
8 31 0.019195740 ubox
8 34 0.665482652 ubox
8 35 0.013401378 ubox
8 39 0.020761734 ubox
8 45 0.025328534 ubox
8 46 0.036717458 ubox
8 48 0.015446832 ubox
8 52 0.060443396 ubox
8 54 0.017455638 ubox
8 55 0.697067788 ubox
8 57 0.074336918 ubox
9 21 0.007981525 ubox
9 29 0.012743091 ubox
9 33 0.678028933 ubox
9 37 0.229862377 ubox
9 38 0.017013111 ubox
9 43 0.005289651 ubox
9 44 0.034537483 ubox
9 47 0.015338889 ubox
9 51 0.057689282 ubox
9 53 0.022450070 ubox
9 56 0.073762265 ubox
10 20 0.007638882 ubox
10 28 0.009707352 ubox
10 32 0.681088440 ubox
10 36 0.230196517 ubox
10 37 0.012116722 ubox
10 40 0.046945861 ubox
10 42 0.003377955 ubox
10 43 0.004930160 ubox
10 50 0.057623657 ubox
10 53 0.681939330 ubox
10 56 0.008502099 ubox
11 22 0.005266175 ubox
11 31 0.680202311 ubox
11 34 0.004357317 ubox
11 35 0.230436848 ubox
11 39 0.047442851 ubox
11 45 0.005442412 ubox
11 49 0.057300469 ubox
11 52 0.680679496 ubox
11 54 0.072621792 ubox
11 55 0.011866422 ubox
12 18 0.003945058 ubox
12 19 0.007054166 ubox
12 21 0.005395411 ubox
12 27 0.005815272 ubox
12 28 0.609920600 ubox
12 29 0.728322881 ubox
12 38 0.047861867 ubox
12 44 0.005209526 ubox
12 51 0.165003530 ubox
12 53 0.029304933 ubox
13 17 0.003885025 ubox
13 18 0.007033334 ubox
13 20 0.005069823 ubox
13 26 0.004935981 ubox
13 27 0.614908429 ubox
13 28 0.728347022 ubox
13 29 0.057270901 ubox
13 33 0.220750491 ubox
13 37 0.047955439 ubox
13 43 0.004900539 ubox
13 50 0.131188356 ubox
13 51 0.099299768 ubox
14 19 0.005011046 ubox
14 26 0.618406396 ubox
14 27 0.725975086 ubox
14 28 0.057279996 ubox
14 32 0.221695013 ubox
14 36 0.050381959 ubox
14 42 0.004823407 ubox
14 47 0.063853316 ubox
14 50 0.137350632 ubox
15 24 0.011897504 ubox
15 25 0.799310105 ubox
15 31 0.221669025 ubox
15 35 0.050379230 ubox
15 46 0.064104902 ubox
15 49 0.166841311 ubox
16 23 0.012634108 ubox
16 24 0.748098785 ubox
16 25 0.474102739 ubox
16 30 0.211585885 ubox
16 34 0.049174250 ubox
16 45 0.061250669 ubox
16 46 0.004110059 ubox
16 48 0.160625091 ubox
16 49 0.008863121 ubox
17 22 0.013648454 ubox
17 23 0.748114799 ubox
17 24 0.582855997 ubox
17 25 0.247605412 ubox
17 34 0.005075615 ubox
17 45 0.010644515 ubox
17 46 0.090706749 ubox
17 48 0.032236526 ubox
17 49 0.025899906 ubox
18 22 0.742697250 ubox
18 23 0.583415082 ubox
18 24 0.247614980 ubox
18 25 0.021114954 ubox
18 45 0.090586006 ubox
18 46 0.142028140 ubox
18 48 0.026086689 ubox
18 49 0.011518319 ubox
19 23 0.245830350 ubox
19 24 0.021130682 ubox
19 25 0.004311359 ubox
19 31 0.047561841 ubox
19 45 0.141854619 ubox
19 46 0.016522738 ubox
19 48 0.011627019 ubox
20 24 0.003900116 ubox
20 30 0.047289710 ubox
20 45 0.010771617 ubox
20 46 0.032136432 ubox
21 34 0.003734006 ubox
21 39 0.056808890 ubox
21 45 0.035795441 ubox
22 28 0.023358033 ubox
22 29 0.050159537 ubox
22 33 0.004172193 ubox
22 38 0.053255126 ubox
22 43 0.007947397 ubox
22 44 0.037233162 ubox
23 27 0.023013527 ubox
23 28 0.050000565 ubox
23 29 0.008672123 ubox
23 32 0.004178903 ubox
23 37 0.049012613 ubox
23 38 0.175394013 ubox
23 42 0.005048759 ubox
23 43 0.024623475 ubox
24 28 0.008582498 ubox
24 36 0.044278763 ubox
24 37 0.176818289 ubox
24 38 0.005870668 ubox
24 42 0.024137657 ubox
25 32 0.006236499 ubox
25 36 0.178266588 ubox
25 37 0.005919949 ubox
25 40 0.023638669 ubox
25 58 0.009170055 ubox
26 31 0.005949966 ubox
26 35 0.170367358 ubox
26 39 0.023505793 ubox
26 41 0.003185028 ubox
26 57 0.009069664 ubox
27 34 0.168049987 ubox
27 35 0.059370517 ubox
27 49 0.004379110 ubox
28 34 0.059433904 ubox
28 35 0.049843787 ubox
28 48 0.004389276 ubox
28 49 0.017421643 ubox
28 55 0.009318510 ubox
29 34 0.052197773 ubox
29 48 0.021527517 ubox
29 54 0.021351439 ubox
31 40 0.004582522 ubox
31 47 0.051801912 ubox
31 50 0.053939254 ubox
31 53 0.097784654 ubox
31 56 0.008834394 ubox
32 39 0.004583107 ubox
32 46 0.051858830 ubox
32 49 0.054131395 ubox
32 52 0.095968594 ubox
32 55 0.008873909 ubox
33 45 0.051796350 ubox
33 48 0.051564336 ubox
33 52 0.061452429 ubox
33 54 0.007796815 ubox
34 44 0.051697831 ubox
34 47 0.040190409 ubox
34 51 0.671954816 ubox
34 53 0.004507675 ubox
35 42 0.025696002 ubox
35 43 0.038307709 ubox
35 47 0.048236097 ubox
35 50 0.672806383 ubox
35 53 0.012089200 ubox
35 58 0.004270003 ubox
36 46 0.055696647 ubox
36 49 0.550308701 ubox
36 52 0.012115856 ubox
36 57 0.004274597 ubox
37 45 0.053574604 ubox
37 46 0.043345172 ubox
37 48 0.389751507 ubox
37 49 0.390351753 ubox
37 55 0.004639343 ubox
38 45 0.055583113 ubox
38 48 0.550548179 ubox
38 54 0.005569619 ubox
38 57 0.013243394 ubox
38 59 0.064858656 ubox
39 44 0.055684822 ubox
39 47 0.675122574 ubox
39 50 0.019947359 ubox
39 53 0.011040244 ubox
39 56 0.086513623 ubox
39 58 0.582807446 ubox
40 46 0.674732298 ubox
40 49 0.020002078 ubox
40 52 0.010890350 ubox
40 55 0.086486186 ubox
40 57 0.582817903 ubox
42 49 0.007783849 ubox
42 55 0.575629338 ubox
43 48 0.007112836 ubox
43 54 0.549385195 ubox
43 55 0.044795213 ubox
44 48 0.003247330 ubox
44 52 0.554749553 ubox
44 54 0.143018265 ubox
44 57 0.207987144 ubox
44 59 0.043278869 ubox
45 51 0.556721250 ubox
45 53 0.129613684 ubox
45 56 0.225429712 ubox
45 58 0.042646226 ubox
46 50 0.547749665 ubox
46 53 0.134052838 ubox
46 56 0.053660775 ubox
46 58 0.304214857 ubox
47 52 0.148586462 ubox
47 54 0.227055548 ubox
47 55 0.050706451 ubox
47 57 0.304878725 ubox
47 59 0.049264396 ubox
48 53 0.226925321 ubox
48 56 0.255640111 ubox
48 58 0.056828463 ubox
49 56 0.182502935 ubox
49 58 0.027632526 ubox
50 55 0.246414755 ubox
50 57 0.027436963 ubox
51 57 0.004970931 ubox
51 59 0.031882872 ubox
52 56 0.005956522 ubox
52 58 0.034594766 ubox
53 57 0.034352650 ubox
3 38 0.9500000 lbox
4 37 0.9500000 lbox
5 36 0.9500000 lbox
6 35 0.9500000 lbox
8 34 0.9500000 lbox
9 33 0.9500000 lbox
10 32 0.9500000 lbox
11 31 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
18 22 0.9500000 lbox
39 58 0.9500000 lbox
40 57 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
46 50 0.9500000 lbox
showpage
end
%%EOF
