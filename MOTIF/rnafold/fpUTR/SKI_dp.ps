%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SKI)
} def

/sequence { (\
CGGGGCGGCGGCGGGGGCCGGGGGGGCCCGGGCGCGCGGGAGCGGGAGCGGCCGGGGGAGCCGGAGCGCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.068499524 ubox
1 10 0.105803937 ubox
1 13 0.009222559 ubox
1 30 0.128767423 ubox
1 34 0.022333951 ubox
1 38 0.032404533 ubox
1 44 0.564204204 ubox
1 63 0.011900134 ubox
1 68 0.035250128 ubox
2 6 0.065208338 ubox
2 9 0.107015409 ubox
2 12 0.008748476 ubox
2 29 0.121867756 ubox
2 33 0.023661349 ubox
2 37 0.029057648 ubox
2 43 0.582940051 ubox
2 62 0.012029225 ubox
2 67 0.037233279 ubox
2 72 0.415759352 ubox
3 28 0.110565666 ubox
3 29 0.281464574 ubox
3 61 0.012000016 ubox
3 71 0.416574309 ubox
3 72 0.323158265 ubox
4 27 0.097934203 ubox
4 28 0.286351417 ubox
4 53 0.009648715 ubox
4 62 0.014189479 ubox
4 71 0.327127052 ubox
4 72 0.033131155 ubox
5 12 0.063491097 ubox
5 27 0.290911470 ubox
5 33 0.005945180 ubox
5 35 0.054470278 ubox
5 37 0.323768360 ubox
5 43 0.264598250 ubox
5 52 0.009703602 ubox
5 61 0.014227594 ubox
5 67 0.069324822 ubox
5 69 0.528503753 ubox
5 71 0.033199293 ubox
6 11 0.063557364 ubox
6 13 0.020544513 ubox
6 20 0.015662291 ubox
6 26 0.295321743 ubox
6 32 0.005942840 ubox
6 34 0.055007044 ubox
6 36 0.323782363 ubox
6 38 0.358428995 ubox
6 42 0.264039539 ubox
6 44 0.030733179 ubox
6 51 0.009735934 ubox
6 54 0.014396676 ubox
6 60 0.014216404 ubox
6 63 0.038954532 ubox
6 66 0.069409318 ubox
6 68 0.533682416 ubox
7 12 0.020883989 ubox
7 19 0.018419102 ubox
7 33 0.042815064 ubox
7 35 0.252710210 ubox
7 37 0.333340163 ubox
7 43 0.031220190 ubox
7 53 0.014866706 ubox
7 62 0.039403134 ubox
7 67 0.517145372 ubox
7 72 0.127114472 ubox
8 18 0.019438339 ubox
8 33 0.146158925 ubox
8 35 0.393502282 ubox
8 37 0.573193368 ubox
8 43 0.015902198 ubox
8 49 0.012098534 ubox
8 52 0.015353977 ubox
8 61 0.039456314 ubox
8 67 0.092576636 ubox
8 69 0.030672012 ubox
8 71 0.128035051 ubox
9 17 0.020048644 ubox
9 20 0.513709730 ubox
9 30 0.003975394 ubox
9 32 0.149906525 ubox
9 34 0.442887547 ubox
9 36 0.589309855 ubox
9 38 0.202403806 ubox
9 42 0.016042303 ubox
9 48 0.012095552 ubox
9 51 0.015668009 ubox
9 54 0.006598191 ubox
9 60 0.037871468 ubox
9 63 0.206557830 ubox
9 66 0.127195911 ubox
9 68 0.030651241 ubox
10 19 0.524474128 ubox
10 33 0.399474123 ubox
10 35 0.581799506 ubox
10 37 0.201000678 ubox
10 53 0.006872655 ubox
10 62 0.208817067 ubox
10 67 0.027273795 ubox
10 72 0.004365444 ubox
11 18 0.524651642 ubox
11 33 0.617191701 ubox
11 35 0.221526963 ubox
11 37 0.107586912 ubox
11 49 0.015629388 ubox
11 52 0.006879528 ubox
11 61 0.208813758 ubox
11 67 0.010198040 ubox
11 69 0.159801853 ubox
11 71 0.003651174 ubox
12 17 0.524584581 ubox
12 20 0.012710751 ubox
12 30 0.099777832 ubox
12 32 0.645696108 ubox
12 34 0.235968253 ubox
12 36 0.109929349 ubox
12 38 0.016978114 ubox
12 48 0.015616685 ubox
12 51 0.006826657 ubox
12 54 0.003782423 ubox
12 60 0.208520731 ubox
12 63 0.108234036 ubox
12 66 0.013846450 ubox
12 68 0.159906734 ubox
13 19 0.016373142 ubox
13 29 0.086364854 ubox
13 33 0.233179500 ubox
13 35 0.109621409 ubox
13 37 0.017187798 ubox
13 53 0.003834124 ubox
13 62 0.107406108 ubox
13 67 0.159721249 ubox
13 72 0.013138644 ubox
14 18 0.016120342 ubox
14 28 0.074298107 ubox
14 29 0.331519293 ubox
14 52 0.003779206 ubox
14 61 0.106899330 ubox
14 62 0.007755625 ubox
14 71 0.013214506 ubox
14 72 0.006200818 ubox
15 27 0.059949928 ubox
15 28 0.333301571 ubox
15 29 0.741103857 ubox
15 61 0.008833648 ubox
15 71 0.006239653 ubox
15 72 0.005276108 ubox
16 27 0.334809138 ubox
16 28 0.744749526 ubox
16 29 0.003399254 ubox
16 53 0.021887699 ubox
16 62 0.005319010 ubox
16 71 0.005330898 ubox
17 27 0.747289767 ubox
17 33 0.060850325 ubox
17 52 0.021902412 ubox
17 61 0.005340573 ubox
17 67 0.005069117 ubox
17 69 0.003652305 ubox
18 24 0.016638954 ubox
18 25 0.345598323 ubox
18 26 0.748652718 ubox
18 31 0.107245621 ubox
18 32 0.056419213 ubox
18 51 0.021774529 ubox
18 55 0.011287575 ubox
18 56 0.006550751 ubox
18 57 0.011865552 ubox
18 58 0.016317008 ubox
18 60 0.005033286 ubox
18 64 0.166457083 ubox
18 66 0.004292402 ubox
19 23 0.016797365 ubox
19 24 0.347551501 ubox
19 25 0.747638760 ubox
19 30 0.110032887 ubox
19 31 0.051298737 ubox
19 50 0.021606790 ubox
19 54 0.011271148 ubox
19 55 0.006499491 ubox
19 56 0.010719737 ubox
19 57 0.016345222 ubox
19 63 0.167077740 ubox
20 29 0.113687367 ubox
20 49 0.019891413 ubox
20 53 0.010210677 ubox
20 62 0.170162622 ubox
21 27 0.003472745 ubox
21 28 0.113820850 ubox
21 29 0.046849470 ubox
21 52 0.010177475 ubox
21 53 0.004159561 ubox
21 61 0.169701834 ubox
21 62 0.307709271 ubox
21 72 0.003930073 ubox
22 27 0.113726661 ubox
22 28 0.046883684 ubox
22 52 0.004167083 ubox
22 61 0.307987596 ubox
22 62 0.241121924 ubox
22 71 0.003972440 ubox
23 27 0.046140161 ubox
23 61 0.241427290 ubox
23 62 0.151617895 ubox
24 61 0.151862797 ubox
24 62 0.025007883 ubox
25 53 0.007240562 ubox
25 61 0.024855565 ubox
25 62 0.033057269 ubox
26 43 0.011065786 ubox
26 49 0.008931806 ubox
26 52 0.007300084 ubox
26 61 0.033112824 ubox
26 67 0.005564317 ubox
27 40 0.018666412 ubox
27 42 0.008737705 ubox
27 46 0.006501662 ubox
27 48 0.008928068 ubox
27 51 0.006469202 ubox
27 56 0.444086512 ubox
27 57 0.131345139 ubox
27 58 0.021446683 ubox
27 60 0.024574431 ubox
27 66 0.005627395 ubox
28 39 0.020096048 ubox
28 40 0.004694684 ubox
28 45 0.006516383 ubox
28 46 0.008845124 ubox
28 50 0.005442089 ubox
28 51 0.006148198 ubox
28 55 0.448477042 ubox
28 56 0.130574614 ubox
28 57 0.020380326 ubox
28 58 0.005045207 ubox
28 64 0.005955582 ubox
29 38 0.020239288 ubox
29 39 0.004157210 ubox
29 44 0.006438115 ubox
29 45 0.008846150 ubox
29 50 0.007423739 ubox
29 54 0.452101604 ubox
29 55 0.129368114 ubox
29 56 0.019147719 ubox
29 57 0.004842271 ubox
29 63 0.005989739 ubox
30 35 0.011979334 ubox
30 37 0.020514379 ubox
30 43 0.005200175 ubox
30 49 0.009654602 ubox
30 53 0.484363371 ubox
30 62 0.005671673 ubox
30 72 0.197205959 ubox
31 52 0.484216787 ubox
31 53 0.167869788 ubox
31 61 0.005091772 ubox
31 62 0.016398196 ubox
31 71 0.198996111 ubox
31 72 0.093061902 ubox
32 43 0.038625418 ubox
32 49 0.022828479 ubox
32 52 0.168465164 ubox
32 61 0.016845133 ubox
32 69 0.203945036 ubox
32 71 0.094207180 ubox
33 42 0.038688769 ubox
33 44 0.158059019 ubox
33 48 0.022840737 ubox
33 50 0.484939492 ubox
33 51 0.165581405 ubox
33 60 0.017195814 ubox
33 68 0.204105770 ubox
34 43 0.164285168 ubox
34 49 0.486075293 ubox
34 67 0.203022500 ubox
34 69 0.099100966 ubox
35 42 0.164266545 ubox
35 44 0.210253498 ubox
35 48 0.468364462 ubox
35 50 0.162227157 ubox
35 66 0.202090969 ubox
35 68 0.099111838 ubox
36 43 0.386628458 ubox
36 49 0.165011900 ubox
36 61 0.014957271 ubox
36 67 0.098884111 ubox
36 69 0.004161213 ubox
37 42 0.386744624 ubox
37 44 0.342915769 ubox
37 48 0.164814802 ubox
37 50 0.010688571 ubox
37 51 0.003753632 ubox
37 54 0.099898983 ubox
37 60 0.014986198 ubox
37 63 0.165755506 ubox
37 66 0.098371334 ubox
37 68 0.004165205 ubox
38 43 0.352888742 ubox
38 49 0.012046350 ubox
38 53 0.124425080 ubox
38 62 0.166963781 ubox
38 67 0.004151827 ubox
38 72 0.113595154 ubox
39 52 0.125331454 ubox
39 53 0.028197387 ubox
39 61 0.166848874 ubox
39 62 0.037490644 ubox
39 71 0.114487137 ubox
39 72 0.091586221 ubox
40 52 0.028770072 ubox
40 61 0.037739471 ubox
40 71 0.092584096 ubox
42 49 0.240568882 ubox
42 52 0.011281467 ubox
42 67 0.010321266 ubox
42 69 0.154028381 ubox
43 48 0.240759276 ubox
43 50 0.084829503 ubox
43 51 0.013604440 ubox
43 54 0.172083544 ubox
43 63 0.004524849 ubox
43 66 0.010424894 ubox
43 68 0.154165961 ubox
44 49 0.089242306 ubox
44 53 0.172562050 ubox
44 62 0.004514476 ubox
44 67 0.149053406 ubox
44 72 0.373204143 ubox
45 52 0.172445029 ubox
45 53 0.014501613 ubox
45 61 0.004389879 ubox
45 71 0.386305868 ubox
45 72 0.599202991 ubox
46 52 0.014806865 ubox
46 71 0.605130058 ubox
48 67 0.116184179 ubox
48 69 0.771068335 ubox
49 63 0.144980538 ubox
49 66 0.118831456 ubox
49 68 0.771888608 ubox
50 62 0.145643095 ubox
50 67 0.771239848 ubox
51 61 0.145643274 ubox
51 67 0.015399243 ubox
52 58 0.012683267 ubox
52 60 0.145117332 ubox
52 64 0.816252224 ubox
52 66 0.015711692 ubox
53 57 0.016644946 ubox
53 63 0.817319478 ubox
54 62 0.817965174 ubox
54 72 0.004681332 ubox
55 61 0.816607838 ubox
55 62 0.119166031 ubox
55 71 0.004726813 ubox
55 72 0.008966446 ubox
56 61 0.125887107 ubox
56 62 0.022668899 ubox
56 71 0.009067134 ubox
56 72 0.009169772 ubox
57 61 0.022428842 ubox
57 71 0.009327222 ubox
57 72 0.006849684 ubox
58 71 0.006921886 ubox
60 67 0.015924453 ubox
60 69 0.010060064 ubox
61 66 0.016172779 ubox
61 68 0.009957936 ubox
63 67 0.006267337 ubox
63 72 0.014171465 ubox
64 71 0.014267225 ubox
1 44 0.9500000 lbox
2 43 0.9500000 lbox
8 37 0.9500000 lbox
9 36 0.9500000 lbox
10 35 0.9500000 lbox
11 33 0.9500000 lbox
12 32 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
45 72 0.9500000 lbox
46 71 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
54 62 0.9500000 lbox
55 61 0.9500000 lbox
showpage
end
%%EOF
