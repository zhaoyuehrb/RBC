%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TRAF2)
} def

/sequence { (\
CUUAGUUCCGGGCGCGCUGCGACCGUUGGGGCUUUGUUCGCGGGGGUCACAGCUCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.079280075 ubox
1 12 0.120834789 ubox
2 10 0.076613464 ubox
2 11 0.122705842 ubox
2 12 0.013473101 ubox
3 10 0.108081535 ubox
3 11 0.016909156 ubox
4 33 0.035971462 ubox
4 54 0.004621911 ubox
4 56 0.012713208 ubox
5 13 0.234235340 ubox
5 15 0.116261443 ubox
5 32 0.038925768 ubox
5 53 0.003833143 ubox
5 55 0.013457620 ubox
6 12 0.231993119 ubox
6 14 0.113784629 ubox
6 31 0.038896657 ubox
6 52 0.003242386 ubox
7 11 0.170886541 ubox
7 30 0.038826895 ubox
8 29 0.038975697 ubox
8 42 0.004146369 ubox
9 16 0.022890898 ubox
9 19 0.003450470 ubox
9 25 0.028308781 ubox
9 28 0.038643637 ubox
9 40 0.011007045 ubox
10 15 0.125382858 ubox
10 18 0.003559919 ubox
10 24 0.031081358 ubox
10 27 0.030379300 ubox
10 39 0.011397982 ubox
10 54 0.006008584 ubox
10 55 0.108050527 ubox
10 56 0.192253263 ubox
10 57 0.681294066 ubox
11 17 0.003596525 ubox
11 23 0.030874686 ubox
11 24 0.037988083 ubox
11 26 0.004113708 ubox
11 38 0.011390500 ubox
11 54 0.107367376 ubox
11 55 0.207094354 ubox
11 56 0.705079985 ubox
11 57 0.052105279 ubox
12 20 0.003546908 ubox
12 23 0.038236067 ubox
12 37 0.011449692 ubox
12 53 0.081571143 ubox
12 54 0.200089748 ubox
12 55 0.707962435 ubox
12 56 0.046189675 ubox
13 19 0.003556211 ubox
13 21 0.048601193 ubox
13 25 0.003383739 ubox
13 36 0.011473407 ubox
13 52 0.072762508 ubox
14 20 0.050036096 ubox
14 24 0.003287531 ubox
14 35 0.010428770 ubox
14 41 0.003189017 ubox
14 47 0.003708081 ubox
14 53 0.072677627 ubox
15 19 0.049674891 ubox
15 40 0.003189922 ubox
15 46 0.003726773 ubox
15 52 0.065669485 ubox
16 32 0.011410929 ubox
16 39 0.003168741 ubox
16 53 0.991595925 ubox
17 31 0.011426464 ubox
17 43 0.003964240 ubox
17 52 0.993820319 ubox
18 30 0.011385148 ubox
18 42 0.004360944 ubox
18 49 0.005081151 ubox
18 51 0.997841622 ubox
19 37 0.003177833 ubox
19 41 0.004758533 ubox
19 47 0.004545047 ubox
19 48 0.004162466 ubox
19 50 0.998252504 ubox
20 28 0.011400268 ubox
20 36 0.003192470 ubox
20 40 0.004761762 ubox
20 46 0.005701859 ubox
21 27 0.010928180 ubox
21 39 0.004757905 ubox
21 48 0.998107759 ubox
22 26 0.009318764 ubox
22 38 0.004644379 ubox
22 47 0.998531485 ubox
23 30 0.004063755 ubox
23 31 0.003863015 ubox
23 43 0.006528662 ubox
23 45 0.005046594 ubox
23 46 0.998638538 ubox
24 29 0.004074876 ubox
24 30 0.003868591 ubox
24 42 0.006787584 ubox
24 44 0.007028486 ubox
24 45 0.998576791 ubox
25 41 0.007790254 ubox
25 53 0.008543408 ubox
26 40 0.006615525 ubox
26 43 0.991527819 ubox
26 44 0.006461864 ubox
26 52 0.008629300 ubox
27 40 0.012770016 ubox
27 42 0.994089451 ubox
27 43 0.005359469 ubox
27 51 0.008691973 ubox
28 39 0.016581728 ubox
28 41 0.995158366 ubox
28 50 0.008685633 ubox
28 56 0.026408405 ubox
28 57 0.004624290 ubox
29 38 0.017673439 ubox
29 39 0.633713234 ubox
29 48 0.007200507 ubox
29 55 0.028816548 ubox
29 56 0.003483890 ubox
30 37 0.018344049 ubox
30 38 0.634249010 ubox
30 39 0.766894320 ubox
30 47 0.007158069 ubox
30 48 0.004528724 ubox
30 54 0.028900919 ubox
30 55 0.003510987 ubox
31 37 0.656590510 ubox
31 38 0.597707235 ubox
31 41 0.015279919 ubox
31 47 0.004879577 ubox
31 53 0.029182332 ubox
32 36 0.674999866 ubox
32 40 0.015664167 ubox
32 45 0.007313697 ubox
32 46 0.004808909 ubox
32 52 0.029189433 ubox
33 44 0.007369674 ubox
33 45 0.004709829 ubox
33 51 0.028454642 ubox
34 43 0.007430855 ubox
34 44 0.004550045 ubox
35 42 0.007589629 ubox
35 43 0.004362939 ubox
35 49 0.028587314 ubox
36 41 0.008260597 ubox
36 48 0.028784109 ubox
36 50 0.003709833 ubox
37 46 0.022580431 ubox
37 49 0.003599442 ubox
38 45 0.023662368 ubox
38 46 0.012090729 ubox
39 44 0.023779413 ubox
39 45 0.015672323 ubox
40 47 0.005893893 ubox
41 46 0.005955150 ubox
42 55 0.003478420 ubox
42 56 0.004523508 ubox
42 57 0.038387996 ubox
43 54 0.003497407 ubox
43 55 0.004902948 ubox
43 56 0.039986809 ubox
44 53 0.003510612 ubox
44 54 0.004880820 ubox
44 55 0.040292671 ubox
45 53 0.004906233 ubox
45 54 0.040275705 ubox
46 53 0.040307067 ubox
47 52 0.038379724 ubox
10 57 0.9500000 lbox
11 56 0.9500000 lbox
12 55 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
showpage
end
%%EOF
