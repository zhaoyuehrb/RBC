%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGGGAGCGUGCCCUCGGGGCGGAGAGCGUCGCGGCCCGCGCCGAGGCGAUGCUCGGGUGGCUGCGAGCUGCCGGCGGCGAGAGGCCAUAGACGGGCAUGGGCCUUGCGUCCCACCACCCCUAGGGACCCUCGAGCCUCGCCCCUCUGCUCCGACUCGCCGGACCGACGCG\
) } def
/len { sequence length } bind def

/coor [
[110.07814026 137.27571106]
[103.56987762 150.79023743]
[97.06162262 164.30477905]
[90.55336761 177.81930542]
[84.04511261 191.33384705]
[77.53685760 204.84837341]
[71.02860260 218.36291504]
[64.52034760 231.87744141]
[71.99170685 245.47738647]
[70.00893402 260.86724854]
[59.33442688 272.12933350]
[44.07276535 274.93313599]
[30.09236526 268.20053101]
[22.76897240 254.52035522]
[24.91858482 239.15289307]
[35.71463013 228.00726318]
[51.00580978 225.36918640]
[57.51406860 211.85466003]
[64.02232361 198.34011841]
[70.53057861 184.82559204]
[77.03883362 171.31105042]
[83.54708862 157.79652405]
[90.05535126 144.28198242]
[96.56360626 130.76745605]
[93.43129730 123.95286560]
[79.80200958 130.21723938]
[73.53785706 116.58785248]
[87.16669464 110.32367706]
[84.03438568 103.50908661]
[69.53971100 99.64847565]
[55.04502869 95.78787231]
[45.91261673 96.60270691]
[40.32601547 91.72568512]
[25.90297318 87.60550690]
[11.47993088 83.48532867]
[-2.94311070 79.36515045]
[-17.36615181 75.24497223]
[-31.78919411 71.12479401]
[-46.21223450 67.00461578]
[-60.63527679 62.88443756]
[-69.78084564 63.53520966]
[-75.27899933 58.55868149]
[-89.62575531 54.18025970]
[-98.78153229 54.66675186]
[-104.18946838 49.59233093]
[-118.45531464 44.95707703]
[-132.72116089 40.32182312]
[-146.98701477 35.68656540]
[-161.25285339 31.05131149]
[-175.21902466 38.44872284]
[-190.30059814 33.72411346]
[-197.54992676 19.68051720]
[-192.66613770 4.64974546]
[-178.54667664 -2.45071006]
[-163.56838989 2.59172511]
[-156.61759949 16.78546333]
[-142.35176086 21.42071915]
[-128.08590698 26.05597305]
[-113.82006073 30.69122887]
[-99.55421448 35.32648468]
[-85.24733734 39.83350372]
[-70.90058136 44.21192551]
[-56.51509857 48.46139526]
[-42.09206009 52.58157349]
[-27.66901588 56.70175171]
[-13.24597454 60.82192993]
[1.17706716 64.94210815]
[15.60010910 69.06228638]
[30.02315140 73.18246460]
[44.44619370 77.30264282]
[58.90563583 81.29319763]
[73.40031433 85.15380096]
[87.89499664 89.01440430]
[102.89438629 88.87976837]
[117.31742859 84.75959015]
[131.66418457 80.38116455]
[145.93003845 75.74591064]
[160.19587708 71.11065674]
[174.37622070 66.22006226]
[188.46649170 61.07570648]
[202.55676270 55.93135071]
[216.64701843 50.78699112]
[230.73728943 45.64263535]
[244.82756042 40.49827576]
[258.91781616 35.35391998]
[270.38845825 20.96864700]
[287.53656006 24.63069916]
[301.53219604 19.23423576]
[305.54812622 6.35685682]
[316.10006714 -1.72975755]
[329.18942261 -2.24410772]
[340.01644897 4.77769184]
[354.10671997 -0.36666563]
[368.19699097 -5.51102304]
[382.28726196 -10.65538025]
[392.59689331 -22.65629005]
[407.20584106 -19.75315666]
[421.29611206 -24.89751434]
[435.38635254 -30.04187202]
[449.47662354 -35.18622971]
[455.62802124 -46.54791641]
[467.49588013 -50.53207397]
[478.52600098 -45.51506424]
[492.70632935 -50.40565872]
[506.88668823 -55.29625320]
[521.06701660 -60.18684769]
[528.18823242 -65.96205902]
[535.54602051 -65.03546906]
[549.81188965 -69.67072296]
[564.07775879 -74.30597687]
[576.83660889 -89.88452148]
[595.55950928 -85.13176727]
[609.64978027 -90.27612305]
[623.74005127 -95.42047882]
[637.83032227 -100.56483459]
[651.92059326 -105.70919800]
[654.49346924 -120.85105133]
[664.30493164 -132.66758728]
[678.71575928 -137.98023987]
[693.84942627 -135.35989380]
[705.63519287 -125.51143646]
[710.90264893 -111.08404541]
[708.23486328 -95.95861816]
[698.34948730 -84.20381165]
[683.90570068 -78.98162079]
[668.78869629 -81.69677734]
[657.06494141 -91.61892700]
[642.97467041 -86.47457123]
[628.88439941 -81.33021545]
[614.79412842 -76.18585968]
[600.70385742 -71.04150391]
[597.22637939 -61.38973236]
[588.82342529 -55.12854004]
[578.14093018 -54.53190231]
[568.71301270 -60.04013062]
[554.44714355 -55.40487671]
[540.18127441 -50.76961899]
[525.95764160 -46.00650406]
[511.77728271 -41.11590958]
[497.59692383 -36.22531509]
[483.41659546 -31.33472252]
[472.66192627 -17.48537827]
[454.62100220 -21.09596443]
[440.53073120 -15.95160675]
[426.44046021 -10.80724907]
[412.35018921 -5.66289139]
[403.04837036 5.97005844]
[387.43161011 3.43488526]
[373.34133911 8.57924271]
[359.25106812 13.72360039]
[345.16082764 18.86795807]
[338.74154663 34.39614487]
[322.76928711 40.61458969]
[306.92864990 33.22988510]
[292.93301392 38.62634659]
[287.73013306 49.57003021]
[276.08700562 54.16973495]
[264.06216431 49.44418716]
[249.97190857 54.58854294]
[235.88163757 59.73289871]
[221.79138184 64.87725830]
[207.70111084 70.02161407]
[193.61085510 75.16596985]
[179.52058411 80.31033325]
[176.71907043 84.21575928]
[171.42019653 86.38368988]
[164.83113098 85.37650299]
[150.56529236 90.01176453]
[136.29943848 94.64701843]
[133.35954285 98.44936371]
[127.98625946 100.42568970]
[121.43760681 99.18263245]
[107.01456451 103.30281067]
[113.45568848 112.01635742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[29 73]
[30 72]
[31 71]
[33 70]
[34 69]
[35 68]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[42 62]
[43 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[74 173]
[75 172]
[76 169]
[77 168]
[78 167]
[79 164]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
[85 158]
[87 155]
[88 154]
[92 151]
[93 150]
[94 149]
[95 148]
[97 146]
[98 145]
[99 144]
[100 143]
[103 141]
[104 140]
[105 139]
[106 138]
[108 137]
[109 136]
[110 135]
[112 131]
[113 130]
[114 129]
[115 128]
[116 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
