%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUCCUUUUCCGGCUACGGGUCCCCAAGCGGAGCGGGAGGCCGGACCGGGGAGCCGAGCGGCGGCGUCGGCGGCGUCGGCGGCGGCGGCGACGGCGGCGGGGGCGGUA\
) } def
/len { sequence length } bind def

/coor [
[70.94194031 276.94079590]
[60.15422058 265.39089966]
[60.77666855 249.59886169]
[72.43999481 238.93385315]
[72.87226105 223.94007874]
[65.50495148 210.99511719]
[73.63672638 197.42366028]
[74.06900024 182.42988586]
[74.50126648 167.43611145]
[74.93354034 152.44235229]
[75.36580658 137.44857788]
[75.79807281 122.45480347]
[68.36056519 109.42855072]
[55.22848129 102.17951965]
[42.09639740 94.93049622]
[32.91927719 93.48287201]
[28.69470787 87.27862549]
[15.77698040 79.65417480]
[2.85925317 72.02971649]
[-12.95805168 71.67835236]
[-19.98570061 58.54589844]
[-32.90342712 50.92144394]
[-45.82115555 43.29698944]
[-58.73888397 35.67253494]
[-71.65660858 28.04808044]
[-76.35105896 28.20086479]
[-80.39041138 26.89292336]
[-83.37613678 24.53902817]
[-85.09838867 21.64417648]
[-85.54897308 18.72926140]
[-97.50388336 9.66946030]
[-112.95709229 11.62809753]
[-124.95201111 2.26986885]
[-126.72404480 -12.47446918]
[-138.67895508 -21.53426933]
[-150.63388062 -30.59407043]
[-166.96382141 -32.09894180]
[-173.57885742 -47.10472107]
[-163.67399597 -60.17474747]
[-147.43850708 -57.86370087]
[-141.57406616 -42.54898834]
[-129.61915588 -33.48918533]
[-117.66423798 -24.42938423]
[-102.98999786 -26.71023750]
[-90.73695374 -17.69261360]
[-88.44408417 -2.28545547]
[-76.48916626 6.77434540]
[-64.03215790 15.13035202]
[-51.11442947 22.75480652]
[-38.19670105 30.37926102]
[-25.27897453 38.00371552]
[-12.36124611 45.62817001]
[2.53209615 45.43418121]
[10.48370743 59.11199188]
[23.40143585 66.73644257]
[36.31916428 74.36090088]
[49.34542084 81.79841614]
[62.47750473 89.04743958]
[75.60958862 96.29646301]
[86.90885925 81.21707916]
[104.25222015 79.31269073]
[116.42414856 89.77917480]
[131.23606873 87.41130829]
[143.64183044 77.59255219]
[157.43090820 83.22374725]
[172.24284363 80.85588074]
[187.05476379 78.48801422]
[201.86669922 76.12015533]
[216.67863464 73.75228882]
[229.08438110 63.93353653]
[242.87347412 69.56472778]
[257.68539429 67.19686127]
[270.09115601 57.37811279]
[283.88024902 63.00930405]
[298.69216919 60.64143753]
[313.50408936 58.27357483]
[328.31600952 55.90570831]
[343.00210571 47.43484879]
[355.20742798 59.20202255]
[347.27890015 74.18783569]
[330.68389893 70.71763611]
[315.87194824 73.08550262]
[301.06002808 75.45336914]
[286.24810791 77.82122803]
[274.90179443 87.47061920]
[260.05325317 82.00878906]
[245.24133301 84.37665558]
[233.89503479 94.02603912]
[219.04649353 88.56421661]
[204.23455811 90.93208313]
[189.42263794 93.29994965]
[174.61070251 95.66780853]
[159.79878235 98.03567505]
[148.45246887 107.68505859]
[133.60394287 102.22323608]
[118.79201508 104.59110260]
[110.05175018 119.57769012]
[90.79184723 122.88707733]
[90.35958099 137.88084412]
[89.92730713 152.87461853]
[89.49504089 167.86839294]
[89.06276703 182.86215210]
[88.63050079 197.85592651]
[95.96689606 211.87333679]
[87.86603546 224.37236023]
[87.43376160 239.36611938]
[98.46328735 250.68536377]
[98.17488861 266.48703003]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 106]
[5 105]
[7 103]
[8 102]
[9 101]
[10 100]
[11 99]
[12 98]
[13 59]
[14 58]
[15 57]
[17 56]
[18 55]
[19 54]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[30 47]
[31 46]
[34 43]
[35 42]
[36 41]
[62 96]
[63 95]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[71 87]
[72 86]
[74 84]
[75 83]
[76 82]
[77 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
