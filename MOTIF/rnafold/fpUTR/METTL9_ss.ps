%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGCUCGUAAGUGCUCCGGAUGGAAACUGGUGCAGGGGGCAGCGGCGUUCCGCGGCCGGAAGGGAAGGGGGAGGUGCCGAGGCUGCGCGCCGGCUGCUCCUCCCCACCCCCAGCCUUUGCCCUGAAGGGGGCUGGAUGGGCAAGGCGGCCGCGAUGGCUCGAGCUCGGGCGGUGGCGGCGGUGGCCGGAGGCGGCGGUGCCUCCUCCUCCUCGCCCCGGCGCCGGCGGUGAUCCGAGCGAGCGGCCGCGGCCC\
CCG\
) } def
/len { sequence length } bind def

/coor [
[-2.56997848 1071.42956543]
[-4.38497543 1056.53979492]
[-6.19997215 1041.65002441]
[-8.01496887 1026.76025391]
[-9.82996559 1011.87042236]
[-11.64496326 996.98059082]
[-13.45995998 982.09082031]
[-15.27495670 967.20104980]
[-25.19944572 978.44848633]
[-40.16280746 979.49627686]
[-51.55792236 969.74169922]
[-52.83017731 954.79577637]
[-43.24775696 943.25549316]
[-28.32258797 941.75909424]
[-16.63960457 951.16760254]
[-17.36710167 936.18524170]
[-18.09459877 921.20288086]
[-18.82209587 906.22052002]
[-22.27506828 899.71179199]
[-19.46643448 891.05224609]
[-20.01215172 876.06219482]
[-20.55786705 861.07214355]
[-21.10358429 846.08209229]
[-34.80974197 840.19934082]
[-44.64297485 828.90252686]
[-48.61251068 814.39721680]
[-45.87935257 799.54632568]
[-36.93292999 787.30505371]
[-23.50446892 780.13305664]
[-24.05018425 765.14294434]
[-24.59590149 750.15289307]
[-25.14161682 735.16284180]
[-25.68733406 720.17279053]
[-26.23304939 705.18267822]
[-26.77876663 690.19262695]
[-35.41154861 681.74603271]
[-36.00594711 669.28216553]
[-27.70048523 659.43975830]
[-28.06434059 644.44415283]
[-28.42819595 629.44854736]
[-28.79205132 614.45294189]
[-29.15590668 599.45739746]
[-33.28646469 597.60748291]
[-36.95764542 594.96057129]
[-40.01779175 591.62597656]
[-54.36029053 596.01831055]
[-68.70278931 600.41070557]
[-83.04529572 604.80303955]
[-87.96269989 619.52032471]
[-100.61110687 628.50903320]
[-116.12693787 628.31286621]
[-128.54405212 619.00726318]
[-133.08779907 604.17034912]
[-128.01103210 589.50726318]
[-115.26586151 580.65625000]
[-99.75306702 581.02069092]
[-87.43763733 590.46051025]
[-73.09513092 586.06817627]
[-58.75263214 581.67584229]
[-44.41013336 577.28350830]
[-42.95202255 569.50714111]
[-38.82620621 562.62957764]
[-32.48269653 557.54711914]
[-24.66543770 554.95208740]
[-21.41637611 540.30816650]
[-18.16731453 525.66430664]
[-14.91825390 511.02041626]
[-16.53266716 503.83148193]
[-11.53995323 496.21911621]
[-8.11350918 481.61569214]
[-4.68706560 467.01229858]
[-1.26062155 452.40887451]
[2.16582251 437.80548096]
[5.59226656 423.20205688]
[9.01871014 408.59866333]
[12.44515419 393.99526978]
[15.87159824 379.39184570]
[19.29804230 364.78845215]
[22.72448540 350.18502808]
[26.15093040 335.58163452]
[24.63764000 332.42831421]
[24.55881500 328.39141846]
[26.31063271 324.14508057]
[29.97681999 320.51394653]
[33.93228149 306.04489136]
[37.88774490 291.57580566]
[41.84320831 277.10671997]
[45.79867172 262.63763428]
[37.91697311 252.46623230]
[37.31441116 239.41799927]
[44.43383789 228.23542786]
[56.87071991 223.11174011]
[61.00139236 208.69169617]
[65.13206482 194.27165222]
[69.26274109 179.85162354]
[73.39341736 165.43157959]
[77.52408600 151.01153564]
[81.65476227 136.59150696]
[85.78543854 122.17146301]
[89.91610718 107.75141907]
[60.03723145 78.95476532]
[58.04176331 64.08808899]
[56.04629517 49.22140884]
[44.46556473 34.88684082]
[51.80481339 18.93218231]
[49.62916946 4.09080124]
[47.45352554 -10.75057888]
[45.27788162 -25.59195900]
[36.22177887 -31.54771233]
[32.00959396 -41.29644775]
[33.80398560 -51.54111099]
[40.77875900 -58.95827103]
[38.96376038 -73.84806061]
[37.14876556 -88.73784637]
[35.33376694 -103.62763214]
[33.51877213 -118.51741791]
[31.70377541 -133.40721130]
[29.88877869 -148.29699707]
[28.07378006 -163.18678284]
[26.25878334 -178.07656860]
[12.62896061 -185.49328613]
[5.99204779 -199.51936340]
[8.90007496 -214.76150513]
[20.23484612 -225.35879517]
[35.63790894 -227.23635864]
[49.18647385 -219.67224121]
[55.67084122 -205.57498169]
[52.59763718 -190.36528015]
[41.14857101 -179.89157104]
[42.96356964 -165.00178528]
[44.77856445 -150.11199951]
[46.59356308 -135.22221375]
[48.40855789 -120.33242035]
[50.22355652 -105.44262695]
[52.03855515 -90.55284119]
[53.85354996 -75.66305542]
[55.66854858 -60.77326584]
[68.37811279 -46.17798233]
[60.11926270 -27.76760483]
[62.29490662 -12.92622375]
[64.47055054 1.91515636]
[66.64619446 16.75653648]
[76.14785004 24.21228600]
[78.09665680 36.53720474]
[70.91297150 47.22594452]
[72.90843964 62.09262085]
[74.90390778 76.95929718]
[81.89648438 79.67110443]
[95.88162994 85.09471893]
[102.87420654 87.80652618]
[114.37136841 78.17246246]
[125.86853027 68.53839111]
[137.36569214 58.90432358]
[148.86285400 49.27025223]
[154.47093201 34.47633362]
[169.19554138 32.23243713]
[180.69270325 22.59836960]
[186.30078125 7.80444956]
[201.02539062 5.56055498]
[212.52255249 -4.07351398]
[224.01971436 -13.70758247]
[235.51687622 -23.34165192]
[247.01403809 -32.97571945]
[252.12187195 -48.55911255]
[268.22479248 -51.66202164]
[278.75747681 -39.09244537]
[272.88482666 -23.78088379]
[256.64810181 -21.47855759]
[245.15093994 -11.84449005]
[233.65377808 -2.21042109]
[222.15661621 7.42364740]
[210.65945435 17.05771637]
[205.87373352 31.16254234]
[190.32676697 34.09553146]
[178.82960510 43.72959900]
[174.04388428 57.83442688]
[158.49691772 60.76741409]
[146.99975586 70.40148163]
[135.50259399 80.03555298]
[124.00543976 89.66962433]
[112.50827789 99.30368805]
[104.33615112 111.88209534]
[100.20547485 126.30213165]
[96.07479858 140.72216797]
[91.94412994 155.14221191]
[87.81345367 169.56225586]
[83.68277740 183.98229980]
[79.55210876 198.40232849]
[75.42143250 212.82237244]
[71.29075623 227.24241638]
[80.05442047 242.39895630]
[75.22544861 258.87545776]
[60.26775360 266.59310913]
[56.31229019 281.06219482]
[52.35682678 295.53125000]
[48.40136337 310.00033569]
[44.44589996 324.46942139]
[40.75433731 339.00808716]
[37.32789230 353.61148071]
[33.90144730 368.21487427]
[30.47500420 382.81829834]
[27.04856110 397.42169189]
[23.62211609 412.02511597]
[20.19567299 426.62850952]
[16.76922798 441.23193359]
[13.34278488 455.83532715]
[9.91634083 470.43872070]
[6.48989725 485.04214478]
[3.06345296 499.64553833]
[-0.27436095 514.26947021]
[-3.52342224 528.91333008]
[-6.77248335 543.55725098]
[-10.02154446 558.20117188]
[0.62727219 580.31976318]
[-14.16031933 599.09350586]
[-13.79646397 614.08911133]
[-13.43260860 629.08471680]
[-13.06875324 644.08026123]
[-12.70489788 659.07586670]
[-2.75486588 674.58685303]
[-11.78869629 689.64691162]
[-11.24298000 704.63696289]
[-10.69726372 719.62707520]
[-10.15154743 734.61712646]
[-9.60583115 749.60717773]
[-9.06011581 764.59722900]
[-8.51439953 779.58734131]
[5.40002108 785.76391602]
[15.21287155 797.32226562]
[19.01866341 811.93511963]
[16.11437225 826.69067383]
[7.12860394 838.67254639]
[-6.11351347 845.53637695]
[-5.56779766 860.52642822]
[-5.02208138 875.51647949]
[-4.47636509 890.50653076]
[-3.83974719 905.49304199]
[-3.11225080 920.47540283]
[-2.38475418 935.45776367]
[-1.65725756 950.44006348]
[-0.38516867 965.38604736]
[1.42982817 980.27581787]
[3.24482512 995.16564941]
[5.05982208 1010.05541992]
[6.87481880 1024.94519043]
[8.68981552 1039.83496094]
[10.50481224 1054.72473145]
[12.31980991 1069.61462402]
[21.67007828 1082.37707520]
[15.52962494 1095.94714355]
[17.34462166 1110.83691406]
[19.15961838 1125.72668457]
[27.07806396 1140.71777344]
[14.86481953 1152.47680664]
[0.18444797 1143.99597168]
[4.26983070 1127.54162598]
[2.45483375 1112.65185547]
[0.63983679 1097.76208496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 248]
[2 247]
[3 246]
[4 245]
[5 244]
[6 243]
[7 242]
[8 241]
[15 240]
[16 239]
[17 238]
[18 237]
[20 236]
[21 235]
[22 234]
[23 233]
[29 227]
[30 226]
[31 225]
[32 224]
[33 223]
[34 222]
[35 221]
[38 219]
[39 218]
[40 217]
[41 216]
[42 215]
[45 60]
[46 59]
[47 58]
[48 57]
[64 213]
[65 212]
[66 211]
[67 210]
[69 209]
[70 208]
[71 207]
[72 206]
[73 205]
[74 204]
[75 203]
[76 202]
[77 201]
[78 200]
[79 199]
[80 198]
[84 197]
[85 196]
[86 195]
[87 194]
[88 193]
[92 190]
[93 189]
[94 188]
[95 187]
[96 186]
[97 185]
[98 184]
[99 183]
[100 182]
[101 147]
[102 146]
[103 145]
[105 142]
[106 141]
[107 140]
[108 139]
[112 137]
[113 136]
[114 135]
[115 134]
[116 133]
[117 132]
[118 131]
[119 130]
[120 129]
[150 181]
[151 180]
[152 179]
[153 178]
[154 177]
[156 175]
[157 174]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
[250 258]
[251 257]
[252 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
