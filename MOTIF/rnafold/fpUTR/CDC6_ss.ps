%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCGCGGCUGGAGUUUGCUGCUGCCGCUGUGCAGUUUGUUCAGGGGCUUGUGGUGGUGAGUCCGAGAGGCUGCGUGUGAGAGACGUGAGAAGGAUCCUGCACUGAGGAGGUGGAAAGAAGAGGAUUGCUCGAGGAGGCCUGGGGUCUGUGAGGCAGCGGAGCUGGGUGAAGGCUGCGGGUUCCGGCGAGGCCUGAGCUGUGCUGUCGUC\
) } def
/len { sequence length } bind def

/coor [
[40.98193359 338.82818604]
[52.90896606 328.90219116]
[51.79331970 313.94372559]
[50.67766953 298.98529053]
[49.56202316 284.02682495]
[48.44637299 269.06838989]
[47.33072281 254.10992432]
[46.21507645 239.15147400]
[45.09942627 224.19300842]
[43.98377991 209.23455811]
[30.97482491 201.76681519]
[17.49509239 208.34684753]
[4.01535702 214.92687988]
[-2.32375526 221.50361633]
[-9.71441078 221.50283813]
[-23.29061890 227.88145447]
[-36.86682510 234.26005554]
[-50.44303131 240.63865662]
[-64.01924133 247.01725769]
[-77.59544373 253.39587402]
[-91.17165375 259.77447510]
[-104.74786377 266.15307617]
[-118.32406616 272.53167725]
[-131.70434570 279.31167603]
[-144.87681580 286.48703003]
[-158.04928589 293.66241455]
[-166.46691895 307.05844116]
[-181.34477234 306.35202026]
[-194.51724243 313.52737427]
[-207.68971252 320.70275879]
[-216.10734558 334.09878540]
[-230.98519897 333.39236450]
[-244.15766907 340.56771851]
[-257.33013916 347.74310303]
[-268.34719849 360.62954712]
[-283.77987671 353.61035156]
[-281.30718994 336.83770752]
[-264.50552368 334.57061768]
[-251.33303833 327.39526367]
[-238.16055298 320.21987915]
[-230.68510437 307.33706665]
[-214.86508179 307.53027344]
[-201.69261169 300.35491943]
[-188.52012634 293.17953491]
[-181.04467773 280.29672241]
[-165.22465515 280.48992920]
[-152.05218506 273.31457520]
[-138.87969971 266.13919067]
[-137.95877075 263.49154663]
[-135.93357849 261.04919434]
[-132.87705994 259.23449707]
[-129.01356506 258.43572998]
[-124.70267487 258.95547485]
[-111.12646484 252.57687378]
[-97.55025482 246.19827271]
[-83.97405243 239.81965637]
[-70.39784241 233.44105530]
[-56.82163620 227.06245422]
[-43.24542999 220.68385315]
[-29.66922379 214.30523682]
[-16.09301567 207.92663574]
[-2.56467032 201.44714355]
[10.91506386 194.86711121]
[24.39479828 188.28709412]
[25.07404327 170.90011597]
[34.84291077 157.59718323]
[49.54545212 152.35485840]
[63.79131699 156.03814697]
[74.11798096 145.15881348]
[84.44465637 134.27947998]
[94.77132416 123.40014648]
[74.65310669 114.70118713]
[66.91821289 89.77405548]
[56.59154510 78.89472198]
[46.26487350 68.01538849]
[35.93820572 57.13605499]
[20.34202194 58.27317047]
[7.69405794 49.07735443]
[3.96629620 33.89059067]
[10.91887188 19.88360405]
[25.26899147 13.67006397]
[40.24096680 18.18381500]
[48.76549149 31.29360199]
[46.81754303 46.80938339]
[57.14421082 57.68872070]
[67.47087860 68.56805420]
[77.79754639 79.44738770]
[84.95088959 77.19357300]
[80.44326019 62.88688660]
[75.93585205 48.58013153]
[90.24268341 44.07294464]
[94.74994659 58.37925720]
[99.25757599 72.68594360]
[106.41091919 70.43212891]
[108.63603973 55.59808731]
[110.86115265 40.76404190]
[113.08627319 25.93000031]
[115.31138611 11.09595585]
[117.53650665 -3.73808765]
[106.35934448 -25.43455696]
[121.48548126 -43.67454529]
[122.15526581 -58.65958405]
[122.82505035 -73.64462280]
[123.49483490 -88.62966156]
[113.77322388 -101.39170837]
[117.82923889 -116.91357422]
[132.55145264 -123.28820801]
[146.64624023 -115.62554169]
[149.30128479 -99.80371094]
[138.47987366 -87.95987701]
[137.81008911 -72.97483826]
[137.14030457 -57.98979950]
[136.47052002 -43.00476074]
[141.65075684 -40.00851822]
[145.81729126 -35.65689468]
[148.62303162 -30.27989006]
[149.82521057 -24.29407883]
[149.30633545 -18.17034912]
[147.08518982 -12.39685631]
[143.31715393 -7.44012117]
[138.28350830 -3.70733953]
[132.37054443 -1.51297057]
[130.14543152 13.32107353]
[127.92031860 28.15511703]
[125.69519806 42.98916245]
[123.47007751 57.82320404]
[121.24496460 72.65724945]
[128.89523315 95.13631439]
[120.09889221 113.07441711]
[135.08850098 113.63262939]
[150.07810974 114.19084167]
[165.06771851 114.74905396]
[181.14231873 105.76634216]
[195.62765503 115.67298889]
[210.62391663 116.00796509]
[225.62017822 116.34294128]
[240.61643982 116.67791748]
[249.26582336 113.74093628]
[255.83302307 117.13117218]
[270.82263184 117.68938446]
[285.81225586 118.24759674]
[300.80184937 118.80580902]
[314.88040161 111.58742523]
[327.31091309 119.79299927]
[342.30053711 120.35121155]
[357.29013062 120.90942383]
[372.27975464 121.46763611]
[387.26934814 122.02584839]
[393.38916016 109.28634644]
[403.87048340 99.87010193]
[417.10885620 95.17418671]
[431.09445190 95.87647247]
[443.71746826 101.83796692]
[453.08612061 112.12873840]
[457.81039429 125.17286682]
[472.79003906 125.95419312]
[487.76968384 126.73551178]
[502.74932861 127.51683807]
[518.88189697 122.30373383]
[528.35717773 136.36271667]
[517.47070312 149.35963440]
[501.96798706 142.49647522]
[486.98834229 141.71514893]
[472.00872803 140.93382263]
[457.02908325 140.15251160]
[449.62509155 154.31341553]
[436.73992920 163.86257935]
[420.92303467 166.84744263]
[405.33157349 162.62055969]
[393.10025024 151.97918701]
[386.71115112 137.01545715]
[371.72152710 136.45724487]
[356.73193359 135.89903259]
[341.74230957 135.34082031]
[326.75271606 134.78260803]
[313.74630737 142.04092407]
[300.24365234 133.79541016]
[285.25402832 133.23721313]
[270.26443481 132.67900085]
[255.27481079 132.12078857]
[240.28146362 131.67417908]
[225.28520203 131.33920288]
[210.28894043 131.00422668]
[195.29267883 130.66925049]
[186.33647156 138.80023193]
[173.84010315 138.64389038]
[164.50950623 129.73866272]
[149.51989746 129.18045044]
[134.53028870 128.62223816]
[119.54067993 128.06402588]
[105.65065765 133.72682190]
[95.32398987 144.60615540]
[84.99732208 155.48548889]
[74.67064667 166.36482239]
[78.10057831 189.81985474]
[58.94223022 208.11891174]
[60.05788040 223.07736206]
[61.17353058 238.03582764]
[62.28917694 252.99427795]
[63.40482712 267.95272827]
[64.52047729 282.91119385]
[65.63612366 297.86962891]
[66.75177002 312.82809448]
[67.86742401 327.78652954]
[81.13493347 335.83346558]
[87.10765076 350.15499878]
[83.48896027 365.24420166]
[71.67030334 375.29901123]
[56.19620895 376.45312500]
[43.01677704 368.26275635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 64]
[12 63]
[13 62]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[24 48]
[25 47]
[26 46]
[28 44]
[29 43]
[30 42]
[32 40]
[33 39]
[34 38]
[68 194]
[69 193]
[70 192]
[71 191]
[73 87]
[74 86]
[75 85]
[76 84]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
[101 113]
[102 112]
[103 111]
[104 110]
[129 190]
[130 189]
[131 188]
[132 187]
[134 184]
[135 183]
[136 182]
[137 181]
[139 180]
[140 179]
[141 178]
[142 177]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[155 165]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
