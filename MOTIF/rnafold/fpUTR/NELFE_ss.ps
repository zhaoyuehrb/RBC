%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCGCCGAGAGCGUGAACUAUCGCUGCGGAGGGGCAGACCUGGACCGGUGGAAGGCCGGGCGGAAGUGCGCGCCUGGGGCCGCCUUGGUUACCGCGUUUUCCGCUCCUCGCUACGUCAUCGUUGUGAGCCCGCUAUCAGCGGCCAGCGCGGGCGCGGCCGGAGACCGUGGGGCCCCCGGUUGCCGCCCCCUCGGGAGCCACC\
) } def
/len { sequence length } bind def

/coor [
[-454.00369263 691.57098389]
[-462.25344849 704.09863281]
[-470.50320435 716.62628174]
[-478.75292969 729.15393066]
[-487.00268555 741.68157959]
[-488.13055420 757.46252441]
[-501.59231567 763.83660889]
[-509.84207153 776.36425781]
[-518.09179688 788.89190674]
[-516.26013184 801.66247559]
[-523.39312744 811.92797852]
[-535.21734619 814.49426270]
[-543.65814209 826.89404297]
[-552.09887695 839.29376221]
[-560.53961182 851.69354248]
[-555.16809082 866.25115967]
[-559.41156006 881.17675781]
[-571.63836670 890.73101807]
[-587.14709473 891.24017334]
[-599.97430420 882.50848389]
[-605.18762207 867.89337158]
[-600.78247070 853.01470947]
[-588.45269775 843.59368896]
[-572.93939209 843.25274658]
[-564.49865723 830.85302734]
[-556.05786133 818.45324707]
[-547.61712646 806.05352783]
[-547.26568604 788.51007080]
[-530.61944580 780.64215088]
[-522.36968994 768.11450195]
[-514.11999512 755.58691406]
[-513.58221436 740.70196533]
[-499.53033447 733.43182373]
[-491.28057861 720.90417480]
[-483.03082275 708.37652588]
[-474.78106689 695.84887695]
[-466.53134155 683.32128906]
[-480.73803711 688.13470459]
[-495.59515381 686.06933594]
[-507.95025635 677.56335449]
[-515.18176270 664.42163086]
[-515.75524902 649.43261719]
[-509.54901123 635.77673340]
[-497.87994385 626.35156250]
[-483.22406006 623.15704346]
[-468.69110107 626.87091064]
[-457.36474609 636.70526123]
[-451.64825439 650.57324219]
[-452.75454712 665.53222656]
[-442.68914795 654.41070557]
[-432.62374878 643.28918457]
[-422.55834961 632.16772461]
[-412.49295044 621.04620361]
[-416.43618774 608.28833008]
[-413.53613281 595.14282227]
[-404.44604492 585.06750488]
[-391.46163940 580.76666260]
[-377.94198608 583.46557617]
[-367.70733643 572.49957275]
[-357.47271729 561.53363037]
[-347.23806763 550.56768799]
[-337.00341797 539.60174561]
[-334.73666382 532.56353760]
[-326.52691650 528.54772949]
[-316.12542725 517.73986816]
[-316.04269409 505.64062500]
[-307.46133423 496.55105591]
[-294.58682251 495.72045898]
[-284.02093506 485.07330322]
[-273.45504761 474.42614746]
[-270.97369385 467.46069336]
[-262.64471436 463.69833374]
[-251.91691589 453.21435547]
[-241.18910217 442.73034668]
[-230.54194641 432.16445923]
[-219.97605896 421.51730347]
[-216.50308228 407.03326416]
[-201.29032898 402.68783569]
[-190.72444153 392.04067993]
[-180.15855408 381.39352417]
[-169.59266663 370.74636841]
[-159.02677917 360.09921265]
[-148.46089172 349.45205688]
[-145.97952271 342.48657227]
[-137.65055847 338.72424316]
[-126.92276001 328.24023438]
[-123.22823334 313.81112671]
[-107.95066833 309.69934082]
[-97.22286224 299.21533203]
[-86.49505615 288.73135376]
[-75.76725006 278.24734497]
[-65.03944397 267.76333618]
[-61.28561020 246.44956970]
[-39.51026917 241.17030334]
[-29.44487190 230.04879761]
[-19.37947464 218.92730713]
[-9.31407738 207.80580139]
[0.75132060 196.68431091]
[10.81671810 185.56280518]
[20.88211632 174.44129944]
[30.94751358 163.31980896]
[30.65942764 151.22369385]
[38.95820618 141.87542725]
[51.80122757 140.65068054]
[62.03586960 129.68473816]
[72.27051544 118.71878815]
[82.50515747 107.75283813]
[75.98295593 87.42949677]
[93.39995575 65.54647064]
[100.86675262 52.53697586]
[108.33354950 39.52748108]
[115.80034637 26.51798820]
[123.26714325 13.50849342]
[123.42612457 -2.31191468]
[136.47213745 -9.49874973]
[143.93893433 -22.50824547]
[151.40573120 -35.51773834]
[150.82278442 -51.90652084]
[164.86605835 -60.37520599]
[179.08903503 -52.21193314]
[178.86033630 -35.81438065]
[164.41523743 -28.05094337]
[156.94844055 -15.04144859]
[149.48164368 -2.03195381]
[149.85673523 12.85792732]
[136.27664185 20.97528839]
[128.80984497 33.98478317]
[121.34304810 46.99427795]
[113.87625122 60.00377274]
[106.40945435 73.01326752]
[111.61019897 78.41718292]
[127.21242523 94.62891388]
[140.49836731 87.66590118]
[153.78431702 80.70288086]
[167.07026672 73.73986053]
[180.35621643 66.77684784]
[191.57868958 54.06887817]
[206.89671326 61.33485794]
[204.15513611 78.06567383]
[187.31922913 80.06278992]
[174.03327942 87.02581024]
[160.74734497 93.98883057]
[147.46139526 100.95184326]
[134.17544556 107.91486359]
[120.92090607 121.17274475]
[105.23118591 123.88431549]
[93.47110748 117.98748016]
[83.23646545 128.95343018]
[73.00182343 139.91938782]
[62.76717758 150.88533020]
[59.03715515 168.91551208]
[42.06901550 173.38519287]
[32.00361633 184.50669861]
[21.93821907 195.62820435]
[11.87282085 206.74969482]
[1.80742311 217.87120056]
[-8.25797462 228.99270630]
[-18.32337189 240.11419678]
[-28.38877106 251.23570251]
[-26.43244743 259.36184692]
[-27.83381081 267.50653076]
[-32.29110718 274.35397339]
[-39.01510620 278.82794189]
[-46.86795425 280.26052856]
[-54.55544662 278.49114990]
[-65.28325653 288.97515869]
[-76.01106262 299.45913696]
[-86.73886871 309.94314575]
[-97.46667480 320.42715454]
[-101.92852783 335.60614014]
[-116.43875885 338.96804810]
[-127.16656494 349.45205688]
[-137.81372070 360.01794434]
[-148.37960815 370.66510010]
[-158.94551086 381.31225586]
[-169.51139832 391.95941162]
[-180.07728577 402.60656738]
[-190.64317322 413.25372314]
[-194.87188721 428.49932861]
[-209.32890320 432.08319092]
[-219.89479065 442.73034668]
[-223.72084045 451.03024292]
[-230.70510864 453.45816040]
[-241.43292236 463.94216919]
[-252.16072083 474.42614746]
[-262.80789185 484.99203491]
[-273.37377930 495.63919067]
[-283.93966675 506.28634644]
[-288.22045898 524.19378662]
[-305.31759644 528.14135742]
[-315.71908569 538.94921875]
[-326.03747559 549.83642578]
[-336.27209473 560.80236816]
[-346.50674438 571.76831055]
[-356.74139404 582.73425293]
[-366.97604370 593.70019531]
[-363.52960205 610.25738525]
[-370.55972290 625.45623779]
[-385.11703491 633.39178467]
[-401.37145996 631.11163330]
[-411.43685913 642.23309326]
[-421.50225830 653.35461426]
[-431.56765747 664.47613525]
[-441.63305664 675.59759521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 37]
[2 36]
[3 35]
[4 34]
[5 33]
[7 31]
[8 30]
[9 29]
[12 27]
[13 26]
[14 25]
[15 24]
[49 204]
[50 203]
[51 202]
[52 201]
[53 200]
[58 196]
[59 195]
[60 194]
[61 193]
[62 192]
[64 191]
[65 190]
[68 188]
[69 187]
[70 186]
[72 185]
[73 184]
[74 183]
[75 181]
[76 180]
[78 178]
[79 177]
[80 176]
[81 175]
[82 174]
[83 173]
[85 172]
[86 171]
[88 169]
[89 168]
[90 167]
[91 166]
[92 165]
[94 159]
[95 158]
[96 157]
[97 156]
[98 155]
[99 154]
[100 153]
[101 152]
[104 150]
[105 149]
[106 148]
[107 147]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[115 124]
[116 123]
[117 122]
[132 144]
[133 143]
[134 142]
[135 141]
[136 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
