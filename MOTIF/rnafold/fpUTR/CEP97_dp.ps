%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CEP97)
} def

/sequence { (\
UAGUUUCCGGCUCCCUCCUUCAGAUUACAAGCUCCACAGAGCCGCGGGAGGACGGUUGCCUGGUAUUAUUAGCAAGCAGCAAAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.003558368 ubox
1 62 0.008092849 ubox
1 65 0.021245746 ubox
1 68 0.548075095 ubox
1 71 0.309287739 ubox
2 12 0.206315612 ubox
2 26 0.003889458 ubox
2 61 0.008921071 ubox
2 64 0.022661293 ubox
2 67 0.597971864 ubox
2 70 0.326975615 ubox
3 11 0.223541924 ubox
3 25 0.003989852 ubox
3 53 0.207188178 ubox
3 56 0.004206224 ubox
3 59 0.020839557 ubox
3 60 0.007556695 ubox
3 64 0.014310422 ubox
3 66 0.610341211 ubox
3 69 0.331437938 ubox
3 73 0.035128954 ubox
3 77 0.090811570 ubox
3 80 0.041035972 ubox
3 84 0.039175117 ubox
4 10 0.221235738 ubox
4 24 0.003997037 ubox
4 47 0.004798719 ubox
4 48 0.013691086 ubox
4 49 0.141243218 ubox
4 50 0.064047385 ubox
4 51 0.115323650 ubox
4 52 0.191502878 ubox
4 58 0.021251749 ubox
4 63 0.006772922 ubox
4 65 0.606508138 ubox
4 68 0.328170739 ubox
4 72 0.034803915 ubox
4 76 0.090649778 ubox
4 79 0.040194072 ubox
4 82 0.008899395 ubox
4 83 0.042188986 ubox
5 9 0.162781563 ubox
5 23 0.003961071 ubox
5 46 0.005939993 ubox
5 47 0.017242854 ubox
5 48 0.154140611 ubox
5 49 0.082999675 ubox
5 50 0.174632563 ubox
5 51 0.147006376 ubox
5 52 0.009159318 ubox
5 54 0.005395616 ubox
5 62 0.008233809 ubox
5 63 0.015854031 ubox
5 71 0.028328821 ubox
5 72 0.003771610 ubox
5 75 0.087961139 ubox
5 76 0.003821699 ubox
5 78 0.030898228 ubox
5 81 0.009052523 ubox
5 82 0.042377547 ubox
5 83 0.009524571 ubox
6 22 0.003482394 ubox
6 46 0.018102528 ubox
6 47 0.165239309 ubox
6 48 0.088301954 ubox
6 49 0.213269090 ubox
6 50 0.062646705 ubox
6 51 0.010214007 ubox
6 52 0.039895517 ubox
6 54 0.006784917 ubox
6 55 0.003555286 ubox
6 62 0.013177825 ubox
6 63 0.363614821 ubox
6 71 0.005789715 ubox
6 74 0.081828505 ubox
6 75 0.004932614 ubox
6 78 0.003302201 ubox
6 81 0.037877321 ubox
6 82 0.009867066 ubox
7 46 0.170889287 ubox
7 47 0.091161712 ubox
7 48 0.220186870 ubox
7 50 0.009400310 ubox
7 51 0.043500256 ubox
7 54 0.048679938 ubox
7 55 0.158221126 ubox
7 62 0.408105756 ubox
7 63 0.651066014 ubox
8 44 0.188654504 ubox
8 46 0.084354450 ubox
8 47 0.215045678 ubox
8 50 0.038083235 ubox
8 54 0.358239287 ubox
8 58 0.007107452 ubox
8 62 0.652294660 ubox
9 15 0.027490510 ubox
9 18 0.011873371 ubox
9 43 0.224290148 ubox
9 45 0.041677953 ubox
9 53 0.360015899 ubox
9 57 0.012654650 ubox
9 60 0.776087642 ubox
9 61 0.154294901 ubox
10 14 0.027134705 ubox
10 15 0.003750506 ubox
10 17 0.011874593 ubox
10 42 0.227133287 ubox
10 45 0.192156179 ubox
10 56 0.020783918 ubox
10 59 0.783848979 ubox
10 60 0.111821341 ubox
10 77 0.004610156 ubox
10 80 0.017990392 ubox
11 23 0.004626784 ubox
11 41 0.227152664 ubox
11 44 0.192244407 ubox
11 48 0.004363818 ubox
11 50 0.352182731 ubox
11 51 0.030005882 ubox
11 55 0.022015710 ubox
11 58 0.790869202 ubox
11 76 0.004610416 ubox
11 79 0.017966319 ubox
12 22 0.006187010 ubox
12 24 0.053992261 ubox
12 30 0.003606010 ubox
12 40 0.226996344 ubox
12 47 0.003838522 ubox
12 49 0.356180777 ubox
12 50 0.013969428 ubox
12 51 0.003439981 ubox
12 52 0.102844691 ubox
12 54 0.024150602 ubox
12 55 0.014655671 ubox
12 75 0.003949708 ubox
12 78 0.013121374 ubox
13 23 0.057533850 ubox
13 39 0.225936386 ubox
13 46 0.003822764 ubox
13 47 0.003619131 ubox
13 48 0.356531964 ubox
13 50 0.003193483 ubox
13 51 0.090485592 ubox
13 54 0.042177010 ubox
13 55 0.417842382 ubox
14 46 0.003797497 ubox
14 47 0.356514597 ubox
14 48 0.006509126 ubox
14 50 0.065373571 ubox
14 51 0.370947538 ubox
14 54 0.421141747 ubox
14 55 0.672483391 ubox
15 23 0.100754592 ubox
15 31 0.011835551 ubox
15 39 0.013175968 ubox
15 41 0.073690325 ubox
15 46 0.355752496 ubox
15 47 0.007067215 ubox
15 48 0.010185650 ubox
15 50 0.377577230 ubox
15 54 0.673738225 ubox
15 55 0.003390003 ubox
16 22 0.098743306 ubox
16 24 0.249362386 ubox
16 30 0.014385503 ubox
16 38 0.019026220 ubox
16 40 0.074375445 ubox
16 46 0.006955449 ubox
16 47 0.008874715 ubox
16 48 0.014419135 ubox
16 49 0.382722299 ubox
16 52 0.793137706 ubox
17 23 0.266038349 ubox
17 39 0.072519449 ubox
17 46 0.009094698 ubox
17 47 0.017020181 ubox
17 48 0.382770906 ubox
17 51 0.797575549 ubox
18 31 0.132203163 ubox
18 39 0.019129488 ubox
18 41 0.018967405 ubox
18 46 0.017922775 ubox
18 47 0.382636984 ubox
18 50 0.797568749 ubox
18 51 0.020470774 ubox
19 30 0.142217513 ubox
19 31 0.009104649 ubox
19 38 0.026454929 ubox
19 40 0.018514400 ubox
19 41 0.022297517 ubox
19 46 0.365719050 ubox
19 47 0.003331550 ubox
19 48 0.010872461 ubox
19 49 0.796145573 ubox
19 50 0.020978282 ubox
20 29 0.141826674 ubox
20 30 0.018009886 ubox
20 38 0.005986869 ubox
20 39 0.017327951 ubox
20 40 0.026312044 ubox
20 46 0.018400037 ubox
20 47 0.023480685 ubox
20 48 0.793892459 ubox
20 49 0.045993180 ubox
21 39 0.026718539 ubox
21 46 0.034331997 ubox
21 47 0.789949202 ubox
21 48 0.061557108 ubox
22 33 0.092651322 ubox
23 32 0.096346498 ubox
23 34 0.061413269 ubox
24 33 0.060744020 ubox
25 31 0.021695628 ubox
25 40 0.011192811 ubox
25 47 0.036826603 ubox
25 48 0.021338786 ubox
25 49 0.004494261 ubox
26 30 0.033099106 ubox
26 39 0.010968467 ubox
26 46 0.109266849 ubox
26 47 0.046217318 ubox
26 48 0.007138587 ubox
31 42 0.967446743 ubox
31 45 0.022760089 ubox
32 39 0.015866128 ubox
32 41 0.969408304 ubox
32 44 0.022055841 ubox
33 38 0.014968538 ubox
33 40 0.968972642 ubox
34 39 0.965416155 ubox
34 47 0.003248613 ubox
35 46 0.003466677 ubox
43 47 0.008570272 ubox
45 54 0.043686804 ubox
46 53 0.044140660 ubox
55 77 0.004971912 ubox
55 80 0.586862876 ubox
56 75 0.013399189 ubox
56 76 0.004453546 ubox
56 79 0.598336400 ubox
56 82 0.028408819 ubox
57 74 0.015951912 ubox
57 75 0.003749817 ubox
57 78 0.606878252 ubox
57 81 0.032589857 ubox
58 73 0.016560339 ubox
58 77 0.609140449 ubox
58 80 0.033292744 ubox
59 72 0.012271783 ubox
59 76 0.607937021 ubox
59 79 0.030672138 ubox
60 72 0.047346225 ubox
60 76 0.036744376 ubox
60 79 0.015017224 ubox
61 68 0.005535794 ubox
61 71 0.050893613 ubox
61 74 0.609824993 ubox
61 75 0.035605945 ubox
61 78 0.021748039 ubox
61 81 0.009378535 ubox
62 67 0.005577243 ubox
62 70 0.051039596 ubox
62 73 0.618098130 ubox
62 77 0.021929337 ubox
62 80 0.010064176 ubox
63 69 0.049598179 ubox
63 73 0.035328190 ubox
63 77 0.012719559 ubox
63 80 0.009158226 ubox
64 68 0.046045957 ubox
64 71 0.613489104 ubox
64 72 0.035418675 ubox
64 76 0.012736257 ubox
64 79 0.009071731 ubox
65 70 0.603711365 ubox
65 84 0.011132821 ubox
66 72 0.004855397 ubox
66 75 0.010498940 ubox
66 76 0.004269457 ubox
66 82 0.008019785 ubox
66 83 0.012442356 ubox
67 71 0.005811024 ubox
67 74 0.010730633 ubox
67 75 0.005146325 ubox
67 78 0.003509582 ubox
67 81 0.009102113 ubox
67 82 0.011214551 ubox
68 84 0.159258314 ubox
69 75 0.009060715 ubox
69 76 0.010721239 ubox
69 79 0.006241116 ubox
69 82 0.112722718 ubox
69 83 0.219377741 ubox
70 74 0.008580048 ubox
70 75 0.012154265 ubox
70 78 0.007485551 ubox
70 81 0.128096377 ubox
70 82 0.226072456 ubox
72 80 0.688657458 ubox
73 79 0.688880726 ubox
1 68 0.9500000 lbox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
16 52 0.9500000 lbox
17 51 0.9500000 lbox
18 50 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
21 47 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
72 80 0.9500000 lbox
73 79 0.9500000 lbox
showpage
end
%%EOF
