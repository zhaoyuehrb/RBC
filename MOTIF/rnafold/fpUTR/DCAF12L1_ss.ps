%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGUCGAUCUCGCCGCACGCUGACUUUGCUCUCACUGCCCGGCCAGACGCACUUCCCGCCUUCGCCUAGGUCUGCACCGCCACCGCCGCCCUCUCCCGCGCGUCCCUCACCCGGUCCGCCACUGCCGCGCCUCAGAAUCCGAAGGCUCGGUUCCAGCGCAGCCAUCCACGCCGCCGCCACGACCGACUCCGGAGCCACGCGCUGCAACCGCCACCAACGCCUUGCCGCCGCCGCUCGCCCGCCGCCCACC\
) } def
/len { sequence length } bind def

/coor [
[65.17469788 217.25044250]
[76.76015472 206.74752808]
[76.01246643 191.76617432]
[75.26477814 176.78482056]
[66.90269470 164.45904541]
[73.94249725 150.29035950]
[73.19480896 135.30900574]
[66.10037994 132.87608337]
[44.81709671 125.57733154]
[35.03278351 136.94689941]
[25.24847221 148.31648254]
[22.11144829 163.82356262]
[7.94495487 168.42353821]
[-1.83935630 179.79310608]
[-11.62366772 191.16268921]
[-21.40797806 202.53225708]
[-20.41221237 218.07723999]
[-30.49685860 229.46821594]
[-45.32275391 230.32173157]
[-55.10706329 241.69129944]
[-58.24408722 257.19839478]
[-72.41058350 261.79837036]
[-82.19489288 273.16793823]
[-91.97920227 284.53750610]
[-88.28234100 299.60778809]
[-94.18075562 313.96008301]
[-107.40637207 322.07565308]
[-122.87368011 320.83389282]
[-134.63519287 310.71231079]
[-138.16835022 295.60281372]
[-132.11459351 281.31536865]
[-118.80171204 273.34375000]
[-103.34877777 274.75320435]
[-93.56446838 263.38363647]
[-83.78015900 252.01405334]
[-81.34297180 237.32019043]
[-66.47663879 231.90699768]
[-56.69232941 220.53741455]
[-58.05803299 205.74990845]
[-48.29731369 194.08016968]
[-32.77755356 192.74795532]
[-22.99324417 181.37837219]
[-13.20893192 170.00880432]
[-3.42462111 158.63922119]
[-0.98743659 143.94535828]
[13.87889671 138.53216553]
[23.66320801 127.16259003]
[33.44751740 115.79301453]
[19.41011429 121.07991028]
[9.95347595 109.43637085]
[5.30872822 95.17360687]
[6.09546947 80.19425964]
[12.20875072 66.49652863]
[22.83307076 55.90767288]
[36.55116653 49.84022903]
[51.53306580 49.10358429]
[65.78021240 53.79599762]
[77.39134216 63.29065704]
[90.57422638 70.44687653]
[82.43602753 57.84648895]
[74.29783630 45.24610138]
[66.15964508 32.64571381]
[58.02145004 20.04532433]
[49.88325500 7.44493484]
[41.74505997 -5.15545416]
[30.40890884 -3.78584671]
[19.42670822 -6.71985817]
[10.36605835 -13.49923897]
[4.50556183 -23.11970711]
[2.65444970 -34.17958832]
[5.04101992 -45.08398438]
[11.28524017 -54.27476501]
[3.62388110 -67.17063904]
[-4.03747797 -80.06651306]
[-11.69883728 -92.96238708]
[-27.02540779 -94.51235962]
[-38.36790848 -104.67115021]
[-41.51638794 -119.38682556]
[-35.46835327 -132.97209167]
[-43.12971115 -145.86796570]
[-50.79106903 -158.76383972]
[-57.47430801 -151.58187866]
[-68.09004974 -147.47222900]
[-81.24031067 -148.03627014]
[-94.96305847 -154.27523804]
[-105.70106506 -164.74879456]
[-116.43906403 -175.22233582]
[-124.74391174 -178.96046448]
[-127.24462891 -185.89402771]
[-137.85122681 -196.50062561]
[-153.15562439 -193.94030762]
[-167.02699280 -200.89477539]
[-174.13153076 -214.68988037]
[-171.73738098 -230.02114868]
[-160.76515198 -240.99337769]
[-145.43388367 -243.38752747]
[-131.63876343 -236.28298950]
[-124.68430328 -222.41162109]
[-127.24462891 -207.10722351]
[-116.63802338 -196.50062561]
[-105.96551514 -185.96034241]
[-95.22750854 -175.48678589]
[-84.48950958 -165.01324463]
[-77.79427338 -168.39315796]
[-84.55410004 -181.78363037]
[-91.31391907 -195.17410278]
[-98.07374573 -208.56457520]
[-104.83335114 -221.95515442]
[-91.44264984 -228.71453857]
[-84.68327332 -215.32440186]
[-77.92344666 -201.93392944]
[-71.16362000 -188.54344177]
[-64.40380096 -175.15296936]
[-57.70856094 -178.53288269]
[-59.75911713 -193.39207458]
[-61.80966949 -208.25125122]
[-75.55522919 -215.45118713]
[-82.41342163 -229.37042236]
[-79.74712372 -244.65670776]
[-68.58158112 -255.43215942]
[-53.21018219 -257.55340576]
[-39.54353714 -250.20475769]
[-32.83675003 -236.21195984]
[-35.66871643 -220.95549011]
[-46.95048904 -210.30180359]
[-44.89993668 -195.44262695]
[-42.84938431 -180.58343506]
[-37.89519501 -166.42518616]
[-30.23383713 -153.52931213]
[-22.57247734 -140.63343811]
[-7.74911308 -139.44775391]
[3.66873598 -129.64486694]
[7.16581345 -114.82514954]
[1.19703662 -100.62374878]
[8.85839558 -87.72787476]
[16.51975632 -74.83200073]
[24.18111420 -61.93612289]
[42.88491440 -61.27222443]
[57.50658035 -49.34981918]
[61.99305725 -30.86962318]
[54.34545135 -13.29364777]
[62.48364258 -0.69325924]
[70.62183380 11.90712929]
[78.76003265 24.50751877]
[86.89822388 37.10790634]
[95.03642273 49.70829773]
[103.17461395 62.30868530]
[117.77744293 65.73758698]
[130.67330933 58.07622910]
[143.56918335 50.41487122]
[156.46507263 42.75350952]
[169.36094666 35.09215164]
[182.25682068 27.43079185]
[183.80677795 12.10422134]
[193.96557617 0.76172233]
[208.68125916 -2.38675857]
[222.26651001 3.66127777]
[235.16238403 -4.00008154]
[248.01025391 -11.74167538]
[260.80963135 -19.56320381]
[268.55068970 -33.36126709]
[283.44525146 -33.39554596]
[296.24459839 -41.21707535]
[298.39620972 -56.70593262]
[310.03506470 -67.14964294]
[325.66564941 -67.61701202]
[337.90771484 -57.88736343]
[340.98089600 -42.55473328]
[333.43414307 -28.85872459]
[318.83081055 -23.26617432]
[304.06613159 -28.41771126]
[291.26678467 -20.59618378]
[284.44119263 -7.35756826]
[268.63113403 -6.76384068]
[255.83178711 1.05768764]
[251.77388000 7.21083117]
[242.82374573 8.89579296]
[229.92787170 16.55715179]
[228.74218750 31.38051605]
[218.93928528 42.79836655]
[204.11958313 46.29544449]
[189.91816711 40.32666779]
[177.02229309 47.98802567]
[164.12641907 55.64938354]
[151.23054504 63.31074524]
[138.33467102 70.97210693]
[125.43880463 78.63346100]
[125.01827240 86.12166595]
[139.52159119 82.29361725]
[147.64402771 94.90416718]
[138.16062927 106.52592468]
[124.17721558 101.09806824]
[123.75669098 108.58626556]
[135.71366882 117.64333344]
[147.67066956 126.70040131]
[159.62765503 135.75746155]
[175.08039856 133.79528809]
[187.07746887 143.15077209]
[188.85287476 157.89471436]
[200.80986023 166.95178223]
[209.51506042 169.62823486]
[212.85852051 176.19703674]
[224.70166016 185.40245056]
[240.34584045 187.76261902]
[245.64624023 201.68220520]
[257.48937988 210.88763428]
[269.33251953 220.09306335]
[281.17568970 229.29847717]
[294.02984619 228.46955872]
[303.70053101 236.35867310]
[305.35916138 248.32421875]
[317.08663940 257.67657471]
[332.37728882 254.40090942]
[346.17190552 261.76589966]
[351.95706177 276.29400635]
[347.00122070 291.12548828]
[333.64434814 299.25741577]
[318.19317627 296.85009766]
[307.94323730 285.04022217]
[307.73428345 269.40405273]
[296.00683594 260.05169678]
[278.52813721 258.36154175]
[271.97027588 241.14163208]
[260.12710571 231.93620300]
[248.28396606 222.73078918]
[236.44081116 213.52536011]
[221.64373779 211.82363892]
[215.49624634 197.24560547]
[203.65309143 188.04019165]
[191.75279236 178.90876770]
[179.79580688 169.85169983]
[165.12208557 172.13591003]
[152.86697388 163.12109375]
[150.57058716 147.71444702]
[138.61360168 138.65739441]
[126.65660858 129.60032654]
[114.69962311 120.54325867]
[108.06875610 124.04776764]
[107.50820160 139.03729248]
[94.80702209 131.05679321]
[88.17616272 134.56130981]
[88.92385101 149.54266357]
[97.33941650 162.94001770]
[90.24613190 176.03713989]
[90.99382019 191.01849365]
[91.74150848 205.99984741]
[104.31514740 215.29702759]
[107.92071533 230.51325989]
[100.85577393 244.46391296]
[86.45617676 250.56190491]
[71.52096558 245.92794800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 246]
[3 245]
[4 244]
[6 242]
[7 241]
[9 48]
[10 47]
[11 46]
[13 44]
[14 43]
[15 42]
[16 41]
[19 38]
[20 37]
[22 35]
[23 34]
[24 33]
[59 147]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[72 137]
[73 136]
[74 135]
[75 134]
[79 130]
[80 129]
[81 128]
[85 103]
[86 102]
[87 101]
[89 100]
[90 99]
[114 127]
[115 126]
[116 125]
[148 187]
[149 186]
[150 185]
[151 184]
[152 183]
[153 182]
[157 178]
[158 177]
[159 175]
[160 174]
[162 172]
[163 171]
[193 237]
[194 236]
[195 235]
[196 234]
[199 231]
[200 230]
[202 229]
[203 228]
[205 226]
[206 225]
[207 224]
[208 223]
[211 221]
[212 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
