%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ABCC8)
} def

/sequence { (\
AGAGGCGCGGCAGGCGCGCGGAGCCAGCGGAGCCAGCUGAGCCCGAGCCCAGCCCGCGCCCGCGCCGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
4 60 0.745906707 ubox
4 61 0.066183337 ubox
4 66 0.639897305 ubox
4 69 0.142599659 ubox
5 11 0.010036665 ubox
5 17 0.004492697 ubox
5 57 0.009295152 ubox
5 59 0.749128670 ubox
5 60 0.046874178 ubox
5 63 0.003317066 ubox
5 65 0.640683055 ubox
5 68 0.143778069 ubox
6 10 0.009975904 ubox
6 16 0.004517485 ubox
6 56 0.009319725 ubox
6 58 0.750591283 ubox
6 62 0.003321084 ubox
6 64 0.640676589 ubox
6 67 0.143734320 ubox
7 15 0.006927451 ubox
7 55 0.009544878 ubox
7 57 0.750606609 ubox
7 61 0.003315373 ubox
7 63 0.640659820 ubox
7 65 0.033790808 ubox
7 66 0.139206694 ubox
7 68 0.069888812 ubox
8 14 0.006983328 ubox
8 56 0.750500790 ubox
8 62 0.640588783 ubox
8 64 0.047704990 ubox
8 67 0.070102574 ubox
9 54 0.426778902 ubox
9 55 0.618701526 ubox
9 60 0.301752121 ubox
9 61 0.563242846 ubox
9 63 0.035193538 ubox
9 66 0.070484739 ubox
9 69 0.006312362 ubox
10 28 0.005216017 ubox
10 53 0.602472138 ubox
10 54 0.449740911 ubox
10 57 0.143463469 ubox
10 59 0.426547594 ubox
10 60 0.408744107 ubox
10 63 0.138552426 ubox
10 65 0.070554393 ubox
10 68 0.006358258 ubox
11 27 0.005217027 ubox
11 52 0.736230535 ubox
11 56 0.194878143 ubox
11 58 0.521881067 ubox
11 62 0.142074761 ubox
11 64 0.070479328 ubox
11 67 0.006338335 ubox
13 25 0.015613590 ubox
13 34 0.006255664 ubox
13 49 0.055882127 ubox
13 50 0.749939121 ubox
13 54 0.559015768 ubox
13 55 0.100874335 ubox
13 60 0.245614797 ubox
13 61 0.061501577 ubox
13 66 0.006126760 ubox
13 69 0.018904044 ubox
14 24 0.015630428 ubox
14 33 0.006263312 ubox
14 48 0.056401286 ubox
14 49 0.751095171 ubox
14 53 0.563263693 ubox
14 54 0.076667102 ubox
14 57 0.030180304 ubox
14 59 0.314385614 ubox
14 60 0.061318649 ubox
14 65 0.005996424 ubox
14 68 0.019067025 ubox
15 23 0.015627675 ubox
15 32 0.006259295 ubox
15 47 0.056750957 ubox
15 52 0.566639214 ubox
15 56 0.030223567 ubox
15 58 0.314537937 ubox
15 64 0.005871804 ubox
15 67 0.019063376 ubox
16 48 0.939094047 ubox
16 53 0.020844597 ubox
16 55 0.026411521 ubox
16 57 0.314469497 ubox
16 59 0.090156984 ubox
16 63 0.005213102 ubox
16 65 0.015763402 ubox
16 66 0.013484668 ubox
17 29 0.006308270 ubox
17 45 0.008927910 ubox
17 47 0.937577594 ubox
17 52 0.020726677 ubox
17 56 0.314430532 ubox
17 58 0.090192507 ubox
17 62 0.005067685 ubox
17 64 0.020810506 ubox
18 28 0.006689505 ubox
18 44 0.006842939 ubox
18 48 0.038903612 ubox
18 53 0.038284306 ubox
18 55 0.309364551 ubox
18 57 0.090244457 ubox
18 61 0.004270536 ubox
18 63 0.021195557 ubox
18 68 0.004127279 ubox
19 27 0.006694483 ubox
19 45 0.987899556 ubox
19 47 0.035991267 ubox
19 52 0.039959909 ubox
19 56 0.090246175 ubox
19 62 0.021231014 ubox
19 67 0.004136032 ubox
20 34 0.055460701 ubox
20 43 0.006194204 ubox
20 44 0.992087322 ubox
20 49 0.004074059 ubox
20 50 0.040903800 ubox
20 54 0.042894223 ubox
20 55 0.089920970 ubox
20 60 0.003897422 ubox
20 61 0.021401838 ubox
20 66 0.004145172 ubox
21 33 0.055641481 ubox
21 42 0.005551280 ubox
21 43 0.992002785 ubox
21 48 0.004096311 ubox
21 49 0.041045127 ubox
21 53 0.042547042 ubox
21 54 0.089849498 ubox
21 59 0.003656667 ubox
21 60 0.021440068 ubox
21 65 0.004078405 ubox
23 33 0.015917812 ubox
23 42 0.992174944 ubox
23 48 0.044507123 ubox
23 53 0.082028701 ubox
23 59 0.021416173 ubox
23 63 0.003669758 ubox
24 30 0.057262979 ubox
24 32 0.015898780 ubox
24 41 0.992182093 ubox
24 47 0.044474947 ubox
24 52 0.081902806 ubox
24 58 0.021356153 ubox
24 62 0.003666205 ubox
25 29 0.056871380 ubox
25 39 0.993385403 ubox
26 38 0.993439793 ubox
27 33 0.012157130 ubox
27 37 0.993691933 ubox
27 48 0.031960882 ubox
27 53 0.003221205 ubox
27 57 0.026106372 ubox
27 63 0.004647760 ubox
28 32 0.012125497 ubox
28 36 0.993552463 ubox
28 39 0.006121152 ubox
28 45 0.083477118 ubox
28 47 0.029344916 ubox
28 52 0.003231259 ubox
28 56 0.026199203 ubox
28 62 0.004661086 ubox
29 38 0.006166888 ubox
29 44 0.088306874 ubox
29 50 0.008001338 ubox
29 55 0.026259285 ubox
29 60 0.005352075 ubox
29 61 0.004677182 ubox
30 37 0.006165979 ubox
30 43 0.088344016 ubox
30 49 0.008017566 ubox
30 54 0.026251492 ubox
30 59 0.005392348 ubox
30 60 0.004644256 ubox
32 42 0.088230583 ubox
32 48 0.007130931 ubox
32 53 0.013130097 ubox
32 57 0.007098467 ubox
33 41 0.088132016 ubox
33 47 0.007119053 ubox
33 52 0.013042730 ubox
33 56 0.007109432 ubox
36 42 0.007735258 ubox
36 48 0.013530200 ubox
36 53 0.065980571 ubox
37 41 0.007690313 ubox
37 47 0.013555659 ubox
37 52 0.066181004 ubox
38 46 0.013275386 ubox
38 51 0.066278679 ubox
39 44 0.005244553 ubox
39 50 0.066319816 ubox
41 48 0.076907785 ubox
42 47 0.076748063 ubox
45 55 0.008338856 ubox
47 53 0.148231847 ubox
48 52 0.147510545 ubox
52 59 0.039527268 ubox
53 58 0.039522792 ubox
55 64 0.005832633 ubox
56 61 0.004116695 ubox
56 63 0.007173128 ubox
56 65 0.006161975 ubox
57 62 0.007171808 ubox
57 64 0.006181155 ubox
58 63 0.006080629 ubox
58 65 0.006303824 ubox
58 68 0.004038776 ubox
59 64 0.006325492 ubox
59 67 0.004043012 ubox
61 67 0.109946402 ubox
62 66 0.106648522 ubox
62 68 0.323876729 ubox
63 67 0.322164589 ubox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
6 58 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 53 0.9500000 lbox
11 52 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
21 43 0.9500000 lbox
23 42 0.9500000 lbox
24 41 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
showpage
end
%%EOF
