%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUGCAGGGAAGUUUUGCCUCUUCCUGAAAAUUAUAUUAUUAGCUUUUUAAAAAUCAGGAUGACUGCUAGUUUUGUUUAAAGUAUUUGUUCUGGAAAUACUAAAGUUGGAGUCUACCAGACUGAGGUUAGAAGCAUUUUCUUUGGCAGCAAGAAGAUAAUUUUAUAGAAGCC\
) } def
/len { sequence length } bind def

/coor [
[96.66149139 142.16801453]
[80.77743530 137.67997742]
[71.69982147 149.62136841]
[62.62221146 161.56275940]
[67.72098541 177.67301941]
[62.27881622 193.49511719]
[48.62237549 202.87226868]
[32.23313141 202.28034973]
[23.37258720 214.38369751]
[14.51204586 226.48703003]
[5.65150404 238.59036255]
[-3.20903802 250.69371033]
[-12.06958008 262.79705811]
[-7.19981623 277.53018188]
[-11.95206928 292.30160522]
[-24.49900055 301.43145752]
[-40.01605988 301.40908813]
[-52.53662109 292.24313354]
[-57.24627304 277.45803833]
[-52.33405685 262.73901367]
[-39.68881989 253.74580383]
[-24.17291832 253.93650818]
[-15.31237602 241.83316040]
[-6.45183420 229.72982788]
[2.40870762 217.62648010]
[11.26924992 205.52314758]
[20.12979126 193.41981506]
[14.88423538 181.12197876]
[16.42133141 167.73171997]
[24.44507217 156.76750183]
[36.94094849 151.16358948]
[50.68081284 152.48515320]
[59.75842667 140.54376221]
[68.83604431 128.60235596]
[63.45172119 121.29579163]
[59.75004196 113.00878143]
[57.90143204 104.12286377]
[57.99099350 95.04713440]
[60.01460648 86.19942474]
[63.87910461 77.98708344]
[69.40657043 70.78819275]
[76.34252930 64.93418121]
[70.29100037 51.20906067]
[64.23947144 37.48393631]
[58.18794632 23.75881386]
[52.13641739 10.03369045]
[46.08488846 -3.69143295]
[40.03336334 -17.41655731]
[24.92283630 -16.46927261]
[10.42714596 -20.74091911]
[-1.70962739 -29.69742393]
[-10.03411484 -42.24226379]
[-13.55768681 -56.85068130]
[-11.87383270 -71.75501251]
[-5.20496225 -85.15856934]
[5.62675381 -95.45221710]
[-0.42477366 -109.17734528]
[-6.47630119 -122.90246582]
[-12.52782822 -136.62759399]
[-18.57935524 -150.35270691]
[-24.63088417 -164.07783508]
[-30.68241119 -177.80296326]
[-36.73394012 -191.52807617]
[-42.78546524 -205.25320435]
[-55.43263245 -214.75897217]
[-53.48756790 -229.52603149]
[-59.53909683 -243.25115967]
[-65.59062195 -256.97628784]
[-71.64215088 -270.70141602]
[-86.89833069 -271.16159058]
[-100.44004059 -278.20324707]
[-109.57856750 -290.42822266]
[-112.49944305 -305.40927124]
[-108.62273407 -320.17184448]
[-98.71816254 -331.78485107]
[-84.75228882 -337.94253540]
[-69.49803925 -337.42227173]
[-55.98416138 -330.32736206]
[-46.89384842 -318.06646729]
[-44.03198624 -303.07406616]
[-47.96680069 -288.32684326]
[-57.91702652 -276.75292969]
[-51.86550140 -263.02780151]
[-45.81397247 -249.30268860]
[-39.76244736 -235.57756042]
[-27.54812431 -227.05349731]
[-29.06034279 -211.30473328]
[-23.00881386 -197.57960510]
[-16.95728683 -183.85449219]
[-10.90575981 -170.12936401]
[-4.85423231 -156.40423584]
[1.19729495 -142.67912292]
[7.24882221 -128.95399475]
[13.30035019 -115.22886658]
[19.35187721 -101.50374603]
[34.25738525 -102.55786133]
[48.65115356 -98.44100952]
[60.79064560 -89.63151550]
[69.19936371 -77.17699432]
[72.84642792 -62.56984329]
[71.27293396 -47.56836319]
[64.64960480 -33.98515701]
[53.75848389 -23.46808434]
[59.81001282 -9.74295998]
[65.86154175 3.98216319]
[71.91307068 17.70728683]
[77.96459198 31.43241119]
[84.01612091 45.15753555]
[90.06764984 58.88265610]
[113.86776733 60.03786087]
[133.26733398 73.87392426]
[146.52001953 66.84780121]
[159.77270508 59.82167435]
[173.02537537 52.79554749]
[186.27806091 45.76942062]
[197.43997192 33.00822067]
[212.79237366 40.20126724]
[210.13040161 56.94493103]
[193.30418396 59.02209854]
[180.05149841 66.04822540]
[166.79882812 73.07435608]
[153.54614258 80.10047913]
[140.29345703 87.12660980]
[142.27120972 98.44040680]
[141.13255310 109.86918640]
[136.96142578 120.57037354]
[148.56732178 130.07318115]
[160.17320251 139.57598877]
[172.19606018 148.54542542]
[184.61140442 156.96324158]
[197.02673340 165.38104248]
[209.44206238 173.79884338]
[221.85740662 182.21665955]
[237.18605042 179.44711304]
[249.65704346 188.16082764]
[252.20291138 202.79142761]
[264.61825562 211.20922852]
[277.03356934 219.62702942]
[289.44891357 228.04484558]
[301.86425781 236.46264648]
[314.27960205 244.88044739]
[326.69491577 253.29826355]
[335.58749390 255.53616333]
[339.25653076 261.98181152]
[351.51788330 270.62237549]
[367.89013672 271.56112671]
[375.02059937 286.32894897]
[365.57403564 299.73397827]
[349.26828003 297.98626709]
[342.87728882 282.88372803]
[330.61596680 274.24313354]
[318.27713013 265.71359253]
[305.86178589 257.29577637]
[293.44644165 248.87797546]
[281.03112793 240.46017456]
[268.61578369 232.04237366]
[256.20043945 223.62455750]
[243.78511047 215.20675659]
[229.25131226 218.25704956]
[216.54048157 209.89706421]
[213.43959045 194.63198853]
[201.02426147 186.21418762]
[188.60893250 177.79637146]
[176.19358826 169.37857056]
[163.77825928 160.96076965]
[163.79875183 175.96075439]
[152.20072937 185.47314453]
[137.49475098 182.51782227]
[130.47196960 169.26336670]
[136.28569031 155.43582153]
[150.67039490 151.18186951]
[139.06451416 141.67906189]
[127.45861816 132.17625427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[42 109]
[43 108]
[44 107]
[45 106]
[46 105]
[47 104]
[48 103]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[64 87]
[66 85]
[67 84]
[68 83]
[69 82]
[111 123]
[112 122]
[113 121]
[114 120]
[115 119]
[126 173]
[127 172]
[128 171]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
