%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:16:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUUGCCCAAGGCCUCAGCAACCGACGUUCGAAAGCCAGGAGAAAAGGCGAAUGAUAAAGGGCGCUCCACGCAUGCGUUAAGAAGCCGCCCCAACUCCCCCGCGGCGUUCUUUCUUGGAACAAAACUAGCGCGGAGCCACGGAACUCCGCAGUUUGCGUAGACUUGAAUUUCCUAUUCCUCGGACGAUCCAUGUGGAAUCCGAAAAAUAGAA\
) } def
/len { sequence length } bind def

/coor [
[100.86944580 149.91848755]
[95.13435364 149.68840027]
[91.44647980 164.22798157]
[87.75860596 178.76757812]
[84.07073212 193.30715942]
[80.38285828 207.84674072]
[85.35735321 223.47322083]
[74.11318970 235.41058350]
[58.21740341 231.37872314]
[54.02220917 215.52525330]
[65.84326935 204.15887451]
[69.53114319 189.61929321]
[73.21901703 175.07969666]
[76.90689087 160.54011536]
[80.59476471 146.00053406]
[72.65968323 141.77461243]
[65.61112213 136.19415283]
[59.67763519 129.44007874]
[55.05161285 121.73140717]
[40.71955872 126.15772247]
[26.38750648 130.58403015]
[18.96498489 144.27870178]
[4.36719036 148.56344604]
[-8.64284039 141.40281677]
[-22.97489357 145.82913208]
[-25.37028122 159.60877991]
[-33.43003845 170.95826721]
[-45.53514099 177.69618225]
[-59.29602814 178.55767822]
[-72.02423096 173.43154907]
[-81.25760651 163.37084961]
[-95.65280151 167.58728027]
[-110.04800415 171.80371094]
[-115.35798645 186.26434326]
[-128.01672363 194.72660828]
[-143.05319214 194.11949158]
[-154.70938110 184.88525391]
[-169.10458374 189.10168457]
[-183.49977112 193.31811523]
[-187.75726318 208.14637756]
[-199.37069702 218.30174255]
[-214.63429260 220.54368591]
[-228.67747498 214.15678406]
[-237.01913452 201.17910767]
[-236.99746704 185.75175476]
[-228.61938477 172.79756165]
[-214.55830383 166.45013428]
[-199.30107117 168.73495483]
[-187.71620178 178.92291260]
[-173.32101440 174.70648193]
[-158.92581177 170.49005127]
[-154.09371948 156.42631531]
[-141.76100159 147.80262756]
[-126.53713226 148.09793091]
[-114.26442719 157.40850830]
[-99.86923218 153.19207764]
[-85.47403717 148.97564697]
[-82.03814697 133.18476868]
[-71.04370880 121.21297455]
[-55.42236328 116.39254761]
[-39.41067123 120.12992859]
[-27.40120697 131.49707031]
[-13.06915474 127.07076263]
[-6.36271000 113.82088470]
[8.10897541 109.12780762]
[21.96119118 116.25198364]
[36.29324341 111.82566833]
[50.62529755 107.39935303]
[55.19659805 77.97122192]
[75.70967865 56.38129044]
[104.86564636 50.31159973]
[108.55352020 35.77201462]
[112.24139404 21.23242569]
[115.92926788 6.69283867]
[119.61714172 -7.84674835]
[115.51021576 -23.12561417]
[126.13913727 -33.55995178]
[129.82701111 -48.09954071]
[122.17070007 -50.78328323]
[115.01641846 -55.54836655]
[108.93112946 -62.28821182]
[104.45453644 -70.74284363]
[102.05800629 -80.50707245]
[102.10628510 -91.04946899]
[104.82448578 -101.74127960]
[110.27320862 -111.89373016]
[118.33352661 -120.80143738]
[114.01203918 -135.16545105]
[109.69055939 -149.52946472]
[105.36907196 -163.89346313]
[101.04758453 -178.25747681]
[85.96318817 -180.58638000]
[73.38796234 -189.23660278]
[65.81871796 -202.49063110]
[64.75833130 -217.71687317]
[70.41735840 -231.89213562]
[81.67218018 -242.20193481]
[96.28814697 -246.59921265]
[111.36325836 -244.21092224]
[123.90432739 -235.51124573]
[131.42131042 -222.22752380]
[132.42172241 -206.99722290]
[126.70692444 -192.84434509]
[115.41159058 -182.57896423]
[119.73307800 -168.21495056]
[124.05456543 -153.85095215]
[128.37605286 -139.48693848]
[132.69754028 -125.12292480]
[147.69393921 -125.45167542]
[151.38180542 -139.99125671]
[155.06968689 -154.53085327]
[158.75755310 -169.07043457]
[162.44543457 -183.61001587]
[155.50704956 -198.07510376]
[162.61973572 -212.45526123]
[178.32723999 -215.71929932]
[190.58010864 -205.36329651]
[189.97898865 -189.33151245]
[176.98501587 -179.92214966]
[173.29714966 -165.38255310]
[169.60926819 -150.84297180]
[165.92140198 -136.30339050]
[162.23352051 -121.76380157]
[168.26878357 -117.31119537]
[177.17398071 -129.38171387]
[186.07919312 -141.45222473]
[190.81872559 -155.68377686]
[205.81831360 -155.57380676]
[210.34869385 -141.27430725]
[198.14970398 -132.54702759]
[189.24450684 -120.47650909]
[180.33929443 -108.40599060]
[186.37455750 -103.95339203]
[199.17845154 -111.76749420]
[211.98234558 -119.58160400]
[224.78623962 -127.39570618]
[237.59013367 -135.20980835]
[250.39404297 -143.02391052]
[251.50546265 -158.50114441]
[261.52764893 -170.34747314]
[276.60684204 -174.00776672]
[290.94476318 -168.07455444]
[299.02822876 -154.82928467]
[297.74899292 -139.36503601]
[287.59887695 -127.62812042]
[272.48086548 -124.13162231]
[258.20812988 -130.22001648]
[245.40425110 -122.40591431]
[232.60034180 -114.59181213]
[219.79644775 -106.77770996]
[206.99255371 -98.96360016]
[194.18865967 -91.14949799]
[178.14840698 -51.36699677]
[144.36659241 -44.41166687]
[140.67872620 -29.87207985]
[145.04942322 -15.63318253]
[134.15672302 -4.15887451]
[130.46885681 10.38071251]
[126.78098297 24.92029953]
[123.09310913 39.45988464]
[119.40523529 53.99947357]
[125.64447784 57.16342163]
[131.38023376 61.16840363]
[136.49987793 65.93578339]
[140.90290833 71.37197113]
[144.50286865 77.37021637]
[147.22908020 83.81277466]
[149.02801514 90.57313538]
[149.86436462 97.51858521]
[149.72169495 104.51275635]
[148.60281372 111.41831970]
[146.52969360 118.09970093]
[143.54302979 124.42572784]
[139.70146179 130.27218628]
[135.08042908 135.52429199]
[143.89720154 147.65954590]
[152.71397400 159.79479980]
[161.53076172 171.93006897]
[170.34753418 184.06532288]
[185.70530701 186.66854858]
[194.47389221 199.10101318]
[191.89747620 213.72625732]
[200.71424866 225.86151123]
[209.53103638 237.99676514]
[218.34780884 250.13201904]
[227.16458130 262.26727295]
[237.98426819 263.34439087]
[246.25576782 270.05871582]
[249.40171814 280.00723267]
[246.61399841 289.83404541]
[255.07241821 302.22174072]
[263.53085327 314.60943604]
[278.53729248 321.22296143]
[280.04382324 337.55276489]
[266.50064087 346.80014038]
[251.83981323 339.45220947]
[251.14314270 323.06787109]
[242.68472290 310.68017578]
[234.22630310 298.29248047]
[216.23262024 291.20852661]
[215.02932739 271.08404541]
[206.21255493 258.94879150]
[197.39578247 246.81355286]
[188.57899475 234.67828369]
[179.76222229 222.54302979]
[165.05662537 220.47392273]
[155.94229126 208.29263306]
[158.21228027 192.88209534]
[149.39550781 180.74684143]
[140.57872009 168.61158752]
[131.76194763 156.47633362]
[122.94516754 144.34107971]
[117.70433044 146.68156433]
[112.22950745 148.40507507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[19 68]
[20 67]
[21 66]
[24 63]
[25 62]
[31 57]
[32 56]
[33 55]
[37 51]
[38 50]
[39 49]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[77 155]
[78 154]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[109 123]
[110 122]
[111 121]
[112 120]
[113 119]
[133 152]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
[175 212]
[176 211]
[177 210]
[178 209]
[179 208]
[182 205]
[183 204]
[184 203]
[185 202]
[186 201]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
