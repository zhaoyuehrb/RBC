%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:38:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGAGACGGGUGGGGCCGGAGCUCCAAGCUGGUUUGAACAAGCCCUGGGCAUGUUUGGCGGGAAGUUGGCUUAGCUCGGCUACCUGUGGCCCCGCAGUUUUGUAGUCCCCGCCUUGUUUCUCCCCAGAGGCCUCUCAAUCCUCCCUCCAUGAUCUUCGCAUAGAGCACAGUACCCCUUCACACGGAGGACGCG\
) } def
/len { sequence length } bind def

/coor [
[122.04178619 324.03723145]
[120.60144043 309.10653687]
[119.16109467 294.17587280]
[117.72074890 279.24517822]
[116.28040314 264.31448364]
[103.92215729 249.45236206]
[112.52575684 231.23114014]
[110.60759735 216.35429382]
[101.30629730 204.72093201]
[107.21534729 190.04464722]
[105.29718781 175.16778564]
[103.37902832 160.29093933]
[88.90056610 156.36996460]
[79.73738861 168.24581909]
[70.57421112 180.12168884]
[61.41102982 191.99755859]
[52.24784851 203.87341309]
[43.08466721 215.74928284]
[41.43817902 232.06556702]
[26.37557411 238.55015564]
[13.39197159 228.53227234]
[15.84378815 212.31744385]
[31.20880508 206.58610535]
[40.37198639 194.71023560]
[49.53516388 182.83438110]
[58.69834518 170.95851135]
[67.86152649 159.08264160]
[77.02470398 147.20678711]
[61.56666946 131.33653259]
[54.77581406 111.55773163]
[56.96955872 92.00917053]
[66.68849945 76.34762573]
[81.16185760 67.06386566]
[76.43523407 52.82802963]
[64.74356079 42.16898346]
[68.07621765 27.65200424]
[63.34959412 13.41616821]
[58.62297058 -0.81966794]
[53.89635086 -15.05550385]
[40.47940063 -18.24463081]
[30.47188568 -27.57520866]
[26.41710281 -40.52963638]
[29.27296638 -53.68921661]
[38.18825150 -63.63625336]
[33.69040298 -77.94601440]
[29.19255829 -92.25578308]
[24.58017540 -106.52904510]
[19.85355186 -120.76487732]
[15.12692833 -135.00071716]
[10.40030479 -149.23655701]
[5.67368174 -163.47238159]
[-10.95198250 -163.73152161]
[-26.46191597 -169.65345764]
[-38.99077606 -180.50721741]
[-47.03817368 -194.96980286]
[-49.64836121 -211.28742981]
[-46.52369308 -227.48828125]
[-38.05845642 -241.62069702]
[-25.28921890 -251.98831177]
[-30.46969604 -266.06533813]
[-35.65017319 -280.14236450]
[-40.83064651 -294.21939087]
[-46.01112366 -308.29641724]
[-51.19160080 -322.37344360]
[-67.68056488 -311.70254517]
[-92.26800537 -315.70443726]
[-103.37217712 -325.78894043]
[-114.47634888 -335.87347412]
[-125.58051300 -345.95797729]
[-136.68469238 -356.04248047]
[-152.47500610 -362.21517944]
[-150.91474915 -379.09716797]
[-134.26057434 -382.27130127]
[-126.60017395 -367.14666748]
[-115.49600220 -357.06213379]
[-104.39183044 -346.97763062]
[-93.28765869 -336.89312744]
[-82.18349457 -326.80859375]
[-75.50640869 -330.22424316]
[-55.47516251 -340.47116089]
[-57.15462875 -355.37683105]
[-58.83409500 -370.28250122]
[-60.51356125 -385.18820190]
[-62.19303131 -400.09387207]
[-63.87249756 -414.99957275]
[-66.02885437 -429.84375000]
[-68.65988159 -444.61120605]
[-71.29090881 -459.37866211]
[-73.92193604 -474.14611816]
[-76.55296326 -488.91357422]
[-87.52460480 -501.10189819]
[-82.19841003 -516.61199951]
[-66.05349731 -519.48846436]
[-55.69837570 -506.77215576]
[-61.78550720 -491.54458618]
[-59.15447998 -476.77716064]
[-56.52345276 -462.00970459]
[-53.89242554 -447.24224854]
[-51.26139832 -432.47479248]
[-49.02844238 -430.76062012]
[-47.34434891 -428.05316162]
[-46.59289932 -424.55865479]
[-47.07560349 -420.61895752]
[-48.96681213 -416.67901611]
[-47.28734589 -401.77334595]
[-45.60787964 -386.86767578]
[-43.92841339 -371.96197510]
[-42.24894714 -357.05630493]
[-40.56947708 -342.15060425]
[-37.11457443 -327.55392456]
[-31.93409729 -313.47689819]
[-26.75362015 -299.39987183]
[-21.57314491 -285.32284546]
[-16.39266968 -271.24581909]
[-11.21219349 -257.16879272]
[2.24855971 -257.90869141]
[15.38848495 -254.82072449]
[27.13992500 -248.14605713]
[36.54529953 -238.41766357]
[42.83512878 -226.41783142]
[45.49098206 -213.11517334]
[44.28820801 -199.58653259]
[39.31489182 -186.92974854]
[30.96548080 -176.17459106]
[19.90951729 -168.19900513]
[24.63614082 -153.96318054]
[29.36276436 -139.72734070]
[34.08938980 -125.49150085]
[38.81600952 -111.25566864]
[43.91373444 -105.89154053]
[43.50232315 -96.75363159]
[48.00016785 -82.44386292]
[52.49801636 -68.13410187]
[68.21544647 -63.41680145]
[78.12692261 -50.13023376]
[78.17092133 -33.38797760]
[68.13218689 -19.78212738]
[72.85881042 -5.54629135]
[77.58543396 8.68954468]
[82.31205750 22.92538071]
[93.66564941 32.56618500]
[90.67107391 48.10140610]
[95.39769745 62.33724213]
[117.17930603 62.13222504]
[137.38937378 74.56271362]
[148.80055237 97.56221771]
[146.13464355 125.05872345]
[160.37048340 129.78533936]
[174.60630798 134.51196289]
[190.14152527 131.51739502]
[199.78233337 142.87098694]
[214.01817322 147.59761047]
[228.25401306 152.32423401]
[241.47250366 143.96926880]
[256.96191406 146.11689758]
[267.40859985 157.75306702]
[267.87997437 173.38354492]
[258.15347290 185.62809753]
[242.82160950 188.70521545]
[229.12367249 181.16197205]
[223.52738953 166.56007385]
[209.29154968 161.83345032]
[195.05570984 157.10682678]
[180.53874207 160.43948364]
[169.87968445 148.74780273]
[155.64385986 144.02117920]
[141.40802002 139.29455566]
[135.61997986 144.06411743]
[145.84704590 155.03713989]
[159.63597107 160.94183350]
[161.76358032 175.79017639]
[150.18757629 185.32937622]
[136.01968384 180.40283203]
[132.85960388 165.73927307]
[124.04391479 153.60322571]
[118.25588226 158.37278748]
[120.17404175 173.24963379]
[122.09219360 188.12648010]
[131.53070068 200.82392883]
[125.48445129 214.43614197]
[127.40261078 229.31298828]
[136.39604187 235.45857239]
[140.43293762 245.33859253]
[138.40145874 255.59248352]
[131.21109009 262.87414551]
[132.65144348 277.80484009]
[134.09178162 292.73550415]
[135.53213501 307.66619873]
[136.97247314 322.59689331]
[149.96298218 331.30209351]
[154.26901245 346.33514404]
[147.85740662 360.59783936]
[133.75549316 367.35583496]
[118.62179565 363.41818237]
[109.60197449 350.64410400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[5 185]
[7 181]
[8 180]
[10 178]
[11 177]
[12 176]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[33 143]
[34 142]
[36 140]
[37 139]
[38 138]
[39 137]
[44 133]
[45 132]
[46 131]
[47 129]
[48 128]
[49 127]
[50 126]
[51 125]
[59 115]
[60 114]
[61 113]
[62 112]
[63 111]
[64 110]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[80 109]
[81 108]
[82 107]
[83 106]
[84 105]
[85 104]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[147 167]
[148 166]
[149 165]
[151 163]
[152 162]
[153 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
