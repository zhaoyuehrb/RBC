%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:12:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUCCUGAGCGCGGAGAGGGCGAGCUCGGGCCGCGGGCAGGGCGGGAGCCGGCAGCCGGCAACCAAGGGAGGCAGAAAGGCACAAAGAUCGCAAUAAUAUCCGUUAUAACCCGCUAUCUAACCCCACCCCCAACACACACCCAUCCAUCCCACCCUCCGGGAGAGGCAGCCGGCGAUCCGCUCUCUGCGCCCUGGGAAAAAGCCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[9.79727650 548.35437012]
[-1.35943055 538.32806396]
[4.72807360 524.61950684]
[6.28126240 509.70016479]
[-1.17842281 508.92358398]
[-8.80638981 521.83923340]
[-16.43435669 534.75488281]
[-24.06232262 547.67053223]
[-31.69029045 560.58618164]
[-39.31825638 573.50183105]
[-46.94622421 586.41748047]
[-47.30188751 602.23468018]
[-60.43625259 609.25878906]
[-68.06422424 622.17443848]
[-62.69100571 636.85986328]
[-68.06309509 651.54577637]
[-81.64394379 659.29785156]
[-97.02110291 656.45581055]
[-106.93393707 644.36157227]
[-106.70191193 628.72570801]
[-96.43458557 616.93096924]
[-80.97987366 614.54644775]
[-73.35190582 601.63079834]
[-73.54184723 586.73742676]
[-59.86187744 578.78955078]
[-52.23390961 565.87390137]
[-44.60594559 552.95819092]
[-36.97797775 540.04254150]
[-29.35000992 527.12689209]
[-21.72204399 514.21124268]
[-14.09407711 501.29559326]
[-9.41937160 471.83908081]
[12.45234299 462.31155396]
[14.88663673 447.51040649]
[17.32093048 432.70922852]
[19.75522423 417.90808105]
[22.18951797 403.10693359]
[20.18299675 398.77377319]
[20.87670135 393.13418579]
[24.92150879 387.90594482]
[27.79334068 373.18341064]
[30.66517258 358.46090698]
[33.53700256 343.73837280]
[36.40883636 329.01586914]
[39.28067017 314.29333496]
[42.15250015 299.57083130]
[45.02433395 284.84829712]
[38.43604660 268.58261108]
[50.64207077 254.79466248]
[53.29542542 240.03118896]
[55.94878006 225.26773071]
[58.60213470 210.50427246]
[61.25548935 195.74081421]
[63.90884018 180.97735596]
[58.54488373 167.08213806]
[68.60128784 154.86824036]
[71.25464630 140.10478210]
[73.90799713 125.34132385]
[65.90065002 112.65737915]
[51.43111420 108.70357513]
[34.55838394 110.36109924]
[28.29480362 94.60661316]
[41.69966888 84.22653198]
[55.38492203 94.23403931]
[69.85445404 98.18785095]
[73.46263123 84.02040863]
[83.48830414 72.87634277]
[97.89110565 67.53712463]
[95.23774719 52.77366257]
[92.58439636 38.01020432]
[87.98664856 30.11816788]
[90.00280762 23.00843048]
[87.56851196 8.20727444]
[80.64170074 5.30621386]
[75.19920349 0.23095156]
[71.88333893 -6.35506725]
[71.06292725 -13.61443138]
[72.79280090 -20.64216805]
[76.81278229 -26.57855034]
[82.58560944 -30.71425438]
[81.25366974 -45.65500259]
[68.27832794 -50.87914276]
[58.86449432 -61.13508606]
[54.80720520 -74.38292694]
[56.84369659 -88.02075195]
[64.52018738 -99.39568329]
[76.29140472 -106.31986237]
[75.18100739 -121.27870941]
[74.07061768 -136.23754883]
[72.96022034 -151.19639587]
[64.22257233 -164.38594055]
[70.99649048 -177.65106201]
[69.88609314 -192.60989380]
[55.11429596 -195.76753235]
[41.83112335 -202.96017456]
[31.11338997 -213.60475159]
[23.82992935 -226.83833313]
[20.57118034 -241.58816528]
[21.60131454 -256.65850830]
[26.83682442 -270.82769775]
[35.85329056 -282.94711304]
[47.91978455 -292.03427124]
[62.05813599 -297.35250854]
[77.12220764 -298.47070312]
[91.89083099 -295.29824829]
[105.16676331 -288.09225464]
[115.87380219 -277.43692017]
[123.14395905 -264.19601440]
[126.38789368 -249.44293213]
[125.34262085 -234.37362671]
[120.09288025 -220.20970154]
[111.06423950 -208.09936523]
[98.98862457 -199.02433777]
[84.84493256 -193.72029114]
[85.95532990 -178.76144409]
[94.61355591 -166.64186096]
[87.91905975 -152.30679321]
[89.02945709 -137.34794617]
[90.13985443 -122.38909912]
[91.25025177 -107.43025970]
[105.97158813 -100.76647949]
[115.37757111 -87.51147461]
[116.82357788 -71.22843170]
[109.82059479 -56.35342789]
[96.19441986 -46.98694229]
[97.52635193 -32.04619217]
[112.33605957 -15.17226982]
[102.36966705 5.77298117]
[104.80396271 20.57413673]
[107.34785461 35.35684967]
[110.00120544 50.12030792]
[112.65456390 64.88376617]
[117.40400696 50.65552902]
[122.15344238 36.42728806]
[120.02524567 21.57903099]
[123.76293182 7.05216932]
[132.79319763 -4.92507076]
[145.73092651 -12.51554298]
[160.59162903 -14.55497074]
[175.09590149 -10.73053360]
[187.01895142 -1.62884796]
[194.53196716 11.35400963]
[196.48254395 26.22664452]
[192.57150269 40.70779419]
[183.39871216 52.57624435]
[170.37118530 60.01153564]
[155.48513794 61.87304688]
[143.01196289 70.20491028]
[130.53878784 78.53677368]
[145.47953796 77.20483398]
[160.42028809 75.87289429]
[175.36102295 74.54095459]
[184.16029358 61.61397171]
[199.22418213 57.41716003]
[213.43998718 63.93213272]
[220.09544373 78.08271027]
[216.04804993 93.18743134]
[203.20884705 102.11430359]
[187.64013672 100.64833069]
[176.69296265 89.48170471]
[161.75222778 90.81364441]
[146.81147766 92.14557648]
[131.87072754 93.47751617]
[127.60103607 115.70068359]
[110.17080688 129.25976562]
[88.67145538 127.99467468]
[86.01810455 142.75813293]
[83.36474609 157.52159119]
[88.53891754 172.47279358]
[78.67230225 183.63072205]
[76.01894379 198.39418030]
[73.36559296 213.15763855]
[70.71223450 227.92109680]
[68.05888367 242.68455505]
[65.40553284 257.44799805]
[72.11435699 268.46353149]
[69.60094452 280.70501709]
[59.74685287 287.72012329]
[56.87501907 302.44265747]
[54.00318909 317.16516113]
[51.13135529 331.88769531]
[48.25952530 346.61019897]
[45.38769150 361.33273315]
[42.51586151 376.05523682]
[39.64402771 390.77777100]
[36.99067307 405.54122925]
[34.55638123 420.34237671]
[32.12208557 435.14352417]
[29.68779373 449.94470215]
[27.25349998 464.74584961]
[40.08041000 472.04537964]
[47.04549789 487.85427856]
[42.87021255 507.22589111]
[47.67425919 521.43579102]
[52.47830963 535.64569092]
[57.28235626 549.85559082]
[62.08640289 564.06549072]
[76.71855164 569.58221436]
[84.33625031 583.23889160]
[81.34264374 598.58721924]
[69.15122223 608.38024902]
[53.51841354 607.99401855]
[41.82554245 597.61077881]
[39.59362411 582.13330078]
[47.87650681 568.86950684]
[43.07246017 554.65960693]
[38.26841354 540.44976807]
[33.46436691 526.23986816]
[28.66031837 512.02996826]
[21.20063210 511.25335693]
[19.64744377 526.17272949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[11 25]
[13 23]
[14 22]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[46 179]
[47 178]
[49 175]
[50 174]
[51 173]
[52 172]
[53 171]
[54 170]
[56 168]
[57 167]
[58 166]
[59 65]
[60 64]
[68 132]
[69 131]
[70 130]
[72 129]
[73 128]
[80 126]
[81 125]
[87 120]
[88 119]
[89 118]
[90 117]
[92 115]
[93 114]
[149 163]
[150 162]
[151 161]
[152 160]
[193 209]
[194 208]
[195 207]
[196 206]
[197 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
