%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAAAGCCCCGGGAGAGACUAAGAAGCAAUCCUCCCACGCGCUUUCUCCCACCCUCGGGCCACUGAGACGGAGGGACAGAGGGCCGCCCUCGCGCGGCCGAGGCCCCGCCUCCCGCUCGCCCGCCCGCGCCUCCAGCGGAAGCCGGAAGCAAAAGCGGGUCCUGCUAGCCCCGCGGCUCCGAACUCGGUGGUCCUGGAAGCUCCGCAGG\
) } def
/len { sequence length } bind def

/coor [
[112.35806274 134.27876282]
[93.76902771 135.37353516]
[77.33901215 127.19358063]
[67.17546844 138.22544861]
[57.01192093 149.25733948]
[46.84837341 160.28921509]
[36.68482590 171.32109070]
[26.52128029 182.35296631]
[30.07420540 198.88998413]
[23.13905334 214.13481140]
[8.62927055 222.16151428]
[-7.64091158 219.98007202]
[-17.63908386 231.16204834]
[-27.63725471 242.34402466]
[-37.63542938 253.52600098]
[-47.63359833 264.70797729]
[-51.02078629 273.19119263]
[-57.86483765 275.98059082]
[-68.02838135 287.01245117]
[-62.82060242 301.40472412]
[-64.90925598 316.56704712]
[-73.81438446 329.01525879]
[-87.48965454 335.88879395]
[-102.79258728 335.60818481]
[-116.20668793 328.23794556]
[-124.64949036 315.47167969]
[-126.18089294 300.24298096]
[-120.44900513 286.05126953]
[-108.77095795 276.15774536]
[-93.83029175 272.83584595]
[-79.06025696 276.84890747]
[-68.89671326 265.81704712]
[-58.81557465 254.70980835]
[-48.81740189 243.52783203]
[-38.81922913 232.34585571]
[-28.82105827 221.16387939]
[-18.82288551 209.98190308]
[-22.84268951 197.25070190]
[-20.02418518 184.09014893]
[-10.99900150 173.96022034]
[1.95532513 169.57798767]
[15.48940277 172.18942261]
[25.65295029 161.15754700]
[35.81649780 150.12565613]
[45.98004532 139.09378052]
[56.14358902 128.06190491]
[66.30713654 117.03002930]
[62.33504105 102.56550598]
[47.96282959 98.27138519]
[33.59061432 93.97725677]
[19.21840286 89.68313599]
[3.78080678 93.14596558]
[-6.19880247 82.08899689]
[-20.57101440 77.79486847]
[-35.00556946 73.71520233]
[-49.49925995 69.85089874]
[-63.99295425 65.98659515]
[-78.48664856 62.12228775]
[-92.98033905 58.25798035]
[-108.66610718 63.04219818]
[-120.46595001 51.65378571]
[-116.24119568 35.80817413]
[-100.33791351 31.80596352]
[-89.11603546 43.76428986]
[-74.62234497 47.62859344]
[-60.12865067 51.49290085]
[-45.63495636 55.35720444]
[-31.14126205 59.22151184]
[-26.63268280 57.64615631]
[-21.08660507 58.88633728]
[-16.27689171 63.42265701]
[-1.90467882 67.71678162]
[12.50492001 63.94680405]
[23.51252556 75.31092072]
[37.88473892 79.60504913]
[52.25695038 83.89916992]
[66.62916565 88.19329071]
[76.98730469 72.19683838]
[94.42752838 63.63932800]
[114.15400696 65.29656982]
[111.48821259 50.53535080]
[108.82241821 35.77413177]
[104.42141724 21.43428612]
[98.34757996 7.71901846]
[92.27375031 -5.99624825]
[86.19991302 -19.71151543]
[80.12608337 -33.42678070]
[74.05224609 -47.14204788]
[59.22051620 -52.60055542]
[52.66858292 -66.98275757]
[58.28359604 -81.75595093]
[72.73426819 -88.15545654]
[87.44726562 -82.38456726]
[93.69363403 -67.86705017]
[87.76751709 -53.21588135]
[93.84134674 -39.50061417]
[99.91518402 -25.78534889]
[105.98901367 -12.07008171]
[112.06285095 1.64518464]
[118.13668060 15.36045170]
[132.87763977 12.58484077]
[133.54742432 -2.40019846]
[134.21720886 -17.38523674]
[134.88700867 -32.37027740]
[135.55679321 -47.35531616]
[130.22373962 -63.44863129]
[144.21177673 -73.02834320]
[157.28938293 -62.23888016]
[150.54182434 -46.68552780]
[149.87203979 -31.70049095]
[149.20225525 -16.71545219]
[148.53247070 -1.73041332]
[147.86268616 13.25462532]
[143.81072998 22.57191467]
[137.63186646 29.15200996]
[130.49746704 32.64096832]
[123.58363342 33.10833740]
[126.24942780 47.86955261]
[128.91522217 62.63077164]
[142.53854370 68.90813446]
[155.49153137 61.34375381]
[168.44453430 53.77937317]
[181.39753723 46.21499634]
[194.35054016 38.65061569]
[207.30352783 31.08623695]
[207.33030701 15.79092693]
[214.95901489 2.64940572]
[228.05427551 -4.85928202]
[243.04937744 -4.80544806]
[255.91752625 2.69631290]
[268.87051392 -4.86806583]
[276.88555908 -18.50879669]
[291.77786255 -18.24564171]
[304.73086548 -25.81002045]
[317.68383789 -33.37440109]
[325.69891357 -47.01513290]
[340.59118652 -46.75197601]
[353.54418945 -54.31635284]
[361.19882202 -68.81941223]
[377.59417725 -69.17136383]
[385.86413574 -55.01015472]
[377.50125122 -40.90362167]
[361.10855103 -41.36335754]
[348.15554810 -33.79897690]
[341.06698608 -20.69930077]
[325.24822998 -20.42140198]
[312.29522705 -12.85702229]
[299.34222412 -5.29264355]
[292.25366211 7.80703306]
[276.43490601 8.08493233]
[263.48190308 15.64931107]
[263.69238281 30.54297829]
[256.37100220 43.62934875]
[243.39659119 51.34500122]
[228.20245361 51.53172302]
[214.86790466 44.03923798]
[201.91491699 51.60361481]
[188.96191406 59.16799545]
[176.00891113 66.73237610]
[163.05592346 74.29675293]
[150.10292053 81.86112976]
[147.87780762 96.69517517]
[158.04135132 107.72705078]
[168.20489502 118.75892639]
[178.36843872 129.79080200]
[188.53198242 140.82267761]
[206.23138428 145.90332031]
[209.40478516 163.16299438]
[219.73146057 174.04232788]
[230.05813599 184.92166138]
[247.83120728 189.73822021]
[251.26123047 206.94873047]
[261.74874878 217.67311096]
[272.23623657 228.39749146]
[287.41671753 232.85438538]
[290.78335571 247.36352539]
[301.27084351 258.08789062]
[311.75833130 268.81228638]
[322.24584961 279.53665161]
[332.81289673 290.18267822]
[343.45889282 300.74972534]
[354.10491943 311.31677246]
[370.09042358 314.97674561]
[374.65426636 330.72802734]
[363.10156250 342.36706543]
[347.31674194 337.92059326]
[343.53787231 321.96276855]
[332.89184570 311.39572144]
[322.24584961 300.82867432]
[315.28405762 298.34765625]
[311.52145386 290.02416992]
[301.03396606 279.29977417]
[290.54647827 268.57540894]
[280.05895996 257.85101318]
[265.62863159 254.16120911]
[261.51187134 238.88499451]
[251.02435303 228.16061401]
[240.53684998 217.43623352]
[228.44862366 216.98765564]
[219.62355042 208.13883972]
[219.17880249 195.24833679]
[208.85212708 184.36900330]
[198.52545166 173.48966980]
[186.44525146 172.86116028]
[177.75288391 163.88192749]
[177.50010681 150.98623657]
[167.33656311 139.95434570]
[157.17301941 128.92247009]
[147.00947571 117.89060211]
[136.84591675 106.85871887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 47]
[4 46]
[5 45]
[6 44]
[7 43]
[8 42]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[18 32]
[19 31]
[48 77]
[49 76]
[50 75]
[51 74]
[53 72]
[54 71]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[80 119]
[81 118]
[82 117]
[83 100]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
[120 161]
[121 160]
[122 159]
[123 158]
[124 157]
[125 156]
[130 151]
[131 150]
[133 148]
[134 147]
[135 146]
[137 144]
[138 143]
[162 210]
[163 209]
[164 208]
[165 207]
[166 206]
[168 203]
[169 202]
[170 201]
[172 198]
[173 197]
[174 196]
[176 194]
[177 193]
[178 192]
[179 191]
[180 189]
[181 188]
[182 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
