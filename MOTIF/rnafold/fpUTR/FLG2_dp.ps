%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FLG2)
} def

/sequence { (\
ACCCUGCAAGCUGCAUCAGGCUUUAUCCUACUUGUUCCUUUGGUGAACCAGGUUCACUUAAACUUGCAAAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 44 0.003514870 ubox
2 20 0.231716914 ubox
2 43 0.003754084 ubox
3 19 0.232389696 ubox
3 20 0.168172297 ubox
3 42 0.003771144 ubox
3 52 0.005383236 ubox
4 10 0.004263521 ubox
4 19 0.169926172 ubox
4 20 0.006749533 ubox
4 51 0.005442966 ubox
4 73 0.041013695 ubox
5 9 0.004005825 ubox
5 15 0.314282009 ubox
5 18 0.140515689 ubox
5 19 0.004875973 ubox
5 25 0.152887389 ubox
5 30 0.009627036 ubox
5 50 0.005442601 ubox
5 68 0.717756248 ubox
5 72 0.034294891 ubox
6 14 0.343509341 ubox
6 17 0.103051129 ubox
6 21 0.019672771 ubox
6 24 0.164751593 ubox
6 29 0.010007797 ubox
6 35 0.020050431 ubox
6 49 0.005373863 ubox
6 67 0.775922847 ubox
7 13 0.347032835 ubox
7 20 0.019689348 ubox
7 34 0.021062054 ubox
7 42 0.007884981 ubox
7 66 0.776011874 ubox
8 12 0.281258729 ubox
8 23 0.469328666 ubox
8 24 0.034131119 ubox
8 33 0.020554820 ubox
8 40 0.024184074 ubox
8 41 0.007850185 ubox
8 65 0.764453537 ubox
9 22 0.542626939 ubox
9 23 0.027345455 ubox
9 24 0.005787222 ubox
9 32 0.018824455 ubox
9 36 0.009807051 ubox
9 39 0.041389939 ubox
9 40 0.007525539 ubox
9 58 0.005671226 ubox
9 64 0.747588214 ubox
9 65 0.003962210 ubox
10 21 0.561194680 ubox
10 22 0.005393079 ubox
10 23 0.004515194 ubox
10 31 0.018211100 ubox
10 35 0.016007224 ubox
10 38 0.052656211 ubox
10 39 0.006227425 ubox
10 57 0.006291383 ubox
10 63 0.735255100 ubox
10 64 0.003465202 ubox
10 67 0.005240804 ubox
11 19 0.220257842 ubox
11 20 0.560089403 ubox
11 34 0.031889473 ubox
11 51 0.012206396 ubox
11 66 0.005231903 ubox
12 18 0.232230372 ubox
12 19 0.547084087 ubox
12 25 0.005641494 ubox
12 30 0.010312419 ubox
12 34 0.012250016 ubox
12 42 0.004260016 ubox
12 50 0.012248309 ubox
12 56 0.026322686 ubox
12 60 0.034477081 ubox
12 68 0.020825092 ubox
13 17 0.233648533 ubox
13 21 0.202305185 ubox
13 29 0.006208522 ubox
13 33 0.014400823 ubox
13 35 0.535357222 ubox
13 41 0.003602010 ubox
13 49 0.012235188 ubox
13 53 0.003212587 ubox
13 55 0.027114723 ubox
13 59 0.028661879 ubox
13 67 0.022500134 ubox
14 20 0.202505074 ubox
14 34 0.562152093 ubox
14 42 0.037271919 ubox
14 45 0.014168096 ubox
14 52 0.003238960 ubox
14 66 0.022461789 ubox
15 26 0.005814663 ubox
15 33 0.548634858 ubox
15 35 0.039046087 ubox
15 41 0.037523523 ubox
15 44 0.014506089 ubox
15 53 0.027769733 ubox
15 65 0.020289726 ubox
16 25 0.006308665 ubox
16 34 0.027396695 ubox
16 43 0.014596468 ubox
16 52 0.028095214 ubox
17 34 0.173046272 ubox
17 42 0.021853845 ubox
17 51 0.027979537 ubox
17 66 0.020052812 ubox
18 24 0.005164619 ubox
18 29 0.625399390 ubox
18 32 0.077984227 ubox
18 33 0.173396292 ubox
18 36 0.004386432 ubox
18 39 0.081261337 ubox
18 40 0.012344094 ubox
18 41 0.019956162 ubox
18 64 0.004624149 ubox
18 65 0.020416865 ubox
19 23 0.004011973 ubox
19 27 0.025555903 ubox
19 28 0.664569190 ubox
19 29 0.056610866 ubox
19 31 0.083242035 ubox
19 32 0.173163053 ubox
19 35 0.004247200 ubox
19 36 0.052305061 ubox
19 37 0.017038333 ubox
19 38 0.089955887 ubox
19 39 0.015129337 ubox
19 40 0.016079361 ubox
19 49 0.029174772 ubox
19 54 0.009390093 ubox
19 63 0.004857961 ubox
19 64 0.021253117 ubox
20 26 0.021875130 ubox
20 27 0.658251729 ubox
20 28 0.059258000 ubox
20 31 0.172968744 ubox
20 32 0.003372083 ubox
20 35 0.103921620 ubox
20 36 0.013415658 ubox
20 37 0.088938794 ubox
20 38 0.018344938 ubox
20 39 0.011695704 ubox
20 48 0.029234832 ubox
20 53 0.011261069 ubox
20 63 0.021334415 ubox
20 67 0.004797580 ubox
21 34 0.112001852 ubox
21 52 0.011391888 ubox
21 66 0.004838664 ubox
21 73 0.048216284 ubox
22 47 0.028949294 ubox
22 51 0.011022768 ubox
22 61 0.009237077 ubox
22 62 0.037944318 ubox
22 70 0.003443536 ubox
22 71 0.007293088 ubox
22 72 0.049524708 ubox
23 46 0.029641526 ubox
23 47 0.004673045 ubox
23 50 0.008958827 ubox
23 60 0.009761689 ubox
23 61 0.043059090 ubox
23 70 0.008455705 ubox
23 71 0.049778936 ubox
23 72 0.003970934 ubox
24 30 0.036558027 ubox
24 34 0.064212545 ubox
24 42 0.005950563 ubox
24 45 0.029757316 ubox
24 46 0.005796836 ubox
24 60 0.044163704 ubox
24 61 0.003186776 ubox
24 69 0.006428637 ubox
24 70 0.049102480 ubox
24 71 0.004297446 ubox
25 29 0.034229161 ubox
25 33 0.068548836 ubox
25 35 0.019930851 ubox
25 41 0.008238406 ubox
25 44 0.029191248 ubox
25 59 0.043657938 ubox
26 34 0.020362006 ubox
26 43 0.019157922 ubox
26 46 0.005705237 ubox
27 42 0.019186562 ubox
27 43 0.025736565 ubox
27 45 0.005856685 ubox
27 52 0.006514979 ubox
28 42 0.029044557 ubox
28 43 0.006271016 ubox
28 51 0.006566444 ubox
28 73 0.273336855 ubox
29 42 0.007459443 ubox
29 45 0.009329172 ubox
29 50 0.006198014 ubox
29 60 0.019416344 ubox
29 66 0.003437793 ubox
29 72 0.275432692 ubox
30 41 0.008730555 ubox
30 44 0.011739270 ubox
30 53 0.053755856 ubox
30 59 0.020552968 ubox
30 65 0.004404583 ubox
31 43 0.012345767 ubox
31 51 0.016549481 ubox
31 52 0.056101349 ubox
31 73 0.057485565 ubox
32 42 0.012798083 ubox
32 50 0.016466627 ubox
32 51 0.056019312 ubox
32 61 0.021632840 ubox
32 62 0.010318986 ubox
32 69 0.560510029 ubox
32 70 0.033591324 ubox
32 71 0.014341492 ubox
32 72 0.052398939 ubox
33 42 0.009717381 ubox
33 50 0.055453343 ubox
33 56 0.047921035 ubox
33 60 0.023778273 ubox
33 61 0.011493829 ubox
33 66 0.003197402 ubox
33 68 0.613720148 ubox
33 69 0.026932445 ubox
33 70 0.008700798 ubox
33 71 0.028351848 ubox
34 41 0.024249044 ubox
34 48 0.044745173 ubox
34 49 0.040206756 ubox
34 55 0.053199150 ubox
34 57 0.011270401 ubox
34 59 0.023741543 ubox
34 63 0.111870099 ubox
34 65 0.007279845 ubox
34 67 0.622862355 ubox
35 46 0.004369703 ubox
35 47 0.058852103 ubox
35 56 0.010996927 ubox
35 61 0.009773792 ubox
35 62 0.112735631 ubox
35 66 0.618505760 ubox
35 69 0.004919137 ubox
36 42 0.005762993 ubox
36 45 0.004600765 ubox
36 46 0.058957353 ubox
36 60 0.010534960 ubox
36 61 0.101621414 ubox
36 68 0.005203077 ubox
37 42 0.027049659 ubox
37 43 0.017431653 ubox
37 45 0.058435781 ubox
37 52 0.054959445 ubox
38 42 0.024473199 ubox
38 51 0.054740950 ubox
38 52 0.008698739 ubox
38 73 0.010665219 ubox
39 50 0.037614379 ubox
39 51 0.007193035 ubox
39 52 0.017567179 ubox
39 61 0.388739460 ubox
39 62 0.566355394 ubox
39 70 0.006475657 ubox
39 72 0.010853327 ubox
40 47 0.005207033 ubox
40 50 0.007925265 ubox
40 51 0.022956298 ubox
40 60 0.408041525 ubox
40 61 0.627682935 ubox
40 62 0.075263008 ubox
40 69 0.007200300 ubox
40 71 0.010723599 ubox
41 46 0.005710970 ubox
41 50 0.044622369 ubox
41 60 0.615656293 ubox
41 61 0.076422828 ubox
41 68 0.007386274 ubox
41 70 0.010501650 ubox
42 49 0.060215499 ubox
42 58 0.855638740 ubox
42 59 0.436918281 ubox
42 67 0.006863644 ubox
43 48 0.059930832 ubox
43 57 0.993161032 ubox
43 58 0.062267459 ubox
44 56 0.995278657 ubox
44 68 0.003882477 ubox
45 55 0.995598344 ubox
45 67 0.004076524 ubox
46 53 0.004829271 ubox
46 54 0.995111976 ubox
47 53 0.992297579 ubox
48 52 0.982820373 ubox
49 66 0.013924777 ubox
50 58 0.008384696 ubox
50 59 0.005649869 ubox
50 65 0.015225324 ubox
51 57 0.009349579 ubox
51 58 0.006982821 ubox
51 64 0.016963503 ubox
52 57 0.007580372 ubox
52 63 0.018581815 ubox
53 62 0.018738893 ubox
54 61 0.017293539 ubox
60 65 0.004215187 ubox
63 73 0.040305117 ubox
64 71 0.009192066 ubox
64 72 0.041007931 ubox
64 73 0.003954151 ubox
65 70 0.010191410 ubox
65 71 0.040817027 ubox
65 72 0.006386427 ubox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
13 35 0.9500000 lbox
14 34 0.9500000 lbox
15 33 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
44 56 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
showpage
end
%%EOF
