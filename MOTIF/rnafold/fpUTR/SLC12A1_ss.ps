%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACAUUUCCUCAGAAGAAGGCUCCUUGGUGCUUUGAAGAACAUCCUGAAGAUUAUAUCGGAGACAAUAUAUCAAGAAUCUAUUUAUUGAAUCAUCUAGAACAAAAGCCAGGAGCUCCCUAAUGGAAGCACAUUAGUGUUUAUUUUGAUGAAGAAAUAUAUAGAUUUUUUAAAACAACCACAAAGUAGAUAGCUCAGUAAAAAAUCAAUUUUGGAAG\
) } def
/len { sequence length } bind def

/coor [
[109.39619446 207.19944763]
[94.42420197 211.71311951]
[80.07411194 205.49951172]
[73.12160492 191.49249268]
[76.84943390 176.30575562]
[89.49744415 167.11000061]
[90.36560059 152.13513184]
[91.23376465 137.16027832]
[92.10192108 122.18542480]
[90.35912323 137.08383179]
[81.14301300 148.91867065]
[67.12569427 154.25859070]
[52.37128830 151.55534363]
[41.15764618 141.59269714]
[36.73601532 127.25920105]
[40.38838577 112.71065521]
[51.05580139 102.16521454]
[65.64538574 98.68040466]
[79.92504883 103.26523590]
[65.93565369 97.85256195]
[51.94626617 92.43989563]
[37.95687866 87.02722931]
[23.96748924 81.61455536]
[9.97809982 76.20188904]
[-4.01129007 70.78922272]
[-13.13939190 70.61170959]
[-18.16308784 65.19560242]
[-32.07265472 59.58098221]
[-45.98221588 53.96635818]
[-58.13386917 58.28194046]
[-69.60192108 53.32255173]
[-74.45728302 42.24627686]
[-88.28411102 36.43087387]
[-102.11093140 30.61547089]
[-115.93775940 24.80006790]
[-125.96749878 38.07408524]
[-139.82341003 47.75065994]
[-156.24272156 52.75004196]
[-173.66651917 52.42795944]
[-190.38757324 46.65369415]
[-204.71765137 35.83857727]
[-215.15776062 20.91064453]
[-220.55418396 3.23642731]
[-235.54437256 3.77921081]
[-250.53022766 4.43048811]
[-265.51095581 5.19022560]
[-280.49172974 5.94996357]
[-295.47247314 6.70970106]
[-303.83248901 19.78216743]
[-318.29196167 25.41274834]
[-333.29089355 21.43637276]
[-343.06192017 9.38203430]
[-343.84783936 -6.11512470]
[-335.34646606 -19.09613228]
[-320.82678223 -24.56952477]
[-305.87185669 -20.43067169]
[-296.23220825 -8.27104664]
[-281.25146484 -9.03078461]
[-266.27072144 -9.79052162]
[-251.28996277 -10.55025959]
[-244.77189636 -14.02682400]
[-236.08714294 -11.21096516]
[-221.09696960 -11.75374889]
[-218.13929749 -18.64593315]
[-231.92367554 -24.56126976]
[-245.70803833 -30.47660828]
[-259.49240112 -36.39194489]
[-274.43005371 -37.75835037]
[-277.74630737 -52.38716888]
[-264.85818481 -60.06152344]
[-253.57707214 -50.17631149]
[-239.79269409 -44.26097488]
[-226.00833130 -38.34563828]
[-212.22396851 -32.43030167]
[-209.26629639 -39.32248306]
[-219.20062256 -50.56121445]
[-234.13748169 -55.77664948]
[-236.76945496 -70.43686676]
[-246.70378113 -81.67559814]
[-262.13665771 -80.06119537]
[-275.55413818 -87.85544586]
[-281.79696655 -102.06131744]
[-278.46463013 -117.21635437]
[-266.83847046 -127.49314117]
[-251.38900757 -128.94003296]
[-238.05685425 -121.00068665]
[-231.96850586 -106.72792816]
[-235.46505737 -91.60993195]
[-225.53071594 -80.37120056]
[-211.30442810 -75.95963287]
[-207.96189880 -60.49554443]
[-198.02757263 -49.25681305]
[-183.52920532 -56.83484268]
[-167.71224976 -60.10956955]
[-151.80969238 -58.94127274]
[-137.02995300 -53.53219986]
[-124.46508026 -44.40250778]
[-115.01013947 -32.34242249]
[-109.29976654 -18.34480858]
[-107.66630554 -3.52389979]
[-110.12235260 10.97324276]
[-96.29553223 16.78864670]
[-82.46870422 22.60404968]
[-68.64187622 28.41945267]
[-51.37222672 25.29007149]
[-40.36759186 40.05679321]
[-26.45802879 45.67141724]
[-12.54846382 51.28604126]
[1.40137887 56.79983139]
[15.39076805 62.21249771]
[29.38015747 67.62516785]
[43.36954880 73.03783417]
[57.35893631 78.45050812]
[71.34832764 83.86317444]
[85.33771515 89.27584076]
[88.09323120 82.17297363]
[94.16433716 75.98926544]
[103.12789917 72.19360352]
[110.59653473 59.18516159]
[118.06517029 46.17672348]
[125.53380585 33.16828156]
[133.00244141 20.15984154]
[140.47106934 7.15140200]
[136.10238647 -8.03708363]
[143.82612610 -21.82545662]
[159.05995178 -26.03332138]
[172.76589966 -18.16422462]
[176.81246948 -2.88676333]
[168.79890442 10.73521709]
[153.47950745 14.62003613]
[146.01087952 27.62847519]
[138.54223633 40.63691711]
[131.07360840 53.64535522]
[123.60497284 66.65379333]
[116.13634491 79.66223907]
[123.60497284 92.67067719]
[138.60458374 92.77925873]
[153.60418701 92.88783264]
[168.60379028 92.99641418]
[183.60340881 93.10499573]
[198.60301208 93.21356964]
[213.60261536 93.32215118]
[228.60221863 93.43073273]
[243.60183716 93.53931427]
[258.60144043 93.64788818]
[273.60104370 93.75646973]
[282.20062256 90.69036102]
[288.81661987 93.97676849]
[303.81307983 94.30248260]
[318.80325317 93.75969696]
[333.73687744 92.35023499]
[348.67050171 90.94077301]
[363.60415649 89.53131104]
[378.53778076 88.12184906]
[393.47140503 86.71238708]
[408.40505981 85.30292511]
[418.28649902 72.96871185]
[434.00427246 71.31740570]
[446.23330688 81.32868958]
[447.71835327 97.06305695]
[437.57833862 109.18557739]
[421.82916260 110.50418091]
[409.81451416 100.23655701]
[394.88088989 101.64601898]
[379.94723511 103.05548096]
[365.01361084 104.46494293]
[350.07998657 105.87440491]
[335.14633179 107.28386688]
[320.21270752 108.69333649]
[332.40328979 117.43344879]
[337.23468018 131.63407898]
[332.90365601 145.99520874]
[321.02667236 155.15695190]
[306.03649902 155.69990540]
[293.52783203 147.42144775]
[288.16915894 133.41128540]
[291.96051025 118.89833832]
[303.48736572 109.29894257]
[288.49090576 108.97322845]
[273.49246216 108.75608063]
[258.49285889 108.64749908]
[243.49325562 108.53891754]
[228.49365234 108.43033600]
[213.49403381 108.32176208]
[198.49443054 108.21318054]
[183.49482727 108.10459900]
[168.49522400 107.99601746]
[153.49560547 107.88744354]
[138.49600220 107.77886200]
[123.49639893 107.67028046]
[136.60772705 114.95676422]
[149.71907043 122.24324799]
[162.83041382 129.52972412]
[175.94174194 136.81620789]
[190.75469971 139.17767334]
[203.90928650 146.38577271]
[213.87142944 157.59986877]
[219.47929382 171.51216125]
[220.07890320 186.50016785]
[215.60032654 200.81596375]
[206.56585693 212.79003906]
[194.02909851 221.02593994]
[179.45213318 224.56317139]
[164.53494263 222.98922729]
[151.01718140 216.48767090]
[140.47532654 205.81672668]
[134.13879395 192.22082520]
[132.74656677 177.28514099]
[126.32911682 163.72724915]
[119.91166687 150.16935730]
[113.49422455 136.61148071]
[107.07677460 123.05358887]
[106.20861816 138.02844238]
[105.34046173 153.00329590]
[104.47229767 167.97814941]
[115.97290802 178.57391357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 215]
[7 214]
[8 213]
[9 212]
[19 115]
[20 114]
[21 113]
[22 112]
[23 111]
[24 110]
[25 109]
[27 108]
[28 107]
[29 106]
[32 104]
[33 103]
[34 102]
[35 101]
[43 63]
[44 62]
[45 60]
[46 59]
[47 58]
[48 57]
[75 92]
[76 91]
[78 89]
[79 88]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[136 190]
[137 189]
[138 188]
[139 187]
[140 186]
[141 185]
[142 184]
[143 183]
[144 182]
[145 181]
[146 180]
[148 179]
[149 178]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
