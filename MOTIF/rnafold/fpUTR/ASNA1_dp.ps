%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ASNA1)
} def

/sequence { (\
GUUCUUCGUAUGGUGCGCUCCGCUGGAUCACGUGAGCCAGUUCCAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.010337909 ubox
1 11 0.026468124 ubox
1 16 0.189990628 ubox
1 18 0.026060898 ubox
1 23 0.009059625 ubox
1 37 0.122372870 ubox
2 8 0.011881164 ubox
2 10 0.031115931 ubox
2 15 0.186484967 ubox
2 17 0.024532828 ubox
2 22 0.009124054 ubox
2 36 0.122636409 ubox
2 46 0.011423073 ubox
2 47 0.012990615 ubox
3 12 0.003312888 ubox
3 13 0.029651814 ubox
3 35 0.122753702 ubox
3 45 0.008464550 ubox
3 46 0.017128127 ubox
4 12 0.037583452 ubox
4 13 0.189277784 ubox
4 34 0.122729346 ubox
4 36 0.010976194 ubox
4 40 0.004930605 ubox
5 12 0.186249637 ubox
5 13 0.004536553 ubox
5 35 0.010751284 ubox
5 36 0.014904106 ubox
5 39 0.004090707 ubox
5 46 0.025080964 ubox
5 47 0.025228004 ubox
6 12 0.005323892 ubox
6 13 0.025952820 ubox
6 34 0.009706463 ubox
6 35 0.019614405 ubox
6 45 0.019070641 ubox
6 46 0.034936373 ubox
7 12 0.030661639 ubox
7 15 0.005017560 ubox
7 17 0.112226990 ubox
7 22 0.003427460 ubox
7 32 0.121714332 ubox
7 34 0.020234889 ubox
8 14 0.004194686 ubox
8 16 0.120270236 ubox
8 18 0.014586106 ubox
8 21 0.004808357 ubox
8 23 0.005470145 ubox
8 31 0.121512910 ubox
8 33 0.019252251 ubox
8 41 0.008184892 ubox
9 15 0.119552163 ubox
9 17 0.014350033 ubox
9 22 0.005029784 ubox
9 27 0.003675819 ubox
9 30 0.100927652 ubox
9 32 0.012110117 ubox
9 40 0.005472112 ubox
10 14 0.099508950 ubox
10 28 0.064793271 ubox
10 41 0.013956813 ubox
11 22 0.040706197 ubox
11 25 0.011355753 ubox
11 27 0.064671382 ubox
11 30 0.067030417 ubox
11 39 0.077606006 ubox
11 40 0.012121628 ubox
11 45 0.848491486 ubox
12 16 0.004393333 ubox
12 19 0.009679150 ubox
12 20 0.006311584 ubox
12 21 0.144764660 ubox
12 24 0.020232198 ubox
12 29 0.097977273 ubox
12 38 0.085827614 ubox
12 42 0.015662637 ubox
12 43 0.026295551 ubox
12 44 0.942002547 ubox
13 18 0.010528410 ubox
13 19 0.005179552 ubox
13 20 0.144665817 ubox
13 23 0.021165426 ubox
13 28 0.098904933 ubox
13 31 0.006118345 ubox
13 37 0.085543496 ubox
13 41 0.018325426 ubox
13 42 0.024170493 ubox
13 43 0.941762105 ubox
14 22 0.021197729 ubox
14 25 0.008607577 ubox
14 27 0.098723125 ubox
14 30 0.006420871 ubox
14 34 0.006144858 ubox
14 36 0.081540776 ubox
14 39 0.351867311 ubox
14 40 0.040811319 ubox
14 45 0.005953113 ubox
15 21 0.021488909 ubox
15 23 0.079888398 ubox
15 29 0.006510691 ubox
15 33 0.039812112 ubox
15 38 0.358913706 ubox
15 41 0.840191401 ubox
15 44 0.006544760 ubox
16 22 0.080154914 ubox
16 25 0.095064088 ubox
16 32 0.040967501 ubox
16 34 0.072863467 ubox
16 40 0.851109375 ubox
17 21 0.075403439 ubox
17 23 0.070025135 ubox
17 24 0.051206068 ubox
17 31 0.040899211 ubox
17 33 0.074577178 ubox
17 37 0.949367464 ubox
17 41 0.010979452 ubox
18 22 0.071080802 ubox
18 32 0.074538027 ubox
18 36 0.952900375 ubox
18 40 0.011024716 ubox
19 27 0.082416651 ubox
19 35 0.952509979 ubox
19 39 0.010378558 ubox
20 26 0.082999616 ubox
20 34 0.912483678 ubox
21 25 0.082411153 ubox
21 32 0.860067782 ubox
21 34 0.274351676 ubox
22 31 0.857769489 ubox
22 33 0.386894090 ubox
22 37 0.015644281 ubox
22 41 0.245420018 ubox
23 32 0.388775663 ubox
23 36 0.015663784 ubox
23 40 0.259219391 ubox
24 30 0.504482265 ubox
24 32 0.110057824 ubox
24 35 0.015388742 ubox
24 39 0.260005396 ubox
24 45 0.023153436 ubox
25 29 0.499117684 ubox
25 31 0.230810502 ubox
25 33 0.004055717 ubox
25 38 0.260197932 ubox
25 44 0.025333604 ubox
26 37 0.258863143 ubox
26 43 0.025337409 ubox
27 33 0.005343442 ubox
27 42 0.024590683 ubox
28 32 0.005013951 ubox
28 35 0.235782032 ubox
29 34 0.257304269 ubox
30 41 0.021786704 ubox
31 40 0.022826181 ubox
33 39 0.006354718 ubox
34 38 0.006454984 ubox
41 47 0.003695608 ubox
42 46 0.005167558 ubox
11 45 0.9500000 lbox
12 44 0.9500000 lbox
13 43 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
showpage
end
%%EOF
