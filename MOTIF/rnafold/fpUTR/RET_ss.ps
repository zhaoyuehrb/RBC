%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUACCCGCUCCUCCGGCGCAGCCGGCGCUUACCUCGCUUCAGUCCCGCGACCGAAGCAGGGCGCGCAGCAGCGCUGAGUGCCCCGGAACGUGCGUCGCGCCCCCAGUGUCCGUCGCGUCCGCCGCGCCCCGGGCGGGGAUGGGGCGGCCAGACUGAGCGCCGCACCCGCCAUCCAGACCCGCCGGCCCUAGCCGCAGUCCCUCCAGCCGUGGCCCCAGCGCGCACGGGCG\
) } def
/len { sequence length } bind def

/coor [
[142.18402100 479.91366577]
[136.08137512 494.18029785]
[122.74127960 502.10629272]
[107.29326630 500.64392090]
[95.67741394 490.35549927]
[92.36026001 475.19714355]
[98.61730957 460.99752808]
[112.04260254 453.21670532]
[113.45624542 438.28347778]
[114.86988068 423.35025024]
[116.28352356 408.41699219]
[117.69715881 393.48376465]
[106.07472229 386.32748413]
[98.63099670 374.80822754]
[96.86493683 361.14065552]
[101.17732239 347.98193359]
[110.78159332 337.91503906]
[123.84664917 332.94177246]
[125.46150208 318.02893066]
[127.07635498 303.11611938]
[128.69120789 288.20330811]
[117.26439667 257.67465210]
[133.93136597 236.67282104]
[129.54687500 222.32791138]
[125.16236877 207.98301697]
[120.77787018 193.63812256]
[116.39336395 179.29321289]
[112.00886536 164.94831848]
[107.62436676 150.60342407]
[100.20223236 151.17417908]
[92.77582550 150.66209412]
[85.50227356 149.07803345]
[78.53549194 146.45547485]
[72.02289581 142.84994507]
[66.10227966 138.33773804]
[60.89893723 133.01429749]
[56.52295685 126.99228668]
[53.06693649 120.39913177]
[38.58242035 124.29769135]
[24.09790421 128.19625854]
[9.61338806 132.09481812]
[-4.87112761 135.99337769]
[-16.18609238 147.05151367]
[-30.48694038 142.88796997]
[-44.97145844 146.78654480]
[-59.45597458 150.68510437]
[-70.64954376 162.66992188]
[-86.56224060 158.70532227]
[-90.82444763 142.86975098]
[-79.05157471 131.45347595]
[-63.35453415 136.20057678]
[-48.87001801 132.30201721]
[-34.38550186 128.40345764]
[-24.10656929 117.62418365]
[-8.76969051 121.50886536]
[5.71482563 117.61029816]
[20.19934082 113.71173859]
[34.68385696 109.81317139]
[49.16837311 105.91461182]
[48.94167709 96.55261993]
[50.42479324 87.30606842]
[36.59580231 81.49582672]
[22.76680946 75.68557739]
[8.93781757 69.87532806]
[-4.89117432 64.06507874]
[-18.72016525 58.25483322]
[-34.44004059 60.04261017]
[-43.17668533 47.97943115]
[-57.00568008 42.16918564]
[-70.83467102 36.35893631]
[-84.66366577 30.54868889]
[-101.60832977 29.98772240]
[-105.76003265 13.54996967]
[-91.11398315 5.01009178]
[-78.85341644 16.71969604]
[-65.02442169 22.52994347]
[-51.19543076 28.34019089]
[-37.36643982 34.15044022]
[-22.63570786 31.94707489]
[-12.90991879 44.42584229]
[0.91907364 50.23608780]
[14.74806595 56.04633713]
[28.57705688 61.85658264]
[42.40605164 67.66683197]
[56.23504257 73.47708130]
[79.54322815 53.09203339]
[110.34114838 49.88116455]
[115.49256134 35.79347610]
[107.00688171 22.93659210]
[107.71062469 7.72613049]
[117.12454987 -4.01448441]
[131.47491455 -7.91384315]
[136.62632751 -22.00153160]
[141.77774048 -36.08921814]
[146.92915344 -50.17690659]
[152.08056641 -64.26459503]
[151.32318115 -70.80761719]
[153.62817383 -75.98111725]
[157.56547546 -78.65952301]
[163.09486389 -92.60318756]
[168.62425232 -106.54685211]
[174.15364075 -120.49052429]
[169.27670288 -130.19122314]
[170.50956726 -140.75779724]
[177.20700073 -148.73886108]
[186.97892761 -151.66108704]
[192.88226318 -165.45059204]
[198.78561401 -179.24009705]
[204.68896484 -193.02960205]
[196.98452759 -210.35032654]
[204.27684021 -227.50149536]
[221.49475098 -233.75160217]
[227.02413940 -247.69526672]
[232.55352783 -261.63894653]
[238.08291626 -275.58261108]
[243.61230469 -289.52627563]
[241.50698853 -305.20678711]
[253.39100647 -314.18560791]
[258.92041016 -328.12927246]
[264.44979858 -342.07293701]
[269.97918701 -356.01660156]
[275.50857544 -369.96026611]
[275.76089478 -379.07550049]
[281.20764160 -384.05383301]
[286.92453003 -397.92169189]
[292.64141846 -411.78952026]
[298.35830688 -425.65737915]
[290.95443726 -439.43115234]
[294.18698120 -454.73098755]
[306.52957153 -464.33276367]
[322.15447998 -463.70281982]
[333.68405151 -453.13858032]
[335.67440796 -437.62820435]
[327.18572998 -424.49514771]
[312.22616577 -419.94049072]
[306.50927734 -406.07263184]
[300.79238892 -392.20480347]
[295.07550049 -378.33694458]
[289.45223999 -364.43087769]
[283.92285156 -350.48721313]
[278.39346313 -336.54354858]
[272.86407471 -322.59988403]
[267.33468628 -308.65621948]
[269.83551025 -293.97305298]
[257.55596924 -283.99688721]
[252.02658081 -270.05322266]
[246.49719238 -256.10955811]
[240.96780396 -242.16587830]
[235.43841553 -228.22221375]
[242.11770630 -218.99482727]
[243.53485107 -207.57151794]
[239.22402954 -196.76924133]
[230.14642334 -189.30804443]
[218.47846985 -187.12626648]
[212.57511902 -173.33674622]
[206.67178345 -159.54724121]
[200.76843262 -145.75773621]
[204.44979858 -126.76626587]
[188.09730530 -114.96113586]
[182.56791687 -101.01746368]
[177.03852844 -87.07379913]
[171.50914001 -73.13013458]
[166.16825867 -59.11318207]
[161.01684570 -45.02549362]
[155.86543274 -30.93780518]
[150.71401978 -16.85011673]
[145.56260681 -2.76242995]
[154.01254272 9.47426224]
[153.63221741 24.51817703]
[144.35800171 36.59468842]
[129.58024597 40.94489288]
[124.42883301 55.03257751]
[133.65412903 61.44825745]
[141.25677490 69.72270203]
[146.87025452 79.45696259]
[150.22387695 90.18170166]
[151.15596008 101.37982941]
[149.62158203 112.51142883]
[145.69468689 123.03979492]
[139.56463623 132.45729065]
[131.52699280 140.30987549]
[121.96926117 146.21891785]
[126.35376740 160.56381226]
[130.73826599 174.90872192]
[135.12277222 189.25361633]
[139.50726318 203.59851074]
[143.89176941 217.94342041]
[148.27627563 232.28831482]
[158.30093384 231.89355469]
[168.53411865 235.76995850]
[177.12545776 243.94186401]
[182.27191162 255.63386536]
[182.55804443 269.32534790]
[193.12882996 279.96765137]
[203.69963074 290.60995483]
[214.27041626 301.25222778]
[224.84120178 311.89453125]
[240.05595398 316.23294067]
[243.53559875 330.71539307]
[254.10638428 341.35766602]
[269.67276001 339.86709595]
[282.52606201 348.77365112]
[286.59735107 363.87194824]
[279.96429443 378.03302002]
[265.75881958 384.57046509]
[250.68829346 380.39749146]
[241.86859131 367.48443604]
[243.46409607 351.92846680]
[232.89331055 341.28616333]
[218.43464661 337.70898438]
[214.19891357 322.46533203]
[203.62811279 311.82302856]
[193.05732727 301.18072510]
[182.48654175 290.53842163]
[171.91575623 279.89614868]
[164.83781433 282.37664795]
[169.79858398 296.53259277]
[155.64256287 301.49313354]
[150.68196106 287.33764648]
[143.60403442 289.81814575]
[141.98918152 304.73095703]
[140.37432861 319.64379883]
[138.75947571 334.55661011]
[152.20994568 344.18557739]
[158.92651367 359.19958496]
[157.16065979 375.45788574]
[147.48908997 388.52874756]
[132.63040161 394.89739990]
[131.21676636 409.83062744]
[129.80311584 424.76388550]
[128.38948059 439.69711304]
[126.97584534 454.63034058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 232]
[9 231]
[10 230]
[11 229]
[12 228]
[18 223]
[19 222]
[20 221]
[21 220]
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[38 59]
[39 58]
[40 57]
[41 56]
[42 55]
[44 53]
[45 52]
[46 51]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[68 78]
[69 77]
[70 76]
[71 75]
[87 172]
[88 171]
[92 167]
[93 166]
[94 165]
[95 164]
[96 163]
[99 162]
[100 161]
[101 160]
[102 159]
[106 157]
[107 156]
[108 155]
[109 154]
[112 149]
[113 148]
[114 147]
[115 146]
[116 145]
[118 143]
[119 142]
[120 141]
[121 140]
[122 139]
[124 138]
[125 137]
[126 136]
[127 135]
[193 215]
[194 214]
[195 213]
[196 212]
[197 211]
[199 209]
[200 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
