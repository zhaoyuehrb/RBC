%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGUCUUUCCUCCUCCCCUCAGGAAGUAAAGUCCACUAGCAGGAGGGCCUAAAUCGUCUGAGCCCUCCUUGGCUCUUACAAUGCUCACUUGUUUUCACAAUGCAGCAAAAUGAAAUGCCUUAGAAAAAGAGUAACAUUCCAGAAAACGGUGUAAUUUAUUUUUCUUCCUUAAUUGCCCCAUCUGUGGAGGAUUUCUUUGCUGAACACCACAUCAAAGGGAUCUUCUGCAUUUAAAAUAGAAGAGGCAUC\
) } def
/len { sequence length } bind def

/coor [
[161.86245728 125.21444702]
[157.75590515 133.57063293]
[152.52743530 141.27470398]
[146.27861023 148.17698669]
[139.13081360 154.14344788]
[131.22288513 159.05813599]
[122.70844269 162.82562256]
[113.75289154 165.37271118]
[104.53018188 166.64990234]
[95.21947479 166.63241577]
[86.00163269 165.32058716]
[77.05570984 162.73988342]
[70.35481262 176.15992737]
[63.65391159 189.57998657]
[56.95301056 203.00004578]
[62.19602585 217.90931702]
[55.28571320 232.12280273]
[40.32184601 237.20790100]
[26.18221474 230.14770508]
[21.25561523 215.13090515]
[28.46491051 201.06671143]
[43.53295517 196.29914856]
[50.23385239 182.87908936]
[56.93475342 169.45903015]
[63.63565445 156.03897095]
[47.62215805 141.46437073]
[37.11143875 122.53356171]
[22.51176643 125.97588348]
[7.91209316 129.41819763]
[-6.68757915 132.86051941]
[-21.26542282 136.39413452]
[-35.82086563 140.01892090]
[-43.36845016 145.11677551]
[-50.58116913 143.59677124]
[-65.18083954 147.03909302]
[-79.78051758 150.48141479]
[-68.49140930 160.35845947]
[-69.04644012 175.34819031]
[-81.03507233 184.36332703]
[-95.58982849 180.73574829]
[-101.94515228 167.14863586]
[-95.40055084 153.65199280]
[-110.18692780 156.17449951]
[-124.97330475 158.69700623]
[-139.75967407 161.21951294]
[-154.54605103 163.74201965]
[-169.33242798 166.26452637]
[-184.11880493 168.78703308]
[-198.90518188 171.30955505]
[-211.20767212 181.25740051]
[-225.05484009 175.77059937]
[-239.84121704 178.29310608]
[-247.57850647 191.88237000]
[-262.25851440 197.27043152]
[-276.94982910 191.91319275]
[-284.71560669 178.34017944]
[-281.88909912 162.96015930]
[-269.80493164 153.03511047]
[-254.16883850 153.25132751]
[-242.36372375 163.50672913]
[-227.57734680 160.98422241]
[-216.33248901 151.21679688]
[-201.42770386 156.52317810]
[-186.64132690 154.00065613]
[-171.85494995 151.47814941]
[-157.06857300 148.95564270]
[-142.28218079 146.43313599]
[-127.49581146 143.91062927]
[-112.70943451 141.38812256]
[-97.92305756 138.86561584]
[-83.22283936 135.88174438]
[-68.62316132 132.43942261]
[-54.02349091 128.99710083]
[-39.44564819 125.46347809]
[-24.89020348 121.83869934]
[-19.17402267 117.18476868]
[-10.12989902 118.26084900]
[4.46977282 114.81852722]
[19.06944466 111.37620544]
[33.66911697 107.93389130]
[34.01176453 89.59397888]
[39.32962036 72.03864288]
[49.22174454 56.59145737]
[38.98643112 45.62613297]
[28.75111771 34.66080856]
[18.51580429 23.69548416]
[8.21206856 12.79442787]
[-2.15968561 1.95806646]
[-10.33164024 -2.06353450]
[-12.59238529 -9.07942963]
[-22.82769966 -20.04475403]
[-33.06301498 -31.01008034]
[-43.29832840 -41.97540283]
[-59.13264847 -46.24229050]
[-63.09254074 -62.15616226]
[-51.10440826 -73.34619141]
[-35.50061417 -68.30103302]
[-32.33300400 -52.21072006]
[-22.09768867 -41.24539185]
[-11.86237431 -30.28006935]
[-1.62706041 -19.31474304]
[8.67667484 -8.41368771]
[19.04842949 2.42267346]
[25.92593384 5.07478333]
[29.48112869 13.46016979]
[39.71644211 24.42549515]
[49.95175552 35.39081955]
[60.18706894 46.35614395]
[74.33231354 38.32421494]
[89.99942780 33.94910431]
[106.25947571 33.49021530]
[122.14839935 36.97475815]
[136.72412109 44.19613266]
[149.12243652 54.72617340]
[158.60823059 67.94054413]
[164.61907959 83.05574799]
[179.46395874 80.90413666]
[194.30883789 78.75251770]
[209.15373230 76.60090637]
[223.99861145 74.44928741]
[238.84349060 72.29767609]
[253.68836975 70.14605713]
[265.90042114 61.43593979]
[272.76873779 48.10080338]
[279.63708496 34.76566696]
[286.50543213 21.43052864]
[293.37377930 8.09539032]
[300.24212646 -5.23974752]
[307.11044312 -18.57488441]
[313.89520264 -31.95274544]
[320.59609985 -45.37280273]
[327.29699707 -58.79285812]
[333.99789429 -72.21291351]
[333.24047852 -88.01598358]
[345.84841919 -95.94623566]
[352.54931641 -109.36629486]
[359.25021362 -122.78635406]
[365.95111084 -136.20640564]
[372.65203857 -149.62646484]
[364.67849731 -162.83352661]
[365.13385010 -178.25416565]
[373.87277222 -190.96772766]
[388.10675049 -196.91734314]
[403.29370117 -194.20452881]
[414.58758545 -183.69493103]
[418.38455200 -168.74211121]
[413.47299194 -154.11747742]
[401.42016602 -144.48768616]
[386.07208252 -142.92556763]
[379.37118530 -129.50550842]
[372.67028809 -116.08544922]
[365.96939087 -102.66539764]
[359.26849365 -89.24533844]
[360.50521851 -74.40216827]
[347.41796875 -65.51201630]
[340.71707153 -52.09195709]
[334.01617432 -38.67190170]
[327.31527710 -25.25184441]
[327.13946533 -17.88279724]
[320.44558716 -11.70654488]
[313.57723999 1.62859297]
[306.70892334 14.96373081]
[299.84057617 28.29886818]
[292.97222900 41.63400650]
[286.10388184 54.96914291]
[279.23553467 68.30428314]
[281.54425049 75.44010162]
[293.96499634 67.03027344]
[306.38574219 58.62044907]
[318.80645752 50.21062088]
[327.67483521 38.11300659]
[341.18017578 31.58571815]
[356.16946411 32.15267181]
[369.14315796 39.68150330]
[377.07229614 52.41447067]
[378.10571289 67.37882996]
[372.00213623 81.08087921]
[360.18652344 90.32163239]
[345.41748047 92.94366455]
[331.14053345 88.33322144]
[316.14755249 88.79272461]
[301.15460205 89.25223541]
[286.16165161 89.71173859]
[288.47033691 96.84755707]
[301.84820557 103.63230896]
[315.22604370 110.41706085]
[328.60391235 117.20182037]
[341.98178101 123.98657227]
[355.35964966 130.77133179]
[368.73748779 137.55607605]
[382.11535645 144.34083557]
[395.49322510 151.12557983]
[408.87106323 157.91033936]
[422.24893188 164.69508362]
[435.62680054 171.47984314]
[449.00463867 178.26460266]
[462.38250732 185.04934692]
[475.76037598 191.83410645]
[489.13824463 198.61885071]
[502.51608276 205.40361023]
[518.32360840 204.74508667]
[526.17480469 217.40242004]
[539.55267334 224.18717957]
[553.86364746 217.88406372]
[568.86352539 222.30415344]
[577.46984863 235.36039734]
[575.61889648 250.88806152]
[564.18469238 261.55541992]
[548.56610107 262.32571411]
[536.13775635 252.83520508]
[532.76788330 237.56503296]
[519.39001465 230.78027344]
[504.53939819 231.92408752]
[495.73132324 218.78146362]
[482.35348511 211.99671936]
[468.97561646 205.21195984]
[455.59774780 198.42721558]
[442.21990967 191.64245605]
[428.84204102 184.85769653]
[415.46417236 178.07295227]
[402.08633423 171.28819275]
[388.70846558 164.50344849]
[375.33059692 157.71868896]
[361.95272827 150.93392944]
[348.57489014 144.14918518]
[335.19702148 137.36442566]
[321.81915283 130.57968140]
[308.44131470 123.79492188]
[295.06344604 117.01016998]
[281.68557739 110.22541809]
[290.17297363 122.59328461]
[289.57342529 137.58129883]
[282.95809937 151.04373169]
[271.45941162 160.67599487]
[257.04583740 164.82916260]
[242.18478394 162.79226685]
[229.42027283 154.91398621]
[220.93742371 142.54299927]
[218.18841553 127.79705811]
[221.64381409 113.20047760]
[230.71211243 101.25201416]
[243.84391785 93.99617767]
[255.83999634 84.99094391]
[240.99510193 87.14255524]
[226.15022278 89.29417419]
[211.30534363 91.44578552]
[196.46046448 93.59740448]
[181.61557007 95.74901581]
[166.77069092 97.90063477]
[166.41406250 107.20452881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 25]
[13 24]
[14 23]
[15 22]
[27 80]
[28 79]
[29 78]
[30 77]
[31 75]
[32 74]
[34 73]
[35 72]
[36 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[47 65]
[48 64]
[49 63]
[51 61]
[52 60]
[83 108]
[84 107]
[85 106]
[86 105]
[87 103]
[88 102]
[90 101]
[91 100]
[92 99]
[93 98]
[116 249]
[117 248]
[118 247]
[119 246]
[120 245]
[121 244]
[122 243]
[123 166]
[124 165]
[125 164]
[126 163]
[127 162]
[128 161]
[129 160]
[130 158]
[131 157]
[132 156]
[133 155]
[135 153]
[136 152]
[137 151]
[138 150]
[139 149]
[184 230]
[185 229]
[186 228]
[187 227]
[188 226]
[189 225]
[190 224]
[191 223]
[192 222]
[193 221]
[194 220]
[195 219]
[196 218]
[197 217]
[198 216]
[199 215]
[200 214]
[202 212]
[203 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
