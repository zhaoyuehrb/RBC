%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYP1A2)
} def

/sequence { (\
GAAGCUCCACACCAGCCAUUACAACCCUGCCAAUCUCAAGCACCUGCCUCUACAGUUGGUACAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.080500258 ubox
1 20 0.103308709 ubox
1 35 0.011256861 ubox
1 37 0.006068189 ubox
1 50 0.003575002 ubox
2 6 0.070304224 ubox
2 19 0.105449768 ubox
2 20 0.092806920 ubox
2 34 0.011170022 ubox
2 36 0.005653061 ubox
2 49 0.003508368 ubox
3 19 0.084213424 ubox
3 20 0.025746436 ubox
3 28 0.008949948 ubox
4 16 0.768495860 ubox
4 19 0.005656936 ubox
4 27 0.009658999 ubox
4 30 0.018981616 ubox
4 41 0.065025630 ubox
4 47 0.003518268 ubox
4 60 0.003453023 ubox
5 15 0.770204163 ubox
5 29 0.019066072 ubox
5 40 0.065100911 ubox
5 46 0.003524125 ubox
5 59 0.003223842 ubox
5 64 0.053431229 ubox
6 14 0.743029268 ubox
6 39 0.062441088 ubox
6 63 0.053174279 ubox
7 59 0.007817593 ubox
8 58 0.007883991 ubox
9 57 0.007034644 ubox
9 60 0.006658629 ubox
10 29 0.003910818 ubox
10 59 0.003912345 ubox
11 28 0.003662313 ubox
11 56 0.003179966 ubox
11 60 0.420149826 ubox
12 55 0.003176561 ubox
12 59 0.441164254 ubox
13 29 0.036589399 ubox
13 58 0.441360995 ubox
14 20 0.011790112 ubox
14 28 0.038450945 ubox
14 57 0.440751662 ubox
15 19 0.009211490 ubox
15 27 0.039047217 ubox
15 30 0.057613433 ubox
15 41 0.010966247 ubox
15 56 0.439468824 ubox
15 60 0.044618166 ubox
16 29 0.056174533 ubox
16 40 0.010962854 ubox
16 55 0.437114870 ubox
16 59 0.045641538 ubox
17 29 0.025767119 ubox
17 46 0.010538463 ubox
17 58 0.045654529 ubox
18 28 0.026935041 ubox
18 34 0.015993266 ubox
18 45 0.009985227 ubox
18 56 0.004133084 ubox
18 57 0.041589380 ubox
19 33 0.017135962 ubox
19 39 0.003429771 ubox
19 55 0.005061900 ubox
19 64 0.004970078 ubox
20 29 0.011620407 ubox
20 32 0.016508961 ubox
20 38 0.003590267 ubox
20 52 0.050372734 ubox
20 54 0.006783405 ubox
20 61 0.009865098 ubox
20 63 0.006470336 ubox
21 28 0.014477743 ubox
21 51 0.050626554 ubox
21 56 0.008011273 ubox
21 60 0.009851441 ubox
22 29 0.066183509 ubox
22 46 0.065508183 ubox
22 55 0.008151190 ubox
22 58 0.013507696 ubox
22 59 0.008997088 ubox
23 28 0.060487920 ubox
23 45 0.063731196 ubox
23 57 0.014019768 ubox
24 56 0.013945104 ubox
24 60 0.029302214 ubox
25 55 0.012811072 ubox
25 59 0.030265422 ubox
26 58 0.030068216 ubox
26 59 0.011371741 ubox
27 40 0.025556329 ubox
27 55 0.023285135 ubox
27 58 0.011608784 ubox
27 64 0.193910190 ubox
28 38 0.024798293 ubox
28 39 0.025965918 ubox
28 42 0.415057893 ubox
28 52 0.003856942 ubox
28 54 0.026603888 ubox
28 61 0.776229635 ubox
28 63 0.186267377 ubox
29 37 0.026897918 ubox
29 41 0.435435413 ubox
29 47 0.018072972 ubox
29 51 0.003365308 ubox
29 53 0.026591416 ubox
29 56 0.017571866 ubox
29 60 0.867119967 ubox
29 62 0.158380650 ubox
30 40 0.434765804 ubox
30 46 0.017600595 ubox
30 55 0.017723896 ubox
30 59 0.887267829 ubox
31 46 0.007131011 ubox
31 58 0.887455235 ubox
32 45 0.007825617 ubox
32 57 0.886273276 ubox
33 56 0.874569515 ubox
33 60 0.005593124 ubox
34 55 0.759649744 ubox
34 59 0.005356681 ubox
35 55 0.350410120 ubox
35 58 0.004829768 ubox
35 59 0.004497112 ubox
35 64 0.011168126 ubox
36 54 0.342740234 ubox
36 59 0.009029012 ubox
36 63 0.011116011 ubox
37 46 0.062668621 ubox
37 58 0.012180889 ubox
38 45 0.058161170 ubox
38 57 0.012285363 ubox
39 45 0.032022064 ubox
39 49 0.335559355 ubox
39 51 0.178603030 ubox
39 56 0.012257387 ubox
39 57 0.005865091 ubox
40 44 0.033186984 ubox
40 47 0.785249733 ubox
40 48 0.259837779 ubox
40 50 0.156353291 ubox
40 56 0.012343615 ubox
40 60 0.011480796 ubox
41 46 0.819655310 ubox
41 55 0.012372549 ubox
41 58 0.031695932 ubox
41 59 0.010657562 ubox
42 56 0.026159587 ubox
42 57 0.032669880 ubox
42 60 0.051834715 ubox
43 55 0.021477793 ubox
43 59 0.055681874 ubox
44 55 0.201893844 ubox
44 58 0.055526673 ubox
44 64 0.025516945 ubox
45 52 0.012071312 ubox
45 54 0.225206949 ubox
45 61 0.081749483 ubox
45 63 0.025103991 ubox
46 51 0.011564683 ubox
46 53 0.226490141 ubox
46 56 0.049650107 ubox
46 57 0.004328658 ubox
46 60 0.091226837 ubox
46 62 0.022917615 ubox
47 55 0.050406104 ubox
47 59 0.093283401 ubox
48 55 0.027304016 ubox
48 58 0.093267136 ubox
48 59 0.004353726 ubox
48 64 0.009047072 ubox
49 54 0.028203483 ubox
49 58 0.003984245 ubox
49 59 0.008855948 ubox
49 63 0.009047976 ubox
50 58 0.009697785 ubox
50 59 0.010679637 ubox
51 58 0.010613454 ubox
51 61 0.013424365 ubox
52 57 0.009484518 ubox
52 60 0.013831781 ubox
53 59 0.013854458 ubox
55 62 0.005396979 ubox
56 61 0.005287220 ubox
58 62 0.003226638 ubox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
31 58 0.9500000 lbox
32 57 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
