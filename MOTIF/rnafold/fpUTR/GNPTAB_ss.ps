%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:41:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCCGGAAGCGGCGGCCGCGGCGCGGAGCCGAGCGGGCGUCCGUCGCCGGAGCUGCAAUGAGCGGCGCCCGGAGGCUGUGACCUGCGCGCGGCGGCCCGACCGGGGCCCCUGAAUGGCGGCUCGCUGAGGCGGCGGCGGCGGCGGCGGCGGCUCAGGCUCCUCGGGGCGUGGCGUGGCGGUGAAGGGGUG\
) } def
/len { sequence length } bind def

/coor [
[-129.94274902 106.00954437]
[-141.98670959 97.06845856]
[-142.67242432 82.08413696]
[-131.49661255 72.08076477]
[-146.08073425 68.57315063]
[-160.66485596 65.06553650]
[-175.24897766 61.55792236]
[-189.83309937 58.05030441]
[-199.63031006 67.75814056]
[-212.84121704 71.32521820]
[-225.98347473 67.92214203]
[-235.64741516 58.54240417]
[-239.38059998 45.71550751]
[-253.90570068 41.97097015]
[-268.43078613 38.22643280]
[-283.72555542 42.27375412]
[-294.11837769 31.60423660]
[-308.64346313 27.85969925]
[-323.16857910 24.11516380]
[-337.69366455 20.37062645]
[-352.21875000 16.62609100]
[-366.74386597 12.88155460]
[-375.85061646 13.76952076]
[-381.47393799 8.95605278]
[-395.93615723 4.97558784]
[-410.39837646 0.99512345]
[-424.86059570 -2.98534107]
[-439.32281494 -6.96580553]
[-453.93499756 -10.35460854]
[-468.67297363 -13.14613914]
[-483.41091919 -15.93766880]
[-498.14886475 -18.72919846]
[-508.33984375 -9.90855980]
[-521.55786133 -8.59195423]
[-532.94952393 -15.03741837]
[-538.46166992 -26.69388962]
[-553.15222168 -29.72493935]
[-567.84277344 -32.75598907]
[-582.53332520 -35.78703690]
[-597.22393799 -38.81808853]
[-601.03692627 -24.77337646]
[-617.07531738 -14.63765621]
[-632.07086182 -14.27144527]
[-647.06634521 -13.90523338]
[-662.06188965 -13.53902245]
[-675.77001953 -4.53796482]
[-690.29565430 -12.14973259]
[-690.69598389 -28.54399300]
[-676.55926514 -36.85573578]
[-662.42810059 -28.53455162]
[-647.43255615 -28.90076256]
[-632.43707275 -29.26697350]
[-617.44152832 -29.63318443]
[-614.53015137 -44.34793472]
[-628.25640869 -50.39689255]
[-641.98266602 -56.44585419]
[-655.70892334 -62.49481201]
[-669.43518066 -68.54376984]
[-684.85089111 -64.10137939]
[-697.85174561 -73.50123596]
[-698.46459961 -89.53258514]
[-686.21929932 -99.89753723]
[-670.50939941 -96.64499664]
[-663.38616943 -82.27002716]
[-649.65991211 -76.22106934]
[-635.93365479 -70.17211151]
[-622.20739746 -64.12314606]
[-608.48120117 -58.07418823]
[-594.19287109 -53.50865555]
[-579.50231934 -50.47760391]
[-564.81170654 -47.44655609]
[-550.12115479 -44.41550446]
[-535.43060303 -41.38445663]
[-521.79687500 -51.21966934]
[-504.93502808 -48.09704590]
[-495.35733032 -33.46715546]
[-480.61938477 -30.67562485]
[-465.88143921 -27.88409615]
[-451.14346313 -25.09256554]
[-457.22485352 -38.80448151]
[-450.44467163 -52.18465042]
[-435.79101562 -55.38940430]
[-424.04446411 -46.06102753]
[-423.84686279 -31.06233025]
[-435.34234619 -21.42802811]
[-420.88012695 -17.44756508]
[-406.41790771 -13.46710014]
[-391.95568848 -9.48663521]
[-377.49346924 -5.50617075]
[-362.99932861 -1.64354229]
[-348.47421265 2.10099387]
[-333.94912720 5.84553003]
[-319.42404175 9.59006596]
[-304.89892578 13.33460236]
[-290.37384033 17.07913780]
[-276.11801147 12.76398468]
[-264.68624878 23.70133781]
[-250.16116333 27.44587326]
[-235.63606262 31.19040871]
[-223.32589722 20.34100151]
[-206.80964661 18.94751358]
[-192.57318115 27.75574875]
[-186.32548523 43.46618271]
[-171.74136353 46.97379684]
[-157.15724182 50.48141479]
[-142.57312012 53.98902893]
[-127.98899078 57.49664307]
[-113.27424622 60.40803146]
[-98.45323181 62.71836853]
[-83.63222504 65.02870178]
[-68.81121063 67.33904266]
[-53.99020386 69.64937592]
[-39.16919327 71.95970917]
[-27.32953644 62.99544525]
[-12.26601219 65.12731934]
[-2.94374013 77.60662842]
[11.87727070 79.91696167]
[25.64439011 74.23227692]
[38.08817291 84.00278473]
[52.90918350 86.31311798]
[66.67630005 80.62843323]
[79.12008667 90.39894104]
[93.94109344 92.70927429]
[97.72084045 79.52261353]
[114.41707611 71.73676300]
[129.10765076 68.70571136]
[143.79821777 65.67465973]
[158.48878479 62.64361191]
[173.17933655 59.61256409]
[181.88134766 46.69308090]
[196.82284546 43.82844162]
[209.08596802 52.20408249]
[223.77653503 49.17303467]
[235.72854614 38.80674744]
[249.75674438 43.81263351]
[264.44729614 40.78158569]
[276.33322144 29.48302269]
[291.98223877 34.38610077]
[295.29598999 50.44695282]
[282.86560059 61.14355087]
[267.47836304 55.47215271]
[252.78779602 58.50320053]
[241.88655090 68.65268707]
[226.80758667 63.86360168]
[212.11701965 66.89465332]
[204.17045593 79.44007874]
[189.31532288 82.72326660]
[176.21038818 74.30313110]
[161.51982117 77.33418274]
[146.82925415 80.36522675]
[132.13868713 83.39627838]
[117.44812775 86.42733002]
[114.29761505 101.09273529]
[126.44720459 109.88975525]
[135.24789429 112.39365387]
[138.72138977 118.93015289]
[150.72618103 127.92375946]
[166.40980530 130.00567627]
[171.95661926 143.82891846]
[183.96141052 152.82252502]
[195.96620178 161.81613159]
[207.97099304 170.80973816]
[224.30900574 172.22436523]
[231.00685120 187.19335938]
[221.17436218 200.31791687]
[204.92634583 198.09661865]
[198.97738647 182.81452942]
[186.97259521 173.82092285]
[174.96780396 164.82731628]
[162.96301270 155.83370972]
[148.13804626 154.39508057]
[141.73257446 139.92855835]
[129.72778320 130.93495178]
[117.65019226 122.03934479]
[105.50060272 113.24233246]
[91.63076019 107.53028870]
[76.80974579 105.21994781]
[61.98252869 110.73938751]
[50.59884644 101.13413239]
[35.77783585 98.82379150]
[20.95061874 104.34323120]
[9.56693363 94.73797607]
[-5.25407600 92.42763519]
[-17.93235779 101.47743988]
[-32.93005753 98.92329407]
[-41.47953033 86.78072357]
[-56.30054092 84.47038269]
[-71.12155151 82.16004944]
[-85.94255829 79.84971619]
[-100.76357269 77.53937531]
[-115.58457947 75.22904205]
[-109.06009674 88.73574829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[13 99]
[14 98]
[15 97]
[17 95]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[24 89]
[25 88]
[26 87]
[27 86]
[28 85]
[29 79]
[30 78]
[31 77]
[32 76]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[42 53]
[43 52]
[44 51]
[45 50]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[108 191]
[109 190]
[110 189]
[111 188]
[112 187]
[113 186]
[116 183]
[117 182]
[119 180]
[120 179]
[122 177]
[123 176]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[132 145]
[133 144]
[135 142]
[136 141]
[153 175]
[154 174]
[156 173]
[157 172]
[159 170]
[160 169]
[161 168]
[162 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
