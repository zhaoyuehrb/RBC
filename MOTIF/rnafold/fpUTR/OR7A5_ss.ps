%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUGCAGAAUGUACGCUGUCUUCAGUUAAGGCUGAGAGUGGGAAGGAGUUCCUAAUCAGAGAUGACAUGGAGAUCCCUUAAAGAGAACCAGAUUCAUACACAAAAUGUAAGAUAAUUUAUUGGCUAUAAAAUAUAAAUGAUGGUAUUUCUGAAAGGUUAGCAAUGCAUGCCUGUCUCGUUUCCCUCUUUCUCUCUCUCUCUCUGAUAGUCACUUCAAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-29.98341560 933.84246826]
[-36.30149841 947.44696045]
[-42.61957932 961.05145264]
[-48.93766022 974.65594482]
[-55.25574112 988.26037598]
[-61.57382202 1001.86486816]
[-60.36906815 1017.64013672]
[-72.74732971 1025.92431641]
[-79.06540680 1039.52880859]
[-85.38349152 1053.13330078]
[-76.48886108 1065.65454102]
[-75.06247711 1080.94702148]
[-81.48802948 1094.89721680]
[-94.03707886 1103.75256348]
[-109.33399200 1105.13098145]
[-123.26396942 1098.66174316]
[-132.07992554 1086.08508301]
[-133.41041565 1070.78393555]
[-126.89753723 1056.87426758]
[-114.29322052 1048.09777832]
[-98.98796844 1046.81518555]
[-92.66988373 1033.21069336]
[-86.35180664 1019.60626221]
[-88.00846863 1004.80407715]
[-75.17829895 995.54681396]
[-68.86022186 981.94232178]
[-62.54214096 968.33782959]
[-56.22405624 954.73333740]
[-49.90597534 941.12890625]
[-43.58789444 927.52441406]
[-39.13307571 913.20117188]
[-36.62048340 898.41314697]
[-34.10788727 883.62506104]
[-42.90957642 871.66406250]
[-40.57210922 856.63104248]
[-27.96661758 847.48010254]
[-25.45402336 832.69207764]
[-22.94143105 817.90399170]
[-20.42883682 803.11590576]
[-17.91624451 788.32788086]
[-23.41232681 774.48437500]
[-13.47273254 762.17523193]
[-10.96013927 747.38714600]
[-8.44754601 732.59912109]
[-5.93495226 717.81103516]
[-3.42235875 703.02294922]
[-0.90976548 688.23492432]
[1.60282791 673.44683838]
[4.11542130 658.65875244]
[6.62801456 643.87072754]
[-7.94419909 636.54022217]
[-19.55265236 625.05383301]
[-27.05381775 610.52673340]
[-29.70377350 594.37457275]
[-27.23195648 578.17535400]
[-19.86874199 563.51525879]
[-8.32402706 551.83325195]
[6.28119946 544.28015137]
[22.52369881 541.60498047]
[24.62055397 526.75225830]
[26.71740913 511.89953613]
[17.58372307 500.19006348]
[19.49864960 485.09744263]
[31.84253311 475.59658813]
[33.93938828 460.74386597]
[36.03624344 445.89114380]
[33.86093903 438.83529663]
[38.26807022 430.84539795]
[40.57302094 416.02355957]
[42.87797165 401.20169067]
[30.62657547 394.36740112]
[21.42311859 383.74011230]
[16.38784599 370.58224487]
[16.14425278 356.46609497]
[20.74195671 343.08584595]
[29.64829063 332.05441284]
[41.80994415 324.70886230]
[55.77749252 321.94842529]
[58.29008484 307.16036987]
[60.80267715 292.37231445]
[63.31526947 277.58422852]
[54.51358414 265.62322998]
[56.85105133 250.59022522]
[69.45654297 241.43931580]
[71.96913147 226.65124512]
[74.48172760 211.86317444]
[76.99432373 197.07511902]
[79.50691223 182.28704834]
[81.91574860 167.48173523]
[84.22069550 152.65988159]
[86.52565002 137.83802795]
[88.83059692 123.01618195]
[76.58754730 116.92854309]
[68.08491516 104.27242279]
[66.76659393 87.49542999]
[74.46464539 70.76549530]
[71.53829193 56.05371475]
[61.25738144 44.02818298]
[66.36304474 30.03598785]
[63.43669128 15.32420921]
[60.51033401 0.61242980]
[57.58398056 -14.09934902]
[45.09719086 -24.17206764]
[45.33105469 -40.21341705]
[58.10617447 -49.91784668]
[73.62256622 -45.84094620]
[79.97738647 -31.11017036]
[72.29576111 -17.02570343]
[75.22211456 -2.31392503]
[78.14846802 12.39785385]
[81.07482147 27.10963249]
[91.14642334 38.08288193]
[86.25006866 53.12736130]
[89.17642975 67.83914185]
[96.60995483 68.83546448]
[111.47701263 70.82811737]
[118.91053772 71.82444000]
[125.60768890 58.40251160]
[132.30484009 44.98058319]
[139.00198364 31.55865288]
[145.69914246 18.13672447]
[152.39628601 4.71479559]
[143.00750732 -7.31905746]
[139.77819824 -22.23664093]
[143.34953308 -37.07605743]
[153.01243591 -48.89093399]
[166.84831238 -55.33541107]
[182.11004639 -55.12994003]
[195.76741028 -48.31531525]
[205.10871887 -36.24458313]
[208.27926636 -21.31439590]
[204.64952087 -6.48915768]
[194.94017029 5.28757286]
[181.07902527 11.67751694]
[165.81822205 11.41194630]
[159.12106323 24.83387566]
[152.42391968 38.25580215]
[145.72677612 51.67773056]
[139.02961731 65.09966278]
[132.33247375 78.52159119]
[134.28128052 102.91883850]
[121.81847382 120.58177948]
[103.65245056 125.32113647]
[101.34749603 140.14297485]
[99.04254913 154.96482849]
[96.73759460 169.78668213]
[98.51024628 178.73760986]
[94.29498291 184.79963684]
[91.78238678 199.58770752]
[89.26979065 214.37577820]
[86.75720215 229.16383362]
[84.24460602 243.95190430]
[93.12036133 256.75262451]
[90.36157227 271.71405029]
[78.10334015 280.09683228]
[75.59074402 294.88488770]
[73.07814789 309.67297363]
[70.56555939 324.46102905]
[84.23730469 332.93060303]
[93.58806610 345.96801758]
[97.20919037 361.55850220]
[94.57467651 377.30661011]
[86.11737823 390.80432129]
[73.15818787 399.99923706]
[57.69982147 403.50665283]
[55.39486694 418.32849121]
[53.08991623 433.15036011]
[50.88896179 447.98800659]
[48.79210663 462.84072876]
[46.69525146 477.69342041]
[55.92652893 490.24020386]
[53.58843613 505.27310181]
[41.57012558 513.99639893]
[39.47327042 528.84912109]
[37.37641525 543.70184326]
[49.94829559 549.28112793]
[60.63579941 557.91864014]
[68.71343231 569.01965332]
[73.63506317 581.82226562]
[75.07084656 595.45013428]
[72.92933655 608.97216797]
[67.36325836 621.46618652]
[58.75864792 632.08197021]
[47.70808792 640.09881592]
[34.96989441 644.97485352]
[21.41608047 646.38330078]
[18.90348625 661.17138672]
[16.39089394 675.95941162]
[13.87829971 690.74749756]
[11.36570644 705.53558350]
[8.85311317 720.32360840]
[6.34051991 735.11169434]
[3.82792640 749.89978027]
[1.31533301 764.68780518]
[6.63169861 779.58905029]
[-3.12817907 790.84045410]
[-5.64077234 805.62854004]
[-8.15336609 820.41656494]
[-10.66595936 835.20465088]
[-13.17855263 849.99273682]
[-4.30279589 862.79345703]
[-7.06158447 877.75488281]
[-19.31982231 886.13763428]
[-21.83241653 900.92572021]
[-24.34500885 915.71380615]
[-15.42783260 903.65209961]
[-3.38529181 894.70910645]
[10.73924637 889.65960693]
[25.72202682 888.94110107]
[40.26494217 892.61584473]
[53.10798645 900.36541748]
[63.13844299 911.51843262]
[69.48726654 925.10864258]
[71.60438538 939.95843506]
[69.30638885 954.78137207]
[62.79236603 968.29315186]
[52.62669373 979.32305908]
[39.69012833 986.91552734]
[25.10349655 990.41265869]
[10.13058853 989.51153564]
[-3.93134260 984.29028320]
[-15.86396694 975.20111084]
[-24.63344002 963.03161621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[8 23]
[9 22]
[10 21]
[31 205]
[32 204]
[33 203]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[42 194]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[59 175]
[60 174]
[61 173]
[64 170]
[65 169]
[66 168]
[68 167]
[69 166]
[70 165]
[78 158]
[79 157]
[80 156]
[81 155]
[84 152]
[85 151]
[86 150]
[87 149]
[88 148]
[89 146]
[90 145]
[91 144]
[92 143]
[96 114]
[97 113]
[99 111]
[100 110]
[101 109]
[102 108]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
