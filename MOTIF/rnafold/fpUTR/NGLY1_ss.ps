%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACCCCGCCCCUGCCGGUGGCUGCGGUAGCUGCUGCGCGCUGAGGCGCCUGCUCAGUGUGGGACGCGGAGAGCGAGGGGCGGCGGCGGCGCCCGCUGGCGCUCAAGC\
) } def
/len { sequence length } bind def

/coor [
[167.12443542 246.46212769]
[167.15644836 240.12084961]
[168.89544678 233.98844910]
[172.23117065 228.51824951]
[164.42135620 215.71173096]
[156.42781067 203.01908875]
[148.25218201 190.44296265]
[140.07655334 177.86682129]
[131.90092468 165.29069519]
[123.72530365 152.71455383]
[115.54967499 140.13842773]
[107.37404633 127.56229401]
[99.19841766 114.98616028]
[85.86288452 108.11858368]
[70.87689972 108.76687622]
[55.90181351 109.63105774]
[40.94073868 110.71094513]
[25.97966003 111.79083252]
[11.01858234 112.87071991]
[-3.94249511 113.95060730]
[-18.90357208 115.03049469]
[-33.86465073 116.11038208]
[-48.82572937 117.19026947]
[-63.78680420 118.27016449]
[-79.14954376 125.44110870]
[-90.29308319 112.66387177]
[-81.10001373 98.41873169]
[-64.86669159 103.30908203]
[-49.90561676 102.22919464]
[-34.94453812 101.14930725]
[-19.98346138 100.06941986]
[-5.02238321 98.98953247]
[9.93869400 97.90964508]
[24.89977264 96.82975769]
[39.86085129 95.74987030]
[54.82192612 94.66997528]
[61.36596298 90.99366760]
[70.22860718 93.78089142]
[85.21459198 93.13259888]
[96.34246063 83.07424164]
[98.49662781 68.22972870]
[100.65080261 53.38521576]
[88.40858459 41.81976318]
[85.44577789 25.40892410]
[92.72526550 10.58935356]
[107.23136139 3.05575371]
[108.95684814 -11.84467220]
[110.68233490 -26.74509811]
[112.19292450 -41.66884232]
[113.48829651 -56.61280441]
[114.78366852 -71.55676270]
[116.07904053 -86.50073242]
[117.37441254 -101.44469452]
[108.19457245 -114.60182190]
[112.89565277 -129.94064331]
[127.87138367 -135.69451904]
[141.63366699 -127.44957733]
[143.62525940 -111.53062439]
[132.31837463 -100.14932251]
[131.02301025 -85.20535278]
[129.72763062 -70.26139069]
[128.43225098 -55.31743240]
[127.13688660 -40.37347031]
[129.73406982 -33.33115005]
[125.58276367 -25.01960945]
[123.85727692 -10.11918354]
[122.13178253 4.78124237]
[132.81068420 12.93289852]
[138.07369995 25.41180229]
[136.43157959 38.96478271]
[128.21073914 50.00011826]
[115.49531555 55.53938675]
[113.34114075 70.38390350]
[111.18697357 85.22841644]
[115.74856567 96.82214355]
[111.77455139 106.81053162]
[119.95018005 119.38666534]
[128.12580872 131.96279907]
[136.30143738 144.53892517]
[144.47706604 157.11506653]
[152.65269470 169.69119263]
[160.82830811 182.26733398]
[169.00393677 194.84346008]
[176.42007446 200.43954468]
[177.22787476 207.90191650]
[185.03768921 220.70843506]
[208.48736572 229.44877625]
[210.63385010 253.73171997]
[221.16375732 264.41448975]
[231.69364929 275.09722900]
[242.22355652 285.77996826]
[252.75346375 296.46273804]
[263.28335571 307.14547729]
[279.22793579 310.97991943]
[283.61938477 326.78015137]
[271.94018555 338.29223633]
[256.20486450 333.67355347]
[252.60060120 317.67538452]
[242.07070923 306.99264526]
[231.54080200 296.30987549]
[221.01091003 285.62713623]
[210.48100281 274.94436646]
[199.95109558 264.26162720]
[194.15586853 266.20211792]
[188.01980591 266.52041626]
[181.99079895 265.17565918]
[176.51365662 262.24905396]
[171.99729919 257.93911743]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 86]
[5 85]
[6 83]
[7 82]
[8 81]
[9 80]
[10 79]
[11 78]
[12 77]
[13 76]
[14 39]
[15 38]
[16 36]
[17 35]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[24 28]
[40 74]
[41 73]
[42 72]
[46 67]
[47 66]
[48 65]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
