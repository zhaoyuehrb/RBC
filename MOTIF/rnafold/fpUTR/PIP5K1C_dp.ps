%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PIP5K1C)
} def

/sequence { (\
CUCCCUUGGCCGGCGGCGCUUGUUGUUCGGCGGCGGCGGUCGCAGCUCGGGUCCCCCUCGGGCGCCCCCGCCGCCGUCCGCGCGCGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.017633688 ubox
2 8 0.016778427 ubox
2 9 0.018109761 ubox
3 8 0.025682716 ubox
3 9 0.060215271 ubox
4 8 0.060812071 ubox
4 13 0.005166910 ubox
5 12 0.006243767 ubox
8 89 0.962049508 ubox
9 17 0.013388599 ubox
9 31 0.003249934 ubox
9 88 0.973262184 ubox
10 16 0.013415364 ubox
10 30 0.003300839 ubox
10 87 0.973317913 ubox
11 15 0.013318453 ubox
11 29 0.003315602 ubox
11 86 0.972096999 ubox
12 20 0.007599614 ubox
12 27 0.008521231 ubox
12 28 0.003919989 ubox
12 83 0.003675328 ubox
12 85 0.798628691 ubox
12 89 0.227177951 ubox
13 19 0.015133594 ubox
13 23 0.016942884 ubox
13 26 0.040833885 ubox
13 27 0.003313369 ubox
13 81 0.024457034 ubox
13 83 0.530877488 ubox
13 85 0.551173862 ubox
13 88 0.228891349 ubox
14 18 0.015051104 ubox
14 22 0.017548411 ubox
14 25 0.042864642 ubox
14 80 0.024507631 ubox
14 82 0.530545272 ubox
14 84 0.777354945 ubox
14 86 0.006497563 ubox
14 87 0.228784094 ubox
15 21 0.016156571 ubox
15 24 0.050918700 ubox
15 27 0.021792440 ubox
15 28 0.009562307 ubox
15 79 0.024544047 ubox
15 81 0.412592221 ubox
15 83 0.641938306 ubox
15 85 0.012272408 ubox
15 89 0.003958617 ubox
16 20 0.010821342 ubox
16 23 0.099065469 ubox
16 26 0.104685444 ubox
16 27 0.012971384 ubox
16 78 0.021365471 ubox
16 81 0.581652909 ubox
16 83 0.485353205 ubox
16 85 0.232896680 ubox
16 88 0.004007670 ubox
17 22 0.101658029 ubox
17 25 0.108527682 ubox
17 29 0.005620617 ubox
17 76 0.006277630 ubox
17 80 0.668838849 ubox
17 82 0.654223219 ubox
17 84 0.233827715 ubox
17 86 0.004655882 ubox
17 87 0.003181698 ubox
18 24 0.088104837 ubox
18 26 0.152080633 ubox
18 28 0.010213197 ubox
18 31 0.009969277 ubox
18 77 0.003937455 ubox
18 79 0.657960955 ubox
18 81 0.654949171 ubox
18 83 0.233762417 ubox
18 85 0.005624372 ubox
18 88 0.013474994 ubox
19 25 0.184671495 ubox
19 30 0.011503940 ubox
19 76 0.003881816 ubox
19 80 0.637127517 ubox
19 82 0.232688366 ubox
19 84 0.005650327 ubox
19 87 0.013456187 ubox
20 29 0.011642847 ubox
20 30 0.012407226 ubox
20 86 0.010391326 ubox
21 29 0.041794025 ubox
21 80 0.133644883 ubox
21 82 0.015875969 ubox
21 84 0.003650435 ubox
21 86 0.008842416 ubox
22 28 0.219303979 ubox
22 31 0.008115579 ubox
22 77 0.026307921 ubox
22 79 0.179140856 ubox
22 81 0.100181075 ubox
22 83 0.005071429 ubox
22 85 0.013724307 ubox
23 30 0.008206065 ubox
23 80 0.078147983 ubox
23 82 0.004156213 ubox
23 84 0.009815026 ubox
24 29 0.008224677 ubox
24 80 0.069488569 ubox
24 82 0.018504554 ubox
24 84 0.024889541 ubox
25 77 0.010416828 ubox
25 79 0.219955943 ubox
25 81 0.100835491 ubox
25 83 0.036927918 ubox
25 85 0.003296416 ubox
26 80 0.091681260 ubox
26 82 0.037126899 ubox
26 84 0.003333372 ubox
28 76 0.229621834 ubox
28 80 0.297329292 ubox
29 75 0.230098807 ubox
29 78 0.851869300 ubox
29 79 0.457244220 ubox
30 74 0.230108238 ubox
30 77 0.859415470 ubox
30 78 0.454951207 ubox
31 73 0.230104814 ubox
31 76 0.972933014 ubox
32 72 0.230103300 ubox
32 75 0.973138621 ubox
33 71 0.230106983 ubox
33 74 0.973157363 ubox
34 70 0.230103486 ubox
34 73 0.973143827 ubox
35 68 0.004981166 ubox
35 69 0.230045682 ubox
35 72 0.973141071 ubox
36 67 0.007042264 ubox
36 68 0.229917230 ubox
36 71 0.973157853 ubox
37 70 0.973144011 ubox
38 66 0.108733373 ubox
38 67 0.202529107 ubox
38 68 0.020260602 ubox
38 69 0.972914757 ubox
39 65 0.108518040 ubox
39 66 0.201490687 ubox
39 67 0.028592220 ubox
39 68 0.971978468 ubox
40 64 0.102267883 ubox
41 64 0.047243747 ubox
42 63 0.038489581 ubox
42 65 0.985935367 ubox
43 62 0.036313629 ubox
43 64 0.983554710 ubox
45 63 0.998388960 ubox
46 61 0.021256155 ubox
46 62 0.998915501 ubox
47 60 0.016374158 ubox
47 61 0.998556794 ubox
48 60 0.998931821 ubox
48 61 0.004016769 ubox
49 55 0.003230896 ubox
49 56 0.013130580 ubox
49 57 0.087953188 ubox
49 58 0.083863312 ubox
49 59 0.991876328 ubox
49 67 0.024627726 ubox
50 54 0.003485956 ubox
50 55 0.014265721 ubox
50 56 0.096964859 ubox
50 57 0.496092639 ubox
50 58 0.860811212 ubox
50 59 0.007065284 ubox
50 66 0.024655381 ubox
51 55 0.096400928 ubox
51 56 0.494238516 ubox
51 57 0.856431045 ubox
51 58 0.007617766 ubox
51 65 0.024655076 ubox
52 64 0.024395261 ubox
53 62 0.015782624 ubox
54 61 0.015795256 ubox
54 62 0.018673838 ubox
55 60 0.015748455 ubox
55 61 0.018683439 ubox
56 60 0.018550827 ubox
56 61 0.003197143 ubox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
10 87 0.9500000 lbox
11 86 0.9500000 lbox
12 85 0.9500000 lbox
13 83 0.9500000 lbox
14 82 0.9500000 lbox
15 81 0.9500000 lbox
17 80 0.9500000 lbox
18 79 0.9500000 lbox
29 78 0.9500000 lbox
30 77 0.9500000 lbox
31 76 0.9500000 lbox
32 75 0.9500000 lbox
33 74 0.9500000 lbox
34 73 0.9500000 lbox
35 72 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
38 69 0.9500000 lbox
39 68 0.9500000 lbox
42 65 0.9500000 lbox
43 64 0.9500000 lbox
45 63 0.9500000 lbox
46 62 0.9500000 lbox
47 61 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
51 57 0.9500000 lbox
showpage
end
%%EOF
