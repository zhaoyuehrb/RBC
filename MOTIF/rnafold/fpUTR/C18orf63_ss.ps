%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGUCUCCUGAGGGCAGCGAGGAGGGAGCUGAGGCACGCGGGCUCUCAAUCGACGCCCCACAGAGACCAAGAGGCCUGGCCUUGGGGGGCAGCUGCUUGAAGGAGGCAGAGCGGAAGCGAGGGAGACUGCUGGAGGCCCUGCCGCCCACCCGCCCUUUCCUCCCCCUGAGGAGACGCCUGACGCAUCUGCAGUGCAGGAGGCCGUGGGCGUUAGAAGUGUUGCUUUUCCAGUUUGCCUGAUUGCUGAGACACUC\
AGUCAGGAAAGU\
) } def
/len { sequence length } bind def

/coor [
[615.64306641 437.16040039]
[630.63153076 437.74865723]
[617.75994873 430.04656982]
[604.88836670 422.34445190]
[592.01678467 414.64233398]
[579.14526367 406.94021606]
[566.27368164 399.23809814]
[553.40209961 391.53598022]
[540.53051758 383.83389282]
[527.65893555 376.13177490]
[512.76470947 376.23605347]
[504.89559937 362.51062012]
[492.02401733 354.80850220]
[479.15243530 347.10638428]
[466.28088379 339.40426636]
[458.19381714 342.92126465]
[449.25723267 342.33325195]
[441.46551514 337.64559937]
[436.61502075 329.79244995]
[435.89050293 320.45297241]
[423.29769897 312.30307007]
[410.70489502 304.15313721]
[398.11206055 296.00323486]
[385.51925659 287.85333252]
[372.92645264 279.70339966]
[360.33364868 271.55349731]
[347.74081421 263.40359497]
[332.85214233 262.98413086]
[325.47048950 248.99049377]
[312.87768555 240.84057617]
[300.14352417 232.91334534]
[287.27194214 225.21122742]
[279.94412231 224.47596741]
[274.29537964 217.34263611]
[261.51495361 209.49017334]
[248.73455811 201.63771057]
[236.92253113 204.14331055]
[226.21907043 197.73500061]
[222.62486267 185.37130737]
[209.93737793 177.36956787]
[197.20321655 169.44232178]
[184.42280579 161.58985901]
[171.64241028 153.73739624]
[158.86199951 145.88493347]
[151.54328918 145.06382751]
[145.97856140 137.86476135]
[133.29107666 129.86302185]
[120.60359955 121.86128235]
[115.53179932 128.80303955]
[108.18588257 134.44812012]
[98.93582153 138.07598877]
[88.37231445 139.08126831]
[77.26923370 137.03913879]
[66.52723694 131.75843811]
[57.10262680 123.31697083]
[49.92708588 112.07528687]
[35.10091782 109.79826355]
[20.27475357 107.52124023]
[5.44858932 105.24421692]
[-9.37757587 102.96719360]
[-19.22969818 112.12100220]
[-32.36174774 113.91413879]
[-43.96191025 107.91518402]
[-49.90895081 96.50708771]
[-64.70740509 94.05642700]
[-79.50585938 91.60576630]
[-94.38471222 96.98447418]
[-105.67687225 87.27178192]
[-120.47532654 84.82112122]
[-135.27378845 82.37046051]
[-147.02894592 92.68308258]
[-162.66380310 92.97525024]
[-174.79605103 83.10900879]
[-177.69720459 67.74289703]
[-169.99743652 54.13232803]
[-155.33233643 48.70378876]
[-140.62632751 54.02047729]
[-132.82312012 67.57200623]
[-118.02466583 70.02266693]
[-103.22621155 72.47332764]
[-89.40585327 66.91934204]
[-77.05519867 76.80731201]
[-62.25674820 79.25797272]
[-47.45829391 81.70863342]
[-34.19536972 71.34249878]
[-17.20662308 73.84194183]
[-7.10055208 88.14102936]
[7.72561264 90.41805267]
[22.55177689 92.69506836]
[37.37794113 94.97209167]
[52.20410538 97.24911499]
[55.71047211 90.61923218]
[62.72320175 77.35945892]
[66.22956848 70.72956848]
[56.00245285 59.75659943]
[45.77533340 48.78363037]
[35.54821777 37.81066132]
[25.32109833 26.83769035]
[15.09398174 15.86472034]
[-0.82407159 13.86593723]
[-9.06279945 0.09993177]
[-3.30215597 -14.87319565]
[12.03878689 -19.56734276]
[25.19177055 -10.38156128]
[26.06695175 5.63760281]
[36.29406738 16.61057281]
[46.52118683 27.58354187]
[56.74830246 38.55651474]
[66.97541809 49.52948380]
[77.20253754 60.50245285]
[90.20755005 53.02784729]
[85.87431335 38.66737747]
[81.54108429 24.30690765]
[77.20784760 9.94643688]
[72.87461853 -4.41403294]
[57.78832245 -6.73060274]
[45.20602417 -15.37053776]
[37.62594223 -28.61837196]
[36.55310822 -43.84373856]
[42.20053482 -58.02362823]
[53.44692612 -68.34262085]
[68.05929565 -72.75186157]
[83.13634491 -70.37590027]
[95.68452454 -61.68648148]
[103.21237946 -48.40890121]
[104.22525024 -33.17942810]
[98.52202606 -19.02188492]
[87.23508453 -8.74726486]
[91.56832123 5.61320448]
[95.90155029 19.97367477]
[100.23478699 34.33414459]
[104.56801605 48.69461441]
[133.97543335 77.45630646]
[128.60534668 109.17380524]
[141.29281616 117.17554474]
[153.98030090 125.17728424]
[166.71446228 133.10452271]
[179.49487305 140.95698547]
[192.27528381 148.80944824]
[205.05567932 156.66191101]
[213.97177124 158.47741699]
[217.93911743 164.68208313]
[230.62660217 172.68382263]
[249.05413818 172.99105835]
[256.58703613 188.85729980]
[269.36743164 196.70976257]
[282.14782715 204.56222534]
[294.97406006 212.33964539]
[307.84561157 220.04176331]
[312.99621582 220.12400818]
[317.19448853 221.97024536]
[319.93188477 224.93057251]
[321.02758789 228.24777222]
[333.62039185 236.39767456]
[349.40982056 237.40007019]
[355.89074707 250.81077576]
[368.48355103 258.96069336]
[381.07635498 267.11059570]
[393.66918945 275.26049805]
[406.26199341 283.41043091]
[418.85479736 291.56033325]
[431.44760132 299.71026611]
[444.04043579 307.86016846]
[465.49096680 307.70217896]
[473.98300171 326.53268433]
[486.85455322 334.23480225]
[499.72613525 341.93692017]
[512.59771729 349.63903809]
[528.41259766 350.08566284]
[535.36102295 363.26019287]
[548.23260498 370.96231079]
[561.10418701 378.66442871]
[573.97576904 386.36654663]
[586.84735107 394.06863403]
[599.71893311 401.77075195]
[612.59051514 409.47286987]
[625.46209717 417.17498779]
[638.33367920 424.87710571]
[652.96313477 428.19042969]
[667.89721680 426.78579712]
[682.83129883 425.38116455]
[697.76538086 423.97656250]
[712.69952393 422.57192993]
[727.63360596 421.16729736]
[742.56768799 419.76269531]
[748.12359619 416.28271484]
[753.76110840 416.12811279]
[757.86767578 418.50439453]
[772.83062744 417.45025635]
[787.79351807 416.39611816]
[802.75640869 415.34194946]
[815.97875977 406.65396118]
[829.21826172 413.47772217]
[844.18121338 412.42358398]
[853.21911621 399.66229248]
[868.35833740 395.74606323]
[882.45068359 402.52401733]
[888.84210205 416.79577637]
[884.51477051 431.82269287]
[871.51196289 440.50952148]
[855.97314453 438.75454712]
[845.23535156 427.38647461]
[830.27239990 428.44064331]
[818.12036133 437.05322266]
[803.81054688 430.30487061]
[788.84765625 431.35900879]
[773.88476562 432.41317749]
[758.92181396 433.46731567]
[743.97229004 434.69677734]
[729.03820801 436.10137939]
[714.10412598 437.50601196]
[699.17004395 438.91064453]
[684.23596191 440.31524658]
[669.30187988 441.71987915]
[654.36773682 443.12451172]
[650.63043213 449.62701416]
[664.40979004 455.55410767]
[678.18908691 461.48123169]
[691.96838379 467.40835571]
[705.74768066 473.33544922]
[719.52697754 479.26257324]
[733.30633545 485.18969727]
[748.30413818 485.44555664]
[760.59857178 494.03897095]
[765.99188232 508.03582764]
[762.64251709 522.65710449]
[751.69415283 532.91058350]
[736.88494873 535.29534912]
[723.27130127 528.99707031]
[715.50170898 516.16778564]
[703.44403076 507.24517822]
[691.38641357 498.32254028]
[679.32879639 489.39990234]
[667.27111816 480.47726440]
[655.21350098 471.55465698]
[643.15582275 462.63201904]
[639.41857910 469.13452148]
[645.72241211 482.74560547]
[652.02624512 496.35668945]
[658.33007812 509.96777344]
[662.54101562 512.93481445]
[664.97192383 516.82385254]
[665.56829834 520.81152344]
[664.60681152 524.17004395]
[670.42822266 537.99438477]
[676.24957275 551.81866455]
[682.07098389 565.64300537]
[687.89233398 579.46728516]
[693.71374512 593.29162598]
[705.43322754 605.54272461]
[696.90509033 620.19567871]
[680.46405029 616.05718994]
[679.88940430 599.11297607]
[674.06805420 585.28869629]
[668.24664307 571.46435547]
[662.42529297 557.64007568]
[656.60388184 543.81573486]
[650.78253174 529.99145508]
[644.71899414 516.27160645]
[638.41516113 502.66052246]
[632.11132812 489.04943848]
[625.80749512 475.43835449]
[624.81408691 490.40542603]
[609.81414795 490.37750244]
[597.11480713 482.39459229]
[590.58660889 468.88967896]
[592.21917725 453.97879028]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[9 171]
[10 170]
[12 168]
[13 167]
[14 166]
[15 165]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[29 154]
[30 153]
[31 149]
[32 148]
[34 147]
[35 146]
[36 145]
[39 143]
[40 142]
[41 140]
[42 139]
[43 138]
[44 137]
[46 136]
[47 135]
[48 134]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[64 84]
[65 83]
[66 82]
[68 80]
[69 79]
[70 78]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[111 132]
[112 131]
[113 130]
[114 129]
[115 128]
[179 215]
[180 214]
[181 213]
[182 212]
[183 211]
[184 210]
[185 209]
[188 208]
[189 207]
[190 206]
[191 205]
[193 203]
[194 202]
[237 262]
[238 261]
[239 260]
[240 259]
[244 258]
[245 257]
[246 256]
[247 255]
[248 254]
[249 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
