%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (VN1R2)
} def

/sequence { (\
UCUCUCUCUGCCUUGGCUGCCAGGCAGGGAAGGGCCCCCUGUCCAGUGGACACGUGACCCACGUGACCUUACCUAUCAUUGGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.007682326 ubox
1 33 0.155245179 ubox
1 34 0.280307568 ubox
1 50 0.004963417 ubox
1 66 0.004696962 ubox
1 82 0.009822675 ubox
1 83 0.047896687 ubox
2 29 0.007820954 ubox
2 32 0.204752664 ubox
2 33 0.396784007 ubox
2 34 0.667564716 ubox
2 46 0.008998858 ubox
2 49 0.005500133 ubox
2 65 0.005169147 ubox
2 81 0.012379717 ubox
2 82 0.050734473 ubox
2 84 0.110275512 ubox
3 28 0.006846721 ubox
3 30 0.022135800 ubox
3 31 0.203511576 ubox
3 32 0.382795236 ubox
3 33 0.678097213 ubox
3 34 0.025007802 ubox
3 45 0.008524704 ubox
3 48 0.004924110 ubox
3 66 0.005412674 ubox
3 81 0.044498844 ubox
3 82 0.011715317 ubox
3 83 0.112601452 ubox
4 27 0.004520666 ubox
4 29 0.022836404 ubox
4 32 0.687991898 ubox
4 33 0.032529634 ubox
4 34 0.008002539 ubox
4 46 0.005075448 ubox
4 65 0.005825451 ubox
4 81 0.020366601 ubox
4 82 0.109444622 ubox
4 84 0.024815761 ubox
5 26 0.003197255 ubox
5 28 0.015918432 ubox
5 29 0.012831670 ubox
5 30 0.849049632 ubox
5 31 0.485921038 ubox
5 32 0.019455433 ubox
5 33 0.006294414 ubox
5 45 0.003296022 ubox
5 81 0.063702614 ubox
5 83 0.020403408 ubox
6 27 0.010663043 ubox
6 28 0.020851498 ubox
6 29 0.998737850 ubox
6 32 0.004945640 ubox
6 34 0.003370256 ubox
6 81 0.005853940 ubox
6 82 0.018532677 ubox
6 84 0.003172146 ubox
7 26 0.007259022 ubox
7 28 0.998364392 ubox
7 29 0.004354186 ubox
7 31 0.004167914 ubox
7 33 0.003423005 ubox
7 81 0.016827575 ubox
8 27 0.999810916 ubox
8 28 0.004136663 ubox
8 32 0.003480217 ubox
9 26 0.999693794 ubox
10 25 0.999972105 ubox
11 24 0.997000218 ubox
11 29 0.003715573 ubox
12 23 0.993871596 ubox
12 24 0.077133075 ubox
12 28 0.003728415 ubox
13 22 0.712483287 ubox
13 23 0.108973195 ubox
13 27 0.003723670 ubox
14 22 0.696703430 ubox
14 26 0.003692184 ubox
15 21 0.982097625 ubox
15 25 0.003574196 ubox
16 20 0.966372618 ubox
17 23 0.003450570 ubox
18 22 0.003163550 ubox
23 43 0.003347615 ubox
24 42 0.003404991 ubox
25 41 0.003893740 ubox
26 40 0.004506704 ubox
27 39 0.004882540 ubox
28 37 0.003987590 ubox
28 38 0.005095526 ubox
28 43 0.003409538 ubox
28 44 0.030244746 ubox
29 36 0.004008790 ubox
29 37 0.005079385 ubox
29 43 0.030359132 ubox
30 42 0.028956214 ubox
30 70 0.008619206 ubox
31 40 0.490813457 ubox
31 69 0.012110879 ubox
31 70 0.011737352 ubox
31 74 0.008240354 ubox
32 38 0.044688169 ubox
32 39 0.506143350 ubox
32 40 0.108536096 ubox
32 44 0.214286254 ubox
32 60 0.012286388 ubox
32 68 0.012305243 ubox
32 69 0.012866560 ubox
32 73 0.008469034 ubox
32 74 0.005080696 ubox
33 37 0.044985048 ubox
33 38 0.504584809 ubox
33 39 0.132045417 ubox
33 40 0.023997283 ubox
33 43 0.214880862 ubox
33 44 0.013906688 ubox
33 59 0.012323068 ubox
33 67 0.012268661 ubox
33 68 0.013291748 ubox
33 72 0.008408135 ubox
33 73 0.005521164 ubox
34 38 0.130612938 ubox
34 39 0.028622698 ubox
34 42 0.215907092 ubox
34 43 0.013943706 ubox
34 58 0.012321966 ubox
34 67 0.013243494 ubox
34 72 0.005522440 ubox
35 41 0.218944820 ubox
35 46 0.003419633 ubox
35 49 0.005049911 ubox
35 82 0.037582874 ubox
36 48 0.005002515 ubox
36 49 0.019183715 ubox
36 81 0.037455410 ubox
36 82 0.091818229 ubox
37 48 0.019204675 ubox
37 49 0.020962873 ubox
37 81 0.092008302 ubox
37 82 0.042565156 ubox
38 48 0.021011027 ubox
38 49 0.024822189 ubox
38 81 0.042598739 ubox
38 82 0.040332761 ubox
39 46 0.030052734 ubox
39 48 0.024917931 ubox
39 81 0.040375371 ubox
39 82 0.004575367 ubox
39 84 0.068317878 ubox
40 45 0.028175759 ubox
40 52 0.022030627 ubox
40 75 0.004543634 ubox
40 78 0.100601209 ubox
40 81 0.004150154 ubox
40 83 0.042057242 ubox
41 51 0.038131711 ubox
41 67 0.013245402 ubox
41 72 0.010821263 ubox
41 74 0.004587389 ubox
41 76 0.013318659 ubox
41 77 0.102956191 ubox
41 79 0.016451511 ubox
41 80 0.003354035 ubox
42 50 0.041166290 ubox
42 66 0.013315827 ubox
42 71 0.010610548 ubox
42 75 0.018988406 ubox
42 78 0.016760100 ubox
42 83 0.900735057 ubox
43 49 0.041756074 ubox
43 65 0.013154791 ubox
43 82 0.964081127 ubox
44 48 0.041455959 ubox
44 81 0.964463441 ubox
45 69 0.008543639 ubox
45 70 0.045875599 ubox
45 74 0.032683252 ubox
45 80 0.963280032 ubox
46 62 0.014534117 ubox
46 67 0.007990981 ubox
46 68 0.006425236 ubox
46 69 0.051603068 ubox
46 72 0.132619240 ubox
46 73 0.032020148 ubox
46 76 0.027137633 ubox
46 79 0.957928638 ubox
47 61 0.014546621 ubox
47 66 0.008000164 ubox
47 71 0.128098544 ubox
47 75 0.030477000 ubox
47 78 0.954525029 ubox
48 60 0.014519111 ubox
48 68 0.623346550 ubox
48 69 0.051888941 ubox
48 70 0.068408145 ubox
48 73 0.048892696 ubox
48 74 0.026759800 ubox
48 77 0.761240804 ubox
49 59 0.014461209 ubox
49 67 0.698947875 ubox
49 68 0.115506211 ubox
49 69 0.073744684 ubox
49 70 0.081191152 ubox
49 72 0.055380349 ubox
49 73 0.040577085 ubox
49 76 0.609971732 ubox
49 77 0.124913722 ubox
50 69 0.102957394 ubox
50 76 0.172238702 ubox
51 65 0.995754857 ubox
52 64 0.998801885 ubox
53 63 0.999273453 ubox
54 62 0.999282311 ubox
54 67 0.021538460 ubox
54 72 0.017341243 ubox
55 61 0.998109401 ubox
55 66 0.021556145 ubox
55 71 0.017364660 ubox
56 60 0.982179464 ubox
56 70 0.017240310 ubox
57 64 0.021755435 ubox
57 69 0.015956638 ubox
58 63 0.021818882 ubox
59 82 0.012089341 ubox
60 81 0.012146494 ubox
61 80 0.011885264 ubox
63 72 0.008014350 ubox
63 79 0.013841641 ubox
64 71 0.008267783 ubox
64 78 0.014934413 ubox
65 70 0.008230338 ubox
65 74 0.004514449 ubox
65 77 0.015948793 ubox
66 76 0.017061693 ubox
67 82 0.018028131 ubox
68 81 0.018307760 ubox
68 82 0.004274464 ubox
68 84 0.008952117 ubox
69 81 0.004914648 ubox
69 82 0.005874490 ubox
69 83 0.010606172 ubox
69 84 0.019743418 ubox
70 81 0.010153350 ubox
70 82 0.005065286 ubox
70 83 0.031666392 ubox
71 80 0.010907685 ubox
72 82 0.133885328 ubox
73 81 0.136782720 ubox
73 82 0.112467689 ubox
73 84 0.012154977 ubox
74 81 0.113819120 ubox
74 83 0.012168843 ubox
75 80 0.113154678 ubox
76 82 0.005154601 ubox
76 83 0.027559027 ubox
77 81 0.009902421 ubox
77 82 0.029475815 ubox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
5 31 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
15 21 0.9500000 lbox
16 20 0.9500000 lbox
42 83 0.9500000 lbox
43 82 0.9500000 lbox
44 81 0.9500000 lbox
45 80 0.9500000 lbox
46 79 0.9500000 lbox
47 78 0.9500000 lbox
48 77 0.9500000 lbox
49 76 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
54 62 0.9500000 lbox
55 61 0.9500000 lbox
56 60 0.9500000 lbox
showpage
end
%%EOF
