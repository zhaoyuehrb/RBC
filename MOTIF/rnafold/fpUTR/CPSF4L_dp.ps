%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CPSF4L)
} def

/sequence { (\
GCUAUAUUGGGCCCACCUGCCUGGGUUCCAGCAGCUUCCGCAGCCCCAGCAGGAGACGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.219822435 ubox
1 32 0.431471744 ubox
1 35 0.765022508 ubox
1 50 0.004279382 ubox
2 10 0.035042353 ubox
2 11 0.220829851 ubox
2 31 0.430997378 ubox
2 34 0.785127022 ubox
2 49 0.004281436 ubox
2 55 0.003601951 ubox
2 62 0.003618087 ubox
3 9 0.036490229 ubox
3 10 0.214869532 ubox
3 30 0.347116974 ubox
3 33 0.774343172 ubox
3 48 0.004068204 ubox
3 54 0.003560577 ubox
3 61 0.003433939 ubox
4 8 0.031913713 ubox
4 26 0.009688470 ubox
5 25 0.009245759 ubox
6 26 0.012749643 ubox
7 24 0.033704088 ubox
7 25 0.011542561 ubox
7 31 0.785971640 ubox
7 34 0.008515004 ubox
7 59 0.005807492 ubox
7 60 0.003939958 ubox
7 61 0.004939192 ubox
7 62 0.004216153 ubox
8 15 0.011306396 ubox
8 23 0.035269371 ubox
8 24 0.008539401 ubox
8 30 0.882259162 ubox
8 33 0.008536791 ubox
8 58 0.008644218 ubox
8 59 0.004001269 ubox
8 60 0.005538658 ubox
8 61 0.005746264 ubox
9 14 0.012718817 ubox
9 17 0.009218227 ubox
9 18 0.004246585 ubox
9 22 0.037986171 ubox
9 27 0.004689794 ubox
9 28 0.299877742 ubox
9 29 0.921003673 ubox
9 32 0.007303452 ubox
9 57 0.009828037 ubox
10 16 0.009745744 ubox
10 17 0.005058698 ubox
10 21 0.038810279 ubox
10 26 0.003892168 ubox
10 27 0.309140216 ubox
10 28 0.918259108 ubox
10 29 0.014864375 ubox
11 16 0.005167789 ubox
11 20 0.038829198 ubox
11 26 0.717466909 ubox
11 27 0.646817332 ubox
11 28 0.014326681 ubox
12 19 0.038733329 ubox
12 25 0.969495025 ubox
12 59 0.062841499 ubox
13 24 0.969565387 ubox
13 25 0.011401842 ubox
13 58 0.064892238 ubox
13 59 0.149068433 ubox
14 23 0.969522107 ubox
14 24 0.010694669 ubox
14 58 0.149132076 ubox
15 22 0.873430479 ubox
15 26 0.023464090 ubox
16 24 0.009173829 ubox
16 25 0.023698817 ubox
16 53 0.229398595 ubox
17 23 0.010197272 ubox
17 24 0.023684337 ubox
17 34 0.066457101 ubox
17 52 0.230135199 ubox
17 55 0.004191037 ubox
18 23 0.022162895 ubox
18 33 0.067769846 ubox
18 51 0.230104449 ubox
18 54 0.003941959 ubox
19 32 0.068087408 ubox
19 50 0.230141019 ubox
20 31 0.048307774 ubox
20 49 0.172073937 ubox
21 31 0.048185069 ubox
21 49 0.152834981 ubox
22 30 0.068005501 ubox
22 48 0.216060574 ubox
23 29 0.068321422 ubox
23 46 0.079578923 ubox
23 47 0.215978021 ubox
24 28 0.067218781 ubox
24 45 0.081736871 ubox
24 46 0.215193559 ubox
25 44 0.083759017 ubox
25 45 0.214306706 ubox
26 43 0.085510494 ubox
27 42 0.081431758 ubox
30 36 0.004024342 ubox
31 35 0.004468465 ubox
31 41 0.082393522 ubox
31 44 0.208904786 ubox
32 40 0.082411162 ubox
32 43 0.208683903 ubox
34 41 0.211419359 ubox
34 44 0.028638853 ubox
35 40 0.211359177 ubox
35 43 0.028654243 ubox
35 55 0.016820383 ubox
35 59 0.003247621 ubox
35 62 0.581562519 ubox
36 42 0.027448471 ubox
36 54 0.018098653 ubox
36 55 0.069660251 ubox
36 56 0.003867698 ubox
36 58 0.003272159 ubox
36 60 0.015579669 ubox
36 61 0.903352578 ubox
36 62 0.017047772 ubox
37 53 0.017712286 ubox
37 54 0.081958440 ubox
37 60 0.962790122 ubox
37 61 0.019411136 ubox
38 52 0.017779151 ubox
38 53 0.083294556 ubox
38 59 0.969315118 ubox
39 52 0.083258234 ubox
39 58 0.969310783 ubox
40 50 0.077041954 ubox
40 57 0.963222392 ubox
41 49 0.077325578 ubox
43 50 0.059997493 ubox
44 49 0.059906587 ubox
44 53 0.924217997 ubox
45 52 0.922102625 ubox
45 53 0.214924606 ubox
46 52 0.216875526 ubox
46 53 0.182490830 ubox
47 52 0.183423511 ubox
1 35 0.9500000 lbox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
36 61 0.9500000 lbox
37 60 0.9500000 lbox
38 59 0.9500000 lbox
39 58 0.9500000 lbox
40 57 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
showpage
end
%%EOF
