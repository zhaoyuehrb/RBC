%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ERICH6)
} def

/sequence { (\
AGAGGCUCGCGCUCGCGAGAGCCGACCGGGGCCGCGGCCAAAGAGCUGGCUGUAAUCCCGCCUCCCGCCAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 63 0.003561429 ubox
2 8 0.006411661 ubox
2 14 0.006436121 ubox
2 62 0.004029895 ubox
2 64 0.971642728 ubox
3 7 0.005586462 ubox
3 13 0.006312009 ubox
3 63 0.974191978 ubox
4 12 0.005725476 ubox
4 13 0.003379856 ubox
4 23 0.058733707 ubox
4 27 0.049929414 ubox
4 39 0.007201353 ubox
4 62 0.974633471 ubox
4 66 0.004907343 ubox
4 69 0.138938279 ubox
4 73 0.151539803 ubox
5 12 0.004561234 ubox
5 22 0.058880353 ubox
5 26 0.050948877 ubox
5 38 0.007208817 ubox
5 61 0.974453044 ubox
5 65 0.004855904 ubox
5 68 0.139080359 ubox
5 72 0.152844176 ubox
6 11 0.005275784 ubox
6 19 0.046163282 ubox
6 21 0.058520436 ubox
6 37 0.007163347 ubox
6 60 0.957565875 ubox
6 67 0.138884697 ubox
6 71 0.152811701 ubox
7 18 0.055322225 ubox
7 20 0.056928241 ubox
7 25 0.908466621 ubox
7 70 0.145836529 ubox
8 17 0.057136278 ubox
8 19 0.055730161 ubox
8 24 0.982322430 ubox
8 28 0.009291094 ubox
8 36 0.007062259 ubox
8 67 0.006928913 ubox
9 16 0.059178752 ubox
9 22 0.003233007 ubox
9 23 0.983281694 ubox
9 27 0.010485764 ubox
9 35 0.007164395 ubox
9 66 0.006645232 ubox
9 68 0.141128645 ubox
10 15 0.059111828 ubox
10 17 0.053010527 ubox
10 21 0.003981497 ubox
10 24 0.032027842 ubox
10 28 0.004754051 ubox
10 34 0.007163366 ubox
10 67 0.141046442 ubox
11 16 0.051805420 ubox
11 22 0.994738206 ubox
11 23 0.024515956 ubox
11 27 0.005505329 ubox
11 32 0.004324956 ubox
11 33 0.005735589 ubox
11 66 0.044221964 ubox
11 72 0.031128957 ubox
12 19 0.003613865 ubox
12 21 0.995658331 ubox
12 31 0.006036234 ubox
12 71 0.031194035 ubox
13 18 0.003374572 ubox
13 20 0.995479769 ubox
13 25 0.016852338 ubox
13 30 0.005771024 ubox
13 70 0.030839024 ubox
14 19 0.995165913 ubox
14 24 0.018096189 ubox
14 29 0.005719669 ubox
14 30 0.003665305 ubox
15 22 0.018431504 ubox
15 23 0.013038959 ubox
15 61 0.015599920 ubox
15 66 0.004032600 ubox
15 68 0.032440417 ubox
16 21 0.022328669 ubox
16 28 0.006324251 ubox
16 60 0.015606924 ubox
16 67 0.032466277 ubox
17 27 0.006299763 ubox
17 59 0.015516842 ubox
17 64 0.017824090 ubox
17 66 0.032407166 ubox
18 63 0.017882969 ubox
19 57 0.014140694 ubox
19 62 0.017886319 ubox
19 64 0.032999145 ubox
20 56 0.013251194 ubox
20 63 0.033047025 ubox
21 32 0.021794315 ubox
21 61 0.018211811 ubox
21 62 0.032577220 ubox
21 68 0.007200175 ubox
22 31 0.021839629 ubox
22 60 0.017247508 ubox
22 67 0.007148435 ubox
23 28 0.004790793 ubox
23 30 0.021824005 ubox
23 60 0.007903632 ubox
23 67 0.003219557 ubox
24 59 0.005340288 ubox
24 64 0.096383083 ubox
24 66 0.009880412 ubox
25 63 0.094853125 ubox
27 60 0.270115344 ubox
27 67 0.007533241 ubox
28 58 0.051685969 ubox
28 59 0.968149830 ubox
28 62 0.005624167 ubox
28 64 0.026505670 ubox
28 65 0.014554173 ubox
28 66 0.009860013 ubox
29 57 0.051852488 ubox
29 58 0.969027510 ubox
29 59 0.237236563 ubox
29 61 0.005459402 ubox
29 63 0.026804398 ubox
29 64 0.014591376 ubox
29 65 0.009673455 ubox
30 39 0.005231030 ubox
30 56 0.050950303 ubox
30 57 0.968754707 ubox
30 58 0.237661118 ubox
30 59 0.011364032 ubox
30 62 0.030575950 ubox
30 63 0.004446741 ubox
30 64 0.008537280 ubox
31 38 0.005243357 ubox
31 53 0.003601103 ubox
31 56 0.896463598 ubox
31 57 0.237405300 ubox
31 58 0.011346392 ubox
31 61 0.030925000 ubox
31 62 0.006260893 ubox
31 63 0.005159412 ubox
32 37 0.005245626 ubox
32 52 0.003800497 ubox
32 60 0.030565380 ubox
33 52 0.003721304 ubox
33 60 0.008121330 ubox
34 53 0.983026065 ubox
34 59 0.007690193 ubox
34 61 0.003619139 ubox
35 52 0.999523854 ubox
35 60 0.003607388 ubox
36 51 0.999155314 ubox
36 59 0.003403191 ubox
37 46 0.003254716 ubox
37 50 0.999934671 ubox
38 45 0.003249690 ubox
38 49 0.999942688 ubox
39 48 0.999911275 ubox
40 47 0.935407720 ubox
45 72 0.008985337 ubox
46 71 0.009007669 ubox
47 70 0.009007512 ubox
48 69 0.009011451 ubox
49 68 0.009011379 ubox
50 67 0.008988170 ubox
60 66 0.006257768 ubox
60 68 0.040770729 ubox
60 72 0.017664565 ubox
61 67 0.041306170 ubox
61 71 0.017079332 ubox
62 71 0.009047960 ubox
63 70 0.009846636 ubox
2 64 0.9500000 lbox
3 63 0.9500000 lbox
4 62 0.9500000 lbox
5 61 0.9500000 lbox
6 60 0.9500000 lbox
7 25 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
14 19 0.9500000 lbox
28 59 0.9500000 lbox
29 58 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
showpage
end
%%EOF
