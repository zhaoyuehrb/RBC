%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BORCS7)
} def

/sequence { (\
CUCUUUUCCUUCCGCUUUGCUUGUCUUUUGGCCCCGGCGACUCACCAUCGUCAGUGCGCAACCGUUCGCUAACUGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 40 0.009228048 ubox
2 76 0.028793703 ubox
3 39 0.009028390 ubox
3 75 0.029964336 ubox
4 40 0.005459779 ubox
4 76 0.005780235 ubox
4 77 0.007201310 ubox
5 40 0.007958671 ubox
5 72 0.003603287 ubox
5 75 0.004521082 ubox
5 76 0.008205796 ubox
5 77 0.007945667 ubox
6 39 0.006563351 ubox
6 40 0.008588805 ubox
6 71 0.003398732 ubox
6 72 0.008063009 ubox
6 75 0.006263281 ubox
6 76 0.008714345 ubox
6 77 0.022677555 ubox
7 39 0.006008024 ubox
7 40 0.059927745 ubox
7 71 0.007228062 ubox
7 75 0.006593614 ubox
7 76 0.030218374 ubox
8 31 0.006349492 ubox
8 37 0.010448374 ubox
8 39 0.064229454 ubox
8 75 0.030398621 ubox
9 30 0.006437890 ubox
9 36 0.010581580 ubox
9 37 0.009174220 ubox
10 36 0.008788115 ubox
10 40 0.033684248 ubox
10 61 0.004521938 ubox
10 72 0.003440327 ubox
10 76 0.005800156 ubox
10 77 0.020248915 ubox
11 39 0.027525094 ubox
11 40 0.139728856 ubox
11 60 0.004911836 ubox
11 71 0.003329419 ubox
11 75 0.004457216 ubox
11 76 0.028000211 ubox
12 31 0.004909287 ubox
12 36 0.003872002 ubox
12 37 0.120396379 ubox
12 39 0.107136786 ubox
12 75 0.028095980 ubox
13 19 0.004793132 ubox
13 23 0.004764005 ubox
13 30 0.004962270 ubox
13 36 0.122343578 ubox
13 39 0.890090715 ubox
13 50 0.032326358 ubox
13 56 0.006488614 ubox
13 58 0.009596306 ubox
13 64 0.005678941 ubox
13 75 0.010975891 ubox
14 18 0.003341939 ubox
14 20 0.039882486 ubox
14 22 0.003471159 ubox
14 24 0.011165960 ubox
14 29 0.003408621 ubox
14 32 0.021933589 ubox
14 35 0.121497493 ubox
14 38 0.906622284 ubox
14 49 0.032771984 ubox
14 51 0.007440496 ubox
14 55 0.007572827 ubox
14 57 0.010378272 ubox
14 63 0.005767524 ubox
14 69 0.010837218 ubox
14 74 0.007948724 ubox
15 19 0.039648731 ubox
15 23 0.012525488 ubox
15 31 0.022131782 ubox
15 37 0.906538687 ubox
15 50 0.009646779 ubox
15 54 0.007640098 ubox
15 56 0.010359086 ubox
15 68 0.010830198 ubox
16 30 0.021737875 ubox
16 36 0.866790474 ubox
16 37 0.007455777 ubox
16 40 0.022463951 ubox
16 53 0.007234397 ubox
16 72 0.005377128 ubox
16 77 0.003196741 ubox
17 36 0.052268200 ubox
17 37 0.006086858 ubox
17 39 0.017204409 ubox
17 40 0.342219500 ubox
17 61 0.007372008 ubox
17 71 0.004692329 ubox
17 76 0.003829430 ubox
18 36 0.044294317 ubox
18 39 0.374633332 ubox
18 44 0.009268891 ubox
18 47 0.008767503 ubox
18 53 0.003331982 ubox
18 60 0.008200105 ubox
18 64 0.006411702 ubox
18 75 0.003614296 ubox
19 32 0.892469804 ubox
19 35 0.091640364 ubox
19 38 0.393461420 ubox
19 43 0.009958618 ubox
19 46 0.008951565 ubox
19 55 0.003488786 ubox
19 59 0.008365190 ubox
19 63 0.007049408 ubox
19 65 0.003737564 ubox
19 69 0.008035871 ubox
20 31 0.893926558 ubox
20 37 0.393531212 ubox
20 54 0.003530806 ubox
20 58 0.008348147 ubox
20 64 0.003785954 ubox
20 68 0.008037537 ubox
21 30 0.889542105 ubox
21 31 0.010625671 ubox
21 36 0.388699650 ubox
21 40 0.017221110 ubox
21 53 0.003301539 ubox
21 61 0.007894094 ubox
22 30 0.035762344 ubox
22 36 0.012615132 ubox
22 39 0.018560245 ubox
22 60 0.008459827 ubox
23 29 0.045105561 ubox
23 32 0.440534879 ubox
23 35 0.010324458 ubox
23 38 0.019300120 ubox
23 41 0.014857695 ubox
23 59 0.008481850 ubox
23 73 0.003235740 ubox
24 31 0.440655838 ubox
24 37 0.019249834 ubox
24 40 0.014884220 ubox
24 58 0.008355109 ubox
24 76 0.054046818 ubox
25 30 0.440189846 ubox
25 31 0.015725401 ubox
25 36 0.019148327 ubox
25 39 0.014865657 ubox
25 75 0.058079674 ubox
26 30 0.014327660 ubox
26 76 0.003315833 ubox
27 37 0.004297855 ubox
27 75 0.003324122 ubox
28 36 0.003568134 ubox
28 37 0.008103620 ubox
28 54 0.007563406 ubox
28 61 0.006460160 ubox
28 72 0.059310218 ubox
29 36 0.009535218 ubox
29 47 0.003796996 ubox
29 53 0.007961584 ubox
29 60 0.007301371 ubox
29 71 0.061250912 ubox
30 35 0.010656979 ubox
30 46 0.004204584 ubox
30 52 0.008062170 ubox
30 59 0.007391810 ubox
30 63 0.003759155 ubox
30 70 0.061549624 ubox
31 38 0.010322038 ubox
31 45 0.004183634 ubox
31 51 0.008072657 ubox
31 57 0.009843846 ubox
31 62 0.003753365 ubox
31 69 0.061601529 ubox
32 37 0.010361742 ubox
32 50 0.008078923 ubox
32 56 0.009844872 ubox
32 68 0.061493151 ubox
35 50 0.005939833 ubox
35 64 0.057501493 ubox
35 75 0.003274743 ubox
36 43 0.003538319 ubox
36 46 0.017039767 ubox
36 49 0.006022998 ubox
36 52 0.041990524 ubox
36 63 0.057896414 ubox
36 66 0.004563666 ubox
36 70 0.006320453 ubox
37 45 0.017028928 ubox
37 48 0.004732867 ubox
37 51 0.049570590 ubox
37 57 0.006041401 ubox
37 59 0.044837632 ubox
37 62 0.042495811 ubox
37 65 0.004696497 ubox
37 69 0.006770153 ubox
38 50 0.087646684 ubox
38 54 0.003882966 ubox
38 56 0.006650654 ubox
38 58 0.057605995 ubox
38 64 0.004731148 ubox
38 68 0.006797215 ubox
39 49 0.095025397 ubox
39 52 0.056505579 ubox
39 55 0.003770049 ubox
39 57 0.057441920 ubox
39 63 0.004645464 ubox
39 67 0.006770143 ubox
40 48 0.090901948 ubox
40 51 0.097755210 ubox
40 55 0.065259970 ubox
40 66 0.006183874 ubox
41 50 0.128708471 ubox
41 54 0.066044640 ubox
42 53 0.064938058 ubox
42 76 0.066597652 ubox
43 56 0.024652985 ubox
43 75 0.069897020 ubox
44 51 0.086404981 ubox
44 55 0.024965845 ubox
44 74 0.069350775 ubox
45 50 0.105793928 ubox
45 54 0.024988423 ubox
46 56 0.003809630 ubox
46 75 0.061852832 ubox
47 55 0.003898122 ubox
47 74 0.057545023 ubox
48 54 0.003806393 ubox
48 76 0.136360626 ubox
49 58 0.006752888 ubox
49 75 0.145515512 ubox
50 57 0.007056290 ubox
50 69 0.003707389 ubox
50 73 0.214539503 ubox
50 74 0.051827508 ubox
51 56 0.006601945 ubox
51 68 0.003653951 ubox
51 72 0.214246240 ubox
51 76 0.900518644 ubox
52 75 0.967930232 ubox
53 70 0.226720319 ubox
53 74 0.968449361 ubox
54 62 0.004919405 ubox
54 69 0.234463230 ubox
54 73 0.968487858 ubox
55 61 0.004937962 ubox
55 68 0.234353621 ubox
55 71 0.123618795 ubox
55 72 0.928937722 ubox
56 65 0.065513056 ubox
56 67 0.231513766 ubox
56 69 0.657713167 ubox
56 70 0.098181210 ubox
57 64 0.073390115 ubox
57 68 0.660139185 ubox
58 63 0.070352735 ubox
58 65 0.245144968 ubox
58 67 0.647931327 ubox
58 69 0.704937252 ubox
59 64 0.278600532 ubox
59 68 0.705968363 ubox
60 66 0.267479273 ubox
61 65 0.205723284 ubox
64 73 0.007993272 ubox
65 72 0.007904856 ubox
65 77 0.007593373 ubox
66 71 0.006625267 ubox
66 76 0.010829247 ubox
67 75 0.011114933 ubox
68 74 0.009012861 ubox
13 39 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
51 76 0.9500000 lbox
52 75 0.9500000 lbox
53 74 0.9500000 lbox
54 73 0.9500000 lbox
55 72 0.9500000 lbox
58 69 0.9500000 lbox
59 68 0.9500000 lbox
showpage
end
%%EOF
