%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGAGAAAGCCCCGCCCCCGGCGCCCGCUCCCACUCCUGAUUGGCCGGGCCAGCCCGGGGAGGCCCGGCGGGACCCCGGCCCGCGUCUCAGCUAUAAAGAUAGCCCCGGCAUGACAGCCGCGGCGAAGCUCUUCUAGUUCAUCUGCUGGCCGGCUCUCAGUCCCCGUGGCGCCCCCUUUCCUCUUGUCCCAGAGCGCUCUCGACUCCACC\
) } def
/len { sequence length } bind def

/coor [
[96.35586548 230.32226562]
[94.58176422 215.42755127]
[92.80767059 200.53283691]
[91.03356934 185.63812256]
[89.25947571 170.74340820]
[87.48537445 155.84869385]
[80.94437408 152.17918396]
[75.36038208 166.10107422]
[76.47196960 181.05982971]
[65.83457184 191.63554382]
[50.88253021 190.43696594]
[42.06566620 178.30177307]
[45.54597855 163.71110535]
[58.89180756 156.86219788]
[67.86236572 144.84016418]
[61.32136536 141.17066956]
[47.68529129 147.42025757]
[34.04922104 153.66986084]
[20.41314697 159.91946411]
[11.09147167 172.70292664]
[-3.70219803 170.97186279]
[-17.33827209 177.22146606]
[-30.97434425 183.47106934]
[-44.51631165 189.92204285]
[-57.96120071 196.57298279]
[-71.40608978 203.22392273]
[-84.85097504 209.87486267]
[-98.29586792 216.52580261]
[-101.17774963 227.01304626]
[-109.19029236 234.03863525]
[-119.52927399 235.46484375]
[-128.74830627 231.05995178]
[-142.38438416 237.30955505]
[-156.02046204 243.55914307]
[-158.94937134 258.79730225]
[-170.29866028 269.37902832]
[-185.70428467 271.23547363]
[-199.24246216 263.65280151]
[-205.70750427 249.54666138]
[-202.61344910 234.34118652]
[-191.15003967 223.88317871]
[-175.72518921 222.19396973]
[-162.27006531 229.92308044]
[-148.63398743 223.67347717]
[-134.99790955 217.42387390]
[-124.98538208 200.88140869]
[-104.94680023 203.08090210]
[-91.50191498 196.42996216]
[-78.05702972 189.77903748]
[-64.61213684 183.12809753]
[-51.16725159 176.47715759]
[-48.81637573 172.32073975]
[-43.82987595 169.59660339]
[-37.22394562 169.83499146]
[-23.58787155 163.58538818]
[-9.95179939 157.33578491]
[-1.60546768 144.99934387]
[14.16354561 146.28338623]
[27.79961777 140.03379822]
[41.43569183 133.78419495]
[55.07176590 127.53459167]
[65.14377594 77.66767883]
[103.56258392 70.11253357]
[108.99340057 56.13018036]
[114.42421722 42.14782715]
[119.75128174 28.12561798]
[124.97430420 14.06432247]
[130.19732666 0.00302768]
[123.86112976 -14.22688389]
[129.35833740 -28.41263199]
[142.96342468 -34.36553192]
[148.18644714 -48.42682648]
[153.40946960 -62.48812103]
[158.63249207 -76.54941559]
[163.85552979 -90.61071014]
[158.08357239 -113.07662201]
[175.84992981 -126.80300140]
[180.01771545 -141.21235657]
[184.18550110 -155.62171936]
[188.35328674 -170.03106689]
[192.52107239 -184.44042969]
[196.68885803 -198.84977722]
[193.09063721 -214.25639343]
[204.05958557 -224.33267212]
[208.22737122 -238.74203491]
[212.39515686 -253.15139771]
[201.86978149 -264.24929810]
[198.33586121 -279.02795410]
[202.64509583 -293.49505615]
[213.54420471 -303.79385376]
[228.03730774 -307.23126221]
[232.20509338 -321.64059448]
[236.37287903 -336.04995728]
[240.54066467 -350.45932007]
[244.70845032 -364.86868286]
[239.17630005 -376.51965332]
[242.94375610 -388.43508911]
[253.47126770 -394.39215088]
[257.85211182 -408.73815918]
[262.23297119 -423.08416748]
[266.61383057 -437.43017578]
[256.24896240 -454.64291382]
[261.80001831 -473.63543701]
[279.25613403 -482.28552246]
[282.99508667 -496.81204224]
[286.73403931 -511.33859253]
[282.68084717 -526.63177490]
[293.34637451 -537.02868652]
[297.08532715 -551.55523682]
[300.82431030 -566.08178711]
[304.56326294 -580.60827637]
[296.31149292 -594.08734131]
[300.08889771 -609.43353271]
[313.65438843 -617.54235840]
[328.95983887 -613.60290527]
[336.92474365 -599.95245361]
[332.82373047 -584.68951416]
[319.08978271 -576.86932373]
[315.35083008 -562.34283447]
[311.61187744 -547.81628418]
[307.87292480 -533.28973389]
[312.19354248 -519.03558350]
[301.26058960 -507.59960938]
[297.52160645 -493.07308960]
[293.78265381 -478.54656982]
[301.18978882 -471.44174194]
[305.00964355 -461.82836914]
[304.49081421 -451.41607666]
[299.65997314 -442.08663940]
[291.32913208 -435.55395508]
[280.95983887 -433.04934692]
[276.57897949 -418.70330811]
[272.19812012 -404.35729980]
[267.81729126 -390.01129150]
[272.68591309 -373.15084839]
[259.11779785 -360.70089722]
[254.95002747 -346.29153442]
[250.78224182 -331.88217163]
[246.61444092 -317.47280884]
[242.44665527 -303.06347656]
[252.86700439 -292.42004395]
[256.58551025 -277.89321899]
[252.50650024 -263.35952759]
[241.62905884 -252.74926758]
[226.80450439 -248.98359680]
[222.63671875 -234.57424927]
[218.46893311 -220.16488647]
[222.36526489 -205.78894043]
[211.09822083 -194.68199158]
[206.93043518 -180.27264404]
[202.76264954 -165.86328125]
[198.59486389 -151.45393372]
[194.42706299 -137.04457092]
[190.25927734 -122.63521576]
[195.13351440 -117.47077942]
[197.94258118 -110.87456512]
[198.29495239 -103.64563751]
[196.09988403 -96.67763519]
[191.58441162 -90.84828949]
[185.27090454 -86.90890503]
[177.91682434 -85.38768768]
[172.69378662 -71.32639313]
[167.47076416 -57.26509857]
[162.24774170 -43.20380402]
[157.02471924 -29.14250755]
[163.44454956 -15.75141335]
[158.34796143 -1.41685665]
[144.25862122 5.22605228]
[139.03559875 19.28734779]
[133.81257629 33.34864044]
[134.43023682 40.71286392]
[128.40657043 47.57864380]
[122.97575378 61.56099701]
[117.54493713 75.54335022]
[124.16436005 77.63846588]
[130.57191467 81.47246552]
[136.32525635 87.02700806]
[140.98478699 94.17459106]
[144.13987732 102.67975616]
[145.43444824 112.20640564]
[144.59077454 122.33111572]
[141.42984009 132.56175232]
[151.05271912 144.06828308]
[160.67559814 155.57481384]
[170.29849243 167.08134460]
[186.06062317 168.23487854]
[196.32708740 180.25050354]
[195.00695801 195.99955750]
[182.88346863 206.13841248]
[167.14924622 204.65185547]
[157.13912964 192.42184448]
[158.79196167 176.70422363]
[149.16908264 165.19769287]
[139.54620361 153.69116211]
[129.92330933 142.18464661]
[123.03750610 145.15713501]
[109.26589966 151.10209656]
[102.38009644 154.07458496]
[104.15419006 168.96931458]
[105.92829132 183.86402893]
[107.70238495 198.75874329]
[109.47648621 213.65345764]
[111.25057983 228.54817200]
[125.16895294 235.20268250]
[133.26068115 248.33764648]
[132.94374084 263.76174927]
[124.31924438 276.55322266]
[110.13925171 282.63034058]
[94.92854309 280.05392456]
[83.54080200 269.64611816]
[79.60980988 254.72796631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[16 61]
[17 60]
[18 59]
[19 58]
[21 56]
[22 55]
[23 54]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[32 45]
[33 44]
[34 43]
[63 174]
[64 173]
[65 172]
[66 170]
[67 169]
[68 168]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[84 147]
[85 146]
[86 145]
[91 140]
[92 139]
[93 138]
[94 137]
[95 136]
[98 134]
[99 133]
[100 132]
[101 131]
[104 125]
[105 124]
[106 123]
[108 121]
[109 120]
[110 119]
[111 118]
[182 195]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
