%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:49:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRYBB1)
} def

/sequence { (\
AUAGCACCUGCCCGCCUGCCUGUCCUCCAGCAGGAAGUAGCAAGUCCCCAGACUUUUGCAGGCGGGAACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.165638686 ubox
3 9 0.186449895 ubox
4 8 0.184390884 ubox
4 11 0.101017342 ubox
5 10 0.131547974 ubox
7 65 0.004060801 ubox
7 66 0.140885978 ubox
8 64 0.004007254 ubox
8 65 0.141487187 ubox
8 66 0.006064222 ubox
9 64 0.141355412 ubox
10 63 0.141508723 ubox
11 62 0.141246192 ubox
11 65 0.004781901 ubox
11 66 0.981397394 ubox
12 61 0.140668710 ubox
12 62 0.008652349 ubox
12 64 0.003415074 ubox
12 65 0.989594503 ubox
12 66 0.008252079 ubox
13 61 0.012213871 ubox
13 64 0.989645337 ubox
13 65 0.005861503 ubox
14 38 0.008133194 ubox
14 41 0.008980833 ubox
14 59 0.037703029 ubox
14 63 0.989672951 ubox
15 34 0.132043738 ubox
15 37 0.006760175 ubox
15 40 0.008737424 ubox
15 58 0.036566103 ubox
15 62 0.989675481 ubox
15 66 0.021794314 ubox
16 33 0.132809344 ubox
16 37 0.039092501 ubox
16 40 0.012792402 ubox
16 61 0.989532071 ubox
16 65 0.021916220 ubox
17 32 0.132926317 ubox
17 36 0.046583731 ubox
17 39 0.017406129 ubox
17 42 0.007613362 ubox
17 60 0.976755810 ubox
17 64 0.021902426 ubox
18 31 0.133198968 ubox
18 38 0.022260713 ubox
18 41 0.015951424 ubox
18 59 0.851356306 ubox
18 63 0.021932965 ubox
19 30 0.097458816 ubox
19 34 0.681717439 ubox
19 37 0.020026509 ubox
19 40 0.016560082 ubox
19 58 0.713429161 ubox
19 62 0.021934464 ubox
20 30 0.100599894 ubox
20 33 0.796734517 ubox
20 34 0.022667503 ubox
20 37 0.271972766 ubox
20 40 0.281069910 ubox
20 44 0.009397131 ubox
20 51 0.020056499 ubox
20 61 0.021934065 ubox
21 29 0.138212996 ubox
21 32 0.797485380 ubox
21 33 0.012495717 ubox
21 36 0.270494275 ubox
21 39 0.282508248 ubox
21 42 0.153057943 ubox
21 43 0.007386322 ubox
21 50 0.020056964 ubox
21 60 0.021733344 ubox
22 28 0.138616148 ubox
22 31 0.797823286 ubox
22 38 0.257315489 ubox
22 41 0.200530428 ubox
22 49 0.019991992 ubox
22 53 0.041595600 ubox
22 57 0.014321169 ubox
22 59 0.019710852 ubox
23 30 0.773686456 ubox
23 34 0.009517949 ubox
23 35 0.446625847 ubox
23 37 0.052814476 ubox
23 40 0.195433551 ubox
23 52 0.041589182 ubox
23 58 0.017427874 ubox
24 33 0.011606930 ubox
24 34 0.471009088 ubox
24 51 0.041219784 ubox
25 33 0.471038477 ubox
25 34 0.012285436 ubox
25 37 0.202010638 ubox
25 40 0.011745699 ubox
25 44 0.012648188 ubox
25 51 0.005019151 ubox
26 32 0.451656742 ubox
26 33 0.011717517 ubox
26 34 0.005944777 ubox
26 35 0.297585203 ubox
26 36 0.143336026 ubox
26 39 0.007885798 ubox
26 43 0.012330084 ubox
26 50 0.006191010 ubox
26 52 0.003649508 ubox
27 33 0.007292484 ubox
27 34 0.338302945 ubox
27 51 0.003747461 ubox
28 33 0.337863204 ubox
30 38 0.014840676 ubox
30 41 0.077719812 ubox
30 45 0.011130381 ubox
31 37 0.016636575 ubox
31 40 0.078172604 ubox
31 44 0.011336452 ubox
33 47 0.014184480 ubox
33 48 0.004163064 ubox
33 49 0.004611702 ubox
33 57 0.008370434 ubox
34 46 0.014602573 ubox
34 47 0.004223527 ubox
34 48 0.004683895 ubox
34 56 0.041424522 ubox
34 57 0.022429749 ubox
35 45 0.013926807 ubox
35 55 0.045943750 ubox
35 56 0.024429571 ubox
35 57 0.037911075 ubox
36 54 0.046902048 ubox
36 55 0.018461878 ubox
36 56 0.039917743 ubox
36 57 0.035689414 ubox
37 53 0.046998267 ubox
37 54 0.007648379 ubox
37 55 0.025224406 ubox
37 56 0.037592788 ubox
37 59 0.426356006 ubox
38 52 0.045463438 ubox
38 58 0.460753242 ubox
39 54 0.005777437 ubox
39 55 0.010977890 ubox
39 56 0.037538479 ubox
39 57 0.486935738 ubox
40 53 0.005324082 ubox
40 54 0.005460164 ubox
40 55 0.027651183 ubox
40 56 0.482181026 ubox
40 59 0.298259918 ubox
41 58 0.326058088 ubox
42 55 0.851284857 ubox
42 56 0.055445709 ubox
42 57 0.285595060 ubox
43 54 0.972528748 ubox
43 55 0.048972441 ubox
43 56 0.141100794 ubox
43 57 0.005690415 ubox
44 53 0.996043963 ubox
44 54 0.008883498 ubox
44 55 0.043937881 ubox
45 52 0.996090249 ubox
46 51 0.992449268 ubox
49 58 0.008934054 ubox
50 57 0.009086239 ubox
51 56 0.007462038 ubox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
13 64 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
17 60 0.9500000 lbox
19 34 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
