%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GNPDA1)
} def

/sequence { (\
GUGACCCGCGCGGGGCCGGGCCGCCGGCGCAGUCGCUGCAGCCGCCGCGGGAGGCGUCCGUGACAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.071965839 ubox
1 11 0.008755288 ubox
1 24 0.015895110 ubox
1 30 0.004322569 ubox
1 36 0.011812695 ubox
1 55 0.858834981 ubox
1 57 0.003527326 ubox
1 64 0.093625702 ubox
2 8 0.073958436 ubox
2 10 0.008860172 ubox
2 23 0.015932433 ubox
2 29 0.004295355 ubox
2 35 0.011825983 ubox
2 54 0.858332435 ubox
2 56 0.014453226 ubox
2 63 0.092993320 ubox
2 65 0.082125493 ubox
3 7 0.072517340 ubox
3 9 0.010460762 ubox
3 22 0.015999677 ubox
3 28 0.003780521 ubox
3 34 0.011857920 ubox
3 55 0.031974329 ubox
3 58 0.013450407 ubox
3 64 0.090934036 ubox
4 33 0.011854409 ubox
4 57 0.013545352 ubox
4 61 0.032462963 ubox
5 14 0.016683983 ubox
5 20 0.016536792 ubox
5 32 0.011817735 ubox
5 50 0.003508430 ubox
5 51 0.871186427 ubox
5 56 0.008779388 ubox
5 60 0.026721242 ubox
6 13 0.016785772 ubox
6 14 0.003839711 ubox
6 19 0.016576221 ubox
6 27 0.003918651 ubox
6 49 0.003176958 ubox
6 50 0.871925026 ubox
6 51 0.004136881 ubox
6 54 0.005923063 ubox
7 12 0.016763241 ubox
7 13 0.003847049 ubox
7 18 0.016575197 ubox
7 26 0.004073896 ubox
7 29 0.006486918 ubox
7 49 0.872011873 ubox
7 50 0.004001475 ubox
7 53 0.005901780 ubox
7 62 0.261030816 ubox
8 16 0.005471319 ubox
8 17 0.015647341 ubox
8 25 0.004206968 ubox
8 28 0.006549211 ubox
8 30 0.011297338 ubox
8 48 0.872012180 ubox
8 57 0.014276406 ubox
8 61 0.262429880 ubox
9 15 0.007715121 ubox
9 27 0.006544064 ubox
9 29 0.011310673 ubox
9 47 0.871822309 ubox
9 49 0.006173670 ubox
9 56 0.014448091 ubox
9 60 0.262635277 ubox
9 62 0.400680958 ubox
10 16 0.014511304 ubox
10 24 0.012604321 ubox
10 28 0.011287246 ubox
10 45 0.605240539 ubox
10 46 0.627340346 ubox
10 48 0.006877383 ubox
10 55 0.014427087 ubox
10 59 0.262458042 ubox
10 61 0.410640376 ubox
11 15 0.014407337 ubox
11 23 0.012923530 ubox
11 26 0.010227307 ubox
11 27 0.008341649 ubox
11 44 0.855908250 ubox
11 47 0.006995784 ubox
11 49 0.004609594 ubox
11 54 0.014412652 ubox
11 60 0.411477368 ubox
12 22 0.012899788 ubox
12 25 0.018350179 ubox
12 43 0.855066806 ubox
12 46 0.007532986 ubox
12 48 0.004741521 ubox
12 58 0.262683187 ubox
12 59 0.411414424 ubox
13 21 0.012852803 ubox
13 24 0.018386637 ubox
13 42 0.851805381 ubox
13 43 0.169571576 ubox
13 45 0.007616505 ubox
13 57 0.260647917 ubox
13 58 0.411120526 ubox
14 22 0.021901936 ubox
14 25 0.007249845 ubox
14 42 0.173556652 ubox
14 43 0.005833118 ubox
14 46 0.006918186 ubox
14 57 0.370418718 ubox
14 58 0.003799953 ubox
15 21 0.021940871 ubox
15 24 0.007336081 ubox
15 28 0.871064737 ubox
15 39 0.006601843 ubox
15 42 0.004248555 ubox
15 45 0.007342309 ubox
15 55 0.487883306 ubox
16 20 0.021786259 ubox
16 23 0.007305787 ubox
16 27 0.871884863 ubox
16 38 0.006441678 ubox
16 41 0.003860002 ubox
16 44 0.007102437 ubox
16 50 0.014092820 ubox
16 54 0.488307143 ubox
17 26 0.871889410 ubox
17 49 0.014105045 ubox
17 53 0.488042514 ubox
18 25 0.871838683 ubox
18 48 0.014032685 ubox
19 24 0.870907614 ubox
19 25 0.008048945 ubox
19 34 0.005331998 ubox
19 43 0.007145965 ubox
19 46 0.013862770 ubox
20 24 0.011173741 ubox
20 33 0.005480519 ubox
20 42 0.007333542 ubox
20 45 0.013871695 ubox
20 48 0.024534522 ubox
21 32 0.005551517 ubox
21 41 0.007477595 ubox
21 44 0.013479548 ubox
21 47 0.023514560 ubox
21 50 0.487325725 ubox
21 51 0.010458878 ubox
22 47 0.008993226 ubox
22 49 0.487626591 ubox
22 50 0.008105697 ubox
23 30 0.005580383 ubox
23 39 0.011745497 ubox
23 42 0.011439714 ubox
23 45 0.022874720 ubox
23 46 0.011774156 ubox
23 48 0.487646148 ubox
24 29 0.005570059 ubox
24 38 0.008437914 ubox
24 41 0.011431191 ubox
24 44 0.016229444 ubox
24 47 0.482613977 ubox
25 38 0.014126922 ubox
25 44 0.471955955 ubox
25 47 0.053947491 ubox
25 60 0.003397924 ubox
26 37 0.016873993 ubox
26 43 0.483079300 ubox
26 46 0.076108276 ubox
26 59 0.003484936 ubox
27 36 0.017250376 ubox
27 39 0.004752916 ubox
27 42 0.483107092 ubox
27 45 0.076115909 ubox
27 58 0.003463171 ubox
28 35 0.017258851 ubox
28 38 0.004835959 ubox
28 41 0.482964215 ubox
28 44 0.076077849 ubox
28 56 0.004418894 ubox
29 34 0.016311251 ubox
29 36 0.074913528 ubox
29 39 0.993430733 ubox
29 42 0.034948832 ubox
29 43 0.046303172 ubox
29 55 0.004672742 ubox
30 35 0.074914569 ubox
30 38 0.995219786 ubox
30 41 0.049215199 ubox
30 54 0.004668293 ubox
31 37 0.992776411 ubox
32 36 0.971018412 ubox
32 39 0.048354034 ubox
32 42 0.007804360 ubox
32 64 0.012546955 ubox
33 38 0.045278705 ubox
33 41 0.007710505 ubox
33 50 0.004254868 ubox
33 63 0.012564168 ubox
34 49 0.004634440 ubox
34 62 0.012569282 ubox
35 42 0.015878783 ubox
35 48 0.004677956 ubox
35 61 0.012555983 ubox
36 41 0.016033661 ubox
36 47 0.004675186 ubox
36 60 0.012538346 ubox
37 56 0.003650957 ubox
37 65 0.006233719 ubox
38 45 0.006840735 ubox
38 55 0.004611029 ubox
38 57 0.006002175 ubox
38 59 0.003497522 ubox
38 61 0.003648299 ubox
38 64 0.006738561 ubox
39 44 0.006847678 ubox
39 54 0.004612454 ubox
39 56 0.006090128 ubox
39 60 0.003712774 ubox
39 62 0.005332179 ubox
40 61 0.005244201 ubox
41 55 0.013426117 ubox
41 61 0.004780157 ubox
42 51 0.004559137 ubox
42 54 0.013433674 ubox
42 60 0.004905409 ubox
43 50 0.004553550 ubox
43 53 0.013403421 ubox
43 56 0.015195976 ubox
44 55 0.015745818 ubox
45 51 0.013208642 ubox
45 54 0.015748670 ubox
46 50 0.013134829 ubox
46 53 0.015745701 ubox
46 62 0.017636337 ubox
47 61 0.017764659 ubox
48 60 0.017781803 ubox
49 59 0.017544656 ubox
50 58 0.017290507 ubox
50 59 0.013867275 ubox
51 57 0.014529824 ubox
51 58 0.016289596 ubox
52 57 0.016269589 ubox
53 59 0.040670468 ubox
54 58 0.040062735 ubox
54 61 0.023284315 ubox
55 60 0.024049773 ubox
55 62 0.010900328 ubox
56 61 0.009440536 ubox
56 64 0.757801213 ubox
57 63 0.758326956 ubox
58 62 0.752157723 ubox
1 55 0.9500000 lbox
2 54 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
9 47 0.9500000 lbox
10 46 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
13 42 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
56 64 0.9500000 lbox
57 63 0.9500000 lbox
58 62 0.9500000 lbox
showpage
end
%%EOF
