%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:09 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRKRIP1)
} def

/sequence { (\
GUCGUCAUACUUGCGCGCCGACGCCGCCGCUCGCUUGUGAAACUGGAAGGCUGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.017537062 ubox
1 10 0.081210271 ubox
1 14 0.049297825 ubox
1 16 0.146305184 ubox
1 18 0.106157575 ubox
1 22 0.473144815 ubox
1 24 0.066336848 ubox
1 27 0.009900996 ubox
1 30 0.005791662 ubox
1 43 0.131804823 ubox
1 51 0.634954196 ubox
1 54 0.107894249 ubox
2 7 0.017151680 ubox
2 9 0.076146519 ubox
2 13 0.038183261 ubox
2 15 0.040851034 ubox
2 17 0.079356868 ubox
2 21 0.473486117 ubox
2 23 0.015411528 ubox
2 26 0.009308598 ubox
2 40 0.032625502 ubox
2 42 0.128595867 ubox
2 46 0.099361307 ubox
2 47 0.065569777 ubox
2 50 0.635444325 ubox
2 53 0.106435640 ubox
3 13 0.036107293 ubox
3 15 0.178366543 ubox
3 17 0.119590337 ubox
3 20 0.469381813 ubox
3 23 0.096513413 ubox
3 26 0.003266223 ubox
3 29 0.006517173 ubox
3 39 0.034979766 ubox
3 45 0.127439360 ubox
3 46 0.069401264 ubox
3 49 0.633999195 ubox
3 53 0.017332368 ubox
4 10 0.072412863 ubox
4 12 0.035230314 ubox
4 14 0.200199983 ubox
4 16 0.153827624 ubox
4 18 0.142832236 ubox
4 19 0.430890048 ubox
4 22 0.120142915 ubox
4 25 0.005013682 ubox
4 28 0.009009210 ubox
4 30 0.003340349 ubox
4 38 0.032523882 ubox
4 43 0.200163499 ubox
4 44 0.099597103 ubox
4 51 0.121124475 ubox
4 52 0.010535370 ubox
4 54 0.036173533 ubox
5 9 0.065542842 ubox
5 13 0.094911846 ubox
5 15 0.161725630 ubox
5 17 0.198953152 ubox
5 21 0.120182070 ubox
5 29 0.003272676 ubox
5 40 0.278709514 ubox
5 42 0.190728359 ubox
5 46 0.492046427 ubox
5 47 0.294416487 ubox
5 50 0.120097771 ubox
5 53 0.019002402 ubox
6 13 0.351895937 ubox
6 20 0.120025224 ubox
6 37 0.034338516 ubox
6 39 0.297077160 ubox
6 45 0.539188343 ubox
6 46 0.298449345 ubox
6 49 0.116671339 ubox
6 53 0.039570112 ubox
7 12 0.342119098 ubox
7 36 0.033894856 ubox
7 38 0.295572700 ubox
7 44 0.540653424 ubox
7 52 0.039637407 ubox
8 37 0.293253036 ubox
8 39 0.567206639 ubox
8 45 0.110798589 ubox
9 36 0.278607351 ubox
9 38 0.586897788 ubox
9 44 0.110499228 ubox
10 37 0.589088032 ubox
10 46 0.028131059 ubox
10 49 0.043472115 ubox
10 50 0.005836975 ubox
11 21 0.007120823 ubox
11 40 0.222457253 ubox
11 41 0.068065937 ubox
11 42 0.110078905 ubox
11 45 0.027027107 ubox
11 48 0.043611665 ubox
11 49 0.005748086 ubox
12 20 0.007824946 ubox
12 23 0.003376181 ubox
12 26 0.021139422 ubox
12 29 0.007182786 ubox
12 33 0.192631420 ubox
12 37 0.003563278 ubox
12 39 0.230363870 ubox
12 40 0.071420421 ubox
12 41 0.084244481 ubox
12 47 0.042537320 ubox
12 48 0.005323093 ubox
13 19 0.009412280 ubox
13 22 0.010020402 ubox
13 24 0.080848112 ubox
13 25 0.084286869 ubox
13 27 0.199363179 ubox
13 28 0.023024788 ubox
13 30 0.096742489 ubox
13 32 0.208215905 ubox
13 34 0.620373554 ubox
13 38 0.242516387 ubox
13 51 0.008110940 ubox
13 54 0.282303955 ubox
14 20 0.014219787 ubox
14 23 0.081414221 ubox
14 26 0.200572073 ubox
14 29 0.096874037 ubox
14 33 0.619825808 ubox
14 37 0.243516452 ubox
14 39 0.182562713 ubox
14 45 0.035370989 ubox
14 50 0.008118254 ubox
14 53 0.283257907 ubox
15 19 0.013905966 ubox
15 22 0.080223016 ubox
15 24 0.156532069 ubox
15 25 0.183962715 ubox
15 27 0.058193003 ubox
15 28 0.086987882 ubox
15 30 0.366495027 ubox
15 32 0.544811962 ubox
15 34 0.013892214 ubox
15 36 0.238070003 ubox
15 38 0.183851953 ubox
15 44 0.024001074 ubox
15 51 0.006384126 ubox
15 52 0.277070300 ubox
15 54 0.169943841 ubox
16 23 0.176783238 ubox
16 26 0.072477028 ubox
16 29 0.389956283 ubox
16 33 0.013974649 ubox
16 37 0.183771291 ubox
16 39 0.031869313 ubox
16 50 0.006456156 ubox
16 53 0.170676185 ubox
17 22 0.172576912 ubox
17 24 0.176952771 ubox
17 25 0.056105314 ubox
17 27 0.086178898 ubox
17 28 0.387978227 ubox
17 30 0.527218698 ubox
17 32 0.013182520 ubox
17 34 0.247195540 ubox
17 36 0.158274499 ubox
17 38 0.031980434 ubox
17 51 0.348542936 ubox
17 52 0.037790420 ubox
17 54 0.020994708 ubox
18 23 0.182304747 ubox
18 26 0.084206515 ubox
18 29 0.507206717 ubox
18 33 0.176389574 ubox
18 37 0.031731453 ubox
18 46 0.007516201 ubox
18 50 0.350527001 ubox
18 53 0.020355436 ubox
19 26 0.583139708 ubox
19 29 0.140550978 ubox
19 33 0.249432344 ubox
19 37 0.004473622 ubox
19 45 0.007524275 ubox
19 49 0.350395108 ubox
19 53 0.009122284 ubox
20 25 0.584561168 ubox
20 28 0.195911481 ubox
20 32 0.304793352 ubox
20 36 0.006414502 ubox
20 44 0.006753049 ubox
20 52 0.008681241 ubox
21 31 0.303692023 ubox
21 35 0.006578519 ubox
21 38 0.005927716 ubox
22 29 0.106373259 ubox
22 33 0.003676914 ubox
22 37 0.006084378 ubox
22 39 0.015052375 ubox
22 45 0.159186439 ubox
22 53 0.013582562 ubox
23 28 0.102788943 ubox
23 30 0.287180781 ubox
23 32 0.003548031 ubox
23 34 0.009148846 ubox
23 36 0.005137470 ubox
23 38 0.015466761 ubox
23 44 0.143522252 ubox
23 51 0.144122654 ubox
23 52 0.004824286 ubox
23 54 0.462826189 ubox
24 29 0.286462457 ubox
24 33 0.009038062 ubox
24 37 0.015486636 ubox
24 46 0.301520294 ubox
24 50 0.144363428 ubox
24 53 0.463503661 ubox
25 33 0.003516170 ubox
25 39 0.009795214 ubox
25 45 0.301539333 ubox
25 49 0.144288936 ubox
25 53 0.018764018 ubox
26 32 0.003939436 ubox
26 34 0.024171661 ubox
26 38 0.010296033 ubox
26 44 0.267576092 ubox
26 51 0.471718875 ubox
26 52 0.006361071 ubox
26 54 0.226416640 ubox
27 33 0.024237747 ubox
27 37 0.010036098 ubox
27 46 0.142785549 ubox
27 50 0.472053332 ubox
27 53 0.226769000 ubox
28 37 0.005685774 ubox
28 39 0.351309526 ubox
28 45 0.143117804 ubox
28 49 0.471772921 ubox
28 53 0.019820819 ubox
29 36 0.004888854 ubox
29 38 0.357476006 ubox
29 44 0.134590021 ubox
29 51 0.250154448 ubox
29 52 0.005617036 ubox
29 54 0.135493572 ubox
30 37 0.357798019 ubox
30 46 0.063654185 ubox
30 49 0.005601838 ubox
30 50 0.250347239 ubox
30 53 0.135726990 ubox
31 40 0.167182535 ubox
31 45 0.038015423 ubox
31 46 0.333458850 ubox
31 47 0.243903969 ubox
31 48 0.008176248 ubox
31 49 0.246881526 ubox
31 50 0.003599695 ubox
32 39 0.169570038 ubox
32 45 0.360090642 ubox
32 46 0.247666789 ubox
32 49 0.018412182 ubox
32 53 0.010463116 ubox
33 38 0.109892146 ubox
33 44 0.339802729 ubox
33 51 0.143458380 ubox
33 54 0.011763361 ubox
34 46 0.279086681 ubox
34 49 0.066127522 ubox
34 50 0.142209052 ubox
34 53 0.011770415 ubox
35 41 0.028859737 ubox
35 42 0.330082775 ubox
35 45 0.266048865 ubox
35 46 0.008111711 ubox
35 47 0.008545323 ubox
35 48 0.070231878 ubox
35 49 0.140336582 ubox
36 40 0.026098066 ubox
36 41 0.334309013 ubox
36 45 0.015798753 ubox
36 46 0.009479462 ubox
36 47 0.071735198 ubox
36 48 0.137079166 ubox
37 43 0.281660800 ubox
37 44 0.013837229 ubox
37 51 0.010400758 ubox
37 54 0.003662867 ubox
38 42 0.254071285 ubox
38 45 0.067918010 ubox
38 50 0.010331539 ubox
38 53 0.003648609 ubox
39 44 0.045838629 ubox
43 49 0.041059618 ubox
43 50 0.065422236 ubox
44 48 0.037454153 ubox
44 49 0.064399086 ubox
44 53 0.043361391 ubox
45 52 0.073474630 ubox
45 55 0.089931373 ubox
46 51 0.075773091 ubox
46 54 0.090908664 ubox
49 55 0.068478011 ubox
50 54 0.067970443 ubox
1 51 0.9500000 lbox
2 50 0.9500000 lbox
3 49 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
17 30 0.9500000 lbox
18 29 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
showpage
end
%%EOF
