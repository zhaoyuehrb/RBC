%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C21orf33)
} def

/sequence { (\
AGUCCCGACGAGCAACGCGUUUGUAGAGGGGUGGGUGCGCACGCUCUGUCCCUGCGUGACCUUCCGACCCCGCUGUCCUCACCGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.006255014 ubox
1 74 0.053841158 ubox
1 79 0.029572499 ubox
2 9 0.069989818 ubox
2 13 0.104842792 ubox
2 16 0.028924098 ubox
2 18 0.004630141 ubox
2 21 0.006770105 ubox
2 24 0.004206824 ubox
2 73 0.057340802 ubox
2 76 0.003786032 ubox
2 78 0.033794086 ubox
2 82 0.115655666 ubox
2 85 0.111133870 ubox
3 8 0.065002717 ubox
3 11 0.071155161 ubox
3 12 0.095829165 ubox
3 15 0.027390983 ubox
3 17 0.004110775 ubox
3 23 0.005569290 ubox
3 27 0.285553890 ubox
3 31 0.008424566 ubox
3 72 0.054498288 ubox
3 81 0.112272287 ubox
3 84 0.105065799 ubox
4 10 0.078709295 ubox
4 26 0.304634946 ubox
4 28 0.014046762 ubox
4 29 0.010699513 ubox
4 30 0.022068833 ubox
5 28 0.012628307 ubox
5 29 0.024038648 ubox
6 17 0.014392499 ubox
6 19 0.070514257 ubox
6 23 0.053395027 ubox
6 28 0.024728745 ubox
6 72 0.006763139 ubox
6 75 0.023429009 ubox
6 84 0.159185562 ubox
7 16 0.028783024 ubox
7 18 0.072237409 ubox
7 21 0.109680974 ubox
7 22 0.044533912 ubox
7 74 0.012785015 ubox
7 77 0.200987324 ubox
7 80 0.067408512 ubox
7 83 0.164440780 ubox
8 20 0.120794723 ubox
8 21 0.032495235 ubox
8 24 0.856315403 ubox
8 76 0.199631693 ubox
8 79 0.053198536 ubox
9 17 0.073984190 ubox
9 19 0.125347481 ubox
9 23 0.910751116 ubox
9 75 0.197402029 ubox
9 84 0.011332321 ubox
10 16 0.076426929 ubox
10 18 0.124361524 ubox
10 21 0.006497135 ubox
10 22 0.912658167 ubox
10 74 0.095868464 ubox
10 77 0.026341257 ubox
10 80 0.103303931 ubox
10 83 0.011117603 ubox
11 20 0.007639811 ubox
11 21 0.912827464 ubox
11 22 0.003949063 ubox
11 74 0.157939762 ubox
11 76 0.024310830 ubox
11 79 0.103169307 ubox
12 18 0.020294208 ubox
12 20 0.913330111 ubox
12 21 0.003571819 ubox
12 24 0.071708718 ubox
12 73 0.182147478 ubox
12 76 0.012619422 ubox
12 78 0.101478106 ubox
12 85 0.030418132 ubox
13 17 0.019209061 ubox
13 19 0.913310565 ubox
13 23 0.080444834 ubox
13 72 0.181929983 ubox
13 75 0.021961176 ubox
13 84 0.030096945 ubox
14 21 0.010234745 ubox
14 22 0.080211366 ubox
14 74 0.018767153 ubox
15 20 0.009576307 ubox
15 21 0.072339951 ubox
15 24 0.136816385 ubox
15 76 0.063290532 ubox
16 23 0.142209845 ubox
16 72 0.005304434 ubox
16 75 0.064539324 ubox
16 84 0.044360145 ubox
17 22 0.096515048 ubox
17 24 0.094160295 ubox
17 73 0.053487086 ubox
17 74 0.039339654 ubox
17 76 0.019254769 ubox
17 83 0.046150684 ubox
17 85 0.295034968 ubox
18 23 0.097300946 ubox
18 72 0.054137562 ubox
18 75 0.019510735 ubox
18 84 0.295398580 ubox
19 71 0.024429362 ubox
19 73 0.032259054 ubox
19 74 0.012178908 ubox
19 82 0.074575683 ubox
19 83 0.287257889 ubox
19 85 0.012432052 ubox
20 26 0.006614326 ubox
20 27 0.014424175 ubox
20 72 0.032084860 ubox
20 81 0.092599792 ubox
20 84 0.012236263 ubox
21 25 0.006274273 ubox
21 26 0.014435175 ubox
21 27 0.011838945 ubox
22 26 0.011310853 ubox
22 27 0.016350357 ubox
22 75 0.004780099 ubox
22 81 0.202387728 ubox
22 84 0.009649192 ubox
22 86 0.020006282 ubox
23 73 0.018039242 ubox
23 76 0.085512726 ubox
23 80 0.209167142 ubox
23 82 0.071150292 ubox
23 83 0.013700444 ubox
23 85 0.026163785 ubox
24 72 0.017960754 ubox
24 75 0.369541072 ubox
24 81 0.069643948 ubox
24 84 0.025159187 ubox
25 74 0.640716430 ubox
25 79 0.019116105 ubox
26 73 0.663537502 ubox
26 77 0.115032209 ubox
26 78 0.016659061 ubox
26 80 0.180449384 ubox
27 53 0.003759893 ubox
27 74 0.012462274 ubox
27 76 0.114726840 ubox
27 79 0.180617208 ubox
28 52 0.004024134 ubox
28 70 0.014657300 ubox
28 71 0.981084440 ubox
28 73 0.007350179 ubox
28 77 0.004007547 ubox
28 78 0.178757479 ubox
29 51 0.004025466 ubox
29 69 0.014575298 ubox
29 70 0.983379042 ubox
29 71 0.007406645 ubox
29 74 0.011423524 ubox
29 76 0.003421273 ubox
29 77 0.177670342 ubox
30 50 0.004024366 ubox
30 65 0.006350324 ubox
30 68 0.014433164 ubox
30 69 0.983544984 ubox
30 70 0.006634721 ubox
30 73 0.011177038 ubox
30 74 0.142834237 ubox
30 76 0.088251101 ubox
30 83 0.008465311 ubox
31 49 0.003863594 ubox
31 64 0.006703209 ubox
31 68 0.983563134 ubox
31 69 0.005462928 ubox
31 73 0.178149786 ubox
31 82 0.009084258 ubox
32 66 0.189604365 ubox
32 67 0.962330251 ubox
32 72 0.178314948 ubox
32 81 0.009088048 ubox
33 46 0.003499730 ubox
33 61 0.009516230 ubox
33 62 0.055780371 ubox
33 63 0.004692138 ubox
33 64 0.005198470 ubox
33 65 0.324471238 ubox
33 70 0.029668280 ubox
33 71 0.176802877 ubox
33 80 0.009018204 ubox
34 45 0.003512186 ubox
34 60 0.009515693 ubox
34 61 0.057273196 ubox
34 62 0.003571720 ubox
34 63 0.004089990 ubox
34 64 0.324614375 ubox
34 65 0.926598619 ubox
34 69 0.038644981 ubox
34 70 0.175067087 ubox
34 78 0.005997759 ubox
34 79 0.006606123 ubox
35 44 0.003770749 ubox
35 60 0.058301916 ubox
35 61 0.006889750 ubox
35 62 0.007589449 ubox
35 63 0.313077429 ubox
35 64 0.926058506 ubox
35 68 0.045876384 ubox
35 69 0.173173717 ubox
35 77 0.006012321 ubox
35 78 0.006557191 ubox
36 43 0.003765945 ubox
36 58 0.028725150 ubox
36 59 0.056539834 ubox
36 66 0.012855255 ubox
36 67 0.051601956 ubox
37 42 0.003696791 ubox
37 57 0.045536598 ubox
37 65 0.017157194 ubox
37 73 0.006827261 ubox
37 76 0.004885277 ubox
38 56 0.046525256 ubox
38 58 0.011247053 ubox
38 66 0.175910150 ubox
38 72 0.006843613 ubox
38 75 0.004945465 ubox
39 55 0.046533881 ubox
39 57 0.008436101 ubox
39 65 0.175694354 ubox
39 71 0.006817324 ubox
39 74 0.003993267 ubox
40 54 0.046528617 ubox
40 56 0.007573498 ubox
40 58 0.997711723 ubox
41 49 0.009521614 ubox
41 53 0.043057805 ubox
41 57 0.998585804 ubox
42 48 0.012950452 ubox
42 54 0.004342248 ubox
42 56 0.998829544 ubox
43 47 0.008003062 ubox
43 49 0.027685606 ubox
43 53 0.003427272 ubox
43 55 0.998863140 ubox
44 48 0.027702969 ubox
44 54 0.998592698 ubox
48 53 0.022088680 ubox
54 85 0.003959655 ubox
55 84 0.003962438 ubox
57 81 0.003963829 ubox
58 80 0.003963393 ubox
59 79 0.003864588 ubox
65 72 0.004745041 ubox
66 71 0.004963484 ubox
66 77 0.006649942 ubox
67 76 0.006810853 ubox
68 75 0.006805390 ubox
71 84 0.013434071 ubox
72 83 0.063523140 ubox
72 85 0.632760905 ubox
73 84 0.632733823 ubox
74 81 0.195093519 ubox
74 84 0.022525268 ubox
74 86 0.067764188 ubox
75 80 0.221960604 ubox
75 82 0.580443656 ubox
75 83 0.076015498 ubox
75 85 0.136394470 ubox
76 81 0.531574263 ubox
76 84 0.133476833 ubox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
12 20 0.9500000 lbox
13 19 0.9500000 lbox
25 74 0.9500000 lbox
26 73 0.9500000 lbox
28 71 0.9500000 lbox
29 70 0.9500000 lbox
30 69 0.9500000 lbox
31 68 0.9500000 lbox
32 67 0.9500000 lbox
34 65 0.9500000 lbox
35 64 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
showpage
end
%%EOF
