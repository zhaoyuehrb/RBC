%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:32 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SMR3A)
} def

/sequence { (\
CUUUCAACUGGCAAGAGUCAUUUUGACCAGCAGGUUAAUCAACUCUAAGACAGAUCCUCACGCAAAGAGGCAACUGAAAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.004942955 ubox
1 49 0.006910402 ubox
1 80 0.991292775 ubox
1 81 0.028604550 ubox
2 10 0.004972409 ubox
2 48 0.006916543 ubox
2 78 0.004331284 ubox
2 79 0.995293509 ubox
2 80 0.024497146 ubox
3 47 0.006677731 ubox
3 77 0.004223431 ubox
3 78 0.995647106 ubox
3 79 0.020611702 ubox
4 11 0.006521591 ubox
4 34 0.007306895 ubox
4 77 0.996821538 ubox
4 78 0.015479985 ubox
5 10 0.009353717 ubox
5 33 0.010845664 ubox
5 49 0.003242497 ubox
5 76 0.996917085 ubox
5 80 0.005010107 ubox
6 22 0.003799457 ubox
6 23 0.004032054 ubox
6 36 0.003270609 ubox
6 75 0.924324854 ubox
7 18 0.011429768 ubox
7 21 0.005975069 ubox
7 22 0.009718638 ubox
7 35 0.004664872 ubox
8 15 0.005488289 ubox
8 17 0.012105843 ubox
8 30 0.164009131 ubox
8 34 0.004492282 ubox
8 49 0.023250310 ubox
8 53 0.942017100 ubox
8 80 0.009967393 ubox
9 14 0.006921404 ubox
9 16 0.012043324 ubox
9 20 0.046530706 ubox
9 29 0.165041749 ubox
9 33 0.003846229 ubox
9 47 0.004789530 ubox
9 48 0.022609963 ubox
9 52 0.947819341 ubox
9 72 0.192663327 ubox
9 79 0.009853270 ubox
10 19 0.051457087 ubox
10 28 0.165295267 ubox
10 46 0.003337670 ubox
10 51 0.948500625 ubox
10 71 0.192922600 ubox
10 75 0.007467881 ubox
11 18 0.051547668 ubox
11 27 0.165280459 ubox
11 31 0.004289915 ubox
11 71 0.092674298 ubox
11 74 0.010489344 ubox
12 17 0.051513017 ubox
12 25 0.165085825 ubox
12 30 0.004449990 ubox
12 70 0.091904704 ubox
12 76 0.007662061 ubox
13 24 0.164998032 ubox
13 75 0.006934159 ubox
14 23 0.164657784 ubox
14 24 0.007825646 ubox
14 46 0.954229184 ubox
15 22 0.163478191 ubox
15 23 0.008260823 ubox
15 24 0.003247257 ubox
15 45 0.984448355 ubox
16 21 0.159431346 ubox
16 22 0.008437490 ubox
16 23 0.003501270 ubox
16 44 0.984458738 ubox
16 46 0.011560832 ubox
17 21 0.005863986 ubox
17 22 0.003537229 ubox
17 27 0.005124222 ubox
17 43 0.984406365 ubox
17 45 0.011663990 ubox
17 51 0.003572547 ubox
18 26 0.005276003 ubox
18 42 0.958542887 ubox
18 50 0.003579957 ubox
19 25 0.005545123 ubox
19 49 0.003574492 ubox
20 24 0.004504563 ubox
20 39 0.077165894 ubox
21 38 0.067890339 ubox
21 42 0.016271182 ubox
22 37 0.045438732 ubox
22 38 0.112056998 ubox
22 41 0.031146978 ubox
22 42 0.004920256 ubox
23 37 0.082078205 ubox
23 38 0.947338298 ubox
23 41 0.007144764 ubox
23 42 0.004043180 ubox
24 37 0.976268358 ubox
24 41 0.007758559 ubox
25 36 0.984743897 ubox
25 40 0.007635533 ubox
26 35 0.985908857 ubox
26 39 0.005896120 ubox
27 34 0.986204053 ubox
28 33 0.984784268 ubox
30 45 0.003457267 ubox
31 76 0.003816815 ubox
32 44 0.020800108 ubox
32 46 0.065850375 ubox
32 58 0.027170746 ubox
32 75 0.004368172 ubox
33 40 0.023684780 ubox
33 43 0.023414852 ubox
33 44 0.097478385 ubox
33 45 0.068742618 ubox
33 46 0.011172258 ubox
33 56 0.038616284 ubox
33 57 0.028944293 ubox
33 74 0.004649926 ubox
33 75 0.005496613 ubox
34 39 0.016147575 ubox
34 43 0.128790334 ubox
34 44 0.014894806 ubox
34 45 0.011480336 ubox
34 51 0.025463629 ubox
34 55 0.050697039 ubox
34 56 0.028833709 ubox
34 74 0.008075883 ubox
35 42 0.127767795 ubox
35 48 0.009686500 ubox
35 50 0.025264418 ubox
35 54 0.056168442 ubox
35 73 0.008041023 ubox
36 41 0.113340021 ubox
36 47 0.011524286 ubox
36 49 0.024340557 ubox
36 53 0.056058193 ubox
36 72 0.007362061 ubox
37 46 0.011981725 ubox
38 55 0.026885724 ubox
39 50 0.063752791 ubox
39 54 0.029210488 ubox
40 49 0.065197129 ubox
40 53 0.029603773 ubox
43 49 0.016261805 ubox
43 53 0.010751655 ubox
43 69 0.010409030 ubox
44 48 0.014772615 ubox
44 50 0.016107019 ubox
44 52 0.010403415 ubox
44 54 0.069595392 ubox
44 68 0.010459621 ubox
44 81 0.003448144 ubox
45 49 0.018618482 ubox
45 53 0.085357791 ubox
45 67 0.010482006 ubox
45 80 0.007248215 ubox
46 52 0.082915403 ubox
46 66 0.010137309 ubox
46 79 0.007051445 ubox
48 58 0.007958854 ubox
48 75 0.013494603 ubox
49 56 0.040767144 ubox
49 57 0.008359648 ubox
49 59 0.010312226 ubox
49 74 0.016097203 ubox
50 55 0.036996684 ubox
50 58 0.009873382 ubox
51 76 0.054271454 ubox
52 58 0.004040668 ubox
52 75 0.068016538 ubox
53 57 0.004374702 ubox
53 59 0.013745136 ubox
53 74 0.078244357 ubox
54 58 0.012123118 ubox
55 68 0.005786162 ubox
55 70 0.012150056 ubox
56 67 0.006146640 ubox
56 69 0.013835741 ubox
56 70 0.977912428 ubox
56 81 0.007005054 ubox
57 67 0.013578443 ubox
57 69 0.994353865 ubox
57 70 0.005127284 ubox
57 80 0.007151912 ubox
58 66 0.013264945 ubox
58 68 0.994345443 ubox
58 69 0.003299351 ubox
58 70 0.003464225 ubox
58 77 0.008886312 ubox
58 79 0.004785649 ubox
59 67 0.993872316 ubox
59 69 0.005059827 ubox
59 76 0.010170318 ubox
60 75 0.010132189 ubox
62 71 0.099032898 ubox
63 70 0.099038870 ubox
66 75 0.005034518 ubox
67 74 0.005990001 ubox
68 75 0.015368936 ubox
69 74 0.018650418 ubox
70 74 0.009178736 ubox
74 80 0.008899955 ubox
74 81 0.008924244 ubox
75 79 0.008042136 ubox
75 80 0.008834935 ubox
1 80 0.9500000 lbox
2 79 0.9500000 lbox
3 78 0.9500000 lbox
4 77 0.9500000 lbox
5 76 0.9500000 lbox
6 75 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
17 43 0.9500000 lbox
18 42 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
56 70 0.9500000 lbox
57 69 0.9500000 lbox
58 68 0.9500000 lbox
59 67 0.9500000 lbox
showpage
end
%%EOF
