%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:33:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMEM222)
} def

/sequence { (\
AUGGGGACGAGCGGCACCAGAGCCGGGGCCAGUCGGAGCGGGGCGCGCGCCGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.059315527 ubox
2 9 0.047269219 ubox
2 19 0.011176606 ubox
2 31 0.235706750 ubox
2 32 0.060639653 ubox
2 35 0.011462103 ubox
2 40 0.050097233 ubox
2 52 0.080105742 ubox
3 8 0.088721817 ubox
3 12 0.028876880 ubox
3 18 0.012390833 ubox
3 30 0.260920046 ubox
3 34 0.032473550 ubox
3 39 0.070925445 ubox
3 51 0.111640246 ubox
4 17 0.012373919 ubox
4 18 0.005402216 ubox
4 29 0.260114951 ubox
4 30 0.178797675 ubox
4 33 0.030225257 ubox
4 34 0.016586071 ubox
4 50 0.111001720 ubox
4 51 0.119162436 ubox
5 17 0.005441644 ubox
5 29 0.179667689 ubox
5 30 0.258019076 ubox
5 33 0.015277632 ubox
5 34 0.015894586 ubox
5 50 0.115612738 ubox
5 51 0.607716897 ubox
6 29 0.258549086 ubox
6 33 0.011613601 ubox
6 34 0.236394227 ubox
6 50 0.608783484 ubox
7 33 0.238886401 ubox
8 25 0.103596377 ubox
8 32 0.239096194 ubox
8 35 0.447310100 ubox
8 47 0.031795313 ubox
8 49 0.615249561 ubox
8 52 0.318631401 ubox
9 24 0.101732959 ubox
9 34 0.474526873 ubox
9 46 0.027168400 ubox
9 48 0.608530193 ubox
9 51 0.324700962 ubox
10 33 0.472860718 ubox
11 23 0.101429247 ubox
11 29 0.155351733 ubox
11 33 0.104811373 ubox
11 44 0.018683511 ubox
11 46 0.610821523 ubox
11 48 0.186823090 ubox
11 50 0.298252936 ubox
11 53 0.110054435 ubox
12 22 0.101418434 ubox
12 25 0.441465745 ubox
12 28 0.142020907 ubox
12 32 0.127260613 ubox
12 43 0.018607826 ubox
12 45 0.611129070 ubox
12 47 0.190553674 ubox
12 49 0.298340468 ubox
12 52 0.110984808 ubox
13 24 0.466365056 ubox
13 30 0.509424673 ubox
13 44 0.455230213 ubox
13 46 0.189318491 ubox
13 48 0.297109361 ubox
13 51 0.110301382 ubox
14 23 0.466535407 ubox
14 29 0.509866317 ubox
14 39 0.004314974 ubox
14 44 0.449465311 ubox
14 46 0.297217999 ubox
14 50 0.110265475 ubox
15 22 0.466124014 ubox
15 28 0.503550352 ubox
15 38 0.004314491 ubox
15 43 0.603400729 ubox
15 45 0.297776235 ubox
15 47 0.003672067 ubox
15 49 0.110094962 ubox
17 26 0.443979342 ubox
17 27 0.248496309 ubox
17 28 0.011998757 ubox
17 36 0.007085441 ubox
17 41 0.273582652 ubox
17 42 0.592581427 ubox
17 43 0.268116875 ubox
18 25 0.445967961 ubox
18 26 0.247750962 ubox
18 27 0.012707878 ubox
18 35 0.007087057 ubox
18 40 0.274178577 ubox
18 41 0.593124311 ubox
18 42 0.267237119 ubox
20 34 0.006371347 ubox
21 33 0.006210088 ubox
22 29 0.006453089 ubox
22 39 0.065371281 ubox
22 44 0.053252863 ubox
22 46 0.004251462 ubox
22 48 0.012133768 ubox
22 53 0.007168116 ubox
23 28 0.006462271 ubox
23 36 0.708530333 ubox
23 38 0.050312450 ubox
23 41 0.050205089 ubox
23 42 0.007097188 ubox
23 43 0.053150704 ubox
23 45 0.004179625 ubox
23 47 0.010715235 ubox
23 52 0.005115436 ubox
24 35 0.710307502 ubox
24 40 0.050343102 ubox
24 41 0.007899402 ubox
24 42 0.052993214 ubox
24 45 0.005661024 ubox
24 47 0.006751644 ubox
24 52 0.012799058 ubox
25 34 0.709673292 ubox
25 39 0.049894346 ubox
25 44 0.005309093 ubox
25 46 0.008846263 ubox
25 51 0.028566823 ubox
26 33 0.663582932 ubox
26 34 0.028304655 ubox
26 50 0.029470098 ubox
26 51 0.018765646 ubox
27 33 0.036087444 ubox
27 34 0.016458956 ubox
27 50 0.018752822 ubox
27 51 0.016151010 ubox
28 33 0.012368614 ubox
28 39 0.033128655 ubox
28 44 0.040262283 ubox
28 46 0.004172755 ubox
28 48 0.036714302 ubox
28 50 0.016181412 ubox
28 53 0.004053744 ubox
29 36 0.070861843 ubox
29 38 0.032872928 ubox
29 41 0.008228752 ubox
29 42 0.006921307 ubox
29 43 0.040245781 ubox
29 45 0.004162871 ubox
29 47 0.036640833 ubox
29 49 0.016127652 ubox
29 52 0.003757645 ubox
30 35 0.071089416 ubox
30 40 0.008226140 ubox
30 41 0.007396918 ubox
30 42 0.040100041 ubox
32 39 0.034223188 ubox
32 44 0.049653298 ubox
32 46 0.007737371 ubox
32 48 0.004515867 ubox
32 53 0.206629670 ubox
33 38 0.032605210 ubox
33 41 0.019080494 ubox
33 42 0.007959886 ubox
33 43 0.049530283 ubox
33 47 0.003891682 ubox
33 52 0.043688834 ubox
34 40 0.023188740 ubox
34 41 0.011798918 ubox
34 42 0.049448690 ubox
34 45 0.008562233 ubox
34 49 0.003727662 ubox
34 52 0.426723138 ubox
35 39 0.021821271 ubox
35 44 0.008888401 ubox
35 48 0.004791399 ubox
35 51 0.518893603 ubox
36 50 0.520542108 ubox
38 44 0.008302245 ubox
38 46 0.038201897 ubox
38 48 0.539944328 ubox
38 50 0.037048299 ubox
38 53 0.422834700 ubox
39 43 0.008254059 ubox
39 45 0.038260097 ubox
39 47 0.540984253 ubox
39 49 0.037399152 ubox
39 52 0.426441590 ubox
40 44 0.035838199 ubox
40 46 0.539912480 ubox
40 48 0.037351759 ubox
40 51 0.423177070 ubox
41 50 0.422137497 ubox
41 51 0.020692892 ubox
42 50 0.023740431 ubox
42 51 0.130590333 ubox
43 50 0.133417539 ubox
43 53 0.007894462 ubox
44 49 0.135676066 ubox
44 52 0.007985641 ubox
45 51 0.007814993 ubox
45 53 0.010205740 ubox
46 52 0.010281681 ubox
47 51 0.009646428 ubox
47 53 0.004368461 ubox
48 52 0.004370835 ubox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
11 46 0.9500000 lbox
12 45 0.9500000 lbox
14 44 0.9500000 lbox
15 43 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
showpage
end
%%EOF
