%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPATA17)
} def

/sequence { (\
CAGUUACCAUGGAGACCGGUAGUAACACCAGUUGUAAACCCAAGGCCAAGAGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.030790522 ubox
1 34 0.017180207 ubox
2 10 0.030826127 ubox
2 33 0.017153357 ubox
3 10 0.008256379 ubox
3 16 0.034052060 ubox
3 23 0.042404471 ubox
3 26 0.494733809 ubox
3 28 0.011457731 ubox
3 32 0.006725039 ubox
3 39 0.057922795 ubox
3 46 0.059270904 ubox
3 54 0.448441123 ubox
4 9 0.009672742 ubox
4 12 0.004208594 ubox
4 13 0.007209318 ubox
4 15 0.034188433 ubox
4 22 0.104363603 ubox
4 25 0.495102094 ubox
4 27 0.010352355 ubox
4 37 0.070496306 ubox
4 38 0.050150117 ubox
4 43 0.010974168 ubox
4 44 0.006012802 ubox
4 45 0.044651271 ubox
4 49 0.057688869 ubox
4 50 0.046374211 ubox
4 51 0.029276773 ubox
4 52 0.036653120 ubox
4 53 0.448324242 ubox
5 11 0.005220634 ubox
5 12 0.007618325 ubox
5 14 0.033978819 ubox
5 21 0.139248716 ubox
5 24 0.494637854 ubox
5 36 0.084597138 ubox
5 37 0.039752720 ubox
5 42 0.011789325 ubox
5 43 0.007034894 ubox
5 44 0.036448051 ubox
5 48 0.062000628 ubox
5 49 0.055734350 ubox
5 50 0.030356750 ubox
5 51 0.045501039 ubox
5 52 0.432178990 ubox
6 10 0.004994316 ubox
6 20 0.143311021 ubox
6 23 0.494396641 ubox
6 35 0.090224826 ubox
7 19 0.144339744 ubox
7 22 0.492920693 ubox
7 34 0.089831771 ubox
7 45 0.573675976 ubox
8 18 0.143435526 ubox
8 34 0.020137245 ubox
8 44 0.575891200 ubox
9 20 0.240295116 ubox
9 32 0.015619671 ubox
9 33 0.017974990 ubox
9 35 0.013166407 ubox
10 18 0.440862321 ubox
10 19 0.199129721 ubox
10 21 0.019332323 ubox
10 30 0.048555387 ubox
10 31 0.010263050 ubox
10 34 0.013350730 ubox
10 36 0.032155271 ubox
10 42 0.571295036 ubox
10 48 0.572463174 ubox
11 17 0.483166849 ubox
11 20 0.021835343 ubox
11 29 0.049817869 ubox
11 33 0.005164218 ubox
11 35 0.033371136 ubox
11 40 0.078199473 ubox
11 41 0.575070457 ubox
11 47 0.610555020 ubox
11 55 0.007568645 ubox
12 16 0.475714461 ubox
12 28 0.049711873 ubox
12 33 0.006008856 ubox
12 39 0.089775547 ubox
12 40 0.568902140 ubox
12 46 0.610294162 ubox
12 54 0.007630979 ubox
13 32 0.010301608 ubox
13 33 0.057244020 ubox
14 32 0.042042541 ubox
14 33 0.550031923 ubox
15 23 0.039639145 ubox
15 32 0.572243726 ubox
15 35 0.116431932 ubox
16 22 0.040080208 ubox
16 31 0.574831214 ubox
16 34 0.115794779 ubox
16 45 0.198880029 ubox
17 34 0.028839210 ubox
17 44 0.198872424 ubox
18 29 0.595795996 ubox
18 33 0.013911475 ubox
18 40 0.599011424 ubox
18 41 0.091631990 ubox
18 47 0.015919670 ubox
18 55 0.022950293 ubox
19 26 0.015122432 ubox
19 28 0.596305168 ubox
19 32 0.010920982 ubox
19 35 0.007082756 ubox
19 39 0.601003511 ubox
19 40 0.089231405 ubox
19 46 0.015937259 ubox
19 54 0.023151083 ubox
20 25 0.015874787 ubox
20 27 0.571727591 ubox
20 31 0.005638676 ubox
20 34 0.005400578 ubox
20 36 0.079960725 ubox
20 38 0.578656648 ubox
20 45 0.015458624 ubox
20 53 0.022908766 ubox
21 33 0.006992257 ubox
21 35 0.119205684 ubox
22 28 0.017979052 ubox
22 32 0.005399949 ubox
22 35 0.224452669 ubox
22 39 0.043420605 ubox
22 46 0.005215117 ubox
22 54 0.013154715 ubox
23 27 0.016461865 ubox
23 31 0.003557606 ubox
23 34 0.549555314 ubox
23 36 0.061501722 ubox
23 38 0.041519461 ubox
23 45 0.004914847 ubox
23 53 0.013097652 ubox
24 33 0.589780716 ubox
24 35 0.046688957 ubox
25 32 0.595380852 ubox
25 35 0.141827797 ubox
26 31 0.594873319 ubox
26 34 0.150769827 ubox
27 33 0.139626368 ubox
27 35 0.047262143 ubox
28 34 0.049471277 ubox
28 45 0.276992145 ubox
29 44 0.277541627 ubox
31 39 0.126825217 ubox
31 46 0.086266937 ubox
31 54 0.193059265 ubox
32 38 0.125846063 ubox
32 43 0.243411341 ubox
32 44 0.014215007 ubox
32 45 0.084466024 ubox
32 49 0.052936135 ubox
32 50 0.011295540 ubox
32 51 0.021693052 ubox
32 52 0.021586031 ubox
32 53 0.193089316 ubox
33 37 0.105038831 ubox
33 42 0.285947173 ubox
33 43 0.019839595 ubox
33 44 0.073567893 ubox
33 48 0.061163099 ubox
33 49 0.013428802 ubox
33 50 0.023469400 ubox
33 51 0.027106545 ubox
33 52 0.190931344 ubox
34 41 0.287872429 ubox
34 46 0.044244837 ubox
34 47 0.060755350 ubox
34 54 0.019127294 ubox
35 45 0.045649722 ubox
35 53 0.018794212 ubox
39 45 0.236000259 ubox
40 44 0.234979058 ubox
44 55 0.164402677 ubox
45 54 0.165718997 ubox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
10 42 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
16 31 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
showpage
end
%%EOF
