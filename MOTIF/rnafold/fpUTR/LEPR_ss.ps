%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGUCUGGCUUGGGCAGGCUGCCCGGGCCGUGGCAGGAAGCCGGAAGCAGCCGCGGCCCCAGUUCGGGAGACAUGGCGGGCGUUAAAGCUCUCGUGGCAUUAUCCUUCAGUGGGGCUAUUGGACUGACUUUUCUUAUGCUGGGAUGUGCCUUAGAGGAUUAUGGGUGUACUUCUCUGAAGUAAG\
) } def
/len { sequence length } bind def

/coor [
[96.73524475 118.56592560]
[87.55365753 130.42756653]
[85.22496033 146.07644653]
[71.31604767 151.40481567]
[62.13446045 163.26644897]
[52.95286942 175.12809753]
[43.87178040 187.06684875]
[34.89183426 199.08186340]
[25.91189194 211.09687805]
[16.93194962 223.11189270]
[7.95200586 235.12690735]
[-1.02793729 247.14192200]
[-10.00788021 259.15695190]
[-18.98782349 271.17196655]
[-27.96776772 283.18698120]
[-36.94771194 295.20199585]
[-45.92765427 307.21701050]
[-50.56682968 323.52389526]
[-67.52068329 323.58020020]
[-72.26809692 307.30450439]
[-57.94266891 298.23706055]
[-48.96272659 286.22204590]
[-39.98278427 274.20703125]
[-31.00284004 262.19201660]
[-22.02289772 250.17700195]
[-13.04295349 238.16198730]
[-4.06301069 226.14697266]
[4.91693258 214.13194275]
[13.89687634 202.11692810]
[22.87681961 190.10191345]
[31.85676193 178.08689880]
[33.34599304 170.83100891]
[41.09123230 165.94650269]
[50.27282333 154.08486938]
[59.45441437 142.22323608]
[61.12638092 127.42276764]
[75.69201660 121.24597168]
[84.87361145 109.38433838]
[70.34812927 113.12739563]
[57.78759384 104.92783356]
[55.36958694 90.12400818]
[64.66836548 78.35401917]
[79.62992096 77.28076935]
[90.51329041 87.60260010]
[88.24187469 72.77557373]
[85.97045898 57.94855118]
[83.69904327 43.12152481]
[81.42762756 28.29450035]
[79.03107452 13.48718643]
[76.50955963 -1.29936039]
[73.98804474 -16.08590698]
[71.34175110 -30.85063362]
[68.57086182 -45.59248352]
[65.79997253 -60.33433533]
[53.48426819 -74.01033783]
[59.91534042 -90.32848358]
[56.89586258 -105.02143097]
[53.87638474 -119.71438599]
[50.85690689 -134.40733337]
[47.83742905 -149.10028076]
[44.81795120 -163.79322815]
[41.79847336 -178.48617554]
[27.31672478 -183.40820312]
[17.30910683 -194.84254456]
[14.38793564 -209.65245056]
[19.23948479 -223.84112549]
[30.46604919 -233.63038635]
[27.44657135 -248.32334900]
[24.42709351 -263.01629639]
[21.40761566 -277.70922852]
[3.13726497 -288.07696533]
[-1.52118421 -308.26068115]
[10.02646732 -325.10394287]
[6.02196074 -339.55953979]
[2.01745415 -354.01513672]
[-1.98705220 -368.47070312]
[-5.99155855 -382.92630005]
[-11.30953217 -390.38058472]
[-9.93941689 -397.65991211]
[-13.69920444 -412.18106079]
[-17.45899200 -426.70220947]
[-21.21878052 -441.22335815]
[-34.96390533 -449.02383423]
[-39.08683014 -464.28085327]
[-31.14149094 -477.94274902]
[-15.84171963 -481.90411377]
[-2.26459956 -473.81478882]
[1.53480566 -458.47399902]
[-6.69762373 -444.98315430]
[-2.93783569 -430.46200562]
[0.82195228 -415.94085693]
[4.58174038 -401.41967773]
[8.46402550 -386.93078613]
[12.46853256 -372.47521973]
[16.47303963 -358.01962280]
[20.47754478 -343.56405640]
[24.48205185 -329.10845947]
[33.69311142 -327.21701050]
[41.62459183 -322.05880737]
[47.15635300 -314.31182861]
[49.48878479 -305.02294922]
[48.25818253 -295.46664429]
[43.59273148 -286.97003174]
[36.10056305 -280.72872925]
[39.12004089 -266.03576660]
[42.13951874 -251.34281921]
[45.15899658 -236.64987183]
[59.33619308 -232.08120728]
[69.38994598 -220.95564270]
[72.54588318 -206.19400024]
[67.85851288 -191.73974609]
[56.49142075 -181.50566101]
[59.51089859 -166.81271362]
[62.53037643 -152.11976624]
[65.54985809 -137.42680359]
[68.56933594 -122.73386383]
[71.58881378 -108.04090881]
[74.60829163 -93.34796143]
[84.54166412 -86.42075348]
[87.16765594 -74.18809509]
[80.54181671 -63.10522461]
[83.31271362 -48.36337280]
[86.08360291 -33.62152481]
[90.41864777 -27.61543274]
[88.77459717 -18.60741997]
[91.29610443 -3.82087398]
[93.81761932 10.96567345]
[98.05060577 17.04412270]
[96.25464630 26.02308464]
[98.52606964 40.85010910]
[100.79748535 55.67713165]
[103.06890106 70.50415802]
[105.34031677 85.33118439]
[112.84031677 98.32156372]
[124.54518890 107.70217896]
[136.25006104 117.08280182]
[147.95492554 126.46341705]
[159.65980530 135.84402466]
[175.90197754 131.16055298]
[191.58250427 137.01528931]
[200.59991455 150.91896057]
[199.57153320 167.29244995]
[211.43316650 176.47404480]
[223.29479980 185.65563965]
[235.15643311 194.83721924]
[250.80532837 197.16592407]
[256.13369751 211.07482910]
[267.99533081 220.25642395]
[279.85696411 229.43800354]
[291.71859741 238.61959839]
[303.65734863 247.70068359]
[315.67236328 256.68063354]
[327.68737793 265.66058350]
[339.70242310 274.64053345]
[354.48303223 269.91687012]
[369.20669556 274.81515503]
[378.21188354 287.45184326]
[378.03588867 302.96792603]
[368.74636841 315.39712524]
[353.91537476 319.96014404]
[339.24572754 314.90243530]
[330.37814331 302.16879272]
[330.72247314 286.65554810]
[318.70745850 277.67559814]
[306.69244385 268.69564819]
[294.67742920 259.71569824]
[287.42153931 258.22647095]
[282.53701782 250.48123169]
[270.67538452 241.29965210]
[258.81375122 232.11805725]
[246.95210266 222.93646240]
[232.15164185 221.26449585]
[225.97485352 206.69885254]
[214.11322021 197.51727295]
[202.25157166 188.33567810]
[190.38993835 179.15408325]
[177.96307373 184.06709290]
[164.62512207 182.17750549]
[153.88049316 173.87362671]
[148.60559082 161.24310303]
[150.27919006 147.54890442]
[138.57431030 138.16828918]
[126.86944580 128.78767395]
[115.16457367 119.40705109]
[103.45970154 110.02643585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[4 35]
[5 34]
[6 33]
[7 31]
[8 30]
[9 29]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[44 133]
[45 132]
[46 131]
[47 130]
[48 129]
[49 127]
[50 126]
[51 125]
[52 123]
[53 122]
[54 121]
[56 118]
[57 117]
[58 116]
[59 115]
[60 114]
[61 113]
[62 112]
[67 107]
[68 106]
[69 105]
[70 104]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[79 92]
[80 91]
[81 90]
[82 89]
[134 185]
[135 184]
[136 183]
[137 182]
[138 181]
[142 176]
[143 175]
[144 174]
[145 173]
[147 171]
[148 170]
[149 169]
[150 168]
[151 166]
[152 165]
[153 164]
[154 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
