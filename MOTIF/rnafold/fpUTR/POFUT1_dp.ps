%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:06:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (POFUT1)
} def

/sequence { (\
CUUCCCUCCCCGACUGUGCGCCGCGGCUGGCUCGGGUUCCCGGGCCGAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 43 0.003955150 ubox
1 44 0.005563619 ubox
2 13 0.040097790 ubox
2 42 0.003813081 ubox
2 43 0.005533962 ubox
2 48 0.018199335 ubox
3 12 0.042690297 ubox
3 13 0.143057846 ubox
3 26 0.004666453 ubox
3 42 0.004855155 ubox
3 43 0.003823581 ubox
3 44 0.018479891 ubox
3 47 0.017331342 ubox
3 48 0.057938159 ubox
4 12 0.154552411 ubox
4 25 0.005982490 ubox
4 26 0.036477824 ubox
4 36 0.005576576 ubox
4 42 0.004161626 ubox
4 43 0.024275622 ubox
4 44 0.074370098 ubox
4 47 0.062176087 ubox
5 25 0.036714996 ubox
5 26 0.071471396 ubox
5 29 0.003599984 ubox
5 30 0.003839445 ubox
5 35 0.005631987 ubox
5 42 0.024248801 ubox
5 43 0.075266987 ubox
5 44 0.015318244 ubox
6 25 0.071989473 ubox
6 26 0.014160548 ubox
6 29 0.007876219 ubox
6 34 0.005642811 ubox
6 42 0.075162295 ubox
6 43 0.015435494 ubox
6 44 0.009093665 ubox
7 13 0.096940656 ubox
7 25 0.013587433 ubox
7 26 0.008226706 ubox
7 42 0.014397707 ubox
7 43 0.009141728 ubox
7 48 0.055279221 ubox
8 12 0.103865715 ubox
8 25 0.010790208 ubox
8 26 0.130189677 ubox
8 36 0.005303306 ubox
8 42 0.010101676 ubox
8 43 0.003337356 ubox
8 44 0.012277378 ubox
8 47 0.059327524 ubox
9 25 0.131454849 ubox
9 26 0.154719360 ubox
9 35 0.004418732 ubox
9 36 0.082053380 ubox
9 43 0.012353534 ubox
9 44 0.021050063 ubox
10 25 0.155886967 ubox
10 26 0.181028555 ubox
10 29 0.004954749 ubox
10 30 0.022777266 ubox
10 34 0.003229006 ubox
10 35 0.082243534 ubox
10 42 0.012305730 ubox
10 43 0.021219927 ubox
11 18 0.022134601 ubox
11 20 0.086784314 ubox
11 23 0.199953221 ubox
11 25 0.182710868 ubox
11 29 0.045317047 ubox
11 34 0.082301965 ubox
11 42 0.021233418 ubox
11 47 0.031103010 ubox
12 17 0.016628005 ubox
12 19 0.089427783 ubox
12 22 0.198692187 ubox
12 24 0.178538943 ubox
12 28 0.109695540 ubox
12 33 0.082338569 ubox
12 38 0.014430952 ubox
12 39 0.005230557 ubox
12 41 0.019647921 ubox
12 46 0.009528394 ubox
13 32 0.081467679 ubox
13 37 0.023286367 ubox
13 38 0.004494452 ubox
14 26 0.885924534 ubox
14 30 0.065022257 ubox
14 35 0.004410590 ubox
14 36 0.023605676 ubox
15 23 0.058664317 ubox
15 25 0.890669872 ubox
15 29 0.064405348 ubox
15 34 0.004794714 ubox
15 35 0.022068890 ubox
16 22 0.071402254 ubox
16 24 0.894936682 ubox
16 27 0.071046721 ubox
16 28 0.051993262 ubox
16 31 0.029050543 ubox
16 33 0.005131520 ubox
16 49 0.016514646 ubox
17 23 0.893200947 ubox
17 25 0.066863342 ubox
17 26 0.058742539 ubox
17 30 0.029051543 ubox
17 34 0.017508205 ubox
17 48 0.016347682 ubox
18 22 0.850771195 ubox
18 24 0.092421063 ubox
18 27 0.257618802 ubox
18 28 0.011342082 ubox
18 31 0.007240996 ubox
18 33 0.022558753 ubox
19 23 0.092027248 ubox
19 25 0.032697566 ubox
19 26 0.257683490 ubox
19 29 0.003997436 ubox
19 30 0.007141954 ubox
19 47 0.005949093 ubox
20 24 0.033136878 ubox
20 27 0.184176464 ubox
20 31 0.038016736 ubox
21 26 0.184332184 ubox
21 30 0.038043774 ubox
22 29 0.038030304 ubox
23 28 0.025790996 ubox
24 47 0.004328881 ubox
25 46 0.003930747 ubox
26 45 0.003796928 ubox
27 44 0.003648340 ubox
28 47 0.798658059 ubox
29 46 0.994732843 ubox
30 45 0.995982115 ubox
31 44 0.996200885 ubox
32 43 0.995552963 ubox
32 48 0.007051626 ubox
33 42 0.996072238 ubox
33 43 0.005911183 ubox
33 47 0.007619763 ubox
34 40 0.016199749 ubox
34 41 0.995866428 ubox
34 46 0.007565767 ubox
35 39 0.022478180 ubox
35 40 0.992396175 ubox
35 41 0.017383767 ubox
35 45 0.007497217 ubox
36 40 0.023320733 ubox
37 43 0.006278316 ubox
38 42 0.004648305 ubox
41 47 0.004238291 ubox
42 46 0.004008848 ubox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
17 23 0.9500000 lbox
18 22 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
showpage
end
%%EOF
