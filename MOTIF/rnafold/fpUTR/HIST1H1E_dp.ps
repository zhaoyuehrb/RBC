%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (HIST1H1E)
} def

/sequence { (\
AGUCCCGGCCAGUGCCUCUGCUUCCGGCUCGAAUUGCUCUCGCUCACGCUUGCCUUCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.009536611 ubox
1 22 0.104346080 ubox
1 23 0.005221401 ubox
1 29 0.080365952 ubox
1 35 0.026057817 ubox
1 38 0.027001532 ubox
1 40 0.004957200 ubox
1 44 0.006603613 ubox
1 50 0.066160980 ubox
1 51 0.005702881 ubox
1 55 0.011647446 ubox
1 56 0.013116010 ubox
2 9 0.004406946 ubox
2 18 0.010060906 ubox
2 21 0.120077161 ubox
2 28 0.091713619 ubox
2 34 0.030321065 ubox
2 37 0.031031554 ubox
2 39 0.005667406 ubox
2 43 0.007577320 ubox
2 47 0.032169204 ubox
2 49 0.076618101 ubox
2 53 0.013766023 ubox
2 54 0.011616125 ubox
2 55 0.017789802 ubox
2 60 0.135288090 ubox
3 8 0.004204629 ubox
3 20 0.118188753 ubox
3 27 0.044624456 ubox
3 32 0.062160928 ubox
3 33 0.026263000 ubox
3 36 0.030067487 ubox
3 42 0.007205071 ubox
3 46 0.031795578 ubox
3 48 0.075297859 ubox
3 52 0.013356254 ubox
3 59 0.133303765 ubox
4 26 0.036445548 ubox
4 27 0.039977637 ubox
4 31 0.068015093 ubox
5 26 0.031336913 ubox
5 27 0.284674054 ubox
6 20 0.004693818 ubox
6 26 0.290721899 ubox
6 31 0.087788125 ubox
6 48 0.008256726 ubox
6 52 0.003682411 ubox
7 16 0.156635607 ubox
7 22 0.054341075 ubox
7 23 0.009330094 ubox
7 24 0.011101982 ubox
7 25 0.298228541 ubox
7 29 0.064181587 ubox
7 30 0.089131387 ubox
7 38 0.009185376 ubox
7 39 0.005405488 ubox
7 41 0.003433724 ubox
7 44 0.086744220 ubox
7 45 0.017190373 ubox
7 47 0.007571994 ubox
7 50 0.011453660 ubox
7 54 0.926642520 ubox
7 55 0.014725078 ubox
7 57 0.006539064 ubox
8 15 0.156856385 ubox
8 21 0.058406834 ubox
8 22 0.009976375 ubox
8 23 0.009836074 ubox
8 24 0.297870085 ubox
8 28 0.111620882 ubox
8 29 0.010298770 ubox
8 37 0.010098507 ubox
8 38 0.004392134 ubox
8 43 0.091706211 ubox
8 49 0.012203323 ubox
8 53 0.927826758 ubox
8 54 0.014310878 ubox
8 56 0.003444904 ubox
9 14 0.156158444 ubox
9 20 0.042420449 ubox
9 27 0.112077471 ubox
9 36 0.008048757 ubox
9 42 0.091679092 ubox
9 48 0.012194354 ubox
9 52 0.922778802 ubox
10 20 0.275086445 ubox
10 26 0.111896341 ubox
10 36 0.011428306 ubox
10 52 0.092154931 ubox
11 17 0.005852386 ubox
11 19 0.278434168 ubox
11 22 0.128401462 ubox
11 23 0.022710666 ubox
11 35 0.013002399 ubox
11 38 0.013490798 ubox
11 40 0.090172942 ubox
11 44 0.009997174 ubox
11 50 0.899199121 ubox
11 51 0.123148982 ubox
12 16 0.006051117 ubox
12 18 0.278085670 ubox
12 21 0.132016870 ubox
12 22 0.025820507 ubox
12 34 0.013023846 ubox
12 37 0.013899861 ubox
12 39 0.091107105 ubox
12 43 0.010209887 ubox
12 47 0.038280341 ubox
12 49 0.914536280 ubox
12 50 0.109179650 ubox
13 20 0.129443609 ubox
13 33 0.012920478 ubox
13 36 0.013793152 ubox
13 42 0.010188194 ubox
13 46 0.038448172 ubox
13 48 0.913264358 ubox
14 19 0.067936039 ubox
14 21 0.104535789 ubox
14 28 0.099187490 ubox
14 35 0.009926349 ubox
14 37 0.094866860 ubox
14 41 0.009397753 ubox
14 43 0.080930790 ubox
14 45 0.037085651 ubox
14 47 0.894043069 ubox
14 49 0.148585290 ubox
15 20 0.104558629 ubox
15 27 0.104280498 ubox
15 36 0.095183367 ubox
15 42 0.084356068 ubox
15 48 0.148770655 ubox
16 26 0.104264609 ubox
16 27 0.006844928 ubox
17 26 0.006844127 ubox
17 27 0.005207823 ubox
17 32 0.136400390 ubox
18 26 0.008503026 ubox
18 27 0.026769070 ubox
18 31 0.140423770 ubox
19 26 0.027650279 ubox
19 31 0.004619795 ubox
19 42 0.061839365 ubox
19 46 0.096566727 ubox
19 58 0.010753274 ubox
20 25 0.030903797 ubox
20 28 0.180897310 ubox
20 30 0.003336392 ubox
20 35 0.006044587 ubox
20 37 0.093332928 ubox
20 41 0.067682536 ubox
20 43 0.888254994 ubox
20 45 0.094453088 ubox
20 49 0.010172670 ubox
20 53 0.012245657 ubox
20 57 0.011582077 ubox
21 27 0.181015920 ubox
21 36 0.093239946 ubox
21 42 0.887697226 ubox
21 48 0.010195770 ubox
21 52 0.012279506 ubox
22 26 0.163081934 ubox
22 32 0.003623544 ubox
22 33 0.073595435 ubox
22 59 0.006642663 ubox
23 31 0.003247261 ubox
23 32 0.084806274 ubox
23 58 0.008027749 ubox
24 31 0.084339790 ubox
25 31 0.039556057 ubox
25 36 0.025117046 ubox
25 42 0.020453918 ubox
25 48 0.011621806 ubox
25 52 0.003525015 ubox
26 30 0.038858531 ubox
26 35 0.024974626 ubox
26 38 0.863156478 ubox
26 39 0.127430992 ubox
26 40 0.011679117 ubox
26 41 0.022247113 ubox
26 44 0.061985358 ubox
26 45 0.013114815 ubox
26 47 0.011861365 ubox
26 50 0.012247372 ubox
26 54 0.169186035 ubox
27 34 0.019187949 ubox
27 37 0.899663040 ubox
27 38 0.015827474 ubox
27 39 0.012097165 ubox
27 40 0.010262741 ubox
27 43 0.065360527 ubox
27 44 0.005507064 ubox
27 49 0.016144933 ubox
27 53 0.170600544 ubox
28 36 0.899733198 ubox
28 42 0.065094845 ubox
28 48 0.016775716 ubox
28 52 0.170844233 ubox
30 36 0.016959386 ubox
30 42 0.080968696 ubox
30 48 0.138250470 ubox
30 52 0.011287332 ubox
31 35 0.016457665 ubox
31 39 0.076615415 ubox
31 41 0.091775806 ubox
31 45 0.060535718 ubox
31 47 0.139673017 ubox
31 51 0.012930073 ubox
31 56 0.013916674 ubox
31 57 0.232005692 ubox
32 38 0.074414100 ubox
32 40 0.089438015 ubox
32 44 0.060044748 ubox
32 50 0.012813629 ubox
32 51 0.005505730 ubox
32 55 0.015648550 ubox
32 56 0.231476319 ubox
33 50 0.005219978 ubox
33 55 0.216633976 ubox
34 59 0.033571812 ubox
35 42 0.010741446 ubox
35 46 0.019045972 ubox
35 48 0.003797884 ubox
35 58 0.040332058 ubox
36 41 0.014813135 ubox
36 43 0.248487876 ubox
36 45 0.019393793 ubox
36 47 0.004644517 ubox
36 49 0.037476140 ubox
36 53 0.257765101 ubox
36 57 0.040810984 ubox
37 42 0.248360653 ubox
37 48 0.037466697 ubox
37 52 0.258099137 ubox
41 48 0.173369660 ubox
41 52 0.008721404 ubox
42 47 0.170205389 ubox
42 49 0.202545228 ubox
42 51 0.005546972 ubox
42 53 0.122911284 ubox
43 48 0.202492030 ubox
43 52 0.123233128 ubox
45 52 0.011366145 ubox
46 51 0.009985843 ubox
50 59 0.030873204 ubox
51 58 0.037237354 ubox
52 57 0.037613269 ubox
7 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 47 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
showpage
end
%%EOF
