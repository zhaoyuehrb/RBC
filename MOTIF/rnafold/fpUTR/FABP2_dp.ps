%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FABP2)
} def

/sequence { (\
UUCUCGCCCAAGGACAGACCUGAAUCUCUAGCUGCCUAGAGGCUGACUCAACUGAAAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.004048394 ubox
1 12 0.004039438 ubox
1 14 0.107599125 ubox
1 17 0.010392964 ubox
1 18 0.008407779 ubox
1 23 0.006494984 ubox
1 24 0.031299474 ubox
1 41 0.010567864 ubox
1 46 0.047208728 ubox
1 51 0.042681048 ubox
1 55 0.011028937 ubox
1 56 0.145887162 ubox
1 57 0.022898558 ubox
2 10 0.005137238 ubox
2 11 0.005233898 ubox
2 13 0.121249364 ubox
2 14 0.080419751 ubox
2 16 0.012173388 ubox
2 17 0.005923740 ubox
2 18 0.162527785 ubox
2 22 0.005462019 ubox
2 23 0.037455709 ubox
2 40 0.013273475 ubox
2 42 0.030819671 ubox
2 45 0.049105697 ubox
2 46 0.421864651 ubox
2 50 0.050268206 ubox
2 54 0.009735409 ubox
2 55 0.167482521 ubox
2 56 0.025369130 ubox
3 12 0.127677334 ubox
3 13 0.086629173 ubox
3 17 0.175765991 ubox
3 22 0.037970627 ubox
3 39 0.013606521 ubox
3 41 0.040527217 ubox
3 45 0.455933826 ubox
3 54 0.169554544 ubox
4 11 0.121710361 ubox
4 12 0.057846498 ubox
4 13 0.055277109 ubox
4 14 0.061959718 ubox
4 16 0.171912113 ubox
4 18 0.024139296 ubox
4 23 0.033259960 ubox
4 38 0.013632086 ubox
4 40 0.040582566 ubox
4 42 0.003858595 ubox
4 46 0.507408157 ubox
4 55 0.133985480 ubox
5 12 0.092743854 ubox
5 13 0.067208396 ubox
5 17 0.025461727 ubox
5 22 0.034868161 ubox
5 39 0.040533341 ubox
5 41 0.004830229 ubox
5 45 0.545140185 ubox
5 54 0.140500066 ubox
6 21 0.018655074 ubox
6 32 0.007533523 ubox
6 35 0.006204191 ubox
6 43 0.876742739 ubox
6 44 0.184557253 ubox
6 53 0.118058205 ubox
7 13 0.188944567 ubox
7 31 0.007536022 ubox
7 34 0.006205406 ubox
7 42 0.882770976 ubox
8 12 0.187724902 ubox
8 41 0.872376221 ubox
8 42 0.160089752 ubox
9 22 0.163841382 ubox
9 34 0.003479742 ubox
9 41 0.166672970 ubox
9 45 0.023497993 ubox
9 54 0.051686661 ubox
10 21 0.116002714 ubox
10 44 0.021746846 ubox
10 53 0.048395587 ubox
11 21 0.256898720 ubox
11 27 0.004385539 ubox
11 29 0.004774350 ubox
11 33 0.008346042 ubox
11 37 0.852262227 ubox
11 44 0.005376658 ubox
11 48 0.115055855 ubox
11 53 0.023156253 ubox
12 20 0.288667409 ubox
12 21 0.017783757 ubox
12 26 0.005381919 ubox
12 27 0.006184751 ubox
12 28 0.004868643 ubox
12 29 0.004151416 ubox
12 32 0.008488864 ubox
12 33 0.015004528 ubox
12 36 0.887828217 ubox
12 37 0.086003070 ubox
12 43 0.005771923 ubox
12 44 0.005637274 ubox
12 47 0.119722641 ubox
12 48 0.101601277 ubox
12 49 0.039461019 ubox
12 52 0.025694228 ubox
12 53 0.006029198 ubox
12 59 0.015204224 ubox
13 19 0.287919452 ubox
13 20 0.019900182 ubox
13 25 0.004721099 ubox
13 26 0.008951024 ubox
13 28 0.004425374 ubox
13 32 0.015446391 ubox
13 35 0.887852553 ubox
13 36 0.088545405 ubox
13 43 0.005817316 ubox
13 47 0.111531774 ubox
13 48 0.024898109 ubox
13 49 0.046517594 ubox
13 52 0.006633386 ubox
13 58 0.015415665 ubox
13 59 0.016361653 ubox
14 25 0.008513036 ubox
14 27 0.003701930 ubox
14 48 0.044457668 ubox
14 58 0.016583462 ubox
15 22 0.027331238 ubox
15 34 0.891748556 ubox
15 45 0.199955550 ubox
15 54 0.182139143 ubox
16 21 0.024743212 ubox
16 27 0.016755742 ubox
16 29 0.034240901 ubox
16 33 0.891413356 ubox
16 44 0.200587776 ubox
16 48 0.011317352 ubox
16 53 0.182906712 ubox
17 26 0.021152943 ubox
17 28 0.038096645 ubox
17 32 0.885385460 ubox
17 43 0.200523851 ubox
17 47 0.011865384 ubox
17 49 0.039019821 ubox
17 52 0.182541378 ubox
18 25 0.020636605 ubox
18 27 0.039193430 ubox
18 48 0.038605974 ubox
19 42 0.136022738 ubox
20 31 0.647459280 ubox
20 41 0.124763563 ubox
20 42 0.012236476 ubox
21 30 0.652274282 ubox
21 40 0.079421383 ubox
21 41 0.005269984 ubox
21 45 0.015251981 ubox
21 50 0.177982890 ubox
22 28 0.597856625 ubox
22 29 0.577733165 ubox
22 44 0.016967961 ubox
22 49 0.184752914 ubox
22 59 0.005443874 ubox
23 27 0.521595289 ubox
23 48 0.181475267 ubox
23 58 0.005226314 ubox
25 40 0.006523766 ubox
25 42 0.307114326 ubox
25 46 0.075976509 ubox
25 55 0.003892227 ubox
26 39 0.007490570 ubox
26 41 0.395905358 ubox
26 42 0.008912184 ubox
26 45 0.066605063 ubox
26 54 0.004079466 ubox
27 38 0.006358010 ubox
27 40 0.432747023 ubox
27 41 0.004157851 ubox
27 46 0.054993918 ubox
27 55 0.003394148 ubox
28 39 0.441696342 ubox
28 42 0.003233774 ubox
28 45 0.055024793 ubox
28 54 0.003536790 ubox
29 38 0.441630737 ubox
29 45 0.032913625 ubox
30 37 0.441141809 ubox
30 44 0.077638983 ubox
30 48 0.005103279 ubox
31 36 0.434143594 ubox
31 43 0.078866881 ubox
31 47 0.005573781 ubox
32 39 0.005811492 ubox
32 41 0.012002229 ubox
32 42 0.078292955 ubox
33 38 0.005485652 ubox
33 40 0.015164145 ubox
33 41 0.076937475 ubox
34 43 0.021257624 ubox
35 42 0.021372867 ubox
36 41 0.021361232 ubox
38 53 0.005020690 ubox
39 49 0.154458456 ubox
39 52 0.003768145 ubox
40 48 0.154674539 ubox
40 53 0.006734380 ubox
41 47 0.154690398 ubox
41 48 0.004776568 ubox
41 49 0.004303125 ubox
41 52 0.007117950 ubox
41 53 0.003959075 ubox
42 47 0.015608031 ubox
42 48 0.004427481 ubox
42 52 0.014195608 ubox
44 50 0.065034148 ubox
44 54 0.009687474 ubox
45 49 0.068985281 ubox
45 53 0.011646525 ubox
45 59 0.056335050 ubox
46 58 0.055787975 ubox
48 55 0.331004159 ubox
49 54 0.346997698 ubox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
showpage
end
%%EOF
