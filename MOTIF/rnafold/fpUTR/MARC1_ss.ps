%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCGCCCUGCAGCGCAGGCGACGGAAGGUUGCAGAGGCAGUGGGGCGCCGACCAAGUGGAAGCUGAGCCACCACCUCCCACUCCCCGCGCCGCCCCCCAGAAGGACGCACUGCUCUGAUUGGCCCGGAAGGGUUCAGGAGCUGCCCAGCCUUUGGGCUCGGGGCCAAAGGCCGCACCUUCCCCCAGCGGCCCCGGGCGACCAGCGCGCUCCGGCCUUGCCGCCGCCACCUCGCGGAGAAGCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[121.78862000 382.21896362]
[114.61849976 369.04330444]
[114.99696350 354.04809570]
[107.49935150 353.85885620]
[103.57138824 368.33541870]
[99.64341736 382.81201172]
[95.71545410 397.28857422]
[103.79084778 410.87399292]
[99.81375885 426.16967773]
[86.14372253 434.10098267]
[70.89093018 429.96240234]
[63.10458755 416.20928955]
[67.40419769 401.00109863]
[81.23888397 393.36059570]
[85.16684723 378.88403320]
[89.09481812 364.40747070]
[93.02278137 349.93087769]
[94.08540344 319.23510742]
[115.08682251 305.92684937]
[114.70835876 290.93161011]
[114.32989502 275.93640137]
[113.95143127 260.94116211]
[105.89546967 248.41317749]
[113.28211212 234.42218018]
[112.90364838 219.42695618]
[112.52518463 204.43173218]
[112.05213165 189.43919373]
[111.48451233 174.44993591]
[110.91688538 159.46067810]
[110.34926605 144.47142029]
[89.29209137 141.19744873]
[73.46486664 129.22308350]
[65.83412933 112.49593353]
[67.00508118 95.60887909]
[52.96440506 90.33066559]
[38.92373657 85.05244446]
[24.88306427 79.77423096]
[10.84239388 74.49601746]
[1.73377645 74.40842438]
[-3.34142542 69.06162262]
[-17.31438637 63.60668182]
[-31.28734779 58.15174484]
[-45.26030731 52.69680405]
[-59.23326874 47.24186707]
[-73.57876587 42.85930634]
[-88.21461487 39.57423019]
[-102.85047150 36.28915405]
[-117.48632812 33.00407791]
[-132.12219238 29.71900177]
[-147.28184509 34.24616241]
[-158.00564575 23.90935707]
[-172.64149475 20.62428284]
[-183.72897339 32.90629959]
[-199.40975952 37.88542938]
[-215.36827087 34.29086304]
[-227.26255798 23.19784164]
[-231.90557861 7.70839453]
[-246.58171082 4.60823345]
[-261.25784302 1.50807214]
[-275.93399048 -1.59208906]
[-290.61010742 -4.69225025]
[-305.71145630 0.02581120]
[-316.56481934 -10.17487335]
[-331.24096680 -13.27503490]
[-346.34228516 -8.55697346]
[-357.19564819 -18.75765800]
[-371.87179565 -21.85782051]
[-384.97708130 -13.02452946]
[-400.47381592 -16.12725067]
[-409.16802979 -29.32519531]
[-405.90164185 -44.78825760]
[-392.61251831 -53.34247208]
[-377.18487549 -49.91278076]
[-368.77163696 -36.53395844]
[-354.09548950 -33.43379593]
[-340.04388428 -38.37360001]
[-328.14077759 -27.95117188]
[-313.46466064 -24.85101128]
[-299.41305542 -29.79081726]
[-287.50994873 -19.36838722]
[-272.83383179 -16.26822662]
[-258.15768433 -13.16806507]
[-243.48155212 -10.06790352]
[-228.80540466 -6.96774244]
[-220.37956238 -17.69900894]
[-208.09541321 -23.78697586]
[-194.32087708 -23.99458885]
[-181.73863220 -18.22448921]
[-172.82365417 -7.54905891]
[-169.35641479 5.98842621]
[-154.72056580 9.27350235]
[-140.60775757 4.51137161]
[-128.83711243 15.08314705]
[-114.20125580 18.36822319]
[-99.56539917 21.65329933]
[-84.92954254 24.93837547]
[-70.29368591 28.22345161]
[-65.94676208 22.11163712]
[-52.90599823 3.77619648]
[-60.81194305 -8.97119617]
[-75.51330566 -16.23769188]
[-76.30085754 -32.61791611]
[-62.36443329 -41.26130295]
[-48.04063034 -33.27627182]
[-48.06454849 -16.87714195]
[-40.15860367 -4.12974882]
[-39.07204056 8.09343529]
[-41.44106674 18.92281151]
[-46.61949539 27.52303696]
[-53.77832794 33.26890564]
[-39.80537033 38.72384262]
[-25.83240700 44.17878342]
[-11.85944653 49.63372421]
[2.11351395 55.08866119]
[16.12060928 60.45534515]
[30.16127968 65.73355865]
[44.20195007 71.01177979]
[58.24262238 76.28999329]
[72.28329468 81.56820679]
[88.68137360 68.69767761]
[109.51872253 68.10421753]
[116.93663025 55.06678772]
[124.35453033 42.02935028]
[131.77243042 28.99191475]
[139.19033813 15.95447922]
[146.60824585 2.91704416]
[154.02613831 -10.12039089]
[154.12573242 -25.94128418]
[167.14466858 -33.17704773]
[174.56257629 -46.21448135]
[174.53071594 -51.38495636]
[176.29512024 -55.63542938]
[179.21044922 -58.43870926]
[182.51591492 -59.59724808]
[190.42185974 -72.34464264]
[198.32780457 -85.09203339]
[206.23374939 -97.83942413]
[214.13969421 -110.58682251]
[222.04563904 -123.33421326]
[229.95158386 -136.08160400]
[230.64978027 -151.88740540]
[243.93322754 -158.62532043]
[251.83917236 -171.37271118]
[259.74511719 -184.12011719]
[259.72119141 -200.51924133]
[274.04498291 -208.50427246]
[287.98141479 -199.86088562]
[287.19387817 -183.48066711]
[272.49249268 -176.21417236]
[264.58654785 -163.46676636]
[256.68060303 -150.71937561]
[256.54791260 -135.82536316]
[242.69897461 -128.17565918]
[234.79302979 -115.42826843]
[226.88708496 -102.68087769]
[218.98114014 -89.93347931]
[211.07519531 -77.18608856]
[203.16925049 -64.43869781]
[195.26330566 -51.69130325]
[187.60000610 -38.79658127]
[180.18211365 -25.75914383]
[180.61309814 -10.87077618]
[167.06358337 -2.70248866]
[159.64567566 10.33494663]
[152.22776794 23.37238312]
[144.80987549 36.40981674]
[137.39196777 49.44725418]
[129.97406006 62.48468781]
[122.55615997 75.52212524]
[134.71638489 81.21503448]
[145.03411865 92.46727753]
[159.92651367 90.67368317]
[174.81889343 88.88008118]
[189.71127319 87.08648682]
[204.60365295 85.29289246]
[219.49603271 83.49929047]
[224.87765503 69.17111206]
[236.30920410 58.99377441]
[251.16378784 55.30594635]
[266.02792358 58.95506668]
[277.48596191 69.10259247]
[282.90487671 83.41670227]
[281.03952026 98.60810852]
[272.31848145 111.18595123]
[258.74578857 118.25991821]
[243.44038391 118.20447540]
[229.91931152 111.03236389]
[221.28962708 98.39167023]
[206.39724731 100.18527222]
[191.50486755 101.97886658]
[176.61248779 103.77246857]
[161.72010803 105.56606293]
[146.82772827 107.35965729]
[144.37846375 122.15834808]
[157.89884949 128.65441895]
[171.41923523 135.15049744]
[184.93963623 141.64656067]
[198.50073242 148.05722046]
[212.10200500 154.38220215]
[225.70329285 160.70716858]
[239.79121399 153.92008972]
[254.93299866 157.82650757]
[263.97918701 170.58192444]
[262.65841675 186.16363525]
[251.59431458 197.21441650]
[236.01103210 198.51644897]
[223.26651001 189.45492554]
[219.37831116 174.30845642]
[205.77703857 167.98347473]
[192.17576599 161.65849304]
[184.80384827 161.68778992]
[178.44355774 155.16696167]
[164.92317200 148.67088318]
[151.40277100 142.17481995]
[137.88238525 135.67874146]
[125.33852386 143.90379333]
[125.90614319 158.89305115]
[126.47377014 173.88230896]
[127.04138947 188.87156677]
[130.48611450 197.30415344]
[127.52040863 204.05326843]
[127.89887238 219.04849243]
[128.27734375 234.04371643]
[136.36036682 247.64427185]
[128.94665527 260.56271362]
[129.32511902 275.55792236]
[129.70358276 290.55316162]
[130.08204651 305.54837036]
[138.25708008 307.12347412]
[146.01507568 311.73739624]
[152.21769714 319.23510742]
[155.80183411 329.03854370]
[155.93411255 340.18536377]
[152.14608765 351.42309570]
[155.33877563 366.07940674]
[158.62385559 380.71524048]
[162.00119019 395.33007812]
[174.79179382 405.01409912]
[175.05128479 421.05505371]
[162.58061218 431.14770508]
[146.94619751 427.54983521]
[140.14143372 413.02142334]
[147.38635254 398.70742798]
[144.00900269 384.09259033]
[139.45219421 378.29763794]
[140.68247986 369.27206421]
[137.48980713 354.61578369]
[129.99218750 354.42654419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 17]
[5 16]
[6 15]
[7 14]
[19 228]
[20 227]
[21 226]
[22 225]
[24 223]
[25 222]
[26 221]
[27 219]
[28 218]
[29 217]
[30 216]
[34 119]
[35 118]
[36 117]
[37 116]
[38 115]
[40 114]
[41 113]
[42 112]
[43 111]
[44 110]
[45 97]
[46 96]
[47 95]
[48 94]
[49 93]
[51 91]
[52 90]
[57 84]
[58 83]
[59 82]
[60 81]
[61 80]
[63 78]
[64 77]
[66 75]
[67 74]
[99 106]
[100 105]
[121 169]
[122 168]
[123 167]
[124 166]
[125 165]
[126 164]
[127 163]
[129 161]
[130 160]
[134 159]
[135 158]
[136 157]
[137 156]
[138 155]
[139 154]
[140 153]
[142 151]
[143 150]
[144 149]
[171 193]
[172 192]
[173 191]
[174 190]
[175 189]
[176 188]
[194 215]
[195 214]
[196 213]
[197 212]
[198 210]
[199 209]
[200 208]
[234 247]
[235 246]
[236 244]
[237 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
