%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:14:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ZNF723)
} def

/sequence { (\
GACCUACAUGCAUUGGGAGAUCCACAGCUAAGACGCCAGGACUCCCUGGAAGCCUAGAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 14 0.006057149 ubox
1 22 0.014034279 ubox
2 13 0.005944627 ubox
2 21 0.013924338 ubox
3 16 0.017770578 ubox
3 17 0.040993959 ubox
3 49 0.032755936 ubox
4 15 0.020407818 ubox
4 16 0.041263728 ubox
4 17 0.004836367 ubox
4 19 0.010205887 ubox
4 32 0.054303672 ubox
4 48 0.032642509 ubox
4 49 0.050112751 ubox
4 52 0.027183119 ubox
4 57 0.870958566 ubox
5 15 0.040898384 ubox
5 16 0.004425647 ubox
5 18 0.009875742 ubox
5 30 0.012153166 ubox
5 31 0.052616181 ubox
5 48 0.049912868 ubox
5 51 0.026585218 ubox
5 56 0.872341921 ubox
6 14 0.038788137 ubox
6 29 0.013421893 ubox
6 47 0.050068512 ubox
6 55 0.855158048 ubox
7 15 0.057442803 ubox
7 48 0.036347054 ubox
8 14 0.057644969 ubox
8 47 0.036205618 ubox
9 24 0.003819114 ubox
9 26 0.012991236 ubox
9 30 0.017752726 ubox
9 35 0.005032793 ubox
9 48 0.004414992 ubox
9 56 0.015745773 ubox
10 14 0.003688570 ubox
10 23 0.004296463 ubox
10 25 0.014111585 ubox
10 28 0.146326126 ubox
10 29 0.004686981 ubox
10 34 0.006993771 ubox
10 47 0.006597446 ubox
10 53 0.845911859 ubox
10 55 0.006116648 ubox
11 27 0.147411667 ubox
11 48 0.154560739 ubox
11 52 0.845652202 ubox
12 21 0.004635374 ubox
12 47 0.144299799 ubox
13 20 0.004833393 ubox
13 27 0.033671479 ubox
13 31 0.008442324 ubox
13 49 0.158911274 ubox
13 50 0.528307141 ubox
13 51 0.173894918 ubox
13 52 0.005931194 ubox
13 57 0.007288800 ubox
13 58 0.005167514 ubox
13 59 0.003693826 ubox
14 19 0.004725414 ubox
14 24 0.148781766 ubox
14 26 0.050424619 ubox
14 30 0.008907073 ubox
14 48 0.150797164 ubox
14 49 0.486432796 ubox
14 50 0.170093154 ubox
14 51 0.017460262 ubox
14 56 0.010661241 ubox
14 57 0.005248022 ubox
14 58 0.004620148 ubox
15 23 0.151882145 ubox
15 25 0.052664879 ubox
15 29 0.008969947 ubox
15 45 0.006675967 ubox
15 46 0.975871032 ubox
15 47 0.035253044 ubox
15 55 0.010735421 ubox
16 22 0.151653266 ubox
16 23 0.059235749 ubox
16 28 0.008939299 ubox
16 44 0.005100533 ubox
16 45 0.984519221 ubox
16 46 0.032370968 ubox
16 47 0.020127288 ubox
16 54 0.010791778 ubox
17 21 0.098236482 ubox
17 22 0.059385329 ubox
17 44 0.984800822 ubox
17 45 0.026992469 ubox
17 46 0.019705119 ubox
17 53 0.010765832 ubox
18 29 0.007138032 ubox
18 43 0.984819584 ubox
19 28 0.007356725 ubox
19 42 0.984413812 ubox
19 44 0.027654103 ubox
20 43 0.027512777 ubox
21 40 0.015830768 ubox
21 41 0.981919420 ubox
21 58 0.004674143 ubox
22 39 0.017759996 ubox
22 40 0.985129960 ubox
22 57 0.004976199 ubox
23 39 0.983203948 ubox
26 55 0.003745246 ubox
27 36 0.970265710 ubox
27 53 0.017615519 ubox
28 35 0.970921452 ubox
28 52 0.017834347 ubox
28 57 0.070809505 ubox
29 38 0.005794028 ubox
29 51 0.016079511 ubox
29 56 0.075738060 ubox
30 55 0.069429761 ubox
31 55 0.073103363 ubox
32 54 0.079391463 ubox
35 53 0.012809823 ubox
36 49 0.169461064 ubox
36 52 0.009444994 ubox
37 48 0.170220086 ubox
38 47 0.170188618 ubox
39 46 0.170205061 ubox
40 44 0.003912282 ubox
40 45 0.169631749 ubox
46 57 0.117271096 ubox
47 51 0.004552642 ubox
47 56 0.183949258 ubox
48 54 0.109961838 ubox
48 55 0.190506641 ubox
49 53 0.108453307 ubox
49 54 0.190768581 ubox
4 57 0.9500000 lbox
5 56 0.9500000 lbox
6 55 0.9500000 lbox
10 53 0.9500000 lbox
11 52 0.9500000 lbox
15 46 0.9500000 lbox
16 45 0.9500000 lbox
17 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
21 41 0.9500000 lbox
22 40 0.9500000 lbox
23 39 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
showpage
end
%%EOF
