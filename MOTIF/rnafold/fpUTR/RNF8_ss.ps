%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCGCAGGCGUAGUGCUCCUGCUUCCUGGCCGAGGGCGGGCGAGCGGAGCCUGCUUUCGCAGCGAUCGCGAGCGUGUGGCGAUUGCUUCUGUCUGUUAUUUAGAUAUGGAAGCUGAGGGGAUGCACAGAGGCAGCCAGAACCUAGGUCAGGGUCUCGCUCGGUGCUGACCGCCCCCGGGGUCGAGUAGGCG\
) } def
/len { sequence length } bind def

/coor [
[134.11465454 304.71502686]
[122.65660858 314.39556885]
[109.54545593 307.10873413]
[111.71569061 292.26748657]
[111.50289917 277.26898193]
[104.03826904 277.99655151]
[97.03435516 291.26098633]
[90.03044128 304.52542114]
[83.02652740 317.78985596]
[76.02260590 331.05429077]
[76.42098236 346.87048340]
[63.63621140 354.51239014]
[56.63229370 367.77682495]
[54.58331680 384.60650635]
[37.84413528 387.29650879]
[30.62538147 371.95617676]
[43.36786270 360.77288818]
[50.37177658 347.50845337]
[49.47243500 332.64105225]
[62.75817490 324.05035400]
[69.76209259 310.78594971]
[76.76600647 297.52151489]
[83.76992035 284.25708008]
[90.77384186 270.99264526]
[101.06424713 259.63638306]
[113.18238068 254.56152344]
[124.37218475 255.54010010]
[121.00054932 240.92395020]
[117.62891388 226.30778503]
[114.25727844 211.69163513]
[110.88564301 197.07546997]
[107.51400757 182.45932007]
[104.14236450 167.84315491]
[93.74227905 157.18072510]
[98.17964172 141.99453735]
[94.80800629 127.37837982]
[91.43637085 112.76222229]
[81.35736084 101.65305328]
[67.13722229 96.87940979]
[52.91708755 92.10576630]
[37.37205505 95.04898834]
[27.76882744 83.66358948]
[13.54868889 78.88994598]
[-0.47273025 85.67504883]
[-14.82596970 80.63131714]
[-21.20811462 67.22222137]
[-35.42825317 62.44858170]
[-49.64838791 57.67493439]
[-63.86852646 52.90129089]
[-81.81922913 56.97698212]
[-92.92117310 43.39386368]
[-107.21674347 38.85111237]
[-116.35775757 39.23371887]
[-121.70596313 34.11732483]
[-135.92610168 29.34367943]
[-150.14624023 24.57003593]
[-166.10328674 28.35215187]
[-177.15888977 16.23993301]
[-171.93997192 0.69339108]
[-155.81532288 -2.29452467]
[-145.37258911 10.34989738]
[-131.15245056 15.12354183]
[-116.93231201 19.89718628]
[-102.67399597 24.55553818]
[-88.37841797 29.09828949]
[-77.48642731 23.81555176]
[-65.53315735 27.49402046]
[-59.09488297 38.68115234]
[-44.87474442 43.45479965]
[-30.65460777 48.22844315]
[-16.43446922 53.00208664]
[-3.25409961 46.16005325]
[11.23514462 50.79863358]
[18.32233429 64.66980743]
[32.54247284 69.44345856]
[47.07038498 66.15879059]
[57.69073105 77.88562775]
[71.91087341 82.65927124]
[86.13100433 87.43291473]
[99.77089691 81.19165039]
[105.45499420 67.31033325]
[111.13909912 53.42901230]
[110.42977905 48.22884369]
[111.67070770 43.73101425]
[114.26454163 40.56297302]
[117.45108795 39.02244568]
[123.80258942 25.43353844]
[130.15408325 11.84463024]
[136.50558472 -1.74427831]
[142.85708618 -15.33318615]
[149.20858765 -28.92209435]
[155.56008911 -42.51100159]
[161.91160583 -56.09991074]
[168.26310730 -69.68881989]
[167.09712219 -85.46700287]
[179.49571228 -93.72074890]
[185.84721375 -107.30966187]
[192.19871521 -120.89856720]
[198.55021667 -134.48747253]
[196.53115845 -152.78399658]
[211.28288269 -162.27824402]
[217.41349792 -175.96821594]
[223.54412842 -189.65818787]
[229.67474365 -203.34817505]
[235.80537415 -217.03814697]
[227.28349304 -229.89820862]
[227.08996582 -245.32435608]
[235.28652954 -258.39416504]
[249.25770569 -264.93710327]
[264.54531860 -262.86535645]
[276.27117920 -252.83998108]
[280.69357300 -238.06005859]
[276.40136719 -223.24182129]
[264.76416016 -213.11369324]
[249.49534607 -210.90753174]
[243.36473083 -197.21754456]
[237.23410034 -183.52757263]
[231.10348511 -169.83760071]
[224.97285461 -156.14761353]
[228.98965454 -144.72798157]
[223.98271179 -133.26750183]
[212.13911438 -128.13597107]
[205.78761292 -114.54706573]
[199.43611145 -100.95816040]
[193.08460999 -87.36924744]
[194.70489502 -72.56303406]
[181.85200500 -63.33731842]
[175.50050354 -49.74840927]
[169.14900208 -36.15950012]
[162.79750061 -22.57059288]
[156.44599915 -8.98168468]
[150.09449768 4.60722351]
[143.74299622 18.19613075]
[137.39149475 31.78503990]
[131.03999329 45.37394714]
[125.02041626 59.11311340]
[119.33631897 72.99443054]
[113.65221405 86.87574768]
[115.92351532 93.02433777]
[115.80276489 99.04911041]
[113.67102814 104.11972046]
[110.16500092 107.65528107]
[106.05252838 109.39058685]
[109.42416382 124.00674438]
[112.79579926 138.62290955]
[123.43704987 150.33078003]
[118.75852966 164.47152710]
[122.13016510 179.08767700]
[125.50180054 193.70384216]
[128.87342834 208.31999207]
[132.24507141 222.93615723]
[135.61669922 237.55230713]
[138.98834229 252.16847229]
[145.55905151 265.65274048]
[154.99256897 277.31503296]
[164.42608643 288.97732544]
[173.85958862 300.63958740]
[181.70140076 305.35241699]
[183.34959412 312.56796265]
[192.59301758 324.38146973]
[201.83645630 336.19497681]
[211.07987976 348.00848389]
[220.32330322 359.82202148]
[229.56672668 371.63552856]
[238.81016541 383.44903564]
[253.40786743 389.54965210]
[255.15711975 404.34118652]
[264.40054321 416.15469360]
[273.64398193 427.96820068]
[289.14581299 427.28094482]
[302.07244873 435.86477661]
[307.45330811 450.41900635]
[303.21932983 465.34729004]
[290.99859619 474.90933228]
[275.49020386 475.42840576]
[262.65744019 466.70486450]
[257.43481445 452.09307861]
[261.83047485 437.21163940]
[252.58703613 425.39813232]
[243.34361267 413.58462524]
[229.40705872 408.32897949]
[226.99664307 392.69247437]
[217.75321960 380.87893677]
[208.50979614 369.06542969]
[199.26637268 357.25192261]
[190.02293396 345.43841553]
[180.77951050 333.62490845]
[171.53608704 321.81140137]
[162.19731140 310.07312012]
[152.76379395 298.41082764]
[143.33029175 286.74853516]
[133.89677429 275.08627319]
[126.43215179 275.81384277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[12 18]
[13 17]
[27 153]
[28 152]
[29 151]
[30 150]
[31 149]
[32 148]
[33 147]
[35 145]
[36 144]
[37 143]
[38 79]
[39 78]
[40 77]
[42 75]
[43 74]
[46 71]
[47 70]
[48 69]
[49 68]
[51 65]
[52 64]
[54 63]
[55 62]
[56 61]
[80 138]
[81 137]
[82 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 128]
[94 127]
[96 125]
[97 124]
[98 123]
[99 122]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
[154 192]
[155 191]
[156 190]
[157 189]
[159 188]
[160 187]
[161 186]
[162 185]
[163 184]
[164 183]
[165 182]
[167 180]
[168 179]
[169 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
