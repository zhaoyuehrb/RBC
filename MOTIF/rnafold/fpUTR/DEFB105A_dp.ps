%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DEFB105A)
} def

/sequence { (\
GGGUCUUCUCAAGGAAAUCCCAAUCUCUAUUCCGAAGAGUCUUCCCUAAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.018640654 ubox
1 20 0.040312596 ubox
1 21 0.423707690 ubox
1 33 0.006364818 ubox
1 41 0.176060931 ubox
1 42 0.024186395 ubox
1 43 0.013630834 ubox
1 44 0.008470194 ubox
1 45 0.070718332 ubox
1 46 0.879654189 ubox
1 47 0.055349795 ubox
2 9 0.018659294 ubox
2 19 0.040618832 ubox
2 20 0.424011367 ubox
2 21 0.004844989 ubox
2 32 0.006362945 ubox
2 40 0.175570717 ubox
2 41 0.027859612 ubox
2 42 0.020466413 ubox
2 43 0.007193821 ubox
2 44 0.071007122 ubox
2 45 0.881166561 ubox
2 46 0.058167597 ubox
2 47 0.003221182 ubox
3 8 0.018624192 ubox
3 18 0.040531094 ubox
3 19 0.423922621 ubox
3 20 0.004738995 ubox
3 31 0.006085014 ubox
3 40 0.025864847 ubox
3 41 0.023355666 ubox
3 42 0.006313093 ubox
3 43 0.068472217 ubox
3 44 0.880603999 ubox
3 45 0.057650831 ubox
3 46 0.003296760 ubox
4 14 0.017833498 ubox
4 15 0.061928470 ubox
4 17 0.049903298 ubox
4 38 0.243054269 ubox
4 39 0.005784279 ubox
5 13 0.018895035 ubox
5 14 0.062728167 ubox
5 37 0.243736520 ubox
5 39 0.040546354 ubox
6 12 0.018845334 ubox
6 13 0.061563210 ubox
6 15 0.038384396 ubox
6 16 0.410284567 ubox
6 17 0.012402358 ubox
6 36 0.243572719 ubox
6 38 0.036242240 ubox
6 39 0.142739466 ubox
7 11 0.015773068 ubox
7 12 0.049930852 ubox
7 14 0.040477229 ubox
7 15 0.418120437 ubox
7 16 0.010291647 ubox
7 35 0.243286447 ubox
7 37 0.029919492 ubox
7 38 0.159727890 ubox
8 13 0.041149534 ubox
8 14 0.418400176 ubox
8 34 0.243062032 ubox
8 37 0.161555285 ubox
8 39 0.853237639 ubox
9 13 0.376934842 ubox
9 15 0.007852695 ubox
9 35 0.042502885 ubox
9 36 0.153283771 ubox
9 38 0.854216299 ubox
10 14 0.008005685 ubox
10 34 0.052370543 ubox
10 37 0.852387650 ubox
11 31 0.055272421 ubox
11 43 0.003301943 ubox
12 26 0.005317130 ubox
12 28 0.046379842 ubox
12 30 0.054292841 ubox
12 31 0.007203554 ubox
12 42 0.003408629 ubox
12 43 0.005258187 ubox
12 47 0.006451950 ubox
13 20 0.031722411 ubox
13 21 0.040476510 ubox
13 25 0.005469367 ubox
13 26 0.039681444 ubox
13 27 0.048254557 ubox
13 28 0.079569984 ubox
13 30 0.004335336 ubox
13 32 0.012581035 ubox
13 33 0.895790580 ubox
13 41 0.003389577 ubox
13 42 0.005583739 ubox
13 45 0.012703518 ubox
13 46 0.006324170 ubox
14 19 0.031762257 ubox
14 20 0.040426282 ubox
14 24 0.003775405 ubox
14 25 0.060521861 ubox
14 26 0.016284538 ubox
14 27 0.084440906 ubox
14 31 0.012397371 ubox
14 32 0.896081572 ubox
14 40 0.003231440 ubox
14 41 0.005656754 ubox
14 44 0.012919517 ubox
14 45 0.005930475 ubox
15 24 0.059900539 ubox
15 26 0.082114722 ubox
15 30 0.019557662 ubox
15 31 0.883783971 ubox
15 40 0.005614467 ubox
15 43 0.013026593 ubox
16 30 0.780876070 ubox
16 31 0.094238350 ubox
16 42 0.012025099 ubox
17 24 0.104652927 ubox
17 30 0.131035650 ubox
17 42 0.003165708 ubox
18 23 0.097249323 ubox
18 29 0.151095596 ubox
22 31 0.019560932 ubox
22 43 0.072164707 ubox
23 30 0.030641390 ubox
23 40 0.062229237 ubox
23 42 0.078912090 ubox
24 29 0.032368603 ubox
24 35 0.036419720 ubox
24 38 0.071655182 ubox
24 39 0.011779439 ubox
25 34 0.038934934 ubox
25 37 0.076931107 ubox
25 39 0.348372012 ubox
25 52 0.017880713 ubox
26 35 0.068899355 ubox
26 36 0.057194682 ubox
26 38 0.352281757 ubox
26 51 0.017703290 ubox
27 34 0.086965064 ubox
27 37 0.352717167 ubox
27 39 0.008140580 ubox
27 52 0.026164083 ubox
28 36 0.345935689 ubox
28 38 0.007844098 ubox
28 48 0.014927026 ubox
28 51 0.026243531 ubox
29 40 0.065013877 ubox
29 47 0.014988414 ubox
30 36 0.009253454 ubox
30 38 0.003460156 ubox
30 39 0.068777444 ubox
30 49 0.022379502 ubox
30 50 0.010331959 ubox
30 51 0.005713773 ubox
31 35 0.014557420 ubox
31 36 0.004913111 ubox
31 37 0.003564778 ubox
31 38 0.071362905 ubox
31 48 0.022321216 ubox
31 49 0.010872802 ubox
31 50 0.006142839 ubox
32 37 0.071423173 ubox
34 41 0.024354725 ubox
34 43 0.004871197 ubox
34 44 0.190849907 ubox
35 40 0.022292078 ubox
35 42 0.005030595 ubox
35 43 0.191205523 ubox
36 42 0.190703601 ubox
36 43 0.003836819 ubox
36 47 0.027347725 ubox
37 41 0.186601353 ubox
37 42 0.003839392 ubox
37 44 0.023112858 ubox
37 46 0.028307312 ubox
38 43 0.021705725 ubox
38 47 0.022935868 ubox
39 46 0.024167399 ubox
41 52 0.072128501 ubox
42 49 0.016022120 ubox
42 50 0.015657413 ubox
42 51 0.074675092 ubox
42 52 0.004695308 ubox
43 48 0.014872490 ubox
43 49 0.016415932 ubox
43 50 0.068816990 ubox
43 51 0.007018449 ubox
46 52 0.029901639 ubox
47 51 0.029667414 ubox
1 46 0.9500000 lbox
2 45 0.9500000 lbox
3 44 0.9500000 lbox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
showpage
end
%%EOF
