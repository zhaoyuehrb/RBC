%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:34 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (S100A7)
} def

/sequence { (\
GUCCAAACACACACAUCUCACUCAUCCUUCUACUCGUGACGCUUCCCAGCUCUGGCUUUUUGAAAGCAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.268062098 ubox
1 10 0.280281758 ubox
1 12 0.242768329 ubox
1 14 0.111292767 ubox
1 16 0.008876701 ubox
1 21 0.024215537 ubox
1 33 0.015044602 ubox
1 40 0.159554251 ubox
1 42 0.011315073 ubox
1 50 0.009175895 ubox
1 56 0.112826124 ubox
1 67 0.041761049 ubox
2 7 0.248342818 ubox
2 9 0.264980671 ubox
2 11 0.239674754 ubox
2 13 0.106028981 ubox
2 15 0.009505271 ubox
2 20 0.022920021 ubox
2 32 0.014343548 ubox
2 39 0.158516797 ubox
2 41 0.011105866 ubox
2 49 0.008943547 ubox
2 55 0.060984228 ubox
2 63 0.014458341 ubox
2 66 0.041160471 ubox
3 38 0.149779726 ubox
3 54 0.062177246 ubox
3 55 0.124432030 ubox
3 62 0.014289691 ubox
4 38 0.026294504 ubox
4 54 0.145548655 ubox
4 62 0.060015523 ubox
5 29 0.008291812 ubox
5 37 0.031497199 ubox
5 44 0.003390001 ubox
5 53 0.135680665 ubox
5 59 0.007199611 ubox
5 60 0.010305508 ubox
5 61 0.060109454 ubox
6 28 0.007996939 ubox
6 29 0.004622268 ubox
6 43 0.003538641 ubox
6 44 0.004897561 ubox
6 58 0.008786806 ubox
6 59 0.011009780 ubox
6 60 0.058575423 ubox
6 61 0.003439306 ubox
7 28 0.004435709 ubox
7 37 0.079929120 ubox
7 43 0.005008224 ubox
7 57 0.009157394 ubox
7 58 0.010105005 ubox
7 59 0.051610654 ubox
7 60 0.003249646 ubox
8 36 0.081188786 ubox
8 38 0.131463195 ubox
8 54 0.063316786 ubox
8 62 0.006454001 ubox
9 37 0.138547472 ubox
9 53 0.056435726 ubox
9 61 0.005790328 ubox
10 36 0.138591938 ubox
10 38 0.146883484 ubox
10 54 0.067349201 ubox
10 62 0.006151312 ubox
11 37 0.150651891 ubox
11 53 0.060006741 ubox
11 61 0.005511493 ubox
12 36 0.150700584 ubox
12 38 0.167221598 ubox
12 54 0.073896924 ubox
12 62 0.006207324 ubox
13 37 0.170583533 ubox
13 53 0.065898836 ubox
13 61 0.005547613 ubox
14 36 0.170630097 ubox
14 38 0.033203758 ubox
14 54 0.074987480 ubox
14 62 0.006996957 ubox
15 25 0.020295120 ubox
15 37 0.033370759 ubox
15 53 0.067937431 ubox
15 61 0.006382071 ubox
16 24 0.020804388 ubox
16 36 0.032023355 ubox
16 39 0.031327400 ubox
16 55 0.004433163 ubox
16 63 0.008713855 ubox
17 38 0.033453735 ubox
17 49 0.008575719 ubox
17 54 0.023834458 ubox
17 62 0.009293830 ubox
17 66 0.007562537 ubox
17 71 0.027948300 ubox
18 39 0.750901555 ubox
18 48 0.006176849 ubox
18 55 0.004477050 ubox
18 63 0.012659688 ubox
18 65 0.007401595 ubox
18 70 0.023981733 ubox
19 38 0.811819085 ubox
19 54 0.022577955 ubox
19 62 0.013308827 ubox
20 37 0.812207463 ubox
20 53 0.020860963 ubox
20 61 0.012451095 ubox
21 36 0.811272097 ubox
21 49 0.003951294 ubox
21 66 0.009643613 ubox
21 71 0.024450041 ubox
22 39 0.198016720 ubox
22 48 0.003565637 ubox
22 55 0.003956288 ubox
22 63 0.025444725 ubox
22 65 0.009042276 ubox
22 70 0.023132341 ubox
23 38 0.214139478 ubox
23 54 0.019428096 ubox
23 62 0.026734232 ubox
24 37 0.212586229 ubox
24 53 0.018892686 ubox
24 61 0.026297401 ubox
25 36 0.205146251 ubox
25 39 0.016833473 ubox
25 63 0.011269843 ubox
26 38 0.018365241 ubox
26 54 0.004126260 ubox
26 55 0.011062321 ubox
26 62 0.011878874 ubox
27 49 0.004886598 ubox
27 54 0.012286164 ubox
27 66 0.025623208 ubox
27 71 0.039062102 ubox
28 39 0.010458229 ubox
28 48 0.004747407 ubox
28 64 0.039253333 ubox
28 65 0.023195549 ubox
28 69 0.012070011 ubox
28 70 0.039391231 ubox
29 38 0.010439826 ubox
29 39 0.085552467 ubox
29 63 0.044576742 ubox
29 64 0.019843611 ubox
29 68 0.012779917 ubox
29 69 0.035309285 ubox
29 70 0.004358678 ubox
30 38 0.092621247 ubox
30 49 0.003283624 ubox
30 54 0.008714435 ubox
30 55 0.023081145 ubox
30 62 0.046337978 ubox
30 66 0.017932228 ubox
30 71 0.016896533 ubox
31 38 0.011386239 ubox
31 48 0.003175856 ubox
31 54 0.024639734 ubox
31 62 0.005934924 ubox
31 65 0.017540704 ubox
31 70 0.016794991 ubox
32 37 0.012954669 ubox
32 53 0.024316925 ubox
32 61 0.006861046 ubox
33 49 0.007172013 ubox
33 55 0.029497871 ubox
33 66 0.008095863 ubox
33 71 0.019288562 ubox
34 48 0.006760867 ubox
34 54 0.022507442 ubox
34 55 0.053710311 ubox
34 63 0.048705376 ubox
34 65 0.005898764 ubox
34 70 0.018514667 ubox
35 41 0.010182188 ubox
35 54 0.259083030 ubox
35 62 0.050837048 ubox
36 40 0.014157338 ubox
36 42 0.013531738 ubox
36 50 0.017982243 ubox
36 53 0.244048154 ubox
36 56 0.051026746 ubox
36 61 0.049654517 ubox
36 67 0.009264566 ubox
37 41 0.012673160 ubox
37 48 0.021896743 ubox
37 49 0.015159079 ubox
37 54 0.020084675 ubox
37 55 0.049968741 ubox
37 66 0.009202345 ubox
37 68 0.007726050 ubox
38 45 0.014515034 ubox
38 47 0.024238598 ubox
38 52 0.360661836 ubox
38 53 0.012550177 ubox
38 58 0.011202940 ubox
38 59 0.044400661 ubox
38 60 0.004010799 ubox
38 61 0.003239398 ubox
38 67 0.007479157 ubox
39 44 0.013225478 ubox
39 51 0.360931302 ubox
39 57 0.012090492 ubox
39 58 0.044872524 ubox
39 59 0.004116132 ubox
39 60 0.003400940 ubox
40 54 0.054065193 ubox
40 62 0.010170619 ubox
41 50 0.782556205 ubox
41 53 0.013118018 ubox
41 56 0.098607357 ubox
41 61 0.009175017 ubox
41 67 0.560120929 ubox
42 49 0.783153123 ubox
42 55 0.098384725 ubox
42 66 0.560663484 ubox
42 71 0.009446252 ubox
43 48 0.715383066 ubox
43 49 0.006656530 ubox
43 54 0.096574485 ubox
43 63 0.013641691 ubox
43 64 0.284144304 ubox
43 65 0.480817172 ubox
43 70 0.009519327 ubox
44 48 0.024433628 ubox
44 55 0.004035861 ubox
44 62 0.020924796 ubox
44 63 0.403318170 ubox
44 64 0.374615233 ubox
44 65 0.008821755 ubox
44 69 0.008234756 ubox
45 54 0.014570247 ubox
45 55 0.032675285 ubox
45 62 0.492869042 ubox
46 54 0.032737345 ubox
46 55 0.232716830 ubox
47 54 0.240342240 ubox
47 62 0.104801345 ubox
48 53 0.216754007 ubox
48 57 0.492488224 ubox
48 58 0.037979164 ubox
48 59 0.033891239 ubox
48 60 0.017584274 ubox
48 61 0.083346026 ubox
49 56 0.514522066 ubox
49 57 0.009138537 ubox
49 58 0.023234103 ubox
49 59 0.009463899 ubox
49 60 0.045816440 ubox
49 67 0.028002119 ubox
50 55 0.512995837 ubox
50 66 0.028006466 ubox
50 71 0.049841860 ubox
51 63 0.033231828 ubox
51 65 0.023980596 ubox
51 70 0.060944148 ubox
52 62 0.035318434 ubox
52 66 0.006940723 ubox
52 71 0.255632402 ubox
53 62 0.006175588 ubox
53 65 0.007094353 ubox
53 68 0.120325884 ubox
53 70 0.261565719 ubox
54 60 0.009655005 ubox
54 61 0.008566869 ubox
54 67 0.092512572 ubox
55 59 0.007341359 ubox
55 60 0.006974924 ubox
55 67 0.780533691 ubox
56 66 0.787547744 ubox
56 71 0.035567134 ubox
57 63 0.009973051 ubox
57 64 0.027955925 ubox
57 65 0.785319373 ubox
57 66 0.008322741 ubox
57 69 0.003359368 ubox
57 70 0.036633928 ubox
57 71 0.010734130 ubox
58 62 0.011929944 ubox
58 63 0.032745756 ubox
58 64 0.767825215 ubox
58 65 0.026305575 ubox
58 66 0.005228858 ubox
58 68 0.003365080 ubox
58 69 0.035239137 ubox
58 70 0.015998037 ubox
58 71 0.111947682 ubox
59 63 0.639728454 ubox
59 64 0.031506455 ubox
59 65 0.008003801 ubox
59 66 0.004203489 ubox
59 68 0.032993849 ubox
59 69 0.014958842 ubox
59 70 0.172707401 ubox
59 71 0.009444086 ubox
60 64 0.010056258 ubox
60 65 0.004931945 ubox
60 66 0.006821217 ubox
60 68 0.012263912 ubox
60 69 0.184371245 ubox
60 70 0.013987102 ubox
60 71 0.006081535 ubox
61 65 0.005679262 ubox
61 68 0.187400484 ubox
61 69 0.014266040 ubox
61 70 0.009277300 ubox
62 67 0.187425330 ubox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 37 0.9500000 lbox
21 36 0.9500000 lbox
41 50 0.9500000 lbox
42 49 0.9500000 lbox
43 48 0.9500000 lbox
55 67 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
58 64 0.9500000 lbox
59 63 0.9500000 lbox
showpage
end
%%EOF
