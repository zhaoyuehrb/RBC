%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:03:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SCGB1A1)
} def

/sequence { (\
ACUAGCCCACCAGACUCAGAGACGGAACCAGAGACGGGCCAGAGCAUCCCCCUCCUCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.113859211 ubox
2 19 0.079036347 ubox
2 21 0.041357358 ubox
2 25 0.015534577 ubox
2 31 0.013832253 ubox
2 33 0.014266336 ubox
2 42 0.585659037 ubox
2 44 0.134680783 ubox
3 12 0.113422610 ubox
3 18 0.078452980 ubox
3 20 0.040499679 ubox
3 24 0.014994636 ubox
3 30 0.015192809 ubox
3 32 0.014339123 ubox
3 41 0.585417428 ubox
3 43 0.133741335 ubox
4 16 0.083999552 ubox
4 56 0.007579882 ubox
5 15 0.085865012 ubox
5 39 0.758016932 ubox
5 45 0.023210721 ubox
5 55 0.007716283 ubox
6 25 0.103038887 ubox
6 38 0.758954279 ubox
6 44 0.023182818 ubox
7 24 0.102953134 ubox
7 25 0.180784938 ubox
7 36 0.003432246 ubox
7 37 0.758717066 ubox
7 38 0.007746842 ubox
8 24 0.181208671 ubox
8 36 0.757257986 ubox
8 37 0.009549206 ubox
10 25 0.211740766 ubox
10 37 0.026079480 ubox
10 38 0.035709766 ubox
11 24 0.212275167 ubox
11 36 0.031211723 ubox
11 37 0.035959150 ubox
12 53 0.003731842 ubox
12 56 0.011553637 ubox
13 48 0.010669698 ubox
13 52 0.003962207 ubox
13 54 0.006087556 ubox
13 55 0.012301671 ubox
13 57 0.018560224 ubox
14 47 0.010201550 ubox
14 53 0.005901060 ubox
14 56 0.017821328 ubox
15 21 0.108814262 ubox
15 25 0.054241926 ubox
15 31 0.070544767 ubox
15 33 0.598955276 ubox
15 44 0.024986244 ubox
16 20 0.098538070 ubox
16 22 0.068053464 ubox
16 24 0.045036419 ubox
16 25 0.101907625 ubox
16 26 0.180316767 ubox
16 30 0.064842066 ubox
16 32 0.601132127 ubox
16 34 0.035027686 ubox
16 43 0.025166950 ubox
17 21 0.072083514 ubox
17 24 0.121546790 ubox
17 25 0.185521706 ubox
17 31 0.600679443 ubox
17 33 0.035810255 ubox
17 42 0.025128084 ubox
18 56 0.030601769 ubox
19 48 0.007707110 ubox
19 54 0.090920183 ubox
19 55 0.030725851 ubox
19 57 0.123968078 ubox
20 47 0.007687650 ubox
20 53 0.091868023 ubox
20 56 0.124240528 ubox
21 52 0.091478297 ubox
21 54 0.040631060 ubox
21 55 0.120961779 ubox
21 57 0.050455165 ubox
22 53 0.047770634 ubox
22 56 0.050300998 ubox
23 36 0.027267762 ubox
24 35 0.042008452 ubox
24 40 0.075882681 ubox
24 49 0.090459224 ubox
24 50 0.026692093 ubox
24 51 0.041139182 ubox
24 52 0.076557680 ubox
24 53 0.006674374 ubox
24 54 0.004734946 ubox
24 55 0.064389215 ubox
24 56 0.009739447 ubox
24 57 0.008429127 ubox
24 58 0.423844333 ubox
24 61 0.162135490 ubox
25 39 0.075852802 ubox
25 48 0.090671797 ubox
25 49 0.026524499 ubox
25 50 0.041142076 ubox
25 51 0.076332952 ubox
25 52 0.006956464 ubox
25 53 0.004165182 ubox
25 54 0.064377220 ubox
25 55 0.010926717 ubox
25 56 0.006156172 ubox
25 57 0.424095562 ubox
25 60 0.163098495 ubox
26 47 0.084806474 ubox
26 53 0.062401931 ubox
26 56 0.395376377 ubox
28 37 0.142700091 ubox
28 38 0.020052333 ubox
29 36 0.142875316 ubox
29 37 0.020461269 ubox
30 53 0.035701574 ubox
30 56 0.186329086 ubox
31 48 0.010862229 ubox
31 52 0.037948087 ubox
31 54 0.400104625 ubox
31 55 0.248803883 ubox
31 57 0.391540808 ubox
32 47 0.010568740 ubox
32 53 0.402602381 ubox
32 56 0.392778241 ubox
33 48 0.015067093 ubox
33 52 0.399676043 ubox
33 54 0.283745122 ubox
33 55 0.377673612 ubox
33 57 0.016538391 ubox
34 47 0.014743941 ubox
34 53 0.301929376 ubox
34 56 0.016483370 ubox
36 48 0.043910112 ubox
36 49 0.183822347 ubox
36 50 0.288213346 ubox
36 51 0.332008776 ubox
36 52 0.405553679 ubox
36 53 0.024796548 ubox
36 54 0.012052011 ubox
36 55 0.009570419 ubox
36 56 0.004582034 ubox
36 57 0.008693349 ubox
36 58 0.038084018 ubox
36 61 0.011412753 ubox
37 47 0.040212469 ubox
37 48 0.183828782 ubox
37 49 0.288834276 ubox
37 50 0.333081179 ubox
37 51 0.405731145 ubox
37 52 0.026323280 ubox
37 53 0.011425246 ubox
37 54 0.009563524 ubox
37 55 0.005414797 ubox
37 56 0.008734748 ubox
37 57 0.038118952 ubox
37 58 0.015862224 ubox
37 60 0.011499203 ubox
37 61 0.004284220 ubox
38 45 0.196686167 ubox
38 47 0.129648657 ubox
38 48 0.279574716 ubox
38 49 0.328605255 ubox
38 50 0.403206484 ubox
38 51 0.026175048 ubox
38 52 0.011885200 ubox
38 53 0.007027693 ubox
38 54 0.005332092 ubox
38 55 0.010848910 ubox
38 56 0.036259752 ubox
38 57 0.015958636 ubox
38 60 0.004546341 ubox
39 44 0.211600392 ubox
41 53 0.030476535 ubox
41 56 0.057269909 ubox
42 48 0.354737105 ubox
42 52 0.032569150 ubox
42 54 0.322713679 ubox
42 55 0.046771320 ubox
42 57 0.209479032 ubox
43 47 0.309106883 ubox
43 53 0.329868826 ubox
43 56 0.212672375 ubox
44 52 0.328487968 ubox
44 55 0.211268589 ubox
2 42 0.9500000 lbox
3 41 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
15 33 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
showpage
end
%%EOF
