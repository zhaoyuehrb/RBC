%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCUCGGCUGGGGCUGCGGGGGCGGCGACGGCGGGAGCGGCAGUGGCGGCGGCGGCGGGUCCGGAGGUGGCGGCAGGUGGCCCCGCGCGCGGCGGCCGGCCCGGCCGGGGGCGGGCGGGAAGGUGGCGCCUCGGGCGGGGGCCGGUCCCUGCACCAGGUGACCUGUUCCGGCCCGGAUCCGGGCGGCCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[-128.52522278 394.80999756]
[-143.98297119 403.65048218]
[-161.49800110 401.47113037]
[-171.22143555 412.89282227]
[-180.94485474 424.31451416]
[-190.66828918 435.73620605]
[-200.39170837 447.15789795]
[-203.29103088 465.33654785]
[-220.03172302 470.58343506]
[-229.57084656 482.15951538]
[-239.10995483 493.73559570]
[-248.64906311 505.31164551]
[-247.32133484 520.83178711]
[-257.16024780 532.43566895]
[-271.96453857 533.60583496]
[-281.50363159 545.18188477]
[-291.04275513 556.75799561]
[-300.58184814 568.33404541]
[-310.12097168 579.91009521]
[-312.28958130 596.16522217]
[-327.55227661 602.16369629]
[-340.20812988 591.73480225]
[-337.23785400 575.60693359]
[-321.69705200 570.37097168]
[-312.15792847 558.79492188]
[-302.61880493 547.21887207]
[-293.07971191 535.64276123]
[-283.54058838 524.06671143]
[-285.22198486 509.31176758]
[-275.71289062 497.43609619]
[-260.22512817 495.77255249]
[-250.68601990 484.19647217]
[-241.14691162 472.62039185]
[-231.60780334 461.04434204]
[-232.45520020 448.96969604]
[-224.59196472 439.24588013]
[-211.81340027 437.43444824]
[-202.08996582 426.01275635]
[-192.36654663 414.59109497]
[-182.64312744 403.16940308]
[-172.91969299 391.74771118]
[-177.49403381 380.48757935]
[-176.83810425 368.27917480]
[-171.01521301 357.44677734]
[-161.07824707 350.07888794]
[-148.87979126 347.62564087]
[-136.72680664 350.61367798]
[-126.64228821 339.50952148]
[-116.55777740 328.40533447]
[-106.47326660 317.30117798]
[-96.38874817 306.19699097]
[-94.21643066 299.12298584]
[-86.05251312 294.99731445]
[-75.79131317 284.05621338]
[-65.53012085 273.11511230]
[-62.46730042 258.53881836]
[-47.38323975 253.76579285]
[-37.12204361 242.82467651]
[-27.03753090 231.72050476]
[-17.13228989 220.45613098]
[-7.22704792 209.19175720]
[2.67819428 197.92738342]
[12.58343601 186.66299438]
[22.48867798 175.39862061]
[32.39392090 164.13424683]
[42.29916382 152.86987305]
[39.68282700 140.24566650]
[44.89665985 128.24195862]
[56.24104309 121.33460999]
[69.68711853 122.23924255]
[79.77163696 111.13507080]
[89.85614777 100.03089905]
[92.51785278 92.41101837]
[100.19239044 88.83123016]
[110.45358276 77.89011383]
[120.71477509 66.94900513]
[130.97596741 56.00789642]
[141.23716736 45.06678391]
[151.49835205 34.12567520]
[161.75955200 23.18456459]
[165.55632019 7.82568741]
[179.90643311 3.83525062]
[190.16763306 -7.10585976]
[200.42881775 -18.04697037]
[196.09696960 -32.71606445]
[199.66563416 -47.48635483]
[210.07907104 -58.41461182]
[224.46810913 -62.63499069]
[238.94018555 -59.11013031]
[249.20137024 -70.05123901]
[259.46258545 -80.99235535]
[263.05670166 -89.40383148]
[269.97698975 -92.02491760]
[280.41223145 -102.80016327]
[284.14071655 -111.15295410]
[291.10211182 -113.66278839]
[301.70874023 -124.26938629]
[312.31533813 -134.87599182]
[322.92193604 -145.48258972]
[333.52853394 -156.08918762]
[344.13513184 -166.69580078]
[354.74172974 -177.30239868]
[365.34832764 -187.90899658]
[375.95492554 -198.51559448]
[380.30026245 -216.40380859]
[397.40728760 -220.29365540]
[407.84252930 -231.06889343]
[418.27777100 -241.84413147]
[422.32022095 -257.14019775]
[436.73245239 -260.90011597]
[447.16769409 -271.67535400]
[457.60293579 -282.45059204]
[468.03817749 -293.22583008]
[478.47341919 -304.00106812]
[488.90866089 -314.77630615]
[492.96670532 -332.73187256]
[510.00918579 -336.89541626]
[520.27038574 -347.83651733]
[519.51336670 -363.62265015]
[530.20233154 -375.26409912]
[545.99560547 -375.85412598]
[557.52331543 -365.04275513]
[557.94641113 -349.24411011]
[547.01373291 -337.83129883]
[531.21148682 -337.57531738]
[520.95031738 -326.63421631]
[521.02233887 -314.53005981]
[512.55224609 -305.33004761]
[499.68389893 -304.34106445]
[489.24865723 -293.56582642]
[478.81341553 -282.79058838]
[468.37817383 -272.01535034]
[457.94293213 -261.24011230]
[447.50769043 -250.46487427]
[444.21163940 -235.93954468]
[429.05300903 -231.40890503]
[418.61776733 -220.63365173]
[408.18252563 -209.85841370]
[408.06057739 -197.75468445]
[399.44409180 -188.69158936]
[386.56155396 -187.90899658]
[375.95492554 -177.30239868]
[365.34832764 -166.69580078]
[354.74172974 -156.08918762]
[344.13513184 -145.48258972]
[333.52853394 -134.87599182]
[322.92193604 -124.26938629]
[312.31533813 -113.66278839]
[301.70874023 -103.05618286]
[291.18746948 -92.36492157]
[280.75222778 -81.58968353]
[270.40368652 -70.73115540]
[260.14248657 -59.79004669]
[249.88128662 -48.84893799]
[254.32614136 -34.63243484]
[251.03634644 -20.00256157]
[240.79772949 -8.91034889]
[226.28643799 -4.40268087]
[211.36993408 -7.78577662]
[201.10873413 3.15533400]
[190.84754944 14.09644413]
[187.78472900 28.67273903]
[172.70066833 33.44575882]
[162.43946838 44.38686752]
[152.17826843 55.32798004]
[141.91708374 66.26908875]
[131.65588379 77.21019745]
[121.39469147 88.15131378]
[111.13349915 99.09242249]
[100.96031952 110.11541748]
[90.87580872 121.21958160]
[80.79129028 132.32376099]
[81.95507050 149.77244568]
[70.37198639 162.41954041]
[53.56353760 162.77511597]
[43.65829849 174.03948975]
[33.75305557 185.30386353]
[23.84781265 196.56823730]
[13.94257069 207.83262634]
[4.03732872 219.09700012]
[-5.86791325 230.36137390]
[-15.77315521 241.62574768]
[-17.44887543 248.04211426]
[-21.50922203 252.04072571]
[-26.18093491 253.08587646]
[-36.44212723 264.02697754]
[-40.23889923 279.38586426]
[-54.58901215 283.37628174]
[-64.85020447 294.31741333]
[-75.11139679 305.25851440]
[-85.28457642 316.28152466]
[-95.36909485 327.38568115]
[-105.45360565 338.48983765]
[-115.53811646 349.59402466]
[-125.62263489 360.69818115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[7 37]
[9 34]
[10 33]
[11 32]
[12 31]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[47 195]
[48 194]
[49 193]
[50 192]
[51 191]
[53 190]
[54 189]
[55 188]
[57 186]
[58 185]
[59 182]
[60 181]
[61 180]
[62 179]
[63 178]
[64 177]
[65 176]
[66 175]
[70 172]
[71 171]
[72 170]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[80 163]
[82 161]
[83 160]
[84 159]
[89 154]
[90 153]
[91 152]
[93 151]
[94 150]
[96 149]
[97 148]
[98 147]
[99 146]
[100 145]
[101 144]
[102 143]
[103 142]
[104 141]
[106 138]
[107 137]
[108 136]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[117 126]
[118 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
