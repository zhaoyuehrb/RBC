%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGACCUCGAGAAACAGCGGACAAUUUCAGGAUUUAGGACUUUAGGUCUUGAUGGGUGGAUGGCGCGCUGCGGGCACCUCUCGGACAAGGCCCCAGCCGUCGCGGGUUGCCGGGCAGAGUCGGACGCCGCCAGCUCUUCACUCCACGCCCACCUCUCUCCUGGAGCGCUGGGCCUUCGCUGGCCGCACCGGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[34.92448807 293.82550049]
[20.94577980 288.38528442]
[9.15179062 279.11697388]
[0.56086612 266.82080078]
[-4.08521318 252.55847168]
[-4.38528395 237.56147766]
[-0.31343588 223.12471008]
[7.77874851 210.49472046]
[19.19255257 200.76203918]
[32.94245529 194.76702881]
[47.84122849 193.02732849]
[62.60244370 195.69314575]
[75.95154572 202.53430176]
[86.73591614 212.96011353]
[94.02497864 226.07194519]
[93.78578186 211.07385254]
[93.54658508 196.07575989]
[93.30738831 181.07766724]
[93.06819153 166.07957458]
[92.82899475 151.08148193]
[92.58979797 136.08338928]
[86.49417114 131.71379089]
[81.94983673 146.00886536]
[66.95013428 146.10417175]
[62.22451019 131.86801147]
[74.30292511 122.97460175]
[68.20729828 118.60501099]
[53.92673874 123.19474030]
[39.64618301 127.78446960]
[25.36562157 132.37420654]
[11.08506298 136.96392822]
[-3.19549561 141.55366516]
[-17.47605515 146.14340210]
[-31.75661278 150.73312378]
[-46.03717422 155.32286072]
[-60.31772995 159.91259766]
[-74.59828949 164.50231934]
[-85.20333099 177.01092529]
[-101.28807831 173.81517029]
[-106.30592346 158.20256042]
[-95.09494019 146.23402405]
[-79.18801880 150.22177124]
[-64.90746307 145.63203430]
[-50.62690353 141.04229736]
[-36.34634399 136.45257568]
[-22.06578636 131.86283875]
[-7.78522682 127.27310944]
[6.49533224 122.68337250]
[20.77589035 118.09364319]
[35.05644989 113.50391388]
[49.33700943 108.91418457]
[63.61756897 104.32444763]
[68.04971313 85.99569702]
[80.58029175 73.15736389]
[97.02676392 68.76419830]
[112.52377319 73.15441895]
[113.71854401 58.20207596]
[114.91331482 43.24973297]
[116.10808563 28.29739189]
[117.30285645 13.34504986]
[118.37836456 -1.61634326]
[119.33454895 -16.58583641]
[120.29072571 -31.55532837]
[108.51489258 -41.48688889]
[104.88745117 -56.27523041]
[110.59596252 -70.19920349]
[123.25730133 -77.99846649]
[124.21347809 -92.96796417]
[125.16966248 -107.93745422]
[126.12584686 -122.90694427]
[115.96313477 -134.71191406]
[117.14608002 -149.87948608]
[128.46293640 -159.49531555]
[129.41911316 -174.46481323]
[130.37530518 -189.43431091]
[123.77423096 -194.58602905]
[119.79789734 -201.84808350]
[119.03112030 -209.99748230]
[121.52516174 -217.69488525]
[126.80148315 -223.70471191]
[133.94145203 -227.09342957]
[135.84992981 -241.97152710]
[129.93132019 -256.64398193]
[139.22505188 -268.28338623]
[141.13352966 -283.16146851]
[143.04200745 -298.03958130]
[131.92320251 -308.70159912]
[129.24583435 -323.69110107]
[135.83032227 -337.22283936]
[148.96307373 -344.19915771]
[150.87155151 -359.07723999]
[152.78002930 -373.95535278]
[154.68850708 -388.83343506]
[156.35948181 -403.74008179]
[157.79254150 -418.67144775]
[159.22558594 -433.60284424]
[160.65864563 -448.53424072]
[162.09170532 -463.46563721]
[151.84307861 -475.49645996]
[153.18655396 -491.24356079]
[165.32508850 -501.36441040]
[181.05708313 -499.85452271]
[191.04904175 -487.60964966]
[189.37289429 -471.89450073]
[177.02308655 -462.03256226]
[175.59004211 -447.10116577]
[174.15698242 -432.16979980]
[172.72392273 -417.23840332]
[171.29086304 -402.30700684]
[173.59243774 -398.11032104]
[173.27407837 -392.42163086]
[169.56658936 -386.92495728]
[167.65812683 -372.04687500]
[165.74964905 -357.16876221]
[163.84117126 -342.29067993]
[174.78796387 -332.22558594]
[177.74392700 -317.47003174]
[171.36994934 -303.64160156]
[157.92010498 -296.13110352]
[156.01162720 -281.25299072]
[154.10314941 -266.37490845]
[160.15826416 -252.76663208]
[150.72802734 -240.06304932]
[148.81954956 -225.18495178]
[159.11335754 -206.15054321]
[145.34478760 -188.47811890]
[144.38861084 -173.50863647]
[143.43243408 -158.53913879]
[153.43386841 -147.56158447]
[152.67741394 -132.36677551]
[141.09533691 -121.95076752]
[140.13916016 -106.98126984]
[139.18296814 -92.01177979]
[138.22679138 -77.04228973]
[149.79292297 -67.69548035]
[153.68347168 -53.15837097]
[148.20396423 -38.95173645]
[135.26022339 -30.59914780]
[134.30403137 -15.62965488]
[133.34785461 -0.66016179]
[136.06202698 6.22343969]
[132.25520325 14.53982067]
[131.06042480 29.49216270]
[129.86566162 44.44450378]
[128.67088318 59.39684677]
[127.47611237 74.34918976]
[135.31869507 87.13566589]
[149.18829346 92.84828186]
[163.05790710 98.56089783]
[176.92752075 104.27350616]
[190.79711914 109.98612213]
[203.98419189 102.02324677]
[219.15415955 103.33683014]
[230.50752258 113.21433258]
[233.82785034 127.70962524]
[247.69744873 133.42224121]
[261.56707764 139.13485718]
[275.43667603 144.84747314]
[292.38485718 145.28897095]
[296.65234375 161.69705200]
[282.06686401 170.33996582]
[269.72406006 158.71707153]
[255.85444641 153.00445557]
[241.98483276 147.29183960]
[228.11523438 141.57923889]
[215.54928589 149.53128052]
[200.53276062 148.54754639]
[188.83816528 138.79615784]
[185.08450317 123.85573578]
[171.21490479 118.14311981]
[157.34529114 112.43050385]
[143.47567749 106.71788788]
[129.60607910 101.00527191]
[125.38114166 121.29435730]
[107.58789062 135.84419250]
[107.82708740 150.84228516]
[108.06628418 165.84037781]
[108.30548096 180.83847046]
[108.54467773 195.83656311]
[108.78387451 210.83465576]
[109.02307129 225.83274841]
[111.52303314 240.62295532]
[116.22648621 254.86647034]
[120.92993927 269.10998535]
[125.63338470 283.35348511]
[136.34136963 296.49789429]
[126.67491150 310.42614746]
[110.61504364 304.99316406]
[111.38987732 288.05694580]
[106.68642426 273.81341553]
[101.98297882 259.56991577]
[97.27952576 245.32640076]
[94.70534515 260.10388184]
[87.94714355 273.49517822]
[77.58844757 284.34402466]
[64.52368927 291.71368408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[27 52]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[61 140]
[62 139]
[63 138]
[67 134]
[68 133]
[69 132]
[70 131]
[73 128]
[74 127]
[75 126]
[81 124]
[82 123]
[84 121]
[85 120]
[86 119]
[90 115]
[91 114]
[92 113]
[93 112]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[147 173]
[148 172]
[149 171]
[150 170]
[151 169]
[155 165]
[156 164]
[157 163]
[158 162]
[182 192]
[183 191]
[184 190]
[185 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
