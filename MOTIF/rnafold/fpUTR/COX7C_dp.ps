%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:47:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COX7C)
} def

/sequence { (\
CAAGGUCGUGAAAAAAAAGGUCUUGGUGAGGUGCCGCCAUUUCAUCUGUCCUCAUUCUCUGCGCCUUUCGCAGAGCUUCCAGCAGCGGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.040730151 ubox
1 25 0.285099455 ubox
2 9 0.037403472 ubox
2 24 0.289261054 ubox
2 56 0.005484595 ubox
2 67 0.764936332 ubox
2 68 0.062280614 ubox
2 78 0.033367289 ubox
3 23 0.290236281 ubox
3 24 0.014843552 ubox
3 47 0.006585628 ubox
3 52 0.140002043 ubox
3 55 0.003581958 ubox
3 58 0.011867473 ubox
3 66 0.863050231 ubox
3 67 0.072041893 ubox
3 68 0.004068607 ubox
3 77 0.037577051 ubox
3 78 0.024095941 ubox
4 22 0.290445922 ubox
4 23 0.016612880 ubox
4 46 0.007067408 ubox
4 47 0.004258297 ubox
4 50 0.004120863 ubox
4 51 0.148297765 ubox
4 53 0.005349335 ubox
4 56 0.003676336 ubox
4 57 0.017838378 ubox
4 58 0.010734631 ubox
4 65 0.875103025 ubox
4 66 0.069867851 ubox
4 76 0.037937542 ubox
4 77 0.028224452 ubox
4 79 0.006076011 ubox
4 80 0.066486114 ubox
5 21 0.275388325 ubox
5 22 0.017251817 ubox
5 45 0.004965692 ubox
5 46 0.004852323 ubox
5 49 0.003909425 ubox
5 50 0.148247377 ubox
5 55 0.003436942 ubox
5 56 0.016106451 ubox
5 57 0.016145614 ubox
5 64 0.875080616 ubox
5 65 0.070332637 ubox
5 76 0.028643362 ubox
5 78 0.004730102 ubox
5 79 0.066275622 ubox
5 83 0.026717127 ubox
5 86 0.089188587 ubox
5 89 0.055625616 ubox
6 20 0.274363462 ubox
6 44 0.003287285 ubox
6 48 0.015931074 ubox
6 63 0.251736822 ubox
6 74 0.018959771 ubox
6 75 0.017121202 ubox
6 82 0.026005894 ubox
6 85 0.088260197 ubox
6 88 0.186402237 ubox
7 19 0.288348179 ubox
7 25 0.003449636 ubox
7 48 0.132866253 ubox
7 61 0.107657357 ubox
7 63 0.840236200 ubox
7 73 0.018868170 ubox
7 87 0.249345758 ubox
8 24 0.003498212 ubox
8 45 0.129547367 ubox
8 47 0.077636569 ubox
8 55 0.072421720 ubox
8 60 0.101556714 ubox
8 62 0.859349060 ubox
8 64 0.006544821 ubox
8 71 0.018413366 ubox
8 76 0.049502252 ubox
8 83 0.086132798 ubox
8 86 0.249478698 ubox
9 20 0.003313294 ubox
9 44 0.152975636 ubox
9 54 0.076622635 ubox
9 61 0.840847888 ubox
9 63 0.007074502 ubox
9 70 0.018475439 ubox
9 75 0.026473019 ubox
9 81 0.041223016 ubox
9 82 0.078263794 ubox
9 84 0.079360509 ubox
9 85 0.226978036 ubox
9 87 0.008370754 ubox
10 22 0.012950967 ubox
10 43 0.155349455 ubox
10 46 0.024315625 ubox
10 53 0.079073171 ubox
10 56 0.008945097 ubox
10 57 0.181232209 ubox
10 59 0.569927791 ubox
10 60 0.426498299 ubox
10 62 0.009621651 ubox
10 69 0.018493740 ubox
10 78 0.010834401 ubox
10 79 0.107551665 ubox
10 80 0.048232844 ubox
10 83 0.096880339 ubox
10 86 0.010798963 ubox
11 21 0.012360389 ubox
11 42 0.154759811 ubox
11 45 0.023849857 ubox
11 52 0.063212336 ubox
11 55 0.009117583 ubox
11 56 0.180158516 ubox
11 58 0.561338736 ubox
11 68 0.018054391 ubox
11 77 0.010772724 ubox
11 78 0.107604236 ubox
12 40 0.003616738 ubox
12 41 0.152412802 ubox
12 42 0.011959225 ubox
12 55 0.165632501 ubox
12 56 0.088753664 ubox
12 67 0.015779847 ubox
12 77 0.096915790 ubox
12 78 0.022369929 ubox
13 24 0.006162001 ubox
13 40 0.144648247 ubox
13 41 0.016004703 ubox
13 42 0.006667207 ubox
13 55 0.085930743 ubox
13 56 0.309968662 ubox
13 66 0.012671037 ubox
13 77 0.022199501 ubox
13 78 0.022196813 ubox
14 23 0.006832793 ubox
14 24 0.004654358 ubox
14 40 0.018071732 ubox
14 41 0.008709660 ubox
14 42 0.015728611 ubox
14 55 0.299220905 ubox
14 56 0.415286558 ubox
14 77 0.021346723 ubox
14 78 0.021971216 ubox
15 23 0.004886036 ubox
15 24 0.007831920 ubox
15 40 0.010013454 ubox
15 41 0.016081023 ubox
15 42 0.011842731 ubox
15 55 0.441376710 ubox
15 56 0.110802896 ubox
15 77 0.021232473 ubox
15 78 0.028303310 ubox
16 23 0.007974028 ubox
16 24 0.006011744 ubox
16 40 0.015612237 ubox
16 41 0.014637964 ubox
16 42 0.005459330 ubox
16 55 0.109344001 ubox
16 56 0.053008458 ubox
16 68 0.004696179 ubox
16 77 0.027526736 ubox
16 78 0.034473899 ubox
17 23 0.006263902 ubox
17 24 0.007023773 ubox
17 40 0.015774417 ubox
17 41 0.006853501 ubox
17 55 0.052748866 ubox
17 56 0.014300437 ubox
17 67 0.009804462 ubox
17 77 0.033535776 ubox
17 78 0.026048937 ubox
18 23 0.006811356 ubox
18 24 0.003704620 ubox
18 40 0.007740519 ubox
18 47 0.025517532 ubox
18 52 0.906193139 ubox
18 55 0.008771752 ubox
18 60 0.003688876 ubox
18 66 0.013031893 ubox
18 77 0.026984655 ubox
18 78 0.010023234 ubox
19 35 0.112590364 ubox
19 38 0.033228358 ubox
19 43 0.008065738 ubox
19 46 0.026163995 ubox
19 47 0.003273641 ubox
19 50 0.016141117 ubox
19 51 0.939446844 ubox
19 52 0.033598100 ubox
19 53 0.016288437 ubox
19 59 0.003680682 ubox
19 60 0.004227069 ubox
19 65 0.013950022 ubox
19 76 0.026346894 ubox
19 77 0.011410264 ubox
19 80 0.006197786 ubox
20 34 0.112620445 ubox
20 37 0.033268059 ubox
20 40 0.004297352 ubox
20 42 0.007363264 ubox
20 45 0.026002827 ubox
20 46 0.003238597 ubox
20 49 0.015402178 ubox
20 50 0.939072942 ubox
20 51 0.036100180 ubox
20 52 0.013128363 ubox
20 59 0.004269768 ubox
20 64 0.013946923 ubox
20 76 0.011568669 ubox
20 79 0.006150747 ubox
20 86 0.004027930 ubox
21 29 0.004266078 ubox
21 31 0.009535068 ubox
21 33 0.108798470 ubox
21 36 0.030649607 ubox
21 39 0.003326369 ubox
21 44 0.025236558 ubox
21 48 0.096584707 ubox
21 63 0.013632108 ubox
21 74 0.005728009 ubox
21 75 0.006536531 ubox
21 85 0.003592766 ubox
22 28 0.005889027 ubox
22 30 0.023662639 ubox
22 31 0.108536409 ubox
22 73 0.005484716 ubox
23 29 0.023706774 ubox
23 30 0.108258354 ubox
23 31 0.014046425 ubox
23 72 0.004862689 ubox
24 28 0.021393739 ubox
24 29 0.105127919 ubox
24 30 0.013949308 ubox
24 36 0.012791540 ubox
24 39 0.109109834 ubox
24 44 0.003356292 ubox
24 48 0.051072938 ubox
24 70 0.003173638 ubox
25 35 0.033081180 ubox
25 38 0.111103316 ubox
25 43 0.003429656 ubox
25 46 0.939554475 ubox
25 47 0.045511607 ubox
25 51 0.004014142 ubox
25 56 0.015609735 ubox
25 57 0.006180949 ubox
25 59 0.005312492 ubox
25 69 0.003243949 ubox
26 34 0.033108842 ubox
26 37 0.111256413 ubox
26 42 0.003305467 ubox
26 45 0.976621794 ubox
26 46 0.047345178 ubox
26 50 0.004233492 ubox
26 55 0.075001156 ubox
26 56 0.005573354 ubox
26 86 0.003905447 ubox
27 33 0.032600852 ubox
27 36 0.111205602 ubox
27 44 0.981281476 ubox
27 54 0.078406503 ubox
28 32 0.015139413 ubox
28 35 0.110561189 ubox
28 43 0.982555009 ubox
28 53 0.079420061 ubox
28 67 0.004551711 ubox
29 40 0.003996066 ubox
29 41 0.004615329 ubox
29 42 0.981899752 ubox
29 47 0.004366633 ubox
29 52 0.079409254 ubox
29 66 0.004964109 ubox
30 38 0.061668560 ubox
30 41 0.976642026 ubox
30 46 0.004528166 ubox
30 51 0.079411799 ubox
30 65 0.005241870 ubox
31 37 0.062061592 ubox
31 40 0.979299509 ubox
31 45 0.004716380 ubox
31 50 0.079292940 ubox
31 64 0.005246601 ubox
32 36 0.058065874 ubox
32 39 0.979557571 ubox
32 44 0.007580463 ubox
32 48 0.010367428 ubox
32 63 0.005242730 ubox
33 38 0.968283233 ubox
33 43 0.007562880 ubox
33 47 0.007488616 ubox
33 49 0.045988104 ubox
33 62 0.005243126 ubox
33 89 0.039893130 ubox
34 48 0.046815556 ubox
34 61 0.005189289 ubox
34 88 0.043114026 ubox
35 48 0.019591818 ubox
35 87 0.043143018 ubox
36 47 0.016493825 ubox
36 49 0.014409916 ubox
36 86 0.043123487 ubox
37 48 0.014023226 ubox
37 85 0.039606907 ubox
38 48 0.007733847 ubox
39 45 0.008010947 ubox
39 47 0.008357633 ubox
39 49 0.004485421 ubox
40 44 0.007489879 ubox
40 48 0.004548290 ubox
42 88 0.006689113 ubox
43 87 0.009103970 ubox
44 89 0.007746021 ubox
45 88 0.008521329 ubox
46 82 0.016161968 ubox
46 85 0.233496003 ubox
46 87 0.011018353 ubox
46 88 0.134503393 ubox
47 54 0.028510994 ubox
47 81 0.016517178 ubox
47 84 0.242329225 ubox
47 87 0.136829495 ubox
48 53 0.031688571 ubox
48 55 0.004068464 ubox
48 76 0.003333148 ubox
48 80 0.016516356 ubox
48 83 0.243496228 ubox
48 86 0.138232179 ubox
49 54 0.004049647 ubox
49 82 0.236816084 ubox
49 85 0.135595050 ubox
49 88 0.003956150 ubox
50 87 0.005301927 ubox
50 88 0.013320063 ubox
51 82 0.112420454 ubox
51 85 0.006237470 ubox
51 87 0.013405157 ubox
52 81 0.109941921 ubox
52 84 0.006385981 ubox
52 88 0.004553869 ubox
53 61 0.004857865 ubox
53 87 0.009707383 ubox
54 60 0.004891127 ubox
54 89 0.005321423 ubox
55 82 0.007054112 ubox
55 85 0.006401207 ubox
55 88 0.005602880 ubox
56 74 0.004326829 ubox
56 81 0.009220177 ubox
56 84 0.006860414 ubox
56 87 0.005387746 ubox
56 88 0.007980829 ubox
57 73 0.003997160 ubox
57 75 0.422504203 ubox
57 87 0.010843366 ubox
57 88 0.003567236 ubox
58 74 0.472767415 ubox
59 73 0.477951558 ubox
59 85 0.005690501 ubox
59 88 0.004365649 ubox
60 72 0.477909841 ubox
60 84 0.005711801 ubox
60 87 0.004420337 ubox
61 71 0.478044114 ubox
61 83 0.005715044 ubox
61 86 0.004471169 ubox
62 70 0.478024616 ubox
62 82 0.005713026 ubox
62 85 0.004469020 ubox
63 69 0.463564338 ubox
63 76 0.003889689 ubox
63 83 0.003940608 ubox
64 75 0.003738235 ubox
64 82 0.003918686 ubox
65 73 0.003368858 ubox
66 72 0.003231482 ubox
67 88 0.014501868 ubox
68 74 0.008604067 ubox
68 87 0.006082431 ubox
68 88 0.638807720 ubox
69 73 0.008941890 ubox
69 87 0.871101858 ubox
70 76 0.012671772 ubox
70 83 0.013918783 ubox
70 86 0.875245230 ubox
70 89 0.021263134 ubox
71 75 0.012596238 ubox
71 82 0.013936722 ubox
71 85 0.874855064 ubox
71 88 0.022683455 ubox
73 79 0.015218246 ubox
74 78 0.013270041 ubox
75 83 0.887977547 ubox
75 86 0.126488775 ubox
75 89 0.007313413 ubox
76 82 0.889325281 ubox
76 85 0.130837880 ubox
76 88 0.014661622 ubox
77 81 0.801195475 ubox
77 84 0.123682390 ubox
77 85 0.004093652 ubox
77 87 0.013878096 ubox
77 88 0.003809929 ubox
78 84 0.007899416 ubox
78 87 0.004707281 ubox
78 88 0.010357470 ubox
79 87 0.014089231 ubox
79 88 0.164639989 ubox
80 87 0.165952452 ubox
82 89 0.035855848 ubox
83 88 0.038330392 ubox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
7 63 0.9500000 lbox
8 62 0.9500000 lbox
9 61 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
32 39 0.9500000 lbox
33 38 0.9500000 lbox
68 88 0.9500000 lbox
69 87 0.9500000 lbox
70 86 0.9500000 lbox
71 85 0.9500000 lbox
75 83 0.9500000 lbox
76 82 0.9500000 lbox
77 81 0.9500000 lbox
showpage
end
%%EOF
