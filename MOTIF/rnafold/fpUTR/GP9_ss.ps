%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCUGUAUCCCAUAGAGUUGCCACCCAGGCCUCAGCCAGGACCUUUCAGGCCAGACAGGAGCACCUGACCAAAGGCUUCACAGCCGCCCUCACCGCCCGGCCUUCUACGGUGUCCAGAGACAGUUAGCCAGGCCUGGGCUGGGCACACUCCACCUUCCCUAGUCACCAGCUGGUUUCCCAGAGGAGAAGGCUGAGACCCGAGAAGGGAGCCAGCCUGUCCC\
) } def
/len { sequence length } bind def

/coor [
[56.56342316 366.00906372]
[51.98850250 380.29437256]
[47.41358185 394.57968140]
[42.83866119 408.86499023]
[38.26374054 423.15029907]
[41.42340851 438.65280151]
[30.17300987 448.41381836]
[25.59808731 462.69912720]
[21.02316666 476.98443604]
[21.95057106 493.91299438]
[5.94031286 499.49044800]
[-3.85125184 485.64987183]
[6.73785639 472.40951538]
[11.31277752 458.12420654]
[15.88769817 443.83889771]
[12.40080070 429.35818481]
[23.97842979 418.57537842]
[28.55335045 404.29006958]
[33.12827301 390.00476074]
[37.70319366 375.71945190]
[42.27811432 361.43414307]
[31.38256645 351.24822998]
[25.96773911 337.28439331]
[27.15756989 322.29287720]
[34.76945877 309.25143433]
[47.33988953 300.77374268]
[62.40554428 298.58572388]
[66.98046112 284.30041504]
[71.55538177 270.01510620]
[76.13031006 255.72978210]
[80.70523071 241.44447327]
[83.54085541 226.71493530]
[84.59656525 211.75213623]
[85.65228271 196.78933716]
[86.70800018 181.82652283]
[87.76371765 166.86372375]
[88.81943512 151.90092468]
[89.87514496 136.93812561]
[60.44895935 121.68750000]
[50.40736771 84.65239716]
[35.91392899 88.51766968]
[28.43636513 93.74837494]
[21.18906975 92.33377075]
[6.64262152 95.99448395]
[-7.90382671 99.65520477]
[-21.78844070 109.38422394]
[-34.98089218 98.73548889]
[-28.40034485 83.11074066]
[-11.56454182 85.10875702]
[2.98190665 81.44803619]
[17.52835464 77.78732300]
[32.04865646 74.02423859]
[46.54209137 70.15896606]
[46.27799988 62.66361237]
[33.03156662 55.62571335]
[45.74981308 47.67291641]
[45.48572159 40.17756653]
[30.75618553 37.34194183]
[16.02664948 34.50631714]
[1.29711342 31.67069244]
[-14.01343155 37.54600143]
[-26.58483315 27.01548004]
[-23.48471069 10.91202450]
[-7.90220547 5.80149078]
[4.13273811 16.94115639]
[18.86227417 19.77678108]
[33.59180832 22.61240578]
[48.32134628 25.44803047]
[51.54143524 18.67447853]
[37.99432755 12.23430061]
[24.44732666 5.79389858]
[30.88795471 -7.75299501]
[44.43450546 -1.31280696]
[57.98161316 5.12737036]
[61.20170212 -1.64618325]
[49.70349121 -11.27900124]
[38.20528030 -20.91181946]
[26.70707321 -30.54463768]
[10.47009468 -32.84519577]
[4.59577274 -48.15612030]
[15.12710571 -60.72684097]
[31.23036194 -57.62568283]
[36.33988953 -42.04284668]
[47.83810043 -32.41003036]
[59.33630753 -22.77721024]
[70.83451843 -13.14439297]
[84.80130005 -18.61513901]
[86.69806671 -33.49473190]
[88.59483337 -48.37432480]
[90.49160767 -63.25391769]
[84.26250458 -68.78192902]
[80.76026154 -76.23446655]
[80.48632812 -84.37043762]
[83.41117859 -91.86677551]
[88.99110413 -97.53357697]
[96.26758575 -100.50289917]
[98.99938965 -115.25203705]
[101.73119354 -130.00119019]
[104.46298981 -144.75033569]
[107.09083557 -159.51835632]
[109.61458588 -174.30451965]
[112.13834381 -189.09068298]
[114.66209412 -203.87684631]
[117.18584442 -218.66300964]
[110.39609528 -235.78402710]
[122.13075256 -248.83758545]
[124.44595337 -263.65783691]
[126.76116180 -278.47808838]
[117.62442780 -288.36715698]
[115.87418365 -301.52044678]
[121.92700195 -313.10971069]
[133.37606812 -319.01034546]
[135.89982605 -333.79650879]
[138.42356873 -348.58267212]
[140.94732666 -363.36883545]
[134.74981689 -378.55181885]
[145.01234436 -391.34292603]
[161.17771912 -388.58377075]
[166.61637878 -373.11273193]
[155.73348999 -360.84509277]
[153.20974731 -346.05892944]
[150.68598938 -331.27276611]
[148.16223145 -316.48660278]
[158.46171570 -303.18652344]
[155.90058899 -286.21905518]
[141.58140564 -276.16287231]
[139.26620483 -261.34262085]
[136.95100403 -246.52238464]
[143.82429504 -236.57493591]
[142.02273560 -224.21379089]
[131.97201538 -216.13925171]
[129.44825745 -201.35308838]
[126.92450714 -186.56692505]
[124.40074921 -171.78076172]
[121.87699890 -156.99459839]
[123.84834290 -149.87854004]
[119.21213531 -142.01852417]
[116.48033142 -127.26938629]
[113.74853516 -112.52024078]
[111.01673126 -97.77109528]
[120.19513702 -78.16716766]
[105.37120056 -61.35714722]
[103.47442627 -46.47755432]
[101.57765961 -31.59796333]
[99.68089294 -16.71837044]
[104.65734863 -11.10723495]
[113.45558167 -23.25594711]
[122.25380707 -35.40465546]
[131.05203247 -47.55336761]
[137.46391296 -61.11389542]
[150.83062744 -67.92057800]
[165.56880188 -65.13020325]
[175.52218628 -53.90834427]
[176.53315735 -38.94245148]
[168.17944336 -26.48390388]
[153.94854736 -21.73674965]
[140.83578491 -14.45282173]
[127.72303009 -7.16889381]
[114.61027527 0.11503473]
[119.58673096 5.72616959]
[134.58636475 5.62051153]
[149.58598328 5.51485348]
[164.58561707 5.40919542]
[179.58525085 5.30353737]
[191.82774353 -5.06472349]
[207.53851318 -1.81642509]
[214.66558838 12.55661583]
[207.74169922 27.02863312]
[192.07824707 30.49793243]
[179.69090271 20.30316544]
[164.69126892 20.40882301]
[149.69165039 20.51448059]
[134.69201660 20.62014008]
[119.69239044 20.72579765]
[116.75308228 35.43499374]
[130.56019592 41.29704285]
[144.36730957 47.15908813]
[158.17442322 53.02113724]
[171.98153687 58.88318634]
[188.18385315 56.34993744]
[198.26684570 69.28304291]
[191.85800171 84.37803650]
[175.55020142 86.10648346]
[166.11949158 72.69029999]
[152.31237793 66.82825470]
[138.50526428 60.96620178]
[124.69815063 55.10415649]
[110.89103699 49.24210739]
[145.06645203 101.90993500]
[104.83795166 137.99383545]
[103.78223419 152.95663452]
[102.72651672 167.91944885]
[101.67079926 182.88224792]
[100.61508942 197.84504700]
[99.55937195 212.80784607]
[98.50365448 227.77066040]
[116.77568054 223.78645325]
[137.43046570 234.21345520]
[145.44287109 246.89419556]
[153.45527649 259.57495117]
[168.72563171 264.49389648]
[174.26571655 279.55004883]
[165.82568359 293.19354248]
[149.87998962 294.95831299]
[138.66081238 283.49053955]
[140.77453613 267.58734131]
[132.76213074 254.90660095]
[124.74972534 242.22586060]
[117.30992889 243.17424011]
[123.71173859 256.73953247]
[112.78853607 267.01977539]
[99.63607025 259.80780029]
[102.43033600 245.07101440]
[94.99053955 246.01939392]
[90.41561890 260.30471802]
[85.84069824 274.59002686]
[81.26577759 288.87533569]
[76.69085693 303.16064453]
[87.68255615 313.69363403]
[92.98942566 327.89657593]
[91.60906219 342.93368530]
[83.86857605 355.82733154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[4 18]
[5 17]
[7 15]
[8 14]
[9 13]
[27 218]
[28 217]
[29 216]
[30 215]
[31 214]
[32 196]
[33 195]
[34 194]
[35 193]
[36 192]
[37 191]
[38 190]
[40 53]
[41 52]
[43 51]
[44 50]
[45 49]
[57 68]
[58 67]
[59 66]
[60 65]
[75 86]
[76 85]
[77 84]
[78 83]
[87 145]
[88 144]
[89 143]
[90 142]
[96 140]
[97 139]
[98 138]
[99 137]
[100 135]
[101 134]
[102 133]
[103 132]
[104 131]
[106 128]
[107 127]
[108 126]
[112 123]
[113 122]
[114 121]
[115 120]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
[198 208]
[199 207]
[200 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
