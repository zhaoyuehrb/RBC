%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SYT7)
} def

/sequence { (\
GCGGCCGCGGGCGGCUCUGAGGAGCCCGGAGGGAACCGGCGACGAGGGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.098424966 ubox
1 12 0.170507693 ubox
1 15 0.407917507 ubox
1 25 0.020162643 ubox
1 40 0.393819147 ubox
2 7 0.099129606 ubox
2 9 0.050414727 ubox
2 11 0.170513242 ubox
2 13 0.039480768 ubox
2 14 0.442539230 ubox
2 19 0.016963509 ubox
2 24 0.020243564 ubox
2 28 0.048378195 ubox
2 38 0.375154523 ubox
2 39 0.300783009 ubox
2 41 0.095947246 ubox
2 44 0.324341245 ubox
3 8 0.052956741 ubox
3 12 0.034661904 ubox
3 16 0.162704530 ubox
3 17 0.028541836 ubox
3 18 0.008268588 ubox
3 26 0.003876862 ubox
3 27 0.048468493 ubox
3 37 0.455572376 ubox
3 40 0.074239364 ubox
3 43 0.327171826 ubox
3 52 0.211527511 ubox
4 12 0.588094632 ubox
4 15 0.196377407 ubox
4 16 0.003267211 ubox
4 17 0.004385864 ubox
4 25 0.004111786 ubox
4 26 0.010259385 ubox
4 36 0.455217823 ubox
4 40 0.290036121 ubox
4 51 0.212827157 ubox
5 11 0.589265426 ubox
5 14 0.203522532 ubox
5 22 0.022739437 ubox
5 24 0.003727087 ubox
5 29 0.070180916 ubox
5 32 0.433756686 ubox
5 33 0.242133504 ubox
5 39 0.297159924 ubox
5 47 0.239263496 ubox
5 48 0.125480533 ubox
5 49 0.176382182 ubox
6 10 0.584985315 ubox
6 13 0.203611333 ubox
6 21 0.022839562 ubox
6 28 0.068997288 ubox
6 31 0.435915086 ubox
6 32 0.241257999 ubox
6 38 0.296897787 ubox
6 41 0.310703802 ubox
6 44 0.016608715 ubox
6 46 0.239640471 ubox
6 47 0.127124736 ubox
6 48 0.174296851 ubox
7 12 0.198444667 ubox
7 15 0.011358916 ubox
7 27 0.062680245 ubox
7 37 0.288921850 ubox
7 40 0.313827781 ubox
7 43 0.018620204 ubox
8 14 0.011496705 ubox
8 19 0.023661045 ubox
8 28 0.597080327 ubox
8 38 0.076234764 ubox
8 39 0.305615004 ubox
8 41 0.016476934 ubox
8 44 0.300331448 ubox
9 17 0.003228533 ubox
9 18 0.023782399 ubox
9 26 0.008397166 ubox
9 27 0.604729503 ubox
9 37 0.106526401 ubox
9 40 0.016081423 ubox
9 43 0.300934133 ubox
9 52 0.028234517 ubox
10 16 0.003207184 ubox
10 17 0.023771892 ubox
10 25 0.006253654 ubox
10 26 0.603884809 ubox
10 27 0.026751453 ubox
10 36 0.107235231 ubox
10 37 0.280323755 ubox
10 51 0.028471602 ubox
10 52 0.019769206 ubox
11 15 0.004548049 ubox
11 16 0.016649270 ubox
11 25 0.602810123 ubox
11 26 0.019092652 ubox
11 36 0.279940550 ubox
11 40 0.294848679 ubox
11 51 0.019967128 ubox
12 24 0.601742210 ubox
12 28 0.137682332 ubox
12 38 0.039248613 ubox
12 39 0.294019405 ubox
12 41 0.060043242 ubox
12 44 0.018283926 ubox
13 18 0.003446723 ubox
13 26 0.425784785 ubox
13 27 0.113686310 ubox
13 37 0.045165665 ubox
13 40 0.056509569 ubox
13 43 0.017571448 ubox
13 52 0.351392641 ubox
14 25 0.447690504 ubox
14 26 0.080453667 ubox
14 36 0.044917042 ubox
14 40 0.025272346 ubox
14 51 0.354252716 ubox
15 21 0.496696511 ubox
15 22 0.234549545 ubox
15 24 0.456330210 ubox
15 31 0.220966267 ubox
15 32 0.019828087 ubox
15 33 0.067219232 ubox
15 39 0.026379828 ubox
15 46 0.024097502 ubox
15 47 0.006081501 ubox
15 48 0.127980506 ubox
15 49 0.387368725 ubox
16 20 0.447800579 ubox
16 21 0.216206374 ubox
16 22 0.030365653 ubox
16 23 0.460978765 ubox
16 30 0.226244325 ubox
16 31 0.008483663 ubox
16 32 0.067746168 ubox
16 33 0.006166073 ubox
16 34 0.018012147 ubox
16 38 0.025338325 ubox
16 39 0.004292422 ubox
16 42 0.052745293 ubox
16 45 0.037493504 ubox
16 46 0.005595359 ubox
16 47 0.201251301 ubox
16 48 0.448999285 ubox
16 49 0.142217356 ubox
16 50 0.133923665 ubox
17 21 0.044033608 ubox
17 22 0.459294608 ubox
17 24 0.015170437 ubox
17 29 0.227084848 ubox
17 31 0.069326125 ubox
17 32 0.007753935 ubox
17 33 0.018298271 ubox
17 38 0.009143885 ubox
17 39 0.011554387 ubox
17 41 0.058525021 ubox
17 44 0.038867272 ubox
17 46 0.236651121 ubox
17 47 0.484402425 ubox
17 48 0.181216164 ubox
17 49 0.148339666 ubox
18 23 0.017529936 ubox
18 28 0.226411514 ubox
18 30 0.068552246 ubox
18 31 0.007890993 ubox
18 32 0.018089467 ubox
18 38 0.011153217 ubox
18 41 0.037517993 ubox
18 44 0.032822969 ubox
18 45 0.234596267 ubox
18 46 0.480970555 ubox
18 47 0.179912105 ubox
18 48 0.146710958 ubox
19 27 0.222992676 ubox
19 37 0.005132356 ubox
19 40 0.050248573 ubox
19 43 0.058639425 ubox
21 27 0.080893652 ubox
21 37 0.113138853 ubox
21 52 0.059062300 ubox
22 26 0.080443369 ubox
22 36 0.113357477 ubox
22 51 0.059544395 ubox
24 40 0.578718242 ubox
25 32 0.005137088 ubox
25 33 0.115833326 ubox
25 39 0.473207011 ubox
25 47 0.008982871 ubox
25 48 0.059049325 ubox
25 49 0.012185652 ubox
26 31 0.005432339 ubox
26 32 0.116373369 ubox
26 33 0.067270434 ubox
26 38 0.335541414 ubox
26 39 0.370096372 ubox
26 46 0.008791481 ubox
26 47 0.058260455 ubox
26 48 0.012095037 ubox
27 31 0.116199060 ubox
27 32 0.098021093 ubox
27 38 0.606225507 ubox
27 41 0.049783176 ubox
27 44 0.011842840 ubox
27 46 0.056572736 ubox
27 47 0.011864249 ubox
28 37 0.694973531 ubox
28 40 0.053644686 ubox
28 43 0.015581701 ubox
28 52 0.011276894 ubox
29 36 0.692886299 ubox
29 51 0.011377336 ubox
31 37 0.086839255 ubox
31 52 0.191782581 ubox
32 36 0.086104107 ubox
32 51 0.193407852 ubox
32 52 0.134475340 ubox
33 51 0.150566481 ubox
36 47 0.245001055 ubox
36 48 0.176295482 ubox
36 49 0.048966037 ubox
37 44 0.084323122 ubox
37 46 0.245354602 ubox
37 47 0.175232917 ubox
37 48 0.049013734 ubox
38 43 0.096742099 ubox
38 52 0.016126755 ubox
39 51 0.017716938 ubox
46 52 0.143657809 ubox
47 51 0.142599398 ubox
5 47 0.9500000 lbox
6 46 0.9500000 lbox
8 44 0.9500000 lbox
9 43 0.9500000 lbox
11 40 0.9500000 lbox
12 39 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
showpage
end
%%EOF
