%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGGCAGCGGCUCGGGGACUGGGCGAGGGCCCUGGGCCUGAGGAGGCGCGGCCGCCACUGCGCCCAGCGCCUGCGCGACGCCUGGCUGCUGGGCCCCGGGGCAGUUCAGCCCGCGCCGCUCCUGCGGGUCGGACUGGGGCUGUGGCGGGAGAGAAGAUGCCGCAGCCCGAGUCCCAGAAGGCGGCGAUCCUGGGCUGCGGGCAAGGCGGAAAUUGACAAUGGCCCUUCAGCUAUGCUAGGUCUAUA\
) } def
/len { sequence length } bind def

/coor [
[220.60026550 34.29515839]
[207.93534851 42.33256149]
[195.27043152 50.36996078]
[188.67028809 63.72239304]
[172.87257385 64.58407593]
[160.20764160 72.62148285]
[147.54272461 80.65888214]
[134.87780762 88.69628143]
[130.92439270 94.91804504]
[122.00286102 96.75395203]
[109.23793793 104.63156891]
[98.04882050 114.62174988]
[88.78092957 126.41607666]
[79.51303864 138.21040344]
[70.24514008 150.00473022]
[60.97724533 161.79905701]
[51.70935440 173.59338379]
[42.44145966 185.38771057]
[33.17356491 197.18203735]
[23.90567017 208.97636414]
[21.46285057 224.60783386]
[7.51543379 229.83457947]
[-1.75246036 241.62890625]
[0.37839794 257.28887939]
[-9.25450516 269.81817627]
[-24.93614006 271.78332520]
[-37.36286926 262.01849365]
[-39.16213608 246.31697083]
[-29.26646614 233.99417114]
[-13.54678726 232.36100769]
[-4.27889252 220.56668091]
[-2.49897504 205.77880859]
[12.11134338 199.70846558]
[21.37923813 187.91413879]
[30.64713287 176.11981201]
[39.91502762 164.32548523]
[49.18292236 152.53115845]
[58.45081329 140.73683167]
[67.71871185 128.94250488]
[76.98660278 117.14817810]
[86.25449371 105.35385132]
[82.55904388 98.82747650]
[69.50628662 106.21838379]
[56.45340729 113.60907745]
[49.06293106 100.55607605]
[62.11537552 93.16562653]
[75.16812897 85.77471924]
[71.47267914 79.24833679]
[56.59095764 81.12834167]
[41.70923615 83.00833893]
[26.82751465 84.88833618]
[11.94579506 86.76833344]
[-2.93592548 88.64833069]
[-17.81764603 90.52832794]
[-27.30494881 103.16821289]
[-42.96279907 105.31468201]
[-55.50166702 95.69427490]
[-57.48247147 80.01460266]
[-47.73003006 67.57814789]
[-32.03029633 65.76322937]
[-19.69764519 75.64661407]
[-4.81592417 73.76660919]
[10.06579685 71.88661194]
[24.94751740 70.00661469]
[39.82923889 68.12661743]
[54.71095657 66.24662018]
[69.59268188 64.36662292]
[86.27825165 68.91596985]
[97.36790466 79.05256653]
[101.36032104 91.86665344]
[114.12523651 83.98903656]
[126.84040833 76.03136444]
[139.50532532 67.99396515]
[152.17024231 59.95656204]
[164.83515930 51.91915894]
[172.34118652 37.99183655]
[187.23303223 37.70504379]
[199.89794922 29.66764259]
[212.56286621 21.63023949]
[212.97280884 2.46806026]
[224.77984619 -12.43824005]
[243.04731750 -17.14934158]
[260.31274414 -9.92864990]
[272.66571045 -18.43768501]
[285.01870728 -26.94671822]
[297.37170410 -35.45575333]
[309.72470093 -43.96478653]
[322.07766724 -52.47381973]
[334.43066406 -60.98285675]
[359.99963379 -84.08089447]
[368.96823120 -96.10439301]
[377.93679810 -108.12789917]
[386.90536499 -120.15140533]
[384.82919312 -135.58926392]
[394.09588623 -147.65504456]
[408.82632446 -149.53921509]
[417.79489136 -161.56271362]
[426.76345825 -173.58621216]
[435.73205566 -185.60972595]
[436.08609009 -189.88009644]
[437.61431885 -193.46463013]
[439.96130371 -196.08073425]
[442.71664429 -197.58862305]
[445.46575928 -197.99682617]
[455.02709961 -209.55453491]
[464.58847046 -221.11222839]
[474.14984131 -232.66993713]
[483.71118164 -244.22763062]
[493.27255249 -255.78532410]
[502.83389282 -267.34301758]
[512.39526367 -278.90072632]
[521.95660400 -290.45843506]
[517.54705811 -303.50262451]
[520.13171387 -316.91708374]
[528.93176270 -327.22451782]
[541.57165527 -331.80688477]
[554.71936035 -329.56973267]
[564.42523193 -341.00637817]
[574.13104248 -352.44302368]
[583.83691406 -363.87966919]
[593.54272461 -375.31628418]
[603.24853516 -386.75292969]
[612.95440674 -398.18957520]
[615.84448242 -416.38735962]
[632.60528564 -421.62387085]
[642.16662598 -433.18157959]
[651.72802734 -444.73925781]
[636.73626709 -444.24081421]
[625.70379639 -454.40368652]
[624.97241211 -469.38583374]
[634.96258545 -480.57495117]
[649.93157959 -481.53909302]
[661.27459717 -471.72399902]
[662.47125244 -456.77182007]
[672.87603760 -467.57644653]
[683.28082275 -478.38110352]
[693.68560791 -489.18572998]
[704.09045410 -499.99035645]
[708.08972168 -515.29772949]
[722.49127197 -519.09832764]
[732.89605713 -529.90295410]
[743.30090332 -540.70758057]
[753.70568848 -551.51220703]
[764.11047363 -562.31683350]
[774.51525879 -573.12152100]
[784.92010498 -583.92614746]
[795.32489014 -594.73077393]
[805.72967529 -605.53540039]
[816.13446045 -616.34002686]
[826.53930664 -627.14465332]
[822.20812988 -641.88024902]
[825.84063721 -656.80340576]
[836.45965576 -667.89990234]
[851.20874023 -672.18481445]
[866.12042236 -668.50555420]
[877.18359375 -657.85180664]
[881.42224121 -643.08935547]
[877.69628906 -628.18927002]
[867.00787354 -617.15960693]
[852.23223877 -612.96722412]
[837.34393311 -616.73986816]
[826.93914795 -605.93524170]
[816.53430176 -595.13061523]
[806.12951660 -584.32598877]
[795.72473145 -573.52130127]
[785.31994629 -562.71667480]
[774.91510010 -551.91204834]
[764.51031494 -541.10742188]
[754.10552979 -530.30279541]
[743.70074463 -519.49816895]
[733.29589844 -508.69351196]
[730.04083252 -494.15893555]
[714.89508057 -489.58557129]
[704.49029541 -478.78091431]
[694.08544922 -467.97628784]
[683.68066406 -457.17166138]
[673.27587891 -446.36703491]
[663.28570557 -435.17791748]
[653.72436523 -423.62020874]
[644.16296387 -412.06250000]
[644.99218750 -400.01034546]
[637.14300537 -390.30627441]
[624.39105225 -388.48373413]
[614.68518066 -377.04708862]
[604.97937012 -365.61047363]
[595.27349854 -354.17382812]
[585.56768799 -342.73718262]
[575.86181641 -331.30053711]
[566.15600586 -319.86392212]
[570.54504395 -304.03372192]
[564.56506348 -288.55496216]
[550.39178467 -279.60971069]
[533.51434326 -280.89706421]
[523.95294189 -269.33935547]
[514.39160156 -257.78167725]
[504.83023071 -246.22396851]
[495.26889038 -234.66627502]
[485.70751953 -223.10856628]
[476.14617920 -211.55087280]
[466.58480835 -199.99317932]
[457.02343750 -188.43547058]
[447.75555420 -176.64114380]
[438.78698730 -164.61764526]
[429.81838989 -152.59413147]
[420.84982300 -140.57063293]
[423.24227905 -125.91417694]
[414.31814575 -113.59287262]
[398.92886353 -111.18283081]
[389.96029663 -99.15932465]
[380.99172974 -87.13581848]
[372.02316284 -75.11231995]
[381.63308716 -86.62964630]
[395.59829712 -92.10443878]
[410.47518921 -90.18672180]
[422.59548950 -81.34937286]
[428.97052002 -67.77148438]
[428.02835083 -52.80110550]
[420.00131226 -40.12961578]
[406.86871338 -32.88154984]
[391.86874390 -32.84413147]
[378.70013428 -40.02658844]
[370.61035156 -52.65671539]
[378.00128174 -39.60395813]
[385.39218140 -26.55120277]
[392.78308105 -13.49844646]
[400.17401123 -0.44569024]
[415.46994019 3.53043461]
[423.40213013 17.19997025]
[419.26449585 32.45302200]
[405.51187134 40.24023056]
[390.30340576 35.94157410]
[382.66204834 22.10737801]
[387.12124634 6.94521999]
[379.73034668 -6.10753632]
[372.33941650 -19.16029358]
[364.94851685 -32.21305084]
[357.55761719 -45.26580429]
[342.93969727 -48.62986755]
[330.58670044 -40.12083435]
[318.23373413 -31.61179924]
[305.88073730 -23.10276413]
[293.52774048 -14.59372997]
[281.17474365 -6.08469582]
[268.82177734 2.42433858]
[270.64941406 13.38614559]
[268.25509644 24.29072380]
[261.94561768 33.56322098]
[252.59593201 39.85000610]
[241.52803040 42.21621323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[5 75]
[6 74]
[7 73]
[8 72]
[10 71]
[11 70]
[12 41]
[13 40]
[14 39]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[20 33]
[22 31]
[23 30]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[83 244]
[84 243]
[85 242]
[86 241]
[87 240]
[88 239]
[89 238]
[90 211]
[91 210]
[92 209]
[93 208]
[96 205]
[97 204]
[98 203]
[99 202]
[104 201]
[105 200]
[106 199]
[107 198]
[108 197]
[109 196]
[110 195]
[111 194]
[112 193]
[117 189]
[118 188]
[119 187]
[120 186]
[121 185]
[122 184]
[123 183]
[125 180]
[126 179]
[127 178]
[134 177]
[135 176]
[136 175]
[137 174]
[138 173]
[140 171]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[149 162]
[150 161]
[222 237]
[223 236]
[224 235]
[225 234]
[226 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
