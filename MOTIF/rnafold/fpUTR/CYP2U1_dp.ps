%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYP2U1)
} def

/sequence { (\
GACACUGGCGCCGCGGGUCAGGCAGCUGCGUGCGCGUCUCCUCCAGGCAGCAAGGGGAACCCGAGGCCGCCGGCGCCCGGACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.007458398 ubox
1 38 0.021984487 ubox
1 40 0.009259367 ubox
1 43 0.003352355 ubox
2 18 0.007466153 ubox
2 37 0.022017165 ubox
2 39 0.009193910 ubox
2 42 0.003353563 ubox
3 17 0.007453287 ubox
3 36 0.021988756 ubox
4 37 0.006737543 ubox
5 16 0.008538694 ubox
5 36 0.006887937 ubox
5 73 0.329572211 ubox
5 80 0.810999953 ubox
6 15 0.008771783 ubox
6 69 0.005394733 ubox
6 72 0.331387400 ubox
6 79 0.810403466 ubox
7 14 0.008824364 ubox
7 38 0.036589138 ubox
7 68 0.007315433 ubox
7 71 0.333411434 ubox
7 77 0.665076996 ubox
7 78 0.664467206 ubox
8 14 0.005008897 ubox
8 35 0.037243305 ubox
8 37 0.036895394 ubox
8 67 0.007000507 ubox
8 70 0.333468814 ubox
8 76 0.814982108 ubox
8 77 0.470570399 ubox
9 13 0.005088208 ubox
9 34 0.037354376 ubox
9 36 0.037044600 ubox
9 66 0.006719053 ubox
9 69 0.333421791 ubox
9 75 0.940366527 ubox
10 33 0.037399174 ubox
10 35 0.037046773 ubox
10 67 0.236024843 ubox
10 68 0.235747404 ubox
10 74 0.940469173 ubox
10 76 0.033300988 ubox
11 32 0.037377302 ubox
11 34 0.026756670 ubox
11 66 0.333630313 ubox
11 73 0.940479313 ubox
11 75 0.023634525 ubox
12 30 0.037452740 ubox
12 32 0.007572289 ubox
12 34 0.026838040 ubox
12 36 0.005574179 ubox
12 65 0.332876812 ubox
12 72 0.940314265 ubox
12 75 0.024631586 ubox
13 23 0.003624794 ubox
13 29 0.038640132 ubox
13 31 0.008009053 ubox
13 33 0.058807417 ubox
13 35 0.024419196 ubox
13 37 0.141400319 ubox
13 67 0.004326528 ubox
13 70 0.330653338 ubox
13 71 0.862709512 ubox
13 74 0.034027626 ubox
14 22 0.003638496 ubox
14 28 0.038651275 ubox
14 30 0.008285021 ubox
14 32 0.058955149 ubox
14 34 0.024444360 ubox
14 36 0.147963753 ubox
14 63 0.340742906 ubox
14 66 0.004336507 ubox
14 69 0.467309790 ubox
14 73 0.034020101 ubox
15 27 0.038148938 ubox
15 29 0.008178957 ubox
15 31 0.058814598 ubox
15 33 0.024260091 ubox
15 35 0.148301018 ubox
15 40 0.005682689 ubox
15 41 0.012192780 ubox
15 42 0.025362175 ubox
15 43 0.015504310 ubox
15 44 0.053937547 ubox
15 62 0.342107664 ubox
15 68 0.426743514 ubox
15 71 0.004611806 ubox
16 26 0.037685544 ubox
16 27 0.007511326 ubox
16 39 0.005744117 ubox
16 40 0.012185155 ubox
16 41 0.028122742 ubox
16 42 0.014015658 ubox
16 43 0.053939899 ubox
16 44 0.026959949 ubox
16 61 0.342166200 ubox
16 67 0.382061046 ubox
16 68 0.816053433 ubox
16 70 0.004416540 ubox
16 71 0.041863501 ubox
16 83 0.007806203 ubox
17 23 0.058236777 ubox
17 26 0.010194404 ubox
17 29 0.068720968 ubox
17 31 0.013602633 ubox
17 33 0.159839992 ubox
17 35 0.036409479 ubox
17 38 0.007035560 ubox
17 39 0.008130911 ubox
17 40 0.028134130 ubox
17 41 0.017174139 ubox
17 42 0.046844820 ubox
17 43 0.026962851 ubox
17 48 0.019840001 ubox
17 60 0.342155465 ubox
17 67 0.837557996 ubox
17 70 0.043545253 ubox
17 82 0.008983408 ubox
18 22 0.054543209 ubox
18 25 0.011386996 ubox
18 28 0.013660487 ubox
18 30 0.008212305 ubox
18 32 0.036556901 ubox
18 34 0.036146817 ubox
18 47 0.019852494 ubox
18 56 0.008918855 ubox
18 57 0.018484386 ubox
18 58 0.225981370 ubox
18 59 0.253338149 ubox
18 64 0.246933496 ubox
18 66 0.857673000 ubox
18 69 0.041808980 ubox
18 81 0.009010930 ubox
19 28 0.075725701 ubox
19 32 0.169280365 ubox
19 46 0.019792422 ubox
19 54 0.005498313 ubox
19 55 0.018181764 ubox
19 56 0.039698592 ubox
19 57 0.319658181 ubox
19 63 0.249688961 ubox
19 65 0.855057674 ubox
19 80 0.009016975 ubox
20 27 0.079778921 ubox
20 31 0.179679186 ubox
20 39 0.072166039 ubox
20 42 0.041063460 ubox
21 26 0.080222549 ubox
21 27 0.003799788 ubox
21 38 0.080690687 ubox
21 41 0.044564996 ubox
21 42 0.003654429 ubox
21 44 0.010677822 ubox
21 61 0.113580555 ubox
21 62 0.362381200 ubox
21 68 0.045071252 ubox
21 77 0.011621198 ubox
22 26 0.004222654 ubox
22 29 0.199642983 ubox
22 31 0.009815358 ubox
22 33 0.137183299 ubox
22 35 0.076474621 ubox
22 37 0.080828567 ubox
22 40 0.044592095 ubox
22 41 0.003902512 ubox
22 43 0.010681180 ubox
22 51 0.012414133 ubox
22 60 0.112756265 ubox
22 61 0.345784506 ubox
22 67 0.045414401 ubox
22 76 0.011675518 ubox
23 28 0.199421639 ubox
23 30 0.010802330 ubox
23 32 0.137456525 ubox
23 34 0.076700343 ubox
23 36 0.081303559 ubox
23 50 0.011843619 ubox
23 66 0.045520541 ubox
23 75 0.011665880 ubox
24 31 0.133522255 ubox
24 39 0.045084188 ubox
24 42 0.005125244 ubox
25 31 0.012544157 ubox
25 33 0.118157217 ubox
25 35 0.032390043 ubox
25 37 0.014448098 ubox
25 38 0.045916219 ubox
25 41 0.005107532 ubox
25 48 0.008691023 ubox
25 51 0.894360822 ubox
25 74 0.011880910 ubox
26 30 0.019497416 ubox
26 32 0.118192543 ubox
26 34 0.032304206 ubox
26 36 0.017530595 ubox
26 47 0.008638501 ubox
26 50 0.895363367 ubox
26 54 0.023281481 ubox
26 55 0.033709778 ubox
26 56 0.081843479 ubox
26 57 0.315806232 ubox
26 73 0.011885713 ubox
27 34 0.003679944 ubox
27 36 0.049678247 ubox
27 46 0.008243428 ubox
27 49 0.895193263 ubox
27 52 0.028650283 ubox
27 53 0.018467744 ubox
27 54 0.031849543 ubox
27 55 0.077989980 ubox
27 56 0.314047665 ubox
27 72 0.011803737 ubox
28 33 0.011433455 ubox
28 35 0.060178265 ubox
28 37 0.014017039 ubox
28 48 0.895394321 ubox
28 51 0.036648433 ubox
28 71 0.011534694 ubox
29 34 0.060118885 ubox
29 36 0.015880121 ubox
29 47 0.895238439 ubox
29 50 0.036619525 ubox
29 69 0.003706455 ubox
30 35 0.016073467 ubox
30 51 0.008258267 ubox
30 68 0.003702174 ubox
30 70 0.011365958 ubox
30 71 0.006866957 ubox
31 45 0.883699495 ubox
31 49 0.036449958 ubox
31 50 0.006915767 ubox
31 52 0.338132783 ubox
31 69 0.011364289 ubox
32 44 0.879495923 ubox
32 48 0.038121404 ubox
32 51 0.346202350 ubox
32 62 0.003275245 ubox
32 67 0.003785398 ubox
32 68 0.011353365 ubox
32 70 0.011567698 ubox
33 47 0.038108542 ubox
33 50 0.346159208 ubox
33 63 0.043766869 ubox
33 66 0.004567728 ubox
33 69 0.011779142 ubox
34 48 0.089793118 ubox
34 51 0.151540946 ubox
34 62 0.048293795 ubox
34 67 0.015090748 ubox
34 68 0.011888737 ubox
34 70 0.017293514 ubox
35 47 0.089985373 ubox
35 50 0.151642745 ubox
35 63 0.023224105 ubox
35 66 0.016902197 ubox
35 69 0.017358979 ubox
36 48 0.369317714 ubox
36 51 0.024457115 ubox
36 60 0.066928476 ubox
36 62 0.023977936 ubox
36 67 0.019091724 ubox
36 68 0.013109847 ubox
36 82 0.023601353 ubox
37 47 0.369521918 ubox
37 50 0.019135598 ubox
37 58 0.083369820 ubox
37 59 0.054095952 ubox
37 64 0.017505265 ubox
37 66 0.023148800 ubox
37 81 0.023646189 ubox
38 46 0.370086729 ubox
38 47 0.021381386 ubox
38 50 0.017926352 ubox
38 57 0.096308733 ubox
38 63 0.017625989 ubox
38 65 0.024046506 ubox
38 80 0.023637693 ubox
39 45 0.354925201 ubox
39 46 0.020311415 ubox
39 47 0.004793017 ubox
39 49 0.018294780 ubox
39 56 0.096249553 ubox
39 57 0.005415493 ubox
39 58 0.064479808 ubox
39 64 0.024041597 ubox
39 79 0.022531485 ubox
39 81 0.013753055 ubox
40 46 0.008572738 ubox
40 47 0.037038492 ubox
40 55 0.096480246 ubox
40 56 0.007652580 ubox
40 57 0.070629191 ubox
40 63 0.024014478 ubox
40 66 0.017869301 ubox
40 79 0.003593410 ubox
40 80 0.014868366 ubox
41 46 0.037337479 ubox
41 47 0.004753907 ubox
41 50 0.004640161 ubox
41 54 0.096469299 ubox
41 55 0.007652181 ubox
41 56 0.070553595 ubox
41 57 0.042790530 ubox
41 65 0.018102733 ubox
41 79 0.014852509 ubox
42 46 0.004420366 ubox
42 49 0.004658123 ubox
42 53 0.092490966 ubox
42 54 0.007125931 ubox
42 55 0.053942224 ubox
42 56 0.043112030 ubox
42 57 0.003213947 ubox
42 58 0.007233967 ubox
42 64 0.018130029 ubox
42 81 0.036618336 ubox
43 54 0.053404225 ubox
43 55 0.062932367 ubox
43 56 0.005123010 ubox
43 57 0.007872300 ubox
43 63 0.018116135 ubox
43 73 0.025317928 ubox
43 80 0.039579705 ubox
44 54 0.063027691 ubox
44 55 0.005159894 ubox
44 56 0.007860039 ubox
44 72 0.025589116 ubox
44 79 0.039561943 ubox
46 61 0.007418894 ubox
46 62 0.003802033 ubox
46 68 0.030298686 ubox
46 71 0.170026648 ubox
46 77 0.039475292 ubox
47 60 0.007409127 ubox
47 61 0.003660077 ubox
47 67 0.030540611 ubox
47 70 0.170879608 ubox
47 76 0.039503346 ubox
48 66 0.030555195 ubox
48 69 0.170735549 ubox
48 75 0.039388376 ubox
50 67 0.171300932 ubox
50 74 0.038711521 ubox
51 66 0.171596828 ubox
51 73 0.038689476 ubox
54 61 0.265991351 ubox
54 62 0.790165461 ubox
54 68 0.003790843 ubox
54 71 0.037309025 ubox
55 60 0.272018703 ubox
55 61 0.791050249 ubox
55 62 0.186948302 ubox
55 67 0.003782760 ubox
55 68 0.006008378 ubox
55 70 0.037285690 ubox
55 71 0.005056016 ubox
56 60 0.778322763 ubox
56 61 0.186607811 ubox
56 62 0.063958808 ubox
56 67 0.006028902 ubox
56 68 0.036958872 ubox
56 70 0.005095619 ubox
57 61 0.063061428 ubox
57 67 0.036842628 ubox
60 66 0.038175825 ubox
61 65 0.038118217 ubox
61 80 0.017545196 ubox
62 79 0.017598119 ubox
63 68 0.004317442 ubox
63 78 0.017590446 ubox
65 71 0.012254508 ubox
65 77 0.017323077 ubox
66 70 0.012248639 ubox
66 74 0.008375804 ubox
66 76 0.017295092 ubox
67 73 0.008444468 ubox
67 75 0.015932159 ubox
68 72 0.008446865 ubox
68 75 0.006640037 ubox
69 74 0.009150055 ubox
70 80 0.015575027 ubox
71 79 0.016531487 ubox
72 78 0.023978342 ubox
72 83 0.014011879 ubox
73 77 0.023626923 ubox
73 82 0.014294286 ubox
7 77 0.9500000 lbox
8 76 0.9500000 lbox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
11 73 0.9500000 lbox
12 72 0.9500000 lbox
13 71 0.9500000 lbox
16 68 0.9500000 lbox
17 67 0.9500000 lbox
18 66 0.9500000 lbox
19 65 0.9500000 lbox
25 51 0.9500000 lbox
26 50 0.9500000 lbox
27 49 0.9500000 lbox
28 48 0.9500000 lbox
29 47 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
54 62 0.9500000 lbox
55 61 0.9500000 lbox
56 60 0.9500000 lbox
showpage
end
%%EOF
