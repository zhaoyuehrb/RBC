%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (F10)
} def

/sequence { (\
GACUUUGCUCCAGCAGCCUGUCCCAGUGAGGACAGGGACACAGUACUCGGCCACACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.043744306 ubox
1 22 0.013544534 ubox
1 48 0.269138603 ubox
2 9 0.041101113 ubox
2 21 0.013624628 ubox
2 44 0.241869371 ubox
2 47 0.263251188 ubox
3 13 0.023609596 ubox
3 16 0.069227325 ubox
3 20 0.013637682 ubox
3 37 0.015579499 ubox
3 43 0.251637194 ubox
3 50 0.122435919 ubox
4 12 0.022741907 ubox
4 13 0.006404057 ubox
4 15 0.051605606 ubox
4 16 0.032252269 ubox
4 36 0.003704691 ubox
4 37 0.004912374 ubox
4 38 0.008370680 ubox
4 42 0.241114825 ubox
4 43 0.009856128 ubox
4 49 0.120353354 ubox
4 50 0.011787785 ubox
5 12 0.007249082 ubox
5 13 0.037259731 ubox
5 15 0.037619410 ubox
5 16 0.507412915 ubox
5 37 0.008472739 ubox
5 38 0.007258123 ubox
5 42 0.010783747 ubox
5 43 0.018681064 ubox
5 49 0.014209887 ubox
5 50 0.012553072 ubox
6 12 0.043677859 ubox
6 15 0.814781580 ubox
6 37 0.006035035 ubox
6 40 0.182291526 ubox
6 42 0.022121683 ubox
6 45 0.331123142 ubox
6 49 0.014903051 ubox
6 53 0.079186559 ubox
6 55 0.042641898 ubox
7 11 0.044045406 ubox
7 14 0.857910816 ubox
7 17 0.066076625 ubox
7 39 0.183467477 ubox
7 41 0.022732957 ubox
7 44 0.349709342 ubox
7 48 0.015888944 ubox
7 51 0.189963362 ubox
7 52 0.082931371 ubox
7 54 0.047398977 ubox
8 13 0.855233008 ubox
8 16 0.069914992 ubox
8 37 0.037693023 ubox
8 43 0.350764152 ubox
8 50 0.192775268 ubox
9 15 0.067142781 ubox
9 36 0.010681138 ubox
9 37 0.016707707 ubox
9 38 0.172464627 ubox
9 42 0.338216933 ubox
9 49 0.159256893 ubox
9 50 0.050864534 ubox
10 35 0.005656216 ubox
10 36 0.011093073 ubox
10 37 0.173336228 ubox
10 49 0.113737773 ubox
10 50 0.105248734 ubox
11 35 0.009720855 ubox
11 36 0.122669231 ubox
11 49 0.106544855 ubox
12 19 0.004337729 ubox
12 47 0.175419515 ubox
13 18 0.004994276 ubox
13 44 0.088739775 ubox
13 46 0.177657960 ubox
13 51 0.048455925 ubox
14 43 0.091304988 ubox
14 50 0.048527922 ubox
15 47 0.023411632 ubox
16 44 0.144793755 ubox
16 46 0.025336243 ubox
16 51 0.556015869 ubox
17 31 0.004284444 ubox
17 36 0.762503430 ubox
17 37 0.043832499 ubox
17 43 0.148382798 ubox
17 50 0.559006812 ubox
18 30 0.004285855 ubox
18 35 0.775133835 ubox
18 36 0.033287880 ubox
18 43 0.047195047 ubox
18 49 0.558647527 ubox
18 50 0.004858877 ubox
19 29 0.004240235 ubox
19 34 0.776419584 ubox
19 35 0.016485973 ubox
19 40 0.613963992 ubox
19 42 0.042675300 ubox
19 45 0.009151896 ubox
19 49 0.004083035 ubox
20 33 0.776915926 ubox
20 39 0.628354583 ubox
20 41 0.033299817 ubox
20 46 0.007178563 ubox
20 48 0.005379994 ubox
21 32 0.776830264 ubox
21 38 0.628897412 ubox
21 40 0.021039672 ubox
21 45 0.004664476 ubox
22 31 0.775801082 ubox
22 37 0.629393016 ubox
23 30 0.773134268 ubox
23 31 0.041850863 ubox
23 36 0.629393347 ubox
24 30 0.059050197 ubox
24 35 0.628334425 ubox
26 33 0.615535626 ubox
26 56 0.013530029 ubox
27 32 0.611696151 ubox
27 34 0.058454814 ubox
27 55 0.013571557 ubox
28 33 0.062747443 ubox
28 54 0.013551207 ubox
30 52 0.013608764 ubox
31 51 0.013607800 ubox
35 47 0.007365400 ubox
35 48 0.038373658 ubox
35 52 0.004134107 ubox
36 46 0.010011037 ubox
36 47 0.040049974 ubox
36 48 0.007686527 ubox
36 51 0.004655785 ubox
36 52 0.020829806 ubox
36 57 0.007855354 ubox
37 46 0.063961539 ubox
37 47 0.008163917 ubox
37 48 0.199920894 ubox
37 51 0.024525205 ubox
37 56 0.017067604 ubox
38 44 0.085457409 ubox
38 47 0.196763050 ubox
39 43 0.087237021 ubox
43 51 0.145312767 ubox
43 54 0.156621218 ubox
43 56 0.047604480 ubox
44 50 0.143906784 ubox
44 53 0.155278878 ubox
44 55 0.046059503 ubox
49 57 0.306531838 ubox
50 56 0.307928430 ubox
6 15 0.9500000 lbox
7 14 0.9500000 lbox
8 13 0.9500000 lbox
16 51 0.9500000 lbox
17 50 0.9500000 lbox
18 49 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
showpage
end
%%EOF
