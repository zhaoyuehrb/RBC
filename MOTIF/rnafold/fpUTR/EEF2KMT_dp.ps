%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (EEF2KMT)
} def

/sequence { (\
ACUGCCCUGGGCCCGCCCCCUCUUCAGUCCAGGCCGGGCUUCCGCCCGGUCUGCCGGCAACGCUGCGGCCCCGCCCACGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 28 0.243763602 ubox
1 80 0.127564951 ubox
2 27 0.280798404 ubox
2 57 0.006729870 ubox
2 68 0.005585004 ubox
2 79 0.146101967 ubox
3 26 0.285372743 ubox
3 56 0.006739262 ubox
3 59 0.380885138 ubox
3 67 0.005620933 ubox
3 73 0.016553260 ubox
3 77 0.155072802 ubox
3 79 0.098615239 ubox
4 8 0.004144615 ubox
4 12 0.034497395 ubox
4 25 0.285128200 ubox
4 28 0.003242227 ubox
4 34 0.003342502 ubox
4 55 0.006440479 ubox
4 58 0.411603500 ubox
4 63 0.005270993 ubox
4 66 0.006354970 ubox
4 69 0.010405430 ubox
4 72 0.022561344 ubox
4 74 0.399868546 ubox
4 76 0.162466879 ubox
4 78 0.133721049 ubox
4 80 0.308200586 ubox
5 11 0.034619659 ubox
5 27 0.003410716 ubox
5 57 0.410985961 ubox
5 62 0.005269480 ubox
5 65 0.006333712 ubox
5 68 0.010390490 ubox
5 73 0.401037930 ubox
5 79 0.323144673 ubox
6 10 0.034370855 ubox
6 33 0.015577208 ubox
6 56 0.409375620 ubox
6 57 0.024429631 ubox
6 67 0.010314272 ubox
7 27 0.077882070 ubox
7 32 0.049131635 ubox
7 56 0.033878869 ubox
7 57 0.003433103 ubox
8 26 0.078276416 ubox
8 31 0.054529951 ubox
8 56 0.004587418 ubox
8 73 0.187175758 ubox
8 77 0.623121299 ubox
8 79 0.007872841 ubox
9 14 0.004231199 ubox
9 17 0.038240215 ubox
9 18 0.253881409 ubox
9 19 0.180575798 ubox
9 20 0.386346310 ubox
9 21 0.029707810 ubox
9 22 0.026684853 ubox
9 23 0.004475240 ubox
9 25 0.064055844 ubox
9 30 0.062792767 ubox
9 55 0.020595351 ubox
9 71 0.448843177 ubox
9 72 0.257514478 ubox
9 76 0.685590346 ubox
9 78 0.003490260 ubox
10 16 0.038430839 ubox
10 17 0.255352552 ubox
10 18 0.181529206 ubox
10 19 0.387026154 ubox
10 20 0.036252993 ubox
10 21 0.026479553 ubox
10 22 0.006606467 ubox
10 23 0.010011974 ubox
10 24 0.051997673 ubox
10 29 0.063649770 ubox
10 54 0.020006329 ubox
10 55 0.029452358 ubox
10 64 0.005455997 ubox
10 70 0.449962316 ubox
10 71 0.256548761 ubox
10 72 0.003551358 ubox
10 75 0.685733976 ubox
11 16 0.254121117 ubox
11 17 0.180698412 ubox
11 18 0.383983340 ubox
11 19 0.036125124 ubox
11 20 0.027170017 ubox
11 21 0.005083239 ubox
11 22 0.013866520 ubox
11 23 0.041164248 ubox
11 28 0.063646149 ubox
11 54 0.029535438 ubox
11 58 0.009314477 ubox
11 63 0.005611698 ubox
11 69 0.450594314 ubox
11 70 0.255122120 ubox
11 71 0.003533378 ubox
11 74 0.685728500 ubox
12 27 0.063569577 ubox
12 53 0.026219658 ubox
12 57 0.009251071 ubox
12 62 0.005633025 ubox
12 68 0.383755166 ubox
12 73 0.684840063 ubox
13 56 0.009183998 ubox
13 57 0.008749080 ubox
13 67 0.301316021 ubox
13 68 0.553605219 ubox
14 56 0.015125818 ubox
14 62 0.018306127 ubox
14 65 0.114386283 ubox
14 67 0.602662184 ubox
14 73 0.006237216 ubox
15 28 0.030609808 ubox
15 54 0.009951609 ubox
15 55 0.014967918 ubox
15 58 0.054991691 ubox
15 61 0.016940177 ubox
15 63 0.120933800 ubox
15 64 0.041144873 ubox
15 66 0.647370046 ubox
15 69 0.514586240 ubox
15 72 0.014145824 ubox
16 27 0.031980555 ubox
16 53 0.009068559 ubox
16 57 0.055305878 ubox
16 62 0.122512463 ubox
16 65 0.644253665 ubox
16 68 0.514347691 ubox
17 56 0.055207360 ubox
17 57 0.049496021 ubox
17 67 0.512126905 ubox
17 68 0.066944542 ubox
18 56 0.049764130 ubox
18 57 0.036936776 ubox
18 67 0.074472274 ubox
18 68 0.026628689 ubox
19 33 0.004007592 ubox
19 56 0.037488980 ubox
19 57 0.050479868 ubox
19 67 0.027007640 ubox
19 68 0.016477205 ubox
20 27 0.170692969 ubox
20 32 0.004306651 ubox
20 56 0.050877549 ubox
20 57 0.019095457 ubox
20 67 0.016778543 ubox
20 68 0.003654130 ubox
21 26 0.158677908 ubox
21 31 0.004174002 ubox
21 56 0.017825984 ubox
21 57 0.018363692 ubox
21 67 0.003798391 ubox
22 56 0.021990734 ubox
22 57 0.057347617 ubox
22 67 0.003300373 ubox
22 68 0.004850159 ubox
23 56 0.055702608 ubox
23 57 0.021078937 ubox
23 60 0.173440915 ubox
23 67 0.005687648 ubox
24 56 0.021938978 ubox
24 57 0.242275830 ubox
24 59 0.161404542 ubox
25 53 0.010708437 ubox
25 56 0.275590013 ubox
25 65 0.093877294 ubox
26 52 0.009693606 ubox
26 64 0.117193878 ubox
27 51 0.008439660 ubox
27 54 0.248652500 ubox
27 58 0.585840751 ubox
27 61 0.024956376 ubox
27 63 0.115981380 ubox
27 66 0.005473565 ubox
28 53 0.134629084 ubox
28 57 0.586911346 ubox
28 60 0.023483413 ubox
28 62 0.109339253 ubox
28 65 0.004779859 ubox
29 49 0.003226534 ubox
29 56 0.575692757 ubox
29 57 0.074343373 ubox
30 48 0.003220366 ubox
30 53 0.968913895 ubox
30 56 0.065317517 ubox
31 52 0.995753690 ubox
32 51 0.998569598 ubox
32 52 0.007606483 ubox
32 55 0.004378367 ubox
33 50 0.999360953 ubox
33 51 0.011259677 ubox
33 54 0.004349997 ubox
34 49 0.999958365 ubox
34 53 0.003201546 ubox
35 48 0.999954640 ubox
36 43 0.003175052 ubox
36 47 0.999959468 ubox
37 42 0.003165192 ubox
37 46 0.999975890 ubox
38 45 0.999963611 ubox
39 44 0.998263580 ubox
46 57 0.003870848 ubox
47 56 0.003938381 ubox
48 55 0.004049880 ubox
49 54 0.004028706 ubox
52 79 0.005609349 ubox
53 58 0.004707353 ubox
53 63 0.049866190 ubox
53 64 0.007904691 ubox
53 66 0.041932897 ubox
53 69 0.104964393 ubox
53 74 0.006024908 ubox
53 76 0.004890345 ubox
53 78 0.014409619 ubox
53 80 0.013317222 ubox
54 62 0.042122101 ubox
54 65 0.037067005 ubox
54 68 0.121779859 ubox
54 73 0.006620794 ubox
54 79 0.033343422 ubox
55 62 0.219972752 ubox
55 65 0.128301190 ubox
55 67 0.122063862 ubox
55 73 0.017276596 ubox
55 79 0.019812980 ubox
56 61 0.232602042 ubox
56 64 0.164781544 ubox
56 66 0.091955509 ubox
56 70 0.026682475 ubox
56 71 0.009460014 ubox
56 72 0.019928953 ubox
56 75 0.200544211 ubox
56 76 0.020313431 ubox
56 78 0.014652433 ubox
56 81 0.015992975 ubox
57 63 0.168481062 ubox
57 66 0.357118905 ubox
57 69 0.026772143 ubox
57 70 0.009396902 ubox
57 71 0.019842835 ubox
57 74 0.201455879 ubox
57 75 0.015771690 ubox
57 80 0.013904973 ubox
58 62 0.157631979 ubox
58 65 0.366905287 ubox
58 68 0.026759742 ubox
58 73 0.201604526 ubox
58 79 0.012979765 ubox
59 64 0.331285795 ubox
60 80 0.426066994 ubox
61 67 0.019173909 ubox
61 79 0.451175112 ubox
62 66 0.022345133 ubox
62 69 0.209039529 ubox
62 78 0.451625992 ubox
62 80 0.067015062 ubox
63 68 0.209276957 ubox
63 79 0.070255697 ubox
64 77 0.449289996 ubox
64 79 0.008696963 ubox
65 74 0.080773947 ubox
65 76 0.451894108 ubox
65 78 0.012762828 ubox
65 80 0.008944306 ubox
66 73 0.081173175 ubox
66 79 0.009606471 ubox
67 72 0.080158371 ubox
67 75 0.456703721 ubox
67 76 0.014033082 ubox
67 78 0.007754410 ubox
67 81 0.003362367 ubox
68 74 0.456795656 ubox
68 75 0.013069581 ubox
68 80 0.003499742 ubox
69 73 0.453500707 ubox
69 79 0.003627421 ubox
72 79 0.071388186 ubox
73 78 0.072174653 ubox
73 80 0.046949799 ubox
74 79 0.049824112 ubox
8 77 0.9500000 lbox
9 76 0.9500000 lbox
10 75 0.9500000 lbox
11 74 0.9500000 lbox
12 73 0.9500000 lbox
15 69 0.9500000 lbox
16 68 0.9500000 lbox
17 67 0.9500000 lbox
27 58 0.9500000 lbox
28 57 0.9500000 lbox
29 56 0.9500000 lbox
30 53 0.9500000 lbox
31 52 0.9500000 lbox
32 51 0.9500000 lbox
33 50 0.9500000 lbox
34 49 0.9500000 lbox
35 48 0.9500000 lbox
36 47 0.9500000 lbox
37 46 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
showpage
end
%%EOF
