%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:06 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FUK)
} def

/sequence { (\
AAAGAGCCCGCUCCGCCGAGCGCCGGGCGACGGCAGGAAGCCCCUCCGCUUGGCCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 51 0.009447914 ubox
3 12 0.080537019 ubox
3 50 0.009987321 ubox
4 11 0.085419004 ubox
4 13 0.767782014 ubox
4 46 0.012476649 ubox
4 49 0.009982345 ubox
4 51 0.009489769 ubox
5 12 0.769323834 ubox
5 45 0.012541403 ubox
5 50 0.010265543 ubox
6 11 0.763158172 ubox
6 16 0.005679342 ubox
6 21 0.059256798 ubox
6 23 0.034351981 ubox
6 28 0.081637599 ubox
6 34 0.010915183 ubox
6 44 0.012486855 ubox
6 49 0.010339612 ubox
6 54 0.030792078 ubox
7 15 0.005767923 ubox
7 20 0.059266903 ubox
7 22 0.031442839 ubox
7 26 0.004950087 ubox
7 27 0.081912252 ubox
7 33 0.010842715 ubox
7 48 0.010287026 ubox
7 53 0.030679622 ubox
8 25 0.007094106 ubox
8 26 0.081899395 ubox
8 32 0.010705130 ubox
8 52 0.030272113 ubox
9 15 0.004197119 ubox
9 18 0.058430655 ubox
9 22 0.149202384 ubox
9 25 0.078783204 ubox
9 29 0.022575153 ubox
9 52 0.003326748 ubox
10 14 0.014819694 ubox
10 16 0.022980672 ubox
10 17 0.053414478 ubox
10 21 0.468677881 ubox
10 23 0.005427883 ubox
10 24 0.063362959 ubox
10 28 0.022888982 ubox
10 34 0.003596326 ubox
10 41 0.015971155 ubox
10 49 0.005192769 ubox
11 15 0.030523534 ubox
11 20 0.469576584 ubox
11 22 0.007180279 ubox
11 27 0.022869665 ubox
11 33 0.003600579 ubox
11 40 0.016004408 ubox
11 48 0.005145253 ubox
11 57 0.197236314 ubox
12 19 0.469382257 ubox
12 26 0.021224500 ubox
12 32 0.003449169 ubox
12 38 0.012743070 ubox
12 39 0.011301078 ubox
12 56 0.192132719 ubox
12 58 0.109149086 ubox
13 18 0.467927338 ubox
13 25 0.021020274 ubox
13 26 0.008497034 ubox
13 37 0.017648126 ubox
13 57 0.132555032 ubox
14 22 0.060548940 ubox
14 25 0.008527558 ubox
14 29 0.007874316 ubox
14 36 0.017643503 ubox
15 21 0.062421614 ubox
15 23 0.019620151 ubox
15 24 0.007145724 ubox
15 28 0.008082838 ubox
15 34 0.017918219 ubox
15 54 0.876158560 ubox
16 20 0.061972623 ubox
16 22 0.020145111 ubox
16 27 0.008015778 ubox
16 33 0.017975194 ubox
16 53 0.877873505 ubox
17 26 0.007947205 ubox
17 32 0.017974391 ubox
17 52 0.877861793 ubox
18 31 0.017863164 ubox
18 51 0.877094657 ubox
19 50 0.877627413 ubox
20 28 0.015888131 ubox
20 49 0.877883282 ubox
21 27 0.015890758 ubox
21 29 0.010027034 ubox
21 48 0.877651828 ubox
22 28 0.011056880 ubox
22 34 0.389940692 ubox
22 47 0.780188870 ubox
22 54 0.443586233 ubox
23 27 0.010984599 ubox
23 33 0.391601543 ubox
23 37 0.008976473 ubox
23 53 0.456004122 ubox
24 32 0.391614899 ubox
24 36 0.008986892 ubox
24 48 0.005244960 ubox
24 52 0.456125519 ubox
25 31 0.391150960 ubox
25 42 0.003228642 ubox
25 43 0.728637112 ubox
25 44 0.226820142 ubox
25 45 0.169141380 ubox
25 46 0.047412569 ubox
25 47 0.012267336 ubox
25 51 0.454662838 ubox
25 55 0.110903688 ubox
26 42 0.737380432 ubox
26 43 0.201906585 ubox
26 44 0.176137891 ubox
26 45 0.041576933 ubox
26 46 0.013350806 ubox
26 47 0.005648421 ubox
26 50 0.455678487 ubox
26 54 0.111002651 ubox
26 55 0.026263345 ubox
27 34 0.017125877 ubox
27 41 0.744600489 ubox
27 42 0.144237497 ubox
27 43 0.176141804 ubox
27 44 0.041452874 ubox
27 45 0.011950477 ubox
27 46 0.006261532 ubox
27 49 0.456175484 ubox
27 54 0.026525475 ubox
28 33 0.019020986 ubox
28 40 0.751595509 ubox
28 48 0.454395798 ubox
28 52 0.111737815 ubox
28 53 0.023803482 ubox
29 46 0.151652897 ubox
29 47 0.416736355 ubox
29 51 0.113097263 ubox
30 45 0.210489283 ubox
30 50 0.112680532 ubox
31 48 0.128368687 ubox
31 52 0.007584440 ubox
32 42 0.470661969 ubox
32 43 0.079719038 ubox
32 44 0.091711984 ubox
32 45 0.020049025 ubox
32 46 0.021329441 ubox
32 47 0.156979450 ubox
32 50 0.016124645 ubox
32 51 0.005482911 ubox
32 55 0.069438670 ubox
33 41 0.483496515 ubox
33 42 0.063716307 ubox
33 43 0.089186979 ubox
33 44 0.020606742 ubox
33 45 0.015620965 ubox
33 46 0.162817900 ubox
33 49 0.018241987 ubox
33 54 0.069510090 ubox
34 40 0.485829446 ubox
34 48 0.018211334 ubox
34 52 0.006493281 ubox
34 53 0.069069620 ubox
35 45 0.225259388 ubox
35 51 0.008811931 ubox
36 42 0.082843407 ubox
36 43 0.081375673 ubox
36 44 0.233504331 ubox
36 45 0.015421431 ubox
36 46 0.006622457 ubox
36 47 0.345461141 ubox
36 50 0.006785443 ubox
36 51 0.006640815 ubox
36 55 0.010536717 ubox
37 41 0.081946397 ubox
37 42 0.082814915 ubox
37 43 0.232922912 ubox
37 44 0.016714258 ubox
37 45 0.004995973 ubox
37 46 0.345891115 ubox
37 49 0.006500554 ubox
37 51 0.013325504 ubox
37 54 0.010513564 ubox
38 45 0.327697248 ubox
38 50 0.009565829 ubox
38 51 0.063619855 ubox
39 45 0.055741990 ubox
39 50 0.070554298 ubox
40 44 0.077064882 ubox
40 49 0.071739067 ubox
40 54 0.003496247 ubox
41 48 0.071626557 ubox
41 53 0.003498602 ubox
42 52 0.003474767 ubox
43 53 0.004346716 ubox
44 52 0.004403864 ubox
44 57 0.003247704 ubox
46 53 0.004545547 ubox
47 52 0.004833832 ubox
48 54 0.007056145 ubox
49 53 0.007101799 ubox
49 57 0.006697269 ubox
50 56 0.006440872 ubox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
15 54 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
18 51 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
showpage
end
%%EOF
