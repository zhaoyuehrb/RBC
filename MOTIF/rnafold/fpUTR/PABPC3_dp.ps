%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:05:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PABPC3)
} def

/sequence { (\
GCGCUCUACUCCUGUAACGGAAAGGUCGCGGCUUGUGUGCCUGCGGGCAGCCGUGCCGAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.010990453 ubox
1 26 0.014165091 ubox
1 29 0.778254718 ubox
1 56 0.010002991 ubox
2 14 0.011389042 ubox
2 19 0.089439046 ubox
2 25 0.017239045 ubox
2 28 0.799388810 ubox
2 30 0.014010668 ubox
2 45 0.006165673 ubox
2 55 0.010011387 ubox
2 58 0.014921008 ubox
3 13 0.008971589 ubox
3 15 0.014194971 ubox
3 18 0.090256340 ubox
3 26 0.092023387 ubox
3 27 0.796871110 ubox
3 29 0.047593406 ubox
3 44 0.006235458 ubox
3 54 0.008447595 ubox
3 56 0.004719453 ubox
3 57 0.005620514 ubox
4 14 0.014810822 ubox
4 20 0.039254152 ubox
4 24 0.026133369 ubox
4 25 0.292421924 ubox
4 28 0.049167747 ubox
4 43 0.006224659 ubox
4 53 0.008366018 ubox
4 55 0.004954689 ubox
4 60 0.465491957 ubox
5 19 0.037639537 ubox
5 20 0.018403281 ubox
5 21 0.044130448 ubox
5 23 0.025747355 ubox
5 24 0.167654087 ubox
5 25 0.591905263 ubox
5 59 0.467432316 ubox
5 61 0.062055535 ubox
6 19 0.023245280 ubox
6 20 0.046863150 ubox
6 24 0.670978081 ubox
6 25 0.420638923 ubox
6 58 0.466998755 ubox
6 60 0.074554568 ubox
7 14 0.005178221 ubox
7 16 0.165628532 ubox
7 19 0.038174955 ubox
7 23 0.651496314 ubox
7 24 0.417757016 ubox
7 59 0.072212132 ubox
8 13 0.004922230 ubox
8 15 0.175058282 ubox
8 26 0.031421050 ubox
9 14 0.175536101 ubox
9 20 0.029372310 ubox
9 24 0.028657524 ubox
9 25 0.033235757 ubox
9 60 0.058331646 ubox
10 19 0.028569427 ubox
10 20 0.019628242 ubox
10 21 0.950911030 ubox
10 23 0.019528464 ubox
10 24 0.022894373 ubox
10 59 0.058239156 ubox
10 61 0.005546086 ubox
11 19 0.022113430 ubox
11 20 0.975811357 ubox
11 25 0.042953667 ubox
11 47 0.003397384 ubox
11 58 0.057786277 ubox
11 60 0.006594252 ubox
12 19 0.974771459 ubox
12 20 0.085245036 ubox
12 24 0.043398836 ubox
12 46 0.003400359 ubox
12 60 0.009489193 ubox
13 19 0.087013777 ubox
13 23 0.043264264 ubox
13 45 0.003395205 ubox
13 58 0.006638717 ubox
13 59 0.009171192 ubox
14 18 0.130051732 ubox
14 29 0.006368272 ubox
14 44 0.003400220 ubox
14 56 0.035953233 ubox
14 57 0.010448487 ubox
15 28 0.006291140 ubox
15 43 0.003387426 ubox
15 55 0.035396049 ubox
16 54 0.024926762 ubox
17 26 0.019208888 ubox
17 54 0.034631745 ubox
18 25 0.020728856 ubox
18 28 0.010199914 ubox
18 53 0.042967474 ubox
18 58 0.019471847 ubox
19 27 0.010371315 ubox
19 52 0.043085759 ubox
19 57 0.020374141 ubox
20 26 0.008817783 ubox
20 27 0.006648826 ubox
20 51 0.043067776 ubox
20 56 0.020324016 ubox
21 26 0.006201950 ubox
23 42 0.008619298 ubox
24 41 0.009029108 ubox
24 52 0.008224421 ubox
24 57 0.562231079 ubox
25 40 0.009030257 ubox
25 48 0.026164348 ubox
25 51 0.008222343 ubox
25 56 0.562985582 ubox
26 39 0.005899727 ubox
26 46 0.037139626 ubox
26 47 0.021353321 ubox
26 50 0.007502016 ubox
26 55 0.071160799 ubox
26 59 0.005591696 ubox
26 61 0.132256170 ubox
27 37 0.006052769 ubox
27 39 0.006685857 ubox
27 45 0.064058694 ubox
27 46 0.015154863 ubox
27 55 0.559751897 ubox
27 58 0.005660976 ubox
27 60 0.164165323 ubox
28 36 0.006084885 ubox
28 38 0.006738554 ubox
28 44 0.066238184 ubox
28 54 0.564174861 ubox
28 57 0.003875169 ubox
29 35 0.006086572 ubox
29 37 0.006746465 ubox
29 43 0.066223401 ubox
29 53 0.564853091 ubox
29 58 0.258733880 ubox
30 34 0.003755963 ubox
30 36 0.006371605 ubox
30 41 0.078638887 ubox
30 42 0.015471250 ubox
30 52 0.565362903 ubox
30 57 0.819900845 ubox
31 40 0.079468518 ubox
31 41 0.011059838 ubox
31 48 0.003618167 ubox
31 51 0.565364353 ubox
31 56 0.820783643 ubox
32 39 0.080173770 ubox
32 47 0.004111793 ubox
32 50 0.564723864 ubox
32 55 0.820508770 ubox
32 60 0.009129034 ubox
33 46 0.005531890 ubox
33 49 0.397923343 ubox
33 50 0.025083444 ubox
33 59 0.009168473 ubox
34 45 0.010655890 ubox
34 49 0.169035584 ubox
34 53 0.740384009 ubox
34 58 0.009118523 ubox
35 44 0.010951145 ubox
35 48 0.236309571 ubox
35 51 0.068163178 ubox
35 52 0.798701419 ubox
35 54 0.004584877 ubox
35 57 0.008946636 ubox
36 43 0.010748560 ubox
36 45 0.015302812 ubox
36 47 0.235489049 ubox
36 49 0.013660355 ubox
36 50 0.069401384 ubox
36 53 0.013586547 ubox
37 42 0.005997680 ubox
37 44 0.020108871 ubox
37 48 0.014856533 ubox
37 51 0.193551007 ubox
37 52 0.014270054 ubox
37 56 0.007638875 ubox
38 43 0.019313847 ubox
38 45 0.233360471 ubox
38 47 0.012980257 ubox
38 49 0.888092657 ubox
38 50 0.113371653 ubox
38 55 0.007436446 ubox
39 44 0.229581897 ubox
39 48 0.967843031 ubox
39 54 0.004906178 ubox
39 56 0.004104867 ubox
40 46 0.018667684 ubox
40 47 0.968100084 ubox
40 53 0.004836011 ubox
40 55 0.004097640 ubox
41 45 0.019324441 ubox
41 46 0.967939284 ubox
42 55 0.012872350 ubox
42 59 0.003885685 ubox
43 51 0.004184460 ubox
43 54 0.023236310 ubox
44 50 0.004192723 ubox
44 53 0.023752042 ubox
44 58 0.016464177 ubox
45 52 0.023881438 ubox
45 57 0.013916339 ubox
46 51 0.023861420 ubox
46 56 0.010407469 ubox
46 57 0.062001105 ubox
47 54 0.003663890 ubox
47 56 0.062787382 ubox
48 53 0.003874363 ubox
48 55 0.063458246 ubox
49 54 0.060848833 ubox
1 29 0.9500000 lbox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
32 55 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
