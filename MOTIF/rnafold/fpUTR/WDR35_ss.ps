%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGCGACGGGAGCUUUCCGGAGCUGCUGGUACUCCCGAUUGGAGACGUAGAACCGUUACUUGUCGAGGGCCUUAGCGGCCGCCGUGACCCUCUCGGGGAUCCCACG\
) } def
/len { sequence length } bind def

/coor [
[101.01496124 401.98532104]
[100.72656250 386.18365479]
[111.75608826 374.86441040]
[111.32381439 359.87063599]
[110.89154816 344.87686157]
[95.92871094 335.72793579]
[89.28813934 319.32785034]
[93.74784851 302.04522705]
[107.73605347 290.71057129]
[106.44068146 275.76660156]
[105.14530182 260.82263184]
[103.84992981 245.87867737]
[102.55455780 230.93472290]
[101.25918579 215.99075317]
[90.26873779 209.09739685]
[85.22406006 196.93307495]
[88.19728088 183.90357971]
[98.31099701 174.87115479]
[97.44681549 159.89607239]
[96.36692810 144.93499756]
[95.07155609 129.99102783]
[93.77618408 115.04706573]
[83.79935455 101.63983917]
[90.88717651 86.50531769]
[89.16168976 71.60488892]
[87.43620300 56.70446396]
[85.71070862 41.80403900]
[83.98522186 26.90361214]
[82.25973511 12.00318623]
[80.53424835 -2.89723945]
[78.80875397 -17.79766464]
[66.70584869 -27.60365677]
[65.16822052 -42.73938751]
[74.59132385 -54.21722412]
[72.86583710 -69.11765289]
[71.14034271 -84.01807404]
[61.86693954 -96.83660126]
[68.08882904 -110.36942291]
[66.36333466 -125.26985168]
[64.63784790 -140.17027283]
[62.91235733 -155.07070923]
[53.63895035 -167.88922119]
[59.86083984 -181.42204285]
[58.13534927 -196.32247925]
[48.86194229 -209.14099121]
[55.08382797 -222.67382812]
[53.35834122 -237.57424927]
[51.63285065 -252.47467041]
[49.90736389 -267.37509155]
[37.36660004 -276.99304199]
[35.38270950 -292.67233276]
[45.13269806 -305.11068726]
[60.83207703 -306.92871094]
[73.16667175 -297.04776001]
[74.81859589 -281.33001709]
[64.80778503 -269.10058594]
[66.53327942 -254.20016479]
[68.25876617 -239.29974365]
[69.98425293 -224.39930725]
[79.13424683 -212.64657593]
[73.03577423 -198.04795837]
[74.76126099 -183.14753723]
[83.91125488 -171.39479065]
[77.81278229 -156.79618835]
[79.53827667 -141.89576721]
[81.26376343 -126.99533844]
[82.98925018 -112.09491730]
[92.13924408 -100.34217072]
[86.04077148 -85.74356842]
[87.76625824 -70.84313965]
[89.49175262 -55.94271469]
[101.28858948 -46.92217255]
[103.25074005 -31.83560181]
[93.70918274 -19.52315331]
[95.43466949 -4.62272835]
[97.16015625 10.27769756]
[98.88565063 25.17812347]
[100.61113739 40.07854843]
[102.33662415 54.97897339]
[104.06211853 69.87940216]
[105.78760529 84.77982330]
[114.51981354 92.62944031]
[115.70227051 104.31147003]
[108.72014618 113.75169373]
[110.01551819 128.69564819]
[111.31089020 143.63961792]
[115.22096252 152.06733704]
[112.42190552 159.03189087]
[113.28608704 174.00697327]
[126.53091431 185.32238770]
[127.55060577 202.37641907]
[116.20314789 214.69538879]
[117.49851990 229.63934326]
[118.79389191 244.58331299]
[120.08927155 259.52728271]
[121.38464355 274.47122192]
[122.68001556 289.41519165]
[134.29791260 294.48016357]
[142.56538391 303.99011230]
[145.92596436 316.05941772]
[143.78804016 328.33026123]
[136.62786865 338.43313599]
[125.88531494 344.44461060]
[126.31758881 359.43838501]
[126.74985504 374.43215942]
[138.41317749 385.09716797]
[139.03562927 400.88919067]
[128.24790955 412.43908691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 105]
[4 104]
[5 103]
[9 97]
[10 96]
[11 95]
[12 94]
[13 93]
[14 92]
[18 89]
[19 88]
[20 86]
[21 85]
[22 84]
[24 81]
[25 80]
[26 79]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[34 71]
[35 70]
[36 69]
[38 67]
[39 66]
[40 65]
[41 64]
[43 62]
[44 61]
[46 59]
[47 58]
[48 57]
[49 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
