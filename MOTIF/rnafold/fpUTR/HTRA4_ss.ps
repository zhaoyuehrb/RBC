%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:47:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUUUGGGGGCCGGCGGAGGCGGCGCCGUGGCCGGGAGAAAGUGUCUCUCAUUUAGGAGGGUUUGCAGGUCCAGAGUAAAGUCACUGAAGAGUGGAAGCGAGGAAGGAACAGG\
) } def
/len { sequence length } bind def

/coor [
[122.64335632 146.71194458]
[113.54438782 150.37907410]
[103.87120056 152.28211975]
[93.96427155 152.33558655]
[84.17581177 150.51939392]
[74.85720825 146.88024902]
[66.34645081 141.53059387]
[58.95584106 134.64529419]
[52.96059036 126.45587158]
[48.58854675 117.24277496]
[46.01159668 107.32582855]
[31.79680061 112.11534882]
[17.58200264 116.90486908]
[3.36720514 121.69439697]
[-10.71268272 126.86708832]
[-24.64733315 132.41915894]
[-38.58198547 137.97123718]
[-52.51663589 143.52330017]
[-57.24832916 158.42784119]
[-70.48108673 166.76019287]
[-85.96679688 164.58610535]
[-96.39358521 152.93208313]
[-96.83824158 137.30082703]
[-87.09081268 125.07292175]
[-71.75373840 122.02201843]
[-58.06870651 129.58865356]
[-44.13405609 124.03658295]
[-30.19940567 118.48451233]
[-16.26475525 112.93244171]
[-13.54831314 108.85681152]
[-8.18292427 106.52038574]
[-1.42231786 107.47959900]
[12.79247952 102.69007874]
[27.00727654 97.90055084]
[41.22207642 93.11103058]
[44.84214401 78.55441284]
[34.52664948 67.66448212]
[24.21115875 56.77454758]
[13.89566708 45.88461685]
[3.58017564 34.99468231]
[-6.73531628 24.10474968]
[-22.66900826 22.23471832]
[-31.01875496 8.53576756]
[-25.37934685 -6.48344088]
[-10.07685375 -11.30145550]
[3.14996028 -2.22230673]
[4.15461636 13.78925800]
[14.47010803 24.67919159]
[24.78560066 35.56912231]
[35.10109329 46.45905685]
[45.41658401 57.34898758]
[55.73207474 68.23892212]
[63.88166428 59.67902756]
[73.62741852 53.12839127]
[84.48893738 48.87017059]
[95.93927765 47.07551575]
[107.43051910 47.79691696]
[118.41993713 50.96725082]
[128.39569092 56.40452194]
[136.90060425 63.82197952]
[143.55311584 72.84310150]
[148.06439209 83.02058411]
[150.25065613 93.85850525]
[165.24516296 94.26469421]
[180.23965454 94.67088318]
[195.23416138 95.07707977]
[201.03833008 85.84984589]
[210.12081909 79.97035980]
[220.75413513 78.47514343]
[230.94989014 81.57447815]
[238.83065796 88.62590790]
[242.97558594 98.26601410]
[257.88766479 99.88779449]
[272.79974365 101.50958252]
[282.32342529 91.87297058]
[295.47433472 89.55747223]
[307.36352539 95.19440460]
[313.70321655 106.50069427]
[328.56588745 108.52568817]
[336.56604004 99.51861572]
[347.82733154 95.59191132]
[359.45556641 97.63017273]
[368.52252197 105.00071716]
[372.80328369 115.74330139]
[387.53454590 118.56998444]
[402.26577759 121.39665985]
[416.99703979 124.22334290]
[431.72830200 127.05001831]
[447.03527832 121.16541290]
[459.61306763 131.68830872]
[456.52273560 147.79364014]
[440.94332886 152.91363525]
[428.90161133 141.78128052]
[414.17034912 138.95458984]
[399.43911743 136.12791443]
[384.70785522 133.30123901]
[369.97659302 130.47456360]
[355.60305786 141.65254211]
[337.29058838 138.86041260]
[326.54089355 123.38837433]
[311.67822266 121.36337280]
[298.80853271 132.09573364]
[281.81759644 130.22682190]
[271.17794800 116.42165375]
[256.26586914 114.79986572]
[241.35380554 113.17807770]
[227.29228210 126.49324036]
[207.65950012 125.36673737]
[194.82797241 110.07157898]
[179.83346558 109.66538239]
[164.83897400 109.25919342]
[149.84446716 108.85300446]
[147.53881836 118.13889313]
[143.51049805 126.87078857]
[137.88626099 134.73052979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 35]
[12 34]
[13 33]
[14 32]
[15 29]
[16 28]
[17 27]
[18 26]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[63 112]
[64 111]
[65 110]
[66 109]
[72 106]
[73 105]
[74 104]
[78 101]
[79 100]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
