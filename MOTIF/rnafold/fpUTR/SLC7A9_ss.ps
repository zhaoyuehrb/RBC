%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGACAUGGCCAUUUCUAGGGUUGGACCGUGCAGGCACGGGCGGUCAGCUGGGCCGCAGCUCCUCCGGCUCUGCAGGGUCACGGAGGAAGGUAAGUAAGCCAGCUCCCCUAGUCCAGGCCGAGCUUGCACUUGCGUCUUGUCUGCUGCUGCUGAACCAAGAUUUAGCUGUGCGCCCUCCUUGCAGUCUCCUGGAACCAGCAGGAGGAAAC\
) } def
/len { sequence length } bind def

/coor [
[105.90274811 172.94746399]
[113.45233917 164.32434082]
[107.63552856 150.49810791]
[101.81871796 136.67187500]
[96.00190735 122.84564209]
[92.15765381 118.52400208]
[89.99334717 113.79051971]
[89.46565247 109.16229248]
[90.38943481 105.10913849]
[92.45812225 102.01751709]
[78.50659943 96.50798798]
[64.55506897 90.99846649]
[50.60353851 85.48894501]
[38.56151962 94.91958618]
[23.51525497 97.04249573]
[9.51959896 91.38670349]
[0.29575139 79.56398773]
[-1.75804162 64.81111145]
[-15.70956993 59.30158615]
[-29.66109848 53.79206085]
[-43.61262512 48.28253555]
[-57.56415558 42.77301407]
[-60.70425034 56.38378906]
[-70.48669434 65.62324524]
[-83.24500275 67.80645752]
[-94.60574341 62.75881958]
[-100.98633575 52.69082642]
[-115.97613525 52.13785553]
[-130.96594238 51.58488083]
[-145.95574951 51.03190994]
[-160.03176880 58.25521088]
[-172.46516418 50.05398178]
[-187.45495605 49.50101089]
[-202.44476318 48.94803619]
[-217.43457031 48.39506531]
[-232.42437744 47.84209442]
[-247.41784668 47.39968109]
[-262.41418457 47.06784821]
[-271.06143188 50.00629807]
[-277.62878418 46.61890793]
[-292.61859131 46.06593704]
[-307.60839844 45.51296616]
[-322.59820557 44.95999527]
[-331.28784180 47.77058792]
[-337.80453491 44.28670883]
[-352.78457642 43.51271439]
[-358.83471680 46.17252350]
[-364.47375488 45.48233795]
[-368.19302368 42.48852539]
[-383.14370728 41.27304459]
[-398.09436035 40.05756760]
[-413.04504395 38.84208679]
[-427.99572754 37.62660599]
[-441.10357666 46.87663651]
[-456.46731567 42.25761032]
[-462.30114746 27.31285095]
[-454.12988281 13.50669670]
[-438.22180176 11.43004894]
[-426.78024292 22.67593384]
[-411.82955933 23.89141273]
[-396.87887573 25.10689354]
[-381.92822266 26.32237244]
[-366.97753906 27.53785324]
[-352.01055908 28.53269768]
[-337.03054810 29.30669022]
[-322.04522705 29.97019005]
[-307.05541992 30.52316284]
[-292.06561279 31.07613373]
[-277.07583618 31.62910652]
[-262.08233643 32.07151794]
[-247.08601379 32.40335083]
[-240.33033752 29.40908813]
[-231.87139893 32.85229111]
[-216.88159180 33.40526199]
[-201.89179993 33.95823288]
[-186.90199280 34.51120377]
[-171.91218567 35.06417847]
[-158.90832520 27.80132484]
[-145.40277100 36.04210663]
[-130.41296387 36.59507751]
[-115.42316437 37.14805222]
[-100.43336487 37.70102310]
[-95.85466766 29.24388123]
[-87.40261078 23.38464546]
[-76.55567169 21.86756897]
[-80.70440674 7.45271587]
[-84.85314178 -6.96213722]
[-89.00187683 -21.37698936]
[-101.45977783 -26.49466324]
[-108.59188843 -37.68928146]
[-107.98369598 -50.75407028]
[-100.08101654 -60.93023300]
[-104.01670074 -75.40470886]
[-107.95238495 -89.87918091]
[-121.79113770 -97.51229858]
[-126.09885406 -112.71819305]
[-118.31984711 -126.47546387]
[-103.06926727 -130.62217712]
[-89.39500427 -122.69815826]
[-85.40975952 -107.40458679]
[-93.47791290 -93.81486511]
[-89.54222870 -79.34039307]
[-85.60654449 -64.86591339]
[-70.66690826 -57.14133072]
[-65.84220123 -40.67739105]
[-74.58702087 -25.52572632]
[-70.43828583 -11.11087322]
[-66.28955078 3.30397987]
[-62.14081573 17.71883202]
[-52.05463028 28.82148552]
[-38.10310364 34.33100891]
[-24.15157509 39.84053421]
[-10.20004559 45.35005569]
[3.75148249 50.85958099]
[15.33111095 41.49060059]
[30.14411163 39.16014862]
[44.22779846 44.59302139]
[53.76377106 56.42357635]
[56.11306381 71.53741455]
[70.06459045 77.04693604]
[84.01612091 82.55646515]
[97.96765137 88.06598663]
[112.93462372 89.06082916]
[127.49262238 85.44631195]
[142.05061340 81.83180237]
[150.23045349 68.57555389]
[165.04582214 65.11730194]
[177.63320923 72.99721527]
[192.19120789 69.38269806]
[206.74920654 65.76818085]
[221.30720520 62.15366745]
[235.86520386 58.53915405]
[243.17475891 47.91336060]
[255.37342834 45.20192719]
[265.80419922 51.32585907]
[280.41390991 47.92644882]
[294.94485474 44.20466995]
[309.38992310 40.16234970]
[323.83496094 36.12002945]
[338.28002930 32.07770920]
[352.72509766 28.03539085]
[367.17013550 23.99307060]
[381.55401611 19.73814392]
[395.87356567 15.27153587]
[406.74374390 3.77589703]
[421.19763184 7.37235737]
[435.51715088 2.90574980]
[446.22952271 -9.51108074]
[462.28613281 -6.17695045]
[467.16937256 9.47827339]
[455.85577393 21.34983826]
[439.98376465 17.22529602]
[425.66421509 21.69190407]
[415.81826782 32.86806107]
[400.34014893 29.59108353]
[386.02059937 34.05768967]
[383.04895020 37.79468155]
[377.69882202 39.70546722]
[371.21246338 38.43812561]
[356.76739502 42.48044586]
[342.32235718 46.52276611]
[327.87728882 50.56508636]
[313.43222046 54.60740662]
[298.98718262 58.64972687]
[296.94909668 61.52520752]
[293.41769409 63.55702209]
[288.80435181 64.05437469]
[283.81332397 62.53617096]
[269.20361328 65.93557739]
[257.05346680 78.59906006]
[239.47972107 73.09715271]
[224.92172241 76.71166229]
[210.36372375 80.32617950]
[195.80572510 83.94069672]
[181.24772644 87.55521393]
[173.80781555 100.40757751]
[159.09542847 104.28060150]
[145.66513062 96.38979340]
[131.10713196 100.00431061]
[116.54914093 103.61882782]
[109.82813263 117.02883148]
[115.64495087 130.85505676]
[121.46176147 144.68128967]
[127.27857208 158.50752258]
[146.08403015 162.07855225]
[158.83546448 176.15229797]
[160.51292419 194.91857910]
[150.61871338 210.77589417]
[157.04141235 224.33129883]
[163.46411133 237.88668823]
[169.88681030 251.44209290]
[176.30950928 264.99749756]
[182.73220825 278.55288696]
[189.15490723 292.10830688]
[204.32899475 295.88739014]
[213.48199463 308.56637573]
[212.29214478 324.15863037]
[201.32127380 335.30197144]
[185.74948120 336.73483276]
[172.92927551 327.78070068]
[168.91400146 312.66741943]
[175.59951782 298.53100586]
[169.17681885 284.97558594]
[162.75410461 271.42019653]
[156.33140564 257.86480713]
[149.90870667 244.30938721]
[143.48600769 230.75399780]
[137.06330872 217.19859314]
[125.91023254 217.24548340]
[115.49734497 213.10877991]
[107.34264374 205.35032654]
[102.65021515 195.06288147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 182]
[5 181]
[10 122]
[11 121]
[12 120]
[13 119]
[18 114]
[19 113]
[20 112]
[21 111]
[22 110]
[27 82]
[28 81]
[29 80]
[30 79]
[32 77]
[33 76]
[34 75]
[35 74]
[36 73]
[37 71]
[38 70]
[40 69]
[41 68]
[42 67]
[43 66]
[45 65]
[46 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[85 109]
[86 108]
[87 107]
[88 106]
[92 103]
[93 102]
[94 101]
[123 180]
[124 179]
[125 178]
[128 175]
[129 174]
[130 173]
[131 172]
[132 171]
[135 169]
[136 168]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[143 156]
[144 155]
[146 153]
[147 152]
[188 208]
[189 207]
[190 206]
[191 205]
[192 204]
[193 203]
[194 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
