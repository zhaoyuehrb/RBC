%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUCCAGGCCCCUUCCCGCGUCGCGACGCACGCUGCCCCGGAAGGCCGCGGCGCUGUAGUGCGGCGUGGGAGCCCCAGGUUCUUUAGUGGAAGAACGCGAAGCGAGGAUGAGUGAUCCGUGGAGGCAGUAACAGGCGCGGCGAGGGAGAAGUGAUUCCCGAAGAAUCAAGGCUGGGCCGGACCCGGUGGCCUGGCAACAGGGUAAUAAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[110.98335266 317.75894165]
[123.78105164 309.44137573]
[121.82315826 294.56970215]
[119.86526489 279.69802856]
[117.90737152 264.82635498]
[115.41014099 250.03570557]
[112.37687683 235.34559631]
[109.34362030 220.65548706]
[106.31035614 205.96537781]
[103.27709198 191.27526855]
[100.24382782 176.58515930]
[97.21056366 161.89505005]
[94.07054901 147.22738647]
[90.82395935 132.58294678]
[83.44960022 119.33895874]
[84.49216461 107.10466766]
[70.06127167 111.19726562]
[55.63038254 115.28986359]
[41.19949341 119.38246155]
[26.76860046 123.47506714]
[12.33770943 127.56766510]
[-2.09318161 131.66026306]
[-16.52407265 135.75286865]
[-30.95496368 139.84545898]
[-45.38585663 143.93806458]
[-59.81674576 148.03067017]
[-74.24763489 152.12326050]
[-81.98589325 165.64202881]
[-96.67917633 169.58694458]
[-109.51956177 162.12637329]
[-123.95045471 166.21897888]
[-138.38134766 170.31158447]
[-152.78208923 174.50901794]
[-167.15193176 178.81106567]
[-181.52177429 183.11311340]
[-195.89161682 187.41516113]
[-210.26145935 191.71720886]
[-224.63130188 196.01925659]
[-236.95600891 209.70309448]
[-253.86146545 204.98837280]
[-268.16720581 209.49896240]
[-278.84136963 221.94865417]
[-294.90817261 218.66387939]
[-299.83947754 203.02372742]
[-288.56240845 191.11746216]
[-272.67779541 195.19320679]
[-258.37203979 190.68261719]
[-252.51194763 180.10298157]
[-240.63348389 176.22666931]
[-228.93336487 181.64941406]
[-214.56350708 177.34736633]
[-200.19366455 173.04531860]
[-185.82382202 168.74327087]
[-171.45397949 164.44122314]
[-157.08413696 160.13917542]
[-151.57995605 155.21131897]
[-142.47395325 155.88069153]
[-128.04306030 151.78808594]
[-113.61216736 147.69549561]
[-106.60011292 134.60478210]
[-92.02343750 130.24873352]
[-78.34024048 137.69236755]
[-63.90934753 133.59977722]
[-49.47845459 129.50717163]
[-35.04756546 125.41457367]
[-20.61667252 121.32197571]
[-6.18578148 117.22937012]
[8.24510956 113.13677216]
[22.67600060 109.04417419]
[37.10689163 104.95157623]
[51.53778458 100.85897064]
[65.96867371 96.76637268]
[80.39956665 92.67377472]
[88.18116760 79.85009766]
[85.14790344 65.15998840]
[82.11463928 50.46987534]
[78.97462463 35.80221558]
[75.72803497 21.15777397]
[72.48143768 6.51333427]
[47.81187057 5.42775774]
[29.96303558 -24.26277924]
[22.27489853 -37.14270782]
[14.58676052 -50.02263641]
[6.89862299 -62.90256500]
[-0.78951472 -75.78249359]
[-8.47765255 -88.66242218]
[-16.16579056 -101.54235077]
[-30.74152184 -109.05767059]
[-31.25054741 -125.44891357]
[-17.16922569 -133.85417175]
[-2.98321176 -125.62683868]
[-3.28586197 -109.23048401]
[4.40227556 -96.35055542]
[12.09041309 -83.47062683]
[19.77855110 -70.59069824]
[27.46668816 -57.71077347]
[35.15482712 -44.83084488]
[42.84296417 -31.95091820]
[56.90067291 -37.18358612]
[54.29594803 -51.95570374]
[45.59103012 -66.50426483]
[57.16127014 -78.89643860]
[72.27210999 -71.20886230]
[69.06806183 -54.56042862]
[71.67279053 -39.78831100]
[79.17279053 -39.78831100]
[94.17279053 -39.78831100]
[101.67279053 -39.78831100]
[104.27751160 -54.56042862]
[106.88223267 -69.33254242]
[109.48695374 -84.10466003]
[101.49990845 -98.01819611]
[107.53186798 -112.88410187]
[122.95562744 -117.29851532]
[135.93940735 -107.87508392]
[136.52314758 -91.84265900]
[124.25907135 -81.49993896]
[121.65435028 -66.72782135]
[119.04962921 -51.95570374]
[116.44490051 -37.18358612]
[108.61931610 -5.84081507]
[87.12587738 3.26674008]
[90.37247467 17.91118050]
[93.61906433 32.55562210]
[98.13397980 38.40330887]
[96.80474854 47.43661499]
[99.83801270 62.12672424]
[102.87127686 76.81683350]
[101.23286438 61.90658188]
[109.06427002 49.11325836]
[123.08818054 43.79066849]
[137.43580627 48.16622162]
[146.10292053 60.40882492]
[145.46244812 75.39514923]
[135.78244019 86.85365295]
[121.11254883 89.98899078]
[136.01112366 88.24760437]
[150.90969849 86.50621033]
[163.71832275 77.21912384]
[177.25778198 83.42655945]
[192.15635681 81.68516541]
[207.05493164 79.94377136]
[221.95350647 78.20237732]
[234.83314514 57.88467407]
[258.27328491 53.76828384]
[276.89785767 68.16735840]
[291.44165039 64.49620819]
[305.98547363 60.82505798]
[320.52929688 57.15390778]
[335.07312012 53.48275757]
[342.95727539 39.78546143]
[358.23916626 35.75567245]
[371.85232544 43.78419113]
[375.72033691 59.10783768]
[367.54833984 72.63536835]
[352.18463135 76.34113312]
[338.74426270 68.02657318]
[324.20043945 71.69772339]
[309.65664673 75.36887360]
[295.11282349 79.04002380]
[280.56900024 82.71117401]
[279.78851318 89.31726837]
[277.51748657 95.58905029]
[273.86758423 101.19392395]
[269.02371216 105.83264160]
[263.23480225 109.25528717]
[256.80102539 111.27475739]
[250.05819702 111.77693176]
[243.36019897 110.72711945]
[237.06053162 108.17230988]
[231.49354553 104.23912811]
[226.95675659 99.12759399]
[223.69490051 93.10095215]
[208.79632568 94.84234619]
[193.89775085 96.58374023]
[178.99917603 98.32513428]
[167.25619507 107.48766327]
[152.65109253 101.40478516]
[137.75251770 103.14617920]
[122.85394287 104.88757324]
[118.50756073 110.99976349]
[133.44058228 112.41564178]
[139.68099976 126.05592346]
[130.98844910 138.28047180]
[116.05539703 136.86486816]
[109.81478119 123.22415161]
[105.46839905 129.33634949]
[108.71498871 143.98078918]
[113.62589264 151.67822266]
[111.90067291 158.86178589]
[114.93393707 173.55189514]
[117.96720123 188.24200439]
[121.00046539 202.93211365]
[124.03372955 217.62222290]
[127.06698608 232.31233215]
[130.10025024 247.00244141]
[140.38211060 236.08073425]
[155.34317017 237.16072083]
[163.94978333 249.44592285]
[159.85464478 263.87609863]
[146.07786560 269.80908203]
[132.77905273 262.86846924]
[134.73693848 277.74014282]
[136.69482422 292.61181641]
[138.65272522 307.48348999]
[153.16708374 312.20535278]
[164.18940735 322.76333618]
[169.53118896 337.06118774]
[168.13182068 352.26000977]
[160.26914978 365.34210205]
[147.50430298 373.70999146]
[132.37176514 375.70223999]
[117.87610626 370.92324829]
[106.89544678 360.32192993]
[101.61000824 346.00317383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[6 196]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[13 188]
[14 187]
[16 73]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[22 67]
[23 66]
[24 65]
[25 64]
[26 63]
[27 62]
[30 59]
[31 58]
[32 57]
[33 55]
[34 54]
[35 53]
[36 52]
[37 51]
[38 50]
[40 47]
[41 46]
[74 128]
[75 127]
[76 126]
[77 124]
[78 123]
[79 122]
[81 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[99 105]
[100 104]
[108 120]
[109 119]
[110 118]
[111 117]
[136 180]
[137 179]
[138 178]
[140 176]
[141 175]
[142 174]
[143 173]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
