%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAUUCCCUACCCUUUUAAUGCCCCGCCCUAUGACGGACCCAAUCGGAGGGCUCUCCCUACCCGAAACCCCGCUCCUGGAGCGGCUUUUCUCAGGCUUGCGCGGCUCUAGGCCGAAGCGGCGGAUGACGCAACCGGGCCGCGCCGCGAGAAGGUCACACGAUUCUCCAAC\
) } def
/len { sequence length } bind def

/coor [
[99.16369629 132.76551819]
[99.01829529 117.76622772]
[91.95485687 130.99905396]
[84.89141083 144.23188782]
[77.82796478 157.46470642]
[70.76452637 170.69754028]
[63.70108414 183.93037415]
[72.75563812 196.21768188]
[75.57380676 211.21836853]
[71.59604645 225.95404053]
[61.61214447 237.49893188]
[47.60440445 243.56077576]
[32.35408020 242.93600464]
[18.88913155 235.74865723]
[9.88303471 223.42579651]
[7.12395716 208.41412354]
[11.15971470 193.69422913]
[21.18900490 182.18875122]
[35.22050858 176.18211365]
[50.46825409 176.86692810]
[57.53169632 163.63409424]
[64.59513855 150.40127563]
[71.65858459 137.16844177]
[78.72202301 123.93561554]
[85.78546906 110.70278168]
[81.22799683 96.41189575]
[67.80770111 89.71147919]
[54.38739777 83.01106262]
[40.96709824 76.31064606]
[25.16406250 77.06864929]
[17.23335075 64.46099091]
[3.81305027 57.76057816]
[-9.60724926 51.06016159]
[-25.41028786 51.81816101]
[-33.34099960 39.21050262]
[-46.76129913 32.51008987]
[-60.24188232 25.93180084]
[-73.78163910 19.47618294]
[-87.32139587 13.02056599]
[-97.25298309 21.33699799]
[-109.55142212 25.25330162]
[-122.36986542 24.21861076]
[-133.79743958 18.42276764]
[-142.14413452 8.76270866]
[-146.19068909 -3.29617190]
[-145.36659241 -15.94225788]
[-158.66300964 -22.88525963]
[-171.95942688 -29.82826233]
[-185.25584412 -36.77126694]
[-198.67614746 -43.47167969]
[-212.21589661 -49.92729950]
[-225.75566101 -56.38291550]
[-239.29541016 -62.83853149]
[-255.59237671 -61.01068878]
[-265.10470581 -74.36911774]
[-258.04693604 -89.17181396]
[-241.67948914 -90.19103241]
[-232.83979797 -76.37828827]
[-219.30004883 -69.92266846]
[-205.76028442 -63.46705246]
[-192.22053528 -57.01143646]
[-187.46879578 -57.74747086]
[-182.20811462 -55.48117828]
[-178.31285095 -50.06768417]
[-165.01643372 -43.12467957]
[-151.72001648 -36.18167877]
[-138.42359924 -29.23867607]
[-124.26754761 -38.98717499]
[-107.03705597 -40.25117874]
[-91.45052338 -32.59455872]
[-81.82166290 -18.03634834]
[-80.86577606 -0.51919073]
[-67.32601929 5.93642664]
[-53.78626633 12.39204407]
[-46.36876678 12.43260193]
[-40.06088257 19.08978844]
[-26.64058495 25.79020309]
[-11.79745579 24.55294418]
[-2.90683436 37.63986206]
[10.51346493 44.34027863]
[23.93376541 51.04069138]
[38.77689362 49.80343246]
[47.66751480 62.89035034]
[61.08781433 69.59076691]
[74.50811768 76.29118347]
[87.92841339 82.99159241]
[101.97956085 81.59695435]
[111.94293976 89.11140442]
[126.27461243 84.68387604]
[140.60629272 80.25635529]
[154.93797302 75.82882690]
[169.26965332 71.40130615]
[183.60133362 66.97377777]
[197.93301392 62.54625702]
[202.74189758 57.92525482]
[208.32536316 56.64630127]
[212.86604309 58.22838593]
[227.34904480 54.32418060]
[234.46275330 43.53711700]
[246.63287354 40.59705734]
[257.18704224 46.55341339]
[271.73855591 42.91283798]
[286.29003906 39.27226639]
[300.84155273 35.63169098]
[315.39306641 31.99111748]
[329.94454956 28.35054398]
[344.49606323 24.70996857]
[359.04754639 21.06939507]
[373.59906006 17.42882156]
[371.28103638 10.76923084]
[371.76910400 2.67565060]
[375.61883545 -5.72080994]
[382.95297241 -13.11434746]
[396.60772705 -19.32304001]
[410.26248169 -25.53173065]
[423.91720581 -31.74042320]
[435.83319092 -43.80052567]
[450.72064209 -35.68880463]
[447.04718018 -19.13760948]
[430.12591553 -18.08567429]
[416.47116089 -11.87698269]
[402.81640625 -5.66829109]
[389.16165161 0.54040051]
[392.27145386 15.21449947]
[407.27084351 15.35069370]
[421.14068604 7.73901272]
[433.79718018 15.59155273]
[448.79656982 15.72774792]
[464.68994141 9.82546997]
[474.76129150 23.46381569]
[464.44396973 36.91703415]
[448.66036987 30.72712898]
[433.66101074 30.59093475]
[420.86398315 38.21235657]
[407.13464355 30.35007477]
[392.13525391 30.21388054]
[377.23962402 31.98032379]
[362.68814087 35.62089920]
[348.13662720 39.26147079]
[333.58514404 42.90204620]
[319.03363037 46.54261780]
[304.48211670 50.18319321]
[289.93063354 53.82376862]
[275.37911987 57.46434021]
[260.82760620 61.10491562]
[248.91223145 73.96791840]
[231.25325012 68.80717468]
[216.77024841 72.71138000]
[202.36053467 76.87793732]
[188.02885437 81.30545807]
[173.69717407 85.73298645]
[159.36549377 90.16050720]
[145.03381348 94.58803558]
[130.70213318 99.01555634]
[116.37046051 103.44308472]
[131.07035828 106.42853546]
[145.97631836 104.75154877]
[160.70762634 107.57799530]
[173.93441772 114.65272522]
[184.46269226 125.33707428]
[191.34202576 138.66654968]
[193.95140076 153.43783569]
[192.05525208 168.31752014]
[185.82476807 181.96232605]
[175.82237244 193.14053345]
[162.95103455 200.84301758]
[148.37266541 204.37448120]
[133.40330505 203.41612244]
[119.39430237 198.05444336]
[107.61026764 188.77346802]
[99.11499023 176.41101074]
[94.67536163 162.08308411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[26 86]
[27 85]
[28 84]
[29 83]
[31 81]
[32 80]
[33 79]
[35 77]
[36 76]
[37 74]
[38 73]
[39 72]
[46 67]
[47 66]
[48 65]
[49 64]
[50 61]
[51 60]
[52 59]
[53 58]
[88 155]
[89 154]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
[97 148]
[98 147]
[101 145]
[102 144]
[103 143]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[113 123]
[114 122]
[115 121]
[116 120]
[124 136]
[125 135]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
