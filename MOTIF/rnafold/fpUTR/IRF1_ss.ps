%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCUCGCCACUCCUUAGUCGAGGCAAGACGUGCGCCCGAGCCCCGCCGAACCGAGGCCACCCGGAGCCGUGCCCAGUCCACGCCGGCCGUGCCCGGCGGCCUUAAGAACCCGGCAACCUCUGCCUUCUUCCCUCUUCCACUCGGAGUCGCGCUCCGCGCGCCCUCACUGCAGCCCCUGCGUCGCCGGGACCCUCGCGCGCGACCGCCGAAUCGCUCCUGCAGCAGAGCCAAC\
) } def
/len { sequence length } bind def

/coor [
[127.95907593 796.47021484]
[123.03098297 781.75646973]
[127.72467804 766.96630859]
[140.23535156 757.78680420]
[140.03482056 742.78814697]
[139.83430481 727.78948975]
[139.63377380 712.79083252]
[139.33300781 697.79388428]
[138.93200684 682.79925537]
[126.28922272 678.86291504]
[115.45328522 671.21307373]
[107.48448181 660.58105469]
[103.16780853 647.99084473]
[102.93566895 634.66046143]
[106.82463074 621.88403320]
[114.47045898 610.90631104]
[125.14221954 602.80120850]
[137.81213379 598.36700439]
[137.81213379 583.36700439]
[134.67428589 576.68933105]
[137.91374207 568.16680908]
[138.11425781 553.16815186]
[138.31477356 538.16949463]
[138.21450806 523.16979980]
[137.81350708 508.17517090]
[137.41250610 493.18051147]
[125.75907898 486.68478394]
[118.77750397 475.18899536]
[118.38053131 461.63687134]
[124.77850342 449.56091309]
[136.39668274 442.16162109]
[136.19615173 427.16296387]
[135.99563599 412.16427612]
[135.79512024 397.16561890]
[135.59458923 382.16696167]
[135.39407349 367.16830444]
[135.19355774 352.16964722]
[132.46931458 348.26531982]
[132.15769958 342.61169434]
[135.19355774 336.76861572]
[135.39407349 321.76995850]
[135.59458923 306.77130127]
[124.95182037 290.61618042]
[135.57215881 273.46957397]
[135.37162781 258.47091675]
[135.17111206 243.47225952]
[134.97059631 228.47358704]
[127.06384277 215.85089111]
[134.61596680 201.94851685]
[134.41545105 186.94985962]
[134.21492004 171.95120239]
[89.39659882 172.86431885]
[54.77956009 150.23669434]
[40.35479355 115.19886780]
[47.64601135 81.54656982]
[35.00262833 73.47533417]
[22.35924339 65.40409851]
[9.71586037 57.33286285]
[-2.92752385 49.26162720]
[-15.57090759 41.19039154]
[-28.29997826 43.20369720]
[-38.66075897 36.23432159]
[-41.41086578 24.46522713]
[-53.94522095 16.22569466]
[-66.47957611 7.98616266]
[-79.01393890 -0.25336930]
[-87.88781738 -2.34667325]
[-91.65976715 -8.68776608]
[-104.08285522 -17.09412193]
[-116.56185913 -25.41725159]
[-129.09622192 -33.65678406]
[-137.97009277 -35.75008774]
[-141.74203491 -42.09117889]
[-154.16513062 -50.49753571]
[-166.58822632 -58.90389252]
[-179.36656189 -57.23160172]
[-189.53732300 -64.47547150]
[-191.97181702 -76.31388092]
[-204.28141785 -84.88555908]
[-220.65869141 -85.73246002]
[-227.87185669 -100.46006012]
[-218.50064087 -113.91786194]
[-202.18534851 -112.26163483]
[-195.70974731 -97.19515991]
[-183.40014648 -88.62348175]
[-165.85264587 -88.07579803]
[-158.18186951 -71.32698059]
[-145.75877380 -62.92062759]
[-133.33567810 -54.51427078]
[-120.85668182 -46.19113922]
[-108.32232666 -37.95161057]
[-101.01869965 -36.90561676]
[-95.67649841 -29.51721191]
[-83.25341034 -21.11085701]
[-70.77440643 -12.78772640]
[-58.24004745 -4.54819489]
[-45.70568848 3.69133711]
[-33.17133331 11.93086910]
[-15.61547089 12.00924873]
[-7.49967289 28.54700661]
[5.14371157 36.61824417]
[17.78709602 44.68947983]
[30.43047905 52.76071167]
[43.07386398 60.83194733]
[55.71724701 68.90318298]
[68.96669006 61.87094879]
[69.36769104 46.87630844]
[69.76869965 31.88167191]
[70.16970825 16.88703156]
[70.57071686 1.89239347]
[68.09824371 -2.66724300]
[67.65504456 -7.26139116]
[68.91700745 -11.11493015]
[71.30043793 -13.69207287]
[72.30233002 -28.65857697]
[73.30421448 -43.62508011]
[74.30610657 -58.59158325]
[64.86986542 -71.56605530]
[69.26905823 -86.99416351]
[84.12899780 -93.04079437]
[98.05041504 -85.06748199]
[100.35398865 -69.19067383]
[89.27261353 -57.58969116]
[88.27072144 -42.62318802]
[87.26882935 -27.65668678]
[86.26694489 -12.69018364]
[85.56535339 2.29340005]
[85.16434479 17.28803825]
[84.76334381 32.28267670]
[84.36233521 47.27731705]
[83.96132660 62.27195358]
[91.01282501 64.82663727]
[91.51407623 49.83501434]
[105.92685699 45.67908478]
[114.33315277 58.10221863]
[105.11582184 69.93599701]
[112.16731262 72.49067688]
[121.46356201 60.71868515]
[130.75981140 48.94669342]
[140.05606079 37.17470169]
[141.88606262 20.87798119]
[157.02069092 14.56330872]
[169.89073181 24.72667885]
[167.25659180 40.91288757]
[151.82804871 46.47095108]
[142.53179932 58.24294281]
[133.23554993 70.01493073]
[123.93930817 81.78692627]
[128.89538574 87.41606903]
[143.76361084 104.30351257]
[156.61825562 96.57316589]
[169.47290039 88.84281921]
[182.32752991 81.11247253]
[195.18217468 73.38213348]
[205.63990784 60.03776550]
[221.35775757 66.39272308]
[219.60229492 83.25553894]
[202.91252136 86.23677063]
[190.05787659 93.96711731]
[177.20324707 101.69745636]
[164.34860229 109.42780304]
[151.49395752 117.15814972]
[153.52372742 124.37826538]
[167.96395874 120.31871796]
[182.40419006 116.25917816]
[196.93955994 119.96359253]
[186.46372986 130.69940186]
[172.02349854 134.75894165]
[157.58328247 138.81848145]
[159.61305237 146.03860474]
[174.61271667 145.93833923]
[189.61238098 145.83807373]
[204.61204529 145.73780823]
[219.61170959 145.63754272]
[235.41006470 139.48547363]
[245.69514465 152.96336365]
[235.59115601 166.57754517]
[219.71197510 160.63722229]
[204.71231079 160.73747253]
[189.71264648 160.83773804]
[174.71298218 160.93800354]
[159.71330261 161.03826904]
[149.21359253 171.75067139]
[149.41410828 186.74934387]
[149.61462402 201.74800110]
[157.53572083 215.44349670]
[149.96925354 228.27307129]
[150.16976929 243.27172852]
[150.37028503 258.27038574]
[150.57081604 273.26904297]
[158.77491760 280.37866211]
[161.66148376 290.61618042]
[158.51210022 300.54605103]
[150.59326172 306.97180176]
[150.39273071 321.97045898]
[150.19221497 336.96911621]
[150.19221497 351.96911621]
[150.39273071 366.96780396]
[150.59326172 381.96646118]
[150.79377747 396.96511841]
[150.99429321 411.96377563]
[151.19482422 426.96243286]
[151.39533997 441.96109009]
[165.34710693 451.53771973]
[170.78178406 467.38787842]
[165.74278259 483.19372559]
[152.40713501 492.77951050]
[152.80815125 507.77416992]
[153.20915222 522.76879883]
[155.92179871 527.18975830]
[156.60990906 531.75366211]
[155.55572510 535.66912842]
[153.31343079 538.36999512]
[153.11291504 553.36865234]
[152.91239929 568.36730957]
[152.81213379 583.36700439]
[152.81213379 598.36700439]
[168.50851440 604.59295654]
[180.57823181 616.34960938]
[187.18553162 631.80926514]
[187.34065247 648.58416748]
[181.04806519 664.09515381]
[169.30140686 675.96826172]
[153.92663574 682.39819336]
[154.32765198 697.39288330]
[157.68074036 705.87133789]
[154.63244629 712.59033203]
[154.83296204 727.58898926]
[155.03347778 742.58764648]
[155.23400879 757.58630371]
[167.98559570 766.42803955]
[173.07301331 781.08746338]
[168.54003906 795.92767334]
[156.12968445 805.24230957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 230]
[5 229]
[6 228]
[7 227]
[8 225]
[9 224]
[18 217]
[19 216]
[21 215]
[22 214]
[23 213]
[24 209]
[25 208]
[26 207]
[31 203]
[32 202]
[33 201]
[34 200]
[35 199]
[36 198]
[37 197]
[40 196]
[41 195]
[42 194]
[44 190]
[45 189]
[46 188]
[47 187]
[49 185]
[50 184]
[51 183]
[55 105]
[56 104]
[57 103]
[58 102]
[59 101]
[60 100]
[63 98]
[64 97]
[65 96]
[66 95]
[68 94]
[69 93]
[70 91]
[71 90]
[73 89]
[74 88]
[75 87]
[78 85]
[79 84]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[114 126]
[115 125]
[116 124]
[117 123]
[137 148]
[138 147]
[139 146]
[140 145]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
[170 182]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
