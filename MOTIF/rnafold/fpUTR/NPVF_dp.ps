%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:58:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NPVF)
} def

/sequence { (\
AUAAACAUUGGGCUGCACAUAGAGACUUAAUUUUAGAUUUAGACAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.004650199 ubox
1 38 0.069111990 ubox
2 7 0.006020880 ubox
2 10 0.004555352 ubox
2 35 0.693802791 ubox
2 37 0.077014810 ubox
2 41 0.044777418 ubox
3 9 0.005370289 ubox
3 28 0.003206090 ubox
3 32 0.019588590 ubox
3 33 0.065658677 ubox
3 34 0.733029086 ubox
3 39 0.010477267 ubox
3 40 0.047160908 ubox
4 8 0.004458383 ubox
4 31 0.014890830 ubox
4 32 0.071483119 ubox
4 33 0.736082365 ubox
4 34 0.317530694 ubox
4 38 0.009918646 ubox
4 39 0.044788889 ubox
4 40 0.007294447 ubox
5 31 0.049459218 ubox
5 32 0.714946385 ubox
5 33 0.329580767 ubox
5 38 0.039775674 ubox
5 39 0.006997798 ubox
6 15 0.010917610 ubox
7 14 0.010022053 ubox
7 20 0.005095969 ubox
7 31 0.934051880 ubox
7 38 0.005915050 ubox
8 19 0.004923313 ubox
8 30 0.974355263 ubox
8 36 0.003244482 ubox
8 37 0.006009083 ubox
8 42 0.007334321 ubox
8 46 0.092944159 ubox
8 47 0.013725693 ubox
9 17 0.017993123 ubox
9 19 0.019044775 ubox
9 29 0.985566856 ubox
9 35 0.003761206 ubox
9 36 0.005229488 ubox
9 41 0.010777610 ubox
9 45 0.106783143 ubox
9 46 0.017373891 ubox
10 16 0.020177584 ubox
10 18 0.021223349 ubox
10 27 0.057207919 ubox
10 28 0.985801632 ubox
10 34 0.003525222 ubox
10 40 0.011116790 ubox
10 44 0.108990863 ubox
11 26 0.065685363 ubox
11 27 0.987101729 ubox
11 28 0.003493070 ubox
11 39 0.011189386 ubox
12 26 0.988023596 ubox
12 38 0.011093753 ubox
13 22 0.084030674 ubox
13 24 0.985238196 ubox
13 36 0.014342209 ubox
13 42 0.114634492 ubox
14 21 0.083753223 ubox
14 23 0.984138218 ubox
14 35 0.014258930 ubox
14 41 0.114439445 ubox
14 45 0.007610347 ubox
15 20 0.072798952 ubox
15 34 0.013198532 ubox
15 40 0.107191580 ubox
15 44 0.008196457 ubox
19 38 0.015419977 ubox
20 29 0.010365901 ubox
20 35 0.114522078 ubox
20 37 0.015519342 ubox
20 41 0.016315077 ubox
21 27 0.006346066 ubox
21 28 0.010692602 ubox
21 33 0.014632279 ubox
21 34 0.115269704 ubox
21 40 0.017072122 ubox
22 26 0.006489871 ubox
22 27 0.008741931 ubox
22 32 0.016062712 ubox
22 33 0.115165282 ubox
22 34 0.016663187 ubox
22 39 0.017361804 ubox
22 40 0.006121244 ubox
23 31 0.016619545 ubox
23 32 0.114433903 ubox
23 33 0.017980138 ubox
23 34 0.015390978 ubox
23 38 0.017249607 ubox
23 39 0.006442639 ubox
23 40 0.009601653 ubox
24 31 0.080951145 ubox
24 32 0.018396050 ubox
24 33 0.015859284 ubox
24 38 0.005652783 ubox
24 39 0.010752301 ubox
25 31 0.017915290 ubox
25 32 0.014788587 ubox
25 38 0.010822623 ubox
26 36 0.020817598 ubox
26 42 0.024969645 ubox
27 35 0.020490844 ubox
27 36 0.008848525 ubox
27 41 0.023906471 ubox
27 42 0.020662770 ubox
28 35 0.010700721 ubox
28 41 0.027075412 ubox
29 34 0.010615962 ubox
29 39 0.023524620 ubox
29 40 0.028136214 ubox
30 38 0.028579719 ubox
30 39 0.028378283 ubox
31 37 0.029394490 ubox
31 42 0.008134886 ubox
31 43 0.020819684 ubox
31 46 0.006012051 ubox
31 47 0.005701655 ubox
32 36 0.027322403 ubox
32 41 0.020505616 ubox
32 42 0.029703808 ubox
32 43 0.142331125 ubox
32 45 0.007390291 ubox
32 46 0.011287339 ubox
32 47 0.012630098 ubox
33 41 0.031310593 ubox
33 42 0.155787917 ubox
33 43 0.021707228 ubox
33 45 0.010916724 ubox
33 46 0.016987548 ubox
33 47 0.006438695 ubox
34 41 0.158885473 ubox
34 42 0.023289206 ubox
34 45 0.016767786 ubox
34 46 0.008502872 ubox
35 40 0.150934407 ubox
38 46 0.029556422 ubox
38 47 0.055579192 ubox
39 45 0.031424477 ubox
39 46 0.071445235 ubox
39 47 0.024299360 ubox
40 45 0.066414135 ubox
40 46 0.031689884 ubox
2 35 0.9500000 lbox
3 34 0.9500000 lbox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
7 31 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
showpage
end
%%EOF
