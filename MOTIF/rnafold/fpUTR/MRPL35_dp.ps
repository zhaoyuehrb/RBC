%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:07 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MRPL35)
} def

/sequence { (\
AUUCUCUUUUGCUCUUGUGCUUUUAAACCCAAAGCGGCCGCCGUAGGCGAAGGUGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 54 0.004327154 ubox
2 51 0.006579897 ubox
2 53 0.003939066 ubox
2 56 0.034519539 ubox
2 57 0.848811334 ubox
2 58 0.029636516 ubox
3 50 0.007569424 ubox
3 52 0.003511787 ubox
3 53 0.005361554 ubox
3 55 0.030862789 ubox
3 56 0.975461996 ubox
3 57 0.030919673 ubox
4 49 0.007653166 ubox
4 52 0.007281832 ubox
4 53 0.006554337 ubox
4 55 0.985781921 ubox
4 58 0.014447617 ubox
5 50 0.006470284 ubox
5 51 0.006183740 ubox
5 52 0.003293809 ubox
5 53 0.083234852 ubox
5 56 0.012022712 ubox
5 57 0.014212607 ubox
6 47 0.004332583 ubox
6 49 0.007371499 ubox
6 52 0.089201534 ubox
6 53 0.986655606 ubox
6 55 0.011860124 ubox
6 58 0.035575617 ubox
7 46 0.004247928 ubox
7 51 0.085625442 ubox
7 52 0.986939043 ubox
7 53 0.006905535 ubox
7 57 0.033295896 ubox
7 58 0.063206244 ubox
8 45 0.003802987 ubox
8 47 0.005951783 ubox
8 50 0.079876766 ubox
8 51 0.986053489 ubox
8 52 0.008987398 ubox
8 53 0.003369355 ubox
8 56 0.029567415 ubox
8 57 0.103318630 ubox
8 58 0.006819762 ubox
9 37 0.015589137 ubox
9 46 0.007093235 ubox
9 49 0.065399836 ubox
9 50 0.987087720 ubox
9 51 0.010330491 ubox
9 52 0.003629354 ubox
9 55 0.023955142 ubox
9 56 0.111485086 ubox
9 57 0.010218585 ubox
10 19 0.004023789 ubox
10 36 0.036309078 ubox
10 45 0.009274070 ubox
10 49 0.984643536 ubox
10 50 0.011008225 ubox
10 51 0.003635244 ubox
10 55 0.112912160 ubox
10 56 0.010519271 ubox
11 16 0.004219098 ubox
11 18 0.088746870 ubox
11 20 0.031347958 ubox
11 35 0.053062943 ubox
11 38 0.045743844 ubox
11 41 0.004974776 ubox
11 44 0.009916667 ubox
11 48 0.977785093 ubox
11 54 0.115619005 ubox
12 17 0.095404519 ubox
12 19 0.031504561 ubox
12 34 0.053087509 ubox
12 37 0.045936239 ubox
12 40 0.005196748 ubox
12 43 0.010307324 ubox
12 46 0.047765557 ubox
12 47 0.973203941 ubox
12 52 0.008431531 ubox
12 53 0.116245337 ubox
13 33 0.051818010 ubox
13 36 0.039581941 ubox
13 37 0.006421452 ubox
13 45 0.064829985 ubox
13 46 0.667414787 ubox
13 47 0.075525408 ubox
13 50 0.011028359 ubox
13 51 0.007732590 ubox
13 52 0.052402243 ubox
13 53 0.018049410 ubox
14 34 0.026831390 ubox
14 36 0.015249078 ubox
14 37 0.055083138 ubox
14 46 0.678133185 ubox
14 47 0.013137336 ubox
14 49 0.013312494 ubox
14 52 0.104160956 ubox
14 53 0.004537728 ubox
14 58 0.005480277 ubox
15 26 0.063399077 ubox
15 27 0.015071572 ubox
15 32 0.066351886 ubox
15 33 0.032100982 ubox
15 34 0.003846875 ubox
15 36 0.047449260 ubox
15 37 0.012134433 ubox
15 45 0.668636011 ubox
15 46 0.027475208 ubox
15 50 0.024442111 ubox
15 51 0.104149564 ubox
15 52 0.004802198 ubox
15 57 0.005632071 ubox
16 25 0.072075084 ubox
16 26 0.017934623 ubox
16 31 0.073018999 ubox
16 32 0.032646863 ubox
16 33 0.010365847 ubox
16 36 0.013407641 ubox
16 40 0.251460207 ubox
16 43 0.478754319 ubox
16 45 0.070480963 ubox
16 46 0.004456773 ubox
16 49 0.022771929 ubox
16 50 0.099620800 ubox
16 51 0.006110467 ubox
16 56 0.005560497 ubox
17 24 0.071456406 ubox
17 28 0.164779210 ubox
17 30 0.071300519 ubox
17 35 0.011142225 ubox
17 38 0.253461272 ubox
17 39 0.256535924 ubox
17 41 0.513100716 ubox
17 42 0.496325296 ubox
17 44 0.071623540 ubox
17 48 0.010420553 ubox
18 25 0.017130192 ubox
18 27 0.166288415 ubox
18 31 0.025666580 ubox
18 34 0.010509810 ubox
18 36 0.661808790 ubox
18 37 0.185838240 ubox
18 40 0.509215134 ubox
18 43 0.028394259 ubox
18 45 0.036318902 ubox
18 47 0.008453252 ubox
18 49 0.032197083 ubox
18 55 0.004173449 ubox
19 24 0.016294675 ubox
19 30 0.028091163 ubox
19 35 0.806044166 ubox
19 38 0.375716994 ubox
19 39 0.306824793 ubox
19 41 0.212898727 ubox
19 42 0.016130361 ubox
19 44 0.038777825 ubox
19 48 0.036060580 ubox
19 54 0.006993867 ubox
20 34 0.811996267 ubox
20 37 0.469924473 ubox
20 40 0.212767180 ubox
20 43 0.038651102 ubox
20 46 0.009044026 ubox
20 47 0.036055158 ubox
20 53 0.007090638 ubox
21 27 0.018068911 ubox
21 32 0.031342292 ubox
21 33 0.807789057 ubox
21 34 0.097065047 ubox
21 36 0.450341141 ubox
21 37 0.029623017 ubox
21 45 0.009567692 ubox
21 46 0.035863206 ubox
21 52 0.007079533 ubox
22 26 0.017490748 ubox
22 31 0.042676999 ubox
22 32 0.796126257 ubox
22 33 0.219218060 ubox
22 34 0.143678074 ubox
22 36 0.028249533 ubox
22 37 0.014168676 ubox
22 45 0.034703007 ubox
22 51 0.007030327 ubox
23 31 0.743263388 ubox
23 32 0.247247572 ubox
23 33 0.156036744 ubox
23 34 0.307366272 ubox
23 36 0.013637341 ubox
23 37 0.025585491 ubox
23 45 0.003775773 ubox
23 50 0.006923544 ubox
24 31 0.239983769 ubox
24 32 0.153197865 ubox
24 33 0.318421141 ubox
24 36 0.025457380 ubox
24 45 0.004174993 ubox
24 49 0.006344721 ubox
27 44 0.003851658 ubox
27 54 0.006277888 ubox
28 37 0.109754470 ubox
28 43 0.003874723 ubox
28 47 0.005672598 ubox
28 53 0.006500735 ubox
29 36 0.109913238 ubox
29 37 0.107153597 ubox
29 46 0.006763602 ubox
29 47 0.011100112 ubox
29 52 0.006464377 ubox
30 36 0.107719616 ubox
30 46 0.016113581 ubox
30 55 0.003813977 ubox
31 54 0.003767921 ubox
34 41 0.025315220 ubox
34 44 0.238087779 ubox
35 40 0.025383875 ubox
35 43 0.246640552 ubox
35 49 0.005462482 ubox
36 42 0.299208990 ubox
36 48 0.006620238 ubox
37 41 0.294711512 ubox
37 44 0.132458116 ubox
37 48 0.165960662 ubox
37 54 0.008907655 ubox
38 43 0.134780897 ubox
38 47 0.168106184 ubox
38 53 0.009267698 ubox
39 46 0.172114282 ubox
39 49 0.114746642 ubox
39 52 0.008518365 ubox
39 55 0.013544871 ubox
40 48 0.119401143 ubox
40 54 0.013656290 ubox
41 47 0.119496241 ubox
41 53 0.013669115 ubox
42 46 0.118780534 ubox
42 49 0.003941249 ubox
42 52 0.013661637 ubox
43 48 0.003952878 ubox
2 57 0.9500000 lbox
3 56 0.9500000 lbox
4 55 0.9500000 lbox
6 53 0.9500000 lbox
7 52 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
11 48 0.9500000 lbox
12 47 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
showpage
end
%%EOF
