%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACAGGGCCAUGCCCUCGGGGCUCAAGGCCAGAGAGGCUCCGCGCUUCCAGGACCCGAGAGCUAAAGAUAAUGAAUGGGAGAGAGCGAGACUGGAGGAGGUAACGAAUAAGUCCCCACCACCUUGCCCAUAACGCGUUGCUUUCAGUCACGUUCCGCGAACUGGCGAAGUUAUAAUAUUAUGAUCACUGUUUUUAAUGGAAG\
) } def
/len { sequence length } bind def

/coor [
[73.98513794 220.75105286]
[79.70473480 206.71318054]
[89.88292694 195.48019409]
[103.29066467 188.40852356]
[101.22836304 173.55096436]
[99.16606140 158.69342041]
[97.10376740 143.83586121]
[82.52494812 140.30624390]
[73.89517212 152.57519531]
[65.26538849 164.84413147]
[56.63560867 177.11306763]
[60.59766769 195.63539124]
[49.94953537 210.91273499]
[31.83270454 213.51475525]
[23.58295822 226.04238892]
[15.33321285 238.57003784]
[7.08346605 251.09767151]
[3.42196727 267.65151978]
[-13.49855042 268.71566772]
[-19.20518303 252.75099182]
[-5.44417095 242.84791565]
[2.80557561 230.32028198]
[11.05532265 217.79264832]
[19.30506897 205.26501465]
[14.63538265 194.84930420]
[15.58552265 183.35400391]
[22.03461838 173.64659119]
[32.47575378 168.20448303]
[44.36666870 168.48329163]
[52.99644852 156.21435547]
[61.62622833 143.94540405]
[70.25601196 131.67646790]
[60.68622208 114.88052368]
[59.55700302 96.22106171]
[66.54154205 79.57025146]
[79.68556976 68.13926697]
[74.29216766 54.14243317]
[68.89877319 40.14560318]
[63.50537109 26.14877510]
[58.11197281 12.15194416]
[43.94300079 5.68062496]
[38.67271805 -8.59098244]
[44.92945099 -22.05905151]
[39.53605270 -36.05588150]
[34.14265442 -50.05271149]
[28.74925613 -64.04954529]
[18.43088722 -74.93674469]
[4.74333239 -81.07277679]
[-8.94422150 -87.20880890]
[-22.63177681 -93.34483337]
[-36.31933212 -99.48086548]
[-50.00688553 -105.61689758]
[-59.17052078 -93.65343475]
[-70.84649658 -84.12619019]
[-84.40514374 -77.54897308]
[-99.11525726 -74.27646637]
[-114.18354034 -74.48516083]
[-128.79737854 -78.16380310]
[-142.16867065 -85.11400604]
[-153.57630920 -94.96095276]
[-162.40512085 -107.17360687]
[-168.17893982 -121.09336853]
[-170.58642578 -135.96954346]
[-169.49771118 -150.99989319]
[-164.97154236 -165.37385559]
[-157.25199890 -178.31623840]
[-146.75538635 -189.12908936]
[-134.04777527 -197.22927856]
[-119.81445312 -202.17999268]
[-104.82302856 -203.71421814]
[-89.88195801 -201.74923706]
[-75.79699707 -196.39099121]
[-63.32773590 -187.92848206]
[-53.14661789 -176.81805420]
[-45.80270004 -163.65888977]
[-41.69203186 -149.16064453]
[-41.03629684 -134.10519409]
[-43.87085342 -119.30445099]
[-30.18330002 -113.16841888]
[-16.49574661 -107.03239441]
[-2.80819225 -100.89636230]
[10.87936211 -94.76033020]
[24.56691551 -88.62430573]
[31.15575790 -92.20719910]
[31.53852654 -107.20231628]
[44.33344269 -99.37300110]
[50.92228317 -102.95589447]
[53.21202469 -117.78010559]
[55.50176239 -132.60430908]
[57.79150009 -147.42851257]
[60.08124161 -162.25271606]
[53.10240173 -173.10348511]
[55.31781769 -185.40599060]
[65.00239563 -192.65910339]
[67.51904297 -207.44648743]
[70.03568268 -222.23385620]
[64.72338867 -237.13655090]
[74.48635101 -248.38528442]
[77.00299072 -263.17266846]
[75.35734558 -272.16259766]
[79.67316437 -278.16662598]
[82.41611481 -292.91369629]
[80.57464600 -299.27154541]
[82.00850677 -304.77691650]
[85.47570801 -308.06765747]
[88.66929626 -322.72375488]
[79.91966248 -335.88504028]
[83.12104034 -351.36169434]
[96.37409210 -359.97167969]
[111.81603241 -356.60684204]
[120.28543091 -343.26351929]
[116.75753021 -327.85800171]
[103.32538605 -319.53015137]
[100.13180542 -304.87405396]
[97.16318512 -290.17074585]
[94.42023468 -275.42367554]
[91.79036713 -260.65603638]
[89.27372742 -245.86863708]
[94.76602173 -232.02365112]
[84.82305908 -219.71722412]
[82.30641937 -204.92984009]
[79.78977966 -190.14247131]
[86.76911163 -174.04325867]
[74.90544891 -159.96298218]
[72.61570740 -145.13877869]
[70.32596588 -130.31457520]
[68.03623199 -115.49036407]
[65.74649048 -100.66616058]
[80.02439880 -96.06819916]
[88.83583832 -83.92906952]
[88.78344727 -68.92916107]
[79.88742065 -56.85187912]
[65.57773590 -52.35377502]
[51.37167358 -57.16915131]
[42.74608612 -69.44293976]
[48.13948441 -55.44610977]
[53.53288269 -41.44927979]
[58.92628098 -27.45244980]
[72.60266113 -21.66520691]
[78.27172852 -7.54726267]
[72.10880280 6.75854540]
[77.50220490 20.75537491]
[82.89559937 34.75220490]
[88.28900146 48.74903488]
[93.68239594 62.74586487]
[113.62300873 61.20783997]
[133.19612122 70.44950104]
[146.60333252 89.49759674]
[161.50436401 91.21784973]
[176.40539551 92.93810272]
[191.30641174 94.65835571]
[200.19519043 92.53311920]
[206.42198181 96.52084351]
[221.29489136 98.46923828]
[236.16781616 100.41763306]
[251.04074097 102.36602783]
[267.53106689 98.42830658]
[275.87985229 113.18411255]
[264.01190186 125.29145813]
[249.09234619 117.23895264]
[234.21942139 115.29055786]
[219.34649658 113.34215546]
[204.47358704 111.39376068]
[189.58616638 109.55938721]
[174.68513489 107.83913422]
[159.78410339 106.11888123]
[144.88307190 104.39862823]
[141.71054077 111.19458771]
[150.30921936 123.48535156]
[135.36547852 124.78650665]
[132.19294739 131.58245850]
[143.08015442 141.90083313]
[153.96736145 152.21920776]
[164.85456848 162.53756714]
[175.74177551 172.85594177]
[186.62898254 183.17430115]
[202.69476318 186.46414185]
[207.62115479 202.10583496]
[196.34033203 214.00856018]
[180.45701599 209.92781067]
[176.31062317 194.06150818]
[165.42341614 183.74314880]
[154.53620911 173.42477417]
[143.64900208 163.10641479]
[132.76179504 152.78804016]
[121.87458038 142.46966553]
[118.47022247 142.49139404]
[115.15953827 142.25518799]
[111.96131897 141.77355957]
[114.02362061 156.63111877]
[116.08592224 171.48866272]
[118.14822388 186.34622192]
[132.97512817 189.49877930]
[145.82797241 197.53495789]
[155.15472412 209.48432922]
[159.82913208 223.90396118]
[159.28672791 239.05261230]
[153.59301758 253.10099792]
[143.43553162 264.35272217]
[130.04084778 271.44909668]
[115.02644348 273.53317261]
[100.20536804 270.35327148]
[87.36734772 262.29345703]
[78.06263733 250.32690430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[8 32]
[9 31]
[10 30]
[11 29]
[14 24]
[15 23]
[16 22]
[17 21]
[36 145]
[37 144]
[38 143]
[39 142]
[40 141]
[43 138]
[44 137]
[45 136]
[46 135]
[47 83]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[87 128]
[88 127]
[89 126]
[90 125]
[91 124]
[94 122]
[95 121]
[96 120]
[98 118]
[99 117]
[101 116]
[102 115]
[105 114]
[106 113]
[148 167]
[149 166]
[150 165]
[151 164]
[153 163]
[154 162]
[155 161]
[156 160]
[171 186]
[172 185]
[173 184]
[174 183]
[175 182]
[176 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
