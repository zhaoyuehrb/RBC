%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TMPRSS11F)
} def

/sequence { (\
GAUACAGAUCAGAUGGUGACUGAAUAGAAGCUGCCCCAGUCCUGGGUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.187356586 ubox
1 48 0.066365671 ubox
1 49 0.056581606 ubox
2 9 0.185882005 ubox
2 14 0.005109437 ubox
2 17 0.005997091 ubox
2 25 0.472797310 ubox
2 47 0.076623297 ubox
2 48 0.053711828 ubox
3 8 0.175655574 ubox
3 13 0.005147978 ubox
3 16 0.005643175 ubox
3 18 0.009136820 ubox
3 22 0.005354279 ubox
3 24 0.477850596 ubox
3 26 0.085376068 ubox
3 33 0.009023011 ubox
3 46 0.057647725 ubox
4 17 0.011699917 ubox
4 21 0.005519084 ubox
4 25 0.082806613 ubox
4 32 0.010273556 ubox
4 47 0.028000295 ubox
5 15 0.030217984 ubox
5 16 0.011435909 ubox
5 18 0.009032899 ubox
5 22 0.906806906 ubox
5 33 0.105476604 ubox
5 44 0.109174186 ubox
5 46 0.029407201 ubox
6 14 0.030210467 ubox
6 17 0.008420608 ubox
6 21 0.909891344 ubox
6 32 0.106031910 ubox
6 43 0.109135634 ubox
6 48 0.031450524 ubox
7 20 0.909835759 ubox
7 31 0.105805082 ubox
7 41 0.026648612 ubox
7 42 0.105846325 ubox
7 47 0.033630466 ubox
7 48 0.120878756 ubox
7 49 0.048041543 ubox
8 14 0.007827573 ubox
8 17 0.113595830 ubox
8 25 0.057366259 ubox
8 40 0.036555400 ubox
8 47 0.128332059 ubox
8 48 0.045518635 ubox
9 13 0.007182454 ubox
9 16 0.120288122 ubox
9 19 0.902473936 ubox
9 23 0.222542315 ubox
9 24 0.041427958 ubox
9 28 0.025953698 ubox
9 39 0.035299366 ubox
9 45 0.099205033 ubox
9 46 0.124202543 ubox
10 15 0.120605720 ubox
10 18 0.905655436 ubox
10 22 0.241312531 ubox
10 27 0.026278812 ubox
10 33 0.033403063 ubox
10 44 0.127890188 ubox
10 45 0.118913645 ubox
11 17 0.888549930 ubox
11 21 0.241354463 ubox
11 32 0.034442528 ubox
11 43 0.132343361 ubox
11 48 0.018793925 ubox
12 20 0.240641946 ubox
12 31 0.034360159 ubox
12 41 0.067021896 ubox
12 42 0.125306566 ubox
12 47 0.020419106 ubox
12 48 0.058803734 ubox
12 49 0.027052235 ubox
13 25 0.035527925 ubox
13 40 0.078731862 ubox
13 47 0.062442925 ubox
13 48 0.026061519 ubox
14 22 0.008553835 ubox
14 24 0.035681539 ubox
14 26 0.011074018 ubox
14 33 0.077255015 ubox
14 38 0.018750357 ubox
14 39 0.076984149 ubox
14 44 0.116969984 ubox
14 46 0.059928969 ubox
15 21 0.014732558 ubox
15 25 0.010209309 ubox
15 32 0.153964741 ubox
15 35 0.113978186 ubox
15 36 0.010131913 ubox
15 37 0.018844034 ubox
15 42 0.028331766 ubox
15 43 0.176201836 ubox
16 20 0.014918262 ubox
16 25 0.033183872 ubox
16 31 0.160441035 ubox
16 34 0.123528492 ubox
16 35 0.008461561 ubox
16 36 0.018207773 ubox
16 41 0.023635090 ubox
16 42 0.184117504 ubox
17 24 0.033786582 ubox
17 26 0.016846303 ubox
17 30 0.160163059 ubox
17 33 0.123333503 ubox
17 44 0.004481959 ubox
18 25 0.014618484 ubox
18 32 0.100264907 ubox
18 41 0.239717299 ubox
18 48 0.013593587 ubox
18 49 0.003311280 ubox
19 40 0.240898440 ubox
19 47 0.014894046 ubox
20 27 0.157786940 ubox
20 30 0.127953782 ubox
20 39 0.241103585 ubox
20 46 0.015131207 ubox
21 26 0.147803137 ubox
21 29 0.127706442 ubox
21 38 0.240997714 ubox
21 45 0.014961567 ubox
22 37 0.240310060 ubox
22 49 0.019457995 ubox
23 47 0.008648607 ubox
23 48 0.029324280 ubox
24 47 0.030370612 ubox
25 33 0.191640108 ubox
25 44 0.052614960 ubox
25 46 0.026515970 ubox
26 32 0.216822021 ubox
26 43 0.061568274 ubox
26 48 0.010981555 ubox
27 31 0.214181886 ubox
27 41 0.013325881 ubox
27 42 0.062197503 ubox
27 47 0.011163852 ubox
27 48 0.024264169 ubox
27 49 0.189157127 ubox
28 40 0.009248719 ubox
28 47 0.023590541 ubox
28 48 0.190287346 ubox
29 43 0.009653683 ubox
29 47 0.165195904 ubox
29 48 0.042146531 ubox
30 40 0.095804521 ubox
30 42 0.008593083 ubox
30 47 0.044641371 ubox
31 39 0.099132650 ubox
31 45 0.050457415 ubox
31 46 0.034206770 ubox
32 38 0.099063095 ubox
32 44 0.049418639 ubox
32 45 0.021037989 ubox
33 37 0.097499698 ubox
33 40 0.031491588 ubox
33 43 0.025780208 ubox
33 47 0.470913472 ubox
34 39 0.031944864 ubox
34 45 0.020617356 ubox
34 46 0.479206427 ubox
35 44 0.020971937 ubox
35 45 0.461643971 ubox
35 46 0.822842140 ubox
36 44 0.442440610 ubox
36 45 0.839347125 ubox
36 46 0.017072522 ubox
37 44 0.849182723 ubox
37 45 0.016888340 ubox
38 43 0.773855116 ubox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
9 19 0.9500000 lbox
10 18 0.9500000 lbox
11 17 0.9500000 lbox
35 46 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
showpage
end
%%EOF
