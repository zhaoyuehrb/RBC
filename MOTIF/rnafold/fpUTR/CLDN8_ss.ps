%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUUGUAAGUUUACCUGUUGCAGCCAAUAGCAGGGCCAUCUCAGCCAGCCAGCACUGGAUACUAUCUGGCCAGAAGUAGCAAAGCAGCUCUUAUUUGAAAAACCACUGGGUUCCGAGUUCAUUACUACAGGAAAAACUGUUCUCUUCUGUGGCACAGAGAACCCUGCUUCAAAGCAGAAGUAGCAGUUCCGGAGUCCAGCUGGCUAAAACUCAUCCCAGAGGAUA\
) } def
/len { sequence length } bind def

/coor [
[70.60775757 257.68963623]
[56.92287064 251.54765320]
[47.87959290 239.58023071]
[45.70781708 224.73829651]
[50.94305801 210.68153381]
[62.29441071 200.87608337]
[76.96286011 197.73976135]
[91.33147430 202.04592896]
[101.85662079 212.73170471]
[100.61248779 197.78338623]
[99.36835480 182.83506775]
[98.12422180 167.88674927]
[96.88008881 152.93844604]
[85.28782654 152.38204956]
[73.80648804 149.25588989]
[63.01140976 143.58674622]
[53.44045258 155.13648987]
[43.86949921 166.68624878]
[34.29854584 178.23600769]
[24.72759247 189.78576660]
[15.15663910 201.33551025]
[18.14454651 216.68499756]
[10.52178574 230.33883667]
[-4.11241198 235.85012817]
[-18.84822273 230.61659241]
[-26.72784996 217.10935974]
[-24.03077316 201.70611572]
[-12.03046989 191.67980957]
[3.60688400 191.76455688]
[13.17783737 180.21481323]
[22.74879074 168.66505432]
[32.31974411 157.11529541]
[41.89069748 145.56553650]
[51.46165466 134.01579285]
[44.47666931 120.74137115]
[29.53732109 122.08892059]
[14.59797287 123.43646240]
[-0.34137523 124.78400421]
[-15.28072357 126.13154602]
[-20.06891251 142.31985474]
[-30.68821335 155.39569092]
[-45.48519516 163.36801147]
[-62.17313766 165.03689575]
[-78.18540955 160.17411804]
[-91.07022858 149.55381775]
[-98.86604309 134.82946777]
[-113.76237488 136.58995056]
[-128.65870667 138.35043335]
[-143.55503845 140.11091614]
[-153.14349365 152.67424011]
[-168.81806946 154.69494629]
[-181.27931213 144.97419739]
[-183.13418579 129.27914429]
[-173.28224182 116.92137146]
[-157.56843567 115.23252869]
[-145.31552124 125.21458435]
[-130.41918945 123.45410156]
[-115.52285767 121.69361877]
[-100.62652588 119.93313599]
[-97.85243225 106.98010254]
[-91.21336365 95.49084473]
[-81.34229279 86.58876801]
[-69.18898773 81.14928436]
[-55.92864609 79.71374512]
[-42.84824753 82.43556976]
[-31.22164345 89.06400299]
[-22.18552399 98.96715546]
[-16.62826729 111.19219971]
[-1.68891859 109.84465790]
[13.25043011 108.49710846]
[28.18977737 107.14956665]
[43.12912750 105.80202484]
[44.73021317 92.41754913]
[49.35910797 80.10459900]
[56.60547638 69.51840210]
[45.67378998 59.24717331]
[34.74210358 48.97594070]
[26.35543060 45.38603973]
[23.73144913 38.48611450]
[12.94295502 28.06458092]
[2.15446091 17.64304543]
[-13.64113998 18.16699982]
[-25.12356186 7.30746269]
[-25.48048592 -8.49279594]
[-14.50015545 -19.85976028]
[1.30299270 -20.04961586]
[12.55323219 -8.94972134]
[12.57599545 6.85455132]
[23.36449051 17.27608681]
[34.15298462 27.69762039]
[45.01333618 38.04425049]
[55.94502258 48.31548691]
[66.87670898 58.58671951]
[73.45296478 54.09283829]
[80.62811279 50.63460159]
[88.24028015 48.29002762]
[96.11774445 47.11199951]
[104.08277893 47.12710190]
[111.95571899 48.33499146]
[119.55893707 50.70841599]
[126.72092438 54.19383621]
[133.28009033 58.71261978]
[139.08848572 64.16282654]
[144.01504517 70.42150116]
[157.52314758 63.89988708]
[171.03123474 57.37827682]
[184.49388123 50.76334763]
[197.91041565 44.05541611]
[211.32696533 37.34748840]
[224.74351501 30.63955879]
[238.16006470 23.93163109]
[251.57659912 17.22370148]
[264.99316406 10.51577282]
[278.40969849 3.80784392]
[291.82623291 -2.90008497]
[305.24279785 -9.60801411]
[314.57192993 -21.35395432]
[318.06857300 -35.94071198]
[321.56518555 -50.52747345]
[314.43746948 -64.90019226]
[321.36071777 -79.37252045]
[337.02401733 -82.84252167]
[349.41180420 -72.64831543]
[349.02127075 -56.61001587]
[336.15194702 -47.03083801]
[332.65533447 -32.44408035]
[329.15869141 -17.85731888]
[342.92584229 -11.90200710]
[351.16204834 -24.43854713]
[359.39825439 -36.97508621]
[367.63446045 -49.51162720]
[364.18560791 -64.93501282]
[372.72329712 -78.23476410]
[388.18228149 -81.52037048]
[401.39102173 -72.84254456]
[404.51300049 -57.34967804]
[395.69601440 -44.23342514]
[380.17098999 -41.27541733]
[371.93478394 -28.73887825]
[363.69857788 -16.20233727]
[355.46237183 -3.66579700]
[360.48342896 1.90547359]
[371.62597656 -8.13662720]
[386.29666138 -11.26237488]
[381.66806030 3.00591397]
[370.52551270 13.04801464]
[375.54656982 18.61928558]
[388.86898804 11.72632504]
[402.19143677 4.83336401]
[415.51385498 -2.05959630]
[428.83627319 -8.95255661]
[440.12551880 -21.60125351]
[455.40505981 -14.25471306]
[452.57543945 2.46143270]
[435.72924805 4.36987162]
[422.40682983 11.26283169]
[409.08438110 18.15579224]
[395.76196289 25.04875374]
[382.43954468 31.94171333]
[385.02154541 46.71781921]
[399.89208984 48.68428421]
[414.76263428 50.65075302]
[429.63314819 52.61722183]
[446.48861694 45.18959808]
[459.97274780 56.42866516]
[474.86907959 58.18914795]
[489.76541138 59.94963074]
[504.66174316 61.71011734]
[519.55804443 63.47060013]
[534.45440674 65.23108673]
[549.35070801 66.99156952]
[561.60363770 57.00951385]
[577.31744385 58.69835281]
[587.16937256 71.05612946]
[585.31451416 86.75119019]
[572.85327148 96.47193909]
[557.17871094 94.45122528]
[547.59027100 81.88790131]
[532.69390869 80.12741852]
[517.79760742 78.36693573]
[502.90124512 76.60644531]
[488.00491333 74.84596252]
[473.10858154 73.08547974]
[458.21224976 71.32499695]
[448.52990723 78.56411743]
[436.11169434 77.22694397]
[427.66668701 67.48776245]
[412.79614258 65.52129364]
[397.92559814 63.55482864]
[383.05508423 61.58835983]
[311.95071411 3.80853152]
[298.53417969 10.51646042]
[285.11761475 17.22439003]
[271.70108032 23.93231773]
[258.28454590 30.64024734]
[244.86798096 37.34817505]
[231.45144653 44.05610657]
[218.03489685 50.76403427]
[204.61834717 57.47196198]
[191.20181274 64.17989349]
[186.62998962 69.97581482]
[177.55285645 70.88636780]
[164.04475403 77.40798187]
[150.53666687 83.92959595]
[152.73516846 105.58702087]
[146.04740906 126.30300140]
[131.60034180 142.58673096]
[111.82839966 151.69430542]
[113.07253265 166.64262390]
[114.31667328 181.59094238]
[115.56080627 196.53924561]
[116.80493927 211.48756409]
[123.29924774 221.70634460]
[119.79267883 231.90295410]
[122.88427734 246.58090210]
[125.97587585 261.25885010]
[129.06747437 275.93679810]
[140.41494751 287.77600098]
[135.57643127 303.44509888]
[119.52938080 306.82507324]
[108.78161621 294.43887329]
[114.38952637 279.02838135]
[111.29792786 264.35043335]
[108.20633698 249.67250061]
[105.11473846 234.99455261]
[98.09224701 248.24916077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 212]
[10 211]
[11 210]
[12 209]
[13 208]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[35 72]
[36 71]
[37 70]
[38 69]
[39 68]
[46 59]
[47 58]
[48 57]
[49 56]
[75 93]
[76 92]
[77 91]
[79 90]
[80 89]
[81 88]
[104 204]
[105 203]
[106 202]
[107 200]
[108 199]
[109 198]
[110 197]
[111 196]
[112 195]
[113 194]
[114 193]
[115 192]
[116 191]
[117 127]
[118 126]
[119 125]
[128 141]
[129 140]
[130 139]
[131 138]
[147 159]
[148 158]
[149 157]
[150 156]
[151 155]
[160 190]
[161 189]
[162 188]
[163 187]
[165 184]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[214 225]
[215 224]
[216 223]
[217 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
