%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUAGGGGAAAAUAAGCCAGAUGGAUAAAGGAAGUGCUGGUCACCCUGGAGGUGCACUGGUUUGGGGAAGGCUCCUGGCCCCCACAGCCCUCUUCGGAGCCUGAGCCCGGCUCUCCUCACUCACCUCAACCCCCAGGCGGCCCCUCCACAGGGCCCCUCUCCUGCCUGGACGGCUCUGCUGGUCUCCCCGUCCCCUGGAGAAGAACAAGGCC\
) } def
/len { sequence length } bind def

/coor [
[109.47393799 368.14416504]
[119.80575562 357.09387207]
[133.04759216 349.77893066]
[130.18908691 335.05380249]
[127.33056641 320.32870483]
[124.47205353 305.60357666]
[121.61354065 290.87847900]
[118.75502014 276.15335083]
[115.89650726 261.42825317]
[101.44519043 257.73706055]
[89.98246002 248.09780884]
[83.81636047 234.38139343]
[84.21876526 219.28640747]
[91.16339111 205.80831909]
[103.32042694 196.64492798]
[100.46191406 181.91981506]
[97.49488831 167.21618652]
[94.41950226 152.53483582]
[91.34412384 137.85348511]
[88.26874542 123.17213440]
[82.45335388 106.31584167]
[89.61877441 95.47399902]
[80.73056030 83.39097595]
[71.84233856 71.30794525]
[62.95412064 59.22491837]
[58.92083359 57.62598038]
[55.90834808 55.08308029]
[54.08800888 52.03274155]
[53.47189713 48.92230225]
[53.92309570 46.15708160]
[45.76279068 33.57100296]
[42.73020935 48.26125336]
[31.04197884 57.66259766]
[16.04314232 57.47579193]
[4.59268427 47.78625870]
[1.92691302 33.02503967]
[9.26488876 19.94245148]
[23.25094795 14.52117920]
[37.48879623 19.24002647]
[30.66908455 5.87995481]
[23.84937286 -7.48011780]
[17.02966118 -20.84018898]
[5.02379131 -25.55146790]
[-0.38164717 -36.81825638]
[3.21905065 -48.36548233]
[-3.40287542 -61.82468033]
[-10.02480125 -75.28388214]
[-16.64672661 -88.74308777]
[-23.26865387 -102.20228577]
[-36.30342865 -111.16918182]
[-34.97950363 -126.00482941]
[-41.60143280 -139.46403503]
[-48.22335815 -152.92323303]
[-60.71288681 -153.40888977]
[-71.74705505 -159.12486267]
[-79.26055908 -168.93220520]
[-81.87657928 -180.93283081]
[-79.15870667 -192.83677673]
[-71.68242645 -202.39915466]
[-77.90450287 -216.04780579]
[-84.12657928 -229.69645691]
[-101.05083466 -240.64962769]
[-98.36203003 -259.79882812]
[-104.98395538 -273.25802612]
[-111.60588074 -286.71722412]
[-118.22780609 -300.17642212]
[-124.84973145 -313.63562012]
[-131.47166443 -327.09481812]
[-162.66983032 -336.09762573]
[-171.37887573 -348.31042480]
[-180.08790588 -360.52325439]
[-188.79695129 -372.73605347]
[-197.50599670 -384.94885254]
[-206.21504211 -397.16165161]
[-214.92408752 -409.37445068]
[-236.75848389 -417.20382690]
[-238.14727783 -439.61203003]
[-247.73248291 -451.14996338]
[-257.31768799 -462.68789673]
[-272.95492554 -462.58386230]
[-284.96759033 -472.59533691]
[-287.68368530 -487.99523926]
[-279.82073975 -501.51217651]
[-265.09140015 -506.76391602]
[-250.45040894 -501.27069092]
[-242.81080627 -487.62625122]
[-245.77975464 -472.27310181]
[-236.19454956 -460.73516846]
[-226.60934448 -449.19723511]
[-219.60113525 -450.33163452]
[-212.56723022 -448.95431519]
[-206.38816833 -445.18966675]
[-201.85403442 -439.46389771]
[-199.56352234 -432.45712280]
[-199.84519958 -425.02270508]
[-202.71128845 -418.08349609]
[-194.00224304 -405.87069702]
[-185.29319763 -393.65789795]
[-176.58415222 -381.44509888]
[-167.87510681 -369.23226929]
[-159.16606140 -357.01947021]
[-150.45701599 -344.80667114]
[-136.07315063 -349.06161499]
[-135.40965271 -364.04693604]
[-134.74615479 -379.03222656]
[-134.08265686 -394.01754761]
[-139.42245483 -410.10864258]
[-125.43843079 -419.69421387]
[-112.35630035 -408.91024780]
[-119.09733582 -393.35406494]
[-119.76083374 -378.36874390]
[-120.42433929 -363.38342285]
[-121.08783722 -348.39810181]
[-118.01245880 -333.71676636]
[-111.39053345 -320.25753784]
[-104.76860046 -306.79833984]
[-98.14667511 -293.33914185]
[-91.52474976 -279.87994385]
[-84.90282440 -266.42074585]
[-74.97459412 -264.01138306]
[-67.86145782 -256.37512207]
[-66.08811951 -245.86822510]
[-70.47792053 -235.91853333]
[-64.25584412 -222.26988220]
[-58.03377151 -208.62121582]
[-40.58202362 -205.91003418]
[-28.14263916 -193.15243530]
[-25.83255196 -175.32583618]
[-34.76415634 -159.54516602]
[-28.14223099 -146.08595276]
[-21.52030373 -132.62675476]
[-8.95917511 -124.62255096]
[-9.80945206 -108.82421112]
[-3.18752646 -95.36501312]
[3.43439960 -81.90580750]
[10.05632591 -68.44660950]
[16.67825127 -54.98740768]
[31.76580429 -46.02328491]
[30.38973427 -27.65990257]
[37.20944595 -14.29982948]
[44.02915573 -0.93975735]
[50.84886932 12.42031479]
[58.34886932 25.41069603]
[66.50917816 37.99677658]
[75.03714752 50.33669662]
[83.92536926 62.41972733]
[92.81358337 74.50275421]
[101.70180511 86.58577728]
[114.69218445 94.08577728]
[129.60050964 95.74169159]
[144.50881958 97.39759827]
[159.41714478 99.05351257]
[174.32545471 100.70941925]
[189.23377991 102.36533356]
[204.14210510 104.02124023]
[210.65330505 97.20508575]
[219.44012451 94.19287872]
[228.49162292 95.54032898]
[235.79702759 100.82025909]
[239.79240417 108.74634552]
[254.61288452 111.06008148]
[269.43338013 113.37381744]
[283.18716431 105.11470795]
[298.16879272 110.85317230]
[302.88565063 126.18714905]
[293.71936035 139.35371399]
[277.70150757 140.25262451]
[267.11962891 128.19429016]
[252.29914856 125.88056183]
[237.47866821 123.56682587]
[218.94630432 132.65249634]
[202.48619080 118.92955780]
[187.57786560 117.27365112]
[172.66955566 115.61773682]
[157.76123047 113.96183014]
[142.85292053 112.30591583]
[127.94459534 110.65000916]
[113.03627777 108.99410248]
[102.95009613 120.09674835]
[106.02547455 134.77810669]
[109.10085297 149.45945740]
[112.17623901 164.14080811]
[116.99793243 171.89712524]
[115.18702698 179.06129456]
[118.04553986 193.78640747]
[132.74807739 197.73567200]
[144.23114014 207.63648987]
[150.25210571 221.48452759]
[149.66587830 236.51174927]
[142.64224243 249.73968506]
[130.62161255 258.56973267]
[133.48013306 273.29486084]
[136.33865356 288.01995850]
[139.19715881 302.74505615]
[142.05567932 317.47018433]
[144.91419983 332.19528198]
[147.77270508 346.92041016]
[162.78967285 348.74960327]
[176.50553894 355.13165283]
[187.57656860 365.44122314]
[194.91813660 378.66833496]
[197.81098938 393.51712036]
[195.97171021 408.53286743]
[189.58050537 422.24444580]
[179.26350403 433.30856323]
[166.03146362 440.64126587]
[151.18074036 443.52416992]
[136.16624451 441.67483521]
[122.45894623 435.27444458]
[111.40174103 424.95001221]
[104.07790375 411.71307373]
[101.20495605 396.86044312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[9 191]
[15 185]
[16 184]
[17 182]
[18 181]
[19 180]
[20 179]
[22 148]
[23 147]
[24 146]
[25 145]
[30 144]
[31 143]
[39 142]
[40 141]
[41 140]
[42 139]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[51 131]
[52 130]
[53 129]
[59 125]
[60 124]
[61 123]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 102]
[70 101]
[71 100]
[72 99]
[73 98]
[74 97]
[75 96]
[77 89]
[78 88]
[79 87]
[103 113]
[104 112]
[105 111]
[106 110]
[149 178]
[150 177]
[151 176]
[152 175]
[153 174]
[154 173]
[155 172]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
