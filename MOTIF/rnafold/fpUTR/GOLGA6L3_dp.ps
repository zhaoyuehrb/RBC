%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:18 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GOLGA6L3)
} def

/sequence { (\
AGUUGCACAGCUGCCUGGUAGGUGACUGGAGGCAUUGAGCAGUGCUCACUGGUAUUUCGCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.038966953 ubox
1 16 0.004106816 ubox
1 27 0.018083141 ubox
1 36 0.013881999 ubox
1 46 0.050746812 ubox
1 50 0.692639345 ubox
1 56 0.033882814 ubox
1 57 0.065475715 ubox
1 61 0.171122138 ubox
2 8 0.018582146 ubox
2 11 0.049403225 ubox
2 14 0.007004517 ubox
2 15 0.004232650 ubox
2 26 0.019814510 ubox
2 33 0.056426003 ubox
2 35 0.016888573 ubox
2 40 0.011540061 ubox
2 43 0.022823930 ubox
2 45 0.058094218 ubox
2 49 0.738330093 ubox
2 55 0.046318197 ubox
2 56 0.083406758 ubox
2 60 0.181159747 ubox
3 7 0.017262697 ubox
3 10 0.048950994 ubox
3 13 0.006867046 ubox
3 21 0.017148841 ubox
3 25 0.019721402 ubox
3 31 0.006183723 ubox
3 32 0.056442578 ubox
3 34 0.012201499 ubox
3 39 0.011530670 ubox
3 42 0.087306644 ubox
3 44 0.054148964 ubox
3 48 0.729726649 ubox
3 52 0.004183802 ubox
3 54 0.034487485 ubox
3 59 0.179175206 ubox
4 9 0.040781138 ubox
4 20 0.033929970 ubox
4 24 0.017612169 ubox
4 30 0.007996054 ubox
4 31 0.055305598 ubox
4 34 0.057010746 ubox
4 38 0.011012965 ubox
4 41 0.193826862 ubox
4 48 0.018930656 ubox
4 51 0.005463871 ubox
4 54 0.253389169 ubox
4 59 0.008452595 ubox
5 11 0.038203108 ubox
5 14 0.012473804 ubox
5 19 0.035804177 ubox
5 23 0.017123110 ubox
5 33 0.064270940 ubox
5 40 0.225809391 ubox
5 45 0.801233378 ubox
5 47 0.011839025 ubox
5 53 0.267674241 ubox
5 58 0.010232568 ubox
5 60 0.044561025 ubox
6 10 0.037990332 ubox
6 13 0.012527058 ubox
6 18 0.035895665 ubox
6 22 0.017122029 ubox
6 24 0.011082968 ubox
6 28 0.009786530 ubox
6 32 0.064159606 ubox
6 37 0.014172105 ubox
6 39 0.225703527 ubox
6 44 0.801764689 ubox
6 51 0.005651441 ubox
6 52 0.268319252 ubox
6 59 0.044576564 ubox
6 62 0.007520010 ubox
7 12 0.010695961 ubox
7 19 0.003194318 ubox
7 23 0.011212795 ubox
7 27 0.009063750 ubox
7 36 0.013739615 ubox
7 43 0.801551411 ubox
7 50 0.005293023 ubox
7 53 0.010797120 ubox
7 61 0.005339625 ubox
8 17 0.036875548 ubox
8 22 0.011175790 ubox
8 24 0.036724135 ubox
8 28 0.096176868 ubox
8 37 0.249840738 ubox
8 42 0.798573274 ubox
8 51 0.272051938 ubox
8 52 0.009086335 ubox
8 62 0.437300143 ubox
9 16 0.036919792 ubox
9 23 0.036941769 ubox
9 27 0.096465297 ubox
9 36 0.250432891 ubox
9 50 0.272235942 ubox
9 56 0.005890975 ubox
9 57 0.005508092 ubox
9 61 0.442594212 ubox
10 15 0.036339856 ubox
10 19 0.013928794 ubox
10 26 0.096406430 ubox
10 33 0.018126562 ubox
10 35 0.245090666 ubox
10 40 0.800181876 ubox
10 49 0.270563320 ubox
10 53 0.012065081 ubox
10 55 0.006011422 ubox
10 56 0.005579301 ubox
10 60 0.443261073 ubox
11 18 0.014290908 ubox
11 21 0.039958179 ubox
11 32 0.018297471 ubox
11 39 0.801166349 ubox
11 52 0.012332320 ubox
11 59 0.442548658 ubox
12 17 0.013373528 ubox
12 20 0.040077347 ubox
12 24 0.087006255 ubox
12 31 0.017357889 ubox
12 34 0.771079853 ubox
12 37 0.035795404 ubox
12 38 0.563262026 ubox
12 48 0.008181046 ubox
12 51 0.009994982 ubox
12 54 0.091685583 ubox
13 19 0.040073804 ubox
13 23 0.111986335 ubox
13 33 0.986547132 ubox
13 36 0.005639859 ubox
13 45 0.012363552 ubox
13 53 0.093487820 ubox
13 58 0.006901842 ubox
14 18 0.039837722 ubox
14 22 0.112857730 ubox
14 29 0.014771848 ubox
14 32 0.986944629 ubox
14 44 0.012399318 ubox
14 52 0.093241255 ubox
15 21 0.112832545 ubox
15 28 0.014781738 ubox
15 29 0.025489477 ubox
15 31 0.986604588 ubox
15 32 0.010242287 ubox
15 42 0.012423243 ubox
15 51 0.092763639 ubox
15 52 0.012918780 ubox
16 20 0.101649504 ubox
16 28 0.044647480 ubox
16 30 0.969111621 ubox
16 31 0.011883817 ubox
16 34 0.003412399 ubox
16 41 0.012424558 ubox
16 48 0.006340036 ubox
16 51 0.015195488 ubox
16 54 0.005939344 ubox
16 62 0.004587133 ubox
17 27 0.185495761 ubox
17 33 0.003479279 ubox
17 40 0.012385333 ubox
17 46 0.003433127 ubox
17 47 0.006777633 ubox
17 50 0.085447679 ubox
17 53 0.006303600 ubox
17 61 0.011604634 ubox
18 26 0.194954133 ubox
18 45 0.007119917 ubox
18 49 0.091154892 ubox
18 55 0.003283622 ubox
18 60 0.012283076 ubox
19 25 0.190732861 ubox
19 28 0.927416745 ubox
19 44 0.007105188 ubox
19 48 0.089844398 ubox
19 51 0.005859465 ubox
19 54 0.003278439 ubox
19 59 0.012133730 ubox
20 27 0.955695891 ubox
20 43 0.006864436 ubox
20 46 0.007792832 ubox
20 50 0.006095643 ubox
20 57 0.010231257 ubox
21 26 0.959212577 ubox
21 27 0.064506519 ubox
21 36 0.012557643 ubox
21 45 0.007432035 ubox
21 46 0.085696367 ubox
21 47 0.024322408 ubox
21 49 0.004940662 ubox
21 50 0.020602161 ubox
21 56 0.011395404 ubox
21 57 0.004342937 ubox
21 58 0.004462619 ubox
21 61 0.030113385 ubox
22 26 0.063840881 ubox
22 33 0.003399225 ubox
22 35 0.013633024 ubox
22 45 0.087978584 ubox
22 46 0.020378373 ubox
22 49 0.021109666 ubox
22 55 0.012235502 ubox
22 56 0.004335905 ubox
22 57 0.004014452 ubox
22 60 0.036006796 ubox
23 32 0.003399925 ubox
23 34 0.013757338 ubox
23 41 0.008600819 ubox
23 44 0.085368363 ubox
23 48 0.021412701 ubox
23 54 0.012141160 ubox
23 59 0.036034765 ubox
24 33 0.013854394 ubox
24 40 0.009838546 ubox
24 43 0.035182177 ubox
24 47 0.021388794 ubox
24 53 0.008787780 ubox
24 58 0.036429468 ubox
25 43 0.082736748 ubox
25 46 0.017072198 ubox
25 53 0.063149626 ubox
25 57 0.030713532 ubox
26 32 0.010662008 ubox
26 39 0.014343940 ubox
26 42 0.090366089 ubox
26 52 0.069103479 ubox
27 31 0.009613567 ubox
27 34 0.005695630 ubox
27 38 0.014373590 ubox
27 41 0.090332031 ubox
27 51 0.068816591 ubox
27 59 0.012415390 ubox
28 33 0.006478710 ubox
28 40 0.089661107 ubox
28 50 0.068347579 ubox
28 56 0.006586462 ubox
28 57 0.006327077 ubox
28 58 0.029613993 ubox
29 36 0.019337812 ubox
29 47 0.016147166 ubox
29 49 0.068352396 ubox
29 55 0.007486277 ubox
29 56 0.015037235 ubox
29 57 0.030037483 ubox
29 58 0.032802097 ubox
30 35 0.019052778 ubox
30 36 0.005589893 ubox
30 46 0.015606427 ubox
30 50 0.004222734 ubox
30 55 0.015479177 ubox
30 56 0.029880385 ubox
30 57 0.032641549 ubox
31 35 0.004544379 ubox
31 45 0.011212297 ubox
31 46 0.057841706 ubox
31 47 0.036943740 ubox
31 49 0.004289753 ubox
31 50 0.005237384 ubox
31 55 0.023793502 ubox
31 56 0.029732911 ubox
31 58 0.003440232 ubox
31 61 0.006512294 ubox
32 40 0.012869681 ubox
32 45 0.072571930 ubox
32 46 0.004137430 ubox
32 49 0.005397578 ubox
32 53 0.027840378 ubox
32 55 0.025646975 ubox
32 57 0.003232712 ubox
32 60 0.007096181 ubox
33 39 0.014036771 ubox
33 44 0.073528385 ubox
33 51 0.054665357 ubox
33 52 0.026478389 ubox
33 59 0.007056706 ubox
34 43 0.073463573 ubox
34 50 0.067951659 ubox
34 53 0.020050859 ubox
34 55 0.006591055 ubox
35 42 0.072611574 ubox
35 52 0.022511987 ubox
35 54 0.008726524 ubox
36 41 0.060493671 ubox
36 48 0.453939626 ubox
36 51 0.009250499 ubox
36 54 0.010695374 ubox
36 59 0.013747585 ubox
36 62 0.004224544 ubox
37 47 0.511082436 ubox
37 53 0.011275231 ubox
37 56 0.005009561 ubox
37 57 0.005190961 ubox
37 58 0.070207886 ubox
37 61 0.003225214 ubox
38 46 0.511154504 ubox
38 55 0.005111534 ubox
38 56 0.005660938 ubox
38 57 0.069247327 ubox
38 61 0.136076344 ubox
39 45 0.511215662 ubox
39 53 0.014936685 ubox
39 55 0.005068661 ubox
39 56 0.048684998 ubox
39 60 0.139738894 ubox
40 44 0.507499334 ubox
40 51 0.062392108 ubox
40 52 0.011149581 ubox
40 59 0.139460611 ubox
40 62 0.011723688 ubox
41 50 0.064507115 ubox
41 56 0.152421167 ubox
41 57 0.027082171 ubox
41 61 0.021278450 ubox
42 49 0.065352099 ubox
42 55 0.242398885 ubox
42 56 0.021133406 ubox
42 60 0.025882379 ubox
43 48 0.061147297 ubox
43 54 0.253512165 ubox
43 59 0.025513561 ubox
44 53 0.256535721 ubox
44 58 0.023014774 ubox
44 60 0.030978121 ubox
45 52 0.256848585 ubox
45 59 0.030985143 ubox
46 51 0.229536572 ubox
46 52 0.013718563 ubox
47 51 0.036857874 ubox
47 62 0.088326797 ubox
48 61 0.089540680 ubox
50 59 0.135198844 ubox
50 62 0.093129854 ubox
51 57 0.018722268 ubox
51 58 0.327193061 ubox
51 61 0.436065023 ubox
52 56 0.016127628 ubox
52 57 0.291274001 ubox
52 60 0.457224846 ubox
53 59 0.448656128 ubox
53 62 0.019162766 ubox
54 61 0.021954950 ubox
1 50 0.9500000 lbox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
5 45 0.9500000 lbox
6 44 0.9500000 lbox
7 43 0.9500000 lbox
8 42 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
21 26 0.9500000 lbox
showpage
end
%%EOF
