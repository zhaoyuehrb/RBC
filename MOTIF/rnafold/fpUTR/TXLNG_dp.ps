%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TXLNG)
} def

/sequence { (\
CCUGCGAGAUUCUGUGCCCCUUGUCGGGCCGCUUGUUUGGCUGCUGCCGUCACCUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 27 0.043143292 ubox
1 28 0.076580070 ubox
1 40 0.046254064 ubox
2 8 0.042472708 ubox
2 26 0.044775525 ubox
2 27 0.078030872 ubox
2 39 0.049253268 ubox
2 40 0.006709777 ubox
3 7 0.038407604 ubox
3 16 0.007213059 ubox
3 26 0.077973756 ubox
3 35 0.006014746 ubox
3 39 0.006713309 ubox
3 43 0.014362323 ubox
3 46 0.003667017 ubox
3 49 0.005770411 ubox
3 52 0.024851663 ubox
4 13 0.006469166 ubox
4 15 0.058150386 ubox
4 17 0.021366210 ubox
4 24 0.047619241 ubox
4 25 0.077557977 ubox
4 30 0.003554696 ubox
4 32 0.242364980 ubox
4 36 0.813645619 ubox
4 38 0.007475454 ubox
4 41 0.237121920 ubox
4 44 0.013693790 ubox
4 47 0.008826410 ubox
4 50 0.027534389 ubox
4 51 0.026743962 ubox
5 14 0.059971595 ubox
5 16 0.021451597 ubox
5 23 0.091296139 ubox
5 31 0.242748610 ubox
5 35 0.854723671 ubox
5 39 0.015083035 ubox
5 40 0.237493958 ubox
5 43 0.013667235 ubox
5 46 0.008911788 ubox
5 49 0.034482441 ubox
6 12 0.057592761 ubox
6 13 0.047022869 ubox
6 15 0.019782378 ubox
6 22 0.091275872 ubox
6 30 0.240126368 ubox
6 34 0.855700353 ubox
6 37 0.017252153 ubox
6 38 0.039344176 ubox
6 42 0.011468711 ubox
6 45 0.006426586 ubox
6 48 0.013655893 ubox
6 51 0.029869259 ubox
6 56 0.194767028 ubox
7 11 0.050371022 ubox
7 13 0.056572489 ubox
7 21 0.091319930 ubox
7 33 0.856320449 ubox
7 34 0.008658299 ubox
7 36 0.018185516 ubox
7 37 0.042208711 ubox
7 38 0.272903234 ubox
7 42 0.004283834 ubox
7 45 0.005755479 ubox
7 50 0.027030362 ubox
7 55 0.196316893 ubox
8 12 0.057348664 ubox
8 20 0.091135228 ubox
8 32 0.853031257 ubox
8 33 0.008914073 ubox
8 34 0.014413549 ubox
8 36 0.041334542 ubox
8 37 0.285740424 ubox
8 38 0.025881898 ubox
8 41 0.004767701 ubox
8 44 0.006359581 ubox
8 51 0.050207621 ubox
8 54 0.195722103 ubox
8 56 0.013080181 ubox
9 15 0.024401205 ubox
9 33 0.016878245 ubox
9 36 0.287606218 ubox
9 37 0.031283934 ubox
9 50 0.049677584 ubox
9 55 0.012355378 ubox
10 14 0.023009967 ubox
10 35 0.278813578 ubox
10 49 0.045263052 ubox
11 28 0.013469841 ubox
12 27 0.017887379 ubox
12 28 0.009697183 ubox
13 26 0.017920271 ubox
13 27 0.009583936 ubox
13 31 0.807539875 ubox
13 35 0.006914664 ubox
13 49 0.004187589 ubox
13 52 0.004874654 ubox
14 25 0.017893638 ubox
14 29 0.008406482 ubox
14 30 0.843223125 ubox
14 32 0.348954349 ubox
14 34 0.004074476 ubox
14 48 0.003318834 ubox
14 51 0.004911981 ubox
14 53 0.008031737 ubox
15 28 0.003944512 ubox
15 31 0.351485307 ubox
15 52 0.007728699 ubox
16 24 0.016243971 ubox
16 29 0.953068716 ubox
16 30 0.283135570 ubox
16 32 0.019181334 ubox
16 47 0.003430554 ubox
16 51 0.005211975 ubox
17 23 0.016641925 ubox
17 27 0.006458381 ubox
17 28 0.974926578 ubox
17 31 0.019176795 ubox
17 46 0.003432034 ubox
18 26 0.006717824 ubox
18 27 0.973914011 ubox
18 28 0.199540430 ubox
19 26 0.971241454 ubox
19 27 0.204695799 ubox
19 28 0.008503723 ubox
20 26 0.209326455 ubox
20 27 0.008705591 ubox
21 26 0.008250363 ubox
22 52 0.021714954 ubox
23 51 0.024516942 ubox
25 49 0.026749374 ubox
26 38 0.003199316 ubox
26 48 0.026710494 ubox
26 55 0.003216124 ubox
27 37 0.003275478 ubox
27 42 0.005844340 ubox
27 45 0.008764079 ubox
27 47 0.025611746 ubox
27 48 0.014708053 ubox
27 54 0.003754623 ubox
28 36 0.005575512 ubox
28 41 0.016494187 ubox
28 44 0.031297776 ubox
28 47 0.016105949 ubox
28 50 0.003823794 ubox
28 53 0.003942112 ubox
29 35 0.006223577 ubox
29 40 0.016664790 ubox
29 43 0.031486917 ubox
29 46 0.016465404 ubox
29 49 0.004161207 ubox
30 39 0.016715744 ubox
30 43 0.003841433 ubox
31 38 0.012979913 ubox
31 41 0.037373553 ubox
31 44 0.016605875 ubox
31 47 0.007361184 ubox
31 50 0.006588099 ubox
32 40 0.037423035 ubox
32 43 0.016611453 ubox
32 46 0.007471685 ubox
32 49 0.006855701 ubox
33 39 0.036974601 ubox
34 52 0.208780073 ubox
35 41 0.009845116 ubox
35 44 0.007729626 ubox
35 50 0.010223481 ubox
35 51 0.235842134 ubox
35 53 0.195185782 ubox
36 40 0.009217143 ubox
36 43 0.007660001 ubox
36 49 0.012138972 ubox
36 52 0.193804662 ubox
38 49 0.703003576 ubox
38 52 0.059095913 ubox
39 48 0.965176544 ubox
39 51 0.065884204 ubox
39 54 0.037978019 ubox
39 55 0.004709449 ubox
40 47 0.965953420 ubox
40 50 0.065559536 ubox
40 53 0.038037798 ubox
40 54 0.005261094 ubox
41 46 0.965454094 ubox
41 49 0.065607495 ubox
42 49 0.017915540 ubox
42 52 0.046004943 ubox
43 48 0.027686135 ubox
43 50 0.065370447 ubox
43 51 0.049721885 ubox
44 49 0.081391857 ubox
45 52 0.024194759 ubox
46 51 0.026846766 ubox
4 36 0.9500000 lbox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
7 33 0.9500000 lbox
8 32 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
41 46 0.9500000 lbox
showpage
end
%%EOF
