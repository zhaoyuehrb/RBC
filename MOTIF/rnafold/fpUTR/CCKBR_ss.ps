%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:02:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACUCCCGAGCCAGGGAGGGGGUGCACAGUCACCUGGCGGGACAGAGGCUGGCGGAGGGACGGGAACCCAGGCGGGGCGAGCCGCGGGAGAGUGGAGGGCAGGCGCCUGGGCUGGGGGCGGGGACCAGGCGGGGCAGGGGGCAGGGAGAGGAGGGCGGCGGGAGCCUGAGCCGGAAUCGCAGCGUGAGCAGGUGGAGCCGCGUUGGGAGCCCGCCGGGUCGAGCUGAGUAAGGCGGCGGGCUCGGCGGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[54.90022278 182.83345032]
[54.00684738 193.25297546]
[48.92177200 202.29881287]
[40.61454391 208.38232422]
[30.61352730 210.46690369]
[26.08343697 224.76649475]
[21.55334854 239.06608582]
[17.02325821 253.36567688]
[12.49316978 267.66528320]
[19.99321365 281.57659912]
[15.37978077 296.69253540]
[1.38994038 304.04507446]
[-13.67638397 299.27209473]
[-20.88060951 285.20529175]
[-15.94859600 270.19027710]
[-1.80642104 263.13519287]
[2.72366810 248.83558655]
[7.25375748 234.53599548]
[11.78384686 220.23640442]
[16.31393623 205.93681335]
[6.11210918 189.31265259]
[11.55318642 170.26303101]
[29.54451180 161.26048279]
[33.54520416 146.80384827]
[37.54589462 132.34719849]
[25.44318199 123.48580933]
[12.86981010 131.66567993]
[7.40297413 138.94703674]
[0.09157530 139.86769104]
[-12.58122826 147.89265442]
[-25.25403214 155.91761780]
[-37.92683411 163.94258118]
[-50.59963989 171.96754456]
[-54.17306137 184.34135437]
[-64.86974335 190.76843262]
[-76.68888092 188.27822876]
[-89.45920563 196.14707947]
[-102.22953796 204.01593018]
[-105.63693237 219.44853210]
[-119.00359344 227.88108826]
[-134.39930725 224.31071472]
[-142.69007874 210.85565186]
[-138.95712280 195.49855042]
[-125.41516113 187.35049438]
[-110.09838104 191.24559021]
[-97.32805634 183.37675476]
[-84.55772400 175.50790405]
[-77.04883575 159.63310242]
[-58.62460327 159.29473877]
[-45.95180130 151.26977539]
[-33.27899551 143.24481201]
[-20.60619164 135.21984863]
[-7.93338919 127.19488525]
[4.68993568 119.09231567]
[17.26330566 110.91243744]
[17.58534241 103.41935730]
[2.62953162 104.56987762]
[-12.32628059 105.72039795]
[-27.28209114 106.87091827]
[-41.14411926 112.60189819]
[-54.89919662 106.61876678]
[-60.15783310 92.57075500]
[-53.71268082 79.02600861]
[-39.49477005 74.24574280]
[-26.17643929 81.14485168]
[-11.37448692 83.57429504]
[3.42746472 86.00374603]
[18.22941780 88.43318939]
[18.55145454 80.94010925]
[6.72625732 71.71163177]
[-5.09893894 62.48315811]
[-16.92413521 53.25468445]
[-28.74933243 44.02621078]
[-40.57452774 34.79773712]
[-52.39972305 25.56926346]
[-64.22492218 16.34078979]
[-81.55927277 18.79368782]
[-95.03016663 8.14923573]
[-96.58908081 -8.60907555]
[-108.52663422 -17.69174194]
[-123.31629944 -13.38222790]
[-137.64024353 -18.54730034]
[-146.07643127 -31.00903702]
[-145.56312561 -45.87088394]
[-157.50067139 -54.95355225]
[-169.43823242 -64.03621674]
[-181.37577820 -73.11888123]
[-197.00059509 -70.74384308]
[-209.67871094 -80.18000031]
[-211.88841248 -95.82904816]
[-202.31874084 -108.40668488]
[-186.64720154 -110.45082092]
[-174.17144775 -100.74871063]
[-172.29312134 -85.05643463]
[-160.35556030 -75.97377014]
[-148.41801453 -66.89110565]
[-136.48045349 -57.80843735]
[-122.29386902 -62.26699448]
[-108.03350830 -57.46010971]
[-99.23515320 -45.03262329]
[-99.44396973 -29.62929535]
[-87.50641632 -20.54662895]
[-75.12365723 -24.04935646]
[-62.79738617 -19.72427368]
[-55.09201431 -8.93595791]
[-54.99644852 4.51559401]
[-43.17124939 13.74406815]
[-31.34605408 22.97254181]
[-19.52085876 32.20101547]
[-7.69566154 41.42948914]
[4.12953520 50.65796280]
[15.95473099 59.88643646]
[27.77992821 69.11491394]
[40.73952103 61.56183624]
[38.53856277 46.72418594]
[36.33760452 31.88653946]
[34.13665009 17.04889297]
[20.03297997 10.79668713]
[11.56751060 -2.10057497]
[11.44154072 -17.52742386]
[19.69526672 -30.56120872]
[33.69495392 -37.04289627]
[48.97335434 -34.90420532]
[60.65518570 -24.82757950]
[65.01281738 -10.02843761]
[60.65574646 4.77086878]
[48.97429657 14.84793472]
[51.17525482 29.68558311]
[53.37621307 44.52323151]
[55.57716751 59.36087799]
[90.29073334 47.65927505]
[120.66201782 58.61083984]
[129.44898987 46.45398331]
[138.23594666 34.29712677]
[135.92814636 18.89219856]
[145.01255798 6.68858910]
[159.71302795 4.58338165]
[168.49998474 -7.57347631]
[177.28695679 -19.73033333]
[186.07392883 -31.88719177]
[181.86050415 -51.55901718]
[193.33332825 -67.71040344]
[212.68714905 -70.13322449]
[221.02070618 -82.60527039]
[212.27516174 -95.01010132]
[208.60511780 -109.73746490]
[210.50692749 -124.79560089]
[217.72337341 -138.14802551]
[229.27850342 -147.98893738]
[243.60957336 -152.98742676]
[258.77841187 -152.46748352]
[272.73361206 -146.49943542]
[283.58776855 -135.89041138]
[289.87298584 -122.07518768]
[290.73925781 -106.92217255]
[286.06939697 -92.48067474]
[276.49499512 -80.70378876]
[263.31088257 -73.18424988]
[248.30009460 -70.93901062]
[233.49275208 -74.27171326]
[225.15919495 -61.79967117]
[229.78091431 -52.68893433]
[230.22213745 -42.40183640]
[226.33717346 -32.77934265]
[218.76049805 -25.57111168]
[208.80415344 -22.11740112]
[198.23078918 -23.10022354]
[189.44381714 -10.94336605]
[180.65684509 1.21349168]
[171.86988831 13.37034988]
[174.48219299 27.98922157]
[165.74414062 40.44317627]
[150.39280701 43.08409119]
[141.60585022 55.24095154]
[132.81887817 67.39781189]
[137.86547852 73.42581940]
[141.81848145 80.22132874]
[144.56372070 87.58806610]
[146.02191162 95.31327820]
[160.99368286 96.23308563]
[175.24234009 89.35658264]
[187.47120667 97.85977173]
[202.44297791 98.77957916]
[217.41474915 99.69939423]
[232.38652039 100.61920166]
[247.35829163 101.53901672]
[262.33004761 102.45882416]
[277.30181885 103.37863922]
[286.03033447 100.78678894]
[292.45132446 104.40270996]
[307.41070557 105.50617981]
[318.18594360 94.17356873]
[333.73043823 92.46985626]
[346.70455933 101.19948578]
[350.98229980 116.24059296]
[344.54385376 130.49122620]
[330.42926025 137.22267151]
[315.30300903 133.25654602]
[306.30722046 120.46553802]
[291.34786987 119.36206818]
[276.38201904 118.35041046]
[261.41024780 117.43059540]
[246.43847656 116.51078796]
[231.46670532 115.59097290]
[216.49493408 114.67116547]
[201.52316284 113.75135040]
[186.55139160 112.83154297]
[173.37361145 119.77383423]
[160.07386780 111.20485687]
[145.10209656 110.28504944]
[140.25016785 122.80143738]
[132.00889587 133.39778137]
[140.49487305 145.76663208]
[148.98085022 158.13546753]
[157.46682739 170.50430298]
[165.95280457 182.87313843]
[174.43878174 195.24198914]
[182.92475891 207.61082458]
[191.41073608 219.97966003]
[199.89671326 232.34851074]
[208.38269043 244.71734619]
[216.86866760 257.08618164]
[229.36561584 260.20175171]
[236.18205261 270.65460205]
[234.12857056 282.55740356]
[242.46212769 295.02944946]
[250.79568481 307.50149536]
[259.12924194 319.97354126]
[274.69253540 321.49597168]
[285.59912109 332.70223999]
[286.69921875 348.30108643]
[277.47341919 360.92718506]
[262.27786255 364.61892700]
[248.28739929 357.63311768]
[242.10792542 343.26831055]
[246.65719604 328.30706787]
[238.32363892 315.83502197]
[229.99008179 303.36300659]
[221.65652466 290.89096069]
[205.51609802 283.97146606]
[204.49983215 265.57217407]
[196.01385498 253.20332336]
[187.52787781 240.83448792]
[179.04190063 228.46563721]
[170.55592346 216.09680176]
[162.06994629 203.72796631]
[153.58396912 191.35911560]
[145.09799194 178.99028015]
[136.61201477 166.62144470]
[128.12603760 154.25260925]
[119.64005280 141.88375854]
[87.23836517 151.68135071]
[52.00253677 136.34790039]
[48.00184250 150.80453491]
[44.00115204 165.26118469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[23 255]
[24 254]
[25 253]
[26 55]
[27 54]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[36 47]
[37 46]
[38 45]
[69 113]
[70 112]
[71 111]
[72 110]
[73 109]
[74 108]
[75 107]
[76 106]
[79 102]
[80 101]
[84 97]
[85 96]
[86 95]
[87 94]
[114 130]
[115 129]
[116 128]
[117 127]
[132 175]
[133 174]
[134 173]
[137 170]
[138 169]
[139 168]
[140 167]
[143 161]
[144 160]
[179 210]
[180 209]
[182 207]
[183 206]
[184 205]
[185 204]
[186 203]
[187 202]
[188 201]
[190 200]
[191 199]
[212 251]
[213 250]
[214 249]
[215 248]
[216 247]
[217 246]
[218 245]
[219 244]
[220 243]
[221 242]
[222 241]
[225 239]
[226 238]
[227 237]
[228 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
