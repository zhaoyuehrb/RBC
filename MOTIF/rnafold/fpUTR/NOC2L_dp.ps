%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NOC2L)
} def

/sequence { (\
GUGCGCAGCCGCGCGGCAUUCUGGGGCCGGAAGUGGGGUGCACGCUUCGGGUUGGUGUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.008153670 ubox
1 14 0.651572200 ubox
1 17 0.093549698 ubox
1 19 0.013408650 ubox
1 43 0.222164548 ubox
1 45 0.021751456 ubox
1 58 0.006133918 ubox
2 11 0.008142298 ubox
2 13 0.651717748 ubox
2 15 0.233124153 ubox
2 16 0.066146180 ubox
2 18 0.014861147 ubox
2 42 0.224843185 ubox
2 44 0.021742093 ubox
2 57 0.021147810 ubox
3 9 0.003301884 ubox
3 10 0.007487602 ubox
3 12 0.652406450 ubox
3 14 0.715715762 ubox
3 17 0.015289712 ubox
3 41 0.231195121 ubox
3 43 0.021752226 ubox
3 56 0.037535863 ubox
3 58 0.064434208 ubox
4 8 0.004348020 ubox
4 11 0.652360950 ubox
4 13 0.716425495 ubox
4 15 0.017722506 ubox
4 16 0.011020211 ubox
4 40 0.231204531 ubox
4 55 0.038322317 ubox
4 57 0.067671482 ubox
5 10 0.621123811 ubox
5 12 0.716433482 ubox
5 14 0.021861345 ubox
5 39 0.231012189 ubox
5 41 0.024773365 ubox
5 56 0.065933356 ubox
6 11 0.715408936 ubox
6 13 0.021861007 ubox
6 38 0.230923059 ubox
6 40 0.024784878 ubox
6 54 0.060072320 ubox
6 55 0.051539058 ubox
7 39 0.024086760 ubox
7 53 0.072781170 ubox
8 17 0.017214487 ubox
8 39 0.006503063 ubox
8 52 0.075716365 ubox
9 16 0.017246928 ubox
9 36 0.231389687 ubox
9 37 0.019303045 ubox
9 38 0.009829932 ubox
9 50 0.021603199 ubox
9 51 0.074618165 ubox
10 15 0.017222787 ubox
10 35 0.231684187 ubox
10 36 0.016801147 ubox
10 37 0.009905996 ubox
10 49 0.025348313 ubox
10 50 0.073383326 ubox
11 34 0.231656272 ubox
11 45 0.008738452 ubox
11 48 0.028097750 ubox
12 33 0.231037964 ubox
12 35 0.013707795 ubox
12 44 0.008758318 ubox
12 49 0.032921869 ubox
13 34 0.013636253 ubox
13 43 0.008720150 ubox
13 45 0.053760261 ubox
13 48 0.010684470 ubox
13 58 0.007490959 ubox
14 29 0.235691569 ubox
14 33 0.012229859 ubox
14 44 0.054135760 ubox
14 57 0.008498809 ubox
15 21 0.008105263 ubox
15 22 0.007371663 ubox
15 28 0.238796373 ubox
15 43 0.053933148 ubox
15 46 0.007441746 ubox
15 56 0.015965237 ubox
15 59 0.899830642 ubox
16 20 0.005315085 ubox
16 21 0.007729069 ubox
16 27 0.238812589 ubox
16 41 0.054943884 ubox
16 45 0.007584468 ubox
16 56 0.007211212 ubox
16 58 0.955312158 ubox
17 23 0.013501864 ubox
17 26 0.238743708 ubox
17 40 0.054983786 ubox
17 44 0.007574579 ubox
17 54 0.021228602 ubox
17 55 0.007070131 ubox
17 57 0.959601458 ubox
18 22 0.011348785 ubox
18 39 0.054948349 ubox
18 53 0.020992042 ubox
18 56 0.955138534 ubox
18 58 0.053161665 ubox
19 25 0.028298162 ubox
19 32 0.011978115 ubox
19 38 0.054542131 ubox
19 55 0.908739190 ubox
19 57 0.054027666 ubox
20 24 0.024074362 ubox
20 25 0.006185435 ubox
20 31 0.015130219 ubox
20 37 0.053718053 ubox
20 51 0.031575987 ubox
20 54 0.853767061 ubox
20 55 0.195805148 ubox
21 25 0.010007799 ubox
21 30 0.015518238 ubox
21 36 0.053472645 ubox
21 50 0.037450378 ubox
21 51 0.003523281 ubox
21 54 0.274738541 ubox
21 55 0.205700203 ubox
22 29 0.015582500 ubox
22 35 0.052800574 ubox
22 49 0.037471631 ubox
22 54 0.210071304 ubox
22 57 0.011426728 ubox
23 28 0.015702002 ubox
23 34 0.041296838 ubox
23 48 0.037526311 ubox
23 53 0.112449383 ubox
23 56 0.015767066 ubox
23 59 0.013136894 ubox
24 47 0.037425545 ubox
24 52 0.038603138 ubox
24 53 0.131196477 ubox
24 58 0.013763564 ubox
24 59 0.003506837 ubox
25 46 0.037500783 ubox
25 52 0.126673456 ubox
25 53 0.907133165 ubox
26 34 0.023588784 ubox
26 45 0.037551537 ubox
26 52 0.956202588 ubox
26 56 0.012505396 ubox
27 33 0.023968509 ubox
27 36 0.006359488 ubox
27 44 0.036984288 ubox
27 50 0.118266987 ubox
27 51 0.961348004 ubox
27 55 0.012446545 ubox
28 35 0.006743582 ubox
28 44 0.006282366 ubox
28 49 0.118468216 ubox
28 50 0.960885985 ubox
28 54 0.012386752 ubox
29 34 0.006135429 ubox
29 43 0.008238038 ubox
29 48 0.100814310 ubox
29 53 0.011998060 ubox
30 47 0.078202227 ubox
30 48 0.963963466 ubox
30 52 0.003567886 ubox
31 46 0.064584328 ubox
31 47 0.966674920 ubox
32 46 0.967369480 ubox
33 41 0.004413675 ubox
33 43 0.066297986 ubox
33 45 0.968673703 ubox
34 40 0.004372432 ubox
34 42 0.068172854 ubox
34 44 0.968126927 ubox
34 49 0.003998644 ubox
35 41 0.071706672 ubox
35 43 0.967541649 ubox
35 48 0.004598777 ubox
36 47 0.004609397 ubox
37 46 0.004678437 ubox
38 45 0.004704385 ubox
39 44 0.004518060 ubox
42 58 0.051202858 ubox
43 57 0.064012961 ubox
44 48 0.006658157 ubox
44 52 0.059340795 ubox
44 53 0.004459257 ubox
44 56 0.137515539 ubox
44 58 0.085742010 ubox
45 51 0.061975889 ubox
45 55 0.140889251 ubox
45 57 0.089396009 ubox
46 50 0.055864292 ubox
46 54 0.139266980 ubox
46 55 0.008579325 ubox
47 54 0.009141673 ubox
47 55 0.074322662 ubox
48 54 0.088660051 ubox
48 57 0.025938161 ubox
49 53 0.054875795 ubox
49 56 0.024711913 ubox
49 59 0.012100615 ubox
50 58 0.012014494 ubox
50 59 0.009597866 ubox
51 58 0.008106239 ubox
52 57 0.005453217 ubox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
35 43 0.9500000 lbox
showpage
end
%%EOF
