%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGCGAGGUUGCUGCAGUGCAUUCGGUGGUAGUUUGGUGUCAGUCCUGUGUCUUGUCGGUCCUUCUAAACGUGUCCCCUUACGAUGCUGGCUCGCAACCACCUGGAAGUUGACUAAGGGGAGAAGGAGUCUCGUUGGAAAACGGAGGCACAAUUCUGUCUUCUCUUGAACUGCAUAACUGAGAACUCUGCAAAUUCCCCAAAGAAGGAGGAAAA\
) } def
/len { sequence length } bind def

/coor [
[178.07118225 366.16363525]
[172.55738831 352.21377563]
[167.04359436 338.26394653]
[161.52981567 324.31408691]
[145.49044800 322.33474731]
[132.56423950 312.47894287]
[126.33773804 297.36218262]
[128.59844971 281.07556152]
[138.82301331 268.07861328]
[133.10784912 254.21005249]
[127.39268494 240.34149170]
[121.67752075 226.47293091]
[115.96236420 212.60437012]
[110.51003265 207.62002563]
[110.26644897 198.49343872]
[104.75266266 184.54359436]
[99.23886871 170.59375000]
[93.72508240 156.64390564]
[88.21128845 142.69407654]
[82.69749451 128.74423218]
[71.90069580 118.33129883]
[57.76047134 113.32589722]
[42.16941833 116.01468658]
[32.75353622 104.47387695]
[18.61330795 99.46847534]
[4.47308207 94.46308136]
[-9.70300579 89.56017303]
[-23.91421318 84.76000214]
[-38.12541962 79.95983887]
[-52.33662796 75.15966797]
[-66.54783630 70.35950470]
[-80.75904083 65.55934143]
[-96.30953979 68.47355652]
[-105.89151001 57.07026291]
[-120.10271454 52.27009583]
[-126.64225006 53.19214630]
[-131.88122559 51.00447845]
[-134.65235901 47.11977386]
[-148.71864319 41.91019821]
[-157.84835815 41.86485291]
[-162.94993591 36.52204132]
[-176.93931580 31.10937309]
[-190.92871094 25.69670296]
[-204.91809082 20.28403473]
[-218.90748596 14.87136555]
[-232.89688110 9.45869732]
[-250.40336609 23.51880646]
[-277.61355591 15.62796879]
[-292.61315918 15.51938915]
[-307.61276245 15.41080952]
[-316.71539307 27.97750664]
[-331.47650146 32.76177597]
[-346.22015381 27.92396927]
[-355.27713013 15.32432079]
[-355.16479492 -0.19234839]
[-345.92639160 -12.65956116]
[-331.11422729 -17.28341866]
[-316.42395020 -12.28595638]
[-307.50421143 0.41120246]
[-292.50457764 0.51978189]
[-277.50497437 0.62836134]
[-274.90020752 -6.40477943]
[-288.96646118 -11.61435890]
[-303.03274536 -16.82393646]
[-317.09902954 -22.03351593]
[-331.16525269 -27.24331284]
[-325.95523071 -41.30943298]
[-311.88946533 -36.09979630]
[-297.82318115 -30.89021873]
[-283.75689697 -25.68064117]
[-269.69061279 -20.47106171]
[-267.08581543 -27.50420189]
[-278.53762817 -37.19215012]
[-289.98941040 -46.88009262]
[-301.44122314 -56.56803894]
[-317.16796875 -55.00432968]
[-329.34103394 -65.08360291]
[-330.73840332 -80.82599640]
[-320.53097534 -92.89183044]
[-304.77468872 -94.12266541]
[-292.81744385 -83.78826141]
[-291.75326538 -68.01983643]
[-280.30148315 -58.33189392]
[-268.84967041 -48.64394760]
[-257.39788818 -38.95600128]
[-237.93190002 -33.37121201]
[-227.35177612 -19.38400269]
[-227.48420715 -4.53069210]
[-213.49481201 0.88197654]
[-199.50543213 6.29464531]
[-185.51603699 11.70731354]
[-171.52665710 17.11998367]
[-157.53726196 22.53265190]
[-143.50906372 27.84391403]
[-129.44277954 33.05349350]
[-115.30255127 38.05889130]
[-101.09133911 42.85905457]
[-86.55732727 39.60149765]
[-75.95887756 51.34813309]
[-61.74766922 56.14829636]
[-47.53646088 60.94846344]
[-33.32525253 65.74862671]
[-19.11404800 70.54879761]
[-4.90284014 75.34896088]
[2.43683243 74.51174164]
[9.47847843 80.32285309]
[23.61870575 85.32824707]
[37.75893021 90.33364868]
[52.33858109 87.28683472]
[62.76586914 99.18567657]
[76.90609741 104.19107056]
[78.33404541 93.61726379]
[84.15808105 85.16722870]
[92.81744385 80.46086884]
[102.26253510 80.19591522]
[110.43531036 84.06436920]
[122.92993164 75.76470184]
[135.42454529 67.46503448]
[147.91917419 59.16537094]
[160.41378784 50.86570358]
[172.90841675 42.56603622]
[185.40303040 34.26636887]
[197.89764404 25.96670151]
[210.39227295 17.66703415]
[222.88688660 9.36736584]
[230.10095215 -4.71339798]
[244.98358154 -5.31056452]
[257.47821045 -13.61023235]
[269.97280884 -21.90989876]
[282.15893555 -30.65625572]
[294.02056885 -39.83784485]
[305.88220215 -49.01943588]
[317.74383545 -58.20102692]
[329.60546875 -67.38261414]
[341.40032959 -76.64982605]
[353.12780762 -86.00217438]
[364.85528564 -95.35452271]
[370.33959961 -110.80942535]
[386.51306152 -113.52081299]
[396.73776245 -100.69944763]
[390.49542236 -85.53484344]
[374.20761108 -83.62704468]
[362.48016357 -74.27470398]
[350.75268555 -64.92235565]
[347.48449707 -58.29734421]
[338.78704834 -55.52097702]
[326.92541504 -46.33938980]
[315.06378174 -37.15779877]
[303.20214844 -27.97620964]
[291.34051514 -18.79462051]
[305.67120361 -14.36390781]
[311.28045654 -0.45217782]
[304.03106689 12.67969990]
[289.26995850 15.34604836]
[277.88446045 5.58025074]
[278.27249146 -9.41527939]
[265.77786255 -1.11561215]
[253.28324890 7.18405533]
[246.96289062 20.67117119]
[231.18655396 21.86198616]
[218.69194031 30.16165352]
[206.19731140 38.46131897]
[193.70269775 46.76098633]
[181.20808411 55.06065369]
[168.71345520 63.36032104]
[156.21884155 71.65998840]
[143.72421265 79.95965576]
[131.22959900 88.25932312]
[118.73497772 96.55899048]
[115.31809235 114.74220276]
[96.64733887 123.23043823]
[102.16113281 137.18028259]
[107.67491913 151.13012695]
[113.18871307 165.07997131]
[118.70250702 179.02980042]
[124.21629333 192.97964478]
[129.83091736 206.88922119]
[135.54608154 220.75776672]
[141.26124573 234.62632751]
[146.97640991 248.49488831]
[152.69157410 262.36343384]
[166.63148499 263.49172974]
[178.66838074 270.48187256]
[186.48254395 281.92080688]
[188.59660339 295.54479980]
[184.65440369 308.68716431]
[175.47964478 318.80029297]
[180.99343872 332.75015259]
[186.50723267 346.69998169]
[192.02102661 360.64984131]
[204.42726135 362.14138794]
[214.96192932 368.72634888]
[221.65965271 379.10391235]
[223.30175781 391.27273560]
[219.63758850 402.91671753]
[211.42056274 411.84606934]
[216.52818298 425.94970703]
[221.63580322 440.05331421]
[226.74342346 454.15695190]
[231.95300293 468.22323608]
[237.26426697 482.25143433]
[251.77375793 488.51641846]
[257.52575684 503.23681641]
[251.10771179 517.67926025]
[236.32733154 523.27532959]
[221.95355225 516.70495605]
[216.51408386 501.86621094]
[223.23606873 487.56268311]
[217.92480469 473.53448486]
[212.61906433 468.39437866]
[212.63980103 459.26455688]
[207.53218079 445.16094971]
[202.42456055 431.05731201]
[197.31694031 416.95370483]
[180.13685608 412.84991455]
[168.76185608 399.13174438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 190]
[2 189]
[3 188]
[4 187]
[9 181]
[10 180]
[11 179]
[12 178]
[13 177]
[15 176]
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 111]
[22 110]
[24 108]
[25 107]
[26 106]
[27 104]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[34 97]
[35 96]
[38 95]
[39 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 89]
[46 88]
[48 61]
[49 60]
[50 59]
[72 85]
[73 84]
[74 83]
[75 82]
[116 169]
[117 168]
[118 167]
[119 166]
[120 165]
[121 164]
[122 163]
[123 162]
[124 161]
[125 160]
[127 158]
[128 157]
[129 156]
[130 150]
[131 149]
[132 148]
[133 147]
[134 146]
[135 144]
[136 143]
[137 142]
[196 214]
[197 213]
[198 212]
[199 211]
[200 209]
[201 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
