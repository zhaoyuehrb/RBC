%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:17:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUCAGAUCAAGUCGACUCGCUCCUCUCCUUCCAGGCCCUGGUGAAGUACGGAAUGCCGGAAGGGCCGGGCUCAAAGCUCCGCCUCUGGCGCGACCGACGACUGGAGCGCAGGGCAGGGGUAGAGGCUCGUAGAUGGAACUGGUAGUCAGCUGGAGAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[178.80136108 532.73559570]
[174.24008179 517.06011963]
[178.21618652 501.12951660]
[189.73928833 489.30160522]
[185.51330566 474.90921021]
[181.28730774 460.51681519]
[177.06132507 446.12442017]
[172.83534241 431.73202515]
[161.82575989 421.70013428]
[165.36169434 406.27911377]
[161.13569641 391.88671875]
[150.65209961 385.79504395]
[147.03111267 373.80346680]
[152.74513245 362.20700073]
[148.79393005 347.73675537]
[144.84272766 333.26651001]
[133.89611816 329.86843872]
[125.88130951 321.50738525]
[122.88744354 310.19461060]
[125.77596283 298.73052979]
[133.93705750 290.01153564]
[130.53959656 275.40136719]
[117.79938507 267.77099609]
[114.14575958 253.00260925]
[122.23556519 239.69122314]
[118.83811188 225.08103943]
[115.44066620 210.47087097]
[112.04321289 195.86068726]
[108.64575958 181.25050354]
[99.47496796 176.61972046]
[94.27934265 167.50242615]
[94.99911499 156.81271362]
[101.63714600 148.12417603]
[98.79837799 133.39524841]
[95.95960999 118.66632080]
[84.01926422 110.45812988]
[81.27710724 96.23044586]
[89.31146240 84.17244720]
[86.47269440 69.44351959]
[83.63392639 54.71458817]
[80.79515076 39.98565674]
[77.95638275 25.25672722]
[75.11761475 10.52779675]
[72.13876343 -4.17344189]
[69.02008820 -18.84565544]
[54.18855286 -28.08071327]
[50.67174149 -44.85045242]
[60.16268539 -58.70949936]
[56.76523209 -73.31967926]
[53.36778259 -87.92985535]
[38.93553543 -101.96102142]
[45.24304199 -120.21159363]
[41.29183197 -134.68183899]
[37.34062576 -149.15208435]
[22.00605965 -157.52536011]
[17.53762245 -174.06698608]
[26.22188950 -188.44525146]
[21.99590111 -202.83764648]
[17.76991272 -217.23004150]
[13.54392529 -231.62243652]
[9.31793690 -246.01483154]
[5.09194851 -260.40722656]
[0.86596012 -274.79962158]
[-3.69779921 -279.68423462]
[-4.89460802 -285.29830933]
[-3.23570085 -289.82086182]
[-6.91069698 -304.36370850]
[-10.58569336 -318.90655518]
[-21.46822357 -330.39050293]
[-17.08490944 -344.62551880]
[-20.75990677 -359.16836548]
[-24.43490219 -373.71121216]
[-28.10989761 -388.25405884]
[-31.78489494 -402.79690552]
[-41.52754211 -416.67196655]
[-30.89176559 -429.87484741]
[-15.26056385 -423.30966187]
[-17.24204636 -406.47189331]
[-13.56705093 -391.92904663]
[-9.89205456 -377.38619995]
[-6.21705866 -362.84335327]
[-2.54206252 -348.30050659]
[8.07760715 -337.85675049]
[3.95715427 -322.58154297]
[7.63215017 -308.03869629]
[11.30714607 -293.49584961]
[15.25835514 -279.02560425]
[19.48434258 -264.63320923]
[23.71033096 -250.24081421]
[27.93631935 -235.84841919]
[32.16230774 -221.45602417]
[36.38829803 -207.06362915]
[40.61428452 -192.67123413]
[52.69857025 -188.12391663]
[60.05540085 -177.27700806]
[59.80365372 -163.97810364]
[51.81086731 -153.10328674]
[55.76207733 -138.63304138]
[59.71328354 -124.16279602]
[69.05372620 -119.88449860]
[74.59268951 -110.97162628]
[74.28040314 -100.26225281]
[67.97795868 -91.32730865]
[71.37541199 -76.71712494]
[74.77286530 -62.10694885]
[86.57784271 -56.87716675]
[93.30343628 -45.62796402]
[92.29287720 -32.36511612]
[83.69229889 -21.96433067]
[86.81097412 -7.29211760]
[91.29795837 -1.37639153]
[89.84654999 7.68902779]
[92.68531799 22.41795731]
[95.52408600 37.14688873]
[98.36285400 51.87582016]
[101.20162201 66.60475159]
[104.04039001 81.33367920]
[115.98073578 89.54187012]
[118.72289276 103.76955414]
[110.68853760 115.82755280]
[113.52730560 130.55648804]
[116.36607361 145.28541565]
[130.25367737 159.85585022]
[123.25594330 177.85305786]
[126.65338898 192.46324158]
[130.05084229 207.07341003]
[133.44828796 221.68359375]
[136.84574890 236.29377747]
[149.97879028 244.66998291]
[153.21615601 259.53518677]
[145.14978027 272.00390625]
[148.54724121 286.61410522]
[164.98373413 295.96368408]
[169.33860779 314.03787231]
[159.31297302 329.31530762]
[163.26417542 343.78552246]
[167.21537781 358.25576782]
[180.59329224 370.87881470]
[175.52809143 387.66073608]
[179.75408936 402.05313110]
[191.06593323 413.11444092]
[187.22773743 427.50604248]
[191.45372009 441.89843750]
[195.67970276 456.29083252]
[199.90570068 470.68322754]
[204.13168335 485.07562256]
[217.90162659 487.67199707]
[229.15000916 495.91665649]
[235.70858765 508.14944458]
[236.34385681 521.94866943]
[230.98855591 534.61029053]
[220.74369812 543.67785645]
[224.69490051 558.14813232]
[228.64611816 572.61834717]
[232.59732056 587.08856201]
[245.75996399 596.26049805]
[246.65202332 612.27874756]
[234.58915710 622.85546875]
[218.82499695 619.87713623]
[211.45243835 605.62841797]
[218.12707520 591.03979492]
[214.17587280 576.56958008]
[210.22465515 562.09930420]
[206.27345276 547.62908936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[10 140]
[11 139]
[14 137]
[15 136]
[16 135]
[21 132]
[22 131]
[25 128]
[26 127]
[27 126]
[28 125]
[29 124]
[33 122]
[34 121]
[35 120]
[38 117]
[39 116]
[40 115]
[41 114]
[42 113]
[43 112]
[44 110]
[45 109]
[48 105]
[49 104]
[50 103]
[52 99]
[53 98]
[54 97]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[66 86]
[67 85]
[68 84]
[70 82]
[71 81]
[72 80]
[73 79]
[74 78]
[152 164]
[153 163]
[154 162]
[155 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
