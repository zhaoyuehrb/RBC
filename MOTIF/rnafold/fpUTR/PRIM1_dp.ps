%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:39:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRIM1)
} def

/sequence { (\
CCGCCGGCCGUGCUGUUCCCGCCAAUUCCUGUGGUAAUCCUUACCGUGGCGAGUUCCGCGCUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.113621005 ubox
1 34 0.055583777 ubox
1 49 0.050103107 ubox
2 6 0.114534182 ubox
2 10 0.020928574 ubox
2 12 0.067677193 ubox
2 15 0.022004059 ubox
2 21 0.010407597 ubox
2 33 0.056580522 ubox
2 48 0.052036815 ubox
2 51 0.182131954 ubox
2 58 0.010856721 ubox
2 60 0.267171830 ubox
3 9 0.033043724 ubox
3 11 0.069671143 ubox
3 13 0.053531714 ubox
3 14 0.016707283 ubox
3 16 0.117068620 ubox
3 20 0.017253118 ubox
3 22 0.033857052 ubox
3 32 0.057126011 ubox
3 47 0.051822658 ubox
3 50 0.302384919 ubox
3 54 0.013835593 ubox
3 57 0.010755282 ubox
3 59 0.276879661 ubox
3 61 0.378364608 ubox
4 10 0.069766471 ubox
4 12 0.051644933 ubox
4 15 0.087249662 ubox
4 21 0.032560676 ubox
4 31 0.057068542 ubox
4 46 0.044825583 ubox
4 49 0.302583817 ubox
4 53 0.014526684 ubox
4 58 0.256992017 ubox
4 60 0.377950978 ubox
5 12 0.025119145 ubox
5 15 0.546105443 ubox
5 21 0.023932675 ubox
5 31 0.006559702 ubox
5 46 0.027971749 ubox
5 48 0.301839416 ubox
5 51 0.004177754 ubox
5 58 0.374999503 ubox
5 60 0.021480451 ubox
6 11 0.025795021 ubox
6 14 0.561926947 ubox
6 17 0.022598232 ubox
6 18 0.013478868 ubox
6 19 0.032692836 ubox
6 20 0.030365155 ubox
6 23 0.133225843 ubox
6 28 0.003947297 ubox
6 29 0.062362204 ubox
6 30 0.007495749 ubox
6 40 0.003714833 ubox
6 45 0.041466281 ubox
6 47 0.221235923 ubox
6 50 0.003432741 ubox
6 55 0.010039337 ubox
6 56 0.046483398 ubox
6 57 0.388059949 ubox
6 59 0.023920904 ubox
6 62 0.336960201 ubox
6 63 0.241434766 ubox
7 13 0.564153704 ubox
7 16 0.030414664 ubox
7 17 0.011660064 ubox
7 18 0.032457351 ubox
7 19 0.030237597 ubox
7 22 0.133661571 ubox
7 27 0.003635027 ubox
7 28 0.062331003 ubox
7 29 0.007613007 ubox
7 39 0.003726417 ubox
7 44 0.041208039 ubox
7 47 0.178600882 ubox
7 50 0.042537043 ubox
7 54 0.014980380 ubox
7 55 0.041581901 ubox
7 56 0.385184510 ubox
7 59 0.070125530 ubox
7 61 0.381948352 ubox
7 62 0.184436517 ubox
8 12 0.560141360 ubox
8 15 0.036875763 ubox
8 21 0.125893713 ubox
8 46 0.252871768 ubox
8 49 0.043181745 ubox
8 53 0.024685830 ubox
8 58 0.068735108 ubox
8 60 0.344622426 ubox
9 15 0.045569724 ubox
9 21 0.047382086 ubox
9 46 0.038618168 ubox
9 48 0.043156079 ubox
9 51 0.017628346 ubox
9 58 0.298601963 ubox
9 60 0.235643119 ubox
10 14 0.028474203 ubox
10 16 0.008682576 ubox
10 20 0.064148991 ubox
10 22 0.083504141 ubox
10 26 0.012079765 ubox
10 44 0.270296861 ubox
10 45 0.033640118 ubox
10 47 0.035590595 ubox
10 50 0.017244756 ubox
10 54 0.013463786 ubox
10 57 0.298557321 ubox
10 59 0.288524191 ubox
10 61 0.471132787 ubox
11 15 0.005560855 ubox
11 21 0.083573676 ubox
11 24 0.051048059 ubox
11 25 0.011474615 ubox
11 43 0.270674864 ubox
11 46 0.032945726 ubox
11 48 0.006198305 ubox
11 49 0.013997314 ubox
11 51 0.052739371 ubox
11 53 0.007223585 ubox
11 58 0.288262627 ubox
11 60 0.471595330 ubox
11 64 0.004147505 ubox
12 20 0.083346325 ubox
12 22 0.091773827 ubox
12 23 0.048127510 ubox
12 42 0.251010136 ubox
12 45 0.034319510 ubox
12 47 0.010743779 ubox
12 50 0.054158423 ubox
12 54 0.453466008 ubox
12 57 0.280166380 ubox
12 59 0.474687217 ubox
12 61 0.015604681 ubox
12 63 0.005281511 ubox
13 21 0.094783206 ubox
13 46 0.012136727 ubox
13 49 0.054029448 ubox
13 53 0.462524978 ubox
13 58 0.473369029 ubox
13 60 0.015391480 ubox
14 21 0.040195313 ubox
14 24 0.011450237 ubox
14 36 0.003632886 ubox
14 43 0.024512612 ubox
14 46 0.004836578 ubox
14 48 0.053034575 ubox
14 51 0.006277782 ubox
14 52 0.458704291 ubox
14 58 0.027531567 ubox
14 60 0.003712709 ubox
14 64 0.027806923 ubox
15 20 0.052715126 ubox
15 22 0.030542283 ubox
15 23 0.014336000 ubox
15 26 0.005977017 ubox
15 35 0.003821012 ubox
15 38 0.266684704 ubox
15 42 0.021032030 ubox
15 44 0.016527698 ubox
15 45 0.005124028 ubox
15 47 0.023457093 ubox
15 50 0.011061195 ubox
15 54 0.119149923 ubox
15 57 0.119526107 ubox
15 59 0.009484942 ubox
15 61 0.016021524 ubox
15 63 0.041054989 ubox
16 21 0.029192689 ubox
16 25 0.006655137 ubox
16 37 0.277702744 ubox
16 43 0.016271382 ubox
16 46 0.006116110 ubox
16 49 0.005187678 ubox
16 52 0.047125472 ubox
16 53 0.188187620 ubox
16 58 0.009097732 ubox
16 60 0.011944202 ubox
17 24 0.006553613 ubox
17 36 0.258907579 ubox
17 48 0.003241728 ubox
17 51 0.027297574 ubox
17 52 0.198590044 ubox
18 34 0.022922634 ubox
18 49 0.005473664 ubox
18 51 0.181808271 ubox
19 33 0.019794378 ubox
19 34 0.295413612 ubox
19 48 0.004927681 ubox
19 49 0.140040348 ubox
20 31 0.016108836 ubox
20 33 0.296094383 ubox
20 46 0.004013084 ubox
20 48 0.140219475 ubox
20 51 0.735043039 ubox
20 58 0.036528491 ubox
20 60 0.474373135 ubox
21 30 0.014987212 ubox
21 32 0.296327563 ubox
21 35 0.044453915 ubox
21 47 0.139898257 ubox
21 50 0.762145564 ubox
21 54 0.003421576 ubox
21 57 0.042746865 ubox
21 59 0.496890547 ubox
21 61 0.036714286 ubox
22 31 0.291947109 ubox
22 34 0.045410277 ubox
22 46 0.137948446 ubox
22 49 0.762280653 ubox
22 53 0.003508882 ubox
22 58 0.496310029 ubox
22 60 0.036696320 ubox
23 31 0.073758388 ubox
23 33 0.045496518 ubox
23 48 0.762202339 ubox
24 30 0.085682211 ubox
24 32 0.041661168 ubox
24 47 0.748256007 ubox
24 55 0.500064726 ubox
25 32 0.066182601 ubox
25 38 0.012169575 ubox
25 47 0.074345537 ubox
25 54 0.536849469 ubox
26 31 0.068633446 ubox
26 37 0.012387506 ubox
26 46 0.089072096 ubox
26 52 0.012745556 ubox
26 53 0.539715026 ubox
27 36 0.012118928 ubox
27 51 0.012601199 ubox
27 52 0.540877342 ubox
28 34 0.016582407 ubox
28 48 0.005551928 ubox
28 49 0.027612901 ubox
28 51 0.541067679 ubox
29 33 0.016508065 ubox
29 48 0.029978676 ubox
29 49 0.540629363 ubox
30 43 0.079064022 ubox
30 46 0.028549394 ubox
30 48 0.537375173 ubox
30 60 0.010374223 ubox
31 38 0.010409273 ubox
31 42 0.078262708 ubox
31 44 0.045884754 ubox
31 45 0.011605749 ubox
31 47 0.437075988 ubox
31 50 0.006442728 ubox
31 59 0.014985136 ubox
32 37 0.010770695 ubox
32 43 0.045433308 ubox
32 46 0.889016288 ubox
32 49 0.005944404 ubox
32 58 0.014987182 ubox
33 39 0.011010208 ubox
33 40 0.164981149 ubox
33 41 0.014178671 ubox
33 42 0.038694213 ubox
33 45 0.935993765 ubox
33 57 0.015033810 ubox
34 38 0.007221216 ubox
34 39 0.164684654 ubox
34 40 0.016011659 ubox
34 41 0.030764768 ubox
34 44 0.936305175 ubox
34 56 0.015027155 ubox
35 43 0.935534005 ubox
36 42 0.925021959 ubox
36 55 0.004836310 ubox
37 41 0.705216138 ubox
37 54 0.004781808 ubox
38 52 0.014321909 ubox
38 53 0.003903273 ubox
39 49 0.009119365 ubox
39 51 0.014487523 ubox
40 48 0.009710917 ubox
40 49 0.014499158 ubox
41 48 0.014286957 ubox
45 60 0.057904226 ubox
46 59 0.063489729 ubox
46 61 0.016942766 ubox
47 58 0.063480682 ubox
47 60 0.016399830 ubox
47 64 0.007970770 ubox
48 57 0.063645230 ubox
48 59 0.011736244 ubox
48 62 0.015330297 ubox
48 63 0.010142069 ubox
49 56 0.063008220 ubox
49 59 0.027588722 ubox
49 61 0.019951233 ubox
50 58 0.030141002 ubox
50 60 0.020099678 ubox
51 57 0.031101927 ubox
51 59 0.020057503 ubox
51 63 0.285751505 ubox
52 62 0.301770195 ubox
53 59 0.044073988 ubox
53 61 0.303636744 ubox
54 58 0.041332156 ubox
54 60 0.295774100 ubox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
12 59 0.9500000 lbox
13 58 0.9500000 lbox
20 51 0.9500000 lbox
21 50 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
24 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
37 41 0.9500000 lbox
showpage
end
%%EOF
