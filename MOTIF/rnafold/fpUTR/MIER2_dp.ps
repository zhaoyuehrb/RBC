%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MIER2)
} def

/sequence { (\
UGCGCGGCCCCUCAUCCGGGGAUCCCGGCGCGGCCACCGCCUCCCGCGCACACACGGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.011563963 ubox
1 32 0.018904005 ubox
1 50 0.841169438 ubox
1 52 0.013564901 ubox
1 54 0.006953559 ubox
1 56 0.004432351 ubox
2 29 0.025707204 ubox
2 31 0.137658040 ubox
2 40 0.010417156 ubox
2 47 0.004921658 ubox
2 49 0.987413712 ubox
2 51 0.009985193 ubox
2 53 0.004975061 ubox
2 55 0.003223064 ubox
2 58 0.019769542 ubox
3 27 0.036610677 ubox
3 28 0.025647155 ubox
3 30 0.137798967 ubox
3 39 0.010450970 ubox
3 46 0.004925218 ubox
3 48 0.987716031 ubox
3 56 0.008736901 ubox
3 57 0.019472384 ubox
4 26 0.037208170 ubox
4 29 0.137630698 ubox
4 38 0.010389519 ubox
4 40 0.003931243 ubox
4 45 0.004737090 ubox
4 47 0.987729669 ubox
4 49 0.007098116 ubox
4 55 0.009328242 ubox
4 58 0.006077636 ubox
5 27 0.099797702 ubox
5 28 0.104232077 ubox
5 39 0.003971522 ubox
5 46 0.987700642 ubox
5 48 0.007091998 ubox
5 56 0.009576915 ubox
5 57 0.005958985 ubox
6 13 0.003224603 ubox
6 24 0.043302639 ubox
6 25 0.065421143 ubox
6 26 0.139138083 ubox
6 35 0.016168288 ubox
6 38 0.003908428 ubox
6 41 0.005352839 ubox
6 44 0.034630542 ubox
6 45 0.984670474 ubox
6 47 0.006591728 ubox
6 55 0.009233926 ubox
6 59 0.038197263 ubox
7 11 0.003319114 ubox
7 23 0.048349635 ubox
7 24 0.067175020 ubox
7 25 0.139207297 ubox
7 29 0.041247554 ubox
7 31 0.010018768 ubox
7 34 0.017180986 ubox
7 37 0.003883949 ubox
7 40 0.005897814 ubox
7 43 0.048009510 ubox
7 44 0.969814638 ubox
7 58 0.038476718 ubox
8 19 0.005771362 ubox
8 20 0.032520958 ubox
8 21 0.898660417 ubox
8 28 0.043198993 ubox
8 30 0.010513519 ubox
8 33 0.017927563 ubox
8 39 0.006265464 ubox
8 57 0.038396192 ubox
9 18 0.005872699 ubox
9 19 0.032674279 ubox
9 20 0.901572885 ubox
9 21 0.125311426 ubox
9 27 0.042959700 ubox
9 28 0.003400282 ubox
9 32 0.017839586 ubox
9 33 0.006380344 ubox
9 56 0.038239011 ubox
10 18 0.032530523 ubox
10 19 0.901615262 ubox
10 20 0.125617758 ubox
10 21 0.100250058 ubox
10 27 0.003186531 ubox
10 28 0.003269694 ubox
10 32 0.006575606 ubox
10 33 0.010414561 ubox
11 18 0.900658326 ubox
11 19 0.125587402 ubox
11 20 0.100527038 ubox
11 21 0.005690580 ubox
11 32 0.010578382 ubox
11 33 0.004362714 ubox
12 18 0.112163916 ubox
12 19 0.100432914 ubox
12 20 0.005696879 ubox
12 32 0.004290575 ubox
13 18 0.109998289 ubox
13 19 0.006472874 ubox
14 23 0.003686617 ubox
15 22 0.003885139 ubox
15 28 0.004446845 ubox
16 21 0.003883290 ubox
16 27 0.005059259 ubox
16 28 0.391332805 ubox
17 27 0.399041877 ubox
17 48 0.005251494 ubox
18 25 0.005316782 ubox
18 26 0.399817545 ubox
18 43 0.005567687 ubox
18 47 0.005276779 ubox
19 24 0.006388464 ubox
19 25 0.399775745 ubox
19 26 0.006731812 ubox
19 42 0.005584309 ubox
19 45 0.005621655 ubox
20 24 0.393315775 ubox
20 25 0.007678678 ubox
20 26 0.009511792 ubox
20 41 0.005646531 ubox
20 44 0.005787302 ubox
21 25 0.010448773 ubox
21 40 0.005671720 ubox
21 43 0.010316243 ubox
22 42 0.012001793 ubox
24 33 0.004392083 ubox
25 32 0.004566817 ubox
25 33 0.015346018 ubox
25 57 0.011478021 ubox
26 32 0.015944514 ubox
26 39 0.031895529 ubox
26 46 0.009247033 ubox
26 56 0.011813975 ubox
27 31 0.018081538 ubox
27 35 0.061295931 ubox
27 38 0.032963717 ubox
27 41 0.445995075 ubox
27 42 0.507062329 ubox
27 43 0.434337511 ubox
27 44 0.102025389 ubox
27 45 0.044814378 ubox
27 55 0.011834467 ubox
28 34 0.061371751 ubox
28 37 0.032915972 ubox
28 40 0.444668471 ubox
28 41 0.560329275 ubox
28 42 0.401379643 ubox
28 43 0.112177076 ubox
28 44 0.045189102 ubox
28 47 0.006710134 ubox
28 49 0.065293733 ubox
29 33 0.060935855 ubox
29 39 0.442978784 ubox
29 46 0.006798466 ubox
29 48 0.066172606 ubox
30 38 0.426477109 ubox
30 40 0.858664687 ubox
30 45 0.006832889 ubox
30 47 0.066394205 ubox
31 39 0.860184029 ubox
31 46 0.066391582 ubox
32 38 0.864288743 ubox
32 41 0.201322897 ubox
32 45 0.062830661 ubox
32 59 0.113259124 ubox
33 37 0.851338418 ubox
33 40 0.201940928 ubox
33 43 0.003857424 ubox
33 44 0.061553446 ubox
33 58 0.115210579 ubox
34 39 0.201626329 ubox
34 57 0.115212438 ubox
35 56 0.115012926 ubox
38 46 0.004521315 ubox
38 48 0.105475258 ubox
39 45 0.004914442 ubox
39 47 0.106482648 ubox
39 49 0.031210528 ubox
39 55 0.003647779 ubox
39 58 0.008090735 ubox
40 46 0.106356623 ubox
40 48 0.031222686 ubox
40 57 0.008094451 ubox
41 56 0.008066490 ubox
43 57 0.005431848 ubox
44 56 0.004676104 ubox
44 57 0.072572219 ubox
45 56 0.073260715 ubox
46 55 0.073070388 ubox
46 58 0.022766273 ubox
47 56 0.011276840 ubox
47 57 0.022136293 ubox
48 55 0.014382864 ubox
48 58 0.014952945 ubox
49 57 0.015042433 ubox
1 50 0.9500000 lbox
2 49 0.9500000 lbox
3 48 0.9500000 lbox
4 47 0.9500000 lbox
5 46 0.9500000 lbox
6 45 0.9500000 lbox
7 44 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
27 42 0.9500000 lbox
28 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
showpage
end
%%EOF
