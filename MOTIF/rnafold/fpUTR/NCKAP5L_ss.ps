%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCGGCUCCGGCACCCCCCUUUCUCUGCCCCCCGCCCCCAAGCCGCGGCCAUGGACCUGGCGGAUCCGGCCUGCCCUGGCCCAGCUCAACACCUGAUUUCGGCAAGGUGACCGUUCUGGAUGCUAGAGUGAGUGUGCCCACCUGCGUAAGGGGGCAGAGACAGCCUGCCGGGGCUUCUCUUCCUUGUUCCCAGGGCCAG\
) } def
/len { sequence length } bind def

/coor [
[246.90112305 734.79541016]
[242.55378723 720.43920898]
[238.20646667 706.08300781]
[233.85913086 691.72674561]
[229.51181030 677.37054443]
[224.56132507 671.87640381]
[225.21014404 662.75848389]
[221.08549500 648.33666992]
[216.96086121 633.91491699]
[212.83621216 619.49316406]
[208.71157837 605.07141113]
[204.58692932 590.64965820]
[200.46229553 576.22784424]
[196.33764648 561.80609131]
[192.21299744 547.38433838]
[188.08836365 532.96258545]
[178.09280396 530.57812500]
[169.92720032 524.20727539]
[165.10848999 514.94860840]
[164.56697083 504.44412231]
[168.46751404 494.58871460]
[176.16766357 487.18801880]
[172.71678162 472.59036255]
[162.25901794 461.98452759]
[166.61393738 446.77447510]
[163.16307068 432.17681885]
[159.71218872 417.57916260]
[156.26132202 402.98150635]
[152.81045532 388.38385010]
[149.35957336 373.78622437]
[145.90870667 359.18856812]
[142.45783997 344.59091187]
[139.00695801 329.99325562]
[135.55609131 315.39559937]
[132.10522461 300.79794312]
[128.31643677 286.28433228]
[124.19180298 271.86254883]
[120.06716156 257.44079590]
[105.22439575 255.82162476]
[92.09678650 248.62361145]
[82.69974518 236.91633606]
[78.48951721 222.46429443]
[80.13757324 207.46104431]
[87.42372894 194.19624329]
[99.26498413 184.70622253]
[95.14034271 170.28445435]
[90.90423584 155.89505005]
[86.55690765 141.53883362]
[82.20957947 127.18262482]
[71.89408875 116.29269409]
[57.79429245 111.17450714]
[43.69449615 106.05632782]
[29.59470177 100.93814850]
[23.01863289 101.71518707]
[17.82048416 99.39829254]
[15.14190960 95.43724060]
[1.20725882 89.88516235]
[-12.72739220 84.33309174]
[-26.70458603 78.88900757]
[-40.72348785 73.55324554]
[-56.81841660 76.69734192]
[-67.38323975 64.15474701]
[-61.54977036 48.82821655]
[-45.31898499 46.48435974]
[-35.38772202 59.53434372]
[-21.36882019 64.87010956]
[-13.99449635 64.31103516]
[-7.17531967 70.39844513]
[6.75933123 75.95051575]
[20.69398117 81.50258636]
[34.71288300 86.83835602]
[48.81267929 91.95653534]
[62.91247177 97.07471466]
[77.01226807 102.19289398]
[82.55417633 88.96182251]
[93.80407715 82.89026642]
[94.96360779 67.93515015]
[88.31623840 53.57816696]
[97.01422882 41.48708725]
[98.17375946 26.53196907]
[99.33328247 11.57685375]
[100.49281311 -3.37826252]
[101.65234375 -18.33337784]
[102.58029938 -33.30464554]
[103.27645874 -48.28848267]
[103.97262573 -63.27231979]
[104.66878510 -78.25615692]
[90.29347229 -85.87102509]
[80.71110535 -98.94484711]
[77.79837799 -114.83131409]
[82.08828735 -130.34210205]
[92.67343903 -142.38674927]
[107.39744568 -148.58836365]
[107.86164856 -163.58117676]
[108.32584381 -178.57398987]
[108.79004669 -193.56680298]
[109.25424957 -208.55963135]
[96.15500641 -216.57870483]
[88.83437347 -230.08068848]
[89.26155853 -245.43363953]
[97.32165527 -258.50769043]
[110.84652710 -265.78594971]
[126.19806671 -265.31063843]
[139.24678040 -257.20962524]
[146.48262024 -243.66198730]
[145.95919800 -228.31202698]
[137.81730652 -215.28877258]
[124.24706268 -208.09542847]
[123.78285980 -193.10261536]
[123.31866455 -178.10978699]
[122.85446167 -163.11697388]
[122.39025879 -148.12416077]
[135.00025940 -142.33203125]
[144.47924805 -132.13824463]
[149.37130737 -119.05998230]
[148.90658569 -105.06110382]
[143.12223816 -92.25714111]
[132.86187744 -82.59564972]
[119.65262604 -77.55999756]
[118.95645905 -62.57615662]
[118.26029968 -47.59232330]
[117.56413269 -32.60848618]
[120.06599426 -28.53351021]
[120.03013611 -22.84251404]
[116.60746002 -17.17384911]
[115.44792938 -2.21873331]
[114.28839874 12.73638248]
[113.12887573 27.69149780]
[111.96934509 42.64661407]
[118.69964600 55.93391037]
[109.91872406 69.09468079]
[108.75919342 84.04979706]
[119.63735962 97.25182343]
[115.09699249 115.25220490]
[96.56578827 122.83529663]
[100.91311646 137.19151306]
[105.26044464 151.54771423]
[110.74608612 158.85972595]
[109.56211090 166.15982056]
[113.68675232 180.58158875]
[128.75520325 182.37539673]
[141.95330811 189.78166199]
[151.28514099 201.64465332]
[155.35314941 216.13737488]
[153.56741333 231.04295349]
[146.23097229 244.09368896]
[134.48892212 253.31614685]
[138.61357117 267.73791504]
[142.73820496 282.15966797]
[146.50144958 285.79544067]
[148.30870056 290.08316040]
[148.23966980 294.16693115]
[146.70286560 297.34707642]
[150.15374756 311.94473267]
[153.60461426 326.54238892]
[157.05548096 341.14004517]
[160.50636292 355.73770142]
[163.95722961 370.33532715]
[167.40809631 384.93298340]
[170.85897827 399.53063965]
[174.30984497 414.12829590]
[177.76071167 428.72595215]
[181.21159363 443.32360840]
[191.91619873 454.97360229]
[187.31443787 469.13949585]
[190.76531982 483.73715210]
[208.39344788 493.36474609]
[213.19396973 512.55419922]
[202.51013184 528.83795166]
[206.63476562 543.25970459]
[210.75941467 557.68145752]
[214.88404846 572.10321045]
[219.00869751 586.52496338]
[223.13333130 600.94677734]
[227.25798035 615.36853027]
[231.38261414 629.79028320]
[235.50726318 644.21203613]
[239.63191223 658.63385010]
[243.86801147 673.02325439]
[248.21534729 687.37945557]
[252.56266785 701.73565674]
[256.91000366 716.09185791]
[261.25732422 730.44805908]
[278.68997192 744.52294922]
[272.98434448 765.39855957]
[278.21145630 779.45831299]
[283.43859863 793.51812744]
[288.66571045 807.57788086]
[293.89285278 821.63763428]
[306.86560059 831.66955566]
[304.39624023 847.88177490]
[289.02502441 853.59643555]
[276.56454468 842.93487549]
[279.83309937 826.86474609]
[274.60595703 812.80499268]
[269.37881470 798.74523926]
[264.15170288 784.68548584]
[258.92456055 770.62567139]
[251.21372986 768.94396973]
[244.72113037 764.29388428]
[240.54963684 757.37396240]
[239.44369507 749.27508545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[4 180]
[5 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[12 173]
[13 172]
[14 171]
[15 170]
[16 169]
[22 166]
[23 165]
[25 163]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[36 149]
[37 148]
[38 147]
[45 140]
[46 139]
[47 137]
[48 136]
[49 135]
[50 74]
[51 73]
[52 72]
[53 71]
[56 70]
[57 69]
[58 68]
[59 66]
[60 65]
[76 132]
[77 131]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 122]
[85 121]
[86 120]
[87 119]
[93 112]
[94 111]
[95 110]
[96 109]
[97 108]
[185 198]
[186 197]
[187 196]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
