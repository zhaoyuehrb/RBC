%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AP1M2)
} def

/sequence { (\
GGCGCUUCCGCAGGAAGAAGGAAGCGGCGCCGCCAUCGCCUCCCGGCGCUCCCUCCCCGACUCCUAAGUCCUUCGGCCGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 78 0.013287891 ubox
1 81 0.998841837 ubox
1 84 0.013916128 ubox
2 77 0.013295670 ubox
2 80 0.999593294 ubox
2 83 0.013999538 ubox
3 26 0.005887007 ubox
3 76 0.012853552 ubox
3 79 0.999571709 ubox
4 25 0.028949704 ubox
4 77 0.036369028 ubox
4 78 0.996310192 ubox
4 80 0.020201977 ubox
5 17 0.022981594 ubox
5 24 0.029217360 ubox
5 76 0.040897694 ubox
5 79 0.020351756 ubox
6 16 0.023204298 ubox
6 23 0.029213125 ubox
6 75 0.022387648 ubox
6 76 0.012309186 ubox
7 15 0.023422146 ubox
7 22 0.029244535 ubox
7 75 0.003850407 ubox
7 76 0.009262964 ubox
8 14 0.023452187 ubox
8 21 0.029255467 ubox
8 75 0.008065042 ubox
8 76 0.997733558 ubox
9 13 0.023282123 ubox
9 20 0.029249641 ubox
9 75 0.998916456 ubox
10 69 0.003629638 ubox
10 74 0.997646304 ubox
10 77 0.008192970 ubox
11 68 0.004338899 ubox
11 76 0.008190670 ubox
12 65 0.007254402 ubox
12 72 0.979382738 ubox
12 73 0.041839353 ubox
13 58 0.003607734 ubox
13 64 0.007702837 ubox
13 71 0.999033043 ubox
13 72 0.017338978 ubox
14 57 0.003675234 ubox
14 63 0.007720327 ubox
14 70 0.998988057 ubox
14 71 0.016771833 ubox
14 74 0.007378818 ubox
15 62 0.006711026 ubox
15 69 0.993606694 ubox
15 73 0.007669127 ubox
16 62 0.040156358 ubox
16 65 0.017101704 ubox
16 72 0.007690957 ubox
17 55 0.011325322 ubox
17 61 0.040527135 ubox
17 63 0.010270399 ubox
17 64 0.016343720 ubox
17 70 0.003260855 ubox
17 71 0.007654885 ubox
17 74 0.003165895 ubox
18 54 0.010481376 ubox
18 62 0.011069552 ubox
18 69 0.003814058 ubox
18 73 0.003213657 ubox
19 54 0.011938553 ubox
19 62 0.009606225 ubox
19 65 0.966925102 ubox
19 72 0.003197319 ubox
20 52 0.011414367 ubox
20 53 0.013170690 ubox
20 56 0.045577119 ubox
20 57 0.025627673 ubox
20 58 0.036698860 ubox
20 61 0.005964903 ubox
20 64 0.997127311 ubox
20 65 0.012596354 ubox
21 51 0.011473985 ubox
21 52 0.013123448 ubox
21 55 0.046051890 ubox
21 56 0.026495801 ubox
21 57 0.036039730 ubox
21 63 0.997203553 ubox
21 64 0.012882811 ubox
22 50 0.008683015 ubox
22 54 0.041993226 ubox
22 62 0.956549262 ubox
23 50 0.026602708 ubox
23 54 0.211513968 ubox
23 62 0.268317531 ubox
24 33 0.019627793 ubox
24 49 0.027346131 ubox
24 53 0.213696372 ubox
24 61 0.379791798 ubox
25 32 0.019687894 ubox
25 48 0.027280361 ubox
25 59 0.967618404 ubox
26 31 0.019423477 ubox
26 34 0.038491739 ubox
26 40 0.006462094 ubox
26 47 0.025200041 ubox
26 50 0.329431928 ubox
26 51 0.149595973 ubox
26 52 0.069064351 ubox
26 53 0.017736161 ubox
26 54 0.005665365 ubox
26 55 0.010870311 ubox
26 56 0.016570425 ubox
26 57 0.043307262 ubox
26 58 0.924415837 ubox
26 81 0.013017840 ubox
27 33 0.039559524 ubox
27 39 0.006567864 ubox
27 49 0.638682211 ubox
27 50 0.019137044 ubox
27 51 0.066155813 ubox
27 52 0.015710147 ubox
27 53 0.007171055 ubox
27 55 0.013442986 ubox
27 56 0.045182429 ubox
27 57 0.761698170 ubox
27 80 0.013590238 ubox
28 32 0.039550990 ubox
28 38 0.006600688 ubox
28 45 0.025161592 ubox
28 48 0.800778161 ubox
28 59 0.003255311 ubox
28 79 0.013591309 ubox
29 37 0.006688453 ubox
29 44 0.024946678 ubox
29 47 0.801595953 ubox
29 49 0.105490634 ubox
29 58 0.003242564 ubox
29 77 0.008730707 ubox
29 78 0.010445974 ubox
30 46 0.801609225 ubox
30 48 0.074975715 ubox
30 76 0.012258897 ubox
31 38 0.003816134 ubox
31 45 0.801531185 ubox
31 48 0.099221747 ubox
31 75 0.012258700 ubox
32 37 0.006714112 ubox
32 39 0.206766877 ubox
32 44 0.754976847 ubox
32 47 0.124186892 ubox
32 49 0.043874133 ubox
32 74 0.011620059 ubox
32 77 0.006682295 ubox
33 38 0.225420177 ubox
33 46 0.124211244 ubox
33 48 0.040170528 ubox
33 76 0.006707997 ubox
34 45 0.124038958 ubox
34 75 0.006700396 ubox
36 46 0.004027140 ubox
37 45 0.007012083 ubox
37 48 0.577483388 ubox
38 44 0.013109803 ubox
38 47 0.584145744 ubox
39 46 0.584162733 ubox
40 45 0.583165746 ubox
40 46 0.003708043 ubox
41 45 0.004202176 ubox
44 59 0.005331918 ubox
45 58 0.005459421 ubox
46 57 0.005418602 ubox
50 60 0.017679721 ubox
51 59 0.025088872 ubox
51 76 0.004739908 ubox
52 75 0.004835058 ubox
52 76 0.010013059 ubox
53 75 0.010179941 ubox
53 76 0.003951853 ubox
54 60 0.031007318 ubox
54 75 0.003867844 ubox
55 59 0.033993872 ubox
55 75 0.003233522 ubox
55 76 0.007592854 ubox
56 75 0.007759283 ubox
56 76 0.005591289 ubox
57 75 0.005703841 ubox
57 76 0.020482540 ubox
58 75 0.020780282 ubox
59 70 0.038059022 ubox
59 74 0.018395871 ubox
60 69 0.040191720 ubox
60 73 0.016420324 ubox
61 68 0.042294351 ubox
62 67 0.039156021 ubox
68 77 0.005803686 ubox
69 76 0.005700952 ubox
70 75 0.005643671 ubox
1 81 0.9500000 lbox
2 80 0.9500000 lbox
3 79 0.9500000 lbox
4 78 0.9500000 lbox
8 76 0.9500000 lbox
9 75 0.9500000 lbox
10 74 0.9500000 lbox
12 72 0.9500000 lbox
13 71 0.9500000 lbox
14 70 0.9500000 lbox
15 69 0.9500000 lbox
19 65 0.9500000 lbox
20 64 0.9500000 lbox
21 63 0.9500000 lbox
22 62 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
showpage
end
%%EOF
