%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGCGAUGCCUAUUUUAGUCAAAGCGGCUGCGGGCUUGGGGACCCGGCCCGGGCAGCGGAGCUUCCGGACCCGCCGACCCGCCGAGGAGCGCGCGUCGGGCUCCCGUCGAGCAGCUGAGCCCGUGUGCCCCGCGUCCCGCGCCCCGAAGCUGCCGCUCCGAACUUUGGUCGGCGCUGCCCAGGCUCCCCGCCAGGGACCAGCCGGGAAUUUUCAAA\
) } def
/len { sequence length } bind def

/coor [
[100.34126282 117.16075897]
[94.05646515 130.78063965]
[87.77165985 144.40052795]
[81.48685455 158.02041626]
[75.20204926 171.64030457]
[80.42958832 186.31376648]
[73.86188507 200.03672791]
[59.84075928 204.92996216]
[53.55595779 218.54985046]
[54.79927444 234.32212830]
[42.44130707 242.63656616]
[36.15650177 256.25643921]
[29.87170029 269.87634277]
[28.72533989 286.79147339]
[12.15390015 290.37249756]
[4.12539673 275.44000244]
[16.25181580 263.59152222]
[22.53661919 249.97164917]
[28.82142258 236.35176086]
[27.12857246 221.55366516]
[39.93607330 212.26504517]
[46.22087860 198.64515686]
[40.84569931 184.80163574]
[47.02536392 170.89961243]
[61.58216858 165.35549927]
[67.86697388 151.73561096]
[74.15177155 138.11572266]
[80.43657684 124.49584198]
[86.72138214 110.87595367]
[81.61254120 105.38507080]
[71.39487457 94.40331268]
[66.28603363 88.91242981]
[52.24903488 94.20039368]
[38.21203232 99.48835754]
[24.17502975 104.77632141]
[10.13802814 110.06428528]
[-3.89897418 115.35225677]
[-10.82205296 121.30298615]
[-18.17654228 120.61368561]
[-32.28828812 125.69882202]
[-42.45049286 138.56977844]
[-58.63694000 135.93710327]
[-64.19640350 120.50906372]
[-53.40977859 108.15670776]
[-37.37342453 111.58707428]
[-23.26167870 106.50193787]
[-9.18693924 101.31525421]
[4.85006237 96.02728271]
[18.88706398 90.73931885]
[32.92406464 85.45135498]
[46.96106720 80.16339111]
[60.99806976 74.87542725]
[69.08287048 62.24071121]
[68.00298309 47.27963257]
[64.26556396 38.95065308]
[67.01691437 32.09545517]
[66.15273285 17.12036896]
[65.28855133 2.14528251]
[64.42437744 -12.82980347]
[63.56019592 -27.80488968]
[62.58813477 -42.77336121]
[61.50824738 -57.73443604]
[60.42835999 -72.69551086]
[59.34847260 -87.65659332]
[58.26858139 -102.61766815]
[57.18869400 -117.57875061]
[48.47796249 -130.78608704]
[55.27891541 -144.03735352]
[54.19902802 -158.99842834]
[45.58137512 -165.62426758]
[42.10173798 -175.69071960]
[44.67988205 -185.79849243]
[52.23153305 -192.67272949]
[51.58324051 -207.65872192]
[50.93495178 -222.64469910]
[38.21374130 -228.45454407]
[29.27856827 -239.12693787]
[25.82881737 -252.54331970]
[28.48227882 -266.07220459]
[36.66538620 -277.08532715]
[48.73601151 -283.46817017]
[48.30374146 -298.46194458]
[44.92979431 -306.94467163]
[47.97484970 -313.67456055]
[47.75868988 -328.67300415]
[44.50733185 -337.20346069]
[47.64905167 -343.88876343]
[47.64905167 -358.88876343]
[44.52095795 -367.46520996]
[47.75868988 -374.10455322]
[47.97484970 -389.10299683]
[48.19100571 -404.10140991]
[48.40716171 -419.09985352]
[48.62332153 -434.09829712]
[48.83947754 -449.09674072]
[46.29895401 -453.64474487]
[45.80302811 -458.25216675]
[47.03274155 -462.13140869]
[49.40312958 -464.73504639]
[50.26730728 -479.71011353]
[51.13148880 -494.68521118]
[51.99566650 -509.66030884]
[52.85984802 -524.63537598]
[53.72402954 -539.61047363]
[45.74424362 -549.73950195]
[46.76919556 -562.19140625]
[55.70628738 -570.33856201]
[56.78617477 -585.29962158]
[46.25616837 -597.08496094]
[47.22723770 -612.85943604]
[59.12326431 -623.26422119]
[74.88654327 -622.12640381]
[85.16500092 -610.12109375]
[83.86061859 -594.37072754]
[71.74725342 -584.21972656]
[70.66736603 -569.25866699]
[79.16361237 -553.90100098]
[68.69911194 -538.74627686]
[67.83493042 -523.77117920]
[66.97075653 -508.79611206]
[66.10657501 -493.82104492]
[65.24239349 -478.84594727]
[64.37821198 -463.87084961]
[63.83792114 -448.88058472]
[63.62176132 -433.88214111]
[63.40560532 -418.88369751]
[63.18944931 -403.88525391]
[62.97328949 -388.88681030]
[62.75713348 -373.88839722]
[62.64905167 -358.88876343]
[62.64905167 -343.88876343]
[62.75713348 -328.88916016]
[62.97328949 -313.89071655]
[63.29751205 -298.89422607]
[63.72978210 -283.90045166]
[78.13594055 -276.57565308]
[86.93180084 -262.90573120]
[87.63614655 -246.57170105]
[79.96202850 -232.02920532]
[65.92093658 -223.29299927]
[66.56922913 -208.30700684]
[67.21752167 -193.32102966]
[78.76302338 -177.80636597]
[69.16010284 -160.07832336]
[70.23999786 -145.11724854]
[78.87348938 -132.98002625]
[72.14977264 -118.65863800]
[73.22966003 -103.69755554]
[74.30954742 -88.73648071]
[75.38943481 -73.77540588]
[76.46932220 -58.81432343]
[77.54920959 -43.85324860]
[81.16407013 -37.41147614]
[78.53527832 -28.66906929]
[79.39945984 -13.69398308]
[80.26364136 1.28110266]
[81.12782288 16.25618935]
[81.99199677 31.23127365]
[82.96405792 46.19974518]
[84.04394531 61.16082382]
[139.16398621 98.96305847]
[150.71617126 108.53107452]
[162.26835632 118.09909821]
[177.79176331 116.81017303]
[189.37101746 126.67807007]
[190.50415039 141.48521423]
[202.05633545 151.05323792]
[214.94400024 150.62544250]
[224.36820984 158.82815552]
[225.63699341 170.85469055]
[237.05009460 180.58818054]
[248.46319580 190.32168579]
[259.87631226 200.05519104]
[271.28939819 209.78868103]
[285.73776245 204.76948547]
[300.66000366 207.63723755]
[312.06744385 217.52340698]
[316.96206665 231.69728088]
[314.12402344 246.31954956]
[325.53713989 256.05303955]
[336.95022583 265.78656006]
[352.47116089 268.85437012]
[357.13427734 283.00021362]
[368.54736328 292.73370361]
[379.96047974 302.46719360]
[396.00265503 302.63543701]
[405.75927734 315.37072754]
[401.74591064 330.90368652]
[387.04125977 337.31872559]
[372.92547607 329.69479370]
[370.22698975 313.88031006]
[358.81387329 304.14682007]
[347.40075684 294.41333008]
[332.69619751 292.04168701]
[327.21673584 277.19964600]
[315.80361938 267.46615601]
[304.39053345 257.73266602]
[290.39959717 262.84338379]
[275.63076782 260.24755859]
[264.06781006 250.54374695]
[258.88043213 236.26130676]
[261.55590820 221.20179749]
[250.14280701 211.46829224]
[238.72970581 201.73478699]
[227.31658936 192.00129700]
[215.90348816 182.26779175]
[198.49758911 180.01400757]
[192.48831177 162.60542297]
[180.93612671 153.03739929]
[166.17703247 154.68191528]
[154.32516479 145.14314270]
[152.70033264 129.65129089]
[141.14814758 120.08325958]
[129.59596252 110.51524353]
[122.28228760 112.17662048]
[125.60480499 126.80402374]
[110.97734833 130.12629700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 26]
[5 25]
[8 22]
[9 21]
[11 19]
[12 18]
[13 17]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[39 46]
[40 45]
[53 160]
[54 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[68 145]
[69 144]
[73 142]
[74 141]
[75 140]
[81 135]
[82 134]
[84 133]
[85 132]
[87 131]
[88 130]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[104 118]
[107 116]
[108 115]
[161 214]
[162 213]
[163 212]
[166 209]
[167 208]
[170 206]
[171 205]
[172 204]
[173 203]
[174 202]
[179 197]
[180 196]
[181 195]
[183 193]
[184 192]
[185 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
