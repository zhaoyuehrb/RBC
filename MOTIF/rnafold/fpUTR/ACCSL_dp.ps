%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ACCSL)
} def

/sequence { (\
UCUCUUUCUCCAUAGGUGCCAGGCAGCCUUCAGAGGCCAGUAAAGAUACCCGGAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.008430408 ubox
1 46 0.016426970 ubox
1 53 0.003914114 ubox
1 54 0.010498534 ubox
2 35 0.011924361 ubox
2 40 0.009617010 ubox
2 45 0.017968735 ubox
2 52 0.004972876 ubox
2 53 0.011197243 ubox
2 55 0.050684256 ubox
3 34 0.011935587 ubox
3 39 0.009387922 ubox
3 44 0.017647306 ubox
3 46 0.042082877 ubox
3 52 0.009014062 ubox
3 54 0.051141750 ubox
4 33 0.011930097 ubox
4 35 0.003733153 ubox
4 36 0.004019202 ubox
4 40 0.019443108 ubox
4 45 0.045139681 ubox
4 53 0.051006288 ubox
4 55 0.011097003 ubox
5 32 0.011482748 ubox
5 34 0.003529721 ubox
5 35 0.003196156 ubox
5 36 0.009093984 ubox
5 39 0.018961422 ubox
5 40 0.005885622 ubox
5 43 0.004392352 ubox
5 44 0.045052437 ubox
5 52 0.047860262 ubox
5 54 0.009007352 ubox
5 55 0.005354953 ubox
6 33 0.003375198 ubox
6 35 0.013365016 ubox
6 36 0.003745472 ubox
6 39 0.006856567 ubox
6 40 0.003955125 ubox
6 42 0.005013140 ubox
6 43 0.044613192 ubox
6 53 0.006569054 ubox
6 54 0.003908141 ubox
6 55 0.009716509 ubox
7 34 0.015447666 ubox
7 36 0.074270604 ubox
7 42 0.032515941 ubox
7 46 0.003990183 ubox
7 52 0.004314670 ubox
7 53 0.003373497 ubox
7 54 0.010769466 ubox
8 15 0.004353908 ubox
8 33 0.015793966 ubox
8 35 0.095830677 ubox
8 36 0.003293363 ubox
8 40 0.017456999 ubox
8 45 0.004068814 ubox
8 52 0.003393967 ubox
8 53 0.010751359 ubox
8 55 0.981645190 ubox
9 14 0.003969820 ubox
9 32 0.015327509 ubox
9 34 0.096067237 ubox
9 39 0.016060123 ubox
9 44 0.003928572 ubox
9 52 0.009767028 ubox
9 54 0.993229357 ubox
10 16 0.005522542 ubox
10 33 0.095934287 ubox
10 36 0.016733862 ubox
10 52 0.004076705 ubox
10 53 0.994584709 ubox
11 15 0.005536806 ubox
11 35 0.016766052 ubox
11 52 0.994048828 ubox
12 47 0.007351638 ubox
13 46 0.007374999 ubox
13 48 0.011407332 ubox
14 29 0.099936248 ubox
14 30 0.004277196 ubox
14 47 0.011379518 ubox
15 28 0.101354827 ubox
15 29 0.004329360 ubox
15 38 0.004314131 ubox
15 50 0.990233653 ubox
15 51 0.050223815 ubox
16 24 0.015167870 ubox
16 27 0.101280178 ubox
16 28 0.004371934 ubox
16 37 0.004072671 ubox
16 47 0.044251522 ubox
16 49 0.990968932 ubox
16 50 0.045052354 ubox
17 23 0.015131505 ubox
17 25 0.094377593 ubox
17 26 0.069465540 ubox
17 36 0.003877363 ubox
17 39 0.003813630 ubox
17 42 0.019899830 ubox
17 46 0.046412646 ubox
17 48 0.985853145 ubox
18 24 0.125763047 ubox
18 27 0.004720487 ubox
18 37 0.033691211 ubox
18 38 0.004195110 ubox
18 41 0.032124977 ubox
18 47 0.919457320 ubox
19 23 0.125081140 ubox
19 26 0.004850479 ubox
19 36 0.034140491 ubox
19 40 0.033983195 ubox
19 53 0.003286335 ubox
20 35 0.034127379 ubox
20 52 0.003293910 ubox
21 29 0.028717535 ubox
21 30 0.006965295 ubox
22 28 0.028970344 ubox
22 29 0.006941723 ubox
22 31 0.010663817 ubox
22 38 0.036390936 ubox
23 27 0.028504241 ubox
23 28 0.006858706 ubox
23 30 0.008412696 ubox
23 37 0.034562496 ubox
23 41 0.942620946 ubox
24 36 0.032841656 ubox
24 40 0.946015562 ubox
26 37 0.992318873 ubox
27 36 0.993634648 ubox
28 35 0.993405953 ubox
28 36 0.008582838 ubox
29 34 0.918899357 ubox
29 35 0.009508684 ubox
30 34 0.029007771 ubox
35 50 0.006527889 ubox
35 51 0.015738772 ubox
36 49 0.006650641 ubox
36 50 0.015896992 ubox
37 53 0.058933930 ubox
38 52 0.059159559 ubox
40 47 0.016465886 ubox
40 49 0.084407895 ubox
41 46 0.016590235 ubox
41 48 0.084226423 ubox
42 47 0.078062775 ubox
48 56 0.006256944 ubox
49 55 0.007046440 ubox
8 55 0.9500000 lbox
9 54 0.9500000 lbox
10 53 0.9500000 lbox
11 52 0.9500000 lbox
15 50 0.9500000 lbox
16 49 0.9500000 lbox
17 48 0.9500000 lbox
18 47 0.9500000 lbox
23 41 0.9500000 lbox
24 40 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
showpage
end
%%EOF
