%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCUUGGCUUCAGCCCGGCCGCCGCCAGGCGUUGGCAUCGCCGGGGAGAGCCUUCCGGACUCCGGGCGGCGGCUGGCUGGGGGCGCGUUCCGAGGCGCCCUCAGGCAGGGCGCGGGGGCAGAGCCUCGCCUGGGUUCUGGAGGCUGCGGGGCCAUCGCUCCAGAUGCGAAAGCC\
) } def
/len { sequence length } bind def

/coor [
[60.16670227 241.18064880]
[61.46860886 226.23725891]
[69.03650665 213.28631592]
[81.41626740 204.81628418]
[96.22919464 202.45462036]
[110.62904358 206.65513611]
[121.85079193 216.61323547]
[118.16172028 202.07395935]
[114.47264862 187.53468323]
[110.78356934 172.99539185]
[107.09449768 158.45611572]
[103.40542603 143.91682434]
[99.71634674 129.37754822]
[91.51122284 128.12580872]
[83.98364258 124.62918854]
[77.73442078 119.16676331]
[64.24474335 125.72637177]
[50.75505829 132.28598022]
[37.26537704 138.84559631]
[23.77569389 145.40519714]
[10.28601170 151.96481323]
[-2.70436883 159.46481323]
[-15.12999821 167.86741638]
[-27.55562782 176.27001953]
[-39.98125839 184.67262268]
[-46.66221619 199.64915466]
[-62.99863052 201.08219910]
[-72.18499756 187.49755859]
[-64.77117157 172.86993408]
[-48.38386154 172.24699402]
[-35.95822906 163.84439087]
[-23.53260040 155.44178772]
[-11.10697174 147.03918457]
[-25.95747375 144.92669678]
[-36.82514191 134.58775330]
[-39.67504883 119.86096954]
[-33.44908524 106.21408844]
[-20.45881271 98.71389771]
[-5.52724314 100.14505768]
[5.80185890 109.97620392]
[9.32224178 124.55725098]
[3.72640228 138.47512817]
[17.21608353 131.91551208]
[30.70576668 125.35591125]
[44.19544983 118.79629517]
[57.68513107 112.23668671]
[71.17481232 105.67707825]
[71.72899628 92.00806427]
[78.41313171 80.07193756]
[89.77791595 72.45677185]
[103.35913086 70.81375122]
[108.82154083 56.84371185]
[114.28395081 42.87366867]
[119.74635315 28.90362740]
[125.20876312 14.93358421]
[125.42336273 5.76967430]
[130.89408875 0.76548481]
[136.60357666 -13.10540962]
[142.31306458 -26.97630310]
[148.02255249 -40.84719849]
[153.73204041 -54.71809387]
[151.82995605 -70.42454529]
[163.82925415 -79.24871826]
[169.53875732 -93.11961365]
[175.24824524 -106.99050903]
[180.95773315 -120.86140442]
[186.66722107 -134.73229980]
[192.37670898 -148.60319519]
[198.08621216 -162.47409058]
[179.20945740 -179.66664124]
[191.85031128 -197.95465088]
[194.23625183 -212.76367188]
[196.62220764 -227.57270813]
[189.66442871 -244.60617065]
[201.23170471 -257.78564453]
[203.35444641 -272.63467407]
[205.47718811 -287.48370361]
[199.77070618 -302.23995972]
[209.23126221 -313.74417114]
[211.35400391 -328.59323120]
[213.47674561 -343.44226074]
[215.59948730 -358.29129028]
[217.72222900 -373.14035034]
[219.84497070 -387.98937988]
[221.96771240 -402.83840942]
[224.09046936 -417.68743896]
[226.21321106 -432.53649902]
[228.33595276 -447.38552856]
[217.10607910 -458.09393311]
[214.34829712 -473.36398315]
[221.12300110 -487.32400513]
[234.82519531 -494.60614014]
[250.18611145 -492.41021729]
[261.29916382 -481.58062744]
[263.89114380 -466.28158569]
[256.96536255 -452.39584351]
[243.18498230 -445.26278687]
[241.06224060 -430.41375732]
[238.93949890 -415.56469727]
[236.81675720 -400.71566772]
[234.69401550 -385.86663818]
[232.57127380 -371.01757812]
[230.44853210 -356.16854858]
[228.32579041 -341.31951904]
[226.20303345 -326.47048950]
[224.08029175 -311.62142944]
[229.93861389 -297.92730713]
[220.32623291 -285.36096191]
[218.20349121 -270.51193237]
[216.08074951 -255.66288757]
[223.09129333 -245.78094482]
[221.42315674 -233.37524414]
[211.43124390 -225.18675232]
[209.04528809 -210.37771606]
[206.65933228 -195.56869507]
[213.76419067 -190.42138672]
[217.70780945 -181.24378967]
[231.81831360 -186.33236694]
[245.92881775 -191.42095947]
[260.03933716 -196.50953674]
[274.14984131 -201.59811401]
[286.99856567 -212.65916443]
[301.18420410 -203.37457275]
[296.18945312 -187.17306519]
[279.23840332 -187.48760986]
[265.12789917 -182.39903259]
[251.01741028 -177.31045532]
[236.90690613 -172.22186279]
[222.79640198 -167.13328552]
[211.95710754 -156.76458740]
[206.24760437 -142.89369202]
[200.53811646 -129.02281189]
[194.82862854 -115.15190887]
[189.11914062 -101.28101349]
[183.40965271 -87.41011810]
[177.70014954 -73.53923035]
[180.01062012 -58.82491302]
[167.60293579 -49.00860214]
[161.89344788 -35.13770676]
[156.18395996 -21.26681328]
[150.47447205 -7.39591837]
[144.76498413 6.47497606]
[139.17880249 20.39599228]
[133.71640015 34.36603546]
[128.25399780 48.33607864]
[122.79158020 62.30612183]
[117.32917023 76.27616119]
[128.29966736 92.11013794]
[127.10376740 111.33605957]
[114.25563049 125.68846893]
[117.94470978 140.22775269]
[121.63378143 154.76704407]
[125.32285309 169.30632019]
[129.01193237 183.84559631]
[132.70100403 198.38488770]
[136.39007568 212.92416382]
[141.60368347 226.98895264]
[148.28274536 240.41989136]
[154.96180725 253.85083008]
[161.64086914 267.28176880]
[176.88400269 270.77191162]
[186.27622986 283.27471924]
[185.38282776 298.88674927]
[174.62562561 310.23648071]
[159.08386230 311.96493530]
[146.09587097 303.25598145]
[141.79418945 288.22171021]
[148.20993042 273.96084595]
[141.53086853 260.52990723]
[134.85180664 247.09895325]
[128.17274475 233.66802979]
[126.15418243 248.53158569]
[117.97261810 261.10385132]
[105.20010376 268.96914673]
[90.29080200 270.61618042]
[76.10945892 265.72848511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 156]
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[22 33]
[23 32]
[24 31]
[25 30]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[57 142]
[58 141]
[59 140]
[60 139]
[61 138]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[71 115]
[72 114]
[73 113]
[75 110]
[76 109]
[77 108]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[157 171]
[158 170]
[159 169]
[160 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
