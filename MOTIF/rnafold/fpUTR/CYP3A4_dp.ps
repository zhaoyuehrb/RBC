%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:49:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYP3A4)
} def

/sequence { (\
AAUCACUGCUGUGCAGGGCAGGAAAGCUCCAUGCACAUAGCCCAGCAAAGAGCAACACAGAGCUGAAAGGAAGACUCAGAGGAGAGAGAUAAGUAAGGAAAGUAGUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 90 0.019485050 ubox
2 106 0.008699999 ubox
3 23 0.006152217 ubox
3 51 0.005332285 ubox
3 71 0.003880219 ubox
3 87 0.006077694 ubox
3 89 0.020309748 ubox
3 99 0.025865372 ubox
3 105 0.008424092 ubox
4 22 0.006572672 ubox
4 50 0.006416830 ubox
4 70 0.004139922 ubox
4 73 0.003218203 ubox
4 86 0.006480545 ubox
4 88 0.020432900 ubox
4 97 0.004685933 ubox
4 98 0.027638801 ubox
4 107 0.974336146 ubox
5 94 0.009739420 ubox
5 103 0.012477789 ubox
5 106 0.996205612 ubox
6 21 0.008130533 ubox
6 40 0.027212980 ubox
6 69 0.003778287 ubox
6 84 0.007099603 ubox
6 86 0.009193035 ubox
6 93 0.010189281 ubox
6 97 0.015610367 ubox
6 102 0.012903593 ubox
6 105 0.998629794 ubox
7 20 0.008150358 ubox
7 39 0.027435570 ubox
7 47 0.011828691 ubox
7 54 0.007829976 ubox
7 68 0.003641879 ubox
7 83 0.007077878 ubox
7 85 0.008915870 ubox
7 92 0.009786391 ubox
7 95 0.025407978 ubox
7 96 0.012477354 ubox
7 101 0.012409294 ubox
7 104 0.998130183 ubox
8 19 0.008160472 ubox
8 38 0.027260770 ubox
8 41 0.036490687 ubox
8 46 0.014445142 ubox
8 53 0.009148115 ubox
8 94 0.027844131 ubox
8 103 0.997816772 ubox
9 18 0.008156593 ubox
9 40 0.037066108 ubox
9 45 0.014458951 ubox
9 50 0.006124949 ubox
9 52 0.009150004 ubox
9 81 0.006815603 ubox
9 93 0.028023204 ubox
9 97 0.003817181 ubox
9 98 0.004384785 ubox
9 102 0.997520801 ubox
10 17 0.008058040 ubox
10 37 0.449704596 ubox
10 39 0.027219039 ubox
10 44 0.013686816 ubox
10 49 0.009265774 ubox
10 51 0.008739546 ubox
10 59 0.003642651 ubox
10 80 0.006047425 ubox
10 92 0.024372507 ubox
10 96 0.005190802 ubox
10 97 0.004726077 ubox
10 101 0.864867914 ubox
11 36 0.990482758 ubox
11 38 0.010922500 ubox
11 41 0.006575613 ubox
11 43 0.012938087 ubox
11 46 0.005664282 ubox
11 53 0.003506106 ubox
11 58 0.005364509 ubox
12 20 0.004517267 ubox
12 35 0.991462082 ubox
12 37 0.008242422 ubox
12 40 0.006390284 ubox
12 45 0.005599848 ubox
12 47 0.111191034 ubox
12 57 0.005236231 ubox
12 95 0.004038925 ubox
13 19 0.005021608 ubox
13 34 0.992048239 ubox
13 36 0.005756505 ubox
13 41 0.012891267 ubox
13 46 0.123398951 ubox
13 56 0.005053625 ubox
13 94 0.004914304 ubox
14 18 0.004986752 ubox
14 33 0.992024326 ubox
14 40 0.012892973 ubox
14 45 0.123248310 ubox
14 93 0.004941482 ubox
15 32 0.968831520 ubox
16 28 0.004954551 ubox
16 29 0.455164578 ubox
16 30 0.822031781 ubox
16 43 0.123821819 ubox
17 27 0.004326943 ubox
17 28 0.469330190 ubox
17 29 0.820188640 ubox
17 30 0.297322877 ubox
17 42 0.124036225 ubox
18 27 0.938562554 ubox
18 28 0.102766448 ubox
18 29 0.298513783 ubox
18 34 0.018123887 ubox
18 41 0.123821673 ubox
19 26 0.942272753 ubox
19 33 0.019348512 ubox
19 40 0.123463142 ubox
20 28 0.297343487 ubox
20 32 0.023077183 ubox
21 27 0.299689317 ubox
21 28 0.036792435 ubox
21 30 0.046774147 ubox
22 27 0.040805941 ubox
22 29 0.046883339 ubox
23 28 0.043896578 ubox
26 34 0.115182364 ubox
26 53 0.009787326 ubox
27 33 0.115321551 ubox
27 52 0.009797991 ubox
28 51 0.009796431 ubox
29 50 0.009789699 ubox
31 38 0.007818709 ubox
32 37 0.007661489 ubox
32 39 0.006676172 ubox
32 47 0.009843065 ubox
33 38 0.006225419 ubox
33 41 0.004248588 ubox
33 46 0.010029922 ubox
34 40 0.004368901 ubox
34 45 0.010022763 ubox
37 90 0.010444820 ubox
37 94 0.011906514 ubox
38 65 0.044303029 ubox
38 89 0.010825318 ubox
38 91 0.010854564 ubox
38 93 0.012117185 ubox
38 95 0.011946771 ubox
39 64 0.053225843 ubox
39 76 0.006927748 ubox
39 90 0.010865053 ubox
39 94 0.011442717 ubox
40 46 0.272643790 ubox
40 53 0.057570620 ubox
40 63 0.054101377 ubox
40 75 0.008384269 ubox
40 94 0.041496759 ubox
41 45 0.270945721 ubox
41 52 0.057533007 ubox
41 62 0.054020204 ubox
41 70 0.587132570 ubox
41 82 0.033198442 ubox
41 93 0.042463220 ubox
41 98 0.193971974 ubox
42 69 0.588471389 ubox
42 70 0.202158149 ubox
42 81 0.033169942 ubox
42 82 0.050905943 ubox
42 97 0.194246569 ubox
42 98 0.109156893 ubox
43 65 0.861786493 ubox
43 69 0.199651053 ubox
43 81 0.050994044 ubox
43 97 0.108835033 ubox
44 64 0.865637175 ubox
45 53 0.193496559 ubox
45 63 0.866025060 ubox
45 94 0.139120551 ubox
46 52 0.193603362 ubox
46 62 0.865365494 ubox
46 65 0.093165233 ubox
46 93 0.139865327 ubox
47 64 0.066391018 ubox
49 64 0.018302662 ubox
50 63 0.016202430 ubox
50 77 0.004527958 ubox
51 64 0.431097371 ubox
51 76 0.004423550 ubox
52 63 0.445654236 ubox
52 75 0.004339487 ubox
52 94 0.004512302 ubox
53 62 0.445775043 ubox
53 65 0.008964618 ubox
53 93 0.004607934 ubox
54 64 0.008621803 ubox
55 94 0.008157070 ubox
56 65 0.033678790 ubox
56 93 0.008434056 ubox
56 107 0.006242181 ubox
57 64 0.030476486 ubox
57 94 0.007329321 ubox
57 103 0.003336007 ubox
57 106 0.006313238 ubox
58 65 0.036604256 ubox
58 93 0.007676719 ubox
58 102 0.003398177 ubox
58 105 0.006311947 ubox
58 107 0.005741090 ubox
59 64 0.033128437 ubox
59 106 0.005804901 ubox
60 77 0.156735697 ubox
61 76 0.156950258 ubox
62 75 0.157004092 ubox
62 94 0.028548649 ubox
62 103 0.008231507 ubox
63 69 0.023284936 ubox
63 70 0.053008095 ubox
63 73 0.166922549 ubox
63 79 0.078516335 ubox
63 81 0.012194817 ubox
63 82 0.007637532 ubox
63 84 0.007574331 ubox
63 86 0.004966679 ubox
63 88 0.006467229 ubox
63 93 0.029194788 ubox
63 97 0.022128614 ubox
63 98 0.026098811 ubox
63 102 0.008277193 ubox
64 68 0.021218190 ubox
64 69 0.052223526 ubox
64 72 0.166562878 ubox
64 78 0.079379040 ubox
64 80 0.012212763 ubox
64 81 0.007626081 ubox
64 83 0.007593614 ubox
64 85 0.004953292 ubox
64 87 0.006449499 ubox
64 92 0.028937369 ubox
64 95 0.007909326 ubox
64 96 0.022057905 ubox
64 97 0.026146760 ubox
64 101 0.008223008 ubox
65 77 0.081031661 ubox
65 94 0.012548683 ubox
66 76 0.072267800 ubox
68 76 0.072688368 ubox
69 75 0.090861245 ubox
69 76 0.024348683 ubox
69 77 0.024276841 ubox
70 75 0.029988334 ubox
70 76 0.020623642 ubox
70 77 0.046158649 ubox
71 76 0.043359357 ubox
74 94 0.044240585 ubox
75 81 0.029693421 ubox
75 82 0.028435155 ubox
75 84 0.484037990 ubox
75 86 0.616357753 ubox
75 88 0.567356549 ubox
75 93 0.043764682 ubox
75 97 0.011649650 ubox
75 98 0.008063604 ubox
76 80 0.026842409 ubox
76 81 0.026317649 ubox
76 82 0.011467159 ubox
76 83 0.487183902 ubox
76 85 0.620466768 ubox
76 87 0.571129332 ubox
76 89 0.026653489 ubox
76 92 0.038936543 ubox
76 96 0.010712713 ubox
76 97 0.007131069 ubox
76 98 0.007820275 ubox
76 99 0.014933480 ubox
77 81 0.016839157 ubox
77 82 0.486801377 ubox
77 84 0.620646093 ubox
77 86 0.571744271 ubox
77 88 0.030130935 ubox
77 97 0.010500242 ubox
77 98 0.016085954 ubox
4 107 0.9500000 lbox
5 106 0.9500000 lbox
6 105 0.9500000 lbox
7 104 0.9500000 lbox
8 103 0.9500000 lbox
9 102 0.9500000 lbox
10 101 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
43 65 0.9500000 lbox
44 64 0.9500000 lbox
45 63 0.9500000 lbox
46 62 0.9500000 lbox
75 86 0.9500000 lbox
76 85 0.9500000 lbox
77 84 0.9500000 lbox
showpage
end
%%EOF
