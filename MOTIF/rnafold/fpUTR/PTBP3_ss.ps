%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:04:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUGGGGCGAGCGGCCGACGGCGGGUGCACGCGUCGGUACACGUCUGGGCGGCGACCUGGUCGCAAGCCAUGGUCCCACGCGGGGUCCCAGGGCCGCCGCGGGACUUGGCCGAGGUCUCCCGACUUGUGCUGUGAGAUACGUUAACGCUUUCUCGACACCAGGGGUCUGGACUUAGUGACC\
) } def
/len { sequence length } bind def

/coor [
[96.53646088 201.38856506]
[83.34607697 190.73727417]
[89.92965698 175.11380005]
[90.44178009 160.12254333]
[90.95389557 145.13128662]
[78.47557068 140.68617249]
[67.77989960 132.87141418]
[55.67481995 141.72958374]
[43.56974411 150.58775330]
[31.46466637 159.44592285]
[19.35958862 168.30407715]
[20.43078041 182.05964661]
[14.60579491 194.44735718]
[3.50564599 202.27159119]
[-9.90362358 203.57269287]
[-22.10313416 198.11683655]
[-34.35768127 206.76704407]
[-46.61223221 215.41725159]
[-58.86677933 224.06745911]
[-71.12133026 232.71765137]
[-83.37587738 241.36785889]
[-95.63042450 250.01806641]
[-100.85269165 257.54220581]
[-108.16885376 258.70922852]
[-120.56930542 267.14895630]
[-123.27352905 282.72018433]
[-136.24414062 291.75006104]
[-151.78588867 288.88134766]
[-160.67814636 275.81600952]
[-157.64527893 260.30545044]
[-144.48664856 251.55183411]
[-129.00901794 254.74851990]
[-116.60857391 246.30879211]
[-104.28063202 237.76351929]
[-92.02607727 229.11331177]
[-79.77153015 220.46310425]
[-67.51698303 211.81289673]
[-55.26243591 203.16270447]
[-43.00788879 194.51249695]
[-30.75333977 185.86228943]
[-31.05992317 169.46031189]
[-21.44035149 155.96740723]
[-5.51865053 150.80751038]
[10.50142288 156.19900513]
[22.60650063 147.34083557]
[34.71157837 138.48266602]
[46.81665421 129.62451172]
[58.92173004 120.76634216]
[55.12423325 110.23867798]
[53.97972870 99.10572052]
[55.55588150 88.02562714]
[41.90174866 81.81558990]
[28.24761200 75.60555267]
[14.59347725 69.39550781]
[0.93934160 63.18547058]
[-13.77007961 68.96547699]
[-28.22471237 62.57492828]
[-33.84888077 47.80521774]
[-27.30586243 33.41895676]
[-12.47751713 27.95125961]
[1.83876193 34.64601135]
[7.14938068 49.53133392]
[20.80351639 55.74137497]
[34.45765305 61.95141220]
[48.11178589 68.16145325]
[61.76592255 74.37149048]
[69.47139740 65.55192566]
[79.15325165 58.96247864]
[90.18468475 55.02973557]
[89.41669464 40.04940796]
[88.64870453 25.06908226]
[87.88072205 10.08875465]
[84.30882263 1.65510976]
[87.22971344 -5.15345430]
[86.71759796 -20.14470863]
[86.20548248 -35.13596344]
[85.69336700 -50.12722015]
[85.18125153 -65.11847687]
[84.66912842 -80.10973358]
[81.48102570 -85.94575500]
[81.70344543 -91.65452576]
[84.40428925 -95.61965942]
[84.40428925 -110.61965942]
[84.40428925 -125.61965942]
[84.40428925 -140.61965942]
[84.27623749 -155.61911011]
[84.02014160 -170.61692810]
[83.76404572 -185.61474609]
[83.50794983 -200.61254883]
[74.60778809 -214.38641357]
[82.32601166 -228.85572815]
[98.72276306 -229.13571167]
[106.93048096 -214.93833923]
[98.50576782 -200.86865234]
[98.76186371 -185.87083435]
[99.01795959 -170.87301636]
[99.27405548 -155.87521362]
[102.53971100 -149.22512817]
[99.40428925 -140.61965942]
[99.40428925 -125.61965942]
[99.40428925 -110.61965942]
[99.40428925 -95.61965942]
[99.66038513 -80.62184906]
[100.17250061 -65.63059235]
[100.68462372 -50.63933563]
[101.19673920 -35.64808273]
[101.70885468 -20.65682602]
[102.22097015 -5.66557074]
[102.86104584 9.32076645]
[103.62903595 24.30109406]
[104.39702606 39.28142166]
[105.16500854 54.26174545]
[127.09455109 62.79045486]
[141.94381714 81.04265594]
[145.83244324 104.24874115]
[160.34320068 108.04850769]
[174.85394287 111.84826660]
[189.36468506 115.64803314]
[203.87544250 119.44779205]
[218.38618469 123.24755859]
[227.46809387 117.20748138]
[238.15519714 117.17702484]
[246.90367126 122.92405701]
[250.94573975 132.34059143]
[265.31829834 136.63356018]
[279.69085693 140.92651367]
[294.06341553 145.21948242]
[308.43597412 149.51243591]
[323.87329102 146.04835510]
[333.85382080 157.10452271]
[348.22637939 161.39747620]
[363.66369629 157.93339539]
[373.64419556 168.98956299]
[388.01675415 173.28253174]
[402.38931274 177.57548523]
[416.79800415 181.74559021]
[431.24176025 185.79254150]
[445.68551636 189.83949280]
[460.12927246 193.88644409]
[475.20480347 185.03495789]
[491.69638062 189.72135925]
[499.54867554 204.58131409]
[514.05944824 208.38107300]
[529.72375488 203.52709961]
[541.57415771 214.86288452]
[537.41998291 230.72714233]
[521.53466797 234.80009460]
[510.25967407 222.89183044]
[495.74893188 219.09205627]
[485.63360596 227.09623718]
[472.55957031 227.81620789]
[461.29632568 220.76458740]
[456.08230591 208.33021545]
[441.63854980 204.28326416]
[427.19479370 200.23631287]
[412.75103760 196.18936157]
[405.44448853 197.41517639]
[398.09634399 191.94804382]
[383.72378540 187.65509033]
[369.35122681 183.36212158]
[354.94192505 187.13327026]
[343.93341064 175.77003479]
[329.56085205 171.47708130]
[315.15155029 175.24822998]
[304.14303589 163.88499451]
[289.77047729 159.59204102]
[275.39791870 155.29907227]
[261.02536011 151.00611877]
[246.65278625 146.71315002]
[228.23898315 152.56846619]
[214.58642578 137.75830078]
[200.07568359 133.95854187]
[185.56492615 130.15878296]
[171.05418396 126.35901642]
[156.54342651 122.55924988]
[142.03268433 118.75949097]
[137.35261536 126.89698029]
[131.11892700 133.91574097]
[123.59091187 139.52383423]
[115.08168030 143.48802185]
[105.94515228 145.64340210]
[105.43302917 160.63465881]
[104.92091370 175.62591553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 183]
[4 182]
[5 181]
[7 48]
[8 47]
[9 46]
[10 45]
[11 44]
[16 40]
[17 39]
[18 38]
[19 37]
[20 36]
[21 35]
[22 34]
[24 33]
[25 32]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[69 112]
[70 111]
[71 110]
[72 109]
[74 108]
[75 107]
[76 106]
[77 105]
[78 104]
[79 103]
[82 102]
[83 101]
[84 100]
[85 99]
[86 97]
[87 96]
[88 95]
[89 94]
[115 176]
[116 175]
[117 174]
[118 173]
[119 172]
[120 171]
[124 169]
[125 168]
[126 167]
[127 166]
[128 165]
[130 163]
[131 162]
[133 160]
[134 159]
[135 158]
[136 156]
[137 155]
[138 154]
[139 153]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
