%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:44:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCCAGCUGGUCGCGGUCCCCCCCUCAACAUGGCGGCAGCGGUGCUCUAGGCGCCGGAAGGGGGCGUGAAUCGGUGCGACCGCGCGCGUGCGCAGUACCGGGUCCGCGCCUGUCCCCGAAACUUCGCACCCCGUCGAACUCUCGCGAGAGCGGUAUCUGCGUGUCGGGACGUGCGGAGGCUCUCACUUUCCGUC\
) } def
/len { sequence length } bind def

/coor [
[48.01402283 204.25914001]
[42.21884537 218.09445190]
[36.42366791 231.92976379]
[30.62849236 245.76507568]
[32.43339539 261.48300171]
[20.37974358 270.23278809]
[14.58456612 284.06808472]
[14.15387726 293.20330811]
[8.58612537 298.07577515]
[2.57216763 311.81741333]
[7.05383348 327.22177124]
[-2.31286240 340.24652100]
[-18.34259224 340.90020752]
[-28.73871994 328.68136597]
[-25.52622414 312.96325684]
[-11.16945934 305.80343628]
[-5.15550137 292.06182861]
[0.74925214 278.27291870]
[6.54442883 264.43759155]
[4.32501650 249.70927429]
[16.79317856 239.96989441]
[22.58835411 226.13458252]
[28.38353157 212.29927063]
[34.17870712 198.46395874]
[20.80654907 205.25993347]
[5.81404495 204.78578186]
[-7.10195780 197.15840149]
[-14.75663567 184.25856018]
[-15.26250267 169.26708984]
[-8.49482059 155.88058472]
[3.87763715 147.39988708]
[18.80407524 145.91615295]
[32.60393906 151.79525757]
[41.87445831 163.58752441]
[44.32982635 178.38400269]
[52.03498840 165.51423645]
[59.74014664 152.64448547]
[67.44530487 139.77473450]
[75.15046692 126.90499115]
[69.61361694 122.21070862]
[64.98514557 116.36863708]
[61.50360489 109.55922699]
[59.37076187 102.01245117]
[58.74136353 94.00013733]
[43.75835419 93.28640747]
[28.77534485 92.57267761]
[13.79233551 91.85894775]
[-1.19067490 91.14521790]
[-16.17368507 90.43148804]
[-32.28257370 95.71732330]
[-41.82122040 81.70124817]
[-30.99345207 68.65533447]
[-15.45995617 75.44847870]
[-0.47694620 76.16220856]
[14.50606346 76.87593842]
[29.48907471 77.58966827]
[44.47208405 78.30339813]
[59.45509338 79.01712799]
[68.44425964 67.00901031]
[63.53823853 52.83399582]
[58.63222122 38.65898132]
[46.80686951 28.14843178]
[49.95594406 13.59052563]
[45.04992294 -0.58448672]
[40.14390564 -14.75949860]
[28.31855392 -25.27005005]
[31.46762657 -39.82795715]
[26.56160736 -54.00296783]
[21.65558815 -68.17797852]
[15.88548756 -75.27330017]
[16.78612137 -82.61698151]
[12.10562038 -96.86804962]
[0.44851968 -107.56490326]
[3.82817078 -122.07100677]
[-0.85233098 -136.32208252]
[-5.53283262 -150.57315063]
[-10.21333408 -164.82420349]
[-14.89383602 -179.07527161]
[-19.57433701 -193.32633972]
[-24.25483894 -207.57740784]
[-33.17891312 -210.68009949]
[-39.57534409 -217.44535828]
[-42.09755325 -226.26448059]
[-40.30008316 -235.11891174]
[-34.71148300 -242.04209900]
[-38.70858765 -256.49972534]
[-42.70569611 -270.95736694]
[-46.70280457 -285.41497803]
[-58.76357269 -296.52670288]
[-54.90742874 -312.46600342]
[-39.10123825 -316.83596802]
[-27.60505867 -305.14108276]
[-32.24517059 -289.41210938]
[-28.24806404 -274.95446777]
[-24.25095558 -260.49682617]
[-20.25384903 -246.03919983]
[-4.33189058 -232.91580200]
[-10.00377274 -212.25791931]
[-5.32327080 -198.00685120]
[-0.64276928 -183.75578308]
[4.03773260 -169.50471497]
[8.71823406 -155.25364685]
[13.39873600 -141.00257874]
[18.07923698 -126.75151062]
[29.40155792 -117.07399750]
[26.35668755 -101.54855347]
[31.03718948 -87.29748535]
[35.83060074 -73.08399963]
[40.73661804 -58.90898895]
[45.64263916 -44.73397446]
[57.11707687 -35.23731613]
[54.31891632 -19.66551781]
[59.22493744 -5.49050617]
[64.13095856 8.68450642]
[75.60539246 18.18116570]
[72.80723572 33.75296402]
[77.71324921 47.92797470]
[82.61927032 62.10298538]
[108.56511688 60.92435074]
[129.07524109 75.04805756]
[136.55114746 97.67813873]
[151.39846802 99.81285858]
[163.96873474 90.61360931]
[178.99562073 92.99002838]
[187.68823242 105.03054047]
[202.53555298 107.16526031]
[217.38287354 109.29998779]
[232.23019409 111.43470764]
[247.07752991 113.56942749]
[261.92483521 115.70415497]
[276.77215576 117.83887482]
[291.61947632 119.97360229]
[306.49880981 121.87248230]
[321.40637207 123.53505707]
[336.31396484 125.19763184]
[351.22152710 126.86020660]
[365.79428101 120.70016479]
[377.58554077 129.80046082]
[392.49310303 131.46302795]
[384.05654907 119.06043243]
[386.71649170 104.29815674]
[398.95144653 95.62025452]
[413.76300049 97.99050140]
[422.67892456 110.05310059]
[420.59927368 124.90824127]
[408.71423340 134.05859375]
[423.39627075 137.13069153]
[438.07830811 140.20278931]
[447.12994385 138.89685059]
[452.96804810 143.44186401]
[467.59951782 146.74652100]
[482.23095703 150.05117798]
[495.45822144 141.40162659]
[510.91015625 144.72029114]
[519.41937256 158.03828430]
[515.93750000 173.45425415]
[502.53030396 181.82218933]
[487.15200806 178.17755127]
[478.92630005 164.68263245]
[464.29486084 161.37796021]
[449.66339111 158.07330322]
[435.00619507 154.88482666]
[420.32415771 151.81272888]
[405.64212036 148.74063110]
[390.83053589 146.37060547]
[375.92297363 144.70803833]
[362.41653442 150.98699951]
[349.55895996 141.76777649]
[334.65139771 140.10520935]
[319.74380493 138.44264221]
[304.83624268 136.78005981]
[300.60522461 139.01623535]
[294.92318726 138.61082458]
[289.48477173 134.82092285]
[274.63745117 132.68620300]
[259.79013062 130.55146790]
[244.94279480 128.41674805]
[230.09547424 126.28202820]
[215.24815369 124.14730835]
[200.40083313 122.01258850]
[185.55351257 119.87786102]
[173.82080078 128.98165894]
[158.73309326 127.02825165]
[149.26374817 114.66017914]
[134.41642761 112.52545929]
[131.34901428 118.93717957]
[127.10093689 124.63568878]
[121.83216858 129.40635681]
[115.74116516 133.06951904]
[109.05730438 135.48722839]
[102.03233337 136.56838989]
[94.93081665 136.27232361]
[88.02021790 134.61015320]
[80.31505585 147.47990417]
[72.60990143 160.34965515]
[64.90473938 173.21940613]
[57.19957733 186.08915710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[6 19]
[7 18]
[9 17]
[10 16]
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[59 118]
[60 117]
[61 116]
[63 114]
[64 113]
[65 112]
[67 110]
[68 109]
[69 108]
[71 107]
[72 106]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[85 96]
[86 95]
[87 94]
[88 93]
[121 185]
[122 184]
[125 181]
[126 180]
[127 179]
[128 178]
[129 177]
[130 176]
[131 175]
[132 174]
[133 171]
[134 170]
[135 169]
[136 168]
[138 166]
[139 165]
[146 164]
[147 163]
[148 162]
[150 161]
[151 160]
[152 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
