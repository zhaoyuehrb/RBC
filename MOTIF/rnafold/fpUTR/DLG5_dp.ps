%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DLG5)
} def

/sequence { (\
GCCUGCCCGCCCGCCGGCCUCGGGGGGCCCGGGAGGCGUCCGGCGGGGCGGGGCGGCGCGGCCCGCCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.006312160 ubox
1 37 0.756169022 ubox
1 39 0.003347675 ubox
1 44 0.090921167 ubox
1 49 0.038902607 ubox
1 54 0.072248914 ubox
1 57 0.589702842 ubox
1 59 0.167480246 ubox
1 62 0.026031368 ubox
1 66 0.041103628 ubox
2 9 0.006331720 ubox
2 33 0.004046760 ubox
2 36 0.756824518 ubox
2 38 0.003609194 ubox
2 43 0.090352386 ubox
2 46 0.030320838 ubox
2 47 0.083700557 ubox
2 48 0.034236886 ubox
2 51 0.024927628 ubox
2 52 0.036434558 ubox
2 53 0.070102550 ubox
2 56 0.589509579 ubox
2 58 0.167583756 ubox
2 61 0.025859258 ubox
2 65 0.041199256 ubox
3 32 0.004064411 ubox
3 35 0.756841568 ubox
3 36 0.004868005 ubox
3 42 0.089623503 ubox
3 43 0.012582509 ubox
3 45 0.029989478 ubox
3 46 0.146313638 ubox
3 47 0.028143363 ubox
3 50 0.024996042 ubox
3 51 0.050392458 ubox
3 52 0.052313164 ubox
3 53 0.003357476 ubox
3 55 0.588760746 ubox
3 56 0.170671236 ubox
3 60 0.025286221 ubox
3 61 0.008342635 ubox
4 31 0.004145387 ubox
4 34 0.754147901 ubox
4 35 0.005317461 ubox
4 38 0.024176575 ubox
4 42 0.016557785 ubox
4 45 0.147841896 ubox
4 46 0.019969185 ubox
4 50 0.053367924 ubox
4 51 0.022065744 ubox
4 55 0.172971533 ubox
4 58 0.010466815 ubox
4 60 0.009130212 ubox
5 30 0.004199936 ubox
5 37 0.025234253 ubox
5 39 0.027645445 ubox
5 41 0.065760803 ubox
5 44 0.154785289 ubox
5 49 0.057162794 ubox
5 54 0.242573131 ubox
5 57 0.010650148 ubox
5 59 0.023529116 ubox
5 62 0.040923287 ubox
5 66 0.004983841 ubox
6 32 0.508291019 ubox
6 33 0.560098422 ubox
6 36 0.024116045 ubox
6 38 0.027991784 ubox
6 43 0.154487992 ubox
6 47 0.039680009 ubox
6 48 0.051165630 ubox
6 51 0.009237395 ubox
6 52 0.581856106 ubox
6 53 0.211114818 ubox
6 56 0.009815931 ubox
6 58 0.023529308 ubox
6 61 0.038366389 ubox
6 65 0.005068571 ubox
7 31 0.507350477 ubox
7 32 0.560681370 ubox
7 33 0.006208250 ubox
7 35 0.022800129 ubox
7 36 0.028774281 ubox
7 42 0.154026428 ubox
7 43 0.012327690 ubox
7 46 0.053133029 ubox
7 47 0.042699282 ubox
7 50 0.008812835 ubox
7 51 0.597397992 ubox
7 52 0.173970534 ubox
7 55 0.008866933 ubox
7 56 0.023833656 ubox
7 60 0.035573024 ubox
7 61 0.017413429 ubox
8 31 0.558498054 ubox
8 32 0.006646796 ubox
8 35 0.029585441 ubox
8 38 0.173545323 ubox
8 42 0.015813468 ubox
8 45 0.059000706 ubox
8 46 0.032046975 ubox
8 50 0.609367175 ubox
8 51 0.126260379 ubox
8 55 0.024122846 ubox
8 58 0.032526098 ubox
8 60 0.022578809 ubox
9 28 0.720003776 ubox
9 30 0.227715608 ubox
9 37 0.174262736 ubox
9 41 0.018541169 ubox
9 44 0.064289061 ubox
9 49 0.620513069 ubox
9 54 0.024389946 ubox
9 57 0.032551251 ubox
9 59 0.026762106 ubox
10 26 0.019131063 ubox
10 27 0.756500406 ubox
10 33 0.036960611 ubox
10 36 0.174249155 ubox
10 43 0.064236740 ubox
10 47 0.313862501 ubox
10 48 0.537613289 ubox
10 52 0.013521375 ubox
10 53 0.021708097 ubox
10 56 0.029208577 ubox
10 58 0.026763132 ubox
11 25 0.019529670 ubox
11 26 0.756850901 ubox
11 27 0.005649017 ubox
11 32 0.037029552 ubox
11 35 0.174186845 ubox
11 36 0.003674117 ubox
11 42 0.064094387 ubox
11 43 0.008450014 ubox
11 46 0.441432344 ubox
11 47 0.439217534 ubox
11 51 0.017434817 ubox
11 52 0.018556181 ubox
11 55 0.025418407 ubox
11 56 0.030390973 ubox
12 24 0.019901121 ubox
12 25 0.756749302 ubox
12 26 0.005578562 ubox
12 31 0.037045403 ubox
12 35 0.004444923 ubox
12 38 0.066692762 ubox
12 42 0.009061718 ubox
12 45 0.539548351 ubox
12 46 0.310995030 ubox
12 50 0.020617814 ubox
12 51 0.013829438 ubox
12 55 0.033618899 ubox
13 30 0.036235287 ubox
13 37 0.067008965 ubox
13 41 0.009538746 ubox
13 44 0.622338469 ubox
13 49 0.023357342 ubox
13 54 0.036551799 ubox
14 23 0.756764306 ubox
14 24 0.019423564 ubox
14 32 0.174223980 ubox
14 33 0.004390525 ubox
14 36 0.067015865 ubox
14 43 0.622849125 ubox
14 47 0.007561247 ubox
14 48 0.022237036 ubox
14 51 0.005813736 ubox
14 52 0.023947312 ubox
14 53 0.034724721 ubox
15 22 0.756854720 ubox
15 23 0.019013577 ubox
15 31 0.174203810 ubox
15 32 0.004253540 ubox
15 35 0.066993557 ubox
15 42 0.622813836 ubox
15 46 0.010438837 ubox
15 47 0.021021142 ubox
15 50 0.007873711 ubox
15 51 0.026574789 ubox
15 52 0.032773895 ubox
16 21 0.746442863 ubox
16 29 0.108352969 ubox
16 30 0.142866020 ubox
16 40 0.039479325 ubox
16 41 0.620276195 ubox
16 49 0.005882608 ubox
17 28 0.147316730 ubox
17 29 0.102345343 ubox
17 37 0.397341230 ubox
17 39 0.043061138 ubox
17 40 0.477081189 ubox
17 44 0.023174309 ubox
17 49 0.042820315 ubox
18 24 0.003289943 ubox
18 25 0.004617713 ubox
18 26 0.012489872 ubox
18 27 0.177774236 ubox
18 32 0.005077022 ubox
18 33 0.114708724 ubox
18 36 0.539135527 ubox
18 38 0.272816293 ubox
18 43 0.023196587 ubox
18 46 0.003366546 ubox
18 48 0.043183256 ubox
19 23 0.003283099 ubox
19 24 0.004652278 ubox
19 25 0.013711859 ubox
19 26 0.177630950 ubox
19 27 0.020878174 ubox
19 31 0.004663919 ubox
19 32 0.114586094 ubox
19 33 0.298188279 ubox
19 35 0.534351635 ubox
19 36 0.061277477 ubox
19 42 0.023115936 ubox
19 45 0.003382302 ubox
19 47 0.043184255 ubox
20 24 0.013322903 ubox
20 25 0.163283651 ubox
20 26 0.020485201 ubox
20 31 0.022147813 ubox
20 32 0.329404052 ubox
20 33 0.053988589 ubox
20 34 0.506191954 ubox
20 35 0.051321614 ubox
20 36 0.004871431 ubox
20 46 0.043157781 ubox
21 25 0.027994452 ubox
21 26 0.005450597 ubox
21 31 0.425143193 ubox
21 32 0.112614350 ubox
21 33 0.442876662 ubox
21 35 0.003423035 ubox
21 42 0.003576634 ubox
21 45 0.043202245 ubox
22 29 0.083123444 ubox
22 30 0.542227397 ubox
22 41 0.004424580 ubox
22 44 0.042724355 ubox
23 28 0.083545782 ubox
23 29 0.543203674 ubox
23 30 0.273815153 ubox
23 40 0.003903477 ubox
23 41 0.032276929 ubox
24 28 0.534449870 ubox
24 29 0.273067387 ubox
24 30 0.115106920 ubox
24 39 0.003178706 ubox
24 40 0.032487125 ubox
24 41 0.008789078 ubox
25 29 0.113522474 ubox
25 39 0.032643242 ubox
25 40 0.008697010 ubox
25 41 0.035763954 ubox
26 39 0.007866914 ubox
26 40 0.035863715 ubox
27 37 0.034951783 ubox
27 39 0.035949485 ubox
28 36 0.034616745 ubox
28 38 0.035997490 ubox
29 35 0.034221595 ubox
29 36 0.036553000 ubox
29 43 0.013266437 ubox
30 35 0.036873821 ubox
30 42 0.013529577 ubox
31 41 0.014342093 ubox
32 40 0.014136960 ubox
32 41 0.021474938 ubox
33 39 0.011880303 ubox
33 40 0.021663680 ubox
34 39 0.021930017 ubox
35 41 0.005244555 ubox
36 40 0.005224945 ubox
36 44 0.007509743 ubox
37 43 0.007997279 ubox
37 45 0.006571658 ubox
37 50 0.009660722 ubox
38 44 0.095699276 ubox
38 49 0.120563430 ubox
38 54 0.011671088 ubox
38 69 0.181774418 ubox
39 43 0.089604328 ubox
39 46 0.011477589 ubox
39 47 0.004207379 ubox
39 48 0.120592993 ubox
39 53 0.011668422 ubox
39 68 0.170606211 ubox
40 45 0.015033346 ubox
40 46 0.062949461 ubox
40 47 0.122123642 ubox
40 48 0.003710397 ubox
40 51 0.008422451 ubox
40 52 0.011688631 ubox
41 45 0.062680431 ubox
41 46 0.124725756 ubox
41 47 0.003913458 ubox
41 50 0.008463801 ubox
41 51 0.011693848 ubox
42 49 0.008398402 ubox
42 67 0.599543689 ubox
42 70 0.095113147 ubox
43 49 0.011743079 ubox
43 66 0.600302131 ubox
43 69 0.095595416 ubox
44 48 0.011706052 ubox
44 65 0.600297117 ubox
45 64 0.600244316 ubox
45 67 0.008500593 ubox
45 70 0.422384255 ubox
46 63 0.600202931 ubox
46 64 0.007491645 ubox
46 66 0.005717986 ubox
46 67 0.017597473 ubox
46 69 0.425170583 ubox
46 70 0.005136098 ubox
47 62 0.599866284 ubox
47 63 0.010578642 ubox
47 66 0.012614682 ubox
47 67 0.470604708 ubox
47 69 0.003763188 ubox
48 57 0.013870097 ubox
48 59 0.158952012 ubox
48 62 0.012931003 ubox
48 66 0.478475546 ubox
49 56 0.013859452 ubox
49 58 0.159660217 ubox
49 60 0.578162811 ubox
49 61 0.013665863 ubox
49 65 0.478687256 ubox
50 57 0.159511233 ubox
50 59 0.577592811 ubox
50 64 0.476216550 ubox
50 70 0.122014933 ubox
51 63 0.473691547 ubox
51 64 0.052193069 ubox
51 69 0.122867215 ubox
51 70 0.003180323 ubox
52 62 0.471084804 ubox
52 63 0.071675793 ubox
52 67 0.139793321 ubox
52 70 0.019518344 ubox
53 59 0.026494207 ubox
53 62 0.086862318 ubox
53 66 0.144293622 ubox
53 69 0.037240887 ubox
54 58 0.027500349 ubox
54 60 0.467559877 ubox
54 61 0.099616252 ubox
54 65 0.144313093 ubox
55 59 0.437507936 ubox
55 63 0.048831298 ubox
55 64 0.136000696 ubox
55 67 0.099817941 ubox
55 70 0.004243700 ubox
56 62 0.068672349 ubox
56 63 0.126359889 ubox
56 66 0.099980914 ubox
56 69 0.004289363 ubox
57 61 0.083324580 ubox
57 65 0.100000339 ubox
58 64 0.098164485 ubox
58 66 0.535139487 ubox
59 65 0.536163107 ubox
60 64 0.501637311 ubox
60 67 0.229936794 ubox
60 70 0.062547919 ubox
61 66 0.228751639 ubox
61 69 0.062856607 ubox
1 37 0.9500000 lbox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
6 33 0.9500000 lbox
7 32 0.9500000 lbox
8 31 0.9500000 lbox
9 28 0.9500000 lbox
10 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
42 67 0.9500000 lbox
43 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
showpage
end
%%EOF
