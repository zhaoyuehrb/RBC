%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:01:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGAAGUGACGCAGGGCAGCGGCGUCGCGGGGGCGGGGCUCGGGAAAGACCCGUGCCAGCGGGCGUGUGGCCGCGGGUUUCGCACGGUCCAAUAAGGGAGGGCGGCGUGGCCCGGCCUGGUAGCGACGAGGACGCGCCUGCGCAGAGGCGGCAGCACCACCGGGGUUGACUCCGGGGGCGCGGCGAGGAGAGAC\
) } def
/len { sequence length } bind def

/coor [
[474.93316650 576.05981445]
[465.62094116 564.30041504]
[456.30871582 552.54107666]
[446.99652100 540.78173828]
[432.28073120 543.08636475]
[418.29415894 537.67980957]
[408.82916260 525.92053223]
[406.50570679 510.90393066]
[412.04675293 496.64755249]
[402.73455811 484.88821411]
[396.10974121 481.59234619]
[393.36938477 472.86624146]
[384.24588013 460.95989990]
[375.12237549 449.05352783]
[365.99884033 437.14715576]
[356.87533569 425.24078369]
[347.75183105 413.33444214]
[338.53366089 401.50119019]
[329.22146606 389.74182129]
[314.69207764 393.11260986]
[300.07989502 389.82727051]
[288.29489136 380.48513794]
[281.70788574 366.89721680]
[281.67355347 351.73522949]
[288.25222778 338.00634766]
[278.94000244 326.24697876]
[269.62780762 314.48760986]
[260.31558228 302.72824097]
[251.00335693 290.96890259]
[241.69114685 279.20953369]
[223.42094421 278.20437622]
[211.47364807 263.92669678]
[213.78349304 245.13208008]
[204.10101318 233.67564392]
[194.41853333 222.21922302]
[184.73606873 210.76280212]
[170.61117554 206.03660583]
[167.61264038 190.50215149]
[157.93017578 179.04573059]
[148.24769592 167.58929443]
[138.56521606 156.13287354]
[128.88275146 144.67645264]
[119.10923004 133.29759216]
[109.24530029 121.99702454]
[98.77902222 125.40662384]
[87.19457245 123.78260803]
[76.91815186 116.86372375]
[70.35409546 105.55010986]
[69.33747101 91.81583405]
[56.30740356 84.38499451]
[43.27733994 76.95415497]
[30.24727440 69.52330780]
[17.21720886 62.09246826]
[4.18714285 54.66162872]
[-8.84292221 47.23078918]
[-21.87298775 39.79994583]
[-34.90305328 32.36910629]
[-47.99195480 25.04239655]
[-61.13885880 17.82028389]
[-74.28575897 10.59817123]
[-83.32546997 9.20613194]
[-87.58338928 3.15462255]
[-100.61345673 -4.27621841]
[-117.00056458 -3.64801550]
[-125.50799561 -17.66784668]
[-117.38403320 -31.91331100]
[-100.98591614 -31.72989655]
[-93.18261719 -17.30628395]
[-80.15254974 -9.87544250]
[-67.06365204 -2.54873300]
[-53.91674423 4.67337942]
[-40.76984024 11.89549160]
[-33.38513565 12.36111736]
[-27.47221184 19.33904076]
[-14.44214630 26.76988220]
[-1.41208112 34.20072174]
[11.61798382 41.63156509]
[24.64805031 49.06240463]
[37.67811584 56.49324417]
[50.70817947 63.92408752]
[63.73824692 71.35492706]
[76.76831055 78.78576660]
[89.23204041 70.43978882]
[87.32357025 55.56169510]
[85.41509247 40.68359756]
[74.76083374 35.37783432]
[68.06370544 25.68391037]
[66.89511108 14.08020020]
[71.43063354 3.46617413]
[80.43494415 -3.56208730]
[79.00188446 -18.49347496]
[77.56883240 -33.42486191]
[65.21902466 -43.28680038]
[63.54288101 -59.00195312]
[73.53483582 -71.24680328]
[89.26683044 -72.75669861]
[101.40535736 -62.63584518]
[102.74884033 -46.88876343]
[92.50022125 -34.85792160]
[93.93327332 -19.92653084]
[95.36633301 -4.99514341]
[110.16162109 5.77098942]
[112.43966675 24.24802017]
[100.29319000 38.77512360]
[102.20166779 53.65322113]
[104.11013794 68.53131866]
[124.98558807 87.81498718]
[120.54586792 112.13308716]
[130.40980530 123.43365479]
[138.42044067 127.84770966]
[140.33917236 134.99397278]
[150.02165222 146.45039368]
[159.70411682 157.90682983]
[169.38659668 169.36325073]
[179.06907654 180.81967163]
[193.88650513 186.36531067]
[196.19248962 201.08032227]
[205.87496948 212.53674316]
[215.55743408 223.99317932]
[225.23991394 235.44960022]
[237.06755066 234.11866760]
[247.95556641 238.62141418]
[255.23852539 247.73020935]
[257.19436646 259.10577393]
[253.45050049 269.89730835]
[262.76272583 281.65667725]
[272.07495117 293.41604614]
[281.38714600 305.17541504]
[290.69937134 316.93475342]
[300.01159668 328.69412231]
[314.88278198 325.43692017]
[329.63333130 328.94515991]
[341.35000610 338.47091675]
[347.74261475 352.08325195]
[347.59173584 367.05944824]
[340.98080444 380.42959595]
[350.29302979 392.18896484]
[358.08340454 396.98107910]
[359.65820312 404.21090698]
[368.78170776 416.11727905]
[377.90521240 428.02365112]
[387.02871704 439.93002319]
[396.15225220 451.83636475]
[405.27575684 463.74273682]
[414.49392700 475.57598877]
[423.80612183 487.33535767]
[438.95294189 485.20901489]
[453.03738403 490.91210938]
[462.31448364 502.82015991]
[464.37176514 517.67358398]
[458.75588989 531.46948242]
[468.06808472 543.22888184]
[477.38031006 554.98822021]
[486.69253540 566.74755859]
[497.02896118 571.17559814]
[500.24246216 580.62561035]
[511.77572632 590.21643066]
[527.33361816 593.09100342]
[532.17224121 607.17773438]
[543.70550537 616.76855469]
[559.26342773 619.64312744]
[564.10205078 633.72985840]
[575.63531494 643.32067871]
[587.16857910 652.91149902]
[598.70184326 662.50231934]
[610.23510742 672.09313965]
[621.76837158 681.68395996]
[638.01367188 683.92529297]
[643.94378662 699.21472168]
[633.45837402 711.82373047]
[617.34387207 708.78131104]
[612.17755127 693.21722412]
[600.64428711 683.62640381]
[589.11102295 674.03558350]
[577.57775879 664.44476318]
[566.04449463 654.85394287]
[554.51123047 645.26312256]
[539.77832031 643.07458496]
[534.11468506 628.30181885]
[522.58142090 618.71099854]
[507.84851074 616.52239990]
[502.18490601 601.74969482]
[490.65164185 592.15887451]
[495.02062988 606.50848389]
[493.74752808 621.45434570]
[487.01443481 634.85827637]
[475.78463745 644.80273438]
[461.66467285 649.86499023]
[446.67453003 649.32080078]
[432.95877075 643.24816895]
[422.47952271 632.51568604]
[416.73602295 618.65881348]
[416.54989624 603.65997314]
[421.94781494 589.66491699]
[432.15750122 578.67572021]
[445.71835327 572.26452637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[9 146]
[10 145]
[12 144]
[13 143]
[14 142]
[15 141]
[16 140]
[17 139]
[18 137]
[19 136]
[25 130]
[26 129]
[27 128]
[28 127]
[29 126]
[30 125]
[33 120]
[34 119]
[35 118]
[36 117]
[38 115]
[39 114]
[40 113]
[41 112]
[42 111]
[43 109]
[44 108]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[58 72]
[59 71]
[60 70]
[62 69]
[63 68]
[83 106]
[84 105]
[85 104]
[90 101]
[91 100]
[92 99]
[156 183]
[157 182]
[159 180]
[160 179]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
