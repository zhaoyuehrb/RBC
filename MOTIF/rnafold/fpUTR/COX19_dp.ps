%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (COX19)
} def

/sequence { (\
GUGCUCGGCGCUCCCGGGGUGCCUGCUCGGCGCUCCGCCGGCCGCCCUGCGUACGCUCGCAAGGCGCUCGCAGACUCCGGAGUCGCCAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.003994693 ubox
1 54 0.005235676 ubox
1 86 0.074476181 ubox
1 90 0.047953325 ubox
2 10 0.004019381 ubox
2 51 0.003328668 ubox
2 53 0.005156679 ubox
2 85 0.074596183 ubox
2 88 0.016019785 ubox
2 89 0.046938813 ubox
3 9 0.004309465 ubox
3 26 0.022210748 ubox
3 50 0.005043493 ubox
3 52 0.004953016 ubox
3 83 0.019628253 ubox
3 84 0.074229011 ubox
3 86 0.003945341 ubox
3 87 0.009090963 ubox
4 8 0.004279946 ubox
4 25 0.022241805 ubox
4 49 0.005056735 ubox
4 51 0.004947330 ubox
4 82 0.076980381 ubox
4 85 0.003992783 ubox
5 81 0.076957687 ubox
6 49 0.004094943 ubox
6 79 0.004518674 ubox
6 80 0.076787187 ubox
6 85 0.003479890 ubox
7 23 0.023113561 ubox
7 46 0.078167609 ubox
7 78 0.003420864 ubox
7 84 0.003579248 ubox
7 87 0.995513538 ubox
8 22 0.023130715 ubox
8 45 0.078364538 ubox
8 86 0.996612653 ubox
9 21 0.023131330 ubox
9 44 0.078360786 ubox
9 85 0.996570458 ubox
10 20 0.023122097 ubox
10 42 0.053807447 ubox
10 43 0.057099412 ubox
10 83 0.207913713 ubox
10 84 0.974193201 ubox
11 19 0.023127910 ubox
11 41 0.075968790 ubox
11 82 0.992731861 ubox
12 18 0.023002272 ubox
12 40 0.074716508 ubox
12 41 0.010621059 ubox
12 81 0.991644343 ubox
13 17 0.022204199 ubox
13 40 0.012539950 ubox
13 41 0.014970724 ubox
13 80 0.819169438 ubox
14 40 0.014951644 ubox
14 41 0.003198768 ubox
14 79 0.598327036 ubox
14 80 0.567388380 ubox
15 37 0.164429510 ubox
15 40 0.003585682 ubox
15 79 0.796506422 ubox
16 36 0.225226996 ubox
16 48 0.008436697 ubox
16 76 0.006244926 ubox
16 77 0.033634578 ubox
16 78 0.973046772 ubox
17 35 0.225495060 ubox
17 36 0.009410376 ubox
17 47 0.013547299 ubox
17 75 0.008609912 ubox
17 76 0.030836843 ubox
17 77 0.973153627 ubox
17 78 0.009103053 ubox
18 34 0.225857592 ubox
18 35 0.009836998 ubox
18 46 0.062721761 ubox
18 47 0.004954587 ubox
18 75 0.032294235 ubox
18 76 0.970392588 ubox
18 77 0.009346481 ubox
18 78 0.004807865 ubox
19 33 0.227235665 ubox
19 45 0.063609728 ubox
19 46 0.010891408 ubox
19 75 0.970692963 ubox
19 76 0.005609939 ubox
19 77 0.004825016 ubox
20 32 0.227273188 ubox
20 44 0.063663058 ubox
20 72 0.082960511 ubox
20 74 0.910099241 ubox
21 31 0.228419398 ubox
21 42 0.018557629 ubox
21 43 0.064915387 ubox
21 45 0.285708050 ubox
21 65 0.003400961 ubox
21 67 0.004948893 ubox
21 71 0.123554394 ubox
22 30 0.228419463 ubox
22 41 0.019399152 ubox
22 44 0.286256705 ubox
22 64 0.003401362 ubox
22 66 0.004821727 ubox
22 70 0.123572638 ubox
23 29 0.228240646 ubox
23 40 0.017742017 ubox
23 41 0.004032627 ubox
23 63 0.003400622 ubox
23 73 0.899953376 ubox
24 44 0.031840320 ubox
24 70 0.007307051 ubox
24 72 0.906649633 ubox
25 38 0.006520334 ubox
25 42 0.329983286 ubox
25 43 0.048781733 ubox
25 45 0.047640439 ubox
25 67 0.077086714 ubox
25 69 0.006460105 ubox
25 71 0.907580517 ubox
26 37 0.006122733 ubox
26 41 0.329121665 ubox
26 44 0.047675561 ubox
26 66 0.075646022 ubox
26 70 0.906394454 ubox
27 40 0.054897141 ubox
27 41 0.516416347 ubox
28 37 0.010773165 ubox
28 40 0.927372880 ubox
28 44 0.004468217 ubox
28 70 0.004115855 ubox
29 36 0.012311726 ubox
29 39 0.971419778 ubox
29 43 0.010836646 ubox
29 46 0.011878853 ubox
29 68 0.052214087 ubox
29 69 0.008399388 ubox
29 87 0.023018967 ubox
30 35 0.012124267 ubox
30 38 0.971525922 ubox
30 42 0.010925524 ubox
30 45 0.011906047 ubox
30 67 0.054468572 ubox
30 86 0.023043209 ubox
31 37 0.971436345 ubox
31 41 0.010725728 ubox
31 44 0.011905056 ubox
31 66 0.054474490 ubox
31 85 0.023042232 ubox
32 36 0.908777199 ubox
32 38 0.006809657 ubox
32 42 0.009825449 ubox
32 43 0.009749426 ubox
32 65 0.054259778 ubox
32 83 0.004823017 ubox
32 84 0.022522328 ubox
33 37 0.006915185 ubox
33 41 0.011972369 ubox
33 64 0.054219826 ubox
33 73 0.006491967 ubox
33 82 0.023030478 ubox
34 40 0.011043311 ubox
34 41 0.005056114 ubox
34 63 0.052131087 ubox
34 72 0.006145523 ubox
34 74 0.019000387 ubox
34 81 0.023031755 ubox
35 40 0.006288287 ubox
35 41 0.004945219 ubox
35 63 0.007070917 ubox
35 73 0.024216751 ubox
35 80 0.023011868 ubox
36 40 0.004931258 ubox
36 59 0.010588596 ubox
36 70 0.003721991 ubox
36 79 0.022995892 ubox
37 45 0.016789142 ubox
37 58 0.010492996 ubox
37 60 0.052610970 ubox
37 69 0.004483732 ubox
37 71 0.152363519 ubox
37 78 0.020455754 ubox
38 44 0.017221704 ubox
38 59 0.052064513 ubox
38 70 0.147046891 ubox
38 80 0.012678357 ubox
39 55 0.020157376 ubox
39 59 0.008998187 ubox
39 70 0.132563554 ubox
39 79 0.017702846 ubox
40 46 0.030442496 ubox
40 47 0.005880817 ubox
40 54 0.020276188 ubox
40 57 0.047531630 ubox
40 58 0.011592539 ubox
40 68 0.247402578 ubox
40 69 0.224072179 ubox
40 78 0.032898163 ubox
41 45 0.030032832 ubox
41 46 0.006685202 ubox
41 56 0.050120890 ubox
41 65 0.011342629 ubox
41 67 0.604473477 ubox
41 68 0.214813352 ubox
41 71 0.030041386 ubox
41 77 0.032858390 ubox
42 55 0.050054187 ubox
42 64 0.011341046 ubox
42 66 0.429515978 ubox
42 70 0.030281232 ubox
43 51 0.053128343 ubox
43 63 0.011293720 ubox
43 66 0.806223209 ubox
44 50 0.053327265 ubox
44 52 0.007555953 ubox
44 54 0.003256605 ubox
44 65 0.933403187 ubox
44 67 0.101472485 ubox
44 78 0.003411814 ubox
45 49 0.052940929 ubox
45 51 0.007694726 ubox
45 64 0.932690970 ubox
45 66 0.101587141 ubox
46 63 0.931007218 ubox
46 64 0.109993341 ubox
47 63 0.117033010 ubox
47 73 0.337013727 ubox
48 61 0.925839483 ubox
48 62 0.087258145 ubox
48 72 0.338263829 ubox
49 56 0.003579167 ubox
49 60 0.939259690 ubox
49 71 0.338662671 ubox
50 55 0.003595796 ubox
50 59 0.939277014 ubox
50 70 0.338663782 ubox
51 58 0.932457012 ubox
51 69 0.338484732 ubox
54 66 0.338108764 ubox
55 65 0.338592726 ubox
55 67 0.007241240 ubox
56 63 0.014425654 ubox
56 64 0.337570844 ubox
56 66 0.007175124 ubox
57 62 0.018822816 ubox
57 63 0.266909160 ubox
57 64 0.022593261 ubox
58 63 0.194280722 ubox
59 65 0.003459652 ubox
60 64 0.003445862 ubox
63 87 0.012637202 ubox
64 86 0.012656154 ubox
65 85 0.012655695 ubox
66 84 0.012372901 ubox
67 73 0.014053666 ubox
67 82 0.012736004 ubox
68 72 0.012728168 ubox
68 74 0.004801551 ubox
68 81 0.012715103 ubox
69 73 0.007370475 ubox
69 80 0.012619919 ubox
70 78 0.006067678 ubox
70 86 0.003419365 ubox
71 85 0.003418654 ubox
73 84 0.006634191 ubox
74 83 0.007218894 ubox
75 82 0.007284369 ubox
76 81 0.006741772 ubox
79 87 0.004783424 ubox
80 86 0.004779000 ubox
7 87 0.9500000 lbox
8 86 0.9500000 lbox
9 85 0.9500000 lbox
10 84 0.9500000 lbox
11 82 0.9500000 lbox
12 81 0.9500000 lbox
13 80 0.9500000 lbox
14 79 0.9500000 lbox
16 78 0.9500000 lbox
17 77 0.9500000 lbox
18 76 0.9500000 lbox
19 75 0.9500000 lbox
20 74 0.9500000 lbox
23 73 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
26 70 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
32 36 0.9500000 lbox
43 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
showpage
end
%%EOF
