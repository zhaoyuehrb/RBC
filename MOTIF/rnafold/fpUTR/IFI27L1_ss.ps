%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCGCGGACCGCAGCAGUGCCGGCGGGAGAGCUGGCUUGGGGCGCUGGCACCUCCUCUUACAGCUUUACUCCUGCCAGCUUGGGAAAAGGCCGGAGAAGGUGAAAUUCUGUGUGCUCCCUCCGGCGAGAGACUUUGUCAGCUCCCGCACAGUAACCUUUAUUCAAACCAGAUCCUGAAUAAAGUCAAAACUCAACCAACAGGUGGAAGUCCAAGAAUCCGAGUGGAGGCUCACCGAGGCGAAGGGGCCAACC\
) } def
/len { sequence length } bind def

/coor [
[152.24903870 354.90051270]
[149.85690308 340.09246826]
[147.46476746 325.28445435]
[145.07263184 310.47640991]
[142.68049622 295.66839600]
[140.28836060 280.86035156]
[128.09875488 272.37808228]
[125.46184540 257.39471436]
[134.44151306 244.66664124]
[132.04937744 229.85861206]
[129.56605530 215.06559753]
[126.99167633 200.28816223]
[112.11700439 198.35317993]
[105.84760284 211.98016357]
[99.57819366 225.60714722]
[101.62927246 241.87751770]
[88.40249634 251.57206726]
[73.50444031 244.71788025]
[72.26094818 228.36593628]
[85.95121765 219.33773804]
[92.22061920 205.71075439]
[98.49002838 192.08377075]
[50.35614395 161.60366821]
[35.61235046 115.11576080]
[51.70945740 77.77571106]
[39.10429764 69.64490509]
[26.49913406 61.51410675]
[13.89397335 53.38330841]
[1.28881252 45.25250626]
[-11.31634808 37.12170792]
[-23.92150879 28.99090767]
[-38.61265564 25.96267128]
[-53.40566635 28.44598007]
[-68.19867706 30.92928696]
[-82.99169159 33.41259384]
[-97.78469849 35.89590454]
[-112.57771301 38.37921143]
[-127.37071991 40.86251831]
[-135.46275330 50.88292313]
[-147.81504822 52.65935135]
[-157.74394226 45.78055191]
[-172.56643677 48.08142471]
[-187.38891602 50.38230133]
[-202.21139526 52.68317413]
[-218.10319519 67.08546448]
[-236.98265076 58.71103668]
[-251.70999146 61.55805206]
[-266.43734741 64.40506744]
[-281.16467285 67.25208282]
[-284.56454468 82.09664154]
[-293.71350098 94.27106476]
[-307.02642822 101.66606140]
[-322.19677734 103.00041199]
[-336.59619141 98.04292297]
[-347.72988892 87.65251923]
[-353.66888428 73.62938690]
[-353.38421631 58.40313339]
[-346.92523193 44.61178970]
[-335.41091919 34.64479446]
[-320.83627319 30.22898483]
[-305.72640991 32.12943268]
[-292.69918823 40.01686859]
[-284.01168823 52.52474594]
[-269.28436279 49.67773056]
[-254.55700684 46.83071518]
[-239.82966614 43.98369980]
[-236.14488220 35.95923615]
[-229.08270264 30.43307877]
[-220.13793945 28.73460960]
[-211.27844238 31.36551666]
[-204.51226807 37.86069489]
[-189.68978882 35.55981827]
[-174.86730957 33.25894547]
[-160.04483032 30.95806885]
[-146.96775818 19.23735237]
[-129.85403442 26.06950951]
[-115.06101990 23.58620071]
[-100.26800537 21.10289192]
[-85.47499847 18.61958504]
[-70.68198395 16.13627625]
[-55.88897705 13.65296841]
[-41.09596252 11.16965961]
[-37.62943649 4.51885700]
[-51.80208588 -0.39398229]
[-66.73629761 1.00935817]
[-77.56441498 -9.37100124]
[-76.79263306 -24.35113335]
[-64.95507812 -33.56374741]
[-50.24415588 -30.63307953]
[-42.84080505 -17.58688736]
[-30.69637680 -8.78274822]
[-27.22984695 -15.43355083]
[-33.66665649 -28.98225784]
[-40.10346603 -42.53096771]
[-46.54027557 -56.07967377]
[-52.97708511 -69.62837982]
[-59.41389465 -83.17709351]
[-65.85070038 -96.72579956]
[-80.46862793 -102.10668182]
[-86.80346680 -115.93869781]
[-81.58352661 -129.84149170]
[-88.02033234 -143.39019775]
[-94.45714569 -156.93891907]
[-109.72023010 -156.96798706]
[-123.45544434 -163.62431335]
[-132.93565369 -175.58627319]
[-136.27853394 -190.47882080]
[-132.82037354 -205.34501648]
[-123.24778748 -217.23316956]
[-109.46141815 -223.78289795]
[-94.19856262 -223.69371033]
[-80.48966980 -216.98335266]
[-71.05664825 -204.98414612]
[-67.77243042 -190.07855225]
[-71.28910828 -175.22608948]
[-80.90843201 -163.37571716]
[-74.47162628 -149.82701111]
[-68.03482056 -136.27830505]
[-53.95981979 -131.54226685]
[-47.23897171 -117.89364624]
[-52.30199432 -103.16260529]
[-45.86518478 -89.61389923]
[-39.42837524 -76.06519318]
[-32.99156570 -62.51648331]
[-26.55475807 -48.96777725]
[-20.11794853 -35.41906738]
[-13.68113995 -21.87035942]
[-6.23244953 -22.74615479]
[-7.98379326 -37.64356613]
[6.91364479 -39.39466095]
[8.66493034 -24.49774551]
[16.11362076 -25.37354088]
[19.23229599 -40.04575348]
[22.35097122 -54.71796799]
[19.72989845 -71.46808624]
[35.09982681 -78.62361908]
[46.23053741 -65.83519745]
[37.02318573 -51.59929276]
[33.90451050 -36.92707825]
[30.78583336 -22.25486565]
[19.20938110 -1.89662862]
[2.79988694 11.29167843]
[-15.79070950 16.38574600]
[-3.18554807 24.51654625]
[9.41961288 32.64734650]
[22.02477455 40.77814865]
[34.62993622 48.90894699]
[47.23509598 57.03974915]
[59.84025574 65.17054749]
[66.47501373 53.30249786]
[76.56037903 42.80484772]
[89.77437592 34.65711975]
[105.52411652 29.75237846]
[122.97117615 28.82421684]
[141.07624817 32.38146210]
[158.66053772 40.65560913]
[174.48048401 53.56510925]
[187.31094360 70.69979858]
[200.56958008 63.68493271]
[213.82823181 56.67006683]
[227.08686829 49.65520477]
[240.34552002 42.64033890]
[253.60417175 35.62547684]
[266.86282349 28.61061287]
[280.12145996 21.59574890]
[293.38009644 14.58088493]
[293.86746216 -0.77027392]
[301.97869873 -13.81262779]
[315.53201294 -21.03784943]
[330.88156128 -20.50238991]
[343.89843750 -12.35028458]
[351.08111572 1.22558951]
[350.49755859 16.57339096]
[342.30468750 29.56463814]
[328.70635986 36.70475388]
[313.36047363 36.07307816]
[300.39495850 27.83953094]
[287.13632202 34.85439301]
[273.87768555 41.86925888]
[260.61901855 48.88412094]
[247.36038208 55.89898682]
[234.10174561 62.91384888]
[220.84309387 69.92871094]
[207.58444214 76.94358063]
[194.32580566 83.95844269]
[195.29328918 91.39577484]
[210.16796875 89.46078491]
[225.04263306 87.52580261]
[239.91731262 85.59081268]
[254.79200745 83.65605164]
[256.72653198 98.53078461]
[241.85229492 100.46548462]
[226.97763062 102.40046692]
[212.10295105 104.33545685]
[197.22828674 106.27044678]
[198.19578552 113.70777893]
[212.80786133 117.09705353]
[227.41993713 120.48632050]
[242.94122314 115.19277191]
[255.10641479 126.19004822]
[251.40101624 142.16510010]
[235.63681030 146.68414307]
[224.03067017 135.09840393]
[209.41859436 131.70913696]
[194.80650330 128.31985474]
[189.82118225 142.46717834]
[203.32998657 148.98731995]
[219.63548279 147.23725891]
[229.08396912 160.64091492]
[221.95564270 175.40977478]
[205.58352661 176.35089111]
[196.80984497 162.49612427]
[183.30104065 155.97598267]
[178.93011475 162.07064819]
[191.11944580 170.81250000]
[197.30506897 184.47772217]
[182.37759399 183.00184631]
[170.18824768 174.25997925]
[165.81732178 180.35464478]
[176.32546997 191.05880737]
[186.83361816 201.76295471]
[202.77033997 205.62982178]
[207.12965393 221.43894958]
[195.42704773 232.92726135]
[179.70117188 228.27656555]
[176.12945557 212.27110291]
[165.62132263 201.56694031]
[155.11317444 190.86279297]
[141.76910400 197.71379089]
[144.34349060 212.49121094]
[148.88752747 220.38209534]
[146.85739136 227.46647644]
[149.24954224 242.27450562]
[161.78012085 251.52772522]
[163.99514771 266.57925415]
[155.09638977 278.46823120]
[157.48852539 293.27624512]
[159.88066101 308.08428955]
[162.27279663 322.89230347]
[164.66493225 337.70034790]
[167.05706787 352.50836182]
[176.20127869 358.33282471]
[180.55519104 368.02194214]
[178.90774536 378.29385376]
[172.03770447 385.81155396]
[174.06428528 400.67404175]
[186.79705811 410.03628540]
[189.09774780 425.67224121]
[179.60137939 438.30529785]
[163.94200134 440.44055176]
[151.41003418 430.81115723]
[149.44046021 415.13006592]
[159.20181274 402.70062256]
[157.17524719 387.83813477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 241]
[2 240]
[3 239]
[4 238]
[5 237]
[6 236]
[9 233]
[10 232]
[11 230]
[12 229]
[13 22]
[14 21]
[15 20]
[25 149]
[26 148]
[27 147]
[28 146]
[29 145]
[30 144]
[31 143]
[32 82]
[33 81]
[34 80]
[35 79]
[36 78]
[37 77]
[38 76]
[41 74]
[42 73]
[43 72]
[44 71]
[46 66]
[47 65]
[48 64]
[49 63]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[101 118]
[102 117]
[103 116]
[132 140]
[133 139]
[134 138]
[158 185]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
[164 179]
[165 178]
[166 177]
[196 205]
[197 204]
[198 203]
[206 213]
[207 212]
[219 228]
[220 227]
[221 226]
[245 254]
[246 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
