%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PRAF2)
} def

/sequence { (\
GUAACGGUUGUUGUAGUCCGGCCCCCUCCUGGCUGGUCCAGCCACAUUAACCGGCAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.003607207 ubox
1 55 0.511128792 ubox
2 13 0.005993719 ubox
2 44 0.003565899 ubox
2 49 0.004083306 ubox
2 54 0.490952289 ubox
3 12 0.006697485 ubox
3 48 0.004404635 ubox
4 11 0.006831765 ubox
4 47 0.004334835 ubox
5 10 0.006837688 ubox
5 13 0.003195347 ubox
5 20 0.005522377 ubox
5 53 0.989483159 ubox
6 19 0.005578316 ubox
6 23 0.012584827 ubox
6 43 0.011089700 ubox
6 52 0.999708401 ubox
7 18 0.005572894 ubox
7 22 0.012623297 ubox
7 42 0.011098294 ubox
7 45 0.007774958 ubox
7 51 0.999747393 ubox
8 21 0.012628885 ubox
8 41 0.011088398 ubox
8 44 0.007815531 ubox
8 50 0.999151496 ubox
9 15 0.003201744 ubox
9 20 0.012582332 ubox
9 40 0.011035387 ubox
9 44 0.008086652 ubox
9 46 0.051299411 ubox
9 49 0.995616185 ubox
10 19 0.012585386 ubox
10 22 0.003968241 ubox
10 39 0.010999152 ubox
10 42 0.051018265 ubox
10 43 0.006807889 ubox
10 45 0.059270045 ubox
10 47 0.027237085 ubox
10 48 0.953695689 ubox
11 21 0.003987691 ubox
11 41 0.052351633 ubox
11 44 0.058652644 ubox
11 46 0.027986983 ubox
12 20 0.003992927 ubox
12 40 0.052562108 ubox
12 44 0.021548713 ubox
12 46 0.993716166 ubox
13 19 0.004019000 ubox
13 39 0.052458536 ubox
13 42 0.064426337 ubox
13 43 0.021079816 ubox
13 45 0.995510245 ubox
13 47 0.004155203 ubox
14 35 0.007904393 ubox
14 41 0.064432845 ubox
14 44 0.976253705 ubox
14 46 0.004307274 ubox
15 30 0.003723018 ubox
15 34 0.012030774 ubox
16 22 0.003550833 ubox
16 29 0.003950059 ubox
16 33 0.012458668 ubox
16 37 0.023648222 ubox
16 42 0.981155094 ubox
16 45 0.004276527 ubox
16 55 0.004463186 ubox
17 21 0.003328729 ubox
17 32 0.010899041 ubox
17 41 0.975828551 ubox
17 44 0.004386543 ubox
18 31 0.010862446 ubox
18 32 0.006436179 ubox
18 36 0.958656146 ubox
18 54 0.005267876 ubox
19 31 0.006521944 ubox
19 35 0.959086768 ubox
19 53 0.005317897 ubox
20 26 0.013834138 ubox
20 29 0.022831251 ubox
20 30 0.006400257 ubox
20 34 0.958419012 ubox
20 38 0.270256683 ubox
20 39 0.068968329 ubox
20 43 0.009631254 ubox
20 52 0.005341137 ubox
21 25 0.013629267 ubox
21 26 0.003241230 ubox
21 28 0.022630652 ubox
21 29 0.006392517 ubox
21 33 0.959139157 ubox
21 37 0.271964917 ubox
21 38 0.068729207 ubox
21 42 0.009633565 ubox
21 51 0.005330434 ubox
21 55 0.005380415 ubox
22 32 0.956288700 ubox
22 36 0.278222090 ubox
22 41 0.009596322 ubox
22 54 0.005388891 ubox
23 31 0.951793710 ubox
23 32 0.071342484 ubox
23 35 0.277630175 ubox
23 36 0.036665789 ubox
23 53 0.005375634 ubox
24 31 0.100523744 ubox
24 32 0.058824623 ubox
24 35 0.037439061 ubox
25 31 0.059114902 ubox
25 32 0.271120871 ubox
25 36 0.007328654 ubox
25 58 0.008244931 ubox
26 31 0.272204672 ubox
26 32 0.039236937 ubox
26 35 0.007372509 ubox
26 57 0.008390654 ubox
27 31 0.035431247 ubox
27 56 0.008357889 ubox
28 36 0.007115960 ubox
28 54 0.008306486 ubox
28 58 0.009696407 ubox
29 35 0.007122604 ubox
29 53 0.008304010 ubox
29 57 0.009916605 ubox
30 44 0.018674966 ubox
30 56 0.009706481 ubox
31 43 0.029758517 ubox
31 55 0.006869631 ubox
32 42 0.029794574 ubox
32 55 0.007360482 ubox
33 41 0.029798611 ubox
33 54 0.010061731 ubox
34 40 0.029762688 ubox
34 53 0.010060517 ubox
35 39 0.029289724 ubox
35 43 0.010886738 ubox
35 52 0.010068090 ubox
36 42 0.011080765 ubox
36 51 0.010065126 ubox
37 41 0.010425491 ubox
37 50 0.009655833 ubox
38 58 0.006099058 ubox
39 57 0.006228237 ubox
41 55 0.006909858 ubox
42 54 0.006919562 ubox
43 53 0.006914676 ubox
51 58 0.011374340 ubox
52 57 0.011582355 ubox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
7 51 0.9500000 lbox
8 50 0.9500000 lbox
9 49 0.9500000 lbox
10 48 0.9500000 lbox
12 46 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 36 0.9500000 lbox
19 35 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
showpage
end
%%EOF
