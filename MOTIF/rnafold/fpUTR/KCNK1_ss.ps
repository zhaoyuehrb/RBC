%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGAAGACGGCGCUGCCCGGAGGAGCGGGGCGGGCGGGCGCGCGGGGGAGCGGGCGGCGGGCGGGAGCCAGGCCCGGGCGGGGGCGGGGGCGGCGGGGCCAGAAGAGGCGGCGGGCCGCGCUCCGGCCGGUCUGCGGCGUUGGCCUUGGCGGCGGCGGUGGAGAAG\
) } def
/len { sequence length } bind def

/coor [
[82.81236267 588.50256348]
[69.19445801 581.94177246]
[58.11652756 571.65728760]
[50.56360626 558.56353760]
[47.20729828 543.82495117]
[48.34604263 528.75195312]
[53.87858582 514.68493652]
[63.31297302 502.87457275]
[75.81031036 494.37118530]
[90.25933838 489.93078613]
[90.25933838 474.93078613]
[82.52203369 462.20352173]
[90.25933838 448.40335083]
[90.25933838 433.40335083]
[90.25933838 418.40335083]
[90.25933838 403.40335083]
[90.25933838 388.40335083]
[90.25933838 373.40335083]
[90.25933838 358.40335083]
[87.54653168 354.42810059]
[87.32973480 348.69818115]
[90.54852295 342.84838867]
[91.10607147 327.85876465]
[91.66362762 312.86911011]
[92.22117615 297.87948608]
[92.50000000 282.88208008]
[92.50000000 267.88208008]
[92.50000000 252.88208008]
[92.50000000 237.88208008]
[81.81912994 227.56439209]
[81.60544586 212.35226440]
[92.50000000 201.21913147]
[92.50000000 186.21913147]
[92.50000000 171.21913147]
[92.50000000 156.21913147]
[92.50000000 141.21913147]
[92.50000000 126.21913147]
[81.32077026 123.19497681]
[71.56076050 115.29583740]
[65.35180664 103.27003479]
[50.75494003 99.81581879]
[35.54390717 104.16725922]
[24.94044304 93.70706177]
[10.34357929 90.25284576]
[-4.25328350 86.79862976]
[-17.56837845 95.31237030]
[-32.98553467 91.83575439]
[-41.35802460 78.43138885]
[-37.71859741 63.05184937]
[-24.22646332 54.82154846]
[-8.88626480 58.62337494]
[-0.79907018 72.20176697]
[13.79779243 75.65598297]
[28.39465523 79.11019897]
[42.56162643 74.51168823]
[54.20915222 85.21895599]
[68.80601501 88.67317200]
[76.97949982 76.09564209]
[67.89423370 64.16007233]
[58.80896759 52.22449493]
[41.67453384 45.53088760]
[40.08800125 28.07105637]
[30.78244400 16.30642128]
[21.47688675 4.54178858]
[6.04395151 -1.00406837]
[3.39700794 -17.18818855]
[16.25900459 -27.36173439]
[31.39862251 -21.05903625]
[33.24151993 -4.76376867]
[42.54707718 7.00086451]
[51.85263443 18.76549911]
[63.85130692 20.48936081]
[71.69760132 30.24982834]
[70.74454498 43.13922882]
[79.82981110 55.07480621]
[88.91507721 67.01037598]
[98.02758026 67.76860809]
[105.97267914 70.82385254]
[112.22788239 75.62435913]
[122.38170624 64.58353424]
[132.53553772 53.54270554]
[136.18208313 38.14747238]
[150.49253845 34.01704407]
[160.64636230 22.97621536]
[170.80018616 11.93538857]
[180.95401001 0.89456123]
[191.10783386 -10.14626598]
[201.26165771 -21.18709373]
[204.90820312 -36.58232498]
[219.21864319 -40.71275330]
[229.37246704 -51.75358200]
[226.45751953 -66.88002777]
[232.93275452 -80.66134644]
[246.12525940 -87.90162659]
[260.87490845 -86.00795746]
[271.02871704 -97.04878998]
[269.94564819 -107.92285919]
[274.94375610 -117.39259338]
[284.14648438 -122.42267609]
[294.37725830 -121.55351257]
[304.93444824 -132.20928955]
[315.49163818 -142.86506653]
[315.16757202 -158.66603088]
[326.17150879 -170.01014709]
[341.97503662 -170.16712952]
[353.20214844 -159.04386902]
[353.19204712 -143.23959351]
[341.95071411 -132.13067627]
[326.14743042 -132.30787659]
[315.59020996 -121.65209198]
[305.03302002 -110.99631500]
[301.54302979 -92.00159454]
[282.06954956 -86.89496613]
[271.91574097 -75.85413361]
[275.03518677 -61.31429291]
[268.92251587 -47.56295776]
[255.73040771 -39.95888519]
[240.41329956 -41.59975815]
[230.25947571 -30.55893135]
[227.33918762 -15.95341206]
[212.30247498 -11.03326893]
[202.14865112 0.00755778]
[191.99482727 11.04838467]
[181.84100342 22.08921242]
[171.68717957 33.13003922]
[161.53335571 44.17086792]
[158.61306763 58.77638626]
[143.57635498 63.69652939]
[133.42253113 74.73735809]
[123.26871490 85.77818298]
[125.40760040 109.90691376]
[107.50000000 126.21913147]
[107.50000000 141.21913147]
[107.50000000 156.21913147]
[107.50000000 171.21913147]
[107.50000000 186.21913147]
[107.50000000 201.21913147]
[118.39455414 212.35226440]
[118.18087006 227.56439209]
[107.50000000 237.88208008]
[107.50000000 252.88208008]
[107.50000000 267.88208008]
[107.50000000 282.88208008]
[110.49912262 288.84747314]
[110.06949615 294.56536865]
[107.21080780 298.43704224]
[106.65325928 313.42666626]
[106.09571075 328.41629028]
[105.53816223 343.40594482]
[105.25933838 358.40335083]
[105.25933838 373.40335083]
[105.25933838 388.40335083]
[105.25933838 403.40335083]
[105.25933838 418.40335083]
[105.25933838 433.40335083]
[105.25933838 448.40335083]
[112.99663544 462.20352173]
[105.25933838 474.93078613]
[105.25933838 489.93078613]
[119.70835876 494.37118530]
[132.20570374 502.87457275]
[141.64009094 514.68493652]
[147.17262268 528.75195312]
[148.31137085 543.82495117]
[144.95506287 558.56353760]
[137.40214539 571.65728760]
[126.32421112 581.94177246]
[112.70631409 588.50256348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 159]
[11 158]
[13 156]
[14 155]
[15 154]
[16 153]
[17 152]
[18 151]
[19 150]
[22 149]
[23 148]
[24 147]
[25 146]
[26 143]
[27 142]
[28 141]
[29 140]
[32 137]
[33 136]
[34 135]
[35 134]
[36 133]
[37 132]
[40 57]
[41 56]
[43 54]
[44 53]
[45 52]
[58 76]
[59 75]
[60 74]
[62 71]
[63 70]
[64 69]
[79 130]
[80 129]
[81 128]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[90 119]
[91 118]
[95 114]
[96 113]
[100 111]
[101 110]
[102 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
