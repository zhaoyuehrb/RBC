%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (KRTDAP)
} def

/sequence { (\
GGGACCCCAUUUCUGUGCUCAUCUGCCUCCUUGGCAAUAUAAAGAGCAAGCACUGAGGCCCCGCCUCAGAGCACCCCAAACUUGACGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.025226257 ubox
1 8 0.144328426 ubox
1 13 0.030701588 ubox
1 14 0.067463785 ubox
1 20 0.004321772 ubox
1 61 0.008644997 ubox
1 62 0.016984356 ubox
1 75 0.036403880 ubox
1 76 0.335608310 ubox
1 77 0.919016236 ubox
1 82 0.005013697 ubox
1 83 0.007806290 ubox
1 89 0.022165554 ubox
2 6 0.025007294 ubox
2 7 0.143940983 ubox
2 8 0.040432634 ubox
2 12 0.030658199 ubox
2 13 0.071642499 ubox
2 14 0.031571089 ubox
2 19 0.004237181 ubox
2 60 0.008711887 ubox
2 61 0.016977299 ubox
2 74 0.036310672 ubox
2 75 0.338032180 ubox
2 76 0.919242657 ubox
2 77 0.049355322 ubox
2 81 0.005689206 ubox
2 82 0.009240329 ubox
2 88 0.022257048 ubox
2 89 0.020446794 ubox
3 7 0.040175053 ubox
3 11 0.031026655 ubox
3 12 0.071691981 ubox
3 13 0.040395045 ubox
3 18 0.004245250 ubox
3 20 0.003447747 ubox
3 59 0.008748934 ubox
3 60 0.016936920 ubox
3 74 0.337706234 ubox
3 75 0.916392723 ubox
3 76 0.049327870 ubox
3 81 0.009363682 ubox
3 88 0.020651637 ubox
4 10 0.037401521 ubox
4 11 0.073905976 ubox
4 12 0.043471082 ubox
4 16 0.090268308 ubox
4 19 0.003927476 ubox
5 15 0.101741404 ubox
5 58 0.018451858 ubox
6 57 0.018425879 ubox
6 58 0.003846382 ubox
7 57 0.003926176 ubox
8 15 0.354960823 ubox
8 17 0.041081856 ubox
8 55 0.017214530 ubox
8 84 0.016461363 ubox
9 14 0.310548758 ubox
9 16 0.082588838 ubox
9 54 0.016724056 ubox
9 83 0.015583262 ubox
10 15 0.092299617 ubox
10 49 0.016727563 ubox
10 50 0.003421131 ubox
10 79 0.006266671 ubox
10 80 0.009897642 ubox
11 46 0.021214344 ubox
11 48 0.010030247 ubox
11 49 0.026939594 ubox
11 50 0.004562097 ubox
11 78 0.006564925 ubox
11 79 0.011209536 ubox
11 80 0.005374285 ubox
11 85 0.005283855 ubox
12 45 0.027032254 ubox
12 48 0.014997672 ubox
12 49 0.032552546 ubox
12 56 0.006853553 ubox
12 70 0.003404801 ubox
12 78 0.010329987 ubox
12 79 0.005570788 ubox
12 84 0.005499835 ubox
12 85 0.017904861 ubox
13 44 0.027593551 ubox
13 46 0.007119631 ubox
13 50 0.059167985 ubox
13 55 0.006867810 ubox
13 69 0.003339635 ubox
13 84 0.019311062 ubox
14 21 0.012515640 ubox
14 41 0.003493280 ubox
14 43 0.027178638 ubox
14 45 0.007113405 ubox
14 48 0.048967881 ubox
14 49 0.114282891 ubox
14 52 0.047605634 ubox
14 73 0.006082043 ubox
14 78 0.016977506 ubox
14 87 0.016754751 ubox
15 20 0.014082212 ubox
15 40 0.004644886 ubox
15 47 0.051361546 ubox
15 51 0.053610224 ubox
15 53 0.021360366 ubox
15 72 0.005518013 ubox
15 74 0.104296778 ubox
15 77 0.018086159 ubox
15 81 0.014600958 ubox
15 86 0.023690946 ubox
15 88 0.016407526 ubox
16 39 0.004722287 ubox
16 41 0.010989730 ubox
16 46 0.049044651 ubox
16 48 0.885816510 ubox
16 50 0.042322761 ubox
16 52 0.024420072 ubox
16 71 0.004278104 ubox
16 73 0.104037978 ubox
16 80 0.012658534 ubox
16 85 0.020906842 ubox
16 87 0.015822778 ubox
17 26 0.004113689 ubox
17 38 0.004153813 ubox
17 40 0.011754256 ubox
17 47 0.990943038 ubox
17 51 0.025389064 ubox
17 72 0.102995361 ubox
17 86 0.013809373 ubox
17 88 0.008597015 ubox
18 25 0.004151349 ubox
18 44 0.044567869 ubox
18 46 0.991494094 ubox
18 50 0.025388244 ubox
18 71 0.102988096 ubox
18 87 0.008624146 ubox
19 43 0.043459970 ubox
19 45 0.991140609 ubox
19 49 0.024532302 ubox
19 70 0.102146788 ubox
19 85 0.015710766 ubox
20 44 0.989560502 ubox
20 69 0.095131946 ubox
20 84 0.015770575 ubox
21 38 0.431758657 ubox
21 40 0.451279499 ubox
21 83 0.014119538 ubox
22 37 0.426510790 ubox
22 39 0.438749131 ubox
22 45 0.030630627 ubox
23 44 0.033067227 ubox
23 50 0.007655095 ubox
24 36 0.967273448 ubox
24 39 0.040051191 ubox
24 41 0.022696450 ubox
24 43 0.025328640 ubox
24 48 0.019800529 ubox
24 49 0.006496771 ubox
24 52 0.014132960 ubox
25 35 0.999439559 ubox
25 38 0.006111761 ubox
25 40 0.003540167 ubox
25 47 0.021568324 ubox
25 51 0.015945042 ubox
26 34 0.999550629 ubox
26 46 0.016213690 ubox
26 50 0.015917695 ubox
27 33 0.999304559 ubox
27 34 0.004279039 ubox
27 44 0.005597312 ubox
27 46 0.022170102 ubox
28 33 0.005129187 ubox
28 43 0.005366263 ubox
28 45 0.026368240 ubox
29 44 0.025907363 ubox
30 44 0.007160832 ubox
31 42 0.024373557 ubox
31 43 0.008549949 ubox
31 49 0.003210641 ubox
32 39 0.003761032 ubox
32 41 0.025435710 ubox
32 42 0.008400266 ubox
32 48 0.003196320 ubox
33 38 0.003737746 ubox
33 40 0.024881679 ubox
43 54 0.017106446 ubox
44 53 0.020501934 ubox
45 54 0.020221952 ubox
46 53 0.023629204 ubox
50 72 0.985501538 ubox
50 88 0.003694412 ubox
51 71 0.985644143 ubox
51 87 0.003699339 ubox
53 69 0.991140760 ubox
54 68 0.998482924 ubox
55 67 0.999796012 ubox
56 66 0.999665622 ubox
57 65 0.999805014 ubox
58 64 0.999772016 ubox
59 63 0.992498424 ubox
63 88 0.018585378 ubox
64 87 0.018606051 ubox
66 85 0.018378517 ubox
67 84 0.018530298 ubox
68 82 0.003243034 ubox
68 83 0.016948384 ubox
69 81 0.004567325 ubox
69 82 0.013264352 ubox
69 83 0.006717375 ubox
70 82 0.010651558 ubox
71 81 0.012354779 ubox
71 88 0.010781823 ubox
72 87 0.010802305 ubox
77 84 0.122589256 ubox
78 83 0.112275987 ubox
1 77 0.9500000 lbox
2 76 0.9500000 lbox
3 75 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
18 46 0.9500000 lbox
19 45 0.9500000 lbox
20 44 0.9500000 lbox
24 36 0.9500000 lbox
25 35 0.9500000 lbox
26 34 0.9500000 lbox
27 33 0.9500000 lbox
50 72 0.9500000 lbox
51 71 0.9500000 lbox
53 69 0.9500000 lbox
54 68 0.9500000 lbox
55 67 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
58 64 0.9500000 lbox
59 63 0.9500000 lbox
showpage
end
%%EOF
