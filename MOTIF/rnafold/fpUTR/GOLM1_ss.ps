%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUGCUCGGGGGCGGGGCCUUGCCGCUGCGGAGGCCGGAGACGCGGCGGCGCUGGACGCGGAGGCGCUGGGCGCACGGCGCGGAGCCGGCCGGAGCUCGAGGCCGGCGGCGGCGGGAGAGCGACCCGGGCGGCCUCGUAGCGGGGCCCCGGAUCCCCGAGUGGCGGCCGGAGCCUCGAAAAGAGAUUCUCAGCGCUGAUUUUGAG\
) } def
/len { sequence length } bind def

/coor [
[398.45132446 509.85076904]
[389.89434814 497.53094482]
[381.33740234 485.21109009]
[372.78042603 472.89126587]
[364.22344971 460.57144165]
[355.66650391 448.25158691]
[347.10952759 435.93176270]
[338.55258179 423.61190796]
[329.99560547 411.29208374]
[321.43862915 398.97225952]
[312.88168335 386.65240479]
[304.32470703 374.33258057]
[295.76773071 362.01272583]
[287.02481079 349.82418823]
[278.09786987 337.76971436]
[269.17095947 325.71524048]
[260.24404907 313.66079712]
[251.31713867 301.60632324]
[242.39021301 289.55184937]
[233.46330261 277.49737549]
[230.04537964 276.61929321]
[226.88368225 274.04022217]
[224.77384949 269.89901733]
[224.41928101 264.68493652]
[216.05027771 252.23664856]
[207.68125916 239.78837585]
[199.31225586 227.34008789]
[190.94323730 214.89181519]
[182.57423401 202.44352722]
[174.20521545 189.99525452]
[165.83621216 177.54696655]
[159.49348450 173.74873352]
[157.43632507 164.84565735]
[149.25720215 152.27180481]
[141.07806396 139.69795227]
[132.89894104 127.12409973]
[124.71981049 114.55023956]
[115.76486969 123.07713318]
[104.33108521 126.86480713]
[92.69265747 125.44707489]
[83.04512787 119.36599731]
[77.09124756 110.01705170]
[75.74218750 99.33834839]
[61.60827255 94.31515503]
[47.47435760 89.29196167]
[33.34044266 84.26876831]
[17.74601555 86.93792725]
[8.34466934 75.38526917]
[-5.78924417 70.36207581]
[-19.96086884 65.44627380]
[-34.16938782 60.63815689]
[-48.37790680 55.83004379]
[-62.58642578 51.02192688]
[-76.79494476 46.21380997]
[-89.44217682 55.00890350]
[-104.66523743 54.67438889]
[-116.63078308 45.54807281]
[-120.87715149 31.29653358]
[-135.08566284 26.48841858]
[-149.29418945 21.68030167]
[-165.26036072 25.42370796]
[-176.28656006 13.28471375]
[-171.02995300 -2.24912596]
[-154.89810181 -5.19792843]
[-144.48606873 7.47178221]
[-130.27755737 12.27989864]
[-116.06903076 17.08801460]
[-104.04094696 8.34369659]
[-88.99223328 8.35892105]
[-76.69427490 17.33742714]
[-71.98683167 32.00529099]
[-57.77830887 36.81340790]
[-43.56978989 41.62152481]
[-29.36127090 46.42963791]
[-15.15275192 51.23775482]
[-7.80691195 50.40382385]
[-0.76604998 56.22815704]
[13.36786366 61.25135422]
[27.95133972 58.22290039]
[38.36363602 70.13484955]
[52.49755096 75.15805054]
[66.63146210 80.18124390]
[80.76538086 85.20443726]
[82.92370605 82.75820923]
[85.39063263 80.62357330]
[88.12158966 78.83912659]
[85.18128204 64.13012695]
[82.24097443 49.42113113]
[79.30066681 34.71213150]
[76.36035919 20.00313568]
[73.42004395 5.29413891]
[70.47973633 -9.41485786]
[56.08101654 -14.95384216]
[46.98108673 -27.41156197]
[46.08369827 -42.81280518]
[53.67520905 -56.24308777]
[67.33319092 -63.41685867]
[82.69944000 -62.04499054]
[94.87063599 -52.56524658]
[99.96298981 -38.00257111]
[96.35156250 -23.00387001]
[85.18873596 -12.35516644]
[88.12904358 2.35383058]
[91.06935120 17.06282806]
[94.00965881 31.77182388]
[96.94996643 46.48081970]
[99.89027405 61.18981934]
[102.83058929 75.89881134]
[113.78192139 77.39447784]
[123.79151154 83.97681427]
[131.19271851 70.92989349]
[128.51853943 58.30988693]
[134.95413208 47.59460449]
[146.58087158 44.24900055]
[154.17922974 31.31590843]
[161.77760315 18.38281250]
[169.37596130 5.44971848]
[163.96911621 -9.22338867]
[169.30754089 -23.92152405]
[182.87060547 -31.70467758]
[198.25422668 -28.89788246]
[208.19474792 -16.82641983]
[207.99853516 -1.19006813]
[197.75825500 10.62816811]
[182.30905151 13.04807758]
[174.71069336 25.98117256]
[167.11233521 38.91426849]
[159.51397705 51.84736252]
[160.32803345 69.37612152]
[144.23963928 78.33110046]
[136.83842468 91.37802124]
[137.29365540 106.37111664]
[145.47279358 118.94496918]
[153.65191650 131.51882935]
[161.83105469 144.09268188]
[170.01017761 156.66653442]
[178.28448486 169.17796326]
[186.65350342 181.62623596]
[195.02250671 194.07452393]
[203.39152527 206.52279663]
[211.76052856 218.97108459]
[220.12954712 231.41935730]
[228.49855042 243.86764526]
[236.86756897 256.31591797]
[245.51776123 268.57046509]
[254.44468689 280.62493896]
[263.37161255 292.67941284]
[272.29852295 304.73385620]
[281.22543335 316.78833008]
[290.15234375 328.84280396]
[299.07925415 340.89727783]
[304.98568726 343.87936401]
[308.03884888 348.67727661]
[308.08758545 353.45578003]
[316.64453125 365.77560425]
[325.20150757 378.09545898]
[333.75848389 390.41528320]
[342.31542969 402.73510742]
[350.87240601 415.05496216]
[359.42938232 427.37478638]
[367.98632812 439.69464111]
[376.54330444 452.01446533]
[385.10025024 464.33428955]
[393.65722656 476.65414429]
[402.21420288 488.97396851]
[410.77114868 501.29379272]
[420.49987793 512.71099854]
[431.30578613 523.11444092]
[444.19485474 523.65106201]
[452.98110962 532.54119873]
[453.34118652 544.63439941]
[463.98794556 555.20068359]
[474.63470459 565.76696777]
[494.33685303 570.02197266]
[498.60446167 588.87939453]
[509.56701660 599.11773682]
[520.52954102 609.35601807]
[536.54779053 610.24749756]
[545.72015381 623.40985107]
[541.01037598 638.74603271]
[526.03143311 644.49139404]
[512.27380371 636.23864746]
[510.29125977 620.31854248]
[499.32870483 610.08026123]
[488.36618042 599.84197998]
[478.22277832 601.10791016]
[468.86114502 596.48309326]
[463.48110962 587.27880859]
[464.06842041 576.41369629]
[453.42166138 565.84741211]
[442.77490234 555.28112793]
[425.59112549 551.72607422]
[420.90228271 533.92034912]
[410.09640503 523.51684570]
[413.82025146 538.04730225]
[411.39398193 552.84973145]
[403.22622681 565.43103027]
[390.69277954 573.67187500]
[375.90469360 576.18438721]
[361.35284424 572.54522705]
[349.48828125 563.36737061]
[342.30944824 550.19677734]
[341.02551270 535.25183105]
[345.85275269 521.04980469]
[355.97808838 509.98284912]
[369.69601440 503.91500854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 162]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[12 155]
[13 154]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[19 146]
[20 145]
[24 144]
[25 143]
[26 142]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[33 136]
[34 135]
[35 134]
[36 133]
[37 132]
[43 83]
[44 82]
[45 81]
[46 80]
[48 78]
[49 77]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[58 67]
[59 66]
[60 65]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[110 131]
[111 130]
[114 128]
[115 127]
[116 126]
[117 125]
[167 194]
[168 193]
[171 191]
[172 190]
[173 189]
[175 185]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
