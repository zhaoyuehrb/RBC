%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUCGGACCAUGACGUCAAGGUGGGCUGGUGGCGGCAGGUGCGGGGUUGACAAUCAUACUCCUUUAAGGCGGAGGGAUCUACAGGAGGGCGGCUGUACUGUGCUUCGCCUUAUAUAGGGCGACUUGGGGCACGCAGUAGCUCUCUCGAGUCACUCCGGCGCAGUGUUGGGACUGUCUGGGUAUCGGAAAGCAAGCCUACGUUGCUCACUAUUACGUAUAAUCCUUUUCUUUUCAAGAUUUUUAUUUUAG\
) } def
/len { sequence length } bind def

/coor [
[135.33647156 692.79583740]
[138.97766113 678.20196533]
[145.16635132 664.49285889]
[153.70362854 652.10919189]
[164.31504822 641.44909668]
[176.65948486 632.85522461]
[190.34011841 626.60388184]
[186.63876343 612.06768799]
[182.93740845 597.53155518]
[169.58879089 594.71276855]
[158.70121765 586.38208008]
[152.43016052 574.11706543]
[152.04785156 560.28100586]
[157.68565369 547.56756592]
[168.29739380 538.47625732]
[164.77754211 523.89514160]
[161.25767517 509.31393433]
[157.73780823 494.73275757]
[143.92250061 489.23049927]
[135.90136719 476.49765015]
[136.92784119 461.30554199]
[146.81738281 449.49441528]
[143.29751587 434.91323853]
[139.77764893 420.33206177]
[136.25779724 405.75088501]
[132.73793030 391.16970825]
[129.21807861 376.58853149]
[125.69821167 362.00738525]
[110.97955322 353.84646606]
[106.64434052 337.23498535]
[115.85343933 322.34695435]
[112.15207672 307.81079102]
[108.36018372 293.29800415]
[104.47789764 278.80911255]
[100.59561157 264.32022095]
[87.53595734 252.58111572]
[92.48503113 234.83183289]
[88.42242432 220.39247131]
[71.55300903 206.81979370]
[77.53077698 185.21046448]
[72.75347900 170.99156189]
[67.97618103 156.77264404]
[63.19887924 142.55374146]
[58.42157745 128.33482361]
[45.38470078 120.91594696]
[30.72030830 124.07119751]
[16.05591583 127.22644806]
[1.39152336 130.38169861]
[-13.27286911 133.53694153]
[-27.91730881 136.78353882]
[-42.54122925 140.12135315]
[-57.16514587 143.45916748]
[-71.26171875 152.87844849]
[-84.21521759 141.94029236]
[-77.29041290 126.46504211]
[-60.50296021 128.83525085]
[-45.87904358 125.49742889]
[-31.25512314 122.15961456]
[-25.44883347 117.61927032]
[-16.42811775 118.87255096]
[-1.76372492 115.71730042]
[12.90066719 112.56204987]
[27.56505966 109.40680695]
[42.22945404 106.25155640]
[46.14021683 99.85187531]
[31.25665092 101.71720123]
[20.51840401 91.24390411]
[22.01139832 76.31838989]
[34.61140823 68.17960358]
[48.83059692 72.95607758]
[53.96174622 87.05251312]
[57.87250900 80.65283203]
[53.99022293 66.16394043]
[50.10793686 51.67505646]
[46.22565079 37.18616867]
[42.34336472 22.69727898]
[31.29796028 11.36989784]
[35.47755814 -2.92626357]
[31.59527206 -17.41515160]
[26.36466980 -24.87067223]
[27.75610352 -32.10887909]
[24.05474281 -46.64503860]
[11.77338123 -52.13647461]
[4.98885393 -63.52788544]
[5.98086739 -76.55446625]
[14.16495991 -86.48695374]
[10.64509869 -101.06812286]
[7.12523746 -115.64929962]
[3.60537648 -130.23046875]
[0.08551544 -144.81164551]
[-3.43434548 -159.39280701]
[-6.95420647 -173.97398376]
[-17.71377945 -185.57321167]
[-13.17906761 -199.76072693]
[-16.69892883 -214.34190369]
[-20.21879005 -228.92308044]
[-23.73865128 -243.50424194]
[-27.25851250 -258.08541870]
[-30.81946373 -261.82986450]
[-32.44351578 -266.13305664]
[-32.23976898 -270.17028809]
[-30.62652206 -273.27752686]
[-33.59871292 -287.98010254]
[-36.57090378 -302.68270874]
[-39.54309845 -317.38528442]
[-42.51528931 -332.08789062]
[-45.94419479 -346.69070435]
[-49.82648087 -361.17959595]
[-53.70876694 -375.66848755]
[-57.59104919 -390.15737915]
[-61.47333527 -404.64627075]
[-65.35562134 -419.13513184]
[-69.23790741 -433.62402344]
[-81.21014404 -444.83105469]
[-77.22767639 -460.73928833]
[-61.38731384 -464.98370361]
[-49.98427200 -453.19799805]
[-54.74901962 -437.50631714]
[-50.86673355 -423.01742554]
[-46.98444748 -408.52853394]
[-43.10216522 -394.03964233]
[-39.21987915 -379.55078125]
[-35.33759308 -365.06188965]
[-31.45530701 -350.57299805]
[-21.92657661 -362.15762329]
[-6.92690372 -362.05871582]
[2.44823098 -350.34945679]
[-0.73610145 -335.69134521]
[-14.12440300 -328.92721558]
[-27.81270218 -335.06005859]
[-24.84050941 -320.35748291]
[-21.86831856 -305.65490723]
[-18.89612579 -290.95230103]
[-15.92393398 -276.24972534]
[-12.67733955 -261.60528564]
[-9.15747833 -247.02410889]
[-5.63761759 -232.44293213]
[-2.11775661 -217.86177063]
[1.40210438 -203.28059387]
[11.90991306 -192.72430420]
[7.62696552 -177.49385071]
[11.14682674 -162.91267395]
[14.66668797 -148.33149719]
[18.18654823 -133.75033569]
[21.70640945 -119.16915894]
[25.22627068 -104.58798218]
[28.74613190 -90.00681305]
[43.46479034 -81.84592438]
[47.80000305 -65.23443604]
[38.59090042 -50.34640121]
[42.29226303 -35.81024170]
[46.08415985 -21.29743576]
[49.96644592 -6.80854940]
[60.73416519 3.48249078]
[56.83225250 18.81499481]
[60.71453857 33.30388260]
[64.59682465 47.79277039]
[68.47911072 62.28165817]
[72.36139679 76.77054596]
[89.80464172 68.36652374]
[107.46278381 70.56355286]
[119.88656616 81.00659180]
[133.14830017 73.99755859]
[146.41001892 66.98853302]
[159.67175293 59.97949982]
[172.93348694 52.97047043]
[177.35179138 37.79634476]
[191.24575806 30.26418114]
[206.37231445 34.84267807]
[213.75717163 48.81549072]
[209.01899719 63.89280319]
[194.96888733 71.12950897]
[179.94252014 66.23220062]
[166.68078613 73.24123383]
[153.41905212 80.25025940]
[140.15731812 87.25929260]
[126.89559174 94.26831818]
[127.75383759 109.14102936]
[120.50639343 123.17010498]
[106.37202454 132.03465271]
[88.80014038 132.50788879]
[72.64048767 123.55753326]
[77.41778564 137.77644348]
[82.19509125 151.99534607]
[86.97238922 166.21426392]
[91.74968719 180.43316650]
[99.72714996 182.68432617]
[106.10275269 187.83352661]
[109.89452362 194.99299622]
[110.55599976 202.97349548]
[108.05392456 210.48170471]
[102.86178589 216.32986450]
[106.92439270 230.76922607]
[117.75904846 237.73533630]
[120.85533905 249.82554626]
[115.08449554 260.43792725]
[118.96678162 274.92681885]
[122.84906769 289.41571045]
[128.07966614 296.87124634]
[126.68824005 304.10943604]
[130.38960266 318.64559937]
[142.67095947 324.13702393]
[149.45549011 335.52844238]
[148.46347046 348.55502319]
[140.27938843 358.48751831]
[143.79924011 373.06869507]
[147.31910706 387.64984131]
[150.83895874 402.23101807]
[154.35882568 416.81219482]
[157.87869263 431.39337158]
[161.39854431 445.97454834]
[175.58734131 451.97323608]
[183.43156433 465.02395630]
[182.10264587 480.01388550]
[172.31898499 491.21292114]
[175.83885193 505.79406738]
[179.35870361 520.37524414]
[182.87857056 534.95642090]
[198.79631042 539.47650146]
[210.19158936 551.34460449]
[214.01722717 567.25012207]
[209.31945801 582.82202148]
[197.47355652 593.83020020]
[201.17492676 608.36633301]
[204.87628174 622.90252686]
[219.88067627 621.84979248]
[234.83187866 623.49334717]
[249.24928284 627.78027344]
[262.66943359 634.57287598]
[274.66091919 643.65277100]
[284.83825684 654.72802734]
[292.87432861 667.44262695]
[298.51074219 681.38793945]
[301.56634521 696.11553955]
[301.94293213 711.15209961]
[299.62838745 726.01422119]
[294.69708252 740.22412109]
[287.30755615 753.32507324]
[277.69735718 764.89593506]
[266.17544556 774.56463623]
[253.11212158 782.02050781]
[238.92738342 787.02380371]
[224.07719421 789.41375732]
[209.03892517 789.11340332]
[194.29598999 786.13250732]
[180.32232666 780.56689453]
[167.56710815 772.59539795]
[156.44038391 762.47436523]
[147.29981995 750.52905273]
[140.43923950 737.14355469]
[136.07920837 722.74804688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 225]
[8 224]
[9 223]
[15 218]
[16 217]
[17 216]
[18 215]
[22 211]
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[28 205]
[31 201]
[32 200]
[33 198]
[34 197]
[35 196]
[37 193]
[38 192]
[40 186]
[41 185]
[42 184]
[43 183]
[44 182]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 58]
[51 57]
[52 56]
[72 159]
[73 158]
[74 157]
[75 156]
[76 155]
[78 153]
[79 152]
[81 151]
[82 150]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[107 124]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
