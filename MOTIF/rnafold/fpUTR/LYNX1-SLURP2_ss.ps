%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGCGAGUGGGCGGAGGCGGCUGCGGGGAAGGCUGGGCUGCCGCGGGACGCGGUGAAGAUAGCCUGCGGAGUGUCCGGGCUGAACACGGUUGCAGCACUCCCAGUAGACCAGGAGCUCCGGGAGGCAGGGCCGGCCCCACGUCCUCUGCGCACCACCCUGAGUUGGAUCCUCUGUGCGCCACCUGAGUUGGAUCCAGGGCUAGCUGCUGUUGACCUCCCCACUCCCACGCUGCCCUCCUGCCUGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[78.76271820 533.02783203]
[64.00880432 539.32873535]
[49.95252228 531.59564209]
[47.37664795 515.76074219]
[58.25717926 503.97119141]
[59.00191116 488.98968506]
[59.74664688 474.00820923]
[51.87094879 464.84902954]
[52.35199738 452.37823486]
[61.47648239 443.28695679]
[62.40718842 428.31585693]
[63.33789062 413.34475708]
[64.26859283 398.37368774]
[65.19930267 383.40258789]
[66.13000488 368.43148804]
[67.06070709 353.46038818]
[67.99140930 338.48928833]
[61.05870819 325.30645752]
[69.63735962 312.01293945]
[70.56806183 297.04183960]
[67.85369110 290.18954468]
[71.60440826 281.89099121]
[72.72093964 266.93261719]
[73.83746338 251.97421265]
[67.06899261 238.70632935]
[75.81204224 225.52037048]
[76.92857361 210.56198120]
[78.04510498 195.60359192]
[79.06874084 180.63854980]
[79.99944305 165.66746521]
[80.93014526 150.69636536]
[81.86084747 135.72526550]
[69.99369812 126.55079651]
[55.73940659 131.22146606]
[41.48511505 135.89213562]
[27.23082352 140.56280518]
[12.97653103 145.23347473]
[-1.27776122 149.90414429]
[-6.25419855 166.08334351]
[-19.76541138 176.00166321]
[-36.35959625 175.90325928]
[-49.48631668 166.02542114]
[-63.68151474 170.87272644]
[-77.87671661 175.72003174]
[-92.07190704 180.56733704]
[-106.26710510 185.41464233]
[-120.46230316 190.26194763]
[-134.65750122 195.10925293]
[-147.69291687 205.94966125]
[-161.71823120 196.42460632]
[-156.44801331 180.31060791]
[-139.50480652 180.91406250]
[-125.30960846 176.06675720]
[-111.11441040 171.21945190]
[-96.91921234 166.37214661]
[-82.72402191 161.52484131]
[-68.52882385 156.67753601]
[-54.33362198 151.83023071]
[-51.60448456 138.77667236]
[-42.71544647 128.69078064]
[-29.90377808 124.27252960]
[-16.47461891 126.77466583]
[-5.94843054 135.64985657]
[8.30586147 130.97918701]
[22.56015396 126.30851746]
[36.81444550 121.63784790]
[51.06873703 116.96717834]
[65.32302856 112.29650879]
[60.08189774 101.53491211]
[58.38965225 88.75666046]
[60.96208954 75.18457031]
[48.60107422 66.68719482]
[36.24006271 58.18982315]
[23.87904739 49.69245148]
[11.51803398 41.19507980]
[-0.84297919 32.69770432]
[-13.20399284 24.20033264]
[-27.76901817 29.21692848]
[-42.32503510 24.74750328]
[-51.35142517 12.70639706]
[-51.55427551 -2.16292834]
[-63.91528702 -10.66030121]
[-76.27629852 -19.15767288]
[-88.63731384 -27.65504646]
[-100.99832916 -36.15242004]
[-117.38039398 -36.90065765]
[-124.68215179 -51.58454132]
[-115.39217377 -65.09854889]
[-99.06719971 -63.54062653]
[-92.50095367 -48.51343155]
[-80.13994598 -40.01605988]
[-67.77893066 -31.51868820]
[-55.41791534 -23.02131462]
[-43.05690384 -14.52394199]
[-29.10143280 -19.66036987]
[-14.62617397 -15.54565620]
[-5.23967600 -3.55620027]
[-4.70662022 11.83932018]
[7.65439367 20.33669281]
[20.01540756 28.83406448]
[32.37641907 37.33143616]
[44.73743439 45.82881165]
[57.09844971 54.32618332]
[69.45946503 62.82355499]
[75.71802521 58.69071960]
[67.45235443 46.17358398]
[59.18667603 33.65645218]
[50.92100143 21.13932037]
[42.65553284 8.62205029]
[55.17294312 0.35679027]
[63.43813324 12.87364483]
[71.70381165 25.39077759]
[79.96948242 37.90790939]
[88.23516083 50.42504120]
[94.49372864 46.29220581]
[91.53312683 31.58728027]
[80.29166412 19.64736366]
[85.26969910 4.02202320]
[101.34624481 0.78526908]
[111.98313904 13.26679611]
[106.23805237 28.62668037]
[109.19865417 43.33160400]
[122.55951691 50.14976120]
[136.20399475 43.91853333]
[149.84848022 37.68730927]
[163.49296570 31.45608521]
[177.13743591 25.22485924]
[190.78192139 18.99363327]
[204.26745605 12.42550850]
[217.58573914 5.52453279]
[230.90400696 -1.37644303]
[244.17918396 -8.35997391]
[257.41076660 -15.42579079]
[270.64230347 -22.49160767]
[279.17080688 -35.81734467]
[294.04226685 -34.98748016]
[307.27383423 -42.05329514]
[320.50540161 -49.11911392]
[333.73696899 -56.18493271]
[346.96853638 -63.25074768]
[349.21524048 -78.49077606]
[359.88027954 -89.35862732]
[374.72412109 -91.83333588]
[388.01971436 -85.17258453]
[401.25125122 -92.23839569]
[414.48281860 -99.30421448]
[427.71438599 -106.37003326]
[437.09527588 -122.23001862]
[454.60778809 -120.93379974]
[467.75061035 -128.16337585]
[480.61502075 -135.87741089]
[493.18325806 -144.06520081]
[505.75146484 -152.25300598]
[518.31964111 -160.44081116]
[530.88787842 -168.62861633]
[543.45605469 -176.81642151]
[543.44775391 -196.84164429]
[555.48474121 -212.66352844]
[574.50665283 -217.92085266]
[592.69097900 -210.63392639]
[604.83715820 -219.43562317]
[607.08105469 -235.07980347]
[619.77978516 -244.48823547]
[635.39935303 -242.07905579]
[644.67297363 -229.28160095]
[642.09881592 -213.68835449]
[629.20404053 -204.55053711]
[613.63885498 -207.28942871]
[601.49267578 -198.48773193]
[603.74517822 -188.45521545]
[602.54095459 -178.20530701]
[597.99102783 -168.89952087]
[590.58691406 -161.60084534]
[581.14782715 -157.15225220]
[570.72998047 -156.07945251]
[560.50823975 -158.52886963]
[551.64385986 -164.24819946]
[539.07568359 -156.06040955]
[526.50744629 -147.87260437]
[513.93927002 -139.68479919]
[501.37103271 -131.49699402]
[488.80282593 -123.30919647]
[503.26626587 -119.33309937]
[510.78182983 -106.35172272]
[507.02835083 -91.82893372]
[494.16394043 -84.11485291]
[479.58523560 -87.64482117]
[471.67446899 -100.38922882]
[474.98016357 -115.02056122]
[461.83737183 -107.79099274]
[458.17507935 -96.27992249]
[447.30773926 -90.14373779]
[434.78021240 -93.13847351]
[421.54864502 -86.07265472]
[408.31707764 -79.00683594]
[395.08551025 -71.94101715]
[393.22564697 -57.18707657]
[382.91268921 -46.22774124]
[367.94903564 -43.40953827]
[354.03433228 -50.01918793]
[340.80279541 -42.95336914]
[327.57122803 -35.88755417]
[314.33966064 -28.82173538]
[301.10809326 -21.75591850]
[293.52600098 -8.93557549]
[277.70812988 -9.26004696]
[264.47656250 -2.19422936]
[251.24501038 4.87158775]
[246.83720398 10.77862263]
[237.80499268 11.94183540]
[224.48670959 18.84281158]
[211.16842651 25.74378586]
[210.18780518 28.34262085]
[208.13255310 30.71513367]
[205.08184814 32.45515060]
[201.25856018 33.19187164]
[197.01313782 32.63811493]
[183.36866760 38.86933899]
[169.72418213 45.10056305]
[156.07971191 51.33179092]
[142.43522644 57.56301498]
[128.79074097 63.79423904]
[142.41625977 88.71678925]
[138.57812500 115.36429596]
[120.56080627 133.32670593]
[96.83194733 136.65596008]
[95.90124512 151.62705994]
[94.97054291 166.59815979]
[94.03984070 181.56925964]
[96.62563324 190.30125427]
[93.00348663 196.72012329]
[91.88696289 211.67849731]
[90.77043152 226.63688660]
[97.45904541 240.97471619]
[88.79585266 253.09074402]
[87.67932892 268.04913330]
[86.56279755 283.00750732]
[85.53916168 297.97256470]
[84.60845947 312.94366455]
[91.47459412 327.19729614]
[82.96250916 339.41998291]
[82.03180695 354.39108276]
[81.10110474 369.36218262]
[80.17039490 384.33328247]
[79.23969269 399.30438232]
[78.30899048 414.27548218]
[77.37828827 429.24658203]
[76.44758606 444.21768188]
[85.02341461 460.52703857]
[74.72814941 474.75292969]
[73.98341370 489.73443604]
[73.23867798 504.71594238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 252]
[6 251]
[7 250]
[10 248]
[11 247]
[12 246]
[13 245]
[14 244]
[15 243]
[16 242]
[17 241]
[19 239]
[20 238]
[22 237]
[23 236]
[24 235]
[26 233]
[27 232]
[28 231]
[29 229]
[30 228]
[31 227]
[32 226]
[33 68]
[34 67]
[35 66]
[36 65]
[37 64]
[38 63]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[48 52]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[115 122]
[116 121]
[123 222]
[124 221]
[125 220]
[126 219]
[127 218]
[128 217]
[129 212]
[130 211]
[131 210]
[132 208]
[133 207]
[134 206]
[136 204]
[137 203]
[138 202]
[139 201]
[140 200]
[144 196]
[145 195]
[146 194]
[147 193]
[149 190]
[150 189]
[151 182]
[152 181]
[153 180]
[154 179]
[155 178]
[156 177]
[160 169]
[161 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
