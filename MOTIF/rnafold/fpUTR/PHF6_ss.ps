%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:23:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGGCGCUCCGCGAGCCCGUCUCUCCUCGAAUGAAAGGAAACAACCUCCGGCGACAGAGCCCCGCUCUCAGGCACUGCUGGAGAACCGAGACCGACUUCUUUCUCUUUACCCUCAUUGGCGCUUCUCUCCUGCAGUCCGCCUCUGGGCCCUGCCGCAUUUCUUGAGACUUAAAGUGGCAUUCUAAAGGCAAUUUAAAAAUC\
) } def
/len { sequence length } bind def

/coor [
[75.49445343 139.90823364]
[83.16632080 127.01860809]
[90.83818817 114.12898254]
[77.92587280 121.76260376]
[65.01356506 129.39622498]
[59.21420670 136.46200562]
[51.84183502 137.04629517]
[38.81293869 144.47918701]
[25.78404045 151.91206360]
[12.75514412 159.34495544]
[-0.09771397 167.07826233]
[-12.76760578 175.10783386]
[-25.43749809 183.13739014]
[-37.98161316 191.36206055]
[-50.39694977 199.77986145]
[-62.81228256 208.19766235]
[-63.44421005 223.58944702]
[-72.90751648 235.51837158]
[-87.40890503 239.54002380]
[-101.33110046 234.31407166]
[-113.74642944 242.73187256]
[-115.17705536 253.52250671]
[-122.16899872 261.57629395]
[-132.22874451 264.38961792]
[-141.96586609 261.26525879]
[-154.63575745 269.29483032]
[-167.30564880 277.32437134]
[-179.97554016 285.35394287]
[-180.82501221 300.84774780]
[-190.64538574 312.86190796]
[-205.66050720 316.77673340]
[-220.09675598 311.08688354]
[-228.40310669 297.98025513]
[-227.38558960 282.49658203]
[-217.43548584 270.58966064]
[-202.37878418 266.83792114]
[-188.00509644 272.68405151]
[-175.33520508 264.65447998]
[-162.66531372 256.62493896]
[-149.99542236 248.59536743]
[-142.31127930 230.85563660]
[-122.16423798 230.31654358]
[-109.74890137 221.89874268]
[-109.45056152 207.03102112]
[-100.34701538 195.04814148]
[-85.76259613 190.67228699]
[-71.23008728 195.78233337]
[-58.81475449 187.36453247]
[-46.39941788 178.94671631]
[-44.63497543 174.50245667]
[-40.05642319 171.12228394]
[-33.46705627 170.46749878]
[-20.79716682 162.43794250]
[-8.12727451 154.40837097]
[-7.00405836 151.05973816]
[-4.19946146 148.09051514]
[0.08968172 146.28663635]
[5.32225561 146.31605530]
[18.35115242 138.88317871]
[31.38005066 131.45028687]
[44.40894699 124.01739502]
[57.37994003 116.48391724]
[70.29225159 108.85029602]
[83.20456696 101.21666718]
[91.71818542 88.86684418]
[94.25938416 74.08366394]
[96.80057526 59.30048752]
[99.34177399 44.51731110]
[90.49079895 31.69943428]
[93.27852631 16.74339104]
[105.55295563 8.38432884]
[108.09415436 -6.39884806]
[110.63534546 -21.18202591]
[113.17654419 -35.96520233]
[115.48866272 -50.78593445]
[117.57115173 -65.64067078]
[119.65364075 -80.49540710]
[121.73612213 -95.35015106]
[123.81861115 -110.20488739]
[118.07215118 -124.94560242]
[127.50148773 -136.47543335]
[129.58396912 -151.33016968]
[131.66645813 -166.18490601]
[133.74894714 -181.03965759]
[135.83143616 -195.89439392]
[128.78681946 -204.19244385]
[127.50205994 -214.78016663]
[132.16192627 -224.12892151]
[141.00979614 -229.25614929]
[143.55097961 -244.03932190]
[146.09217834 -258.82250977]
[139.31915283 -275.94262695]
[151.05210876 -288.98904419]
[153.36422729 -303.80978394]
[155.67634583 -318.63052368]
[157.98846436 -333.45123291]
[144.31814575 -339.87768555]
[133.01303101 -349.89620972]
[124.98956299 -362.69467163]
[120.89817047 -377.23556519]
[121.07053375 -392.34008789]
[125.49266815 -406.78381348]
[133.80609131 -419.39587402]
[145.33688354 -429.15380859]
[159.15029907 -435.26663208]
[174.12651062 -437.23880005]
[189.05149841 -434.91040039]
[202.71536255 -428.47024536]
[214.01040649 -418.44036865]
[222.02101135 -405.63385010]
[226.09779358 -391.08886719]
[225.91026306 -375.98449707]
[221.47361755 -361.54522705]
[213.14752197 -348.94152832]
[201.60693359 -339.19519043]
[187.78739929 -333.09622192]
[172.80918884 -331.13912964]
[170.49707031 -316.31838989]
[168.18495178 -301.49765015]
[165.87283325 -286.67694092]
[172.75141907 -276.72158813]
[170.94207764 -264.35177612]
[160.87535095 -256.28131104]
[158.33416748 -241.49812317]
[155.79296875 -226.71495056]
[163.79817200 -209.11776733]
[150.68617249 -193.81190491]
[148.60368347 -178.95716858]
[146.52119446 -164.10241699]
[144.43870544 -149.24768066]
[142.35621643 -134.39294434]
[148.25163269 -120.71473694]
[138.67335510 -108.12239838]
[136.59086609 -93.26766205]
[134.50837708 -78.41292572]
[132.42588806 -63.55818558]
[130.34339905 -48.70344543]
[132.45663452 -44.41405106]
[131.89326477 -38.75089264]
[127.95971680 -33.42400742]
[125.41852570 -18.64082909]
[122.87732697 -3.85765219]
[120.33613586 10.92552471]
[129.11466980 22.90354538]
[126.74812317 37.93198776]
[114.12495422 47.05850601]
[111.58375549 61.84168243]
[109.04255676 76.62486267]
[106.50136566 91.40803528]
[111.07416534 91.95632172]
[115.68602753 94.56842804]
[119.49800110 99.24889374]
[133.15995789 105.44170380]
[146.82191467 111.63451385]
[160.48387146 117.82732391]
[174.14582825 124.02012634]
[187.80780029 130.21293640]
[198.18307495 119.18422699]
[211.57835388 112.12413788]
[226.54064941 109.79849243]
[241.44692993 112.45955658]
[254.68029785 119.81867981]
[264.80529785 131.07760620]
[270.72360229 145.01504517]
[271.79330444 160.11917114]
[267.89831543 174.75158691]
[259.46118164 187.32510376]
[247.39704895 196.47581482]
[233.01457214 201.21113586]
[217.87385559 201.01741028]
[203.61724854 195.91564941]
[191.79121399 186.45925903]
[183.67852783 173.67399597]
[180.15919495 158.94670105]
[181.61499023 143.87489319]
[167.95303345 137.68208313]
[154.29106140 131.48927307]
[140.62910461 125.29647064]
[126.96714783 119.10366058]
[113.30519104 112.91085815]
[122.32569885 124.89544678]
[131.34620667 136.88003540]
[144.24095154 144.54328918]
[154.91326904 155.08375549]
[162.73620605 167.88226318]
[167.25018311 182.18695068]
[168.19003296 197.15748596]
[165.50054932 211.91439819]
[159.33973694 225.59082031]
[150.06948853 237.38328552]
[138.23440552 246.59909058]
[124.52973938 252.69680786]
[109.76058197 255.31823730]
[94.79454803 254.30938721]
[80.51081848 249.72952271]
[67.74850464 241.84768677]
[57.25733185 231.12690735]
[49.65360641 218.19696045]
[45.38401031 203.81744385]
[44.69936371 188.83306885]
[47.63988876 174.12413025]
[54.03284073 160.55467224]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 64]
[4 63]
[5 62]
[7 61]
[8 60]
[9 59]
[10 58]
[11 54]
[12 53]
[13 52]
[14 49]
[15 48]
[16 47]
[20 43]
[21 42]
[25 40]
[26 39]
[27 38]
[28 37]
[65 149]
[66 148]
[67 147]
[68 146]
[71 143]
[72 142]
[73 141]
[74 140]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[89 125]
[90 124]
[91 123]
[93 120]
[94 119]
[95 118]
[96 117]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
