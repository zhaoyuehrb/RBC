%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUACAACAUUGGCUGCCGGCGUGACUUUGACCGCUUCCCGGUGCGUUACCGGCAGCUGAACCCACCCGGCGCCACGGGACUUUGACGCGUGCUCUGCGCUUGCC\
) } def
/len { sequence length } bind def

/coor [
[69.17620087 166.64370728]
[59.74703979 161.41001892]
[51.18618774 154.85163879]
[43.67829895 147.11004639]
[37.38533783 138.35224915]
[32.44304276 128.76713562]
[28.95802689 118.56149292]
[27.00546837 107.95545197]
[26.62748528 97.17780304]
[27.83222961 86.46103668]
[30.59371376 76.03631592]
[34.85237122 66.12852478]
[22.32005310 57.88588715]
[9.78773594 49.64325333]
[-2.74458146 41.40061569]
[-15.27689838 33.15798187]
[-27.80921555 24.91534805]
[-40.34153366 16.67271423]
[-52.87385178 8.43007851]
[-65.40616608 0.18744396]
[-77.93848419 -8.05519104]
[-90.47080231 -16.29782486]
[-97.28916168 -17.09106827]
[-101.89806366 -20.74263191]
[-103.47282410 -25.40194130]
[-115.50467682 -34.35932159]
[-127.53652191 -43.31669998]
[-139.56837463 -52.27407837]
[-150.95115662 -48.25051498]
[-162.73071289 -50.27409744]
[-171.93016052 -57.71376419]
[-176.28315735 -68.58502960]
[-174.79171753 -80.07817841]
[-186.28237915 -89.71998596]
[-197.77305603 -99.36180115]
[-209.26371765 -109.00361633]
[-225.30671692 -109.04340363]
[-235.16499329 -121.70018005]
[-231.27610779 -137.26475525]
[-216.62329102 -143.79731750]
[-202.44691467 -136.28665161]
[-199.62190247 -120.49428558]
[-188.13124084 -110.85247040]
[-176.64056396 -101.21065521]
[-165.14990234 -91.56884003]
[-147.17109680 -94.34563446]
[-132.52600098 -83.03044128]
[-130.61099243 -64.30592346]
[-118.57913971 -55.34854507]
[-106.54729462 -46.39116669]
[-94.51544952 -37.43378830]
[-82.22816467 -28.83014297]
[-69.69584656 -20.58750725]
[-57.16353226 -12.34487343]
[-44.63121414 -4.10223866]
[-32.09889984 4.14039612]
[-19.56658173 12.38303089]
[-7.03426409 20.62566566]
[5.49805307 28.86829948]
[18.03037071 37.11093521]
[30.56268692 45.35356903]
[43.09500504 53.59620285]
[61.17132950 37.67965698]
[83.42536926 28.46838188]
[107.46273804 26.95345116]
[130.69715881 33.29786301]
[150.62876892 46.81899643]
[165.11303711 66.06206512]
[179.05325317 60.52397537]
[192.99346924 54.98588181]
[206.93367004 49.44779205]
[212.96250916 34.83859253]
[227.58767700 28.84859085]
[242.13232422 35.03154755]
[247.96736145 49.71922684]
[241.63096619 64.19768524]
[226.88243103 69.87711334]
[212.47177124 63.38800430]
[198.53155518 68.92609406]
[184.59133911 74.46418762]
[170.65112305 80.00228119]
[172.49368286 88.33137512]
[173.35778809 96.81796265]
[173.23179626 105.34749603]
[172.11738586 113.80485535]
[170.02960205 122.07588959]
[166.99664307 130.04896545]
[163.05943298 137.61647034]
[158.27110291 144.67626953]
[152.69630432 151.13307190]
[162.33810425 162.62373352]
[171.97991943 174.11441040]
[181.62173462 185.60507202]
[197.41410828 188.43008423]
[204.92477417 202.60646057]
[198.39221191 217.25927734]
[182.82763672 221.14816284]
[170.17085266 211.28988647]
[170.13107300 195.24688721]
[160.48925781 183.75622559]
[150.84744263 172.26554871]
[141.20562744 160.77488708]
[131.85922241 166.15496826]
[121.82558441 170.10801697]
[111.32114410 172.54875183]
[100.57248688 173.42454529]
[89.81148529 172.71647644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[20 54]
[21 53]
[22 52]
[25 51]
[26 50]
[27 49]
[28 48]
[33 45]
[34 44]
[35 43]
[36 42]
[68 81]
[69 80]
[70 79]
[71 78]
[90 102]
[91 101]
[92 100]
[93 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
