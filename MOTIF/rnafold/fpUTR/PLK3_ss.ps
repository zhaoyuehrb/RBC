%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGGGAGGAGCUUCUGGGUGAUGUAAGGCCGGGAAUGGGAGUGGCCUCUCCUCGACUCGCUGCUAGGAAGGGGGCGGGACUCUCGGUGACCAGACGCCGGGGAGGGGGCAGGCGUUCAUUGAUAAAACGCUGGGCUCCCCUGGGCGCCAGCGCAGCGUAGCAAAUCCAGGCAGCGCCACGCGCGGCCGGGGCCGGGCGGAACCGAGAAGCCGGGACCGCGCUGCGACGCGCCGGCCGC\
) } def
/len { sequence length } bind def

/coor [
[100.17035675 138.40115356]
[80.80650330 133.26089478]
[70.91631317 144.53849792]
[61.02613068 155.81608582]
[51.13594055 167.09368896]
[41.24575424 178.37129211]
[31.35556793 189.64888000]
[21.46537971 200.92648315]
[11.57519341 212.20407104]
[8.39299297 230.35040283]
[-8.44641590 235.31970215]
[-18.18813705 246.72579956]
[-27.92985725 258.13189697]
[-37.29316711 269.85061646]
[-46.26803589 281.86941528]
[-55.24290466 293.88821411]
[-57.30034637 309.57507324]
[-71.11492920 315.14343262]
[-80.08979797 327.16226196]
[-89.06466675 339.18106079]
[-84.33477020 353.95968628]
[-89.22682953 368.68542480]
[-101.85973358 377.69592285]
[-117.37588501 377.52648926]
[-129.80900574 368.24221802]
[-134.37829590 353.41317749]
[-129.32678223 338.74136353]
[-116.59687042 329.86843872]
[-101.08347321 330.20617676]
[-92.10860443 318.18737793]
[-83.13373566 306.16857910]
[-81.71823120 291.34136963]
[-67.26171112 284.91336060]
[-58.28684235 272.89456177]
[-49.31197357 260.87573242]
[-64.30788422 260.52554321]
[-73.49073792 248.66488647]
[-70.07410431 234.05917358]
[-56.58299637 227.50250244]
[-42.98776627 233.84046936]
[-39.33594513 248.39016724]
[-29.59422684 236.98406982]
[-19.85250473 225.57798767]
[-20.49146843 213.51066589]
[-12.48591042 203.93046570]
[0.29759616 202.31388855]
[10.18778324 191.03630066]
[20.07797050 179.75869751]
[29.96815872 168.48109436]
[39.85834503 157.20350647]
[49.74853134 145.92590332]
[59.63871765 134.64831543]
[69.52890778 123.37071228]
[66.07184601 117.98772430]
[63.55642319 112.10550690]
[62.05244064 105.88731384]
[61.60165024 99.50572968]
[46.92943573 96.38705444]
[32.25722122 93.26837921]
[17.58500671 90.14970398]
[2.91279268 87.03102875]
[-11.75942135 83.91235352]
[-26.86670113 88.61135864]
[-37.70717621 78.39698792]
[-52.37939072 75.27831268]
[-66.56320190 82.77492523]
[-81.20953369 76.22782898]
[-85.08297729 60.65939713]
[-75.21215820 48.01240158]
[-59.16912460 47.98853302]
[-49.26071548 60.60610199]
[-34.58850098 63.72477722]
[-20.53067589 58.80270386]
[-8.64074612 69.24014282]
[6.03146791 72.35881805]
[20.70368195 75.47749329]
[35.37589645 78.59616852]
[50.04811096 81.71484375]
[64.72032166 84.83351898]
[65.04580688 80.05944824]
[66.01720428 75.17843628]
[67.66120911 70.27733612]
[57.77102661 58.99973679]
[47.88083649 47.72214127]
[37.99065018 36.44454193]
[28.10046387 25.16694641]
[18.21027565 13.88934898]
[8.32008934 2.61175179]
[-1.57009780 -8.66584492]
[-17.35495758 -9.44926929]
[-27.90049362 -21.22072601]
[-26.95022583 -36.99642181]
[-15.06793308 -47.41691208]
[0.69683295 -46.29990768]
[10.99111557 -34.30810928]
[9.70749950 -18.55603218]
[19.59768677 -7.27843523]
[29.48787308 3.99916172]
[39.37805939 15.27675915]
[49.26824951 26.55435562]
[59.15843582 37.83195114]
[69.04862213 49.10955048]
[78.93881226 60.38714600]
[93.17401123 55.65862274]
[94.35089874 40.70486069]
[95.52778625 25.75110245]
[96.70467377 10.79734230]
[97.88156128 -4.15641737]
[98.96054840 -19.11755943]
[99.94159698 -34.08544540]
[91.41942596 -50.41908646]
[101.75390625 -64.61268616]
[102.53894043 -79.59213257]
[103.32398224 -94.57157898]
[104.10902405 -109.55101776]
[104.89405823 -124.53046417]
[105.67910004 -139.50990295]
[93.09531403 -148.43469238]
[87.35546875 -162.75453186]
[90.29112244 -177.90000916]
[100.96553040 -189.03825378]
[115.97251892 -192.61509705]
[130.52340698 -187.48919678]
[139.97508240 -175.29617310]
[141.31152344 -159.92681885]
[134.10629272 -146.28540039]
[120.65854645 -138.72486877]
[119.87350464 -123.74542236]
[119.08846283 -108.76597595]
[118.30342865 -93.78653717]
[117.51838684 -78.80709076]
[116.73334503 -63.82764816]
[124.58638763 -54.64297485]
[124.06721497 -42.16901398]
[114.90947723 -33.10439682]
[113.92843628 -18.13651276]
[116.62191772 -11.27004242]
[112.83531952 -2.97953105]
[111.65843201 11.97422886]
[110.48154449 26.92798805]
[109.30466461 41.88174820]
[108.12777710 56.83551025]
[126.68553925 67.46044922]
[137.32392883 84.95519257]
[138.13633728 104.50527954]
[152.40219116 109.14053345]
[166.66802979 113.77578735]
[180.96391296 118.31757355]
[195.28921509 122.76570129]
[210.76307678 119.46875000]
[220.62344360 130.63218689]
[234.94874573 135.08030701]
[249.27404785 139.52844238]
[263.59933472 143.97656250]
[277.46240234 136.87347412]
[291.92691040 141.58857727]
[298.61318970 154.84864807]
[312.93847656 159.29676819]
[327.26379395 163.74488831]
[341.58908081 168.19302368]
[355.91436768 172.64114380]
[370.23968506 177.08926392]
[370.48522949 167.53085327]
[375.48352051 157.64181519]
[385.27609253 149.42530823]
[399.13879395 144.82768250]
[414.13366699 144.43502808]
[429.12850952 144.04237366]
[442.72143555 135.94648743]
[455.64688110 143.34797668]
[470.64172363 142.95532227]
[485.63659668 142.56266785]
[499.22949219 134.46676636]
[512.15496826 141.86825562]
[527.14978027 141.47560120]
[542.14465332 141.08294678]
[557.13952637 140.69029236]
[572.81494141 134.23139954]
[583.36083984 147.50624084]
[573.52416992 161.31480408]
[557.53216553 155.68515015]
[542.53729248 156.07780457]
[527.54248047 156.47045898]
[512.54760742 156.86311340]
[500.02722168 164.93092346]
[486.02923584 157.55752563]
[471.03439331 157.95018005]
[456.03952026 158.34283447]
[443.51916504 166.41064453]
[429.52117920 159.03724670]
[414.52630615 159.42990112]
[399.53146362 159.82255554]
[396.88958740 166.84184265]
[410.92807007 172.12580872]
[405.64389038 186.16423035]
[391.60583496 180.88043213]
[388.96395874 187.89971924]
[399.97879028 198.08174133]
[410.99362183 208.26374817]
[422.00845337 218.44575500]
[437.57901001 218.00282288]
[448.60455322 228.48573303]
[448.93087769 243.33259583]
[459.94570923 253.51460266]
[470.96057129 263.69662476]
[486.74084473 262.82577515]
[498.45904541 273.43045044]
[499.16299438 289.21905518]
[488.43502808 300.82449341]
[472.63989258 301.36148071]
[461.14849854 290.51141357]
[460.77853394 274.71145630]
[449.76370239 264.52944946]
[438.74887085 254.34742737]
[423.92218018 255.18698120]
[412.60653687 245.01788330]
[411.82644653 229.46060181]
[400.81161499 219.27857971]
[389.79678345 209.09657288]
[378.78195190 198.91456604]
[365.79156494 191.41456604]
[351.46624756 186.96644592]
[337.14096069 182.51831055]
[322.81567383 178.07019043]
[308.49035645 173.62207031]
[294.16506958 169.17395020]
[281.14413452 176.31477356]
[266.55288696 172.00781250]
[259.15121460 158.30186462]
[244.82592773 153.85372925]
[230.50062561 149.40560913]
[216.17532349 144.95748901]
[201.72608948 148.57260132]
[190.84107971 137.09100342]
[176.51579285 132.64286804]
[169.21025085 133.65899658]
[162.03277588 128.04164124]
[147.76692200 123.40637970]
[133.50108337 118.77112579]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 53]
[3 52]
[4 51]
[5 50]
[6 49]
[7 48]
[8 47]
[9 46]
[11 43]
[12 42]
[13 41]
[14 35]
[15 34]
[16 33]
[18 31]
[19 30]
[20 29]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[64 72]
[65 71]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[109 136]
[110 135]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[145 239]
[146 238]
[147 237]
[148 235]
[149 234]
[151 232]
[152 231]
[153 230]
[154 229]
[157 226]
[158 225]
[159 224]
[160 223]
[161 222]
[162 221]
[166 192]
[167 191]
[168 190]
[170 188]
[171 187]
[172 186]
[174 184]
[175 183]
[176 182]
[177 181]
[197 220]
[198 219]
[199 218]
[200 217]
[203 214]
[204 213]
[205 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
