%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUCAGUGUGAGCUGUUGAAAGCCUGCAGCUAAACACCAGUGUUACUUCACUCCCCUUUGUGGACACCAAGGGGAAGAAGAAUACGGUAAGCUUCCCACACAUUAGCAAGAAAGUCCUGCUGAAGUCAUCCCUGCUGUAUCAGGAGAAUCAAGCUCACAAUCAG\
) } def
/len { sequence length } bind def

/coor [
[83.00267792 543.08184814]
[67.82595062 542.22442627]
[54.13476562 535.61987305]
[44.01694107 524.27532959]
[39.01536942 509.92080688]
[39.89275742 494.74520874]
[46.51530075 481.06274414]
[57.87311935 470.95983887]
[72.23422241 465.97717285]
[73.08031464 451.00103760]
[73.92639923 436.02493286]
[74.77248383 421.04879761]
[75.61857605 406.07269287]
[76.46466064 391.09655762]
[77.31075287 376.12045288]
[78.15683746 361.14431763]
[75.67090607 357.02081299]
[75.77866364 351.28472900]
[79.32691193 345.62405396]
[80.73572540 330.69033813]
[82.14454651 315.75665283]
[69.49679565 305.32269287]
[65.50542450 289.24877930]
[71.93061829 273.80395508]
[86.42982483 265.13345337]
[87.55747986 250.17591858]
[88.68512726 235.21835327]
[89.81278229 220.26080322]
[90.51796722 205.27738953]
[90.80013275 190.28004456]
[91.08229065 175.28269958]
[91.36445618 160.28535461]
[70.83965302 153.46560669]
[53.99264145 139.90261841]
[42.94820023 121.30701447]
[39.09929657 100.02410126]
[42.93135452 78.73815155]
[53.96107483 60.13380051]
[43.91712570 48.99292755]
[33.87318039 37.85205078]
[25.76599312 33.54913330]
[23.74750328 26.40584755]
[13.91490173 15.07800770]
[4.08230066 3.75016785]
[-5.75030041 -7.57767200]
[-15.58290100 -18.90551186]
[-23.60771179 -23.36016846]
[-25.49147415 -30.54016113]
[-35.10924911 -42.05095673]
[-44.72702408 -53.56175232]
[-54.34479904 -65.07254791]
[-67.12516022 -67.00865173]
[-74.89752197 -76.83007812]
[-73.90908813 -88.91310883]
[-83.30863190 -100.60279083]
[-92.70817566 -112.29246521]
[-102.10772705 -123.98213959]
[-111.50727081 -135.67181396]
[-120.90681458 -147.36149597]
[-130.30636597 -159.05117798]
[-144.98382568 -164.95733643]
[-146.92942810 -179.72431946]
[-156.32896423 -191.41400146]
[-171.80586243 -196.83598328]
[-174.58242798 -212.99836731]
[-161.80236816 -223.27467346]
[-146.61273193 -217.09352112]
[-144.63929749 -200.81353760]
[-135.23974609 -189.12387085]
[-121.23460388 -184.05383301]
[-118.61668396 -168.45071411]
[-109.21714020 -156.76104736]
[-99.81759644 -145.07136536]
[-90.41804504 -133.38168335]
[-81.01850128 -121.69200897]
[-71.61895752 -110.00233459]
[-62.21940994 -98.31266022]
[-45.55073929 -92.88293457]
[-42.83400345 -74.69032288]
[-33.21622849 -63.17952728]
[-23.59845543 -51.66873169]
[-13.98067951 -40.15793610]
[-4.25506115 -28.73811340]
[5.57753992 -17.41027260]
[15.41014099 -6.08243275]
[25.24274063 5.24540710]
[35.07534409 16.57324791]
[45.01405716 27.80810165]
[55.05800247 38.94897842]
[65.10195160 50.08985519]
[72.37131500 45.72705841]
[80.17611694 42.41606140]
[88.36509705 40.22102737]
[96.77956390 39.18449783]
[105.25643921 39.32656097]
[113.63145447 40.64446259]
[121.74228668 43.11265945]
[129.43176270 46.68332291]
[136.55085754 51.28725433]
[142.96159363 56.83522415]
[148.53974915 63.21972275]
[153.17721558 70.31700897]
[167.07556152 64.67466736]
[176.95176697 52.31459808]
[191.65472412 54.69619370]
[205.55307007 49.05384827]
[219.45141602 43.41149902]
[233.34976196 37.76915359]
[247.24809265 32.12680435]
[261.14645386 26.48445892]
[271.02264404 14.12439060]
[285.72561646 16.50598907]
[299.62396240 10.86364079]
[312.02542114 -0.69662434]
[326.56698608 8.01999664]
[322.21652222 24.40626335]
[305.26629639 24.76198387]
[291.36795044 30.40433121]
[282.48587036 42.36082077]
[266.78878784 40.38280106]
[252.89044189 46.02514648]
[238.99209595 51.66749573]
[225.09376526 57.30984116]
[211.19541931 62.95219040]
[197.29707336 68.59453583]
[188.41497803 80.55102539]
[172.71791077 78.57300568]
[158.81956482 84.21535492]
[160.83589172 97.19107056]
[160.02383423 110.29737854]
[156.42112732 122.92494202]
[150.19528198 134.48667908]
[141.63574219 144.44503784]
[131.14045715 152.33706665]
[119.19739532 157.79582214]
[106.36180115 160.56752014]
[106.07963562 175.56486511]
[105.79747772 190.56221008]
[105.51531219 205.55955505]
[108.08679199 210.20048523]
[108.54522705 214.89105225]
[107.23243713 218.80822754]
[104.77033234 221.38845825]
[103.64268494 236.34600830]
[102.51502991 251.30355835]
[101.38738251 266.26110840]
[112.54943848 274.38934326]
[118.18275452 286.87707520]
[116.90913391 300.40844727]
[109.16904449 311.44821167]
[97.07823944 317.16546631]
[95.66942596 332.09915161]
[94.26060486 347.03286743]
[93.13295746 361.99041748]
[92.28686523 376.96652222]
[91.44078064 391.94265747]
[90.59469604 406.91876221]
[89.74860382 421.89489746]
[88.90251923 436.87100220]
[88.05642700 451.84713745]
[87.21034241 466.82324219]
[100.91885376 473.39175415]
[111.06649017 484.70959473]
[116.10580444 499.05093384]
[115.26834869 514.22875977]
[108.68182373 527.92864990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 155]
[16 154]
[19 153]
[20 152]
[21 151]
[25 146]
[26 145]
[27 144]
[28 143]
[29 139]
[30 138]
[31 137]
[32 136]
[38 90]
[39 89]
[40 88]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[48 82]
[49 81]
[50 80]
[51 79]
[54 77]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[62 69]
[63 68]
[102 128]
[103 127]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[112 118]
[113 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
