%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGUUUAAAUACAUUGGCCCUCUAGGGUAGCACAUCAUCUCUUGAAGCUUCACUUCAACUUCACUACUUCUGUAGUCUCAUCUUGAGUAAAAGAGAACCCAGCCAACU\
) } def
/len { sequence length } bind def

/coor [
[25.32985878 173.99932861]
[11.93597126 180.75239563]
[-1.36101449 187.69430542]
[-14.55843449 194.82368469]
[-27.75585365 201.95306396]
[-40.95327377 209.08245850]
[-54.15069580 216.21183777]
[-39.47209930 219.30033875]
[-27.80023766 228.72200012]
[-21.68473053 242.41873169]
[-22.46145821 257.39862061]
[-29.96075249 270.38940430]
[-42.54445267 278.55337524]
[-57.46375656 280.10717773]
[-71.45967102 274.71139526]
[-81.47490692 263.54470825]
[-85.32171631 249.04637146]
[-82.15980530 234.38340759]
[-72.67926788 222.75840759]
[-87.42615509 225.50236511]
[-102.17304230 228.24633789]
[-116.91992950 230.99031067]
[-129.02391052 242.05491638]
[-144.57434082 236.84756470]
[-147.57424927 220.72514343]
[-134.93760681 210.27301025]
[-119.66389465 216.24342346]
[-104.91700745 213.49945068]
[-90.17012787 210.75547791]
[-75.42324066 208.01152039]
[-61.28007889 203.01441956]
[-48.08265686 195.88504028]
[-34.88523865 188.75564575]
[-21.68781853 181.62626648]
[-8.49039745 174.49688721]
[-4.03618383 168.46076965]
[5.18291473 167.35850525]
[18.57680321 160.60543823]
[23.09460449 153.04902649]
[32.59045410 150.24099731]
[42.96953583 139.41166687]
[53.34861755 128.58232117]
[63.72770309 117.75298309]
[74.10678864 106.92363739]
[84.48587036 96.09429932]
[88.67481232 81.69107819]
[85.72243500 66.98449707]
[82.77006531 52.27791595]
[79.81768799 37.57133865]
[67.31310272 27.52072334]
[67.51859283 11.47898579]
[80.27651978 1.75197363]
[95.80010223 5.80141783]
[102.18096924 20.52093124]
[94.52426910 34.61896133]
[97.47664642 49.32554245]
[100.42901611 64.03211975]
[103.38139343 78.73870087]
[110.41690826 81.33706665]
[107.88180542 66.55284882]
[119.41770935 56.96519852]
[133.48883057 62.16167450]
[136.02421570 76.94585419]
[124.48793793 86.53380585]
[131.52345276 89.13217163]
[143.32617188 79.87496185]
[155.12889099 70.61775208]
[166.93159485 61.36054611]
[178.73431396 52.10333633]
[184.34344482 36.69328690]
[200.53829956 34.11277008]
[210.65898132 47.01639938]
[204.29421997 62.13003159]
[187.99153137 63.90605164]
[176.18881226 73.16326141]
[164.38609314 82.42047119]
[152.58337402 91.67768097]
[140.78067017 100.93488312]
[145.37551880 115.21379852]
[160.36201477 115.85041046]
[175.34849548 116.48703003]
[190.33497620 117.12364960]
[206.41645813 111.75498962]
[216.02709961 125.72180176]
[205.26660156 138.82325745]
[189.69836426 132.11013794]
[174.71186829 131.47351074]
[159.72538757 130.83689880]
[144.73890686 130.20028687]
[123.14385986 135.62322998]
[105.40328217 130.50961304]
[95.64106750 118.99380493]
[95.31520844 106.47338104]
[84.93612671 117.30271912]
[74.55704498 128.13206482]
[64.17796326 138.96141052]
[53.79887772 149.79074097]
[43.41979599 160.62008667]
[58.29738998 158.70771790]
[72.72487640 162.81228638]
[84.36780548 172.26968384]
[91.34228516 185.54960632]
[92.51979828 200.50332642]
[87.70981598 214.71121216]
[77.69062805 225.87435913]
[64.08338928 232.18649292]
[49.08983994 232.62629700]
[35.13601685 227.12257385]
[24.47973633 216.56588745]
[18.84524536 202.66435242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 35]
[4 34]
[5 33]
[6 32]
[7 31]
[19 30]
[20 29]
[21 28]
[22 27]
[40 98]
[41 97]
[42 96]
[43 95]
[44 94]
[45 93]
[46 58]
[47 57]
[48 56]
[49 55]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[79 89]
[80 88]
[81 87]
[82 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
