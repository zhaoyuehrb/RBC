%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UCMA)
} def

/sequence { (\
GGGGACCCAAAGGGUGCAGGACGCCUGGUCUGCCUUGUGGGUCCUGGACGGAGCCCCUACCUCUGCAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 44 0.005427098 ubox
1 45 0.073135699 ubox
1 55 0.003295511 ubox
1 56 0.005345262 ubox
1 57 0.036060482 ubox
1 58 0.004302219 ubox
1 61 0.022695421 ubox
1 62 0.003543252 ubox
1 63 0.014212185 ubox
1 64 0.009682699 ubox
2 43 0.004597468 ubox
2 44 0.065582229 ubox
2 45 0.940703482 ubox
2 54 0.003207685 ubox
2 55 0.005163734 ubox
2 56 0.036035582 ubox
2 57 0.004442643 ubox
2 60 0.022261184 ubox
2 61 0.003924320 ubox
2 62 0.006965922 ubox
2 63 0.009885640 ubox
3 43 0.049997992 ubox
3 44 0.996816485 ubox
3 45 0.004216498 ubox
3 54 0.004208031 ubox
3 55 0.034975381 ubox
3 56 0.003996237 ubox
3 61 0.003987523 ubox
4 42 0.026127226 ubox
4 43 0.998109013 ubox
4 44 0.003177050 ubox
4 54 0.034521652 ubox
4 55 0.003603692 ubox
4 60 0.003520817 ubox
5 15 0.004314617 ubox
5 42 0.998989757 ubox
6 14 0.004499051 ubox
6 41 0.999517980 ubox
7 13 0.004736378 ubox
7 40 0.999522483 ubox
7 51 0.029832741 ubox
8 12 0.004708483 ubox
8 39 0.999423218 ubox
8 50 0.029827689 ubox
9 38 0.964019021 ubox
10 35 0.003201905 ubox
10 36 0.192212111 ubox
11 35 0.196459625 ubox
11 36 0.796287694 ubox
12 26 0.004311430 ubox
12 31 0.004356644 ubox
12 34 0.195761593 ubox
12 35 0.876618761 ubox
12 36 0.411946866 ubox
13 25 0.004622241 ubox
13 30 0.004918782 ubox
13 31 0.015553557 ubox
13 33 0.186267657 ubox
13 34 0.880639195 ubox
13 35 0.422523354 ubox
13 36 0.019157179 ubox
14 24 0.004795137 ubox
14 29 0.007704834 ubox
14 30 0.055584374 ubox
14 33 0.870076188 ubox
14 34 0.427685077 ubox
14 35 0.020921203 ubox
14 49 0.030188679 ubox
15 23 0.004800173 ubox
15 28 0.007200493 ubox
15 32 0.850543401 ubox
15 48 0.030139124 ubox
16 22 0.004783782 ubox
16 24 0.011668228 ubox
16 29 0.190655071 ubox
16 31 0.339241020 ubox
16 33 0.454424917 ubox
17 23 0.011679994 ubox
17 27 0.431121808 ubox
17 28 0.146215338 ubox
17 32 0.474171362 ubox
17 46 0.030400078 ubox
18 26 0.452111986 ubox
18 31 0.452081317 ubox
18 45 0.030401175 ubox
19 25 0.453956515 ubox
19 26 0.042964586 ubox
19 30 0.353039584 ubox
19 31 0.741222718 ubox
19 44 0.030408440 ubox
20 24 0.446627149 ubox
20 25 0.046069635 ubox
20 29 0.204872973 ubox
20 30 0.815900582 ubox
20 43 0.030407769 ubox
21 29 0.863889937 ubox
21 42 0.030300031 ubox
22 28 0.881561237 ubox
22 39 0.006159446 ubox
22 41 0.029628044 ubox
23 29 0.010490505 ubox
23 38 0.012865623 ubox
24 28 0.011593801 ubox
24 37 0.013280743 ubox
24 40 0.026378381 ubox
25 39 0.026349306 ubox
26 37 0.007544918 ubox
27 34 0.021263150 ubox
27 35 0.009105717 ubox
27 36 0.006438593 ubox
28 33 0.021201723 ubox
28 34 0.009407189 ubox
28 35 0.005301538 ubox
42 52 0.010648777 ubox
43 51 0.015869944 ubox
44 50 0.015909152 ubox
44 51 0.003384313 ubox
44 53 0.005122742 ubox
44 70 0.013636511 ubox
45 50 0.003218762 ubox
45 52 0.005302887 ubox
45 59 0.006718170 ubox
45 65 0.058732570 ubox
45 67 0.100229186 ubox
45 69 0.044305607 ubox
46 55 0.043163939 ubox
46 56 0.030677340 ubox
46 57 0.063429276 ubox
46 58 0.010226458 ubox
46 61 0.270531581 ubox
46 62 0.018084636 ubox
46 63 0.019848616 ubox
46 64 0.270465200 ubox
46 66 0.165402942 ubox
47 54 0.043238366 ubox
47 55 0.030743170 ubox
47 56 0.063462458 ubox
47 57 0.010308512 ubox
47 60 0.270763111 ubox
47 61 0.020161573 ubox
47 62 0.015914848 ubox
47 63 0.283993362 ubox
48 62 0.282899220 ubox
49 65 0.893423769 ubox
50 56 0.041754981 ubox
50 57 0.277549614 ubox
50 58 0.035174832 ubox
50 61 0.290147613 ubox
50 62 0.007053697 ubox
50 63 0.005764102 ubox
50 64 0.905835517 ubox
51 55 0.041431694 ubox
51 56 0.276878787 ubox
51 57 0.035975081 ubox
51 60 0.289972612 ubox
51 61 0.008117548 ubox
51 62 0.003977830 ubox
51 63 0.907848166 ubox
52 58 0.182414508 ubox
52 62 0.907314465 ubox
52 64 0.003288525 ubox
53 57 0.179157377 ubox
53 61 0.901811881 ubox
53 63 0.003342934 ubox
53 66 0.020953325 ubox
54 65 0.020925452 ubox
57 70 0.003695717 ubox
58 65 0.004439461 ubox
58 69 0.003840938 ubox
59 64 0.004400604 ubox
61 70 0.012829553 ubox
62 69 0.013861690 ubox
63 70 0.064408008 ubox
64 69 0.065975320 ubox
2 45 0.9500000 lbox
3 44 0.9500000 lbox
4 43 0.9500000 lbox
5 42 0.9500000 lbox
6 41 0.9500000 lbox
7 40 0.9500000 lbox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
14 33 0.9500000 lbox
15 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
