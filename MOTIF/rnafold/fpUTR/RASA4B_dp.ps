%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:28:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RASA4B)
} def

/sequence { (\
AGUCCAGCGCCCGCCGCCCGCCACCCCGGACCCCGGUGUCUGGCUUCCCCCGAGCCGGCACCCCGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.016896766 ubox
2 8 0.061388799 ubox
2 10 0.049030820 ubox
2 14 0.020196853 ubox
2 17 0.088083094 ubox
2 21 0.087831779 ubox
2 24 0.067433159 ubox
2 31 0.663084522 ubox
2 44 0.019483328 ubox
2 45 0.003562414 ubox
2 59 0.005991119 ubox
2 61 0.008105098 ubox
2 66 0.116404332 ubox
3 7 0.057509635 ubox
3 9 0.047855764 ubox
3 13 0.019616827 ubox
3 16 0.087687536 ubox
3 20 0.086101514 ubox
3 23 0.066581355 ubox
3 30 0.665067697 ubox
3 43 0.004006819 ubox
3 58 0.004741956 ubox
3 60 0.008001624 ubox
3 65 0.111391748 ubox
4 28 0.003634205 ubox
4 29 0.664752265 ubox
4 42 0.003390799 ubox
4 43 0.021365690 ubox
4 57 0.004623326 ubox
4 58 0.007383386 ubox
5 28 0.662769180 ubox
5 42 0.021849178 ubox
5 57 0.007414903 ubox
6 41 0.022247477 ubox
7 14 0.272450778 ubox
7 17 0.586046946 ubox
7 21 0.355757900 ubox
7 39 0.017570888 ubox
7 40 0.022128110 ubox
7 55 0.004392625 ubox
7 59 0.004445587 ubox
7 66 0.359826074 ubox
8 13 0.272652152 ubox
8 16 0.587236008 ubox
8 20 0.355859939 ubox
8 28 0.014673806 ubox
8 35 0.004874080 ubox
8 38 0.026631921 ubox
8 54 0.004389494 ubox
8 58 0.004353683 ubox
8 65 0.360170872 ubox
8 67 0.162734756 ubox
9 15 0.574367997 ubox
9 17 0.246780233 ubox
9 19 0.305552746 ubox
9 21 0.117311904 ubox
9 27 0.031155978 ubox
9 34 0.015001413 ubox
9 37 0.026714672 ubox
9 39 0.010338733 ubox
9 44 0.004662984 ubox
9 55 0.004953206 ubox
9 59 0.053862218 ubox
9 64 0.320574293 ubox
9 66 0.176354855 ubox
10 16 0.260230602 ubox
10 20 0.117165245 ubox
10 29 0.016902497 ubox
10 36 0.024431470 ubox
10 38 0.010947734 ubox
10 43 0.004670793 ubox
10 54 0.005012202 ubox
10 58 0.054900285 ubox
10 65 0.175875077 ubox
11 28 0.016550430 ubox
11 29 0.104422328 ubox
11 35 0.021812270 ubox
11 36 0.028610658 ubox
11 42 0.004667471 ubox
11 57 0.054776906 ubox
11 58 0.006062072 ubox
12 20 0.130269679 ubox
12 28 0.104728361 ubox
12 35 0.038070127 ubox
12 38 0.067884067 ubox
12 52 0.005950610 ubox
12 57 0.006301774 ubox
12 65 0.012198813 ubox
12 67 0.164782782 ubox
13 19 0.129662750 ubox
13 21 0.394456422 ubox
13 27 0.099572006 ubox
13 34 0.063765481 ubox
13 37 0.076627114 ubox
13 51 0.005931277 ubox
13 55 0.048192568 ubox
13 56 0.004837308 ubox
13 59 0.086820748 ubox
13 64 0.017039169 ubox
13 66 0.176118215 ubox
14 20 0.394815060 ubox
14 29 0.111710677 ubox
14 36 0.077729952 ubox
14 54 0.048377052 ubox
14 58 0.086922581 ubox
14 65 0.171143764 ubox
15 28 0.112259039 ubox
15 35 0.078800872 ubox
15 52 0.048008266 ubox
15 57 0.086861651 ubox
15 65 0.043186647 ubox
15 67 0.245929315 ubox
16 27 0.109865091 ubox
16 34 0.083356576 ubox
16 37 0.003831690 ubox
16 39 0.005038200 ubox
16 44 0.005625699 ubox
16 51 0.047610738 ubox
16 55 0.052704838 ubox
16 56 0.060752822 ubox
16 59 0.017154360 ubox
16 64 0.057097559 ubox
16 66 0.262890626 ubox
17 29 0.036898874 ubox
17 36 0.003817076 ubox
17 38 0.005257523 ubox
17 43 0.005845551 ubox
17 54 0.074408599 ubox
17 58 0.017138580 ubox
17 65 0.262310256 ubox
18 28 0.033658623 ubox
18 29 0.652211524 ubox
18 35 0.003775299 ubox
18 36 0.006683544 ubox
18 42 0.005840604 ubox
18 43 0.004982575 ubox
18 57 0.017019795 ubox
19 28 0.654599066 ubox
19 35 0.007506931 ubox
19 38 0.005286085 ubox
19 42 0.005638177 ubox
19 52 0.069785107 ubox
19 65 0.009896214 ubox
19 67 0.093437598 ubox
20 27 0.641370990 ubox
20 34 0.010561259 ubox
20 37 0.005453756 ubox
20 39 0.004282769 ubox
20 41 0.005488508 ubox
20 44 0.070329962 ubox
20 51 0.060204464 ubox
20 55 0.010720205 ubox
20 59 0.022200686 ubox
20 64 0.010721546 ubox
20 66 0.099848073 ubox
21 29 0.136273265 ubox
21 36 0.005290286 ubox
21 38 0.003812612 ubox
21 43 0.072095074 ubox
21 54 0.010706597 ubox
21 58 0.022222457 ubox
21 65 0.096357140 ubox
22 28 0.137522548 ubox
22 35 0.005199982 ubox
22 38 0.015458813 ubox
22 42 0.072011417 ubox
22 57 0.022144890 ubox
23 37 0.015605954 ubox
23 39 0.057509854 ubox
23 41 0.055102534 ubox
24 36 0.013384357 ubox
24 38 0.072633936 ubox
25 35 0.012359013 ubox
25 36 0.006983078 ubox
26 35 0.005852437 ubox
26 36 0.097484141 ubox
26 43 0.059165309 ubox
27 35 0.107085434 ubox
27 42 0.059390155 ubox
27 65 0.213944574 ubox
27 67 0.020738928 ubox
28 34 0.145598294 ubox
28 41 0.059482007 ubox
28 48 0.010937211 ubox
28 63 0.004502432 ubox
28 64 0.229456505 ubox
28 66 0.021984893 ubox
29 33 0.143340236 ubox
29 40 0.059558216 ubox
29 47 0.010965065 ubox
29 62 0.003465077 ubox
29 63 0.229405009 ubox
30 39 0.059547707 ubox
30 46 0.010905745 ubox
31 38 0.059324692 ubox
33 43 0.011049671 ubox
33 58 0.005730674 ubox
34 42 0.011078635 ubox
34 57 0.005834564 ubox
34 65 0.185485619 ubox
34 67 0.024870305 ubox
35 41 0.011007878 ubox
35 56 0.005933168 ubox
35 62 0.966011700 ubox
35 63 0.075566509 ubox
35 64 0.183425877 ubox
35 66 0.011741691 ubox
36 40 0.010774161 ubox
36 55 0.005935950 ubox
36 61 0.970697814 ubox
36 62 0.063043001 ubox
36 63 0.180428367 ubox
36 66 0.003402576 ubox
37 54 0.005707836 ubox
37 60 0.973542602 ubox
37 65 0.003427856 ubox
38 59 0.974273318 ubox
38 61 0.181316969 ubox
39 53 0.005104644 ubox
39 58 0.548452554 ubox
39 60 0.181734809 ubox
40 52 0.005547910 ubox
40 57 0.536585938 ubox
40 58 0.828251379 ubox
41 52 0.004189000 ubox
41 57 0.834718511 ubox
42 49 0.003654984 ubox
42 50 0.005383146 ubox
42 51 0.005887066 ubox
42 56 0.995019970 ubox
43 48 0.003632630 ubox
43 49 0.005361345 ubox
43 50 0.005850094 ubox
43 55 0.995236825 ubox
44 54 0.994601699 ubox
45 53 0.961379221 ubox
45 54 0.039026676 ubox
46 52 0.892002713 ubox
46 53 0.248473087 ubox
47 52 0.348059870 ubox
50 58 0.005443655 ubox
51 57 0.005653243 ubox
52 56 0.005342831 ubox
54 66 0.019360878 ubox
55 65 0.016751433 ubox
56 65 0.013484624 ubox
57 63 0.015600770 ubox
57 64 0.019332487 ubox
58 62 0.015388263 ubox
58 63 0.019139497 ubox
58 66 0.012819383 ubox
59 65 0.013026973 ubox
7 17 0.9500000 lbox
8 16 0.9500000 lbox
9 15 0.9500000 lbox
18 29 0.9500000 lbox
19 28 0.9500000 lbox
20 27 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
37 60 0.9500000 lbox
38 59 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
showpage
end
%%EOF
