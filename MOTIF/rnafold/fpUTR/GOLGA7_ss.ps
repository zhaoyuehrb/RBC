%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGGGCCUGGGCCAGGCGGCAGCUAAGGCCCGCGGUGACAGCAUGGGUGAAGGGGAGCGGGGCAGAGGAGGCCUUGGGCUGUUUUCGGCGGCGGGUGGGGGCGAGGGGCUGGCGGGUCAGAGUCCCGGGUCCAGGCCGGGGCUCUGACUCGCGGUUGGUGUUCCCCCGACCCCGCAGCGCGGGGUGUCCUGUCCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[-138.44482422 331.73330688]
[-161.38359070 327.12783813]
[-171.22251892 338.45019531]
[-167.19029236 354.87335205]
[-173.67469788 370.31158447]
[-187.93894958 378.76034546]
[-204.26329041 377.06188965]
[-213.92494202 388.53585815]
[-223.58660889 400.00985718]
[-233.15873718 411.55862427]
[-242.64079285 423.18148804]
[-252.12283325 434.80435181]
[-261.60488892 446.42718506]
[-271.08694458 458.05004883]
[-280.56896973 469.67291260]
[-283.08941650 487.91040039]
[-299.72052002 493.50192261]
[-309.02066040 505.27081299]
[-318.32080078 517.03973389]
[-320.15618896 533.33587646]
[-335.29290771 539.64550781]
[-348.15960693 529.47790527]
[-345.52011108 513.29254150]
[-330.08972168 507.73959351]
[-320.78958130 495.97067261]
[-311.48944092 484.20178223]
[-312.58444214 472.15032959]
[-304.92639160 462.26831055]
[-292.19183350 460.19085693]
[-282.70977783 448.56799316]
[-273.22775269 436.94515991]
[-263.74569702 425.32229614]
[-254.26364136 413.69943237]
[-244.78160095 402.07656860]
[-242.98796082 394.90124512]
[-235.06059265 390.34820557]
[-225.39894104 378.87420654]
[-215.73727417 367.40023804]
[-220.13395691 354.78997803]
[-217.70420837 341.54803467]
[-208.97776794 331.15435791]
[-196.15322876 326.39398193]
[-182.54486084 328.61123657]
[-172.70593262 317.28890991]
[-176.52186584 311.21990967]
[-179.10023499 304.52026367]
[-180.34092712 297.43975830]
[-180.19372559 290.24316406]
[-178.66041565 283.20034790]
[-175.79483032 276.57608032]
[-171.70092773 270.62017822]
[-166.52909851 265.55801392]
[-160.47061157 261.58203125]
[-153.75048828 258.84439087]
[-146.61923218 257.45117188]
[-139.34346008 257.45831299]
[-132.19589233 258.86923218]
[-125.44519806 261.63476562]
[-119.34584045 265.65466309]
[-107.72298431 256.17260742]
[-96.10012817 246.69056702]
[-84.47727203 237.20852661]
[-72.85441589 227.72648621]
[-61.23155594 218.24443054]
[-61.73675919 205.36488342]
[-54.62349319 194.38333130]
[-42.30200195 189.43302917]
[-29.18945885 192.53024292]
[-17.42054558 183.23010254]
[-5.65163183 173.92996216]
[6.11728239 164.62980652]
[11.30582714 150.66813660]
[26.93056297 148.18254089]
[38.69947815 138.88240051]
[50.46839142 129.58226013]
[62.23730469 120.28211212]
[74.00621796 110.98197174]
[85.77513123 101.68183136]
[91.11901855 88.76151276]
[104.92472076 86.54925537]
[116.69364166 77.24911499]
[128.46255493 67.94896698]
[140.23146057 58.64882660]
[141.69537354 54.54349518]
[144.14587402 51.43388748]
[147.14738464 49.50822830]
[150.24798584 48.79342270]
[153.03358459 49.16377258]
[165.35791016 40.61328888]
[177.68225098 32.06280518]
[182.95416260 24.59417915]
[190.26539612 23.47693062]
[202.72122192 15.11914730]
[205.89575195 -0.13077572]
[218.64677429 -8.42931938]
[233.16567993 -5.30891514]
[245.62150574 -13.66669941]
[251.00892639 -21.05243492]
[258.33666992 -22.05584526]
[270.92095947 -30.21890640]
[283.50524902 -38.38196945]
[296.08953857 -46.54503250]
[308.67382812 -54.70809555]
[321.25811768 -62.87115860]
[333.84240723 -71.03421783]
[335.11578369 -84.44728088]
[343.75741577 -94.52925110]
[356.44061279 -97.74333191]
[368.47723389 -93.13274384]
[381.18695068 -101.09910583]
[393.89666748 -109.06547546]
[406.60638428 -117.03184509]
[419.31613159 -124.99820709]
[424.93063354 -132.21282959]
[432.28601074 -132.98785400]
[445.11810303 -140.75559998]
[457.95016479 -148.52334595]
[470.78225708 -156.29109192]
[483.61431885 -164.05883789]
[496.44641113 -171.82658386]
[509.27847290 -179.59432983]
[522.11053467 -187.36206055]
[534.94262695 -195.12980652]
[547.77471924 -202.89755249]
[560.60675049 -210.66529846]
[573.43884277 -218.43304443]
[586.27093506 -226.20079041]
[599.10302734 -233.96853638]
[611.93505859 -241.73628235]
[624.76715088 -249.50402832]
[626.98370361 -264.98370361]
[638.66632080 -275.37847900]
[654.29870605 -275.78027344]
[666.49981689 -265.99932861]
[669.50866699 -250.65393066]
[661.90447998 -236.98971558]
[647.27783203 -231.45849609]
[632.53491211 -236.67195129]
[619.70281982 -228.90420532]
[606.87072754 -221.13645935]
[594.03869629 -213.36871338]
[581.20660400 -205.60096741]
[568.37451172 -197.83322144]
[555.54241943 -190.06547546]
[542.71038818 -182.29774475]
[529.87829590 -174.52999878]
[517.04620361 -166.76225281]
[504.21414185 -158.99450684]
[491.38208008 -151.22676086]
[478.54998779 -143.45901489]
[465.71792603 -135.69126892]
[452.88583374 -127.92352295]
[440.05377197 -120.15578461]
[427.28250122 -112.28849030]
[414.57275391 -104.32212067]
[401.86303711 -96.35575104]
[389.15332031 -88.38938904]
[376.44360352 -80.42301941]
[373.38964844 -63.88813782]
[359.04125977 -54.49008179]
[342.00546265 -58.44992828]
[329.42117310 -50.28686523]
[316.83688354 -42.12380219]
[304.25259399 -33.96073914]
[291.66830444 -25.79767799]
[279.08401489 -17.63461494]
[266.49972534 -9.47155285]
[253.97929382 -1.21087933]
[241.52346802 7.14690495]
[238.90701294 21.76503563]
[226.39410400 30.41845512]
[211.07901001 27.57496643]
[198.62318420 35.93275070]
[186.23272705 44.38714218]
[173.90840149 52.93762589]
[161.58406067 61.48810959]
[149.53161621 70.41773987]
[137.76269531 79.71788788]
[125.99378204 89.01802826]
[114.22486877 98.31816864]
[108.88098145 111.23848724]
[95.07527924 113.45074463]
[83.30635834 122.75088501]
[71.53744507 132.05102539]
[59.76853561 141.35116577]
[47.99961853 150.65132141]
[36.23070526 159.95146179]
[30.20037079 174.57833862]
[15.41742516 176.39872742]
[3.64851141 185.69886780]
[-8.12040234 194.99900818]
[-19.88931656 204.29916382]
[-21.60431290 221.70481873]
[-35.10890198 232.27958679]
[-51.74951172 229.86729431]
[-63.37236786 239.34933472]
[-74.99522400 248.83139038]
[-86.61808014 258.31341553]
[-98.24093628 267.79547119]
[-109.86379242 277.27752686]
[-106.17317200 300.74145508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 44]
[3 43]
[7 38]
[8 37]
[9 36]
[10 34]
[11 33]
[12 32]
[13 31]
[14 30]
[15 29]
[17 26]
[18 25]
[19 24]
[59 200]
[60 199]
[61 198]
[62 197]
[63 196]
[64 195]
[68 192]
[69 191]
[70 190]
[71 189]
[73 187]
[74 186]
[75 185]
[76 184]
[77 183]
[78 182]
[80 180]
[81 179]
[82 178]
[83 177]
[88 176]
[89 175]
[90 174]
[92 173]
[93 172]
[96 169]
[97 168]
[99 167]
[100 166]
[101 165]
[102 164]
[103 163]
[104 162]
[105 161]
[109 158]
[110 157]
[111 156]
[112 155]
[113 154]
[115 153]
[116 152]
[117 151]
[118 150]
[119 149]
[120 148]
[121 147]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
