%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGGGGCGGGGCGGAAGCGGCGGCGGCGCGCGCAAAGCUGCAGCGUCUGGAAAAAAGCGACUUGUGGCGGUCGAGCGUGGCGCAGGCGAAUCCUCGGCACUAAGCAAAU\
) } def
/len { sequence length } bind def

/coor [
[84.95046997 321.92526245]
[75.15229797 310.33386230]
[70.20677185 295.98443604]
[70.78271484 280.81759644]
[76.80225372 266.88455200]
[87.45128632 256.06964111]
[101.28962708 249.83546448]
[100.45600128 234.85865784]
[99.41427612 219.89486694]
[98.16464996 204.94700623]
[89.39395905 192.90856934]
[95.95468903 178.51177979]
[94.70506287 163.56391907]
[91.59192657 159.77322388]
[90.92266083 153.94946289]
[93.82509613 147.75445557]
[93.40812683 132.76025391]
[92.99115753 117.76604462]
[82.53706360 107.73318481]
[82.13428497 93.24926758]
[92.01464081 82.65092468]
[91.59767151 67.65672302]
[78.96282959 58.84383774]
[73.99801636 44.44925308]
[78.40908051 30.06153297]
[90.30400848 21.13692093]
[89.88703918 6.14271688]
[89.47006226 -8.85148621]
[81.35213470 -22.43124390]
[88.73265076 -35.36867905]
[88.31568146 -50.36288452]
[87.89870453 -65.35708618]
[87.48173523 -80.35128784]
[87.06476593 -95.34548950]
[72.21555328 -101.83168793]
[61.69309998 -114.07810211]
[57.54651642 -129.62277222]
[60.54975510 -145.36924744]
[70.05770874 -158.20347595]
[84.14396667 -165.60955811]
[83.31034851 -180.58636475]
[82.47672272 -195.56318665]
[81.64310455 -210.54000854]
[80.80947876 -225.51683044]
[79.97586060 -240.49363708]
[79.14223480 -255.47045898]
[75.49750519 -264.00381470]
[78.49949646 -270.87405396]
[78.08252716 -285.86828613]
[77.66555023 -300.86248779]
[63.89277267 -307.53848267]
[54.80940628 -319.85720825]
[52.50275040 -334.98791504]
[57.50285339 -349.45364380]
[68.66072845 -359.93029785]
[83.41237640 -364.01043701]
[98.36798096 -360.75643921]
[110.09085083 -350.91604614]
[115.88715363 -336.75054932]
[114.42494965 -321.51504517]
[106.04022980 -308.71057129]
[92.65975189 -301.27944946]
[93.07672882 -286.28524780]
[93.49369812 -271.29104614]
[94.11905670 -256.30407715]
[94.95267487 -241.32727051]
[95.78630066 -226.35044861]
[96.61991882 -211.37362671]
[97.45354462 -196.39680481]
[98.28716278 -181.41999817]
[99.12078094 -166.44317627]
[112.24609375 -161.72837830]
[122.59810638 -152.31805420]
[128.57662964 -139.62182617]
[129.24034119 -125.56054688]
[124.45478821 -112.27577972]
[114.91803741 -101.80358124]
[102.05896759 -95.76246643]
[102.47593689 -80.76826477]
[102.89291382 -65.77405548]
[103.30988312 -50.77985382]
[103.72685242 -35.78565216]
[111.81495667 -23.27837944]
[104.46426392 -9.26845837]
[104.88124084 5.72574520]
[105.29821014 20.71994781]
[117.67073822 28.96971130]
[122.87458038 43.09005356]
[118.71741486 57.73830795]
[106.59187317 67.23975372]
[107.00884247 82.23395538]
[117.46293640 92.26681519]
[117.86571503 106.75073242]
[107.98535919 117.34907532]
[108.40232849 132.34327698]
[108.81929779 147.33747864]
[109.65292358 162.31430054]
[110.90254974 177.26216125]
[119.76262665 190.36976624]
[113.11251068 203.69738770]
[114.36213684 218.64524841]
[118.24267578 227.07398987]
[115.43282318 234.02502441]
[116.26644135 249.00184631]
[130.71115112 253.66175842]
[142.49462891 263.22808838]
[150.02323914 276.40701294]
[152.27880859 291.41622925]
[148.95628357 306.22586060]
[140.50503540 318.83303833]
[128.06799316 327.53271484]
[113.32717133 331.14834595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 104]
[8 103]
[9 101]
[10 100]
[12 98]
[13 97]
[16 96]
[17 95]
[18 94]
[21 91]
[22 90]
[26 86]
[27 85]
[28 84]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[48 64]
[49 63]
[50 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
