%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:09:04 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GLYCTK)
} def

/sequence { (\
CACCCCCUAGUACUUCCGUUCUCCAGCGCUGGGCACCGCGGCCGGAGCUGUGGGCUGGCAGCCAUGGGUGCCAGGCAGUGCUGAGAGCAGUGGGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 11 0.006612526 ubox
3 10 0.006944997 ubox
3 94 0.069468995 ubox
3 95 0.794277821 ubox
4 93 0.069535974 ubox
4 94 0.797131591 ubox
4 95 0.532166532 ubox
5 92 0.069151771 ubox
5 93 0.796426684 ubox
5 94 0.537674762 ubox
5 95 0.257130834 ubox
6 92 0.791671519 ubox
6 93 0.538621612 ubox
6 94 0.259611313 ubox
6 95 0.044247810 ubox
7 90 0.600315461 ubox
7 92 0.533457992 ubox
7 93 0.259853391 ubox
7 94 0.044656454 ubox
7 95 0.007170776 ubox
8 83 0.004803850 ubox
8 89 0.594346099 ubox
8 92 0.234559320 ubox
8 93 0.042544920 ubox
8 94 0.007141145 ubox
9 15 0.021315068 ubox
9 82 0.007472849 ubox
9 91 0.157736945 ubox
10 14 0.017896319 ubox
10 21 0.003460781 ubox
10 81 0.007539345 ubox
10 88 0.080729470 ubox
10 91 0.018244092 ubox
10 96 0.007527260 ubox
11 80 0.007538349 ubox
11 87 0.072973222 ubox
11 90 0.013568585 ubox
11 92 0.161355235 ubox
11 95 0.006526523 ubox
12 19 0.022294575 ubox
12 79 0.007540635 ubox
12 91 0.759842621 ubox
13 18 0.024374212 ubox
13 78 0.007543498 ubox
13 85 0.008930905 ubox
13 87 0.006137267 ubox
13 90 0.772308798 ubox
13 93 0.009152542 ubox
13 94 0.004562977 ubox
13 95 0.018778158 ubox
14 77 0.007394937 ubox
14 84 0.008836607 ubox
14 86 0.004257407 ubox
14 89 0.760257630 ubox
14 90 0.033131118 ubox
14 92 0.009713103 ubox
14 93 0.004327921 ubox
14 94 0.018056809 ubox
14 95 0.015525984 ubox
15 89 0.056690287 ubox
15 92 0.003813699 ubox
15 93 0.017258810 ubox
15 94 0.021175343 ubox
15 95 0.005410993 ubox
16 75 0.007486972 ubox
16 92 0.017674818 ubox
16 93 0.023805008 ubox
16 94 0.007100013 ubox
17 74 0.007472481 ubox
17 92 0.023944108 ubox
17 93 0.007077493 ubox
18 71 0.004978827 ubox
18 88 0.994615602 ubox
18 91 0.017339025 ubox
19 70 0.004939172 ubox
19 86 0.005251645 ubox
19 87 0.995101375 ubox
19 90 0.017334318 ubox
20 86 0.997743714 ubox
20 89 0.018886297 ubox
21 68 0.004339003 ubox
21 85 0.998344870 ubox
21 87 0.052200567 ubox
22 68 0.005563197 ubox
22 84 0.996374532 ubox
22 86 0.055337544 ubox
23 67 0.007347047 ubox
23 83 0.706618510 ubox
23 85 0.055510246 ubox
24 66 0.007363546 ubox
24 80 0.003448364 ubox
24 83 0.707231483 ubox
25 65 0.007285887 ubox
25 79 0.003461947 ubox
25 82 0.996722513 ubox
26 79 0.004008649 ubox
26 81 0.999939261 ubox
27 78 0.004101213 ubox
27 80 0.999925551 ubox
28 59 0.008255300 ubox
28 62 0.007209234 ubox
28 76 0.022876327 ubox
28 79 0.999273453 ubox
29 58 0.008273579 ubox
29 61 0.007222581 ubox
29 75 0.023051280 ubox
29 78 0.999642487 ubox
30 57 0.007106364 ubox
30 60 0.008029883 ubox
30 73 0.004233375 ubox
30 74 0.021636750 ubox
30 77 0.997668678 ubox
31 56 0.006323173 ubox
31 59 0.009239287 ubox
31 72 0.004353877 ubox
31 76 0.986409673 ubox
32 43 0.003537238 ubox
32 49 0.008030461 ubox
32 55 0.018446041 ubox
32 56 0.439433661 ubox
32 71 0.003276925 ubox
32 72 0.445476251 ubox
33 42 0.003551039 ubox
33 48 0.008435069 ubox
33 55 0.575342312 ubox
33 71 0.445888799 ubox
33 76 0.130471609 ubox
34 41 0.003557643 ubox
34 47 0.008427734 ubox
34 52 0.004131190 ubox
34 54 0.635608946 ubox
34 70 0.445903085 ubox
34 75 0.145043092 ubox
35 51 0.004103232 ubox
35 69 0.445315210 ubox
36 45 0.008476253 ubox
36 50 0.004075723 ubox
36 53 0.892923000 ubox
36 54 0.027974130 ubox
36 67 0.077357901 ubox
36 68 0.439020257 ubox
36 75 0.013012565 ubox
37 44 0.008522277 ubox
37 52 0.897155411 ubox
37 53 0.020520917 ubox
37 66 0.107389835 ubox
37 67 0.426042756 ubox
37 74 0.012871718 ubox
38 43 0.008250804 ubox
38 48 0.012641209 ubox
38 51 0.919944228 ubox
38 59 0.020851193 ubox
38 62 0.313946227 ubox
38 65 0.124481067 ubox
38 71 0.025980914 ubox
39 47 0.012656817 ubox
39 50 0.921812185 ubox
39 57 0.027397833 ubox
39 58 0.015646167 ubox
39 61 0.312952429 ubox
39 66 0.071367665 ubox
39 70 0.026038646 ubox
40 49 0.921246007 ubox
40 56 0.032290958 ubox
40 63 0.208602789 ubox
40 65 0.047753121 ubox
40 69 0.025952432 ubox
41 48 0.921919708 ubox
41 55 0.033358653 ubox
41 59 0.317672410 ubox
41 62 0.208842880 ubox
42 47 0.918929194 ubox
42 53 0.004559486 ubox
42 54 0.033128059 ubox
42 58 0.319022197 ubox
42 61 0.208277621 ubox
42 67 0.034433455 ubox
43 52 0.006259420 ubox
43 53 0.032886176 ubox
43 57 0.318702641 ubox
43 66 0.041112013 ubox
44 51 0.006877257 ubox
44 56 0.228057394 ubox
44 63 0.016735034 ubox
44 65 0.040599556 ubox
45 55 0.195354934 ubox
45 62 0.011755638 ubox
46 56 0.291673097 ubox
47 55 0.326042892 ubox
47 59 0.018682568 ubox
47 62 0.056202824 ubox
48 54 0.331750066 ubox
48 58 0.018712804 ubox
48 61 0.057496771 ubox
49 53 0.298989172 ubox
49 57 0.018429334 ubox
49 60 0.058049121 ubox
49 66 0.006519636 ubox
50 56 0.013077802 ubox
50 59 0.058073432 ubox
50 65 0.012618346 ubox
51 58 0.057638568 ubox
51 64 0.017202218 ubox
51 66 0.006203380 ubox
52 63 0.028929841 ubox
52 65 0.021880486 ubox
53 62 0.026184181 ubox
53 63 0.220646741 ubox
54 62 0.221325200 ubox
54 76 0.052351902 ubox
55 61 0.221610063 ubox
55 74 0.680169976 ubox
55 75 0.048251273 ubox
56 60 0.199645884 ubox
56 64 0.009553168 ubox
56 73 0.765417694 ubox
56 74 0.025467146 ubox
57 63 0.011818035 ubox
57 72 0.893865946 ubox
58 62 0.011694453 ubox
58 71 0.894119834 ubox
59 66 0.021913009 ubox
59 70 0.892973430 ubox
60 65 0.021449401 ubox
60 69 0.752777678 ubox
61 69 0.475912589 ubox
61 76 0.026783678 ubox
62 68 0.812752464 ubox
62 75 0.030488980 ubox
63 67 0.807607888 ubox
63 74 0.030470838 ubox
65 73 0.030512026 ubox
66 72 0.030754360 ubox
67 71 0.030258252 ubox
3 95 0.9500000 lbox
4 94 0.9500000 lbox
5 93 0.9500000 lbox
6 92 0.9500000 lbox
7 90 0.9500000 lbox
8 89 0.9500000 lbox
18 88 0.9500000 lbox
19 87 0.9500000 lbox
20 86 0.9500000 lbox
21 85 0.9500000 lbox
22 84 0.9500000 lbox
23 83 0.9500000 lbox
25 82 0.9500000 lbox
26 81 0.9500000 lbox
27 80 0.9500000 lbox
28 79 0.9500000 lbox
29 78 0.9500000 lbox
30 77 0.9500000 lbox
31 76 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
55 74 0.9500000 lbox
56 73 0.9500000 lbox
57 72 0.9500000 lbox
58 71 0.9500000 lbox
59 70 0.9500000 lbox
60 69 0.9500000 lbox
62 68 0.9500000 lbox
63 67 0.9500000 lbox
showpage
end
%%EOF
