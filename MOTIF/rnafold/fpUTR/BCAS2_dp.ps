%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BCAS2)
} def

/sequence { (\
AUAACUGAGUUUACGCAGACGCAGAAAACGCAGGCAAACCUGAGGUCCUCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 13 0.005372016 ubox
3 11 0.007337114 ubox
3 12 0.005679482 ubox
4 10 0.008479933 ubox
4 11 0.004945114 ubox
4 46 0.004073882 ubox
5 9 0.008599267 ubox
5 18 0.048215142 ubox
5 24 0.299310880 ubox
5 33 0.775104345 ubox
5 34 0.044967297 ubox
5 44 0.005712875 ubox
5 45 0.004184210 ubox
5 52 0.534644223 ubox
6 17 0.048517879 ubox
6 23 0.307938605 ubox
6 30 0.003259296 ubox
6 32 0.777371430 ubox
6 33 0.038192080 ubox
6 43 0.005665725 ubox
6 44 0.003723437 ubox
6 51 0.537842545 ubox
7 14 0.005324850 ubox
7 16 0.048519701 ubox
7 22 0.308637894 ubox
7 29 0.004426122 ubox
7 31 0.775904872 ubox
7 50 0.538501531 ubox
8 41 0.004781649 ubox
8 49 0.537692721 ubox
9 16 0.012829055 ubox
9 20 0.311271386 ubox
9 22 0.005546781 ubox
9 29 0.773812136 ubox
9 31 0.003924125 ubox
9 35 0.012062445 ubox
9 39 0.031289061 ubox
9 40 0.004054952 ubox
9 48 0.531153109 ubox
10 15 0.012633796 ubox
10 18 0.007060199 ubox
10 19 0.313049989 ubox
10 21 0.005475987 ubox
10 24 0.013391076 ubox
10 25 0.100052721 ubox
10 26 0.082899632 ubox
10 27 0.234389615 ubox
10 28 0.763525673 ubox
10 30 0.004307208 ubox
10 34 0.012068302 ubox
10 38 0.031510584 ubox
10 43 0.004699454 ubox
10 44 0.012513557 ubox
10 45 0.030490975 ubox
11 17 0.008667848 ubox
11 18 0.308071624 ubox
11 19 0.013879741 ubox
11 23 0.016105290 ubox
11 24 0.109028698 ubox
11 25 0.097205198 ubox
11 26 0.294504856 ubox
11 27 0.740332484 ubox
11 28 0.012755197 ubox
11 33 0.011900297 ubox
11 37 0.031331948 ubox
11 43 0.011486219 ubox
11 44 0.038190938 ubox
11 45 0.041339680 ubox
12 17 0.256688079 ubox
12 18 0.016467441 ubox
12 23 0.103535403 ubox
12 24 0.097505931 ubox
12 25 0.328512565 ubox
12 26 0.665300360 ubox
12 27 0.016486988 ubox
12 32 0.010771673 ubox
12 36 0.026805439 ubox
12 42 0.005635719 ubox
12 43 0.035677276 ubox
12 44 0.037708183 ubox
13 41 0.004339364 ubox
13 46 0.191796508 ubox
14 21 0.164938377 ubox
14 30 0.021695322 ubox
14 42 0.005707323 ubox
14 45 0.193472492 ubox
15 20 0.162411924 ubox
15 22 0.904215700 ubox
15 29 0.021499768 ubox
15 31 0.012913064 ubox
15 35 0.043464530 ubox
15 46 0.013649093 ubox
16 21 0.904177433 ubox
16 30 0.013756190 ubox
16 34 0.043528566 ubox
16 42 0.058150935 ubox
16 45 0.013875805 ubox
17 41 0.057843994 ubox
18 40 0.057484865 ubox
18 47 0.148301753 ubox
19 46 0.148369723 ubox
20 30 0.055914920 ubox
20 45 0.148229447 ubox
21 29 0.057238179 ubox
21 31 0.051450652 ubox
21 35 0.051390272 ubox
21 46 0.007259740 ubox
22 30 0.053811235 ubox
22 34 0.051406844 ubox
22 42 0.055727625 ubox
22 45 0.007808398 ubox
23 41 0.055593262 ubox
23 49 0.011482385 ubox
24 40 0.055328933 ubox
24 47 0.153992020 ubox
24 48 0.014946502 ubox
24 50 0.089009271 ubox
25 46 0.151244230 ubox
25 49 0.093060491 ubox
28 46 0.387424172 ubox
29 42 0.006249651 ubox
29 45 0.410309354 ubox
30 46 0.009861907 ubox
31 42 0.582622458 ubox
31 45 0.008448624 ubox
32 41 0.584542534 ubox
32 49 0.020399532 ubox
33 40 0.585104516 ubox
33 41 0.004246883 ubox
33 47 0.010908908 ubox
33 48 0.022417668 ubox
34 39 0.583389822 ubox
34 40 0.005256231 ubox
34 46 0.011255934 ubox
34 47 0.022523013 ubox
34 48 0.004524354 ubox
35 42 0.006723269 ubox
35 45 0.012300936 ubox
36 41 0.006138446 ubox
38 46 0.037217543 ubox
39 45 0.038829346 ubox
40 44 0.038569314 ubox
40 52 0.802583666 ubox
41 51 0.805143135 ubox
42 50 0.805984304 ubox
43 49 0.804846998 ubox
44 48 0.787150758 ubox
44 50 0.019556567 ubox
45 49 0.012776236 ubox
46 53 0.019210377 ubox
47 52 0.026273118 ubox
5 33 0.9500000 lbox
6 32 0.9500000 lbox
7 31 0.9500000 lbox
9 29 0.9500000 lbox
10 28 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
showpage
end
%%EOF
