%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGCGCUGGGAGCCGGAGGGGAGCGCAGCGAGUUUUGGCCAGUGGUCGUGCAGUCCAAGGGGCUGGAUGGCAUGCUGGACCCAAGCUCAGCUCAGCGUCCGGACCCAAUAACAGUUUUACCAAGGGAGCAGCUUUCUAUCCUGGCCACACUGAGGUGCAUAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[79.03395844 310.81585693]
[63.99161530 315.08926392]
[49.74284363 308.64672852]
[43.01547241 294.53018188]
[46.98596191 279.40505981]
[59.77957153 270.41299438]
[60.88735962 255.45394897]
[61.99514771 240.49491882]
[63.10293198 225.53587341]
[64.21072388 210.57684326]
[65.31851196 195.61779785]
[53.84767151 186.15429688]
[50.10459518 171.57852173]
[55.72774506 157.42813110]
[68.75543976 149.20709229]
[69.86322784 134.24806213]
[70.97101593 119.28902435]
[65.55239105 105.30194092]
[54.65589142 94.99338531]
[39.48983383 97.69467926]
[25.80121994 91.02570343]
[18.74774551 77.73237610]
[20.84927940 63.01091385]
[9.95277500 52.70236206]
[-0.94372869 42.39381409]
[-9.36359882 38.74975967]
[-11.94411278 31.79266930]
[-22.64826584 21.28452301]
[-33.35241699 10.77637863]
[-44.24892044 0.46782798]
[-55.33405685 -9.63760662]
[-66.41918945 -19.74304199]
[-77.59722137 -29.74561882]
[-88.86720276 -39.64448929]
[-100.13717651 -49.54335403]
[-111.40715790 -59.44222260]
[-122.67713165 -69.34109497]
[-133.94711304 -79.23995972]
[-149.42166138 -82.53375244]
[-153.87802124 -96.74607086]
[-165.14801025 -106.64493561]
[-176.50897217 -116.43925476]
[-187.95994568 -126.12817383]
[-199.41091919 -135.81709290]
[-210.86189270 -145.50601196]
[-222.31286621 -155.19493103]
[-240.48971558 -158.02615356]
[-245.81259155 -174.73086548]
[-257.44064331 -184.20652771]
[-269.06872559 -193.68220520]
[-280.69677734 -203.15786743]
[-292.32482910 -212.63352966]
[-307.91052246 -215.35327148]
[-312.88900757 -229.39120483]
[-324.51705933 -238.86686707]
[-336.14514160 -248.34254456]
[-347.77319336 -257.81820679]
[-359.40124512 -267.29385376]
[-371.02929688 -276.76953125]
[-387.12741089 -282.08813477]
[-386.47305298 -299.02944946]
[-370.01266479 -303.09048462]
[-361.55364990 -288.39758301]
[-349.92559814 -278.92193604]
[-338.29751587 -269.44625854]
[-326.66946411 -259.97061157]
[-315.04141235 -250.49493408]
[-303.41336060 -241.01927185]
[-288.65939331 -238.97729492]
[-282.84918213 -224.26158142]
[-271.22109985 -214.78591919]
[-259.59304810 -205.31025696]
[-247.96499634 -195.83459473]
[-236.33692932 -186.35893250]
[-224.25001526 -187.26892090]
[-214.47999573 -179.43574524]
[-212.62394714 -166.64590454]
[-201.17297363 -156.95698547]
[-189.72200012 -147.26806641]
[-178.27102661 -137.57914734]
[-166.82005310 -127.89022827]
[-159.65454102 -125.96263885]
[-155.24914551 -117.91491699]
[-143.97915649 -108.01605225]
[-129.31071472 -105.43029022]
[-124.04824829 -90.50994110]
[-112.77826691 -80.61106873]
[-101.50828552 -70.71220398]
[-90.23831177 -60.81333542]
[-78.96833038 -50.91446686]
[-67.69835663 -41.01559830]
[-60.56968307 -38.95592880]
[-56.31375504 -30.82817459]
[-45.22861862 -20.72274017]
[-34.14348602 -10.61730576]
[-29.37925720 -9.94383144]
[-24.99960327 -6.24515963]
[-22.84427261 0.07222594]
[-12.14011955 10.58037186]
[-1.43596745 21.08851624]
[9.36482143 31.49730873]
[20.26132584 41.80585861]
[31.15782928 52.11441040]
[45.74022675 49.20036697]
[59.40397263 55.50640488]
[66.82120514 68.80445099]
[64.96443939 84.09688568]
[75.86094666 94.40543365]
[80.47424316 85.76147461]
[87.92283630 79.77916718]
[96.88793945 77.27213287]
[105.87442017 78.45970917]
[113.45967865 82.96081543]
[118.51882935 89.88540649]
[120.39054108 98.00393677]
[134.81793213 102.10888672]
[149.24531555 106.21382904]
[163.67269897 110.31877136]
[174.72462463 99.74512482]
[189.48773193 96.14683533]
[203.97346497 100.39297485]
[214.31968689 111.24709320]
[217.82022095 125.72507477]
[232.24760437 129.83001709]
[246.67498779 133.93496704]
[261.24420166 137.50398254]
[275.93536377 140.53222656]
[290.62649536 143.56045532]
[305.31765747 146.58869934]
[320.00878906 149.61692810]
[334.69992065 152.64517212]
[351.43359375 149.92097473]
[358.68365479 165.24652100]
[345.96405029 176.45579529]
[331.67169189 167.33631897]
[316.98056030 164.30807495]
[302.28939819 161.27984619]
[287.59826660 158.25160217]
[272.90710449 155.22337341]
[258.21597290 152.19512939]
[255.78240967 153.66023254]
[252.61079407 154.23016357]
[249.04635620 153.61468506]
[245.53434753 151.65646362]
[242.57003784 148.36235046]
[228.14265442 144.25740051]
[213.71527100 140.15245056]
[203.11738586 150.61907959]
[188.60690308 154.40086365]
[174.05557251 150.38525391]
[163.39799500 139.55415344]
[159.56774902 124.74615479]
[145.14036560 120.64121246]
[130.71298218 116.53627014]
[116.28559875 112.43132019]
[103.54962158 122.35337067]
[85.93005371 120.39681244]
[84.82226562 135.35585022]
[83.71447754 150.31488037]
[95.38909149 160.36523438]
[98.86653137 175.18957520]
[93.01725006 189.05499268]
[80.27754974 196.72558594]
[79.16976166 211.68463135]
[78.06197357 226.64366150]
[76.95418549 241.60270691]
[75.84639740 256.56173706]
[74.73860931 271.52078247]
[86.06810760 282.29928589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[15 159]
[16 158]
[17 157]
[18 108]
[19 107]
[23 103]
[24 102]
[25 101]
[27 100]
[28 99]
[29 98]
[30 95]
[31 94]
[32 93]
[33 91]
[34 90]
[35 89]
[36 88]
[37 87]
[38 86]
[40 84]
[41 83]
[42 81]
[43 80]
[44 79]
[45 78]
[46 77]
[48 74]
[49 73]
[50 72]
[51 71]
[52 70]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[115 155]
[116 154]
[117 153]
[118 152]
[123 147]
[124 146]
[125 145]
[126 140]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
