%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CHADL)
} def

/sequence { (\
AGCCUGUCCCUGCGCUGCGCCUCCAGGCUGGACCAGCAGUUCCAGGCGGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.005684168 ubox
1 29 0.003478547 ubox
2 13 0.005089087 ubox
2 15 0.006018005 ubox
2 28 0.004082126 ubox
2 47 0.197860745 ubox
2 50 0.662922925 ubox
3 12 0.005092300 ubox
3 14 0.005992956 ubox
3 27 0.004311567 ubox
3 46 0.198073771 ubox
3 49 0.664604998 ubox
4 26 0.004317889 ubox
4 45 0.198038654 ubox
4 48 0.659204418 ubox
4 49 0.167074908 ubox
5 25 0.004316354 ubox
5 44 0.197827323 ubox
5 48 0.183583127 ubox
6 13 0.005317735 ubox
6 24 0.004301028 ubox
6 33 0.005994175 ubox
6 43 0.197015651 ubox
6 47 0.460924843 ubox
6 50 0.684064082 ubox
7 12 0.005147917 ubox
7 32 0.007605967 ubox
7 46 0.171985087 ubox
7 49 0.690551445 ubox
8 31 0.007584995 ubox
8 45 0.104413457 ubox
8 46 0.211060823 ubox
8 48 0.696440393 ubox
8 49 0.010178321 ubox
9 27 0.003593778 ubox
9 30 0.007528569 ubox
9 45 0.153574272 ubox
9 46 0.939994355 ubox
9 48 0.007636961 ubox
10 26 0.004030722 ubox
10 36 0.007966730 ubox
10 39 0.176937570 ubox
10 45 0.962111400 ubox
10 46 0.005047303 ubox
10 49 0.005234349 ubox
11 25 0.004034935 ubox
11 35 0.008003479 ubox
11 38 0.176711772 ubox
11 44 0.976586181 ubox
11 45 0.003867159 ubox
11 48 0.005302411 ubox
12 18 0.003351498 ubox
12 20 0.004407144 ubox
12 24 0.003860983 ubox
12 28 0.007833658 ubox
12 34 0.008004124 ubox
12 37 0.172167086 ubox
12 40 0.054052621 ubox
12 43 0.977004478 ubox
12 47 0.005672252 ubox
13 17 0.003331530 ubox
13 19 0.004462833 ubox
13 27 0.007834533 ubox
13 36 0.170731457 ubox
13 39 0.054635707 ubox
13 46 0.005671536 ubox
14 18 0.004594237 ubox
14 20 0.009224553 ubox
14 28 0.004898729 ubox
14 37 0.073402972 ubox
14 40 0.979237425 ubox
14 50 0.004991703 ubox
15 19 0.009175690 ubox
15 26 0.008274157 ubox
15 27 0.004520624 ubox
15 31 0.049577510 ubox
15 36 0.076531262 ubox
15 39 0.982118776 ubox
15 49 0.005022245 ubox
16 25 0.008517970 ubox
16 26 0.004046187 ubox
16 30 0.050146691 ubox
16 35 0.086394797 ubox
16 38 0.981927888 ubox
16 48 0.004037929 ubox
17 24 0.008531157 ubox
17 28 0.016145423 ubox
17 29 0.046407672 ubox
17 34 0.087778929 ubox
17 37 0.982151002 ubox
17 47 0.003740564 ubox
18 27 0.016178354 ubox
18 30 0.129034730 ubox
18 36 0.981906824 ubox
18 46 0.003709297 ubox
18 48 0.007829475 ubox
19 28 0.183871799 ubox
19 29 0.027467392 ubox
19 37 0.004773284 ubox
19 47 0.008459698 ubox
19 50 0.003294842 ubox
20 27 0.185984056 ubox
20 31 0.091364813 ubox
20 36 0.005265686 ubox
20 46 0.008474624 ubox
20 49 0.003320392 ubox
21 26 0.185378701 ubox
21 27 0.004807760 ubox
21 30 0.091462419 ubox
21 31 0.005324638 ubox
21 45 0.008487387 ubox
21 48 0.003319508 ubox
22 26 0.004517681 ubox
22 30 0.004781511 ubox
22 31 0.007822095 ubox
22 32 0.959287918 ubox
22 44 0.008185654 ubox
23 30 0.008585179 ubox
23 31 0.977800851 ubox
23 46 0.003306394 ubox
24 30 0.977646920 ubox
24 45 0.003299159 ubox
25 29 0.792318970 ubox
26 34 0.003557074 ubox
26 41 0.007244908 ubox
27 33 0.003582943 ubox
27 37 0.003396734 ubox
27 40 0.008744168 ubox
28 36 0.003480312 ubox
28 39 0.009592696 ubox
29 35 0.018432774 ubox
29 38 0.009613223 ubox
29 44 0.004557730 ubox
30 34 0.019547646 ubox
30 37 0.009615864 ubox
30 43 0.005230945 ubox
31 42 0.005233771 ubox
32 41 0.004790031 ubox
33 39 0.003723284 ubox
6 50 0.9500000 lbox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
9 46 0.9500000 lbox
10 45 0.9500000 lbox
11 44 0.9500000 lbox
12 43 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 36 0.9500000 lbox
22 32 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
showpage
end
%%EOF
