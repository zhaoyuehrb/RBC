%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NICN1)
} def

/sequence { (\
CUUGAGGCUCGGCUGAGGAUGCCGGGAAGGGCUGGUGGUCGGGGGCCUAGAGCGGCGGUUGCACUUAGUUGCGGCUGCUGUCACC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.008447714 ubox
1 18 0.005230216 ubox
1 29 0.009426874 ubox
1 30 0.005711529 ubox
1 31 0.009277245 ubox
1 50 0.222626107 ubox
1 52 0.495289022 ubox
2 6 0.007940794 ubox
2 17 0.005256002 ubox
2 28 0.009687896 ubox
2 29 0.005617869 ubox
2 30 0.009521751 ubox
2 49 0.211220754 ubox
2 50 0.143483047 ubox
2 51 0.614723042 ubox
2 52 0.021043298 ubox
3 16 0.005217341 ubox
3 27 0.009558179 ubox
3 28 0.004059704 ubox
3 29 0.009547078 ubox
3 49 0.171029651 ubox
3 50 0.569434156 ubox
3 51 0.062401812 ubox
3 83 0.071684329 ubox
4 10 0.011544676 ubox
4 48 0.110022984 ubox
4 82 0.080671170 ubox
5 9 0.010056873 ubox
5 14 0.005217726 ubox
5 48 0.919936874 ubox
5 81 0.046001109 ubox
6 13 0.005195695 ubox
6 32 0.003180410 ubox
6 33 0.004325476 ubox
6 47 0.981031431 ubox
6 48 0.005512548 ubox
6 82 0.011551725 ubox
6 85 0.033610483 ubox
7 32 0.004643232 ubox
7 46 0.981082192 ubox
7 47 0.005027199 ubox
7 53 0.142395713 ubox
7 81 0.004704786 ubox
7 84 0.033650994 ubox
8 25 0.003222895 ubox
8 26 0.075160678 ubox
8 31 0.004563228 ubox
8 43 0.112372419 ubox
8 44 0.061746552 ubox
8 45 0.972810021 ubox
8 50 0.078552240 ubox
8 52 0.146726465 ubox
8 80 0.003517984 ubox
9 25 0.075814721 ubox
9 30 0.004198778 ubox
9 42 0.239689162 ubox
9 43 0.071286286 ubox
9 44 0.928934000 ubox
9 45 0.012620985 ubox
9 49 0.077872981 ubox
9 51 0.147366721 ubox
10 24 0.077408142 ubox
10 41 0.440326653 ubox
10 42 0.062408818 ubox
10 43 0.839583068 ubox
10 44 0.112503883 ubox
10 50 0.146397355 ubox
11 23 0.079887477 ubox
11 40 0.511361995 ubox
11 47 0.174913255 ubox
11 48 0.005036239 ubox
12 22 0.079898621 ubox
12 39 0.515096278 ubox
12 46 0.175658999 ubox
12 47 0.004043285 ubox
13 21 0.079881383 ubox
13 38 0.515476841 ubox
13 42 0.814037153 ubox
13 43 0.019870879 ubox
13 44 0.008579068 ubox
13 45 0.175627281 ubox
14 37 0.505491027 ubox
14 41 0.822299694 ubox
14 42 0.021602809 ubox
14 43 0.010207281 ubox
14 44 0.174366759 ubox
15 20 0.003692447 ubox
15 33 0.003879219 ubox
15 36 0.323437358 ubox
15 40 0.824760765 ubox
16 33 0.010651675 ubox
16 39 0.812524208 ubox
17 32 0.005862420 ubox
17 33 0.036754673 ubox
17 40 0.096393252 ubox
18 32 0.025350185 ubox
18 39 0.091683185 ubox
18 40 0.186926621 ubox
19 36 0.078528207 ubox
19 39 0.186057522 ubox
20 34 0.048378541 ubox
20 35 0.072039738 ubox
20 37 0.502066366 ubox
20 38 0.142092105 ubox
21 32 0.418172733 ubox
21 33 0.006721454 ubox
21 36 0.889055140 ubox
22 30 0.039542926 ubox
22 31 0.418521658 ubox
22 35 0.903744127 ubox
23 29 0.041927729 ubox
23 30 0.418208936 ubox
23 34 0.903764572 ubox
24 33 0.902893031 ubox
25 32 0.902639431 ubox
25 33 0.015859691 ubox
26 32 0.022445479 ubox
28 48 0.029530925 ubox
29 47 0.030471558 ubox
29 48 0.062340328 ubox
29 85 0.004064489 ubox
30 40 0.022697999 ubox
30 46 0.030325503 ubox
30 47 0.065034763 ubox
30 84 0.004085061 ubox
31 39 0.022817309 ubox
31 46 0.065117365 ubox
31 53 0.014111624 ubox
32 38 0.022848681 ubox
32 42 0.013311546 ubox
32 43 0.004258788 ubox
32 44 0.029333689 ubox
32 45 0.065011403 ubox
32 50 0.009938966 ubox
32 52 0.014624419 ubox
33 37 0.020589726 ubox
33 41 0.015208227 ubox
33 42 0.005301598 ubox
33 43 0.028793384 ubox
33 44 0.063956246 ubox
33 49 0.009891791 ubox
33 51 0.014610025 ubox
34 40 0.020000978 ubox
34 47 0.008506003 ubox
34 48 0.007006633 ubox
34 85 0.012044116 ubox
35 39 0.013004367 ubox
35 46 0.008567490 ubox
35 47 0.003641997 ubox
35 84 0.012183171 ubox
36 45 0.008605729 ubox
36 83 0.012100912 ubox
37 47 0.019771827 ubox
37 82 0.011297327 ubox
38 46 0.020277390 ubox
38 81 0.009978543 ubox
39 45 0.020245907 ubox
40 44 0.019541809 ubox
40 80 0.010197695 ubox
41 79 0.010196877 ubox
42 78 0.010203610 ubox
44 76 0.010162514 ubox
45 75 0.010193895 ubox
45 84 0.003169670 ubox
46 74 0.010192522 ubox
47 73 0.010183544 ubox
50 82 0.450579663 ubox
51 79 0.015675784 ubox
51 81 0.384659709 ubox
52 72 0.010011256 ubox
52 78 0.016396352 ubox
52 81 0.738392897 ubox
53 71 0.010016428 ubox
53 77 0.016415008 ubox
53 80 0.983581132 ubox
54 70 0.009983151 ubox
54 76 0.016391834 ubox
54 79 0.997635071 ubox
54 82 0.006998713 ubox
55 69 0.010005611 ubox
55 75 0.016400202 ubox
55 78 0.999786384 ubox
55 81 0.004197739 ubox
56 68 0.009996267 ubox
56 74 0.016390181 ubox
56 77 0.999773030 ubox
56 80 0.004122575 ubox
57 65 0.005500169 ubox
57 76 0.999046557 ubox
57 79 0.003606600 ubox
58 64 0.005954231 ubox
58 72 0.016099956 ubox
58 75 0.999793061 ubox
58 78 0.003432297 ubox
59 63 0.005368949 ubox
59 71 0.015962475 ubox
59 74 0.999227643 ubox
59 77 0.003292073 ubox
60 73 0.996526497 ubox
61 69 0.015814017 ubox
61 72 0.999779796 ubox
62 68 0.016029898 ubox
62 71 0.999758244 ubox
63 69 0.202477846 ubox
63 70 0.886094399 ubox
64 68 0.284193740 ubox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
7 46 0.9500000 lbox
8 45 0.9500000 lbox
9 44 0.9500000 lbox
10 43 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
21 36 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
52 81 0.9500000 lbox
53 80 0.9500000 lbox
54 79 0.9500000 lbox
55 78 0.9500000 lbox
56 77 0.9500000 lbox
57 76 0.9500000 lbox
58 75 0.9500000 lbox
59 74 0.9500000 lbox
60 73 0.9500000 lbox
61 72 0.9500000 lbox
62 71 0.9500000 lbox
63 70 0.9500000 lbox
showpage
end
%%EOF
