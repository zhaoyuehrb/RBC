%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:37 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GCM2)
} def

/sequence { (\
CACCUGGCGCACCUGUCCUUUUUUCUUCUAUUUUUCAGAACCCUGGGCGGAAAGCGCGAGCGAGUUGGGCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.235107945 ubox
2 65 0.256149404 ubox
2 66 0.185169328 ubox
3 64 0.303806646 ubox
3 68 0.095698804 ubox
3 69 0.094969958 ubox
4 60 0.870943305 ubox
4 64 0.043141917 ubox
4 67 0.087677538 ubox
4 68 0.092292210 ubox
4 72 0.027799385 ubox
5 11 0.005535265 ubox
5 58 0.024845819 ubox
5 59 0.945477400 ubox
5 62 0.028318888 ubox
5 63 0.037007347 ubox
5 67 0.078817812 ubox
5 71 0.027558538 ubox
6 10 0.006147469 ubox
6 13 0.014263674 ubox
6 57 0.022532255 ubox
6 61 0.035731891 ubox
6 66 0.069762636 ubox
6 70 0.022689855 ubox
7 12 0.014712546 ubox
7 55 0.009719586 ubox
7 57 0.995583617 ubox
7 61 0.029222006 ubox
7 65 0.038844674 ubox
7 70 0.021027959 ubox
8 54 0.009740635 ubox
8 56 0.996066254 ubox
8 58 0.010147076 ubox
8 60 0.026746863 ubox
8 62 0.007637402 ubox
8 64 0.038147809 ubox
8 69 0.023507514 ubox
9 55 0.996343604 ubox
9 57 0.017955688 ubox
9 61 0.009786197 ubox
10 54 0.994803517 ubox
10 56 0.017981556 ubox
10 60 0.009788650 ubox
10 67 0.023420862 ubox
11 65 0.008516094 ubox
11 66 0.019643514 ubox
12 50 0.330531943 ubox
12 64 0.011975513 ubox
13 49 0.325996592 ubox
13 50 0.936402982 ubox
13 60 0.004018835 ubox
13 64 0.006207581 ubox
13 72 0.060266609 ubox
14 49 0.941493747 ubox
14 58 0.008411768 ubox
14 59 0.003560328 ubox
14 62 0.003459154 ubox
14 63 0.005631587 ubox
14 71 0.062955841 ubox
15 48 0.997591217 ubox
15 57 0.009537252 ubox
15 61 0.004809746 ubox
15 70 0.063415333 ubox
16 47 0.994466162 ubox
16 51 0.006860092 ubox
16 56 0.009428837 ubox
16 60 0.004027263 ubox
16 63 0.003617130 ubox
16 69 0.063208089 ubox
17 46 0.994727061 ubox
17 47 0.077933189 ubox
17 50 0.006946501 ubox
17 58 0.003228228 ubox
17 62 0.003781788 ubox
17 68 0.063225285 ubox
17 69 0.004894874 ubox
18 45 0.994015399 ubox
18 46 0.078386162 ubox
18 49 0.006936689 ubox
18 54 0.009333256 ubox
18 60 0.004518024 ubox
18 67 0.063166403 ubox
18 68 0.004925975 ubox
19 39 0.007355219 ubox
19 40 0.021959320 ubox
19 45 0.077552345 ubox
19 47 0.003555777 ubox
19 53 0.009294674 ubox
19 59 0.004529574 ubox
19 64 0.007739172 ubox
19 67 0.004785351 ubox
20 38 0.007307814 ubox
20 39 0.022118761 ubox
20 40 0.017474049 ubox
20 45 0.005483221 ubox
20 46 0.003696730 ubox
20 47 0.004565157 ubox
20 52 0.009091710 ubox
20 58 0.004302490 ubox
20 63 0.009771135 ubox
20 64 0.009072122 ubox
21 37 0.006394896 ubox
21 38 0.021826179 ubox
21 39 0.021077661 ubox
21 40 0.049130910 ubox
21 45 0.005072624 ubox
21 46 0.004537139 ubox
21 51 0.008890990 ubox
21 53 0.003421941 ubox
21 54 0.003678488 ubox
21 62 0.009716938 ubox
21 63 0.009274588 ubox
21 64 0.042243477 ubox
22 37 0.018612526 ubox
22 38 0.021038409 ubox
22 39 0.050952960 ubox
22 40 0.058617436 ubox
22 45 0.004739596 ubox
22 50 0.008744289 ubox
22 52 0.003735134 ubox
22 53 0.005435350 ubox
22 62 0.008968129 ubox
22 63 0.044897272 ubox
22 64 0.012890479 ubox
23 37 0.018024095 ubox
23 38 0.050330636 ubox
23 39 0.052634489 ubox
23 40 0.862031403 ubox
23 49 0.007987468 ubox
23 51 0.003940986 ubox
23 52 0.005851098 ubox
23 60 0.012034875 ubox
23 62 0.044122345 ubox
23 63 0.014740703 ubox
23 64 0.033939948 ubox
24 37 0.043898572 ubox
24 38 0.040687181 ubox
24 39 0.931299655 ubox
24 50 0.004029220 ubox
24 51 0.006060570 ubox
24 59 0.013693198 ubox
24 62 0.014573429 ubox
24 63 0.035536994 ubox
25 38 0.934863643 ubox
25 47 0.006177231 ubox
25 49 0.004163940 ubox
25 50 0.006101437 ubox
25 58 0.013758592 ubox
25 60 0.034703619 ubox
25 62 0.035658951 ubox
25 64 0.005122482 ubox
26 37 0.889004253 ubox
26 38 0.010799298 ubox
26 39 0.013194901 ubox
26 40 0.273266303 ubox
26 46 0.005392436 ubox
26 47 0.003409934 ubox
26 49 0.005937537 ubox
26 52 0.004939870 ubox
26 59 0.033291966 ubox
26 60 0.046543444 ubox
26 63 0.005009474 ubox
27 37 0.045476094 ubox
27 38 0.009540486 ubox
27 39 0.296504882 ubox
27 46 0.003427410 ubox
27 47 0.004806411 ubox
27 51 0.005543443 ubox
27 58 0.029995580 ubox
27 59 0.048352883 ubox
27 62 0.004693789 ubox
28 38 0.298138040 ubox
28 45 0.003542880 ubox
28 46 0.005335515 ubox
28 47 0.004961185 ubox
28 50 0.005655415 ubox
28 54 0.006018479 ubox
28 58 0.049209976 ubox
28 60 0.006591681 ubox
29 37 0.290766270 ubox
29 45 0.005125491 ubox
29 46 0.004252900 ubox
29 49 0.005432320 ubox
29 53 0.005930599 ubox
29 59 0.006409875 ubox
30 44 0.004931292 ubox
31 39 0.004854712 ubox
31 40 0.008171773 ubox
31 51 0.004996560 ubox
31 52 0.003835595 ubox
31 53 0.007468945 ubox
31 54 0.004615700 ubox
32 37 0.007521261 ubox
32 38 0.005114834 ubox
32 39 0.008828972 ubox
32 40 0.005529572 ubox
32 50 0.005007708 ubox
32 51 0.004091570 ubox
32 52 0.007574805 ubox
32 53 0.005182447 ubox
32 54 0.004017823 ubox
33 37 0.005843425 ubox
33 38 0.008258895 ubox
33 39 0.005951712 ubox
33 49 0.004538801 ubox
33 50 0.004027938 ubox
33 51 0.007554728 ubox
33 52 0.005261463 ubox
33 53 0.004477597 ubox
34 38 0.005428464 ubox
34 47 0.009941373 ubox
34 50 0.006888038 ubox
34 51 0.005071038 ubox
34 52 0.004533911 ubox
35 46 0.053021264 ubox
35 49 0.003766500 ubox
35 50 0.004658986 ubox
35 51 0.004505911 ubox
36 45 0.064754069 ubox
36 49 0.003932401 ubox
36 50 0.004456880 ubox
37 44 0.067779943 ubox
38 43 0.067562045 ubox
41 47 0.004496930 ubox
42 46 0.004504859 ubox
44 58 0.003977004 ubox
45 57 0.006382809 ubox
47 55 0.011508206 ubox
47 57 0.060917476 ubox
48 54 0.011521178 ubox
48 56 0.061023612 ubox
49 55 0.060908998 ubox
53 66 0.004146410 ubox
54 61 0.041679619 ubox
54 65 0.005506101 ubox
54 70 0.027593660 ubox
55 60 0.041716187 ubox
55 62 0.006877308 ubox
55 64 0.005603786 ubox
55 69 0.027631411 ubox
56 61 0.007051299 ubox
56 65 0.005001787 ubox
56 70 0.003779631 ubox
57 64 0.005567123 ubox
57 67 0.027857763 ubox
57 69 0.003800254 ubox
58 66 0.031677513 ubox
59 65 0.031768738 ubox
59 66 0.008144896 ubox
60 65 0.006707009 ubox
60 70 0.436869542 ubox
61 67 0.104080910 ubox
61 69 0.449033533 ubox
62 66 0.064967118 ubox
64 70 0.180575777 ubox
65 69 0.169078251 ubox
65 72 0.016505021 ubox
66 71 0.021641916 ubox
4 60 0.9500000 lbox
5 59 0.9500000 lbox
7 57 0.9500000 lbox
8 56 0.9500000 lbox
9 55 0.9500000 lbox
10 54 0.9500000 lbox
13 50 0.9500000 lbox
14 49 0.9500000 lbox
15 48 0.9500000 lbox
16 47 0.9500000 lbox
17 46 0.9500000 lbox
18 45 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
showpage
end
%%EOF
