%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAAACUGCCGGAAACAGAAUAAUGGCGUCUCGUAGCCCCAGGCGACAGCGUGGAGGGGCGGGUCUGUCGAUUGGAUGAACGCAGCUGAGAUUACUCCCAGCCACUAAGGACGAAGAGGUGGGGCGGUGGCGUCCCACGCCUCGUGCGACAGUGGGCGGGGCUUUGUUGCCUGAGUAACCGUAUGAUGGUGGUGGUGGUGGUGUCUUCCUGUCUCAACGAUACCUAUUUUCUAGUGCUGAGAUCCUGAGACA\
) } def
/len { sequence length } bind def

/coor [
[-214.10719299 847.02349854]
[-205.14392090 859.05096436]
[-203.31352234 873.93884277]
[-209.09646606 887.77929688]
[-220.97477722 896.93927002]
[-235.83053589 899.01446533]
[-249.76426697 893.46008301]
[-259.11853027 881.73413086]
[-261.43783569 866.91394043]
[-268.06521606 880.37048340]
[-274.69262695 893.82696533]
[-281.32003784 907.28350830]
[-271.86892700 919.26843262]
[-268.56222534 934.16906738]
[-272.05648804 949.02679443]
[-281.65792847 960.89166260]
[-295.46017456 967.40789795]
[-310.72274780 967.28161621]
[-324.41531372 960.53796387]
[-333.81915283 948.51593018]
[-337.06713867 933.60235596]
[-333.51440430 918.75848389]
[-323.86630249 906.93151855]
[-310.03851318 900.46972656]
[-294.77651978 900.65606689]
[-288.14913940 887.19958496]
[-281.52172852 873.74304199]
[-274.89434814 860.28656006]
[-269.11126709 846.44616699]
[-264.19461060 832.27484131]
[-259.27798462 818.10351562]
[-254.36134338 803.93218994]
[-249.44468689 789.76086426]
[-244.52804565 775.58953857]
[-249.89653015 770.35223389]
[-260.63351440 759.87762451]
[-266.00198364 754.64031982]
[-280.04739380 759.90600586]
[-294.09277344 765.17163086]
[-308.13815308 770.43731689]
[-322.18353271 775.70294189]
[-329.14321899 791.76666260]
[-345.25482178 797.69696045]
[-360.36090088 790.27661133]
[-374.34008789 795.71557617]
[-388.31927490 801.15454102]
[-398.15405273 814.27740479]
[-414.40167236 812.05322266]
[-420.34796143 796.77014160]
[-409.87591553 784.14996338]
[-393.75823975 787.17535400]
[-379.77905273 781.73638916]
[-365.79986572 776.29742432]
[-362.32165527 763.90710449]
[-352.19635010 755.65252686]
[-338.97149658 754.71441650]
[-327.44918823 761.65759277]
[-313.40380859 756.39190674]
[-299.35842896 751.12622070]
[-285.31304932 745.86059570]
[-271.26766968 740.59490967]
[-259.15423584 731.74816895]
[-249.86419678 719.97125244]
[-240.57414246 708.19439697]
[-231.28410339 696.41754150]
[-221.99404907 684.64062500]
[-212.70399475 672.86376953]
[-218.34585571 659.07843018]
[-216.31655884 644.22119141]
[-207.06190491 632.29565430]
[-192.98823547 626.56604004]
[-177.83743286 628.66387939]
[-168.54737854 616.88696289]
[-159.25733948 605.11010742]
[-149.96728516 593.33319092]
[-140.67723083 581.55633545]
[-131.38717651 569.77941895]
[-123.07292175 557.29455566]
[-115.78815460 544.18225098]
[-108.50339508 531.06994629]
[-111.52421570 519.37451172]
[-105.58533478 508.39846802]
[-93.38430786 504.27133179]
[-85.93792725 491.25012207]
[-78.49154663 478.22894287]
[-71.04516602 465.20773315]
[-76.15010834 449.17044067]
[-67.90245056 434.11294556]
[-50.98619843 429.60522461]
[-43.70143509 416.49295044]
[-44.28400803 401.60974121]
[-30.81836128 393.30389404]
[-23.53359985 380.19158936]
[-16.24883842 367.07931519]
[-8.96407700 353.96701050]
[-1.67931521 340.85470581]
[5.60544634 327.74243164]
[5.02287197 312.85922241]
[18.48851967 304.55337524]
[25.77328110 291.44110107]
[33.05804443 278.32879639]
[33.55778503 270.97583008]
[40.51485825 265.10018921]
[47.96123505 252.07899475]
[55.40761566 239.05780029]
[62.85399628 226.03660583]
[70.30037689 213.01541138]
[77.74674988 199.99421692]
[70.53190613 185.23493958]
[73.57636261 168.92187500]
[85.87319183 157.53228760]
[102.70216370 155.70867920]
[109.98692322 142.59637451]
[117.27168274 129.48408508]
[101.76775360 134.30538940]
[85.70096588 131.43165588]
[72.69393921 121.43089294]
[65.71617126 106.48695374]
[66.40625000 89.92308807]
[74.68782806 75.46297455]
[75.61487579 60.49164581]
[76.54191589 45.52032089]
[77.46896362 30.54899406]
[78.39601135 15.57766819]
[79.32305145 0.60634303]
[80.25009918 -14.36498260]
[81.17713928 -29.33630753]
[73.39053345 -43.76893616]
[82.22541046 -57.58475876]
[98.59320831 -56.57124329]
[105.65614319 -41.77100754]
[96.14846802 -28.40926361]
[95.22142029 -13.43793774]
[94.29438019 1.53338754]
[93.36733246 16.50471306]
[92.44029236 31.47603798]
[91.51324463 46.44736481]
[90.58619690 61.41868973]
[89.65915680 76.39001465]
[103.83049011 81.30665588]
[112.37493134 68.97813416]
[120.91938019 56.64961624]
[129.46382141 44.32109451]
[138.00827026 31.99257278]
[146.55271912 19.66405106]
[155.09716797 7.33552933]
[156.59884644 -8.41424847]
[170.20797729 -14.46741486]
[178.75242615 -26.79593658]
[179.56312561 -43.17503357]
[194.27474976 -50.42074203]
[207.75323486 -41.07929993]
[206.13307190 -24.76038170]
[191.08094788 -18.25149155]
[182.53649902 -5.92296934]
[181.64596558 8.94499016]
[167.42568970 15.87997532]
[158.88124084 28.20849609]
[150.33679199 40.53701782]
[141.79234314 52.86553955]
[133.24789429 65.19406128]
[124.70345306 77.52258301]
[116.15901184 89.85110474]
[120.94825745 95.62284851]
[135.73446655 93.09934235]
[130.52676392 107.16634369]
[135.31600952 112.93809509]
[149.00912476 106.81445312]
[162.70222473 100.69081879]
[176.39532471 94.56717682]
[190.08842468 88.44353485]
[199.26220703 74.85037994]
[215.59992981 76.26828766]
[222.29476929 91.23863220]
[212.45962524 104.36121368]
[196.21206665 102.13663483]
[182.51896667 108.26027679]
[168.82585144 114.38391876]
[155.13275146 120.50755310]
[141.43965149 126.63119507]
[130.38397217 136.76884460]
[123.09921265 149.88114929]
[115.81445312 162.99343872]
[122.53627777 175.00918579]
[122.45101166 188.66889954]
[115.68764496 200.41233826]
[104.10181427 207.23146057]
[90.76794434 207.44059753]
[83.32156372 220.46179199]
[75.87518311 233.48298645]
[68.42881012 246.50418091]
[60.98242950 259.52536011]
[53.53604889 272.54656982]
[46.17033768 285.61355591]
[38.88557434 298.72586060]
[31.60081482 311.83813477]
[31.66233253 327.65924072]
[18.71774101 335.02719116]
[11.43297863 348.13946533]
[4.14821720 361.25177002]
[-3.13654470 374.36407471]
[-10.42130661 387.47634888]
[-17.70606804 400.58865356]
[-17.64454842 416.40972900]
[-30.58914185 423.77770996]
[-37.87390137 436.88998413]
[-32.71097565 449.31234741]
[-35.59444809 462.25308228]
[-45.25555038 471.04641724]
[-58.02397919 472.65411377]
[-65.47035980 485.67532349]
[-72.91674042 498.69650269]
[-80.36311340 511.71771240]
[-79.87135315 530.13800049]
[-95.39109802 538.35467529]
[-102.67586517 551.46697998]
[-109.96062469 564.57928467]
[-97.05690002 556.93115234]
[-82.16598511 555.12542725]
[-67.80825806 559.46771240]
[-56.41384125 569.22308350]
[-49.91131210 582.74041748]
[-49.40126419 597.73175049]
[-54.97002411 611.65972900]
[-65.67504120 622.16699219]
[-79.70443726 627.47509766]
[-94.68364716 626.68560791]
[-108.07735443 619.93225098]
[-117.61859894 608.35791016]
[-121.69245911 593.92169189]
[-119.61029816 579.06951904]
[-128.90034485 590.84637451]
[-138.19039917 602.62322998]
[-147.48045349 614.40014648]
[-156.77050781 626.17700195]
[-166.06054688 637.95391846]
[-160.49266052 652.19982910]
[-162.78781128 667.22076416]
[-172.23063660 678.99780273]
[-186.20701599 684.43078613]
[-200.92710876 682.15380859]
[-210.21716309 693.93066406]
[-219.50721741 705.70758057]
[-228.79727173 717.48443604]
[-238.08731079 729.26135254]
[-247.37736511 741.03820801]
[-230.35671997 780.50616455]
[-235.27336121 794.67749023]
[-240.19000244 808.84881592]
[-245.10664368 823.02014160]
[-250.02330017 837.19146729]
[-254.93994141 851.36285400]
[-242.76660156 842.59869385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 28]
[10 27]
[11 26]
[12 25]
[29 252]
[30 251]
[31 250]
[32 249]
[33 248]
[34 247]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[44 53]
[45 52]
[46 51]
[62 246]
[63 245]
[64 244]
[65 243]
[66 242]
[67 241]
[72 236]
[73 235]
[74 234]
[75 233]
[76 232]
[77 231]
[78 217]
[79 216]
[80 215]
[83 213]
[84 212]
[85 211]
[86 210]
[89 206]
[90 205]
[92 203]
[93 202]
[94 201]
[95 200]
[96 199]
[97 198]
[99 196]
[100 195]
[101 194]
[103 193]
[104 192]
[105 191]
[106 190]
[107 189]
[108 188]
[112 183]
[113 182]
[114 181]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[140 163]
[141 162]
[142 161]
[143 160]
[144 159]
[145 158]
[146 157]
[148 155]
[149 154]
[167 180]
[168 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
